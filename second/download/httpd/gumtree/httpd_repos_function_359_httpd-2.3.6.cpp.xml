<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_359_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_method_proppatch<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">request_rec<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">r<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_error<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">err<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">dav_resource<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">resource<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">result<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_xml_doc<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">doc<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_xml_elem<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">child<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">dav_propdb<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">propdb<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">failure<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">dav_response<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">resp<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><block pos:line="10" pos:column="25">{ <expr><literal type="number" pos:line="10" pos:column="27">0<pos:position pos:line="10" pos:column="28"/></literal></expr> }<pos:position pos:line="10" pos:column="30"/></block></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_text<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">propstat_text<pos:position pos:line="11" pos:column="28"/></name></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_array_header_t<pos:position pos:line="12" pos:column="23"/></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type><name pos:line="12" pos:column="25">ctx_list<pos:position pos:line="12" pos:column="33"/></name></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">dav_prop_ctx<pos:position pos:line="13" pos:column="17"/></name> <modifier pos:line="13" pos:column="18">*<pos:position pos:line="13" pos:column="19"/></modifier></type><name pos:line="13" pos:column="19">ctx<pos:position pos:line="13" pos:column="22"/></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">dav_auto_version_info<pos:position pos:line="14" pos:column="26"/></name></type> <name pos:line="14" pos:column="27">av_info<pos:position pos:line="14" pos:column="34"/></name></decl>;<pos:position pos:line="14" pos:column="35"/></decl_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* Ask repository module to resolve the resource */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">err<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <call><name pos:line="17" pos:column="11">dav_get_resource<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">r<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="31">0<pos:position pos:line="17" pos:column="32"/></literal></expr></argument> <comment type="block" pos:line="17" pos:column="33">/* label_allowed */</comment>, <argument><expr><literal type="number" pos:line="17" pos:column="54">0<pos:position pos:line="17" pos:column="55"/></literal></expr></argument> <comment type="block" pos:line="17" pos:column="56">/* use_checked_in */</comment>,
                           <argument><expr><operator pos:line="18" pos:column="28">&amp;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="29">resource<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">err<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">!=<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">NULL<pos:position pos:line="19" pos:column="20"/></name></expr>)<pos:position pos:line="19" pos:column="21"/></condition><then pos:line="19" pos:column="21">
        <block type="pseudo"><return pos:line="20" pos:column="9">return <expr><call><name pos:line="20" pos:column="16">dav_handle_err<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">r<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">err<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="39">NULL<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></return></block></then></if>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><name><name pos:line="21" pos:column="10">resource<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">exists<pos:position pos:line="21" pos:column="26"/></name></name></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27"> <block pos:line="21" pos:column="28">{
        <comment type="block" pos:line="22" pos:column="9">/* Apache will supply a default error for this. */</comment>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">HTTP_NOT_FOUND<pos:position pos:line="23" pos:column="30"/></name></expr>;<pos:position pos:line="23" pos:column="31"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">(<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">result<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">ap_xml_parse_input<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><name pos:line="26" pos:column="38">r<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="41">&amp;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="42">doc<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call><operator pos:line="26" pos:column="46">)<pos:position pos:line="26" pos:column="47"/></operator> <operator pos:line="26" pos:column="48">!=<pos:position pos:line="26" pos:column="50"/></operator> <name pos:line="26" pos:column="51">OK<pos:position pos:line="26" pos:column="53"/></name></expr>)<pos:position pos:line="26" pos:column="54"/></condition><then pos:line="26" pos:column="54"> <block pos:line="26" pos:column="55">{
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">result<pos:position pos:line="27" pos:column="22"/></name></expr>;<pos:position pos:line="27" pos:column="23"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="29" pos:column="5">/* note: doc == NULL if no request body */</comment>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">doc<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">==<pos:position pos:line="31" pos:column="15"/></operator> <name pos:line="31" pos:column="16">NULL<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">||<pos:position pos:line="31" pos:column="23"/></operator> <operator pos:line="31" pos:column="24">!<pos:position pos:line="31" pos:column="25"/></operator><call><name pos:line="31" pos:column="25">dav_validate_root<pos:position pos:line="31" pos:column="42"/></name><argument_list pos:line="31" pos:column="42">(<argument><expr><name pos:line="31" pos:column="43">doc<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="48">"propertyupdate"<pos:position pos:line="31" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="66"/></condition><then pos:line="31" pos:column="66"> <block pos:line="31" pos:column="67">{
        <comment type="block" pos:line="32" pos:column="9">/* This supplies additional information for the default message. */</comment>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">ap_log_rerror<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">APLOG_MARK<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="35">APLOG_ERR<pos:position pos:line="33" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="46">0<pos:position pos:line="33" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="49">r<pos:position pos:line="33" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="34" pos:column="23">"The request body does not contain "<pos:position pos:line="34" pos:column="59"/></literal>
                      <literal type="string" pos:line="35" pos:column="23">"a \"propertyupdate\" element."<pos:position pos:line="35" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt>
        <return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="36" pos:column="32"/></name></expr>;<pos:position pos:line="36" pos:column="33"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="39" pos:column="5">/* Check If-Headers and existing locks */</comment>
    <comment type="block" pos:line="40" pos:column="5">/* Note: depth == 0. Implies no need for a multistatus response. */</comment>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">(<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">err<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">dav_validate_request<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><name pos:line="41" pos:column="37">r<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="40">resource<pos:position pos:line="41" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="50">0<pos:position pos:line="41" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="53">NULL<pos:position pos:line="41" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="59">NULL<pos:position pos:line="41" pos:column="63"/></name></expr></argument>,
                                    <argument><expr><name pos:line="42" pos:column="37">DAV_VALIDATE_RESOURCE<pos:position pos:line="42" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="60">NULL<pos:position pos:line="42" pos:column="64"/></name></expr></argument>)<pos:position pos:line="42" pos:column="65"/></argument_list></call><operator pos:line="42" pos:column="65">)<pos:position pos:line="42" pos:column="66"/></operator> <operator pos:line="42" pos:column="67">!=<pos:position pos:line="42" pos:column="69"/></operator> <name pos:line="42" pos:column="70">NULL<pos:position pos:line="42" pos:column="74"/></name></expr>)<pos:position pos:line="42" pos:column="75"/></condition><then pos:line="42" pos:column="75"> <block pos:line="42" pos:column="76">{
        <comment type="block" pos:line="43" pos:column="9">/* ### add a higher-level description? */</comment>
        <return pos:line="44" pos:column="9">return <expr><call><name pos:line="44" pos:column="16">dav_handle_err<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">r<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="34">err<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="39">NULL<pos:position pos:line="44" pos:column="43"/></name></expr></argument>)<pos:position pos:line="44" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="45"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="47" pos:column="5">/* make sure the resource can be modified (if versioning repository) */</comment>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><operator pos:line="48" pos:column="9">(<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">err<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <call><name pos:line="48" pos:column="16">dav_auto_checkout<pos:position pos:line="48" pos:column="33"/></name><argument_list pos:line="48" pos:column="33">(<argument><expr><name pos:line="48" pos:column="34">r<pos:position pos:line="48" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="37">resource<pos:position pos:line="48" pos:column="45"/></name></expr></argument>,
                                 <argument><expr><literal type="number" pos:line="49" pos:column="34">0<pos:position pos:line="49" pos:column="35"/></literal></expr></argument> <comment type="block" pos:line="49" pos:column="36">/* not parent_only */</comment>,
                                 <argument><expr><operator pos:line="50" pos:column="34">&amp;<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="35">av_info<pos:position pos:line="50" pos:column="42"/></name></expr></argument>)<pos:position pos:line="50" pos:column="43"/></argument_list></call><operator pos:line="50" pos:column="43">)<pos:position pos:line="50" pos:column="44"/></operator> <operator pos:line="50" pos:column="45">!=<pos:position pos:line="50" pos:column="47"/></operator> <name pos:line="50" pos:column="48">NULL<pos:position pos:line="50" pos:column="52"/></name></expr>)<pos:position pos:line="50" pos:column="53"/></condition><then pos:line="50" pos:column="53"> <block pos:line="50" pos:column="54">{
        <comment type="block" pos:line="51" pos:column="9">/* ### add a higher-level description? */</comment>
        <return pos:line="52" pos:column="9">return <expr><call><name pos:line="52" pos:column="16">dav_handle_err<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><name pos:line="52" pos:column="31">r<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="34">err<pos:position pos:line="52" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="39">NULL<pos:position pos:line="52" pos:column="43"/></name></expr></argument>)<pos:position pos:line="52" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="45"/></return>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">(<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">err<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <call><name pos:line="55" pos:column="16">dav_open_propdb<pos:position pos:line="55" pos:column="31"/></name><argument_list pos:line="55" pos:column="31">(<argument><expr><name pos:line="55" pos:column="32">r<pos:position pos:line="55" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="35">NULL<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="41">resource<pos:position pos:line="55" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="51">0<pos:position pos:line="55" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="54">doc<pos:position pos:line="55" pos:column="57"/></name><operator pos:line="55" pos:column="57">-&gt;<pos:position pos:line="55" pos:column="62"/></operator><name pos:line="55" pos:column="59">namespaces<pos:position pos:line="55" pos:column="69"/></name></name></expr></argument>,
                               <argument><expr><operator pos:line="56" pos:column="32">&amp;<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="33">propdb<pos:position pos:line="56" pos:column="39"/></name></expr></argument>)<pos:position pos:line="56" pos:column="40"/></argument_list></call><operator pos:line="56" pos:column="40">)<pos:position pos:line="56" pos:column="41"/></operator> <operator pos:line="56" pos:column="42">!=<pos:position pos:line="56" pos:column="44"/></operator> <name pos:line="56" pos:column="45">NULL<pos:position pos:line="56" pos:column="49"/></name></expr>)<pos:position pos:line="56" pos:column="50"/></condition><then pos:line="56" pos:column="50"> <block pos:line="56" pos:column="51">{
        <comment type="block" pos:line="57" pos:column="9">/* undo any auto-checkout */</comment>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">dav_auto_checkin<pos:position pos:line="58" pos:column="25"/></name><argument_list pos:line="58" pos:column="25">(<argument><expr><name pos:line="58" pos:column="26">r<pos:position pos:line="58" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="29">resource<pos:position pos:line="58" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="39">1<pos:position pos:line="58" pos:column="40"/></literal></expr></argument> <comment type="block" pos:line="58" pos:column="41">/*undo*/</comment>, <argument><expr><literal type="number" pos:line="58" pos:column="51">0<pos:position pos:line="58" pos:column="52"/></literal></expr></argument> <comment type="block" pos:line="58" pos:column="53">/*unlock*/</comment>, <argument><expr><operator pos:line="58" pos:column="65">&amp;<pos:position pos:line="58" pos:column="70"/></operator><name pos:line="58" pos:column="66">av_info<pos:position pos:line="58" pos:column="73"/></name></expr></argument>)<pos:position pos:line="58" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="75"/></expr_stmt>

        <expr_stmt><expr><name pos:line="60" pos:column="9">err<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <call><name pos:line="60" pos:column="15">dav_push_error<pos:position pos:line="60" pos:column="29"/></name><argument_list pos:line="60" pos:column="29">(<argument><expr><name><name pos:line="60" pos:column="30">r<pos:position pos:line="60" pos:column="31"/></name><operator pos:line="60" pos:column="31">-&gt;<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="33">pool<pos:position pos:line="60" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="39">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="60" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="67">0<pos:position pos:line="60" pos:column="68"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="61" pos:column="30">apr_psprintf<pos:position pos:line="61" pos:column="42"/></name><argument_list pos:line="61" pos:column="42">(<argument><expr><name><name pos:line="61" pos:column="43">r<pos:position pos:line="61" pos:column="44"/></name><operator pos:line="61" pos:column="44">-&gt;<pos:position pos:line="61" pos:column="49"/></operator><name pos:line="61" pos:column="46">pool<pos:position pos:line="61" pos:column="50"/></name></name></expr></argument>,
                                          <argument><expr><literal type="string" pos:line="62" pos:column="43">"Could not open the property "<pos:position pos:line="62" pos:column="73"/></literal>
                                          <literal type="string" pos:line="63" pos:column="43">"database for %s."<pos:position pos:line="63" pos:column="61"/></literal></expr></argument>,
                                          <argument><expr><call><name pos:line="64" pos:column="43">ap_escape_html<pos:position pos:line="64" pos:column="57"/></name><argument_list pos:line="64" pos:column="57">(<argument><expr><name><name pos:line="64" pos:column="58">r<pos:position pos:line="64" pos:column="59"/></name><operator pos:line="64" pos:column="59">-&gt;<pos:position pos:line="64" pos:column="64"/></operator><name pos:line="64" pos:column="61">pool<pos:position pos:line="64" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="67">r<pos:position pos:line="64" pos:column="68"/></name><operator pos:line="64" pos:column="68">-&gt;<pos:position pos:line="64" pos:column="73"/></operator><name pos:line="64" pos:column="70">uri<pos:position pos:line="64" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="75"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="65" pos:column="30">err<pos:position pos:line="65" pos:column="33"/></name></expr></argument>)<pos:position pos:line="65" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="35"/></expr_stmt>
        <return pos:line="66" pos:column="9">return <expr><call><name pos:line="66" pos:column="16">dav_handle_err<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><name pos:line="66" pos:column="31">r<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="34">err<pos:position pos:line="66" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="39">NULL<pos:position pos:line="66" pos:column="43"/></name></expr></argument>)<pos:position pos:line="66" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="45"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="68" pos:column="5">/* ### what to do about closing the propdb on server failure? */</comment>

    <comment type="block" pos:line="70" pos:column="5">/* ### validate "live" properties */</comment>

    <comment type="block" pos:line="72" pos:column="5">/* set up an array to hold property operation contexts */</comment>
    <expr_stmt><expr><name pos:line="73" pos:column="5">ctx_list<pos:position pos:line="73" pos:column="13"/></name> <operator pos:line="73" pos:column="14">=<pos:position pos:line="73" pos:column="15"/></operator> <call><name pos:line="73" pos:column="16">apr_array_make<pos:position pos:line="73" pos:column="30"/></name><argument_list pos:line="73" pos:column="30">(<argument><expr><name><name pos:line="73" pos:column="31">r<pos:position pos:line="73" pos:column="32"/></name><operator pos:line="73" pos:column="32">-&gt;<pos:position pos:line="73" pos:column="37"/></operator><name pos:line="73" pos:column="34">pool<pos:position pos:line="73" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="40">10<pos:position pos:line="73" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="44">sizeof<argument_list pos:line="73" pos:column="50">(<argument><expr><name pos:line="73" pos:column="51">dav_prop_ctx<pos:position pos:line="73" pos:column="63"/></name></expr></argument>)<pos:position pos:line="73" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="73" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="66"/></expr_stmt>

    <comment type="block" pos:line="75" pos:column="5">/* do a first pass to ensure that all "remove" properties exist */</comment>
    <for pos:line="76" pos:column="5">for <control pos:line="76" pos:column="9">(<init><expr><name pos:line="76" pos:column="10">child<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">=<pos:position pos:line="76" pos:column="17"/></operator> <name><name pos:line="76" pos:column="18">doc<pos:position pos:line="76" pos:column="21"/></name><operator pos:line="76" pos:column="21">-&gt;<pos:position pos:line="76" pos:column="26"/></operator><name pos:line="76" pos:column="23">root<pos:position pos:line="76" pos:column="27"/></name><operator pos:line="76" pos:column="27">-&gt;<pos:position pos:line="76" pos:column="32"/></operator><name pos:line="76" pos:column="29">first_child<pos:position pos:line="76" pos:column="40"/></name></name></expr>;<pos:position pos:line="76" pos:column="41"/></init> <condition><expr><name pos:line="76" pos:column="42">child<pos:position pos:line="76" pos:column="47"/></name></expr>;<pos:position pos:line="76" pos:column="48"/></condition> <incr><expr><name pos:line="76" pos:column="49">child<pos:position pos:line="76" pos:column="54"/></name> <operator pos:line="76" pos:column="55">=<pos:position pos:line="76" pos:column="56"/></operator> <name><name pos:line="76" pos:column="57">child<pos:position pos:line="76" pos:column="62"/></name><operator pos:line="76" pos:column="62">-&gt;<pos:position pos:line="76" pos:column="67"/></operator><name pos:line="76" pos:column="64">next<pos:position pos:line="76" pos:column="68"/></name></name></expr></incr>)<pos:position pos:line="76" pos:column="69"/></control> <block pos:line="76" pos:column="70">{
        <decl_stmt><decl><type><name pos:line="77" pos:column="9">int<pos:position pos:line="77" pos:column="12"/></name></type> <name pos:line="77" pos:column="13">is_remove<pos:position pos:line="77" pos:column="22"/></name></decl>;<pos:position pos:line="77" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="78" pos:column="9">apr_xml_elem<pos:position pos:line="78" pos:column="21"/></name> <modifier pos:line="78" pos:column="22">*<pos:position pos:line="78" pos:column="23"/></modifier></type><name pos:line="78" pos:column="23">prop_group<pos:position pos:line="78" pos:column="33"/></name></decl>;<pos:position pos:line="78" pos:column="34"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="79" pos:column="9">apr_xml_elem<pos:position pos:line="79" pos:column="21"/></name> <modifier pos:line="79" pos:column="22">*<pos:position pos:line="79" pos:column="23"/></modifier></type><name pos:line="79" pos:column="23">one_prop<pos:position pos:line="79" pos:column="31"/></name></decl>;<pos:position pos:line="79" pos:column="32"/></decl_stmt>

        <comment type="block" pos:line="81" pos:column="9">/* Ignore children that are not set/remove */</comment>
        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name><name pos:line="82" pos:column="13">child<pos:position pos:line="82" pos:column="18"/></name><operator pos:line="82" pos:column="18">-&gt;<pos:position pos:line="82" pos:column="23"/></operator><name pos:line="82" pos:column="20">ns<pos:position pos:line="82" pos:column="22"/></name></name> <operator pos:line="82" pos:column="23">!=<pos:position pos:line="82" pos:column="25"/></operator> <name pos:line="82" pos:column="26">APR_XML_NS_DAV_ID<pos:position pos:line="82" pos:column="43"/></name>
            <operator pos:line="83" pos:column="13">||<pos:position pos:line="83" pos:column="15"/></operator> <operator pos:line="83" pos:column="16">(<pos:position pos:line="83" pos:column="17"/></operator><operator pos:line="83" pos:column="17">!<pos:position pos:line="83" pos:column="18"/></operator><operator pos:line="83" pos:column="18">(<pos:position pos:line="83" pos:column="19"/></operator><name pos:line="83" pos:column="19">is_remove<pos:position pos:line="83" pos:column="28"/></name> <operator pos:line="83" pos:column="29">=<pos:position pos:line="83" pos:column="30"/></operator> <call><name pos:line="83" pos:column="31">strcmp<pos:position pos:line="83" pos:column="37"/></name><argument_list pos:line="83" pos:column="37">(<argument><expr><name><name pos:line="83" pos:column="38">child<pos:position pos:line="83" pos:column="43"/></name><operator pos:line="83" pos:column="43">-&gt;<pos:position pos:line="83" pos:column="48"/></operator><name pos:line="83" pos:column="45">name<pos:position pos:line="83" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="51">"remove"<pos:position pos:line="83" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="60"/></argument_list></call> <operator pos:line="83" pos:column="61">==<pos:position pos:line="83" pos:column="63"/></operator> <literal type="number" pos:line="83" pos:column="64">0<pos:position pos:line="83" pos:column="65"/></literal><operator pos:line="83" pos:column="65">)<pos:position pos:line="83" pos:column="66"/></operator>
                <operator pos:line="84" pos:column="17">&amp;&amp;<pos:position pos:line="84" pos:column="27"/></operator> <call><name pos:line="84" pos:column="20">strcmp<pos:position pos:line="84" pos:column="26"/></name><argument_list pos:line="84" pos:column="26">(<argument><expr><name><name pos:line="84" pos:column="27">child<pos:position pos:line="84" pos:column="32"/></name><operator pos:line="84" pos:column="32">-&gt;<pos:position pos:line="84" pos:column="37"/></operator><name pos:line="84" pos:column="34">name<pos:position pos:line="84" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="40">"set"<pos:position pos:line="84" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="46"/></argument_list></call> <operator pos:line="84" pos:column="47">!=<pos:position pos:line="84" pos:column="49"/></operator> <literal type="number" pos:line="84" pos:column="50">0<pos:position pos:line="84" pos:column="51"/></literal><operator pos:line="84" pos:column="51">)<pos:position pos:line="84" pos:column="52"/></operator></expr>)<pos:position pos:line="84" pos:column="53"/></condition><then pos:line="84" pos:column="53"> <block pos:line="84" pos:column="54">{
            <continue pos:line="85" pos:column="13">continue;<pos:position pos:line="85" pos:column="22"/></continue>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="88" pos:column="9">/* make sure that a "prop" child exists for set/remove */</comment>
        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><operator pos:line="89" pos:column="13">(<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="14">prop_group<pos:position pos:line="89" pos:column="24"/></name> <operator pos:line="89" pos:column="25">=<pos:position pos:line="89" pos:column="26"/></operator> <call><name pos:line="89" pos:column="27">dav_find_child<pos:position pos:line="89" pos:column="41"/></name><argument_list pos:line="89" pos:column="41">(<argument><expr><name pos:line="89" pos:column="42">child<pos:position pos:line="89" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="49">"prop"<pos:position pos:line="89" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="56"/></argument_list></call><operator pos:line="89" pos:column="56">)<pos:position pos:line="89" pos:column="57"/></operator> <operator pos:line="89" pos:column="58">==<pos:position pos:line="89" pos:column="60"/></operator> <name pos:line="89" pos:column="61">NULL<pos:position pos:line="89" pos:column="65"/></name></expr>)<pos:position pos:line="89" pos:column="66"/></condition><then pos:line="89" pos:column="66"> <block pos:line="89" pos:column="67">{
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">dav_close_propdb<pos:position pos:line="90" pos:column="29"/></name><argument_list pos:line="90" pos:column="29">(<argument><expr><name pos:line="90" pos:column="30">propdb<pos:position pos:line="90" pos:column="36"/></name></expr></argument>)<pos:position pos:line="90" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="38"/></expr_stmt>

            <comment type="block" pos:line="92" pos:column="13">/* undo any auto-checkout */</comment>
            <expr_stmt><expr><call><name pos:line="93" pos:column="13">dav_auto_checkin<pos:position pos:line="93" pos:column="29"/></name><argument_list pos:line="93" pos:column="29">(<argument><expr><name pos:line="93" pos:column="30">r<pos:position pos:line="93" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="33">resource<pos:position pos:line="93" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="43">1<pos:position pos:line="93" pos:column="44"/></literal></expr></argument> <comment type="block" pos:line="93" pos:column="45">/*undo*/</comment>, <argument><expr><literal type="number" pos:line="93" pos:column="55">0<pos:position pos:line="93" pos:column="56"/></literal></expr></argument> <comment type="block" pos:line="93" pos:column="57">/*unlock*/</comment>, <argument><expr><operator pos:line="93" pos:column="69">&amp;<pos:position pos:line="93" pos:column="74"/></operator><name pos:line="93" pos:column="70">av_info<pos:position pos:line="93" pos:column="77"/></name></expr></argument>)<pos:position pos:line="93" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="79"/></expr_stmt>

            <comment type="block" pos:line="95" pos:column="13">/* This supplies additional information for the default message. */</comment>
            <expr_stmt><expr><call><name pos:line="96" pos:column="13">ap_log_rerror<pos:position pos:line="96" pos:column="26"/></name><argument_list pos:line="96" pos:column="26">(<argument><expr><name pos:line="96" pos:column="27">APLOG_MARK<pos:position pos:line="96" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="39">APLOG_ERR<pos:position pos:line="96" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="96" pos:column="50">0<pos:position pos:line="96" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="53">r<pos:position pos:line="96" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="97" pos:column="27">"A \"prop\" element is missing inside "<pos:position pos:line="97" pos:column="66"/></literal>
                          <literal type="string" pos:line="98" pos:column="27">"the propertyupdate command."<pos:position pos:line="98" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="58"/></expr_stmt>
            <return pos:line="99" pos:column="13">return <expr><name pos:line="99" pos:column="20">HTTP_BAD_REQUEST<pos:position pos:line="99" pos:column="36"/></name></expr>;<pos:position pos:line="99" pos:column="37"/></return>
        }<pos:position pos:line="100" pos:column="10"/></block></then></if>

        <for pos:line="102" pos:column="9">for <control pos:line="102" pos:column="13">(<init><expr><name pos:line="102" pos:column="14">one_prop<pos:position pos:line="102" pos:column="22"/></name> <operator pos:line="102" pos:column="23">=<pos:position pos:line="102" pos:column="24"/></operator> <name><name pos:line="102" pos:column="25">prop_group<pos:position pos:line="102" pos:column="35"/></name><operator pos:line="102" pos:column="35">-&gt;<pos:position pos:line="102" pos:column="40"/></operator><name pos:line="102" pos:column="37">first_child<pos:position pos:line="102" pos:column="48"/></name></name></expr>;<pos:position pos:line="102" pos:column="49"/></init> <condition><expr><name pos:line="102" pos:column="50">one_prop<pos:position pos:line="102" pos:column="58"/></name></expr>;<pos:position pos:line="102" pos:column="59"/></condition>
             <incr><expr><name pos:line="103" pos:column="14">one_prop<pos:position pos:line="103" pos:column="22"/></name> <operator pos:line="103" pos:column="23">=<pos:position pos:line="103" pos:column="24"/></operator> <name><name pos:line="103" pos:column="25">one_prop<pos:position pos:line="103" pos:column="33"/></name><operator pos:line="103" pos:column="33">-&gt;<pos:position pos:line="103" pos:column="38"/></operator><name pos:line="103" pos:column="35">next<pos:position pos:line="103" pos:column="39"/></name></name></expr></incr>)<pos:position pos:line="103" pos:column="40"/></control> <block pos:line="103" pos:column="41">{

            <expr_stmt><expr><name pos:line="105" pos:column="13">ctx<pos:position pos:line="105" pos:column="16"/></name> <operator pos:line="105" pos:column="17">=<pos:position pos:line="105" pos:column="18"/></operator> <operator pos:line="105" pos:column="19">(<pos:position pos:line="105" pos:column="20"/></operator><name pos:line="105" pos:column="20">dav_prop_ctx<pos:position pos:line="105" pos:column="32"/></name> <operator pos:line="105" pos:column="33">*<pos:position pos:line="105" pos:column="34"/></operator><operator pos:line="105" pos:column="34">)<pos:position pos:line="105" pos:column="35"/></operator><call><name pos:line="105" pos:column="35">apr_array_push<pos:position pos:line="105" pos:column="49"/></name><argument_list pos:line="105" pos:column="49">(<argument><expr><name pos:line="105" pos:column="50">ctx_list<pos:position pos:line="105" pos:column="58"/></name></expr></argument>)<pos:position pos:line="105" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="106" pos:column="13">ctx<pos:position pos:line="106" pos:column="16"/></name><operator pos:line="106" pos:column="16">-&gt;<pos:position pos:line="106" pos:column="21"/></operator><name pos:line="106" pos:column="18">propdb<pos:position pos:line="106" pos:column="24"/></name></name> <operator pos:line="106" pos:column="25">=<pos:position pos:line="106" pos:column="26"/></operator> <name pos:line="106" pos:column="27">propdb<pos:position pos:line="106" pos:column="33"/></name></expr>;<pos:position pos:line="106" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="107" pos:column="13">ctx<pos:position pos:line="107" pos:column="16"/></name><operator pos:line="107" pos:column="16">-&gt;<pos:position pos:line="107" pos:column="21"/></operator><name pos:line="107" pos:column="18">operation<pos:position pos:line="107" pos:column="27"/></name></name> <operator pos:line="107" pos:column="28">=<pos:position pos:line="107" pos:column="29"/></operator> <ternary><condition><expr><name pos:line="107" pos:column="30">is_remove<pos:position pos:line="107" pos:column="39"/></name></expr> ?<pos:position pos:line="107" pos:column="41"/></condition><then pos:line="107" pos:column="41"> <expr><name pos:line="107" pos:column="42">DAV_PROP_OP_DELETE<pos:position pos:line="107" pos:column="60"/></name></expr> <pos:position pos:line="107" pos:column="61"/></then><else pos:line="107" pos:column="61">: <expr><name pos:line="107" pos:column="63">DAV_PROP_OP_SET<pos:position pos:line="107" pos:column="78"/></name></expr></else></ternary></expr>;<pos:position pos:line="107" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="108" pos:column="13">ctx<pos:position pos:line="108" pos:column="16"/></name><operator pos:line="108" pos:column="16">-&gt;<pos:position pos:line="108" pos:column="21"/></operator><name pos:line="108" pos:column="18">prop<pos:position pos:line="108" pos:column="22"/></name></name> <operator pos:line="108" pos:column="23">=<pos:position pos:line="108" pos:column="24"/></operator> <name pos:line="108" pos:column="25">one_prop<pos:position pos:line="108" pos:column="33"/></name></expr>;<pos:position pos:line="108" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="110" pos:column="13">ctx<pos:position pos:line="110" pos:column="16"/></name><operator pos:line="110" pos:column="16">-&gt;<pos:position pos:line="110" pos:column="21"/></operator><name pos:line="110" pos:column="18">r<pos:position pos:line="110" pos:column="19"/></name></name> <operator pos:line="110" pos:column="20">=<pos:position pos:line="110" pos:column="21"/></operator> <name pos:line="110" pos:column="22">r<pos:position pos:line="110" pos:column="23"/></name></expr>;<pos:position pos:line="110" pos:column="24"/></expr_stmt>         <comment type="block" pos:line="110" pos:column="33">/* for later use by dav_prop_log_errors() */</comment>

            <expr_stmt><expr><call><name pos:line="112" pos:column="13">dav_prop_validate<pos:position pos:line="112" pos:column="30"/></name><argument_list pos:line="112" pos:column="30">(<argument><expr><name pos:line="112" pos:column="31">ctx<pos:position pos:line="112" pos:column="34"/></name></expr></argument>)<pos:position pos:line="112" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="36"/></expr_stmt>

            <if pos:line="114" pos:column="13">if <condition pos:line="114" pos:column="16">( <expr><call><name pos:line="114" pos:column="18">DAV_PROP_CTX_HAS_ERR<pos:position pos:line="114" pos:column="38"/></name><argument_list pos:line="114" pos:column="38">(<argument><expr><operator pos:line="114" pos:column="39">*<pos:position pos:line="114" pos:column="40"/></operator><name pos:line="114" pos:column="40">ctx<pos:position pos:line="114" pos:column="43"/></name></expr></argument>)<pos:position pos:line="114" pos:column="44"/></argument_list></call></expr> )<pos:position pos:line="114" pos:column="46"/></condition><then pos:line="114" pos:column="46"> <block pos:line="114" pos:column="47">{
                <expr_stmt><expr><name pos:line="115" pos:column="17">failure<pos:position pos:line="115" pos:column="24"/></name> <operator pos:line="115" pos:column="25">=<pos:position pos:line="115" pos:column="26"/></operator> <literal type="number" pos:line="115" pos:column="27">1<pos:position pos:line="115" pos:column="28"/></literal></expr>;<pos:position pos:line="115" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="116" pos:column="14"/></block></then></if>
        }<pos:position pos:line="117" pos:column="10"/></block></for>
    }<pos:position pos:line="118" pos:column="6"/></block></for>

    <comment type="block" pos:line="120" pos:column="5">/* ### should test that we found at least one set/remove */</comment>

    <comment type="block" pos:line="122" pos:column="5">/* execute all of the operations */</comment>
    <if pos:line="123" pos:column="5">if <condition pos:line="123" pos:column="8">(<expr><operator pos:line="123" pos:column="9">!<pos:position pos:line="123" pos:column="10"/></operator><name pos:line="123" pos:column="10">failure<pos:position pos:line="123" pos:column="17"/></name> <operator pos:line="123" pos:column="18">&amp;&amp;<pos:position pos:line="123" pos:column="28"/></operator> <call><name pos:line="123" pos:column="21">dav_process_ctx_list<pos:position pos:line="123" pos:column="41"/></name><argument_list pos:line="123" pos:column="41">(<argument><expr><name pos:line="123" pos:column="42">dav_prop_exec<pos:position pos:line="123" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="57">ctx_list<pos:position pos:line="123" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="123" pos:column="67">1<pos:position pos:line="123" pos:column="68"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="123" pos:column="70">0<pos:position pos:line="123" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="123" pos:column="73"/></condition><then pos:line="123" pos:column="73"> <block pos:line="123" pos:column="74">{
        <expr_stmt><expr><name pos:line="124" pos:column="9">failure<pos:position pos:line="124" pos:column="16"/></name> <operator pos:line="124" pos:column="17">=<pos:position pos:line="124" pos:column="18"/></operator> <literal type="number" pos:line="124" pos:column="19">1<pos:position pos:line="124" pos:column="20"/></literal></expr>;<pos:position pos:line="124" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="125" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="127" pos:column="5">/* generate a failure/success response */</comment>
    <if pos:line="128" pos:column="5">if <condition pos:line="128" pos:column="8">(<expr><name pos:line="128" pos:column="9">failure<pos:position pos:line="128" pos:column="16"/></name></expr>)<pos:position pos:line="128" pos:column="17"/></condition><then pos:line="128" pos:column="17"> <block pos:line="128" pos:column="18">{
        <expr_stmt><expr><operator pos:line="129" pos:column="9">(<pos:position pos:line="129" pos:column="10"/></operator><name pos:line="129" pos:column="10">void<pos:position pos:line="129" pos:column="14"/></name><operator pos:line="129" pos:column="14">)<pos:position pos:line="129" pos:column="15"/></operator><call><name pos:line="129" pos:column="15">dav_process_ctx_list<pos:position pos:line="129" pos:column="35"/></name><argument_list pos:line="129" pos:column="35">(<argument><expr><name pos:line="129" pos:column="36">dav_prop_rollback<pos:position pos:line="129" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="55">ctx_list<pos:position pos:line="129" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="65">0<pos:position pos:line="129" pos:column="66"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="68">1<pos:position pos:line="129" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><name pos:line="130" pos:column="9">propstat_text<pos:position pos:line="130" pos:column="22"/></name> <operator pos:line="130" pos:column="23">=<pos:position pos:line="130" pos:column="24"/></operator> <call><name pos:line="130" pos:column="25">dav_failed_proppatch<pos:position pos:line="130" pos:column="45"/></name><argument_list pos:line="130" pos:column="45">(<argument><expr><name><name pos:line="130" pos:column="46">r<pos:position pos:line="130" pos:column="47"/></name><operator pos:line="130" pos:column="47">-&gt;<pos:position pos:line="130" pos:column="52"/></operator><name pos:line="130" pos:column="49">pool<pos:position pos:line="130" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="55">ctx_list<pos:position pos:line="130" pos:column="63"/></name></expr></argument>)<pos:position pos:line="130" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="131" pos:column="6"/></block></then>
    <else pos:line="132" pos:column="5">else <block pos:line="132" pos:column="10">{
        <expr_stmt><expr><operator pos:line="133" pos:column="9">(<pos:position pos:line="133" pos:column="10"/></operator><name pos:line="133" pos:column="10">void<pos:position pos:line="133" pos:column="14"/></name><operator pos:line="133" pos:column="14">)<pos:position pos:line="133" pos:column="15"/></operator><call><name pos:line="133" pos:column="15">dav_process_ctx_list<pos:position pos:line="133" pos:column="35"/></name><argument_list pos:line="133" pos:column="35">(<argument><expr><name pos:line="133" pos:column="36">dav_prop_commit<pos:position pos:line="133" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="53">ctx_list<pos:position pos:line="133" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="133" pos:column="63">0<pos:position pos:line="133" pos:column="64"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="133" pos:column="66">0<pos:position pos:line="133" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name pos:line="134" pos:column="9">propstat_text<pos:position pos:line="134" pos:column="22"/></name> <operator pos:line="134" pos:column="23">=<pos:position pos:line="134" pos:column="24"/></operator> <call><name pos:line="134" pos:column="25">dav_success_proppatch<pos:position pos:line="134" pos:column="46"/></name><argument_list pos:line="134" pos:column="46">(<argument><expr><name><name pos:line="134" pos:column="47">r<pos:position pos:line="134" pos:column="48"/></name><operator pos:line="134" pos:column="48">-&gt;<pos:position pos:line="134" pos:column="53"/></operator><name pos:line="134" pos:column="50">pool<pos:position pos:line="134" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="56">ctx_list<pos:position pos:line="134" pos:column="64"/></name></expr></argument>)<pos:position pos:line="134" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="135" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="137" pos:column="5">/* make sure this gets closed! */</comment>
    <expr_stmt><expr><call><name pos:line="138" pos:column="5">dav_close_propdb<pos:position pos:line="138" pos:column="21"/></name><argument_list pos:line="138" pos:column="21">(<argument><expr><name pos:line="138" pos:column="22">propdb<pos:position pos:line="138" pos:column="28"/></name></expr></argument>)<pos:position pos:line="138" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="140" pos:column="5">/* complete any auto-versioning */</comment>
    <expr_stmt><expr><call><name pos:line="141" pos:column="5">dav_auto_checkin<pos:position pos:line="141" pos:column="21"/></name><argument_list pos:line="141" pos:column="21">(<argument><expr><name pos:line="141" pos:column="22">r<pos:position pos:line="141" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="25">resource<pos:position pos:line="141" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="35">failure<pos:position pos:line="141" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="44">0<pos:position pos:line="141" pos:column="45"/></literal></expr></argument> <comment type="block" pos:line="141" pos:column="46">/*unlock*/</comment>, <argument><expr><operator pos:line="141" pos:column="58">&amp;<pos:position pos:line="141" pos:column="63"/></operator><name pos:line="141" pos:column="59">av_info<pos:position pos:line="141" pos:column="66"/></name></expr></argument>)<pos:position pos:line="141" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="68"/></expr_stmt>

    <comment type="block" pos:line="143" pos:column="5">/* log any errors that occurred */</comment>
    <expr_stmt><expr><operator pos:line="144" pos:column="5">(<pos:position pos:line="144" pos:column="6"/></operator><name pos:line="144" pos:column="6">void<pos:position pos:line="144" pos:column="10"/></name><operator pos:line="144" pos:column="10">)<pos:position pos:line="144" pos:column="11"/></operator><call><name pos:line="144" pos:column="11">dav_process_ctx_list<pos:position pos:line="144" pos:column="31"/></name><argument_list pos:line="144" pos:column="31">(<argument><expr><name pos:line="144" pos:column="32">dav_prop_log_errors<pos:position pos:line="144" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="53">ctx_list<pos:position pos:line="144" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="144" pos:column="63">0<pos:position pos:line="144" pos:column="64"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="144" pos:column="66">0<pos:position pos:line="144" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="146" pos:column="5">resp<pos:position pos:line="146" pos:column="9"/></name><operator pos:line="146" pos:column="9">.<pos:position pos:line="146" pos:column="10"/></operator><name pos:line="146" pos:column="10">href<pos:position pos:line="146" pos:column="14"/></name></name> <operator pos:line="146" pos:column="15">=<pos:position pos:line="146" pos:column="16"/></operator> <name><name pos:line="146" pos:column="17">resource<pos:position pos:line="146" pos:column="25"/></name><operator pos:line="146" pos:column="25">-&gt;<pos:position pos:line="146" pos:column="30"/></operator><name pos:line="146" pos:column="27">uri<pos:position pos:line="146" pos:column="30"/></name></name></expr>;<pos:position pos:line="146" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="148" pos:column="5">/* ### should probably use something new to pass along this text... */</comment>
    <expr_stmt><expr><name><name pos:line="149" pos:column="5">resp<pos:position pos:line="149" pos:column="9"/></name><operator pos:line="149" pos:column="9">.<pos:position pos:line="149" pos:column="10"/></operator><name pos:line="149" pos:column="10">propresult<pos:position pos:line="149" pos:column="20"/></name><operator pos:line="149" pos:column="20">.<pos:position pos:line="149" pos:column="21"/></operator><name pos:line="149" pos:column="21">propstats<pos:position pos:line="149" pos:column="30"/></name></name> <operator pos:line="149" pos:column="31">=<pos:position pos:line="149" pos:column="32"/></operator> <name pos:line="149" pos:column="33">propstat_text<pos:position pos:line="149" pos:column="46"/></name></expr>;<pos:position pos:line="149" pos:column="47"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="151" pos:column="5">dav_send_multistatus<pos:position pos:line="151" pos:column="25"/></name><argument_list pos:line="151" pos:column="25">(<argument><expr><name pos:line="151" pos:column="26">r<pos:position pos:line="151" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="29">HTTP_MULTI_STATUS<pos:position pos:line="151" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="151" pos:column="48">&amp;<pos:position pos:line="151" pos:column="53"/></operator><name pos:line="151" pos:column="49">resp<pos:position pos:line="151" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="55">doc<pos:position pos:line="151" pos:column="58"/></name><operator pos:line="151" pos:column="58">-&gt;<pos:position pos:line="151" pos:column="63"/></operator><name pos:line="151" pos:column="60">namespaces<pos:position pos:line="151" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="72"/></expr_stmt>

    <comment type="block" pos:line="153" pos:column="5">/* the response has been sent. */</comment>
    <return pos:line="154" pos:column="5">return <expr><name pos:line="154" pos:column="12">DONE<pos:position pos:line="154" pos:column="16"/></name></expr>;<pos:position pos:line="154" pos:column="17"/></return>
}<pos:position pos:line="155" pos:column="2"/></block></function></unit>

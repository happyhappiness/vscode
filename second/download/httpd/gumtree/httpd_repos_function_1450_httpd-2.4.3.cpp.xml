<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1450_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fix_encoding<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">request_rec<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">r<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">enc<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name><name pos:line="3" pos:column="23">r<pos:position pos:line="3" pos:column="24"/></name><operator pos:line="3" pos:column="24">-&gt;<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="26">content_encoding<pos:position pos:line="3" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">x_enc<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">NULL<pos:position pos:line="4" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_array_header_t<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">accept_encodings<pos:position pos:line="5" pos:column="41"/></name></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">accept_rec<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">accept_recs<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">enc<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">||<pos:position pos:line="9" pos:column="16"/></operator> <operator pos:line="9" pos:column="17">!<pos:position pos:line="9" pos:column="18"/></operator><operator pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">enc<pos:position pos:line="9" pos:column="22"/></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">DECLINED<pos:position pos:line="10" pos:column="24"/></name></expr>;<pos:position pos:line="10" pos:column="25"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">enc<pos:position pos:line="13" pos:column="12"/></name><index pos:line="13" pos:column="12">[<expr><literal type="number" pos:line="13" pos:column="13">0<pos:position pos:line="13" pos:column="14"/></literal></expr>]<pos:position pos:line="13" pos:column="15"/></index></name> <operator pos:line="13" pos:column="16">==<pos:position pos:line="13" pos:column="18"/></operator> <literal type="char" pos:line="13" pos:column="19">'x'<pos:position pos:line="13" pos:column="22"/></literal> <operator pos:line="13" pos:column="23">&amp;&amp;<pos:position pos:line="13" pos:column="33"/></operator> <name><name pos:line="13" pos:column="26">enc<pos:position pos:line="13" pos:column="29"/></name><index pos:line="13" pos:column="29">[<expr><literal type="number" pos:line="13" pos:column="30">1<pos:position pos:line="13" pos:column="31"/></literal></expr>]<pos:position pos:line="13" pos:column="32"/></index></name> <operator pos:line="13" pos:column="33">==<pos:position pos:line="13" pos:column="35"/></operator> <literal type="char" pos:line="13" pos:column="36">'-'<pos:position pos:line="13" pos:column="39"/></literal></expr>)<pos:position pos:line="13" pos:column="40"/></condition><then pos:line="13" pos:column="40"> <block pos:line="13" pos:column="41">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">enc<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">+=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="number" pos:line="14" pos:column="16">2<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">accept_encodings<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <call><name pos:line="17" pos:column="29">do_header_line<pos:position pos:line="17" pos:column="43"/></name><argument_list pos:line="17" pos:column="43">(<argument><expr><name><name pos:line="17" pos:column="44">r<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="47">pool<pos:position pos:line="17" pos:column="51"/></name></name></expr></argument>,
             <argument><expr><call><name pos:line="18" pos:column="14">apr_table_get<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name><name pos:line="18" pos:column="28">r<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">headers_in<pos:position pos:line="18" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="43">"Accept-Encoding"<pos:position pos:line="18" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call><operator pos:line="18" pos:column="62">)<pos:position pos:line="18" pos:column="63"/></operator> <operator pos:line="18" pos:column="64">==<pos:position pos:line="18" pos:column="66"/></operator> <name pos:line="18" pos:column="67">NULL<pos:position pos:line="18" pos:column="71"/></name></expr>)<pos:position pos:line="18" pos:column="72"/></condition><then pos:line="18" pos:column="72"> <block pos:line="18" pos:column="73">{
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">DECLINED<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="22" pos:column="5">accept_recs<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <operator pos:line="22" pos:column="19">(<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">accept_rec<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">*<pos:position pos:line="22" pos:column="32"/></operator><operator pos:line="22" pos:column="32">)<pos:position pos:line="22" pos:column="33"/></operator> <name><name pos:line="22" pos:column="34">accept_encodings<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">-&gt;<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="52">elts<pos:position pos:line="22" pos:column="56"/></name></name></expr>;<pos:position pos:line="22" pos:column="57"/></expr_stmt>

    <for pos:line="24" pos:column="5">for <control pos:line="24" pos:column="9">(<init><expr><name pos:line="24" pos:column="10">i<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>;<pos:position pos:line="24" pos:column="16"/></init> <condition><expr><name pos:line="24" pos:column="17">i<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">&lt;<pos:position pos:line="24" pos:column="23"/></operator> <name><name pos:line="24" pos:column="21">accept_encodings<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">-&gt;<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="39">nelts<pos:position pos:line="24" pos:column="44"/></name></name></expr>;<pos:position pos:line="24" pos:column="45"/></condition> <incr><expr><operator pos:line="24" pos:column="46">++<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="48">i<pos:position pos:line="24" pos:column="49"/></name></expr></incr>)<pos:position pos:line="24" pos:column="50"/></control> <block pos:line="24" pos:column="51">{
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">char<pos:position pos:line="25" pos:column="13"/></name> <modifier pos:line="25" pos:column="14">*<pos:position pos:line="25" pos:column="15"/></modifier></type><name pos:line="25" pos:column="15">name<pos:position pos:line="25" pos:column="19"/></name> <init pos:line="25" pos:column="20">= <expr><name><name pos:line="25" pos:column="22">accept_recs<pos:position pos:line="25" pos:column="33"/></name><index pos:line="25" pos:column="33">[<expr><name pos:line="25" pos:column="34">i<pos:position pos:line="25" pos:column="35"/></name></expr>]<pos:position pos:line="25" pos:column="36"/></index></name><operator pos:line="25" pos:column="36">.<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="37">name<pos:position pos:line="25" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="42"/></decl_stmt>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><call><name pos:line="27" pos:column="14">strcmp<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">name<pos:position pos:line="27" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="27">enc<pos:position pos:line="27" pos:column="30"/></name></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="32"/></condition><then pos:line="27" pos:column="32"> <block pos:line="27" pos:column="33">{
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">r<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">content_encoding<pos:position pos:line="28" pos:column="32"/></name></name> <operator pos:line="28" pos:column="33">=<pos:position pos:line="28" pos:column="34"/></operator> <name pos:line="28" pos:column="35">name<pos:position pos:line="28" pos:column="39"/></name></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
            <return pos:line="29" pos:column="13">return <expr><name pos:line="29" pos:column="20">OK<pos:position pos:line="29" pos:column="22"/></name></expr>;<pos:position pos:line="29" pos:column="23"/></return>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">name<pos:position pos:line="32" pos:column="17"/></name><index pos:line="32" pos:column="17">[<expr><literal type="number" pos:line="32" pos:column="18">0<pos:position pos:line="32" pos:column="19"/></literal></expr>]<pos:position pos:line="32" pos:column="20"/></index></name> <operator pos:line="32" pos:column="21">==<pos:position pos:line="32" pos:column="23"/></operator> <literal type="char" pos:line="32" pos:column="24">'x'<pos:position pos:line="32" pos:column="27"/></literal> <operator pos:line="32" pos:column="28">&amp;&amp;<pos:position pos:line="32" pos:column="38"/></operator> <name><name pos:line="32" pos:column="31">name<pos:position pos:line="32" pos:column="35"/></name><index pos:line="32" pos:column="35">[<expr><literal type="number" pos:line="32" pos:column="36">1<pos:position pos:line="32" pos:column="37"/></literal></expr>]<pos:position pos:line="32" pos:column="38"/></index></name> <operator pos:line="32" pos:column="39">==<pos:position pos:line="32" pos:column="41"/></operator> <literal type="char" pos:line="32" pos:column="42">'-'<pos:position pos:line="32" pos:column="45"/></literal> <operator pos:line="32" pos:column="46">&amp;&amp;<pos:position pos:line="32" pos:column="56"/></operator> <operator pos:line="32" pos:column="49">!<pos:position pos:line="32" pos:column="50"/></operator><call><name pos:line="32" pos:column="50">strcmp<pos:position pos:line="32" pos:column="56"/></name><argument_list pos:line="32" pos:column="56">(<argument><expr><name pos:line="32" pos:column="57">name<pos:position pos:line="32" pos:column="61"/></name><operator pos:line="32" pos:column="61">+<pos:position pos:line="32" pos:column="62"/></operator><literal type="number" pos:line="32" pos:column="62">2<pos:position pos:line="32" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="65">enc<pos:position pos:line="32" pos:column="68"/></name></expr></argument>)<pos:position pos:line="32" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="70"/></condition><then pos:line="32" pos:column="70"> <block pos:line="32" pos:column="71">{
            <expr_stmt><expr><name pos:line="33" pos:column="13">x_enc<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <name pos:line="33" pos:column="21">name<pos:position pos:line="33" pos:column="25"/></name></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
    }<pos:position pos:line="35" pos:column="6"/></block></for>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">x_enc<pos:position pos:line="37" pos:column="14"/></name></expr>)<pos:position pos:line="37" pos:column="15"/></condition><then pos:line="37" pos:column="15"> <block pos:line="37" pos:column="16">{
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">r<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">content_encoding<pos:position pos:line="38" pos:column="28"/></name></name> <operator pos:line="38" pos:column="29">=<pos:position pos:line="38" pos:column="30"/></operator> <name pos:line="38" pos:column="31">x_enc<pos:position pos:line="38" pos:column="36"/></name></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">OK<pos:position pos:line="39" pos:column="18"/></name></expr>;<pos:position pos:line="39" pos:column="19"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">DECLINED<pos:position pos:line="42" pos:column="20"/></name></expr>;<pos:position pos:line="42" pos:column="21"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

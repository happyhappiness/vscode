<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1785_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cgid_init<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">apr_pool_t<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">p<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">apr_pool_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">plog<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">apr_pool_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">ptemp<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="2" pos:column="22">server_rec<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">main_server<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_proc_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">procnew<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">NULL<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">userdata_key<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><literal type="string" pos:line="5" pos:column="32">"cgid_init"<pos:position pos:line="5" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">ret<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><name pos:line="6" pos:column="15">OK<pos:position pos:line="6" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">void<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">data<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">root_server<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">main_server<pos:position pos:line="9" pos:column="30"/></name></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">root_pool<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">p<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">apr_pool_userdata_get<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><operator pos:line="12" pos:column="27">&amp;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="28">data<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="34">userdata_key<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="48">main_server<pos:position pos:line="12" pos:column="59"/></name><operator pos:line="12" pos:column="59">-&gt;<pos:position pos:line="12" pos:column="64"/></operator><name pos:line="12" pos:column="61">process<pos:position pos:line="12" pos:column="68"/></name><operator pos:line="12" pos:column="68">-&gt;<pos:position pos:line="12" pos:column="73"/></operator><name pos:line="12" pos:column="70">pool<pos:position pos:line="12" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="76"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">data<pos:position pos:line="13" pos:column="14"/></name></expr>)<pos:position pos:line="13" pos:column="15"/></condition><then pos:line="13" pos:column="15"> <block pos:line="13" pos:column="16">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">procnew<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <call><name pos:line="14" pos:column="19">apr_pcalloc<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name><name pos:line="14" pos:column="31">main_server<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">process<pos:position pos:line="14" pos:column="51"/></name><operator pos:line="14" pos:column="51">-&gt;<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="53">pool<pos:position pos:line="14" pos:column="57"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="59">sizeof<argument_list pos:line="14" pos:column="65">(<argument><expr><operator pos:line="14" pos:column="66">*<pos:position pos:line="14" pos:column="67"/></operator><name pos:line="14" pos:column="67">procnew<pos:position pos:line="14" pos:column="74"/></name></expr></argument>)<pos:position pos:line="14" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">procnew<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">pid<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <operator pos:line="15" pos:column="24">-<pos:position pos:line="15" pos:column="25"/></operator><literal type="number" pos:line="15" pos:column="25">1<pos:position pos:line="15" pos:column="26"/></literal></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">procnew<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">err<pos:position pos:line="16" pos:column="21"/></name></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <name><name pos:line="16" pos:column="24">procnew<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">in<pos:position pos:line="16" pos:column="35"/></name></name> <operator pos:line="16" pos:column="36">=<pos:position pos:line="16" pos:column="37"/></operator> <name><name pos:line="16" pos:column="38">procnew<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">out<pos:position pos:line="16" pos:column="50"/></name></name> <operator pos:line="16" pos:column="51">=<pos:position pos:line="16" pos:column="52"/></operator> <name pos:line="16" pos:column="53">NULL<pos:position pos:line="16" pos:column="57"/></name></expr>;<pos:position pos:line="16" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">apr_pool_userdata_set<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><operator pos:line="17" pos:column="31">(<pos:position pos:line="17" pos:column="32"/></operator><specifier pos:line="17" pos:column="32">const<pos:position pos:line="17" pos:column="37"/></specifier> <name pos:line="17" pos:column="38">void<pos:position pos:line="17" pos:column="42"/></name> <operator pos:line="17" pos:column="43">*<pos:position pos:line="17" pos:column="44"/></operator><operator pos:line="17" pos:column="44">)<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="45">procnew<pos:position pos:line="17" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="54">userdata_key<pos:position pos:line="17" pos:column="66"/></name></expr></argument>,
                     <argument><expr><name pos:line="18" pos:column="22">apr_pool_cleanup_null<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="45">main_server<pos:position pos:line="18" pos:column="56"/></name><operator pos:line="18" pos:column="56">-&gt;<pos:position pos:line="18" pos:column="61"/></operator><name pos:line="18" pos:column="58">process<pos:position pos:line="18" pos:column="65"/></name><operator pos:line="18" pos:column="65">-&gt;<pos:position pos:line="18" pos:column="70"/></operator><name pos:line="18" pos:column="67">pool<pos:position pos:line="18" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="73"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">ret<pos:position pos:line="19" pos:column="19"/></name></expr>;<pos:position pos:line="19" pos:column="20"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then>
    <else pos:line="21" pos:column="5">else <block pos:line="21" pos:column="10">{
        <expr_stmt><expr><name pos:line="22" pos:column="9">procnew<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">data<pos:position pos:line="22" pos:column="23"/></name></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></else></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><call><name pos:line="25" pos:column="9">ap_state_query<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name pos:line="25" pos:column="24">AP_SQ_MAIN_STATE<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call> <operator pos:line="25" pos:column="42">!=<pos:position pos:line="25" pos:column="44"/></operator> <name pos:line="25" pos:column="45">AP_SQ_MS_CREATE_PRE_CONFIG<pos:position pos:line="25" pos:column="71"/></name></expr>)<pos:position pos:line="25" pos:column="72"/></condition><then pos:line="25" pos:column="72"> <block pos:line="25" pos:column="73">{
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">char<pos:position pos:line="26" pos:column="13"/></name> <modifier pos:line="26" pos:column="14">*<pos:position pos:line="26" pos:column="15"/></modifier></type><name pos:line="26" pos:column="15">tmp_sockname<pos:position pos:line="26" pos:column="27"/></name></decl>;<pos:position pos:line="26" pos:column="28"/></decl_stmt>

        <expr_stmt><expr><name pos:line="28" pos:column="9">parent_pid<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <call><name pos:line="28" pos:column="22">getpid<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">()<pos:position pos:line="28" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">tmp_sockname<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <call><name pos:line="29" pos:column="24">ap_runtime_dir_relative<pos:position pos:line="29" pos:column="47"/></name><argument_list pos:line="29" pos:column="47">(<argument><expr><name pos:line="29" pos:column="48">p<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">sockname<pos:position pos:line="29" pos:column="59"/></name></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="61"/></expr_stmt>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">strlen<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><name pos:line="30" pos:column="20">tmp_sockname<pos:position pos:line="30" pos:column="32"/></name></expr></argument>)<pos:position pos:line="30" pos:column="33"/></argument_list></call> <operator pos:line="30" pos:column="34">&gt;<pos:position pos:line="30" pos:column="38"/></operator> <sizeof pos:line="30" pos:column="36">sizeof<argument_list pos:line="30" pos:column="42">(<argument><expr><name><name pos:line="30" pos:column="43">server_addr<pos:position pos:line="30" pos:column="54"/></name><operator pos:line="30" pos:column="54">-&gt;<pos:position pos:line="30" pos:column="59"/></operator><name pos:line="30" pos:column="56">sun_path<pos:position pos:line="30" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="65"/></argument_list></sizeof> <operator pos:line="30" pos:column="66">-<pos:position pos:line="30" pos:column="67"/></operator> <literal type="number" pos:line="30" pos:column="68">1<pos:position pos:line="30" pos:column="69"/></literal></expr>)<pos:position pos:line="30" pos:column="70"/></condition><then pos:line="30" pos:column="70"> <block pos:line="30" pos:column="71">{
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">tmp_sockname<pos:position pos:line="31" pos:column="25"/></name><index pos:line="31" pos:column="25">[<expr><sizeof pos:line="31" pos:column="26">sizeof<argument_list pos:line="31" pos:column="32">(<argument><expr><name><name pos:line="31" pos:column="33">server_addr<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">-&gt;<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="46">sun_path<pos:position pos:line="31" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></sizeof></expr>]<pos:position pos:line="31" pos:column="56"/></index></name> <operator pos:line="31" pos:column="57">=<pos:position pos:line="31" pos:column="58"/></operator> <literal type="char" pos:line="31" pos:column="59">'\0'<pos:position pos:line="31" pos:column="63"/></literal></expr>;<pos:position pos:line="31" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">ap_log_error<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">APLOG_MARK<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="38">APLOG_ERR<pos:position pos:line="32" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="49">0<pos:position pos:line="32" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="52">main_server<pos:position pos:line="32" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="65">APLOGNO<pos:position pos:line="32" pos:column="72"/></name><argument_list pos:line="32" pos:column="72">(<argument><expr><literal type="number" pos:line="32" pos:column="73">01254<pos:position pos:line="32" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="79"/></argument_list></call>
                        <literal type="string" pos:line="33" pos:column="25">"The length of the ScriptSock path exceeds maximum, "<pos:position pos:line="33" pos:column="78"/></literal>
                        <literal type="string" pos:line="34" pos:column="25">"truncating to %s"<pos:position pos:line="34" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="45">tmp_sockname<pos:position pos:line="34" pos:column="57"/></name></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="36" pos:column="9">sockname<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <name pos:line="36" pos:column="20">tmp_sockname<pos:position pos:line="36" pos:column="32"/></name></expr>;<pos:position pos:line="36" pos:column="33"/></expr_stmt>

        <expr_stmt><expr><name pos:line="38" pos:column="9">server_addr_len<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <call><name pos:line="38" pos:column="27">APR_OFFSETOF<pos:position pos:line="38" pos:column="39"/></name><argument_list pos:line="38" pos:column="39">(<argument><expr pos:line="38" pos:column="40">struct <name pos:line="38" pos:column="47">sockaddr_un<pos:position pos:line="38" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="60">sun_path<pos:position pos:line="38" pos:column="68"/></name></expr></argument>)<pos:position pos:line="38" pos:column="69"/></argument_list></call> <operator pos:line="38" pos:column="70">+<pos:position pos:line="38" pos:column="71"/></operator> <call><name pos:line="38" pos:column="72">strlen<pos:position pos:line="38" pos:column="78"/></name><argument_list pos:line="38" pos:column="78">(<argument><expr><name pos:line="38" pos:column="79">sockname<pos:position pos:line="38" pos:column="87"/></name></expr></argument>)<pos:position pos:line="38" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="89"/></expr_stmt>
        <expr_stmt><expr><name pos:line="39" pos:column="9">server_addr<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <operator pos:line="39" pos:column="23">(<pos:position pos:line="39" pos:column="24"/></operator>struct <name pos:line="39" pos:column="31">sockaddr_un<pos:position pos:line="39" pos:column="42"/></name> <operator pos:line="39" pos:column="43">*<pos:position pos:line="39" pos:column="44"/></operator><operator pos:line="39" pos:column="44">)<pos:position pos:line="39" pos:column="45"/></operator><call><name pos:line="39" pos:column="45">apr_palloc<pos:position pos:line="39" pos:column="55"/></name><argument_list pos:line="39" pos:column="55">(<argument><expr><name pos:line="39" pos:column="56">p<pos:position pos:line="39" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="59">server_addr_len<pos:position pos:line="39" pos:column="74"/></name> <operator pos:line="39" pos:column="75">+<pos:position pos:line="39" pos:column="76"/></operator> <literal type="number" pos:line="39" pos:column="77">1<pos:position pos:line="39" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">server_addr<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">-&gt;<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="22">sun_family<pos:position pos:line="40" pos:column="32"/></name></name> <operator pos:line="40" pos:column="33">=<pos:position pos:line="40" pos:column="34"/></operator> <name pos:line="40" pos:column="35">AF_UNIX<pos:position pos:line="40" pos:column="42"/></name></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">strcpy<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><name><name pos:line="41" pos:column="16">server_addr<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">sun_path<pos:position pos:line="41" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="39">sockname<pos:position pos:line="41" pos:column="47"/></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="49"/></expr_stmt>

        <expr_stmt><expr><name pos:line="43" pos:column="9">ret<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">=<pos:position pos:line="43" pos:column="14"/></operator> <call><name pos:line="43" pos:column="15">cgid_start<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">p<pos:position pos:line="43" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="29">main_server<pos:position pos:line="43" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="42">procnew<pos:position pos:line="43" pos:column="49"/></name></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="51"/></expr_stmt>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">ret<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">!=<pos:position pos:line="44" pos:column="19"/></operator> <name pos:line="44" pos:column="20">OK<pos:position pos:line="44" pos:column="22"/></name></expr> )<pos:position pos:line="44" pos:column="24"/></condition><then pos:line="44" pos:column="24"> <block pos:line="44" pos:column="25">{
            <return pos:line="45" pos:column="13">return <expr><name pos:line="45" pos:column="20">ret<pos:position pos:line="45" pos:column="23"/></name></expr>;<pos:position pos:line="45" pos:column="24"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="47" pos:column="9">cgid_pfn_reg_with_ssi<pos:position pos:line="47" pos:column="30"/></name> <operator pos:line="47" pos:column="31">=<pos:position pos:line="47" pos:column="32"/></operator> <call><name pos:line="47" pos:column="33">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="47" pos:column="57"/></name><argument_list pos:line="47" pos:column="57">(<argument><expr><name pos:line="47" pos:column="58">ap_register_include_handler<pos:position pos:line="47" pos:column="85"/></name></expr></argument>)<pos:position pos:line="47" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="87"/></expr_stmt>
        <expr_stmt><expr><name pos:line="48" pos:column="9">cgid_pfn_gtv<pos:position pos:line="48" pos:column="21"/></name>          <operator pos:line="48" pos:column="31">=<pos:position pos:line="48" pos:column="32"/></operator> <call><name pos:line="48" pos:column="33">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="48" pos:column="57"/></name><argument_list pos:line="48" pos:column="57">(<argument><expr><name pos:line="48" pos:column="58">ap_ssi_get_tag_and_value<pos:position pos:line="48" pos:column="82"/></name></expr></argument>)<pos:position pos:line="48" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="84"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">cgid_pfn_ps<pos:position pos:line="49" pos:column="20"/></name>           <operator pos:line="49" pos:column="31">=<pos:position pos:line="49" pos:column="32"/></operator> <call><name pos:line="49" pos:column="33">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="49" pos:column="57"/></name><argument_list pos:line="49" pos:column="57">(<argument><expr><name pos:line="49" pos:column="58">ap_ssi_parse_string<pos:position pos:line="49" pos:column="77"/></name></expr></argument>)<pos:position pos:line="49" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="79"/></expr_stmt>

        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">(<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">cgid_pfn_reg_with_ssi<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">)<pos:position pos:line="51" pos:column="36"/></operator> <operator pos:line="51" pos:column="37">&amp;&amp;<pos:position pos:line="51" pos:column="47"/></operator> <operator pos:line="51" pos:column="40">(<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="41">cgid_pfn_gtv<pos:position pos:line="51" pos:column="53"/></name><operator pos:line="51" pos:column="53">)<pos:position pos:line="51" pos:column="54"/></operator> <operator pos:line="51" pos:column="55">&amp;&amp;<pos:position pos:line="51" pos:column="65"/></operator> <operator pos:line="51" pos:column="58">(<pos:position pos:line="51" pos:column="59"/></operator><name pos:line="51" pos:column="59">cgid_pfn_ps<pos:position pos:line="51" pos:column="70"/></name><operator pos:line="51" pos:column="70">)<pos:position pos:line="51" pos:column="71"/></operator></expr>)<pos:position pos:line="51" pos:column="72"/></condition><then pos:line="51" pos:column="72"> <block pos:line="51" pos:column="73">{
            <comment type="block" pos:line="52" pos:column="13">/* Required by mod_include filter. This is how mod_cgid registers
             *   with mod_include to provide processing of the exec directive.
             */</comment>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">cgid_pfn_reg_with_ssi<pos:position pos:line="55" pos:column="34"/></name><argument_list pos:line="55" pos:column="34">(<argument><expr><literal type="string" pos:line="55" pos:column="35">"exec"<pos:position pos:line="55" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="43">handle_exec<pos:position pos:line="55" pos:column="54"/></name></expr></argument>)<pos:position pos:line="55" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
    <return pos:line="58" pos:column="5">return <expr><name pos:line="58" pos:column="12">ret<pos:position pos:line="58" pos:column="15"/></name></expr>;<pos:position pos:line="58" pos:column="16"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

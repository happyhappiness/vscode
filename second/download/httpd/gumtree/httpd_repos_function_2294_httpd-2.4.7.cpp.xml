<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2294_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">filter_protocol<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">cmd_parms<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">cmd<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">void<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">CFG<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="63">const<pos:position pos:line="1" pos:column="68"/></specifier> <name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">fname<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">pname<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <name pos:line="2" pos:column="61">char<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">proto<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><specifier pos:line="4" pos:column="12">const<pos:position pos:line="4" pos:column="17"/></specifier> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">sep<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><literal type="string" pos:line="4" pos:column="30">";, \t"<pos:position pos:line="4" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">arg<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">tok<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">int<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">flags<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">mod_filter_cfg<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">cfg<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><name pos:line="8" pos:column="27">CFG<pos:position pos:line="8" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ap_filter_provider_t<pos:position pos:line="9" pos:column="25"/></name> <modifier pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></modifier></type><name pos:line="9" pos:column="27">provider<pos:position pos:line="9" pos:column="35"/></name> <init pos:line="9" pos:column="36">= <expr><name pos:line="9" pos:column="38">NULL<pos:position pos:line="9" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">ap_filter_rec_t<pos:position pos:line="10" pos:column="20"/></name> <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">filter<pos:position pos:line="10" pos:column="28"/></name> <init pos:line="10" pos:column="29">= <expr><call><name pos:line="10" pos:column="31">apr_hash_get<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><name><name pos:line="10" pos:column="44">cfg<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">-&gt;<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="49">live_filters<pos:position pos:line="10" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="63">fname<pos:position pos:line="10" pos:column="68"/></name></expr></argument>,
                                           <argument><expr><name pos:line="11" pos:column="44">APR_HASH_KEY_STRING<pos:position pos:line="11" pos:column="63"/></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="65"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">filter<pos:position pos:line="13" pos:column="16"/></name></expr>)<pos:position pos:line="13" pos:column="17"/></condition><then pos:line="13" pos:column="17"> <block pos:line="13" pos:column="18">{
        <return pos:line="14" pos:column="9">return <expr><literal type="string" pos:line="14" pos:column="16">"FilterProtocol: No such filter"<pos:position pos:line="14" pos:column="48"/></literal></expr>;<pos:position pos:line="14" pos:column="49"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/* Fixup the args: it's really pname that's optional */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">proto<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">==<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">NULL<pos:position pos:line="18" pos:column="22"/></name></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23"> <block pos:line="18" pos:column="24">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">proto<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">pname<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">pname<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">NULL<pos:position pos:line="20" pos:column="21"/></name></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then>
    <else pos:line="22" pos:column="5">else <block pos:line="22" pos:column="10">{
        <comment type="block" pos:line="23" pos:column="9">/* Find provider */</comment>
        <for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><expr><name pos:line="24" pos:column="14">provider<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <name><name pos:line="24" pos:column="25">filter<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">-&gt;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="33">providers<pos:position pos:line="24" pos:column="42"/></name></name></expr>;<pos:position pos:line="24" pos:column="43"/></init> <condition><expr><name pos:line="24" pos:column="44">provider<pos:position pos:line="24" pos:column="52"/></name></expr>;<pos:position pos:line="24" pos:column="53"/></condition> <incr><expr><name pos:line="24" pos:column="54">provider<pos:position pos:line="24" pos:column="62"/></name> <operator pos:line="24" pos:column="63">=<pos:position pos:line="24" pos:column="64"/></operator> <name><name pos:line="24" pos:column="65">provider<pos:position pos:line="24" pos:column="73"/></name><operator pos:line="24" pos:column="73">-&gt;<pos:position pos:line="24" pos:column="78"/></operator><name pos:line="24" pos:column="75">next<pos:position pos:line="24" pos:column="79"/></name></name></expr></incr>)<pos:position pos:line="24" pos:column="80"/></control><block pos:line="24" pos:column="80">{
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><operator pos:line="25" pos:column="17">!<pos:position pos:line="25" pos:column="18"/></operator><call><name pos:line="25" pos:column="18">strcasecmp<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name><name pos:line="25" pos:column="29">provider<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">-&gt;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="39">frec<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">name<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">pname<pos:position pos:line="25" pos:column="56"/></name></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="58"/></condition><then pos:line="25" pos:column="58"> <block pos:line="25" pos:column="59">{
                <break pos:line="26" pos:column="17">break;<pos:position pos:line="26" pos:column="23"/></break>
            }<pos:position pos:line="27" pos:column="14"/></block></then></if>
        }<pos:position pos:line="28" pos:column="10"/></block></for>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">provider<pos:position pos:line="29" pos:column="22"/></name></expr>)<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23"> <block pos:line="29" pos:column="24">{
            <return pos:line="30" pos:column="13">return <expr><literal type="string" pos:line="30" pos:column="20">"FilterProtocol: No such provider for this filter"<pos:position pos:line="30" pos:column="70"/></literal></expr>;<pos:position pos:line="30" pos:column="71"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="34" pos:column="5">/* Now set flags from our args */</comment>
    <for pos:line="35" pos:column="5">for <control pos:line="35" pos:column="9">(<init><expr><name pos:line="35" pos:column="10">arg<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <call><name pos:line="35" pos:column="16">apr_strtok<pos:position pos:line="35" pos:column="26"/></name><argument_list pos:line="35" pos:column="26">(<argument><expr><call><name pos:line="35" pos:column="27">apr_pstrdup<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name><name pos:line="35" pos:column="39">cmd<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">-&gt;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="44">pool<pos:position pos:line="35" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">proto<pos:position pos:line="35" pos:column="55"/></name></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="35" pos:column="58">sep<pos:position pos:line="35" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="63">&amp;<pos:position pos:line="35" pos:column="68"/></operator><name pos:line="35" pos:column="64">tok<pos:position pos:line="35" pos:column="67"/></name></expr></argument>)<pos:position pos:line="35" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="69"/></init>
         <condition><expr><name pos:line="36" pos:column="10">arg<pos:position pos:line="36" pos:column="13"/></name></expr>;<pos:position pos:line="36" pos:column="14"/></condition> <incr><expr><name pos:line="36" pos:column="15">arg<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <call><name pos:line="36" pos:column="21">apr_strtok<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name pos:line="36" pos:column="32">NULL<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="38">sep<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="43">&amp;<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="44">tok<pos:position pos:line="36" pos:column="47"/></name></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call></expr></incr>)<pos:position pos:line="36" pos:column="49"/></control> <block pos:line="36" pos:column="50">{

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><call><name pos:line="38" pos:column="14">strcasecmp<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">arg<pos:position pos:line="38" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="30">"change=yes"<pos:position pos:line="38" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="44"/></condition><then pos:line="38" pos:column="44"> <block pos:line="38" pos:column="45">{
            <expr_stmt><expr><name pos:line="39" pos:column="13">flags<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">|=<pos:position pos:line="39" pos:column="21"/></operator> <name pos:line="39" pos:column="22">AP_FILTER_PROTO_CHANGE<pos:position pos:line="39" pos:column="44"/></name> <operator pos:line="39" pos:column="45">|<pos:position pos:line="39" pos:column="46"/></operator> <name pos:line="39" pos:column="47">AP_FILTER_PROTO_CHANGE_LENGTH<pos:position pos:line="39" pos:column="76"/></name></expr>;<pos:position pos:line="39" pos:column="77"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><call><name pos:line="41" pos:column="14">strcasecmp<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">arg<pos:position pos:line="41" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="30">"change=no"<pos:position pos:line="41" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="43"/></condition><then pos:line="41" pos:column="43"> <block pos:line="41" pos:column="44">{
            <expr_stmt><expr><name pos:line="42" pos:column="13">flags<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">&amp;=<pos:position pos:line="42" pos:column="25"/></operator> <operator pos:line="42" pos:column="22">~<pos:position pos:line="42" pos:column="23"/></operator><operator pos:line="42" pos:column="23">(<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="24">AP_FILTER_PROTO_CHANGE<pos:position pos:line="42" pos:column="46"/></name> <operator pos:line="42" pos:column="47">|<pos:position pos:line="42" pos:column="48"/></operator> <name pos:line="42" pos:column="49">AP_FILTER_PROTO_CHANGE_LENGTH<pos:position pos:line="42" pos:column="78"/></name><operator pos:line="42" pos:column="78">)<pos:position pos:line="42" pos:column="79"/></operator></expr>;<pos:position pos:line="42" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></then>
        <elseif pos:line="44" pos:column="9">else <if pos:line="44" pos:column="14">if <condition pos:line="44" pos:column="17">(<expr><operator pos:line="44" pos:column="18">!<pos:position pos:line="44" pos:column="19"/></operator><call><name pos:line="44" pos:column="19">strcasecmp<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><name pos:line="44" pos:column="30">arg<pos:position pos:line="44" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="35">"change=1:1"<pos:position pos:line="44" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="49"/></condition><then pos:line="44" pos:column="49"> <block pos:line="44" pos:column="50">{
            <expr_stmt><expr><name pos:line="45" pos:column="13">flags<pos:position pos:line="45" pos:column="18"/></name> <operator pos:line="45" pos:column="19">|=<pos:position pos:line="45" pos:column="21"/></operator> <name pos:line="45" pos:column="22">AP_FILTER_PROTO_CHANGE<pos:position pos:line="45" pos:column="44"/></name></expr>;<pos:position pos:line="45" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="47" pos:column="9">else <if pos:line="47" pos:column="14">if <condition pos:line="47" pos:column="17">(<expr><operator pos:line="47" pos:column="18">!<pos:position pos:line="47" pos:column="19"/></operator><call><name pos:line="47" pos:column="19">strcasecmp<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">arg<pos:position pos:line="47" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="35">"byteranges=no"<pos:position pos:line="47" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="52"/></condition><then pos:line="47" pos:column="52"> <block pos:line="47" pos:column="53">{
            <expr_stmt><expr><name pos:line="48" pos:column="13">flags<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">|=<pos:position pos:line="48" pos:column="21"/></operator> <name pos:line="48" pos:column="22">AP_FILTER_PROTO_NO_BYTERANGE<pos:position pos:line="48" pos:column="50"/></name></expr>;<pos:position pos:line="48" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="50" pos:column="9">else <if pos:line="50" pos:column="14">if <condition pos:line="50" pos:column="17">(<expr><operator pos:line="50" pos:column="18">!<pos:position pos:line="50" pos:column="19"/></operator><call><name pos:line="50" pos:column="19">strcasecmp<pos:position pos:line="50" pos:column="29"/></name><argument_list pos:line="50" pos:column="29">(<argument><expr><name pos:line="50" pos:column="30">arg<pos:position pos:line="50" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="35">"proxy=no"<pos:position pos:line="50" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="47"/></condition><then pos:line="50" pos:column="47"> <block pos:line="50" pos:column="48">{
            <expr_stmt><expr><name pos:line="51" pos:column="13">flags<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">|=<pos:position pos:line="51" pos:column="21"/></operator> <name pos:line="51" pos:column="22">AP_FILTER_PROTO_NO_PROXY<pos:position pos:line="51" pos:column="46"/></name></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="53" pos:column="9">else <if pos:line="53" pos:column="14">if <condition pos:line="53" pos:column="17">(<expr><operator pos:line="53" pos:column="18">!<pos:position pos:line="53" pos:column="19"/></operator><call><name pos:line="53" pos:column="19">strcasecmp<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><name pos:line="53" pos:column="30">arg<pos:position pos:line="53" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="35">"proxy=transform"<pos:position pos:line="53" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="54"/></condition><then pos:line="53" pos:column="54"> <block pos:line="53" pos:column="55">{
            <expr_stmt><expr><name pos:line="54" pos:column="13">flags<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">|=<pos:position pos:line="54" pos:column="21"/></operator> <name pos:line="54" pos:column="22">AP_FILTER_PROTO_TRANSFORM<pos:position pos:line="54" pos:column="47"/></name></expr>;<pos:position pos:line="54" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="56" pos:column="9">else <if pos:line="56" pos:column="14">if <condition pos:line="56" pos:column="17">(<expr><operator pos:line="56" pos:column="18">!<pos:position pos:line="56" pos:column="19"/></operator><call><name pos:line="56" pos:column="19">strcasecmp<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">arg<pos:position pos:line="56" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="35">"cache=no"<pos:position pos:line="56" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="47"/></condition><then pos:line="56" pos:column="47"> <block pos:line="56" pos:column="48">{
            <expr_stmt><expr><name pos:line="57" pos:column="13">flags<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">|=<pos:position pos:line="57" pos:column="21"/></operator> <name pos:line="57" pos:column="22">AP_FILTER_PROTO_NO_CACHE<pos:position pos:line="57" pos:column="46"/></name></expr>;<pos:position pos:line="57" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="59" pos:column="6"/></block></for>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">pname<pos:position pos:line="61" pos:column="14"/></name></expr>)<pos:position pos:line="61" pos:column="15"/></condition><then pos:line="61" pos:column="15"> <block pos:line="61" pos:column="16">{
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">provider<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">-&gt;<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="19">frec<pos:position pos:line="62" pos:column="23"/></name><operator pos:line="62" pos:column="23">-&gt;<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="25">proto_flags<pos:position pos:line="62" pos:column="36"/></name></name> <operator pos:line="62" pos:column="37">=<pos:position pos:line="62" pos:column="38"/></operator> <name pos:line="62" pos:column="39">flags<pos:position pos:line="62" pos:column="44"/></name></expr>;<pos:position pos:line="62" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then>
    <else pos:line="64" pos:column="5">else <block pos:line="64" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="65" pos:column="9">filter<pos:position pos:line="65" pos:column="15"/></name><operator pos:line="65" pos:column="15">-&gt;<pos:position pos:line="65" pos:column="20"/></operator><name pos:line="65" pos:column="17">proto_flags<pos:position pos:line="65" pos:column="28"/></name></name> <operator pos:line="65" pos:column="29">=<pos:position pos:line="65" pos:column="30"/></operator> <name pos:line="65" pos:column="31">flags<pos:position pos:line="65" pos:column="36"/></name></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></else></if>

    <return pos:line="68" pos:column="5">return <expr><name pos:line="68" pos:column="12">NULL<pos:position pos:line="68" pos:column="16"/></name></expr>;<pos:position pos:line="68" pos:column="17"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

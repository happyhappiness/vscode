<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2168_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">slotmem_do<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">ap_slotmem_instance_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">mem<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">ap_slotmem_callback_fn_t<pos:position pos:line="1" pos:column="84"/></name> <modifier pos:line="1" pos:column="85">*<pos:position pos:line="1" pos:column="86"/></modifier></type><name pos:line="1" pos:column="86">func<pos:position pos:line="1" pos:column="90"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="92">void<pos:position pos:line="1" pos:column="96"/></name> <modifier pos:line="1" pos:column="97">*<pos:position pos:line="1" pos:column="98"/></modifier></type><name pos:line="1" pos:column="98">data<pos:position pos:line="1" pos:column="102"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="104">apr_pool_t<pos:position pos:line="1" pos:column="114"/></name> <modifier pos:line="1" pos:column="115">*<pos:position pos:line="1" pos:column="116"/></modifier></type><name pos:line="1" pos:column="116">pool<pos:position pos:line="1" pos:column="120"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="121"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">unsigned<pos:position pos:line="3" pos:column="13"/></name> <name pos:line="3" pos:column="14">int<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">i<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">void<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">ptr<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">inuse<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">retval<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">APR_SUCCESS<pos:position pos:line="6" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
    

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">mem<pos:position pos:line="9" pos:column="13"/></name></expr>)<pos:position pos:line="9" pos:column="14"/></condition><then pos:line="9" pos:column="14">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">APR_ENOSHMAVAIL<pos:position pos:line="10" pos:column="31"/></name></expr>;<pos:position pos:line="10" pos:column="32"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="12" pos:column="5">ptr<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <name><name pos:line="12" pos:column="11">mem<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">base<pos:position pos:line="12" pos:column="20"/></name></name></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">inuse<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <name><name pos:line="13" pos:column="13">mem<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">inuse<pos:position pos:line="13" pos:column="23"/></name></name></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">i<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>;<pos:position pos:line="14" pos:column="16"/></init> <condition><expr><name pos:line="14" pos:column="17">i<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">&lt;<pos:position pos:line="14" pos:column="23"/></operator> <name><name pos:line="14" pos:column="21">mem<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">num<pos:position pos:line="14" pos:column="29"/></name></name></expr>;<pos:position pos:line="14" pos:column="30"/></condition> <incr><expr><name pos:line="14" pos:column="31">i<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">++<pos:position pos:line="14" pos:column="34"/></operator></expr><operator pos:line="14" pos:column="34">,<pos:position pos:line="14" pos:column="35"/></operator> <expr><name pos:line="14" pos:column="36">inuse<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">++<pos:position pos:line="14" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="44"/></control> <block pos:line="14" pos:column="45">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><call><name pos:line="15" pos:column="14">AP_SLOTMEM_IS_PREGRAB<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">mem<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call> <operator pos:line="15" pos:column="41">||<pos:position pos:line="15" pos:column="43"/></operator>
           <operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><call><name pos:line="16" pos:column="13">AP_SLOTMEM_IS_PREGRAB<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">mem<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call> <operator pos:line="16" pos:column="40">&amp;&amp;<pos:position pos:line="16" pos:column="50"/></operator> <operator pos:line="16" pos:column="43">*<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">inuse<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">)<pos:position pos:line="16" pos:column="50"/></operator></expr>)<pos:position pos:line="16" pos:column="51"/></condition><then pos:line="16" pos:column="51"> <block pos:line="16" pos:column="52">{
            <expr_stmt><expr><name pos:line="17" pos:column="13">retval<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <call><name pos:line="17" pos:column="22">func<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><operator pos:line="17" pos:column="27">(<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">void<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">*<pos:position pos:line="17" pos:column="34"/></operator><operator pos:line="17" pos:column="34">)<pos:position pos:line="17" pos:column="35"/></operator> <name pos:line="17" pos:column="36">ptr<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="41">data<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="47">pool<pos:position pos:line="17" pos:column="51"/></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><name pos:line="18" pos:column="17">retval<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">!=<pos:position pos:line="18" pos:column="26"/></operator> <name pos:line="18" pos:column="27">APR_SUCCESS<pos:position pos:line="18" pos:column="38"/></name></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39">
                <block type="pseudo"><break pos:line="19" pos:column="17">break;<pos:position pos:line="19" pos:column="23"/></break></block></then></if>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="21" pos:column="9">ptr<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">+=<pos:position pos:line="21" pos:column="15"/></operator> <name><name pos:line="21" pos:column="16">mem<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">size<pos:position pos:line="21" pos:column="25"/></name></name></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></for>
    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">retval<pos:position pos:line="23" pos:column="18"/></name></expr>;<pos:position pos:line="23" pos:column="19"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2736_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier><name pos:line="1" pos:column="14">APR_THREAD_FUNC<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">thread_pool_func<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name pos:line="1" pos:column="47">apr_thread_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type> <name pos:line="1" pos:column="62">t<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">void<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">param<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">APR_SUCCESS<pos:position pos:line="3" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_thread_pool_t<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">me<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">param<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_thread_pool_task_t<pos:position pos:line="5" pos:column="27"/></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">task<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><name pos:line="5" pos:column="36">NULL<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_interval_time_t<pos:position pos:line="6" pos:column="24"/></name></type> <name pos:line="6" pos:column="25">wait<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">apr_thread_list_elt<pos:position pos:line="7" pos:column="31"/></name></name> <modifier pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></modifier></type><name pos:line="7" pos:column="33">elt<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">apr_thread_mutex_lock<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name><name pos:line="9" pos:column="27">me<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">lock<pos:position pos:line="9" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">elt<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">elt_new<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">me<pos:position pos:line="10" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="23">t<pos:position pos:line="10" pos:column="24"/></name></expr></argument>)<pos:position pos:line="10" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">elt<pos:position pos:line="11" pos:column="13"/></name></expr>)<pos:position pos:line="11" pos:column="14"/></condition><then pos:line="11" pos:column="14"> <block pos:line="11" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name><name pos:line="12" pos:column="33">me<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">lock<pos:position pos:line="12" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">apr_thread_exit<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">t<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">APR_ENOMEM<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <while pos:line="16" pos:column="5">while <condition pos:line="16" pos:column="11">(<expr><operator pos:line="16" pos:column="12">!<pos:position pos:line="16" pos:column="13"/></operator><name><name pos:line="16" pos:column="13">me<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">terminated<pos:position pos:line="16" pos:column="27"/></name></name> <operator pos:line="16" pos:column="28">&amp;&amp;<pos:position pos:line="16" pos:column="38"/></operator> <name><name pos:line="16" pos:column="31">elt<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">-&gt;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="36">state<pos:position pos:line="16" pos:column="41"/></name></name> <operator pos:line="16" pos:column="42">!=<pos:position pos:line="16" pos:column="44"/></operator> <name pos:line="16" pos:column="45">TH_STOP<pos:position pos:line="16" pos:column="52"/></name></expr>)<pos:position pos:line="16" pos:column="53"/></condition> <block pos:line="16" pos:column="54">{
        <comment type="block" pos:line="17" pos:column="9">/* Test if not new element, it is awakened from idle */</comment>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">APR_RING_NEXT<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">elt<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="32">link<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call> <operator pos:line="18" pos:column="38">!=<pos:position pos:line="18" pos:column="40"/></operator> <name pos:line="18" pos:column="41">elt<pos:position pos:line="18" pos:column="44"/></name></expr>)<pos:position pos:line="18" pos:column="45"/></condition><then pos:line="18" pos:column="45"> <block pos:line="18" pos:column="46">{
            <expr_stmt><expr><operator pos:line="19" pos:column="13">--<pos:position pos:line="19" pos:column="15"/></operator><name><name pos:line="19" pos:column="15">me<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">idle_cnt<pos:position pos:line="19" pos:column="27"/></name></name></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">APR_RING_REMOVE<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">elt<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">link<pos:position pos:line="20" pos:column="38"/></name></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="23" pos:column="9">APR_RING_INSERT_TAIL<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name><name pos:line="23" pos:column="30">me<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">-&gt;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="34">busy_thds<pos:position pos:line="23" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">elt<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="50">apr_thread_list_elt<pos:position pos:line="23" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="71">link<pos:position pos:line="23" pos:column="75"/></name></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><name pos:line="24" pos:column="9">task<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">pop_task<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">me<pos:position pos:line="24" pos:column="27"/></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
        <while pos:line="25" pos:column="9">while <condition pos:line="25" pos:column="15">(<expr><name pos:line="25" pos:column="16">NULL<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">!=<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">task<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">&amp;&amp;<pos:position pos:line="25" pos:column="39"/></operator> <operator pos:line="25" pos:column="32">!<pos:position pos:line="25" pos:column="33"/></operator><name><name pos:line="25" pos:column="33">me<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">terminated<pos:position pos:line="25" pos:column="47"/></name></name></expr>)<pos:position pos:line="25" pos:column="48"/></condition> <block pos:line="25" pos:column="49">{
            <expr_stmt><expr><operator pos:line="26" pos:column="13">++<pos:position pos:line="26" pos:column="15"/></operator><name><name pos:line="26" pos:column="15">me<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">tasks_run<pos:position pos:line="26" pos:column="28"/></name></name></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="27" pos:column="13">elt<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">current_owner<pos:position pos:line="27" pos:column="31"/></name></name> <operator pos:line="27" pos:column="32">=<pos:position pos:line="27" pos:column="33"/></operator> <name><name pos:line="27" pos:column="34">task<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">-&gt;<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="40">owner<pos:position pos:line="27" pos:column="45"/></name></name></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">apr_thread_mutex_unlock<pos:position pos:line="28" pos:column="36"/></name><argument_list pos:line="28" pos:column="36">(<argument><expr><name><name pos:line="28" pos:column="37">me<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">lock<pos:position pos:line="28" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">apr_thread_data_set<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">task<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="39">"apr_thread_pool_task"<pos:position pos:line="29" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="63">NULL<pos:position pos:line="29" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="69">t<pos:position pos:line="29" pos:column="70"/></name></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">task<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">func<pos:position pos:line="30" pos:column="23"/></name></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">t<pos:position pos:line="30" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="27">task<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">-&gt;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="33">param<pos:position pos:line="30" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">apr_thread_mutex_lock<pos:position pos:line="31" pos:column="34"/></name><argument_list pos:line="31" pos:column="34">(<argument><expr><name><name pos:line="31" pos:column="35">me<pos:position pos:line="31" pos:column="37"/></name><operator pos:line="31" pos:column="37">-&gt;<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="39">lock<pos:position pos:line="31" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">APR_RING_INSERT_TAIL<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name><name pos:line="32" pos:column="34">me<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">recycled_tasks<pos:position pos:line="32" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="54">task<pos:position pos:line="32" pos:column="58"/></name></expr></argument>,
                                 <argument><expr><name pos:line="33" pos:column="34">apr_thread_pool_task<pos:position pos:line="33" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="56">link<pos:position pos:line="33" pos:column="60"/></name></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">elt<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">current_owner<pos:position pos:line="34" pos:column="31"/></name></name> <operator pos:line="34" pos:column="32">=<pos:position pos:line="34" pos:column="33"/></operator> <name pos:line="34" pos:column="34">NULL<pos:position pos:line="34" pos:column="38"/></name></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>
            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><name pos:line="35" pos:column="17">TH_STOP<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">==<pos:position pos:line="35" pos:column="27"/></operator> <name><name pos:line="35" pos:column="28">elt<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">-&gt;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="33">state<pos:position pos:line="35" pos:column="38"/></name></name></expr>)<pos:position pos:line="35" pos:column="39"/></condition><then pos:line="35" pos:column="39"> <block pos:line="35" pos:column="40">{
                <break pos:line="36" pos:column="17">break;<pos:position pos:line="36" pos:column="23"/></break>
            }<pos:position pos:line="37" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="38" pos:column="13">task<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <call><name pos:line="38" pos:column="20">pop_task<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">me<pos:position pos:line="38" pos:column="31"/></name></expr></argument>)<pos:position pos:line="38" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">assert<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><name pos:line="40" pos:column="16">NULL<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">==<pos:position pos:line="40" pos:column="23"/></operator> <name><name pos:line="40" pos:column="24">elt<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">-&gt;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="29">current_owner<pos:position pos:line="40" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">TH_STOP<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">!=<pos:position pos:line="41" pos:column="23"/></operator> <name><name pos:line="41" pos:column="24">elt<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">state<pos:position pos:line="41" pos:column="34"/></name></name></expr>)<pos:position pos:line="41" pos:column="35"/></condition><then pos:line="41" pos:column="35">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="13">APR_RING_REMOVE<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">elt<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="34">link<pos:position pos:line="42" pos:column="38"/></name></expr></argument>)<pos:position pos:line="42" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="44" pos:column="9">/* Test if a busy thread been asked to stop, which is not joinable */</comment>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">(<pos:position pos:line="45" pos:column="14"/></operator><name><name pos:line="45" pos:column="14">me<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">-&gt;<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="18">idle_cnt<pos:position pos:line="45" pos:column="26"/></name></name> <operator pos:line="45" pos:column="27">&gt;=<pos:position pos:line="45" pos:column="32"/></operator> <name><name pos:line="45" pos:column="30">me<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">-&gt;<pos:position pos:line="45" pos:column="37"/></operator><name pos:line="45" pos:column="34">idle_max<pos:position pos:line="45" pos:column="42"/></name></name>
             <operator pos:line="46" pos:column="14">&amp;&amp;<pos:position pos:line="46" pos:column="24"/></operator> <operator pos:line="46" pos:column="17">!<pos:position pos:line="46" pos:column="18"/></operator><operator pos:line="46" pos:column="18">(<pos:position pos:line="46" pos:column="19"/></operator><name><name pos:line="46" pos:column="19">me<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">-&gt;<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="23">scheduled_task_cnt<pos:position pos:line="46" pos:column="41"/></name></name> <operator pos:line="46" pos:column="42">&amp;&amp;<pos:position pos:line="46" pos:column="52"/></operator> <literal type="number" pos:line="46" pos:column="45">0<pos:position pos:line="46" pos:column="46"/></literal> <operator pos:line="46" pos:column="47">&gt;=<pos:position pos:line="46" pos:column="52"/></operator> <name><name pos:line="46" pos:column="50">me<pos:position pos:line="46" pos:column="52"/></name><operator pos:line="46" pos:column="52">-&gt;<pos:position pos:line="46" pos:column="57"/></operator><name pos:line="46" pos:column="54">idle_max<pos:position pos:line="46" pos:column="62"/></name></name><operator pos:line="46" pos:column="62">)<pos:position pos:line="46" pos:column="63"/></operator>
             <operator pos:line="47" pos:column="14">&amp;&amp;<pos:position pos:line="47" pos:column="24"/></operator> <operator pos:line="47" pos:column="17">!<pos:position pos:line="47" pos:column="18"/></operator><name><name pos:line="47" pos:column="18">me<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">-&gt;<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="22">idle_wait<pos:position pos:line="47" pos:column="31"/></name></name><operator pos:line="47" pos:column="31">)<pos:position pos:line="47" pos:column="32"/></operator>
            <operator pos:line="48" pos:column="13">||<pos:position pos:line="48" pos:column="15"/></operator> <name><name pos:line="48" pos:column="16">me<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">-&gt;<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="20">terminated<pos:position pos:line="48" pos:column="30"/></name></name> <operator pos:line="48" pos:column="31">||<pos:position pos:line="48" pos:column="33"/></operator> <name><name pos:line="48" pos:column="34">elt<pos:position pos:line="48" pos:column="37"/></name><operator pos:line="48" pos:column="37">-&gt;<pos:position pos:line="48" pos:column="42"/></operator><name pos:line="48" pos:column="39">state<pos:position pos:line="48" pos:column="44"/></name></name> <operator pos:line="48" pos:column="45">!=<pos:position pos:line="48" pos:column="47"/></operator> <name pos:line="48" pos:column="48">TH_RUN<pos:position pos:line="48" pos:column="54"/></name></expr>)<pos:position pos:line="48" pos:column="55"/></condition><then pos:line="48" pos:column="55"> <block pos:line="48" pos:column="56">{
            <expr_stmt><expr><operator pos:line="49" pos:column="13">--<pos:position pos:line="49" pos:column="15"/></operator><name><name pos:line="49" pos:column="15">me<pos:position pos:line="49" pos:column="17"/></name><operator pos:line="49" pos:column="17">-&gt;<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="19">thd_cnt<pos:position pos:line="49" pos:column="26"/></name></name></expr>;<pos:position pos:line="49" pos:column="27"/></expr_stmt>
            <if pos:line="50" pos:column="13">if <condition pos:line="50" pos:column="16">(<expr><operator pos:line="50" pos:column="17">(<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="18">TH_PROBATION<pos:position pos:line="50" pos:column="30"/></name> <operator pos:line="50" pos:column="31">==<pos:position pos:line="50" pos:column="33"/></operator> <name><name pos:line="50" pos:column="34">elt<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">-&gt;<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="39">state<pos:position pos:line="50" pos:column="44"/></name></name><operator pos:line="50" pos:column="44">)<pos:position pos:line="50" pos:column="45"/></operator> <operator pos:line="50" pos:column="46">&amp;&amp;<pos:position pos:line="50" pos:column="56"/></operator> <name><name pos:line="50" pos:column="49">me<pos:position pos:line="50" pos:column="51"/></name><operator pos:line="50" pos:column="51">-&gt;<pos:position pos:line="50" pos:column="56"/></operator><name pos:line="50" pos:column="53">idle_wait<pos:position pos:line="50" pos:column="62"/></name></name></expr>)<pos:position pos:line="50" pos:column="63"/></condition><then pos:line="50" pos:column="63">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="51" pos:column="17">++<pos:position pos:line="51" pos:column="19"/></operator><name><name pos:line="51" pos:column="19">me<pos:position pos:line="51" pos:column="21"/></name><operator pos:line="51" pos:column="21">-&gt;<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="23">thd_timed_out<pos:position pos:line="51" pos:column="36"/></name></name></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">APR_RING_INSERT_TAIL<pos:position pos:line="52" pos:column="33"/></name><argument_list pos:line="52" pos:column="33">(<argument><expr><name><name pos:line="52" pos:column="34">me<pos:position pos:line="52" pos:column="36"/></name><operator pos:line="52" pos:column="36">-&gt;<pos:position pos:line="52" pos:column="41"/></operator><name pos:line="52" pos:column="38">recycled_thds<pos:position pos:line="52" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="53">elt<pos:position pos:line="52" pos:column="56"/></name></expr></argument>,
                                 <argument><expr><name pos:line="53" pos:column="34">apr_thread_list_elt<pos:position pos:line="53" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="55">link<pos:position pos:line="53" pos:column="59"/></name></expr></argument>)<pos:position pos:line="53" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">apr_thread_mutex_unlock<pos:position pos:line="54" pos:column="36"/></name><argument_list pos:line="54" pos:column="36">(<argument><expr><name><name pos:line="54" pos:column="37">me<pos:position pos:line="54" pos:column="39"/></name><operator pos:line="54" pos:column="39">-&gt;<pos:position pos:line="54" pos:column="44"/></operator><name pos:line="54" pos:column="41">lock<pos:position pos:line="54" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">apr_thread_detach<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><name pos:line="55" pos:column="31">t<pos:position pos:line="55" pos:column="32"/></name></expr></argument>)<pos:position pos:line="55" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">apr_thread_exit<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><name pos:line="56" pos:column="29">t<pos:position pos:line="56" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="32">APR_SUCCESS<pos:position pos:line="56" pos:column="43"/></name></expr></argument>)<pos:position pos:line="56" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="45"/></expr_stmt>
            <return pos:line="57" pos:column="13">return <expr><name pos:line="57" pos:column="20">NULL<pos:position pos:line="57" pos:column="24"/></name></expr>;<pos:position pos:line="57" pos:column="25"/></return>        <comment type="block" pos:line="57" pos:column="33">/* should not be here, safe net */</comment>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="60" pos:column="9">/* busy thread become idle */</comment>
        <expr_stmt><expr><operator pos:line="61" pos:column="9">++<pos:position pos:line="61" pos:column="11"/></operator><name><name pos:line="61" pos:column="11">me<pos:position pos:line="61" pos:column="13"/></name><operator pos:line="61" pos:column="13">-&gt;<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="15">idle_cnt<pos:position pos:line="61" pos:column="23"/></name></name></expr>;<pos:position pos:line="61" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">APR_RING_INSERT_TAIL<pos:position pos:line="62" pos:column="29"/></name><argument_list pos:line="62" pos:column="29">(<argument><expr><name><name pos:line="62" pos:column="30">me<pos:position pos:line="62" pos:column="32"/></name><operator pos:line="62" pos:column="32">-&gt;<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="34">idle_thds<pos:position pos:line="62" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="45">elt<pos:position pos:line="62" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="50">apr_thread_list_elt<pos:position pos:line="62" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="71">link<pos:position pos:line="62" pos:column="75"/></name></expr></argument>)<pos:position pos:line="62" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="77"/></expr_stmt>

        <comment type="block" pos:line="64" pos:column="9">/* 
         * If there is a scheduled task, always scheduled to perform that task.
         * Since there is no guarantee that current idle threads are scheduled
         * for next scheduled task.
         */</comment>
        <if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name><name pos:line="69" pos:column="13">me<pos:position pos:line="69" pos:column="15"/></name><operator pos:line="69" pos:column="15">-&gt;<pos:position pos:line="69" pos:column="20"/></operator><name pos:line="69" pos:column="17">scheduled_task_cnt<pos:position pos:line="69" pos:column="35"/></name></name></expr>)<pos:position pos:line="69" pos:column="36"/></condition><then pos:line="69" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><name pos:line="70" pos:column="13">wait<pos:position pos:line="70" pos:column="17"/></name> <operator pos:line="70" pos:column="18">=<pos:position pos:line="70" pos:column="19"/></operator> <call><name pos:line="70" pos:column="20">waiting_time<pos:position pos:line="70" pos:column="32"/></name><argument_list pos:line="70" pos:column="32">(<argument><expr><name pos:line="70" pos:column="33">me<pos:position pos:line="70" pos:column="35"/></name></expr></argument>)<pos:position pos:line="70" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="37"/></expr_stmt></block></then>
        <elseif pos:line="71" pos:column="9">else <if pos:line="71" pos:column="14">if <condition pos:line="71" pos:column="17">(<expr><name><name pos:line="71" pos:column="18">me<pos:position pos:line="71" pos:column="20"/></name><operator pos:line="71" pos:column="20">-&gt;<pos:position pos:line="71" pos:column="25"/></operator><name pos:line="71" pos:column="22">idle_cnt<pos:position pos:line="71" pos:column="30"/></name></name> <operator pos:line="71" pos:column="31">&gt;<pos:position pos:line="71" pos:column="35"/></operator> <name><name pos:line="71" pos:column="33">me<pos:position pos:line="71" pos:column="35"/></name><operator pos:line="71" pos:column="35">-&gt;<pos:position pos:line="71" pos:column="40"/></operator><name pos:line="71" pos:column="37">idle_max<pos:position pos:line="71" pos:column="45"/></name></name></expr>)<pos:position pos:line="71" pos:column="46"/></condition><then pos:line="71" pos:column="46"> <block pos:line="71" pos:column="47">{
            <expr_stmt><expr><name pos:line="72" pos:column="13">wait<pos:position pos:line="72" pos:column="17"/></name> <operator pos:line="72" pos:column="18">=<pos:position pos:line="72" pos:column="19"/></operator> <name><name pos:line="72" pos:column="20">me<pos:position pos:line="72" pos:column="22"/></name><operator pos:line="72" pos:column="22">-&gt;<pos:position pos:line="72" pos:column="27"/></operator><name pos:line="72" pos:column="24">idle_wait<pos:position pos:line="72" pos:column="33"/></name></name></expr>;<pos:position pos:line="72" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="73" pos:column="13">elt<pos:position pos:line="73" pos:column="16"/></name><operator pos:line="73" pos:column="16">-&gt;<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="18">state<pos:position pos:line="73" pos:column="23"/></name></name> <operator pos:line="73" pos:column="24">=<pos:position pos:line="73" pos:column="25"/></operator> <name pos:line="73" pos:column="26">TH_PROBATION<pos:position pos:line="73" pos:column="38"/></name></expr>;<pos:position pos:line="73" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if></elseif>
        <else pos:line="75" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="13">wait<pos:position pos:line="76" pos:column="17"/></name> <operator pos:line="76" pos:column="18">=<pos:position pos:line="76" pos:column="19"/></operator> <operator pos:line="76" pos:column="20">-<pos:position pos:line="76" pos:column="21"/></operator><literal type="number" pos:line="76" pos:column="21">1<pos:position pos:line="76" pos:column="22"/></literal></expr>;<pos:position pos:line="76" pos:column="23"/></expr_stmt></block></else></if>

        <if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name pos:line="78" pos:column="13">wait<pos:position pos:line="78" pos:column="17"/></name> <operator pos:line="78" pos:column="18">&gt;=<pos:position pos:line="78" pos:column="23"/></operator> <literal type="number" pos:line="78" pos:column="21">0<pos:position pos:line="78" pos:column="22"/></literal></expr>)<pos:position pos:line="78" pos:column="23"/></condition><then pos:line="78" pos:column="23"> <block pos:line="78" pos:column="24">{
            <expr_stmt><expr><name pos:line="79" pos:column="13">rv<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">=<pos:position pos:line="79" pos:column="17"/></operator> <call><name pos:line="79" pos:column="18">apr_thread_cond_timedwait<pos:position pos:line="79" pos:column="43"/></name><argument_list pos:line="79" pos:column="43">(<argument><expr><name><name pos:line="79" pos:column="44">me<pos:position pos:line="79" pos:column="46"/></name><operator pos:line="79" pos:column="46">-&gt;<pos:position pos:line="79" pos:column="51"/></operator><name pos:line="79" pos:column="48">cond<pos:position pos:line="79" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="54">me<pos:position pos:line="79" pos:column="56"/></name><operator pos:line="79" pos:column="56">-&gt;<pos:position pos:line="79" pos:column="61"/></operator><name pos:line="79" pos:column="58">lock<pos:position pos:line="79" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="64">wait<pos:position pos:line="79" pos:column="68"/></name></expr></argument>)<pos:position pos:line="79" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="80" pos:column="10"/></block></then>
        <else pos:line="81" pos:column="9">else <block pos:line="81" pos:column="14">{
            <expr_stmt><expr><name pos:line="82" pos:column="13">rv<pos:position pos:line="82" pos:column="15"/></name> <operator pos:line="82" pos:column="16">=<pos:position pos:line="82" pos:column="17"/></operator> <call><name pos:line="82" pos:column="18">apr_thread_cond_wait<pos:position pos:line="82" pos:column="38"/></name><argument_list pos:line="82" pos:column="38">(<argument><expr><name><name pos:line="82" pos:column="39">me<pos:position pos:line="82" pos:column="41"/></name><operator pos:line="82" pos:column="41">-&gt;<pos:position pos:line="82" pos:column="46"/></operator><name pos:line="82" pos:column="43">cond<pos:position pos:line="82" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="49">me<pos:position pos:line="82" pos:column="51"/></name><operator pos:line="82" pos:column="51">-&gt;<pos:position pos:line="82" pos:column="56"/></operator><name pos:line="82" pos:column="53">lock<pos:position pos:line="82" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="83" pos:column="10"/></block></else></if>
    }<pos:position pos:line="84" pos:column="6"/></block></while>

    <comment type="block" pos:line="86" pos:column="5">/* idle thread been asked to stop, will be joined */</comment>
    <expr_stmt><expr><operator pos:line="87" pos:column="5">--<pos:position pos:line="87" pos:column="7"/></operator><name><name pos:line="87" pos:column="7">me<pos:position pos:line="87" pos:column="9"/></name><operator pos:line="87" pos:column="9">-&gt;<pos:position pos:line="87" pos:column="14"/></operator><name pos:line="87" pos:column="11">thd_cnt<pos:position pos:line="87" pos:column="18"/></name></name></expr>;<pos:position pos:line="87" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">apr_thread_mutex_unlock<pos:position pos:line="88" pos:column="28"/></name><argument_list pos:line="88" pos:column="28">(<argument><expr><name><name pos:line="88" pos:column="29">me<pos:position pos:line="88" pos:column="31"/></name><operator pos:line="88" pos:column="31">-&gt;<pos:position pos:line="88" pos:column="36"/></operator><name pos:line="88" pos:column="33">lock<pos:position pos:line="88" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">apr_thread_exit<pos:position pos:line="89" pos:column="20"/></name><argument_list pos:line="89" pos:column="20">(<argument><expr><name pos:line="89" pos:column="21">t<pos:position pos:line="89" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="24">APR_SUCCESS<pos:position pos:line="89" pos:column="35"/></name></expr></argument>)<pos:position pos:line="89" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="37"/></expr_stmt>
    <return pos:line="90" pos:column="5">return <expr><name pos:line="90" pos:column="12">NULL<pos:position pos:line="90" pos:column="16"/></name></expr>;<pos:position pos:line="90" pos:column="17"/></return>                <comment type="block" pos:line="90" pos:column="33">/* should not be here, safe net */</comment>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

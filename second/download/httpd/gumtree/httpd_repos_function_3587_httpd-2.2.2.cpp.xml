<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3587_httpd-2.2.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">EXPORT<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">pcre<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">pcre_compile<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">pattern<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">options<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier> <name pos:line="2" pos:column="54">char<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier><modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">errorptr<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name> <modifier pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></modifier></type><name pos:line="3" pos:column="8">erroroffset<pos:position pos:line="3" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="21">const<pos:position pos:line="3" pos:column="26"/></specifier> <name pos:line="3" pos:column="27">unsigned<pos:position pos:line="3" pos:column="35"/></name> <name pos:line="3" pos:column="36">char<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">tables<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="49"/></parameter_list>
<block pos:line="4" pos:column="1">{
<decl_stmt><decl><type><name pos:line="5" pos:column="1">real_pcre<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">re<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="6" pos:column="1">int<pos:position pos:line="6" pos:column="4"/></name></type> <name pos:line="6" pos:column="5">length<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><literal type="number" pos:line="6" pos:column="14">1<pos:position pos:line="6" pos:column="15"/></literal> <operator pos:line="6" pos:column="16">+<pos:position pos:line="6" pos:column="17"/></operator> <name pos:line="6" pos:column="18">LINK_SIZE<pos:position pos:line="6" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>      <comment type="block" pos:line="6" pos:column="34">/* For initial BRA plus length */</comment>
<decl_stmt><decl><type><name pos:line="7" pos:column="1">int<pos:position pos:line="7" pos:column="4"/></name></type> <name pos:line="7" pos:column="5">c<pos:position pos:line="7" pos:column="6"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="8">firstbyte<pos:position pos:line="7" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="19">reqbyte<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="8" pos:column="1">int<pos:position pos:line="8" pos:column="4"/></name></type> <name pos:line="8" pos:column="5">bracount<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="9" pos:column="1">int<pos:position pos:line="9" pos:column="4"/></name></type> <name pos:line="9" pos:column="5">branch_extra<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="10" pos:column="1">int<pos:position pos:line="10" pos:column="4"/></name></type> <name pos:line="10" pos:column="5">branch_newextra<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="11" pos:column="1">int<pos:position pos:line="11" pos:column="4"/></name></type> <name pos:line="11" pos:column="5">item_count<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><operator pos:line="11" pos:column="18">-<pos:position pos:line="11" pos:column="19"/></operator><literal type="number" pos:line="11" pos:column="19">1<pos:position pos:line="11" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="12" pos:column="1">int<pos:position pos:line="12" pos:column="4"/></name></type> <name pos:line="12" pos:column="5">name_count<pos:position pos:line="12" pos:column="15"/></name> <init pos:line="12" pos:column="16">= <expr><literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="13" pos:column="1">int<pos:position pos:line="13" pos:column="4"/></name></type> <name pos:line="13" pos:column="5">max_name_size<pos:position pos:line="13" pos:column="18"/></name> <init pos:line="13" pos:column="19">= <expr><literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="14" pos:column="1">int<pos:position pos:line="14" pos:column="4"/></name></type> <name pos:line="14" pos:column="5">lastitemlength<pos:position pos:line="14" pos:column="19"/></name> <init pos:line="14" pos:column="20">= <expr><literal type="number" pos:line="14" pos:column="22">0<pos:position pos:line="14" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="24"/></decl_stmt>
<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">SUPPORT_UTF8<pos:position pos:line="15" pos:column="20"/></name></cpp:ifdef>
<decl_stmt><decl><type><name pos:line="16" pos:column="1">BOOL<pos:position pos:line="16" pos:column="5"/></name></type> <name pos:line="16" pos:column="6">utf8<pos:position pos:line="16" pos:column="10"/></name></decl>;<pos:position pos:line="16" pos:column="11"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="17" pos:column="1">BOOL<pos:position pos:line="17" pos:column="5"/></name></type> <name pos:line="17" pos:column="6">class_utf8<pos:position pos:line="17" pos:column="16"/></name></decl>;<pos:position pos:line="17" pos:column="17"/></decl_stmt>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
<decl_stmt><decl><type><name pos:line="19" pos:column="1">BOOL<pos:position pos:line="19" pos:column="5"/></name></type> <name pos:line="19" pos:column="6">inescq<pos:position pos:line="19" pos:column="12"/></name> <init pos:line="19" pos:column="13">= <expr><name pos:line="19" pos:column="15">FALSE<pos:position pos:line="19" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="21"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="20" pos:column="1">unsigned<pos:position pos:line="20" pos:column="9"/></name> <name pos:line="20" pos:column="10">int<pos:position pos:line="20" pos:column="13"/></name></type> <name pos:line="20" pos:column="14">brastackptr<pos:position pos:line="20" pos:column="25"/></name> <init pos:line="20" pos:column="26">= <expr><literal type="number" pos:line="20" pos:column="28">0<pos:position pos:line="20" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="30"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="21" pos:column="1">size_t<pos:position pos:line="21" pos:column="7"/></name></type> <name pos:line="21" pos:column="8">size<pos:position pos:line="21" pos:column="12"/></name></decl>;<pos:position pos:line="21" pos:column="13"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="22" pos:column="1">uschar<pos:position pos:line="22" pos:column="7"/></name> <modifier pos:line="22" pos:column="8">*<pos:position pos:line="22" pos:column="9"/></modifier></type><name pos:line="22" pos:column="9">code<pos:position pos:line="22" pos:column="13"/></name></decl>;<pos:position pos:line="22" pos:column="14"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="23" pos:column="1">const<pos:position pos:line="23" pos:column="6"/></specifier> <name pos:line="23" pos:column="7">uschar<pos:position pos:line="23" pos:column="13"/></name> <modifier pos:line="23" pos:column="14">*<pos:position pos:line="23" pos:column="15"/></modifier></type><name pos:line="23" pos:column="15">codestart<pos:position pos:line="23" pos:column="24"/></name></decl>;<pos:position pos:line="23" pos:column="25"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="24" pos:column="1">const<pos:position pos:line="24" pos:column="6"/></specifier> <name pos:line="24" pos:column="7">uschar<pos:position pos:line="24" pos:column="13"/></name> <modifier pos:line="24" pos:column="14">*<pos:position pos:line="24" pos:column="15"/></modifier></type><name pos:line="24" pos:column="15">ptr<pos:position pos:line="24" pos:column="18"/></name></decl>;<pos:position pos:line="24" pos:column="19"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="25" pos:column="1">compile_data<pos:position pos:line="25" pos:column="13"/></name></type> <name pos:line="25" pos:column="14">compile_block<pos:position pos:line="25" pos:column="27"/></name></decl>;<pos:position pos:line="25" pos:column="28"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="26" pos:column="1">int<pos:position pos:line="26" pos:column="4"/></name></type> <name><name pos:line="26" pos:column="5">brastack<pos:position pos:line="26" pos:column="13"/></name><index pos:line="26" pos:column="13">[<expr><name pos:line="26" pos:column="14">BRASTACK_SIZE<pos:position pos:line="26" pos:column="27"/></name></expr>]<pos:position pos:line="26" pos:column="28"/></index></name></decl>;<pos:position pos:line="26" pos:column="29"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="27" pos:column="1">uschar<pos:position pos:line="27" pos:column="7"/></name></type> <name><name pos:line="27" pos:column="8">bralenstack<pos:position pos:line="27" pos:column="19"/></name><index pos:line="27" pos:column="19">[<expr><name pos:line="27" pos:column="20">BRASTACK_SIZE<pos:position pos:line="27" pos:column="33"/></name></expr>]<pos:position pos:line="27" pos:column="34"/></index></name></decl>;<pos:position pos:line="27" pos:column="35"/></decl_stmt>

<comment type="block" pos:line="29" pos:column="1">/* We can't pass back an error message if errorptr is NULL; I guess the best we
can do is just return NULL. */</comment>

<if pos:line="32" pos:column="1">if <condition pos:line="32" pos:column="4">(<expr><name pos:line="32" pos:column="5">errorptr<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">==<pos:position pos:line="32" pos:column="16"/></operator> <name pos:line="32" pos:column="17">NULL<pos:position pos:line="32" pos:column="21"/></name></expr>)<pos:position pos:line="32" pos:column="22"/></condition><then pos:line="32" pos:column="22"> <block type="pseudo"><return pos:line="32" pos:column="23">return <expr><name pos:line="32" pos:column="30">NULL<pos:position pos:line="32" pos:column="34"/></name></expr>;<pos:position pos:line="32" pos:column="35"/></return></block></then></if>
<expr_stmt><expr><operator pos:line="33" pos:column="1">*<pos:position pos:line="33" pos:column="2"/></operator><name pos:line="33" pos:column="2">errorptr<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <name pos:line="33" pos:column="13">NULL<pos:position pos:line="33" pos:column="17"/></name></expr>;<pos:position pos:line="33" pos:column="18"/></expr_stmt>

<comment type="block" pos:line="35" pos:column="1">/* However, we can give a message for this error */</comment>

<if pos:line="37" pos:column="1">if <condition pos:line="37" pos:column="4">(<expr><name pos:line="37" pos:column="5">erroroffset<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">==<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="20">NULL<pos:position pos:line="37" pos:column="24"/></name></expr>)<pos:position pos:line="37" pos:column="25"/></condition><then pos:line="37" pos:column="25">
  <block pos:line="38" pos:column="3">{
  <expr_stmt><expr><operator pos:line="39" pos:column="3">*<pos:position pos:line="39" pos:column="4"/></operator><name pos:line="39" pos:column="4">errorptr<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <name pos:line="39" pos:column="15">ERR16<pos:position pos:line="39" pos:column="20"/></name></expr>;<pos:position pos:line="39" pos:column="21"/></expr_stmt>
  <return pos:line="40" pos:column="3">return <expr><name pos:line="40" pos:column="10">NULL<pos:position pos:line="40" pos:column="14"/></name></expr>;<pos:position pos:line="40" pos:column="15"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>
<expr_stmt><expr><operator pos:line="42" pos:column="1">*<pos:position pos:line="42" pos:column="2"/></operator><name pos:line="42" pos:column="2">erroroffset<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <literal type="number" pos:line="42" pos:column="16">0<pos:position pos:line="42" pos:column="17"/></literal></expr>;<pos:position pos:line="42" pos:column="18"/></expr_stmt>

<comment type="block" pos:line="44" pos:column="1">/* Can't support UTF8 unless PCRE has been compiled to include the code. */</comment>

<cpp:ifdef pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">ifdef<pos:position pos:line="46" pos:column="7"/></cpp:directive> <name pos:line="46" pos:column="8">SUPPORT_UTF8<pos:position pos:line="46" pos:column="20"/></name></cpp:ifdef>
<expr_stmt><expr><name pos:line="47" pos:column="1">utf8<pos:position pos:line="47" pos:column="5"/></name> <operator pos:line="47" pos:column="6">=<pos:position pos:line="47" pos:column="7"/></operator> <operator pos:line="47" pos:column="8">(<pos:position pos:line="47" pos:column="9"/></operator><name pos:line="47" pos:column="9">options<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">&amp;<pos:position pos:line="47" pos:column="22"/></operator> <name pos:line="47" pos:column="19">PCRE_UTF8<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">)<pos:position pos:line="47" pos:column="29"/></operator> <operator pos:line="47" pos:column="30">!=<pos:position pos:line="47" pos:column="32"/></operator> <literal type="number" pos:line="47" pos:column="33">0<pos:position pos:line="47" pos:column="34"/></literal></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
<if pos:line="48" pos:column="1">if <condition pos:line="48" pos:column="4">(<expr><name pos:line="48" pos:column="5">utf8<pos:position pos:line="48" pos:column="9"/></name> <operator pos:line="48" pos:column="10">&amp;&amp;<pos:position pos:line="48" pos:column="20"/></operator> <operator pos:line="48" pos:column="13">(<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">options<pos:position pos:line="48" pos:column="21"/></name> <operator pos:line="48" pos:column="22">&amp;<pos:position pos:line="48" pos:column="27"/></operator> <name pos:line="48" pos:column="24">PCRE_NO_UTF8_CHECK<pos:position pos:line="48" pos:column="42"/></name><operator pos:line="48" pos:column="42">)<pos:position pos:line="48" pos:column="43"/></operator> <operator pos:line="48" pos:column="44">==<pos:position pos:line="48" pos:column="46"/></operator> <literal type="number" pos:line="48" pos:column="47">0<pos:position pos:line="48" pos:column="48"/></literal> <operator pos:line="48" pos:column="49">&amp;&amp;<pos:position pos:line="48" pos:column="59"/></operator>
     <operator pos:line="49" pos:column="6">(<pos:position pos:line="49" pos:column="7"/></operator><operator pos:line="49" pos:column="7">*<pos:position pos:line="49" pos:column="8"/></operator><name pos:line="49" pos:column="8">erroroffset<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">=<pos:position pos:line="49" pos:column="21"/></operator> <call><name pos:line="49" pos:column="22">valid_utf8<pos:position pos:line="49" pos:column="32"/></name><argument_list pos:line="49" pos:column="32">(<argument><expr><operator pos:line="49" pos:column="33">(<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="34">uschar<pos:position pos:line="49" pos:column="40"/></name> <operator pos:line="49" pos:column="41">*<pos:position pos:line="49" pos:column="42"/></operator><operator pos:line="49" pos:column="42">)<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="43">pattern<pos:position pos:line="49" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="52">-<pos:position pos:line="49" pos:column="53"/></operator><literal type="number" pos:line="49" pos:column="53">1<pos:position pos:line="49" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call><operator pos:line="49" pos:column="55">)<pos:position pos:line="49" pos:column="56"/></operator> <operator pos:line="49" pos:column="57">&gt;=<pos:position pos:line="49" pos:column="62"/></operator> <literal type="number" pos:line="49" pos:column="60">0<pos:position pos:line="49" pos:column="61"/></literal></expr>)<pos:position pos:line="49" pos:column="62"/></condition><then pos:line="49" pos:column="62">
  <block pos:line="50" pos:column="3">{
  <expr_stmt><expr><operator pos:line="51" pos:column="3">*<pos:position pos:line="51" pos:column="4"/></operator><name pos:line="51" pos:column="4">errorptr<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">=<pos:position pos:line="51" pos:column="14"/></operator> <name pos:line="51" pos:column="15">ERR44<pos:position pos:line="51" pos:column="20"/></name></expr>;<pos:position pos:line="51" pos:column="21"/></expr_stmt>
  <return pos:line="52" pos:column="3">return <expr><name pos:line="52" pos:column="10">NULL<pos:position pos:line="52" pos:column="14"/></name></expr>;<pos:position pos:line="52" pos:column="15"/></return>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>
<cpp:else pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">else<pos:position pos:line="54" pos:column="6"/></cpp:directive></cpp:else>
<if pos:line="55" pos:column="1">if <condition pos:line="55" pos:column="4">(<expr><operator pos:line="55" pos:column="5">(<pos:position pos:line="55" pos:column="6"/></operator><name pos:line="55" pos:column="6">options<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">&amp;<pos:position pos:line="55" pos:column="19"/></operator> <name pos:line="55" pos:column="16">PCRE_UTF8<pos:position pos:line="55" pos:column="25"/></name><operator pos:line="55" pos:column="25">)<pos:position pos:line="55" pos:column="26"/></operator> <operator pos:line="55" pos:column="27">!=<pos:position pos:line="55" pos:column="29"/></operator> <literal type="number" pos:line="55" pos:column="30">0<pos:position pos:line="55" pos:column="31"/></literal></expr>)<pos:position pos:line="55" pos:column="32"/></condition><then pos:line="55" pos:column="32">
  <block pos:line="56" pos:column="3">{
  <expr_stmt><expr><operator pos:line="57" pos:column="3">*<pos:position pos:line="57" pos:column="4"/></operator><name pos:line="57" pos:column="4">errorptr<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <name pos:line="57" pos:column="15">ERR32<pos:position pos:line="57" pos:column="20"/></name></expr>;<pos:position pos:line="57" pos:column="21"/></expr_stmt>
  <return pos:line="58" pos:column="3">return <expr><name pos:line="58" pos:column="10">NULL<pos:position pos:line="58" pos:column="14"/></name></expr>;<pos:position pos:line="58" pos:column="15"/></return>
  }<pos:position pos:line="59" pos:column="4"/></block></then></if>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>

<if pos:line="62" pos:column="1">if <condition pos:line="62" pos:column="4">(<expr><operator pos:line="62" pos:column="5">(<pos:position pos:line="62" pos:column="6"/></operator><name pos:line="62" pos:column="6">options<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">&amp;<pos:position pos:line="62" pos:column="19"/></operator> <operator pos:line="62" pos:column="16">~<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="17">PUBLIC_OPTIONS<pos:position pos:line="62" pos:column="31"/></name><operator pos:line="62" pos:column="31">)<pos:position pos:line="62" pos:column="32"/></operator> <operator pos:line="62" pos:column="33">!=<pos:position pos:line="62" pos:column="35"/></operator> <literal type="number" pos:line="62" pos:column="36">0<pos:position pos:line="62" pos:column="37"/></literal></expr>)<pos:position pos:line="62" pos:column="38"/></condition><then pos:line="62" pos:column="38">
  <block pos:line="63" pos:column="3">{
  <expr_stmt><expr><operator pos:line="64" pos:column="3">*<pos:position pos:line="64" pos:column="4"/></operator><name pos:line="64" pos:column="4">errorptr<pos:position pos:line="64" pos:column="12"/></name> <operator pos:line="64" pos:column="13">=<pos:position pos:line="64" pos:column="14"/></operator> <name pos:line="64" pos:column="15">ERR17<pos:position pos:line="64" pos:column="20"/></name></expr>;<pos:position pos:line="64" pos:column="21"/></expr_stmt>
  <return pos:line="65" pos:column="3">return <expr><name pos:line="65" pos:column="10">NULL<pos:position pos:line="65" pos:column="14"/></name></expr>;<pos:position pos:line="65" pos:column="15"/></return>
  }<pos:position pos:line="66" pos:column="4"/></block></then></if>

<comment type="block" pos:line="68" pos:column="1">/* Set up pointers to the individual character tables */</comment>

<if pos:line="70" pos:column="1">if <condition pos:line="70" pos:column="4">(<expr><name pos:line="70" pos:column="5">tables<pos:position pos:line="70" pos:column="11"/></name> <operator pos:line="70" pos:column="12">==<pos:position pos:line="70" pos:column="14"/></operator> <name pos:line="70" pos:column="15">NULL<pos:position pos:line="70" pos:column="19"/></name></expr>)<pos:position pos:line="70" pos:column="20"/></condition><then pos:line="70" pos:column="20"> <block type="pseudo"><expr_stmt><expr><name pos:line="70" pos:column="21">tables<pos:position pos:line="70" pos:column="27"/></name> <operator pos:line="70" pos:column="28">=<pos:position pos:line="70" pos:column="29"/></operator> <name pos:line="70" pos:column="30">pcre_default_tables<pos:position pos:line="70" pos:column="49"/></name></expr>;<pos:position pos:line="70" pos:column="50"/></expr_stmt></block></then></if>
<expr_stmt><expr><name><name pos:line="71" pos:column="1">compile_block<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">.<pos:position pos:line="71" pos:column="15"/></operator><name pos:line="71" pos:column="15">lcc<pos:position pos:line="71" pos:column="18"/></name></name> <operator pos:line="71" pos:column="19">=<pos:position pos:line="71" pos:column="20"/></operator> <name pos:line="71" pos:column="21">tables<pos:position pos:line="71" pos:column="27"/></name> <operator pos:line="71" pos:column="28">+<pos:position pos:line="71" pos:column="29"/></operator> <name pos:line="71" pos:column="30">lcc_offset<pos:position pos:line="71" pos:column="40"/></name></expr>;<pos:position pos:line="71" pos:column="41"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="72" pos:column="1">compile_block<pos:position pos:line="72" pos:column="14"/></name><operator pos:line="72" pos:column="14">.<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="15">fcc<pos:position pos:line="72" pos:column="18"/></name></name> <operator pos:line="72" pos:column="19">=<pos:position pos:line="72" pos:column="20"/></operator> <name pos:line="72" pos:column="21">tables<pos:position pos:line="72" pos:column="27"/></name> <operator pos:line="72" pos:column="28">+<pos:position pos:line="72" pos:column="29"/></operator> <name pos:line="72" pos:column="30">fcc_offset<pos:position pos:line="72" pos:column="40"/></name></expr>;<pos:position pos:line="72" pos:column="41"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="73" pos:column="1">compile_block<pos:position pos:line="73" pos:column="14"/></name><operator pos:line="73" pos:column="14">.<pos:position pos:line="73" pos:column="15"/></operator><name pos:line="73" pos:column="15">cbits<pos:position pos:line="73" pos:column="20"/></name></name> <operator pos:line="73" pos:column="21">=<pos:position pos:line="73" pos:column="22"/></operator> <name pos:line="73" pos:column="23">tables<pos:position pos:line="73" pos:column="29"/></name> <operator pos:line="73" pos:column="30">+<pos:position pos:line="73" pos:column="31"/></operator> <name pos:line="73" pos:column="32">cbits_offset<pos:position pos:line="73" pos:column="44"/></name></expr>;<pos:position pos:line="73" pos:column="45"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="74" pos:column="1">compile_block<pos:position pos:line="74" pos:column="14"/></name><operator pos:line="74" pos:column="14">.<pos:position pos:line="74" pos:column="15"/></operator><name pos:line="74" pos:column="15">ctypes<pos:position pos:line="74" pos:column="21"/></name></name> <operator pos:line="74" pos:column="22">=<pos:position pos:line="74" pos:column="23"/></operator> <name pos:line="74" pos:column="24">tables<pos:position pos:line="74" pos:column="30"/></name> <operator pos:line="74" pos:column="31">+<pos:position pos:line="74" pos:column="32"/></operator> <name pos:line="74" pos:column="33">ctypes_offset<pos:position pos:line="74" pos:column="46"/></name></expr>;<pos:position pos:line="74" pos:column="47"/></expr_stmt>

<comment type="block" pos:line="76" pos:column="1">/* Maximum back reference and backref bitmap. This is updated for numeric
references during the first pass, but for named references during the actual
compile pass. The bitmap records up to 31 back references to help in deciding
whether (.*) can be treated as anchored or not. */</comment>

<expr_stmt><expr><name><name pos:line="81" pos:column="1">compile_block<pos:position pos:line="81" pos:column="14"/></name><operator pos:line="81" pos:column="14">.<pos:position pos:line="81" pos:column="15"/></operator><name pos:line="81" pos:column="15">top_backref<pos:position pos:line="81" pos:column="26"/></name></name> <operator pos:line="81" pos:column="27">=<pos:position pos:line="81" pos:column="28"/></operator> <literal type="number" pos:line="81" pos:column="29">0<pos:position pos:line="81" pos:column="30"/></literal></expr>;<pos:position pos:line="81" pos:column="31"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="82" pos:column="1">compile_block<pos:position pos:line="82" pos:column="14"/></name><operator pos:line="82" pos:column="14">.<pos:position pos:line="82" pos:column="15"/></operator><name pos:line="82" pos:column="15">backref_map<pos:position pos:line="82" pos:column="26"/></name></name> <operator pos:line="82" pos:column="27">=<pos:position pos:line="82" pos:column="28"/></operator> <literal type="number" pos:line="82" pos:column="29">0<pos:position pos:line="82" pos:column="30"/></literal></expr>;<pos:position pos:line="82" pos:column="31"/></expr_stmt>

<comment type="block" pos:line="84" pos:column="1">/* Reflect pattern for debugging output */</comment>

<expr_stmt><expr><call><name pos:line="86" pos:column="1">DPRINTF<pos:position pos:line="86" pos:column="8"/></name><argument_list pos:line="86" pos:column="8">(<argument><expr><operator pos:line="86" pos:column="9">(<pos:position pos:line="86" pos:column="10"/></operator><literal type="string" pos:line="86" pos:column="10">"------------------------------------------------------------------\n"<pos:position pos:line="86" pos:column="80"/></literal><operator pos:line="86" pos:column="80">)<pos:position pos:line="86" pos:column="81"/></operator></expr></argument>)<pos:position pos:line="86" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="83"/></expr_stmt>
<expr_stmt><expr><call><name pos:line="87" pos:column="1">DPRINTF<pos:position pos:line="87" pos:column="8"/></name><argument_list pos:line="87" pos:column="8">(<argument><expr><operator pos:line="87" pos:column="9">(<pos:position pos:line="87" pos:column="10"/></operator><literal type="string" pos:line="87" pos:column="10">"%s\n"<pos:position pos:line="87" pos:column="16"/></literal><operator pos:line="87" pos:column="16">,<pos:position pos:line="87" pos:column="17"/></operator> <name pos:line="87" pos:column="18">pattern<pos:position pos:line="87" pos:column="25"/></name><operator pos:line="87" pos:column="25">)<pos:position pos:line="87" pos:column="26"/></operator></expr></argument>)<pos:position pos:line="87" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="28"/></expr_stmt>

<comment type="block" pos:line="89" pos:column="1">/* The first thing to do is to make a pass over the pattern to compute the
amount of store required to hold the compiled code. This does not have to be
perfect as long as errors are overestimates. At the same time we can detect any
flag settings right at the start, and extract them. Make an attempt to correct
for any counted white space if an "extended" flag setting appears late in the
pattern. We can't be so clever for #-comments. */</comment>

<expr_stmt><expr><name pos:line="96" pos:column="1">ptr<pos:position pos:line="96" pos:column="4"/></name> <operator pos:line="96" pos:column="5">=<pos:position pos:line="96" pos:column="6"/></operator> <operator pos:line="96" pos:column="7">(<pos:position pos:line="96" pos:column="8"/></operator><specifier pos:line="96" pos:column="8">const<pos:position pos:line="96" pos:column="13"/></specifier> <name pos:line="96" pos:column="14">uschar<pos:position pos:line="96" pos:column="20"/></name> <operator pos:line="96" pos:column="21">*<pos:position pos:line="96" pos:column="22"/></operator><operator pos:line="96" pos:column="22">)<pos:position pos:line="96" pos:column="23"/></operator><operator pos:line="96" pos:column="23">(<pos:position pos:line="96" pos:column="24"/></operator><name pos:line="96" pos:column="24">pattern<pos:position pos:line="96" pos:column="31"/></name> <operator pos:line="96" pos:column="32">-<pos:position pos:line="96" pos:column="33"/></operator> <literal type="number" pos:line="96" pos:column="34">1<pos:position pos:line="96" pos:column="35"/></literal><operator pos:line="96" pos:column="35">)<pos:position pos:line="96" pos:column="36"/></operator></expr>;<pos:position pos:line="96" pos:column="37"/></expr_stmt>
<while pos:line="97" pos:column="1">while <condition pos:line="97" pos:column="7">(<expr><operator pos:line="97" pos:column="8">(<pos:position pos:line="97" pos:column="9"/></operator><name pos:line="97" pos:column="9">c<pos:position pos:line="97" pos:column="10"/></name> <operator pos:line="97" pos:column="11">=<pos:position pos:line="97" pos:column="12"/></operator> <operator pos:line="97" pos:column="13">*<pos:position pos:line="97" pos:column="14"/></operator><operator pos:line="97" pos:column="14">(<pos:position pos:line="97" pos:column="15"/></operator><operator pos:line="97" pos:column="15">++<pos:position pos:line="97" pos:column="17"/></operator><name pos:line="97" pos:column="17">ptr<pos:position pos:line="97" pos:column="20"/></name><operator pos:line="97" pos:column="20">)<pos:position pos:line="97" pos:column="21"/></operator><operator pos:line="97" pos:column="21">)<pos:position pos:line="97" pos:column="22"/></operator> <operator pos:line="97" pos:column="23">!=<pos:position pos:line="97" pos:column="25"/></operator> <literal type="number" pos:line="97" pos:column="26">0<pos:position pos:line="97" pos:column="27"/></literal></expr>)<pos:position pos:line="97" pos:column="28"/></condition>
  <block pos:line="98" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="99" pos:column="3">int<pos:position pos:line="99" pos:column="6"/></name></type> <name pos:line="99" pos:column="7">min<pos:position pos:line="99" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="99" pos:column="12">max<pos:position pos:line="99" pos:column="15"/></name></decl>;<pos:position pos:line="99" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="100" pos:column="3">int<pos:position pos:line="100" pos:column="6"/></name></type> <name pos:line="100" pos:column="7">class_optcount<pos:position pos:line="100" pos:column="21"/></name></decl>;<pos:position pos:line="100" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="101" pos:column="3">int<pos:position pos:line="101" pos:column="6"/></name></type> <name pos:line="101" pos:column="7">bracket_length<pos:position pos:line="101" pos:column="21"/></name></decl>;<pos:position pos:line="101" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="102" pos:column="3">int<pos:position pos:line="102" pos:column="6"/></name></type> <name pos:line="102" pos:column="7">duplength<pos:position pos:line="102" pos:column="16"/></name></decl>;<pos:position pos:line="102" pos:column="17"/></decl_stmt>

  <comment type="block" pos:line="104" pos:column="3">/* If we are inside a \Q...\E sequence, all chars are literal */</comment>

  <if pos:line="106" pos:column="3">if <condition pos:line="106" pos:column="6">(<expr><name pos:line="106" pos:column="7">inescq<pos:position pos:line="106" pos:column="13"/></name></expr>)<pos:position pos:line="106" pos:column="14"/></condition><then pos:line="106" pos:column="14">
    <block pos:line="107" pos:column="5">{
    <if pos:line="108" pos:column="5">if <condition pos:line="108" pos:column="8">(<expr><operator pos:line="108" pos:column="9">(<pos:position pos:line="108" pos:column="10"/></operator><name pos:line="108" pos:column="10">options<pos:position pos:line="108" pos:column="17"/></name> <operator pos:line="108" pos:column="18">&amp;<pos:position pos:line="108" pos:column="23"/></operator> <name pos:line="108" pos:column="20">PCRE_AUTO_CALLOUT<pos:position pos:line="108" pos:column="37"/></name><operator pos:line="108" pos:column="37">)<pos:position pos:line="108" pos:column="38"/></operator> <operator pos:line="108" pos:column="39">!=<pos:position pos:line="108" pos:column="41"/></operator> <literal type="number" pos:line="108" pos:column="42">0<pos:position pos:line="108" pos:column="43"/></literal></expr>)<pos:position pos:line="108" pos:column="44"/></condition><then pos:line="108" pos:column="44"> <block type="pseudo"><expr_stmt><expr><name pos:line="108" pos:column="45">length<pos:position pos:line="108" pos:column="51"/></name> <operator pos:line="108" pos:column="52">+=<pos:position pos:line="108" pos:column="54"/></operator> <literal type="number" pos:line="108" pos:column="55">2<pos:position pos:line="108" pos:column="56"/></literal> <operator pos:line="108" pos:column="57">+<pos:position pos:line="108" pos:column="58"/></operator> <literal type="number" pos:line="108" pos:column="59">2<pos:position pos:line="108" pos:column="60"/></literal><operator pos:line="108" pos:column="60">*<pos:position pos:line="108" pos:column="61"/></operator><name pos:line="108" pos:column="61">LINK_SIZE<pos:position pos:line="108" pos:column="70"/></name></expr>;<pos:position pos:line="108" pos:column="71"/></expr_stmt></block></then></if>
    <goto pos:line="109" pos:column="5">goto <name pos:line="109" pos:column="10">NORMAL_CHAR<pos:position pos:line="109" pos:column="21"/></name>;<pos:position pos:line="109" pos:column="22"/></goto>
    }<pos:position pos:line="110" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="112" pos:column="3">/* Otherwise, first check for ignored whitespace and comments */</comment>

  <if pos:line="114" pos:column="3">if <condition pos:line="114" pos:column="6">(<expr><operator pos:line="114" pos:column="7">(<pos:position pos:line="114" pos:column="8"/></operator><name pos:line="114" pos:column="8">options<pos:position pos:line="114" pos:column="15"/></name> <operator pos:line="114" pos:column="16">&amp;<pos:position pos:line="114" pos:column="21"/></operator> <name pos:line="114" pos:column="18">PCRE_EXTENDED<pos:position pos:line="114" pos:column="31"/></name><operator pos:line="114" pos:column="31">)<pos:position pos:line="114" pos:column="32"/></operator> <operator pos:line="114" pos:column="33">!=<pos:position pos:line="114" pos:column="35"/></operator> <literal type="number" pos:line="114" pos:column="36">0<pos:position pos:line="114" pos:column="37"/></literal></expr>)<pos:position pos:line="114" pos:column="38"/></condition><then pos:line="114" pos:column="38">
    <block pos:line="115" pos:column="5">{
    <if pos:line="116" pos:column="5">if <condition pos:line="116" pos:column="8">(<expr><operator pos:line="116" pos:column="9">(<pos:position pos:line="116" pos:column="10"/></operator><name><name pos:line="116" pos:column="10">compile_block<pos:position pos:line="116" pos:column="23"/></name><operator pos:line="116" pos:column="23">.<pos:position pos:line="116" pos:column="24"/></operator><name pos:line="116" pos:column="24">ctypes<pos:position pos:line="116" pos:column="30"/></name><index pos:line="116" pos:column="30">[<expr><name pos:line="116" pos:column="31">c<pos:position pos:line="116" pos:column="32"/></name></expr>]<pos:position pos:line="116" pos:column="33"/></index></name> <operator pos:line="116" pos:column="34">&amp;<pos:position pos:line="116" pos:column="39"/></operator> <name pos:line="116" pos:column="36">ctype_space<pos:position pos:line="116" pos:column="47"/></name><operator pos:line="116" pos:column="47">)<pos:position pos:line="116" pos:column="48"/></operator> <operator pos:line="116" pos:column="49">!=<pos:position pos:line="116" pos:column="51"/></operator> <literal type="number" pos:line="116" pos:column="52">0<pos:position pos:line="116" pos:column="53"/></literal></expr>)<pos:position pos:line="116" pos:column="54"/></condition><then pos:line="116" pos:column="54"> <block type="pseudo"><continue pos:line="116" pos:column="55">continue;<pos:position pos:line="116" pos:column="64"/></continue></block></then></if>
    <if pos:line="117" pos:column="5">if <condition pos:line="117" pos:column="8">(<expr><name pos:line="117" pos:column="9">c<pos:position pos:line="117" pos:column="10"/></name> <operator pos:line="117" pos:column="11">==<pos:position pos:line="117" pos:column="13"/></operator> <literal type="char" pos:line="117" pos:column="14">'#'<pos:position pos:line="117" pos:column="17"/></literal></expr>)<pos:position pos:line="117" pos:column="18"/></condition><then pos:line="117" pos:column="18">
      <block pos:line="118" pos:column="7">{
      <comment type="block" pos:line="119" pos:column="7">/* The space before the ; is to avoid a warning on a silly compiler
      on the Macintosh. */</comment>
      <while pos:line="121" pos:column="7">while <condition pos:line="121" pos:column="13">(<expr><operator pos:line="121" pos:column="14">(<pos:position pos:line="121" pos:column="15"/></operator><name pos:line="121" pos:column="15">c<pos:position pos:line="121" pos:column="16"/></name> <operator pos:line="121" pos:column="17">=<pos:position pos:line="121" pos:column="18"/></operator> <operator pos:line="121" pos:column="19">*<pos:position pos:line="121" pos:column="20"/></operator><operator pos:line="121" pos:column="20">(<pos:position pos:line="121" pos:column="21"/></operator><operator pos:line="121" pos:column="21">++<pos:position pos:line="121" pos:column="23"/></operator><name pos:line="121" pos:column="23">ptr<pos:position pos:line="121" pos:column="26"/></name><operator pos:line="121" pos:column="26">)<pos:position pos:line="121" pos:column="27"/></operator><operator pos:line="121" pos:column="27">)<pos:position pos:line="121" pos:column="28"/></operator> <operator pos:line="121" pos:column="29">!=<pos:position pos:line="121" pos:column="31"/></operator> <literal type="number" pos:line="121" pos:column="32">0<pos:position pos:line="121" pos:column="33"/></literal> <operator pos:line="121" pos:column="34">&amp;&amp;<pos:position pos:line="121" pos:column="44"/></operator> <name pos:line="121" pos:column="37">c<pos:position pos:line="121" pos:column="38"/></name> <operator pos:line="121" pos:column="39">!=<pos:position pos:line="121" pos:column="41"/></operator> <name pos:line="121" pos:column="42">NEWLINE<pos:position pos:line="121" pos:column="49"/></name></expr>)<pos:position pos:line="121" pos:column="50"/></condition> <block type="pseudo"><empty_stmt pos:line="121" pos:column="51">;<pos:position pos:line="121" pos:column="52"/></empty_stmt></block></while>
      <if pos:line="122" pos:column="7">if <condition pos:line="122" pos:column="10">(<expr><name pos:line="122" pos:column="11">c<pos:position pos:line="122" pos:column="12"/></name> <operator pos:line="122" pos:column="13">==<pos:position pos:line="122" pos:column="15"/></operator> <literal type="number" pos:line="122" pos:column="16">0<pos:position pos:line="122" pos:column="17"/></literal></expr>)<pos:position pos:line="122" pos:column="18"/></condition><then pos:line="122" pos:column="18"> <block type="pseudo"><break pos:line="122" pos:column="19">break;<pos:position pos:line="122" pos:column="25"/></break></block></then></if>
      <continue pos:line="123" pos:column="7">continue;<pos:position pos:line="123" pos:column="16"/></continue>
      }<pos:position pos:line="124" pos:column="8"/></block></then></if>
    }<pos:position pos:line="125" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name pos:line="127" pos:column="3">item_count<pos:position pos:line="127" pos:column="13"/></name><operator pos:line="127" pos:column="13">++<pos:position pos:line="127" pos:column="15"/></operator></expr>;<pos:position pos:line="127" pos:column="16"/></expr_stmt>    <comment type="block" pos:line="127" pos:column="20">/* Is zero for the first non-comment item */</comment>

  <comment type="block" pos:line="129" pos:column="3">/* Allow space for auto callout before every item except quantifiers. */</comment>

  <if pos:line="131" pos:column="3">if <condition pos:line="131" pos:column="6">(<expr><operator pos:line="131" pos:column="7">(<pos:position pos:line="131" pos:column="8"/></operator><name pos:line="131" pos:column="8">options<pos:position pos:line="131" pos:column="15"/></name> <operator pos:line="131" pos:column="16">&amp;<pos:position pos:line="131" pos:column="21"/></operator> <name pos:line="131" pos:column="18">PCRE_AUTO_CALLOUT<pos:position pos:line="131" pos:column="35"/></name><operator pos:line="131" pos:column="35">)<pos:position pos:line="131" pos:column="36"/></operator> <operator pos:line="131" pos:column="37">!=<pos:position pos:line="131" pos:column="39"/></operator> <literal type="number" pos:line="131" pos:column="40">0<pos:position pos:line="131" pos:column="41"/></literal> <operator pos:line="131" pos:column="42">&amp;&amp;<pos:position pos:line="131" pos:column="52"/></operator>
       <name pos:line="132" pos:column="8">c<pos:position pos:line="132" pos:column="9"/></name> <operator pos:line="132" pos:column="10">!=<pos:position pos:line="132" pos:column="12"/></operator> <literal type="char" pos:line="132" pos:column="13">'*'<pos:position pos:line="132" pos:column="16"/></literal> <operator pos:line="132" pos:column="17">&amp;&amp;<pos:position pos:line="132" pos:column="27"/></operator> <name pos:line="132" pos:column="20">c<pos:position pos:line="132" pos:column="21"/></name> <operator pos:line="132" pos:column="22">!=<pos:position pos:line="132" pos:column="24"/></operator> <literal type="char" pos:line="132" pos:column="25">'+'<pos:position pos:line="132" pos:column="28"/></literal> <operator pos:line="132" pos:column="29">&amp;&amp;<pos:position pos:line="132" pos:column="39"/></operator> <name pos:line="132" pos:column="32">c<pos:position pos:line="132" pos:column="33"/></name> <operator pos:line="132" pos:column="34">!=<pos:position pos:line="132" pos:column="36"/></operator> <literal type="char" pos:line="132" pos:column="37">'?'<pos:position pos:line="132" pos:column="40"/></literal> <operator pos:line="132" pos:column="41">&amp;&amp;<pos:position pos:line="132" pos:column="51"/></operator>
       <operator pos:line="133" pos:column="8">(<pos:position pos:line="133" pos:column="9"/></operator><name pos:line="133" pos:column="9">c<pos:position pos:line="133" pos:column="10"/></name> <operator pos:line="133" pos:column="11">!=<pos:position pos:line="133" pos:column="13"/></operator> <literal type="char" pos:line="133" pos:column="14">'{'<pos:position pos:line="133" pos:column="17"/></literal> <operator pos:line="133" pos:column="18">||<pos:position pos:line="133" pos:column="20"/></operator> <operator pos:line="133" pos:column="21">!<pos:position pos:line="133" pos:column="22"/></operator><call><name pos:line="133" pos:column="22">is_counted_repeat<pos:position pos:line="133" pos:column="39"/></name><argument_list pos:line="133" pos:column="39">(<argument><expr><name pos:line="133" pos:column="40">ptr<pos:position pos:line="133" pos:column="43"/></name> <operator pos:line="133" pos:column="44">+<pos:position pos:line="133" pos:column="45"/></operator> <literal type="number" pos:line="133" pos:column="46">1<pos:position pos:line="133" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="48"/></argument_list></call><operator pos:line="133" pos:column="48">)<pos:position pos:line="133" pos:column="49"/></operator></expr>)<pos:position pos:line="133" pos:column="50"/></condition><then pos:line="133" pos:column="50">
    <block type="pseudo"><expr_stmt><expr><name pos:line="134" pos:column="5">length<pos:position pos:line="134" pos:column="11"/></name> <operator pos:line="134" pos:column="12">+=<pos:position pos:line="134" pos:column="14"/></operator> <literal type="number" pos:line="134" pos:column="15">2<pos:position pos:line="134" pos:column="16"/></literal> <operator pos:line="134" pos:column="17">+<pos:position pos:line="134" pos:column="18"/></operator> <literal type="number" pos:line="134" pos:column="19">2<pos:position pos:line="134" pos:column="20"/></literal><operator pos:line="134" pos:column="20">*<pos:position pos:line="134" pos:column="21"/></operator><name pos:line="134" pos:column="21">LINK_SIZE<pos:position pos:line="134" pos:column="30"/></name></expr>;<pos:position pos:line="134" pos:column="31"/></expr_stmt></block></then></if>

  <switch pos:line="136" pos:column="3">switch<condition pos:line="136" pos:column="9">(<expr><name pos:line="136" pos:column="10">c<pos:position pos:line="136" pos:column="11"/></name></expr>)<pos:position pos:line="136" pos:column="12"/></condition>
    <block pos:line="137" pos:column="5">{
    <comment type="block" pos:line="138" pos:column="5">/* A backslashed item may be an escaped data character or it may be a
    character type. */</comment>

    <case pos:line="141" pos:column="5">case <expr><literal type="char" pos:line="141" pos:column="10">'\\'<pos:position pos:line="141" pos:column="14"/></literal></expr>:<pos:position pos:line="141" pos:column="15"/></case>
    <expr_stmt><expr><name pos:line="142" pos:column="5">c<pos:position pos:line="142" pos:column="6"/></name> <operator pos:line="142" pos:column="7">=<pos:position pos:line="142" pos:column="8"/></operator> <call><name pos:line="142" pos:column="9">check_escape<pos:position pos:line="142" pos:column="21"/></name><argument_list pos:line="142" pos:column="21">(<argument><expr><operator pos:line="142" pos:column="22">&amp;<pos:position pos:line="142" pos:column="27"/></operator><name pos:line="142" pos:column="23">ptr<pos:position pos:line="142" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="28">errorptr<pos:position pos:line="142" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="38">bracount<pos:position pos:line="142" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="48">options<pos:position pos:line="142" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="57">FALSE<pos:position pos:line="142" pos:column="62"/></name></expr></argument>)<pos:position pos:line="142" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="64"/></expr_stmt>
    <if pos:line="143" pos:column="5">if <condition pos:line="143" pos:column="8">(<expr><operator pos:line="143" pos:column="9">*<pos:position pos:line="143" pos:column="10"/></operator><name pos:line="143" pos:column="10">errorptr<pos:position pos:line="143" pos:column="18"/></name> <operator pos:line="143" pos:column="19">!=<pos:position pos:line="143" pos:column="21"/></operator> <name pos:line="143" pos:column="22">NULL<pos:position pos:line="143" pos:column="26"/></name></expr>)<pos:position pos:line="143" pos:column="27"/></condition><then pos:line="143" pos:column="27"> <block type="pseudo"><goto pos:line="143" pos:column="28">goto <name pos:line="143" pos:column="33">PCRE_ERROR_RETURN<pos:position pos:line="143" pos:column="50"/></name>;<pos:position pos:line="143" pos:column="51"/></goto></block></then></if>

    <expr_stmt><expr><name pos:line="145" pos:column="5">lastitemlength<pos:position pos:line="145" pos:column="19"/></name> <operator pos:line="145" pos:column="20">=<pos:position pos:line="145" pos:column="21"/></operator> <literal type="number" pos:line="145" pos:column="22">1<pos:position pos:line="145" pos:column="23"/></literal></expr>;<pos:position pos:line="145" pos:column="24"/></expr_stmt>     <comment type="block" pos:line="145" pos:column="29">/* Default length of last item for repeats */</comment>

    <if pos:line="147" pos:column="5">if <condition pos:line="147" pos:column="8">(<expr><name pos:line="147" pos:column="9">c<pos:position pos:line="147" pos:column="10"/></name> <operator pos:line="147" pos:column="11">&gt;=<pos:position pos:line="147" pos:column="16"/></operator> <literal type="number" pos:line="147" pos:column="14">0<pos:position pos:line="147" pos:column="15"/></literal></expr>)<pos:position pos:line="147" pos:column="16"/></condition><then pos:line="147" pos:column="16">             <comment type="block" pos:line="147" pos:column="29">/* Data character */</comment>
      <block pos:line="148" pos:column="7">{
      <expr_stmt><expr><name pos:line="149" pos:column="7">length<pos:position pos:line="149" pos:column="13"/></name> <operator pos:line="149" pos:column="14">+=<pos:position pos:line="149" pos:column="16"/></operator> <literal type="number" pos:line="149" pos:column="17">2<pos:position pos:line="149" pos:column="18"/></literal></expr>;<pos:position pos:line="149" pos:column="19"/></expr_stmt>          <comment type="block" pos:line="149" pos:column="29">/* For a one-byte character */</comment>

<cpp:ifdef pos:line="151" pos:column="1">#<cpp:directive pos:line="151" pos:column="2">ifdef<pos:position pos:line="151" pos:column="7"/></cpp:directive> <name pos:line="151" pos:column="8">SUPPORT_UTF8<pos:position pos:line="151" pos:column="20"/></name></cpp:ifdef>
      <if pos:line="152" pos:column="7">if <condition pos:line="152" pos:column="10">(<expr><name pos:line="152" pos:column="11">utf8<pos:position pos:line="152" pos:column="15"/></name> <operator pos:line="152" pos:column="16">&amp;&amp;<pos:position pos:line="152" pos:column="26"/></operator> <name pos:line="152" pos:column="19">c<pos:position pos:line="152" pos:column="20"/></name> <operator pos:line="152" pos:column="21">&gt;<pos:position pos:line="152" pos:column="25"/></operator> <literal type="number" pos:line="152" pos:column="23">127<pos:position pos:line="152" pos:column="26"/></literal></expr>)<pos:position pos:line="152" pos:column="27"/></condition><then pos:line="152" pos:column="27">
        <block pos:line="153" pos:column="9">{
        <decl_stmt><decl><type><name pos:line="154" pos:column="9">int<pos:position pos:line="154" pos:column="12"/></name></type> <name pos:line="154" pos:column="13">i<pos:position pos:line="154" pos:column="14"/></name></decl>;<pos:position pos:line="154" pos:column="15"/></decl_stmt>
        <for pos:line="155" pos:column="9">for <control pos:line="155" pos:column="13">(<init><expr><name pos:line="155" pos:column="14">i<pos:position pos:line="155" pos:column="15"/></name> <operator pos:line="155" pos:column="16">=<pos:position pos:line="155" pos:column="17"/></operator> <literal type="number" pos:line="155" pos:column="18">0<pos:position pos:line="155" pos:column="19"/></literal></expr>;<pos:position pos:line="155" pos:column="20"/></init> <condition><expr><name pos:line="155" pos:column="21">i<pos:position pos:line="155" pos:column="22"/></name> <operator pos:line="155" pos:column="23">&lt;<pos:position pos:line="155" pos:column="27"/></operator> <sizeof pos:line="155" pos:column="25">sizeof<argument_list pos:line="155" pos:column="31">(<argument><expr><name pos:line="155" pos:column="32">utf8_table1<pos:position pos:line="155" pos:column="43"/></name></expr></argument>)<pos:position pos:line="155" pos:column="44"/></argument_list></sizeof><operator pos:line="155" pos:column="44">/<pos:position pos:line="155" pos:column="45"/></operator><sizeof pos:line="155" pos:column="45">sizeof<argument_list pos:line="155" pos:column="51">(<argument><expr><name pos:line="155" pos:column="52">int<pos:position pos:line="155" pos:column="55"/></name></expr></argument>)<pos:position pos:line="155" pos:column="56"/></argument_list></sizeof></expr>;<pos:position pos:line="155" pos:column="57"/></condition> <incr><expr><name pos:line="155" pos:column="58">i<pos:position pos:line="155" pos:column="59"/></name><operator pos:line="155" pos:column="59">++<pos:position pos:line="155" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="155" pos:column="62"/></control>
          <block type="pseudo"><if pos:line="156" pos:column="11">if <condition pos:line="156" pos:column="14">(<expr><name pos:line="156" pos:column="15">c<pos:position pos:line="156" pos:column="16"/></name> <operator pos:line="156" pos:column="17">&lt;=<pos:position pos:line="156" pos:column="22"/></operator> <name><name pos:line="156" pos:column="20">utf8_table1<pos:position pos:line="156" pos:column="31"/></name><index pos:line="156" pos:column="31">[<expr><name pos:line="156" pos:column="32">i<pos:position pos:line="156" pos:column="33"/></name></expr>]<pos:position pos:line="156" pos:column="34"/></index></name></expr>)<pos:position pos:line="156" pos:column="35"/></condition><then pos:line="156" pos:column="35"> <block type="pseudo"><break pos:line="156" pos:column="36">break;<pos:position pos:line="156" pos:column="42"/></break></block></then></if></block></for>
        <expr_stmt><expr><name pos:line="157" pos:column="9">length<pos:position pos:line="157" pos:column="15"/></name> <operator pos:line="157" pos:column="16">+=<pos:position pos:line="157" pos:column="18"/></operator> <name pos:line="157" pos:column="19">i<pos:position pos:line="157" pos:column="20"/></name></expr>;<pos:position pos:line="157" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="158" pos:column="9">lastitemlength<pos:position pos:line="158" pos:column="23"/></name> <operator pos:line="158" pos:column="24">+=<pos:position pos:line="158" pos:column="26"/></operator> <name pos:line="158" pos:column="27">i<pos:position pos:line="158" pos:column="28"/></name></expr>;<pos:position pos:line="158" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="159" pos:column="10"/></block></then></if>
<cpp:endif pos:line="160" pos:column="1">#<cpp:directive pos:line="160" pos:column="2">endif<pos:position pos:line="160" pos:column="7"/></cpp:directive></cpp:endif>

      <continue pos:line="162" pos:column="7">continue;<pos:position pos:line="162" pos:column="16"/></continue>
      }<pos:position pos:line="163" pos:column="8"/></block></then></if>

    <comment type="block" pos:line="165" pos:column="5">/* If \Q, enter "literal" mode */</comment>

    <if pos:line="167" pos:column="5">if <condition pos:line="167" pos:column="8">(<expr><operator pos:line="167" pos:column="9">-<pos:position pos:line="167" pos:column="10"/></operator><name pos:line="167" pos:column="10">c<pos:position pos:line="167" pos:column="11"/></name> <operator pos:line="167" pos:column="12">==<pos:position pos:line="167" pos:column="14"/></operator> <name pos:line="167" pos:column="15">ESC_Q<pos:position pos:line="167" pos:column="20"/></name></expr>)<pos:position pos:line="167" pos:column="21"/></condition><then pos:line="167" pos:column="21">
      <block pos:line="168" pos:column="7">{
      <expr_stmt><expr><name pos:line="169" pos:column="7">inescq<pos:position pos:line="169" pos:column="13"/></name> <operator pos:line="169" pos:column="14">=<pos:position pos:line="169" pos:column="15"/></operator> <name pos:line="169" pos:column="16">TRUE<pos:position pos:line="169" pos:column="20"/></name></expr>;<pos:position pos:line="169" pos:column="21"/></expr_stmt>
      <continue pos:line="170" pos:column="7">continue;<pos:position pos:line="170" pos:column="16"/></continue>
      }<pos:position pos:line="171" pos:column="8"/></block></then></if>

    <comment type="block" pos:line="173" pos:column="5">/* \X is supported only if Unicode property support is compiled */</comment>

<cpp:ifndef pos:line="175" pos:column="1">#<cpp:directive pos:line="175" pos:column="2">ifndef<pos:position pos:line="175" pos:column="8"/></cpp:directive> <name pos:line="175" pos:column="9">SUPPORT_UCP<pos:position pos:line="175" pos:column="20"/></name></cpp:ifndef>
    <if pos:line="176" pos:column="5">if <condition pos:line="176" pos:column="8">(<expr><operator pos:line="176" pos:column="9">-<pos:position pos:line="176" pos:column="10"/></operator><name pos:line="176" pos:column="10">c<pos:position pos:line="176" pos:column="11"/></name> <operator pos:line="176" pos:column="12">==<pos:position pos:line="176" pos:column="14"/></operator> <name pos:line="176" pos:column="15">ESC_X<pos:position pos:line="176" pos:column="20"/></name></expr>)<pos:position pos:line="176" pos:column="21"/></condition><then pos:line="176" pos:column="21">
      <block pos:line="177" pos:column="7">{
      <expr_stmt><expr><operator pos:line="178" pos:column="7">*<pos:position pos:line="178" pos:column="8"/></operator><name pos:line="178" pos:column="8">errorptr<pos:position pos:line="178" pos:column="16"/></name> <operator pos:line="178" pos:column="17">=<pos:position pos:line="178" pos:column="18"/></operator> <name pos:line="178" pos:column="19">ERR45<pos:position pos:line="178" pos:column="24"/></name></expr>;<pos:position pos:line="178" pos:column="25"/></expr_stmt>
      <goto pos:line="179" pos:column="7">goto <name pos:line="179" pos:column="12">PCRE_ERROR_RETURN<pos:position pos:line="179" pos:column="29"/></name>;<pos:position pos:line="179" pos:column="30"/></goto>
      }<pos:position pos:line="180" pos:column="8"/></block></then>
<cpp:endif pos:line="181" pos:column="1">#<cpp:directive pos:line="181" pos:column="2">endif<pos:position pos:line="181" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="183" pos:column="5">/* \P and \p are for Unicode properties, but only when the support has
    been compiled. Each item needs 2 bytes. */</comment>

    <elseif pos:line="186" pos:column="5">else <if pos:line="186" pos:column="10">if <condition pos:line="186" pos:column="13">(<expr><operator pos:line="186" pos:column="14">-<pos:position pos:line="186" pos:column="15"/></operator><name pos:line="186" pos:column="15">c<pos:position pos:line="186" pos:column="16"/></name> <operator pos:line="186" pos:column="17">==<pos:position pos:line="186" pos:column="19"/></operator> <name pos:line="186" pos:column="20">ESC_P<pos:position pos:line="186" pos:column="25"/></name> <operator pos:line="186" pos:column="26">||<pos:position pos:line="186" pos:column="28"/></operator> <operator pos:line="186" pos:column="29">-<pos:position pos:line="186" pos:column="30"/></operator><name pos:line="186" pos:column="30">c<pos:position pos:line="186" pos:column="31"/></name> <operator pos:line="186" pos:column="32">==<pos:position pos:line="186" pos:column="34"/></operator> <name pos:line="186" pos:column="35">ESC_p<pos:position pos:line="186" pos:column="40"/></name></expr>)<pos:position pos:line="186" pos:column="41"/></condition><then pos:line="186" pos:column="41">
      <block pos:line="187" pos:column="7">{
<cpp:ifdef pos:line="188" pos:column="1">#<cpp:directive pos:line="188" pos:column="2">ifdef<pos:position pos:line="188" pos:column="7"/></cpp:directive> <name pos:line="188" pos:column="8">SUPPORT_UCP<pos:position pos:line="188" pos:column="19"/></name></cpp:ifdef>
      <decl_stmt><decl><type><name pos:line="189" pos:column="7">BOOL<pos:position pos:line="189" pos:column="11"/></name></type> <name pos:line="189" pos:column="12">negated<pos:position pos:line="189" pos:column="19"/></name></decl>;<pos:position pos:line="189" pos:column="20"/></decl_stmt>
      <expr_stmt><expr><name pos:line="190" pos:column="7">length<pos:position pos:line="190" pos:column="13"/></name> <operator pos:line="190" pos:column="14">+=<pos:position pos:line="190" pos:column="16"/></operator> <literal type="number" pos:line="190" pos:column="17">2<pos:position pos:line="190" pos:column="18"/></literal></expr>;<pos:position pos:line="190" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name pos:line="191" pos:column="7">lastitemlength<pos:position pos:line="191" pos:column="21"/></name> <operator pos:line="191" pos:column="22">=<pos:position pos:line="191" pos:column="23"/></operator> <literal type="number" pos:line="191" pos:column="24">2<pos:position pos:line="191" pos:column="25"/></literal></expr>;<pos:position pos:line="191" pos:column="26"/></expr_stmt>
      <if pos:line="192" pos:column="7">if <condition pos:line="192" pos:column="10">(<expr><call><name pos:line="192" pos:column="11">get_ucp<pos:position pos:line="192" pos:column="18"/></name><argument_list pos:line="192" pos:column="18">(<argument><expr><operator pos:line="192" pos:column="19">&amp;<pos:position pos:line="192" pos:column="24"/></operator><name pos:line="192" pos:column="20">ptr<pos:position pos:line="192" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="192" pos:column="25">&amp;<pos:position pos:line="192" pos:column="30"/></operator><name pos:line="192" pos:column="26">negated<pos:position pos:line="192" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="35">errorptr<pos:position pos:line="192" pos:column="43"/></name></expr></argument>)<pos:position pos:line="192" pos:column="44"/></argument_list></call> <operator pos:line="192" pos:column="45">&lt;<pos:position pos:line="192" pos:column="49"/></operator> <literal type="number" pos:line="192" pos:column="47">0<pos:position pos:line="192" pos:column="48"/></literal></expr>)<pos:position pos:line="192" pos:column="49"/></condition><then pos:line="192" pos:column="49"> <block type="pseudo"><goto pos:line="192" pos:column="50">goto <name pos:line="192" pos:column="55">PCRE_ERROR_RETURN<pos:position pos:line="192" pos:column="72"/></name>;<pos:position pos:line="192" pos:column="73"/></goto></block></then></if>
      <continue pos:line="193" pos:column="7">continue;<pos:position pos:line="193" pos:column="16"/></continue>
<cpp:else pos:line="194" pos:column="1">#<cpp:directive pos:line="194" pos:column="2">else<pos:position pos:line="194" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><operator pos:line="195" pos:column="7">*<pos:position pos:line="195" pos:column="8"/></operator><name pos:line="195" pos:column="8">errorptr<pos:position pos:line="195" pos:column="16"/></name> <operator pos:line="195" pos:column="17">=<pos:position pos:line="195" pos:column="18"/></operator> <name pos:line="195" pos:column="19">ERR45<pos:position pos:line="195" pos:column="24"/></name></expr>;<pos:position pos:line="195" pos:column="25"/></expr_stmt>
      <goto pos:line="196" pos:column="7">goto <name pos:line="196" pos:column="12">PCRE_ERROR_RETURN<pos:position pos:line="196" pos:column="29"/></name>;<pos:position pos:line="196" pos:column="30"/></goto>
<cpp:endif pos:line="197" pos:column="1">#<cpp:directive pos:line="197" pos:column="2">endif<pos:position pos:line="197" pos:column="7"/></cpp:directive></cpp:endif>
      }<pos:position pos:line="198" pos:column="8"/></block></then></if></elseif></if>

    <comment type="block" pos:line="200" pos:column="5">/* Other escapes need one byte */</comment>

    <expr_stmt><expr><name pos:line="202" pos:column="5">length<pos:position pos:line="202" pos:column="11"/></name><operator pos:line="202" pos:column="11">++<pos:position pos:line="202" pos:column="13"/></operator></expr>;<pos:position pos:line="202" pos:column="14"/></expr_stmt>

    <comment type="block" pos:line="204" pos:column="5">/* A back reference needs an additional 2 bytes, plus either one or 5
    bytes for a repeat. We also need to keep the value of the highest
    back reference. */</comment>

    <if pos:line="208" pos:column="5">if <condition pos:line="208" pos:column="8">(<expr><name pos:line="208" pos:column="9">c<pos:position pos:line="208" pos:column="10"/></name> <operator pos:line="208" pos:column="11">&lt;=<pos:position pos:line="208" pos:column="16"/></operator> <operator pos:line="208" pos:column="14">-<pos:position pos:line="208" pos:column="15"/></operator><name pos:line="208" pos:column="15">ESC_REF<pos:position pos:line="208" pos:column="22"/></name></expr>)<pos:position pos:line="208" pos:column="23"/></condition><then pos:line="208" pos:column="23">
      <block pos:line="209" pos:column="7">{
      <decl_stmt><decl><type><name pos:line="210" pos:column="7">int<pos:position pos:line="210" pos:column="10"/></name></type> <name pos:line="210" pos:column="11">refnum<pos:position pos:line="210" pos:column="17"/></name> <init pos:line="210" pos:column="18">= <expr><operator pos:line="210" pos:column="20">-<pos:position pos:line="210" pos:column="21"/></operator><name pos:line="210" pos:column="21">c<pos:position pos:line="210" pos:column="22"/></name> <operator pos:line="210" pos:column="23">-<pos:position pos:line="210" pos:column="24"/></operator> <name pos:line="210" pos:column="25">ESC_REF<pos:position pos:line="210" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="210" pos:column="33"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="211" pos:column="7">compile_block<pos:position pos:line="211" pos:column="20"/></name><operator pos:line="211" pos:column="20">.<pos:position pos:line="211" pos:column="21"/></operator><name pos:line="211" pos:column="21">backref_map<pos:position pos:line="211" pos:column="32"/></name></name> <operator pos:line="211" pos:column="33">|=<pos:position pos:line="211" pos:column="35"/></operator> <ternary><condition><expr><operator pos:line="211" pos:column="36">(<pos:position pos:line="211" pos:column="37"/></operator><name pos:line="211" pos:column="37">refnum<pos:position pos:line="211" pos:column="43"/></name> <operator pos:line="211" pos:column="44">&lt;<pos:position pos:line="211" pos:column="48"/></operator> <literal type="number" pos:line="211" pos:column="46">32<pos:position pos:line="211" pos:column="48"/></literal><operator pos:line="211" pos:column="48">)<pos:position pos:line="211" pos:column="49"/></operator></expr>?<pos:position pos:line="211" pos:column="50"/></condition><then pos:line="211" pos:column="50"> <expr><operator pos:line="211" pos:column="51">(<pos:position pos:line="211" pos:column="52"/></operator><literal type="number" pos:line="211" pos:column="52">1<pos:position pos:line="211" pos:column="53"/></literal> <operator pos:line="211" pos:column="54">&lt;&lt;<pos:position pos:line="211" pos:column="62"/></operator> <name pos:line="211" pos:column="57">refnum<pos:position pos:line="211" pos:column="63"/></name><operator pos:line="211" pos:column="63">)<pos:position pos:line="211" pos:column="64"/></operator></expr> <pos:position pos:line="211" pos:column="65"/></then><else pos:line="211" pos:column="65">: <expr><literal type="number" pos:line="211" pos:column="67">1<pos:position pos:line="211" pos:column="68"/></literal></expr></else></ternary></expr>;<pos:position pos:line="211" pos:column="69"/></expr_stmt>
      <if pos:line="212" pos:column="7">if <condition pos:line="212" pos:column="10">(<expr><name pos:line="212" pos:column="11">refnum<pos:position pos:line="212" pos:column="17"/></name> <operator pos:line="212" pos:column="18">&gt;<pos:position pos:line="212" pos:column="22"/></operator> <name><name pos:line="212" pos:column="20">compile_block<pos:position pos:line="212" pos:column="33"/></name><operator pos:line="212" pos:column="33">.<pos:position pos:line="212" pos:column="34"/></operator><name pos:line="212" pos:column="34">top_backref<pos:position pos:line="212" pos:column="45"/></name></name></expr>)<pos:position pos:line="212" pos:column="46"/></condition><then pos:line="212" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="213" pos:column="9">compile_block<pos:position pos:line="213" pos:column="22"/></name><operator pos:line="213" pos:column="22">.<pos:position pos:line="213" pos:column="23"/></operator><name pos:line="213" pos:column="23">top_backref<pos:position pos:line="213" pos:column="34"/></name></name> <operator pos:line="213" pos:column="35">=<pos:position pos:line="213" pos:column="36"/></operator> <name pos:line="213" pos:column="37">refnum<pos:position pos:line="213" pos:column="43"/></name></expr>;<pos:position pos:line="213" pos:column="44"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="214" pos:column="7">length<pos:position pos:line="214" pos:column="13"/></name> <operator pos:line="214" pos:column="14">+=<pos:position pos:line="214" pos:column="16"/></operator> <literal type="number" pos:line="214" pos:column="17">2<pos:position pos:line="214" pos:column="18"/></literal></expr>;<pos:position pos:line="214" pos:column="19"/></expr_stmt>   <comment type="block" pos:line="214" pos:column="22">/* For single back reference */</comment>
      <if pos:line="215" pos:column="7">if <condition pos:line="215" pos:column="10">(<expr><name><name pos:line="215" pos:column="11">ptr<pos:position pos:line="215" pos:column="14"/></name><index pos:line="215" pos:column="14">[<expr><literal type="number" pos:line="215" pos:column="15">1<pos:position pos:line="215" pos:column="16"/></literal></expr>]<pos:position pos:line="215" pos:column="17"/></index></name> <operator pos:line="215" pos:column="18">==<pos:position pos:line="215" pos:column="20"/></operator> <literal type="char" pos:line="215" pos:column="21">'{'<pos:position pos:line="215" pos:column="24"/></literal> <operator pos:line="215" pos:column="25">&amp;&amp;<pos:position pos:line="215" pos:column="35"/></operator> <call><name pos:line="215" pos:column="28">is_counted_repeat<pos:position pos:line="215" pos:column="45"/></name><argument_list pos:line="215" pos:column="45">(<argument><expr><name pos:line="215" pos:column="46">ptr<pos:position pos:line="215" pos:column="49"/></name><operator pos:line="215" pos:column="49">+<pos:position pos:line="215" pos:column="50"/></operator><literal type="number" pos:line="215" pos:column="50">2<pos:position pos:line="215" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="215" pos:column="53"/></condition><then pos:line="215" pos:column="53">
        <block pos:line="216" pos:column="9">{
        <expr_stmt><expr><name pos:line="217" pos:column="9">ptr<pos:position pos:line="217" pos:column="12"/></name> <operator pos:line="217" pos:column="13">=<pos:position pos:line="217" pos:column="14"/></operator> <call><name pos:line="217" pos:column="15">read_repeat_counts<pos:position pos:line="217" pos:column="33"/></name><argument_list pos:line="217" pos:column="33">(<argument><expr><name pos:line="217" pos:column="34">ptr<pos:position pos:line="217" pos:column="37"/></name><operator pos:line="217" pos:column="37">+<pos:position pos:line="217" pos:column="38"/></operator><literal type="number" pos:line="217" pos:column="38">2<pos:position pos:line="217" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="217" pos:column="41">&amp;<pos:position pos:line="217" pos:column="46"/></operator><name pos:line="217" pos:column="42">min<pos:position pos:line="217" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="217" pos:column="47">&amp;<pos:position pos:line="217" pos:column="52"/></operator><name pos:line="217" pos:column="48">max<pos:position pos:line="217" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="53">errorptr<pos:position pos:line="217" pos:column="61"/></name></expr></argument>)<pos:position pos:line="217" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="63"/></expr_stmt>
        <if pos:line="218" pos:column="9">if <condition pos:line="218" pos:column="12">(<expr><operator pos:line="218" pos:column="13">*<pos:position pos:line="218" pos:column="14"/></operator><name pos:line="218" pos:column="14">errorptr<pos:position pos:line="218" pos:column="22"/></name> <operator pos:line="218" pos:column="23">!=<pos:position pos:line="218" pos:column="25"/></operator> <name pos:line="218" pos:column="26">NULL<pos:position pos:line="218" pos:column="30"/></name></expr>)<pos:position pos:line="218" pos:column="31"/></condition><then pos:line="218" pos:column="31"> <block type="pseudo"><goto pos:line="218" pos:column="32">goto <name pos:line="218" pos:column="37">PCRE_ERROR_RETURN<pos:position pos:line="218" pos:column="54"/></name>;<pos:position pos:line="218" pos:column="55"/></goto></block></then></if>
        <if pos:line="219" pos:column="9">if <condition pos:line="219" pos:column="12">(<expr><operator pos:line="219" pos:column="13">(<pos:position pos:line="219" pos:column="14"/></operator><name pos:line="219" pos:column="14">min<pos:position pos:line="219" pos:column="17"/></name> <operator pos:line="219" pos:column="18">==<pos:position pos:line="219" pos:column="20"/></operator> <literal type="number" pos:line="219" pos:column="21">0<pos:position pos:line="219" pos:column="22"/></literal> <operator pos:line="219" pos:column="23">&amp;&amp;<pos:position pos:line="219" pos:column="33"/></operator> <operator pos:line="219" pos:column="26">(<pos:position pos:line="219" pos:column="27"/></operator><name pos:line="219" pos:column="27">max<pos:position pos:line="219" pos:column="30"/></name> <operator pos:line="219" pos:column="31">==<pos:position pos:line="219" pos:column="33"/></operator> <literal type="number" pos:line="219" pos:column="34">1<pos:position pos:line="219" pos:column="35"/></literal> <operator pos:line="219" pos:column="36">||<pos:position pos:line="219" pos:column="38"/></operator> <name pos:line="219" pos:column="39">max<pos:position pos:line="219" pos:column="42"/></name> <operator pos:line="219" pos:column="43">==<pos:position pos:line="219" pos:column="45"/></operator> <operator pos:line="219" pos:column="46">-<pos:position pos:line="219" pos:column="47"/></operator><literal type="number" pos:line="219" pos:column="47">1<pos:position pos:line="219" pos:column="48"/></literal><operator pos:line="219" pos:column="48">)<pos:position pos:line="219" pos:column="49"/></operator><operator pos:line="219" pos:column="49">)<pos:position pos:line="219" pos:column="50"/></operator> <operator pos:line="219" pos:column="51">||<pos:position pos:line="219" pos:column="53"/></operator>
          <operator pos:line="220" pos:column="11">(<pos:position pos:line="220" pos:column="12"/></operator><name pos:line="220" pos:column="12">min<pos:position pos:line="220" pos:column="15"/></name> <operator pos:line="220" pos:column="16">==<pos:position pos:line="220" pos:column="18"/></operator> <literal type="number" pos:line="220" pos:column="19">1<pos:position pos:line="220" pos:column="20"/></literal> <operator pos:line="220" pos:column="21">&amp;&amp;<pos:position pos:line="220" pos:column="31"/></operator> <name pos:line="220" pos:column="24">max<pos:position pos:line="220" pos:column="27"/></name> <operator pos:line="220" pos:column="28">==<pos:position pos:line="220" pos:column="30"/></operator> <operator pos:line="220" pos:column="31">-<pos:position pos:line="220" pos:column="32"/></operator><literal type="number" pos:line="220" pos:column="32">1<pos:position pos:line="220" pos:column="33"/></literal><operator pos:line="220" pos:column="33">)<pos:position pos:line="220" pos:column="34"/></operator></expr>)<pos:position pos:line="220" pos:column="35"/></condition><then pos:line="220" pos:column="35">
            <block type="pseudo"><expr_stmt><expr><name pos:line="221" pos:column="13">length<pos:position pos:line="221" pos:column="19"/></name><operator pos:line="221" pos:column="19">++<pos:position pos:line="221" pos:column="21"/></operator></expr>;<pos:position pos:line="221" pos:column="22"/></expr_stmt></block></then>
        <else pos:line="222" pos:column="9">else <block type="pseudo"><expr_stmt><expr><name pos:line="222" pos:column="14">length<pos:position pos:line="222" pos:column="20"/></name> <operator pos:line="222" pos:column="21">+=<pos:position pos:line="222" pos:column="23"/></operator> <literal type="number" pos:line="222" pos:column="24">5<pos:position pos:line="222" pos:column="25"/></literal></expr>;<pos:position pos:line="222" pos:column="26"/></expr_stmt></block></else></if>
        <if pos:line="223" pos:column="9">if <condition pos:line="223" pos:column="12">(<expr><name><name pos:line="223" pos:column="13">ptr<pos:position pos:line="223" pos:column="16"/></name><index pos:line="223" pos:column="16">[<expr><literal type="number" pos:line="223" pos:column="17">1<pos:position pos:line="223" pos:column="18"/></literal></expr>]<pos:position pos:line="223" pos:column="19"/></index></name> <operator pos:line="223" pos:column="20">==<pos:position pos:line="223" pos:column="22"/></operator> <literal type="char" pos:line="223" pos:column="23">'?'<pos:position pos:line="223" pos:column="26"/></literal></expr>)<pos:position pos:line="223" pos:column="27"/></condition><then pos:line="223" pos:column="27"> <block type="pseudo"><expr_stmt><expr><name pos:line="223" pos:column="28">ptr<pos:position pos:line="223" pos:column="31"/></name><operator pos:line="223" pos:column="31">++<pos:position pos:line="223" pos:column="33"/></operator></expr>;<pos:position pos:line="223" pos:column="34"/></expr_stmt></block></then></if>
        }<pos:position pos:line="224" pos:column="10"/></block></then></if>
      }<pos:position pos:line="225" pos:column="8"/></block></then></if>
    <continue pos:line="226" pos:column="5">continue;<pos:position pos:line="226" pos:column="14"/></continue>

    <case pos:line="228" pos:column="5">case <expr><literal type="char" pos:line="228" pos:column="10">'^'<pos:position pos:line="228" pos:column="13"/></literal></expr>:<pos:position pos:line="228" pos:column="14"/></case>     <comment type="block" pos:line="228" pos:column="19">/* Single-byte metacharacters */</comment>
    <case pos:line="229" pos:column="5">case <expr><literal type="char" pos:line="229" pos:column="10">'.'<pos:position pos:line="229" pos:column="13"/></literal></expr>:<pos:position pos:line="229" pos:column="14"/></case>
    <case pos:line="230" pos:column="5">case <expr><literal type="char" pos:line="230" pos:column="10">'$'<pos:position pos:line="230" pos:column="13"/></literal></expr>:<pos:position pos:line="230" pos:column="14"/></case>
    <expr_stmt><expr><name pos:line="231" pos:column="5">length<pos:position pos:line="231" pos:column="11"/></name><operator pos:line="231" pos:column="11">++<pos:position pos:line="231" pos:column="13"/></operator></expr>;<pos:position pos:line="231" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="232" pos:column="5">lastitemlength<pos:position pos:line="232" pos:column="19"/></name> <operator pos:line="232" pos:column="20">=<pos:position pos:line="232" pos:column="21"/></operator> <literal type="number" pos:line="232" pos:column="22">1<pos:position pos:line="232" pos:column="23"/></literal></expr>;<pos:position pos:line="232" pos:column="24"/></expr_stmt>
    <continue pos:line="233" pos:column="5">continue;<pos:position pos:line="233" pos:column="14"/></continue>

    <case pos:line="235" pos:column="5">case <expr><literal type="char" pos:line="235" pos:column="10">'*'<pos:position pos:line="235" pos:column="13"/></literal></expr>:<pos:position pos:line="235" pos:column="14"/></case>            <comment type="block" pos:line="235" pos:column="26">/* These repeats won't be after brackets; */</comment>
    <case pos:line="236" pos:column="5">case <expr><literal type="char" pos:line="236" pos:column="10">'+'<pos:position pos:line="236" pos:column="13"/></literal></expr>:<pos:position pos:line="236" pos:column="14"/></case>            <comment type="block" pos:line="236" pos:column="26">/* those are handled separately */</comment>
    <case pos:line="237" pos:column="5">case <expr><literal type="char" pos:line="237" pos:column="10">'?'<pos:position pos:line="237" pos:column="13"/></literal></expr>:<pos:position pos:line="237" pos:column="14"/></case>
    <expr_stmt><expr><name pos:line="238" pos:column="5">length<pos:position pos:line="238" pos:column="11"/></name><operator pos:line="238" pos:column="11">++<pos:position pos:line="238" pos:column="13"/></operator></expr>;<pos:position pos:line="238" pos:column="14"/></expr_stmt>
    <goto pos:line="239" pos:column="5">goto <name pos:line="239" pos:column="10">POSESSIVE<pos:position pos:line="239" pos:column="19"/></name>;<pos:position pos:line="239" pos:column="20"/></goto>      <comment type="block" pos:line="239" pos:column="26">/* A few lines below */</comment>

    <comment type="block" pos:line="241" pos:column="5">/* This covers the cases of braced repeats after a single char, metachar,
    class, or back reference. */</comment>

    <case pos:line="244" pos:column="5">case <expr><literal type="char" pos:line="244" pos:column="10">'{'<pos:position pos:line="244" pos:column="13"/></literal></expr>:<pos:position pos:line="244" pos:column="14"/></case>
    <if pos:line="245" pos:column="5">if <condition pos:line="245" pos:column="8">(<expr><operator pos:line="245" pos:column="9">!<pos:position pos:line="245" pos:column="10"/></operator><call><name pos:line="245" pos:column="10">is_counted_repeat<pos:position pos:line="245" pos:column="27"/></name><argument_list pos:line="245" pos:column="27">(<argument><expr><name pos:line="245" pos:column="28">ptr<pos:position pos:line="245" pos:column="31"/></name><operator pos:line="245" pos:column="31">+<pos:position pos:line="245" pos:column="32"/></operator><literal type="number" pos:line="245" pos:column="32">1<pos:position pos:line="245" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="245" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="245" pos:column="35"/></condition><then pos:line="245" pos:column="35"> <block type="pseudo"><goto pos:line="245" pos:column="36">goto <name pos:line="245" pos:column="41">NORMAL_CHAR<pos:position pos:line="245" pos:column="52"/></name>;<pos:position pos:line="245" pos:column="53"/></goto></block></then></if>
    <expr_stmt><expr><name pos:line="246" pos:column="5">ptr<pos:position pos:line="246" pos:column="8"/></name> <operator pos:line="246" pos:column="9">=<pos:position pos:line="246" pos:column="10"/></operator> <call><name pos:line="246" pos:column="11">read_repeat_counts<pos:position pos:line="246" pos:column="29"/></name><argument_list pos:line="246" pos:column="29">(<argument><expr><name pos:line="246" pos:column="30">ptr<pos:position pos:line="246" pos:column="33"/></name><operator pos:line="246" pos:column="33">+<pos:position pos:line="246" pos:column="34"/></operator><literal type="number" pos:line="246" pos:column="34">1<pos:position pos:line="246" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="246" pos:column="37">&amp;<pos:position pos:line="246" pos:column="42"/></operator><name pos:line="246" pos:column="38">min<pos:position pos:line="246" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="246" pos:column="43">&amp;<pos:position pos:line="246" pos:column="48"/></operator><name pos:line="246" pos:column="44">max<pos:position pos:line="246" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="246" pos:column="49">errorptr<pos:position pos:line="246" pos:column="57"/></name></expr></argument>)<pos:position pos:line="246" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="59"/></expr_stmt>
    <if pos:line="247" pos:column="5">if <condition pos:line="247" pos:column="8">(<expr><operator pos:line="247" pos:column="9">*<pos:position pos:line="247" pos:column="10"/></operator><name pos:line="247" pos:column="10">errorptr<pos:position pos:line="247" pos:column="18"/></name> <operator pos:line="247" pos:column="19">!=<pos:position pos:line="247" pos:column="21"/></operator> <name pos:line="247" pos:column="22">NULL<pos:position pos:line="247" pos:column="26"/></name></expr>)<pos:position pos:line="247" pos:column="27"/></condition><then pos:line="247" pos:column="27"> <block type="pseudo"><goto pos:line="247" pos:column="28">goto <name pos:line="247" pos:column="33">PCRE_ERROR_RETURN<pos:position pos:line="247" pos:column="50"/></name>;<pos:position pos:line="247" pos:column="51"/></goto></block></then></if>

    <comment type="block" pos:line="249" pos:column="5">/* These special cases just insert one extra opcode */</comment>

    <if pos:line="251" pos:column="5">if <condition pos:line="251" pos:column="8">(<expr><operator pos:line="251" pos:column="9">(<pos:position pos:line="251" pos:column="10"/></operator><name pos:line="251" pos:column="10">min<pos:position pos:line="251" pos:column="13"/></name> <operator pos:line="251" pos:column="14">==<pos:position pos:line="251" pos:column="16"/></operator> <literal type="number" pos:line="251" pos:column="17">0<pos:position pos:line="251" pos:column="18"/></literal> <operator pos:line="251" pos:column="19">&amp;&amp;<pos:position pos:line="251" pos:column="29"/></operator> <operator pos:line="251" pos:column="22">(<pos:position pos:line="251" pos:column="23"/></operator><name pos:line="251" pos:column="23">max<pos:position pos:line="251" pos:column="26"/></name> <operator pos:line="251" pos:column="27">==<pos:position pos:line="251" pos:column="29"/></operator> <literal type="number" pos:line="251" pos:column="30">1<pos:position pos:line="251" pos:column="31"/></literal> <operator pos:line="251" pos:column="32">||<pos:position pos:line="251" pos:column="34"/></operator> <name pos:line="251" pos:column="35">max<pos:position pos:line="251" pos:column="38"/></name> <operator pos:line="251" pos:column="39">==<pos:position pos:line="251" pos:column="41"/></operator> <operator pos:line="251" pos:column="42">-<pos:position pos:line="251" pos:column="43"/></operator><literal type="number" pos:line="251" pos:column="43">1<pos:position pos:line="251" pos:column="44"/></literal><operator pos:line="251" pos:column="44">)<pos:position pos:line="251" pos:column="45"/></operator><operator pos:line="251" pos:column="45">)<pos:position pos:line="251" pos:column="46"/></operator> <operator pos:line="251" pos:column="47">||<pos:position pos:line="251" pos:column="49"/></operator>
      <operator pos:line="252" pos:column="7">(<pos:position pos:line="252" pos:column="8"/></operator><name pos:line="252" pos:column="8">min<pos:position pos:line="252" pos:column="11"/></name> <operator pos:line="252" pos:column="12">==<pos:position pos:line="252" pos:column="14"/></operator> <literal type="number" pos:line="252" pos:column="15">1<pos:position pos:line="252" pos:column="16"/></literal> <operator pos:line="252" pos:column="17">&amp;&amp;<pos:position pos:line="252" pos:column="27"/></operator> <name pos:line="252" pos:column="20">max<pos:position pos:line="252" pos:column="23"/></name> <operator pos:line="252" pos:column="24">==<pos:position pos:line="252" pos:column="26"/></operator> <operator pos:line="252" pos:column="27">-<pos:position pos:line="252" pos:column="28"/></operator><literal type="number" pos:line="252" pos:column="28">1<pos:position pos:line="252" pos:column="29"/></literal><operator pos:line="252" pos:column="29">)<pos:position pos:line="252" pos:column="30"/></operator></expr>)<pos:position pos:line="252" pos:column="31"/></condition><then pos:line="252" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><name pos:line="253" pos:column="9">length<pos:position pos:line="253" pos:column="15"/></name><operator pos:line="253" pos:column="15">++<pos:position pos:line="253" pos:column="17"/></operator></expr>;<pos:position pos:line="253" pos:column="18"/></expr_stmt></block></then>

    <comment type="block" pos:line="255" pos:column="5">/* These cases might insert additional copies of a preceding character. */</comment>

    <else pos:line="257" pos:column="5">else
      <block pos:line="258" pos:column="7">{
      <if pos:line="259" pos:column="7">if <condition pos:line="259" pos:column="10">(<expr><name pos:line="259" pos:column="11">min<pos:position pos:line="259" pos:column="14"/></name> <operator pos:line="259" pos:column="15">!=<pos:position pos:line="259" pos:column="17"/></operator> <literal type="number" pos:line="259" pos:column="18">1<pos:position pos:line="259" pos:column="19"/></literal></expr>)<pos:position pos:line="259" pos:column="20"/></condition><then pos:line="259" pos:column="20">
        <block pos:line="260" pos:column="9">{
        <expr_stmt><expr><name pos:line="261" pos:column="9">length<pos:position pos:line="261" pos:column="15"/></name> <operator pos:line="261" pos:column="16">-=<pos:position pos:line="261" pos:column="18"/></operator> <name pos:line="261" pos:column="19">lastitemlength<pos:position pos:line="261" pos:column="33"/></name></expr>;<pos:position pos:line="261" pos:column="34"/></expr_stmt>   <comment type="block" pos:line="261" pos:column="37">/* Uncount the original char or metachar */</comment>
        <if pos:line="262" pos:column="9">if <condition pos:line="262" pos:column="12">(<expr><name pos:line="262" pos:column="13">min<pos:position pos:line="262" pos:column="16"/></name> <operator pos:line="262" pos:column="17">&gt;<pos:position pos:line="262" pos:column="21"/></operator> <literal type="number" pos:line="262" pos:column="19">0<pos:position pos:line="262" pos:column="20"/></literal></expr>)<pos:position pos:line="262" pos:column="21"/></condition><then pos:line="262" pos:column="21"> <block type="pseudo"><expr_stmt><expr><name pos:line="262" pos:column="22">length<pos:position pos:line="262" pos:column="28"/></name> <operator pos:line="262" pos:column="29">+=<pos:position pos:line="262" pos:column="31"/></operator> <literal type="number" pos:line="262" pos:column="32">3<pos:position pos:line="262" pos:column="33"/></literal> <operator pos:line="262" pos:column="34">+<pos:position pos:line="262" pos:column="35"/></operator> <name pos:line="262" pos:column="36">lastitemlength<pos:position pos:line="262" pos:column="50"/></name></expr>;<pos:position pos:line="262" pos:column="51"/></expr_stmt></block></then></if>
        }<pos:position pos:line="263" pos:column="10"/></block></then></if>
      <expr_stmt><expr><name pos:line="264" pos:column="7">length<pos:position pos:line="264" pos:column="13"/></name> <operator pos:line="264" pos:column="14">+=<pos:position pos:line="264" pos:column="16"/></operator> <name pos:line="264" pos:column="17">lastitemlength<pos:position pos:line="264" pos:column="31"/></name> <operator pos:line="264" pos:column="32">+<pos:position pos:line="264" pos:column="33"/></operator> <operator pos:line="264" pos:column="34">(<pos:position pos:line="264" pos:column="35"/></operator><ternary><condition><expr><operator pos:line="264" pos:column="35">(<pos:position pos:line="264" pos:column="36"/></operator><name pos:line="264" pos:column="36">max<pos:position pos:line="264" pos:column="39"/></name> <operator pos:line="264" pos:column="40">&gt;<pos:position pos:line="264" pos:column="44"/></operator> <literal type="number" pos:line="264" pos:column="42">0<pos:position pos:line="264" pos:column="43"/></literal><operator pos:line="264" pos:column="43">)<pos:position pos:line="264" pos:column="44"/></operator></expr>?<pos:position pos:line="264" pos:column="45"/></condition><then pos:line="264" pos:column="45"> <expr><literal type="number" pos:line="264" pos:column="46">3<pos:position pos:line="264" pos:column="47"/></literal></expr> <pos:position pos:line="264" pos:column="48"/></then><else pos:line="264" pos:column="48">: <expr><literal type="number" pos:line="264" pos:column="50">1<pos:position pos:line="264" pos:column="51"/></literal></expr></else></ternary><operator pos:line="264" pos:column="51">)<pos:position pos:line="264" pos:column="52"/></operator></expr>;<pos:position pos:line="264" pos:column="53"/></expr_stmt>
      }<pos:position pos:line="265" pos:column="8"/></block></else></if>

    <if pos:line="267" pos:column="5">if <condition pos:line="267" pos:column="8">(<expr><name><name pos:line="267" pos:column="9">ptr<pos:position pos:line="267" pos:column="12"/></name><index pos:line="267" pos:column="12">[<expr><literal type="number" pos:line="267" pos:column="13">1<pos:position pos:line="267" pos:column="14"/></literal></expr>]<pos:position pos:line="267" pos:column="15"/></index></name> <operator pos:line="267" pos:column="16">==<pos:position pos:line="267" pos:column="18"/></operator> <literal type="char" pos:line="267" pos:column="19">'?'<pos:position pos:line="267" pos:column="22"/></literal></expr>)<pos:position pos:line="267" pos:column="23"/></condition><then pos:line="267" pos:column="23"> <block type="pseudo"><expr_stmt><expr><name pos:line="267" pos:column="24">ptr<pos:position pos:line="267" pos:column="27"/></name><operator pos:line="267" pos:column="27">++<pos:position pos:line="267" pos:column="29"/></operator></expr>;<pos:position pos:line="267" pos:column="30"/></expr_stmt></block></then></if>      <comment type="block" pos:line="267" pos:column="36">/* Needs no extra length */</comment>

    <label><name pos:line="269" pos:column="5">POSESSIVE<pos:position pos:line="269" pos:column="14"/></name>:<pos:position pos:line="269" pos:column="15"/></label>                     <comment type="block" pos:line="269" pos:column="36">/* Test for possessive quantifier */</comment>
    <if pos:line="270" pos:column="5">if <condition pos:line="270" pos:column="8">(<expr><name><name pos:line="270" pos:column="9">ptr<pos:position pos:line="270" pos:column="12"/></name><index pos:line="270" pos:column="12">[<expr><literal type="number" pos:line="270" pos:column="13">1<pos:position pos:line="270" pos:column="14"/></literal></expr>]<pos:position pos:line="270" pos:column="15"/></index></name> <operator pos:line="270" pos:column="16">==<pos:position pos:line="270" pos:column="18"/></operator> <literal type="char" pos:line="270" pos:column="19">'+'<pos:position pos:line="270" pos:column="22"/></literal></expr>)<pos:position pos:line="270" pos:column="23"/></condition><then pos:line="270" pos:column="23">
      <block pos:line="271" pos:column="7">{
      <expr_stmt><expr><name pos:line="272" pos:column="7">ptr<pos:position pos:line="272" pos:column="10"/></name><operator pos:line="272" pos:column="10">++<pos:position pos:line="272" pos:column="12"/></operator></expr>;<pos:position pos:line="272" pos:column="13"/></expr_stmt>
      <expr_stmt><expr><name pos:line="273" pos:column="7">length<pos:position pos:line="273" pos:column="13"/></name> <operator pos:line="273" pos:column="14">+=<pos:position pos:line="273" pos:column="16"/></operator> <literal type="number" pos:line="273" pos:column="17">2<pos:position pos:line="273" pos:column="18"/></literal> <operator pos:line="273" pos:column="19">+<pos:position pos:line="273" pos:column="20"/></operator> <literal type="number" pos:line="273" pos:column="21">2<pos:position pos:line="273" pos:column="22"/></literal><operator pos:line="273" pos:column="22">*<pos:position pos:line="273" pos:column="23"/></operator><name pos:line="273" pos:column="23">LINK_SIZE<pos:position pos:line="273" pos:column="32"/></name></expr>;<pos:position pos:line="273" pos:column="33"/></expr_stmt>   <comment type="block" pos:line="273" pos:column="36">/* Allow for atomic brackets */</comment>
      }<pos:position pos:line="274" pos:column="8"/></block></then></if>
    <continue pos:line="275" pos:column="5">continue;<pos:position pos:line="275" pos:column="14"/></continue>

    <comment type="block" pos:line="277" pos:column="5">/* An alternation contains an offset to the next branch or ket. If any ims
    options changed in the previous branch(es), and/or if we are in a
    lookbehind assertion, extra space will be needed at the start of the
    branch. This is handled by branch_extra. */</comment>

    <case pos:line="282" pos:column="5">case <expr><literal type="char" pos:line="282" pos:column="10">'|'<pos:position pos:line="282" pos:column="13"/></literal></expr>:<pos:position pos:line="282" pos:column="14"/></case>
    <expr_stmt><expr><name pos:line="283" pos:column="5">length<pos:position pos:line="283" pos:column="11"/></name> <operator pos:line="283" pos:column="12">+=<pos:position pos:line="283" pos:column="14"/></operator> <literal type="number" pos:line="283" pos:column="15">1<pos:position pos:line="283" pos:column="16"/></literal> <operator pos:line="283" pos:column="17">+<pos:position pos:line="283" pos:column="18"/></operator> <name pos:line="283" pos:column="19">LINK_SIZE<pos:position pos:line="283" pos:column="28"/></name> <operator pos:line="283" pos:column="29">+<pos:position pos:line="283" pos:column="30"/></operator> <name pos:line="283" pos:column="31">branch_extra<pos:position pos:line="283" pos:column="43"/></name></expr>;<pos:position pos:line="283" pos:column="44"/></expr_stmt>
    <continue pos:line="284" pos:column="5">continue;<pos:position pos:line="284" pos:column="14"/></continue>

    <comment type="block" pos:line="286" pos:column="5">/* A character class uses 33 characters provided that all the character
    values are less than 256. Otherwise, it uses a bit map for low valued
    characters, and individual items for others. Don't worry about character
    types that aren't allowed in classes - they'll get picked up during the
    compile. A character class that contains only one single-byte character
    uses 2 or 3 bytes, depending on whether it is negated or not. Notice this
    where we can. (In UTF-8 mode we can do this only for chars &lt; 128.) */</comment>

    <case pos:line="294" pos:column="5">case <expr><literal type="char" pos:line="294" pos:column="10">'['<pos:position pos:line="294" pos:column="13"/></literal></expr>:<pos:position pos:line="294" pos:column="14"/></case>
    <if pos:line="295" pos:column="5">if <condition pos:line="295" pos:column="8">(<expr><operator pos:line="295" pos:column="9">*<pos:position pos:line="295" pos:column="10"/></operator><operator pos:line="295" pos:column="10">(<pos:position pos:line="295" pos:column="11"/></operator><operator pos:line="295" pos:column="11">++<pos:position pos:line="295" pos:column="13"/></operator><name pos:line="295" pos:column="13">ptr<pos:position pos:line="295" pos:column="16"/></name><operator pos:line="295" pos:column="16">)<pos:position pos:line="295" pos:column="17"/></operator> <operator pos:line="295" pos:column="18">==<pos:position pos:line="295" pos:column="20"/></operator> <literal type="char" pos:line="295" pos:column="21">'^'<pos:position pos:line="295" pos:column="24"/></literal></expr>)<pos:position pos:line="295" pos:column="25"/></condition><then pos:line="295" pos:column="25">
      <block pos:line="296" pos:column="7">{
      <expr_stmt><expr><name pos:line="297" pos:column="7">class_optcount<pos:position pos:line="297" pos:column="21"/></name> <operator pos:line="297" pos:column="22">=<pos:position pos:line="297" pos:column="23"/></operator> <literal type="number" pos:line="297" pos:column="24">10<pos:position pos:line="297" pos:column="26"/></literal></expr>;<pos:position pos:line="297" pos:column="27"/></expr_stmt>  <comment type="block" pos:line="297" pos:column="29">/* Greater than one */</comment>
      <expr_stmt><expr><name pos:line="298" pos:column="7">ptr<pos:position pos:line="298" pos:column="10"/></name><operator pos:line="298" pos:column="10">++<pos:position pos:line="298" pos:column="12"/></operator></expr>;<pos:position pos:line="298" pos:column="13"/></expr_stmt>
      }<pos:position pos:line="299" pos:column="8"/></block></then>
    <else pos:line="300" pos:column="5">else <block type="pseudo"><expr_stmt><expr><name pos:line="300" pos:column="10">class_optcount<pos:position pos:line="300" pos:column="24"/></name> <operator pos:line="300" pos:column="25">=<pos:position pos:line="300" pos:column="26"/></operator> <literal type="number" pos:line="300" pos:column="27">0<pos:position pos:line="300" pos:column="28"/></literal></expr>;<pos:position pos:line="300" pos:column="29"/></expr_stmt></block></else></if>

<cpp:ifdef pos:line="302" pos:column="1">#<cpp:directive pos:line="302" pos:column="2">ifdef<pos:position pos:line="302" pos:column="7"/></cpp:directive> <name pos:line="302" pos:column="8">SUPPORT_UTF8<pos:position pos:line="302" pos:column="20"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="303" pos:column="5">class_utf8<pos:position pos:line="303" pos:column="15"/></name> <operator pos:line="303" pos:column="16">=<pos:position pos:line="303" pos:column="17"/></operator> <name pos:line="303" pos:column="18">FALSE<pos:position pos:line="303" pos:column="23"/></name></expr>;<pos:position pos:line="303" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="304" pos:column="1">#<cpp:directive pos:line="304" pos:column="2">endif<pos:position pos:line="304" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="306" pos:column="5">/* Written as a "do" so that an initial ']' is taken as data */</comment>

    <if pos:line="308" pos:column="5">if <condition pos:line="308" pos:column="8">(<expr><operator pos:line="308" pos:column="9">*<pos:position pos:line="308" pos:column="10"/></operator><name pos:line="308" pos:column="10">ptr<pos:position pos:line="308" pos:column="13"/></name> <operator pos:line="308" pos:column="14">!=<pos:position pos:line="308" pos:column="16"/></operator> <literal type="number" pos:line="308" pos:column="17">0<pos:position pos:line="308" pos:column="18"/></literal></expr>)<pos:position pos:line="308" pos:column="19"/></condition><then pos:line="308" pos:column="19"> <block type="pseudo"><do pos:line="308" pos:column="20">do
      <block pos:line="309" pos:column="7">{
      <comment type="block" pos:line="310" pos:column="7">/* Inside \Q...\E everything is literal except \E */</comment>

      <if pos:line="312" pos:column="7">if <condition pos:line="312" pos:column="10">(<expr><name pos:line="312" pos:column="11">inescq<pos:position pos:line="312" pos:column="17"/></name></expr>)<pos:position pos:line="312" pos:column="18"/></condition><then pos:line="312" pos:column="18">
        <block pos:line="313" pos:column="9">{
        <if pos:line="314" pos:column="9">if <condition pos:line="314" pos:column="12">(<expr><operator pos:line="314" pos:column="13">*<pos:position pos:line="314" pos:column="14"/></operator><name pos:line="314" pos:column="14">ptr<pos:position pos:line="314" pos:column="17"/></name> <operator pos:line="314" pos:column="18">!=<pos:position pos:line="314" pos:column="20"/></operator> <literal type="char" pos:line="314" pos:column="21">'\\'<pos:position pos:line="314" pos:column="25"/></literal> <operator pos:line="314" pos:column="26">||<pos:position pos:line="314" pos:column="28"/></operator> <name><name pos:line="314" pos:column="29">ptr<pos:position pos:line="314" pos:column="32"/></name><index pos:line="314" pos:column="32">[<expr><literal type="number" pos:line="314" pos:column="33">1<pos:position pos:line="314" pos:column="34"/></literal></expr>]<pos:position pos:line="314" pos:column="35"/></index></name> <operator pos:line="314" pos:column="36">!=<pos:position pos:line="314" pos:column="38"/></operator> <literal type="char" pos:line="314" pos:column="39">'E'<pos:position pos:line="314" pos:column="42"/></literal></expr>)<pos:position pos:line="314" pos:column="43"/></condition><then pos:line="314" pos:column="43"> <block type="pseudo"><goto pos:line="314" pos:column="44">goto <name pos:line="314" pos:column="49">GET_ONE_CHARACTER<pos:position pos:line="314" pos:column="66"/></name>;<pos:position pos:line="314" pos:column="67"/></goto></block></then></if>
        <expr_stmt><expr><name pos:line="315" pos:column="9">inescq<pos:position pos:line="315" pos:column="15"/></name> <operator pos:line="315" pos:column="16">=<pos:position pos:line="315" pos:column="17"/></operator> <name pos:line="315" pos:column="18">FALSE<pos:position pos:line="315" pos:column="23"/></name></expr>;<pos:position pos:line="315" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="316" pos:column="9">ptr<pos:position pos:line="316" pos:column="12"/></name> <operator pos:line="316" pos:column="13">+=<pos:position pos:line="316" pos:column="15"/></operator> <literal type="number" pos:line="316" pos:column="16">1<pos:position pos:line="316" pos:column="17"/></literal></expr>;<pos:position pos:line="316" pos:column="18"/></expr_stmt>
        <continue pos:line="317" pos:column="9">continue;<pos:position pos:line="317" pos:column="18"/></continue>
        }<pos:position pos:line="318" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="320" pos:column="7">/* Outside \Q...\E, check for escapes */</comment>

      <if pos:line="322" pos:column="7">if <condition pos:line="322" pos:column="10">(<expr><operator pos:line="322" pos:column="11">*<pos:position pos:line="322" pos:column="12"/></operator><name pos:line="322" pos:column="12">ptr<pos:position pos:line="322" pos:column="15"/></name> <operator pos:line="322" pos:column="16">==<pos:position pos:line="322" pos:column="18"/></operator> <literal type="char" pos:line="322" pos:column="19">'\\'<pos:position pos:line="322" pos:column="23"/></literal></expr>)<pos:position pos:line="322" pos:column="24"/></condition><then pos:line="322" pos:column="24">
        <block pos:line="323" pos:column="9">{
        <expr_stmt><expr><name pos:line="324" pos:column="9">c<pos:position pos:line="324" pos:column="10"/></name> <operator pos:line="324" pos:column="11">=<pos:position pos:line="324" pos:column="12"/></operator> <call><name pos:line="324" pos:column="13">check_escape<pos:position pos:line="324" pos:column="25"/></name><argument_list pos:line="324" pos:column="25">(<argument><expr><operator pos:line="324" pos:column="26">&amp;<pos:position pos:line="324" pos:column="31"/></operator><name pos:line="324" pos:column="27">ptr<pos:position pos:line="324" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="324" pos:column="32">errorptr<pos:position pos:line="324" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="324" pos:column="42">bracount<pos:position pos:line="324" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="324" pos:column="52">options<pos:position pos:line="324" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="324" pos:column="61">TRUE<pos:position pos:line="324" pos:column="65"/></name></expr></argument>)<pos:position pos:line="324" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="67"/></expr_stmt>
        <if pos:line="325" pos:column="9">if <condition pos:line="325" pos:column="12">(<expr><operator pos:line="325" pos:column="13">*<pos:position pos:line="325" pos:column="14"/></operator><name pos:line="325" pos:column="14">errorptr<pos:position pos:line="325" pos:column="22"/></name> <operator pos:line="325" pos:column="23">!=<pos:position pos:line="325" pos:column="25"/></operator> <name pos:line="325" pos:column="26">NULL<pos:position pos:line="325" pos:column="30"/></name></expr>)<pos:position pos:line="325" pos:column="31"/></condition><then pos:line="325" pos:column="31"> <block type="pseudo"><goto pos:line="325" pos:column="32">goto <name pos:line="325" pos:column="37">PCRE_ERROR_RETURN<pos:position pos:line="325" pos:column="54"/></name>;<pos:position pos:line="325" pos:column="55"/></goto></block></then></if>

        <comment type="block" pos:line="327" pos:column="9">/* \b is backspace inside a class; \X is literal */</comment>

        <if pos:line="329" pos:column="9">if <condition pos:line="329" pos:column="12">(<expr><operator pos:line="329" pos:column="13">-<pos:position pos:line="329" pos:column="14"/></operator><name pos:line="329" pos:column="14">c<pos:position pos:line="329" pos:column="15"/></name> <operator pos:line="329" pos:column="16">==<pos:position pos:line="329" pos:column="18"/></operator> <name pos:line="329" pos:column="19">ESC_b<pos:position pos:line="329" pos:column="24"/></name></expr>)<pos:position pos:line="329" pos:column="25"/></condition><then pos:line="329" pos:column="25"> <block type="pseudo"><expr_stmt><expr><name pos:line="329" pos:column="26">c<pos:position pos:line="329" pos:column="27"/></name> <operator pos:line="329" pos:column="28">=<pos:position pos:line="329" pos:column="29"/></operator> <literal type="char" pos:line="329" pos:column="30">'\b'<pos:position pos:line="329" pos:column="34"/></literal></expr>;<pos:position pos:line="329" pos:column="35"/></expr_stmt></block></then>
        <elseif pos:line="330" pos:column="9">else <if pos:line="330" pos:column="14">if <condition pos:line="330" pos:column="17">(<expr><operator pos:line="330" pos:column="18">-<pos:position pos:line="330" pos:column="19"/></operator><name pos:line="330" pos:column="19">c<pos:position pos:line="330" pos:column="20"/></name> <operator pos:line="330" pos:column="21">==<pos:position pos:line="330" pos:column="23"/></operator> <name pos:line="330" pos:column="24">ESC_X<pos:position pos:line="330" pos:column="29"/></name></expr>)<pos:position pos:line="330" pos:column="30"/></condition><then pos:line="330" pos:column="30"> <block type="pseudo"><expr_stmt><expr><name pos:line="330" pos:column="31">c<pos:position pos:line="330" pos:column="32"/></name> <operator pos:line="330" pos:column="33">=<pos:position pos:line="330" pos:column="34"/></operator> <literal type="char" pos:line="330" pos:column="35">'X'<pos:position pos:line="330" pos:column="38"/></literal></expr>;<pos:position pos:line="330" pos:column="39"/></expr_stmt></block></then></if></elseif>

        <comment type="block" pos:line="332" pos:column="9">/* \Q enters quoting mode */</comment>

        <elseif pos:line="334" pos:column="9">else <if pos:line="334" pos:column="14">if <condition pos:line="334" pos:column="17">(<expr><operator pos:line="334" pos:column="18">-<pos:position pos:line="334" pos:column="19"/></operator><name pos:line="334" pos:column="19">c<pos:position pos:line="334" pos:column="20"/></name> <operator pos:line="334" pos:column="21">==<pos:position pos:line="334" pos:column="23"/></operator> <name pos:line="334" pos:column="24">ESC_Q<pos:position pos:line="334" pos:column="29"/></name></expr>)<pos:position pos:line="334" pos:column="30"/></condition><then pos:line="334" pos:column="30">
          <block pos:line="335" pos:column="11">{
          <expr_stmt><expr><name pos:line="336" pos:column="11">inescq<pos:position pos:line="336" pos:column="17"/></name> <operator pos:line="336" pos:column="18">=<pos:position pos:line="336" pos:column="19"/></operator> <name pos:line="336" pos:column="20">TRUE<pos:position pos:line="336" pos:column="24"/></name></expr>;<pos:position pos:line="336" pos:column="25"/></expr_stmt>
          <continue pos:line="337" pos:column="11">continue;<pos:position pos:line="337" pos:column="20"/></continue>
          }<pos:position pos:line="338" pos:column="12"/></block></then></if></elseif></if>

        <comment type="block" pos:line="340" pos:column="9">/* Handle escapes that turn into characters */</comment>

        <if pos:line="342" pos:column="9">if <condition pos:line="342" pos:column="12">(<expr><name pos:line="342" pos:column="13">c<pos:position pos:line="342" pos:column="14"/></name> <operator pos:line="342" pos:column="15">&gt;=<pos:position pos:line="342" pos:column="20"/></operator> <literal type="number" pos:line="342" pos:column="18">0<pos:position pos:line="342" pos:column="19"/></literal></expr>)<pos:position pos:line="342" pos:column="20"/></condition><then pos:line="342" pos:column="20"> <block type="pseudo"><goto pos:line="342" pos:column="21">goto <name pos:line="342" pos:column="26">NON_SPECIAL_CHARACTER<pos:position pos:line="342" pos:column="47"/></name>;<pos:position pos:line="342" pos:column="48"/></goto></block></then>

        <comment type="block" pos:line="344" pos:column="9">/* Escapes that are meta-things. The normal ones just affect the
        bit map, but Unicode properties require an XCLASS extended item. */</comment>

        <else pos:line="347" pos:column="9">else
          <block pos:line="348" pos:column="11">{
          <expr_stmt><expr><name pos:line="349" pos:column="11">class_optcount<pos:position pos:line="349" pos:column="25"/></name> <operator pos:line="349" pos:column="26">=<pos:position pos:line="349" pos:column="27"/></operator> <literal type="number" pos:line="349" pos:column="28">10<pos:position pos:line="349" pos:column="30"/></literal></expr>;<pos:position pos:line="349" pos:column="31"/></expr_stmt>         <comment type="block" pos:line="349" pos:column="40">/* \d, \s etc; make sure &gt; 1 */</comment>
<cpp:ifdef pos:line="350" pos:column="1">#<cpp:directive pos:line="350" pos:column="2">ifdef<pos:position pos:line="350" pos:column="7"/></cpp:directive> <name pos:line="350" pos:column="8">SUPPORT_UTF8<pos:position pos:line="350" pos:column="20"/></name></cpp:ifdef>
          <if pos:line="351" pos:column="11">if <condition pos:line="351" pos:column="14">(<expr><operator pos:line="351" pos:column="15">-<pos:position pos:line="351" pos:column="16"/></operator><name pos:line="351" pos:column="16">c<pos:position pos:line="351" pos:column="17"/></name> <operator pos:line="351" pos:column="18">==<pos:position pos:line="351" pos:column="20"/></operator> <name pos:line="351" pos:column="21">ESC_p<pos:position pos:line="351" pos:column="26"/></name> <operator pos:line="351" pos:column="27">||<pos:position pos:line="351" pos:column="29"/></operator> <operator pos:line="351" pos:column="30">-<pos:position pos:line="351" pos:column="31"/></operator><name pos:line="351" pos:column="31">c<pos:position pos:line="351" pos:column="32"/></name> <operator pos:line="351" pos:column="33">==<pos:position pos:line="351" pos:column="35"/></operator> <name pos:line="351" pos:column="36">ESC_P<pos:position pos:line="351" pos:column="41"/></name></expr>)<pos:position pos:line="351" pos:column="42"/></condition><then pos:line="351" pos:column="42">
            <block pos:line="352" pos:column="13">{
            <if pos:line="353" pos:column="13">if <condition pos:line="353" pos:column="16">(<expr><operator pos:line="353" pos:column="17">!<pos:position pos:line="353" pos:column="18"/></operator><name pos:line="353" pos:column="18">class_utf8<pos:position pos:line="353" pos:column="28"/></name></expr>)<pos:position pos:line="353" pos:column="29"/></condition><then pos:line="353" pos:column="29">
              <block pos:line="354" pos:column="15">{
              <expr_stmt><expr><name pos:line="355" pos:column="15">class_utf8<pos:position pos:line="355" pos:column="25"/></name> <operator pos:line="355" pos:column="26">=<pos:position pos:line="355" pos:column="27"/></operator> <name pos:line="355" pos:column="28">TRUE<pos:position pos:line="355" pos:column="32"/></name></expr>;<pos:position pos:line="355" pos:column="33"/></expr_stmt>
              <expr_stmt><expr><name pos:line="356" pos:column="15">length<pos:position pos:line="356" pos:column="21"/></name> <operator pos:line="356" pos:column="22">+=<pos:position pos:line="356" pos:column="24"/></operator> <name pos:line="356" pos:column="25">LINK_SIZE<pos:position pos:line="356" pos:column="34"/></name> <operator pos:line="356" pos:column="35">+<pos:position pos:line="356" pos:column="36"/></operator> <literal type="number" pos:line="356" pos:column="37">2<pos:position pos:line="356" pos:column="38"/></literal></expr>;<pos:position pos:line="356" pos:column="39"/></expr_stmt>
              }<pos:position pos:line="357" pos:column="16"/></block></then></if>
            <expr_stmt><expr><name pos:line="358" pos:column="13">length<pos:position pos:line="358" pos:column="19"/></name> <operator pos:line="358" pos:column="20">+=<pos:position pos:line="358" pos:column="22"/></operator> <literal type="number" pos:line="358" pos:column="23">2<pos:position pos:line="358" pos:column="24"/></literal></expr>;<pos:position pos:line="358" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="359" pos:column="14"/></block></then></if>
<cpp:endif pos:line="360" pos:column="1">#<cpp:directive pos:line="360" pos:column="2">endif<pos:position pos:line="360" pos:column="7"/></cpp:directive></cpp:endif>
          }<pos:position pos:line="361" pos:column="12"/></block></else></if>
        }<pos:position pos:line="362" pos:column="10"/></block></then>

      <comment type="block" pos:line="364" pos:column="7">/* Check the syntax for POSIX stuff. The bits we actually handle are
      checked during the real compile phase. */</comment>

      <elseif pos:line="367" pos:column="7">else <if pos:line="367" pos:column="12">if <condition pos:line="367" pos:column="15">(<expr><operator pos:line="367" pos:column="16">*<pos:position pos:line="367" pos:column="17"/></operator><name pos:line="367" pos:column="17">ptr<pos:position pos:line="367" pos:column="20"/></name> <operator pos:line="367" pos:column="21">==<pos:position pos:line="367" pos:column="23"/></operator> <literal type="char" pos:line="367" pos:column="24">'['<pos:position pos:line="367" pos:column="27"/></literal> <operator pos:line="367" pos:column="28">&amp;&amp;<pos:position pos:line="367" pos:column="38"/></operator> <call><name pos:line="367" pos:column="31">check_posix_syntax<pos:position pos:line="367" pos:column="49"/></name><argument_list pos:line="367" pos:column="49">(<argument><expr><name pos:line="367" pos:column="50">ptr<pos:position pos:line="367" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="367" pos:column="55">&amp;<pos:position pos:line="367" pos:column="60"/></operator><name pos:line="367" pos:column="56">ptr<pos:position pos:line="367" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="367" pos:column="61">&amp;<pos:position pos:line="367" pos:column="66"/></operator><name pos:line="367" pos:column="62">compile_block<pos:position pos:line="367" pos:column="75"/></name></expr></argument>)<pos:position pos:line="367" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="367" pos:column="77"/></condition><then pos:line="367" pos:column="77">
        <block pos:line="368" pos:column="9">{
        <expr_stmt><expr><name pos:line="369" pos:column="9">ptr<pos:position pos:line="369" pos:column="12"/></name><operator pos:line="369" pos:column="12">++<pos:position pos:line="369" pos:column="14"/></operator></expr>;<pos:position pos:line="369" pos:column="15"/></expr_stmt>
        <expr_stmt><expr><name pos:line="370" pos:column="9">class_optcount<pos:position pos:line="370" pos:column="23"/></name> <operator pos:line="370" pos:column="24">=<pos:position pos:line="370" pos:column="25"/></operator> <literal type="number" pos:line="370" pos:column="26">10<pos:position pos:line="370" pos:column="28"/></literal></expr>;<pos:position pos:line="370" pos:column="29"/></expr_stmt>    <comment type="block" pos:line="370" pos:column="33">/* Make sure &gt; 1 */</comment>
        }<pos:position pos:line="371" pos:column="10"/></block></then></if></elseif>

      <comment type="block" pos:line="373" pos:column="7">/* Anything else increments the possible optimization count. We have to
      detect ranges here so that we can compute the number of extra ranges for
      caseless wide characters when UCP support is available. If there are wide
      characters, we are going to have to use an XCLASS, even for single
      characters. */</comment>

      <else pos:line="379" pos:column="7">else
        <block pos:line="380" pos:column="9">{
        <decl_stmt><decl><type><name pos:line="381" pos:column="9">int<pos:position pos:line="381" pos:column="12"/></name></type> <name pos:line="381" pos:column="13">d<pos:position pos:line="381" pos:column="14"/></name></decl>;<pos:position pos:line="381" pos:column="15"/></decl_stmt>

        <label><name pos:line="383" pos:column="9">GET_ONE_CHARACTER<pos:position pos:line="383" pos:column="26"/></name>:<pos:position pos:line="383" pos:column="27"/></label>

<cpp:ifdef pos:line="385" pos:column="1">#<cpp:directive pos:line="385" pos:column="2">ifdef<pos:position pos:line="385" pos:column="7"/></cpp:directive> <name pos:line="385" pos:column="8">SUPPORT_UTF8<pos:position pos:line="385" pos:column="20"/></name></cpp:ifdef>
        <if pos:line="386" pos:column="9">if <condition pos:line="386" pos:column="12">(<expr><name pos:line="386" pos:column="13">utf8<pos:position pos:line="386" pos:column="17"/></name></expr>)<pos:position pos:line="386" pos:column="18"/></condition><then pos:line="386" pos:column="18">
          <block pos:line="387" pos:column="11">{
          <decl_stmt><decl><type><name pos:line="388" pos:column="11">int<pos:position pos:line="388" pos:column="14"/></name></type> <name pos:line="388" pos:column="15">extra<pos:position pos:line="388" pos:column="20"/></name> <init pos:line="388" pos:column="21">= <expr><literal type="number" pos:line="388" pos:column="23">0<pos:position pos:line="388" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="388" pos:column="25"/></decl_stmt>
          <expr_stmt><expr><call><name pos:line="389" pos:column="11">GETCHARLEN<pos:position pos:line="389" pos:column="21"/></name><argument_list pos:line="389" pos:column="21">(<argument><expr><name pos:line="389" pos:column="22">c<pos:position pos:line="389" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="389" pos:column="25">ptr<pos:position pos:line="389" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="389" pos:column="30">extra<pos:position pos:line="389" pos:column="35"/></name></expr></argument>)<pos:position pos:line="389" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="389" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><name pos:line="390" pos:column="11">ptr<pos:position pos:line="390" pos:column="14"/></name> <operator pos:line="390" pos:column="15">+=<pos:position pos:line="390" pos:column="17"/></operator> <name pos:line="390" pos:column="18">extra<pos:position pos:line="390" pos:column="23"/></name></expr>;<pos:position pos:line="390" pos:column="24"/></expr_stmt>
          }<pos:position pos:line="391" pos:column="12"/></block></then>
        <else pos:line="392" pos:column="9">else <block type="pseudo"><expr_stmt><expr><name pos:line="392" pos:column="14">c<pos:position pos:line="392" pos:column="15"/></name> <operator pos:line="392" pos:column="16">=<pos:position pos:line="392" pos:column="17"/></operator> <operator pos:line="392" pos:column="18">*<pos:position pos:line="392" pos:column="19"/></operator><name pos:line="392" pos:column="19">ptr<pos:position pos:line="392" pos:column="22"/></name></expr>;<pos:position pos:line="392" pos:column="23"/></expr_stmt></block></else></if>
<cpp:else pos:line="393" pos:column="1">#<cpp:directive pos:line="393" pos:column="2">else<pos:position pos:line="393" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="394" pos:column="9">c<pos:position pos:line="394" pos:column="10"/></name> <operator pos:line="394" pos:column="11">=<pos:position pos:line="394" pos:column="12"/></operator> <operator pos:line="394" pos:column="13">*<pos:position pos:line="394" pos:column="14"/></operator><name pos:line="394" pos:column="14">ptr<pos:position pos:line="394" pos:column="17"/></name></expr>;<pos:position pos:line="394" pos:column="18"/></expr_stmt>
<cpp:endif pos:line="395" pos:column="1">#<cpp:directive pos:line="395" pos:column="2">endif<pos:position pos:line="395" pos:column="7"/></cpp:directive></cpp:endif>

        <comment type="block" pos:line="397" pos:column="9">/* Come here from handling \ above when it escapes to a char value */</comment>

        <label><name pos:line="399" pos:column="9">NON_SPECIAL_CHARACTER<pos:position pos:line="399" pos:column="30"/></name>:<pos:position pos:line="399" pos:column="31"/></label>
        <expr_stmt><expr><name pos:line="400" pos:column="9">class_optcount<pos:position pos:line="400" pos:column="23"/></name><operator pos:line="400" pos:column="23">++<pos:position pos:line="400" pos:column="25"/></operator></expr>;<pos:position pos:line="400" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><name pos:line="402" pos:column="9">d<pos:position pos:line="402" pos:column="10"/></name> <operator pos:line="402" pos:column="11">=<pos:position pos:line="402" pos:column="12"/></operator> <operator pos:line="402" pos:column="13">-<pos:position pos:line="402" pos:column="14"/></operator><literal type="number" pos:line="402" pos:column="14">1<pos:position pos:line="402" pos:column="15"/></literal></expr>;<pos:position pos:line="402" pos:column="16"/></expr_stmt>
        <if pos:line="403" pos:column="9">if <condition pos:line="403" pos:column="12">(<expr><name><name pos:line="403" pos:column="13">ptr<pos:position pos:line="403" pos:column="16"/></name><index pos:line="403" pos:column="16">[<expr><literal type="number" pos:line="403" pos:column="17">1<pos:position pos:line="403" pos:column="18"/></literal></expr>]<pos:position pos:line="403" pos:column="19"/></index></name> <operator pos:line="403" pos:column="20">==<pos:position pos:line="403" pos:column="22"/></operator> <literal type="char" pos:line="403" pos:column="23">'-'<pos:position pos:line="403" pos:column="26"/></literal></expr>)<pos:position pos:line="403" pos:column="27"/></condition><then pos:line="403" pos:column="27">
          <block pos:line="404" pos:column="11">{
          <decl_stmt><decl><type><name pos:line="405" pos:column="11">uschar<pos:position pos:line="405" pos:column="17"/></name> <specifier pos:line="405" pos:column="18">const<pos:position pos:line="405" pos:column="23"/></specifier> <modifier pos:line="405" pos:column="24">*<pos:position pos:line="405" pos:column="25"/></modifier></type><name pos:line="405" pos:column="25">hyptr<pos:position pos:line="405" pos:column="30"/></name> <init pos:line="405" pos:column="31">= <expr><name pos:line="405" pos:column="33">ptr<pos:position pos:line="405" pos:column="36"/></name><operator pos:line="405" pos:column="36">++<pos:position pos:line="405" pos:column="38"/></operator></expr></init></decl>;<pos:position pos:line="405" pos:column="39"/></decl_stmt>
          <if pos:line="406" pos:column="11">if <condition pos:line="406" pos:column="14">(<expr><name><name pos:line="406" pos:column="15">ptr<pos:position pos:line="406" pos:column="18"/></name><index pos:line="406" pos:column="18">[<expr><literal type="number" pos:line="406" pos:column="19">1<pos:position pos:line="406" pos:column="20"/></literal></expr>]<pos:position pos:line="406" pos:column="21"/></index></name> <operator pos:line="406" pos:column="22">==<pos:position pos:line="406" pos:column="24"/></operator> <literal type="char" pos:line="406" pos:column="25">'\\'<pos:position pos:line="406" pos:column="29"/></literal></expr>)<pos:position pos:line="406" pos:column="30"/></condition><then pos:line="406" pos:column="30">
            <block pos:line="407" pos:column="13">{
            <expr_stmt><expr><name pos:line="408" pos:column="13">ptr<pos:position pos:line="408" pos:column="16"/></name><operator pos:line="408" pos:column="16">++<pos:position pos:line="408" pos:column="18"/></operator></expr>;<pos:position pos:line="408" pos:column="19"/></expr_stmt>
            <expr_stmt><expr><name pos:line="409" pos:column="13">d<pos:position pos:line="409" pos:column="14"/></name> <operator pos:line="409" pos:column="15">=<pos:position pos:line="409" pos:column="16"/></operator> <call><name pos:line="409" pos:column="17">check_escape<pos:position pos:line="409" pos:column="29"/></name><argument_list pos:line="409" pos:column="29">(<argument><expr><operator pos:line="409" pos:column="30">&amp;<pos:position pos:line="409" pos:column="35"/></operator><name pos:line="409" pos:column="31">ptr<pos:position pos:line="409" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="409" pos:column="36">errorptr<pos:position pos:line="409" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="409" pos:column="46">bracount<pos:position pos:line="409" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="409" pos:column="56">options<pos:position pos:line="409" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="409" pos:column="65">TRUE<pos:position pos:line="409" pos:column="69"/></name></expr></argument>)<pos:position pos:line="409" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="409" pos:column="71"/></expr_stmt>
            <if pos:line="410" pos:column="13">if <condition pos:line="410" pos:column="16">(<expr><operator pos:line="410" pos:column="17">*<pos:position pos:line="410" pos:column="18"/></operator><name pos:line="410" pos:column="18">errorptr<pos:position pos:line="410" pos:column="26"/></name> <operator pos:line="410" pos:column="27">!=<pos:position pos:line="410" pos:column="29"/></operator> <name pos:line="410" pos:column="30">NULL<pos:position pos:line="410" pos:column="34"/></name></expr>)<pos:position pos:line="410" pos:column="35"/></condition><then pos:line="410" pos:column="35"> <block type="pseudo"><goto pos:line="410" pos:column="36">goto <name pos:line="410" pos:column="41">PCRE_ERROR_RETURN<pos:position pos:line="410" pos:column="58"/></name>;<pos:position pos:line="410" pos:column="59"/></goto></block></then></if>
            <if pos:line="411" pos:column="13">if <condition pos:line="411" pos:column="16">(<expr><operator pos:line="411" pos:column="17">-<pos:position pos:line="411" pos:column="18"/></operator><name pos:line="411" pos:column="18">d<pos:position pos:line="411" pos:column="19"/></name> <operator pos:line="411" pos:column="20">==<pos:position pos:line="411" pos:column="22"/></operator> <name pos:line="411" pos:column="23">ESC_b<pos:position pos:line="411" pos:column="28"/></name></expr>)<pos:position pos:line="411" pos:column="29"/></condition><then pos:line="411" pos:column="29"> <block type="pseudo"><expr_stmt><expr><name pos:line="411" pos:column="30">d<pos:position pos:line="411" pos:column="31"/></name> <operator pos:line="411" pos:column="32">=<pos:position pos:line="411" pos:column="33"/></operator> <literal type="char" pos:line="411" pos:column="34">'\b'<pos:position pos:line="411" pos:column="38"/></literal></expr>;<pos:position pos:line="411" pos:column="39"/></expr_stmt></block></then>        <comment type="block" pos:line="411" pos:column="47">/* backspace */</comment>
            <elseif pos:line="412" pos:column="13">else <if pos:line="412" pos:column="18">if <condition pos:line="412" pos:column="21">(<expr><operator pos:line="412" pos:column="22">-<pos:position pos:line="412" pos:column="23"/></operator><name pos:line="412" pos:column="23">d<pos:position pos:line="412" pos:column="24"/></name> <operator pos:line="412" pos:column="25">==<pos:position pos:line="412" pos:column="27"/></operator> <name pos:line="412" pos:column="28">ESC_X<pos:position pos:line="412" pos:column="33"/></name></expr>)<pos:position pos:line="412" pos:column="34"/></condition><then pos:line="412" pos:column="34"> <block type="pseudo"><expr_stmt><expr><name pos:line="412" pos:column="35">d<pos:position pos:line="412" pos:column="36"/></name> <operator pos:line="412" pos:column="37">=<pos:position pos:line="412" pos:column="38"/></operator> <literal type="char" pos:line="412" pos:column="39">'X'<pos:position pos:line="412" pos:column="42"/></literal></expr>;<pos:position pos:line="412" pos:column="43"/></expr_stmt></block></then></if></elseif></if>    <comment type="block" pos:line="412" pos:column="47">/* literal X in a class */</comment>
            }<pos:position pos:line="413" pos:column="14"/></block></then>
          <elseif pos:line="414" pos:column="11">else <if pos:line="414" pos:column="16">if <condition pos:line="414" pos:column="19">(<expr><name><name pos:line="414" pos:column="20">ptr<pos:position pos:line="414" pos:column="23"/></name><index pos:line="414" pos:column="23">[<expr><literal type="number" pos:line="414" pos:column="24">1<pos:position pos:line="414" pos:column="25"/></literal></expr>]<pos:position pos:line="414" pos:column="26"/></index></name> <operator pos:line="414" pos:column="27">!=<pos:position pos:line="414" pos:column="29"/></operator> <literal type="number" pos:line="414" pos:column="30">0<pos:position pos:line="414" pos:column="31"/></literal> <operator pos:line="414" pos:column="32">&amp;&amp;<pos:position pos:line="414" pos:column="42"/></operator> <name><name pos:line="414" pos:column="35">ptr<pos:position pos:line="414" pos:column="38"/></name><index pos:line="414" pos:column="38">[<expr><literal type="number" pos:line="414" pos:column="39">1<pos:position pos:line="414" pos:column="40"/></literal></expr>]<pos:position pos:line="414" pos:column="41"/></index></name> <operator pos:line="414" pos:column="42">!=<pos:position pos:line="414" pos:column="44"/></operator> <literal type="char" pos:line="414" pos:column="45">']'<pos:position pos:line="414" pos:column="48"/></literal></expr>)<pos:position pos:line="414" pos:column="49"/></condition><then pos:line="414" pos:column="49">
            <block pos:line="415" pos:column="13">{
            <expr_stmt><expr><name pos:line="416" pos:column="13">ptr<pos:position pos:line="416" pos:column="16"/></name><operator pos:line="416" pos:column="16">++<pos:position pos:line="416" pos:column="18"/></operator></expr>;<pos:position pos:line="416" pos:column="19"/></expr_stmt>
<cpp:ifdef pos:line="417" pos:column="1">#<cpp:directive pos:line="417" pos:column="2">ifdef<pos:position pos:line="417" pos:column="7"/></cpp:directive> <name pos:line="417" pos:column="8">SUPPORT_UTF8<pos:position pos:line="417" pos:column="20"/></name></cpp:ifdef>
            <if pos:line="418" pos:column="13">if <condition pos:line="418" pos:column="16">(<expr><name pos:line="418" pos:column="17">utf8<pos:position pos:line="418" pos:column="21"/></name></expr>)<pos:position pos:line="418" pos:column="22"/></condition><then pos:line="418" pos:column="22">
              <block pos:line="419" pos:column="15">{
              <decl_stmt><decl><type><name pos:line="420" pos:column="15">int<pos:position pos:line="420" pos:column="18"/></name></type> <name pos:line="420" pos:column="19">extra<pos:position pos:line="420" pos:column="24"/></name> <init pos:line="420" pos:column="25">= <expr><literal type="number" pos:line="420" pos:column="27">0<pos:position pos:line="420" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="420" pos:column="29"/></decl_stmt>
              <expr_stmt><expr><call><name pos:line="421" pos:column="15">GETCHARLEN<pos:position pos:line="421" pos:column="25"/></name><argument_list pos:line="421" pos:column="25">(<argument><expr><name pos:line="421" pos:column="26">d<pos:position pos:line="421" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="421" pos:column="29">ptr<pos:position pos:line="421" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="421" pos:column="34">extra<pos:position pos:line="421" pos:column="39"/></name></expr></argument>)<pos:position pos:line="421" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="421" pos:column="41"/></expr_stmt>
              <expr_stmt><expr><name pos:line="422" pos:column="15">ptr<pos:position pos:line="422" pos:column="18"/></name> <operator pos:line="422" pos:column="19">+=<pos:position pos:line="422" pos:column="21"/></operator> <name pos:line="422" pos:column="22">extra<pos:position pos:line="422" pos:column="27"/></name></expr>;<pos:position pos:line="422" pos:column="28"/></expr_stmt>
              }<pos:position pos:line="423" pos:column="16"/></block></then>
            <else pos:line="424" pos:column="13">else
<cpp:endif pos:line="425" pos:column="1">#<cpp:directive pos:line="425" pos:column="2">endif<pos:position pos:line="425" pos:column="7"/></cpp:directive></cpp:endif>
            <block type="pseudo"><expr_stmt><expr><name pos:line="426" pos:column="13">d<pos:position pos:line="426" pos:column="14"/></name> <operator pos:line="426" pos:column="15">=<pos:position pos:line="426" pos:column="16"/></operator> <operator pos:line="426" pos:column="17">*<pos:position pos:line="426" pos:column="18"/></operator><name pos:line="426" pos:column="18">ptr<pos:position pos:line="426" pos:column="21"/></name></expr>;<pos:position pos:line="426" pos:column="22"/></expr_stmt></block></else></if>
            }<pos:position pos:line="427" pos:column="14"/></block></then></if></elseif></if>
          <if pos:line="428" pos:column="11">if <condition pos:line="428" pos:column="14">(<expr><name pos:line="428" pos:column="15">d<pos:position pos:line="428" pos:column="16"/></name> <operator pos:line="428" pos:column="17">&lt;<pos:position pos:line="428" pos:column="21"/></operator> <literal type="number" pos:line="428" pos:column="19">0<pos:position pos:line="428" pos:column="20"/></literal></expr>)<pos:position pos:line="428" pos:column="21"/></condition><then pos:line="428" pos:column="21"> <block type="pseudo"><expr_stmt><expr><name pos:line="428" pos:column="22">ptr<pos:position pos:line="428" pos:column="25"/></name> <operator pos:line="428" pos:column="26">=<pos:position pos:line="428" pos:column="27"/></operator> <name pos:line="428" pos:column="28">hyptr<pos:position pos:line="428" pos:column="33"/></name></expr>;<pos:position pos:line="428" pos:column="34"/></expr_stmt></block></then></if>      <comment type="block" pos:line="428" pos:column="40">/* go back to hyphen as data */</comment>
          }<pos:position pos:line="429" pos:column="12"/></block></then></if>

        <comment type="block" pos:line="431" pos:column="9">/* If d &gt;= 0 we have a range. In UTF-8 mode, if the end is &gt; 255, or &gt;
        127 for caseless matching, we will need to use an XCLASS. */</comment>

        <if pos:line="434" pos:column="9">if <condition pos:line="434" pos:column="12">(<expr><name pos:line="434" pos:column="13">d<pos:position pos:line="434" pos:column="14"/></name> <operator pos:line="434" pos:column="15">&gt;=<pos:position pos:line="434" pos:column="20"/></operator> <literal type="number" pos:line="434" pos:column="18">0<pos:position pos:line="434" pos:column="19"/></literal></expr>)<pos:position pos:line="434" pos:column="20"/></condition><then pos:line="434" pos:column="20">
          <block pos:line="435" pos:column="11">{
          <expr_stmt><expr><name pos:line="436" pos:column="11">class_optcount<pos:position pos:line="436" pos:column="25"/></name> <operator pos:line="436" pos:column="26">=<pos:position pos:line="436" pos:column="27"/></operator> <literal type="number" pos:line="436" pos:column="28">10<pos:position pos:line="436" pos:column="30"/></literal></expr>;<pos:position pos:line="436" pos:column="31"/></expr_stmt>     <comment type="block" pos:line="436" pos:column="36">/* Ensure &gt; 1 */</comment>
          <if pos:line="437" pos:column="11">if <condition pos:line="437" pos:column="14">(<expr><name pos:line="437" pos:column="15">d<pos:position pos:line="437" pos:column="16"/></name> <operator pos:line="437" pos:column="17">&lt;<pos:position pos:line="437" pos:column="21"/></operator> <name pos:line="437" pos:column="19">c<pos:position pos:line="437" pos:column="20"/></name></expr>)<pos:position pos:line="437" pos:column="21"/></condition><then pos:line="437" pos:column="21">
            <block pos:line="438" pos:column="13">{
            <expr_stmt><expr><operator pos:line="439" pos:column="13">*<pos:position pos:line="439" pos:column="14"/></operator><name pos:line="439" pos:column="14">errorptr<pos:position pos:line="439" pos:column="22"/></name> <operator pos:line="439" pos:column="23">=<pos:position pos:line="439" pos:column="24"/></operator> <name pos:line="439" pos:column="25">ERR8<pos:position pos:line="439" pos:column="29"/></name></expr>;<pos:position pos:line="439" pos:column="30"/></expr_stmt>
            <goto pos:line="440" pos:column="13">goto <name pos:line="440" pos:column="18">PCRE_ERROR_RETURN<pos:position pos:line="440" pos:column="35"/></name>;<pos:position pos:line="440" pos:column="36"/></goto>
            }<pos:position pos:line="441" pos:column="14"/></block></then></if>

<cpp:ifdef pos:line="443" pos:column="1">#<cpp:directive pos:line="443" pos:column="2">ifdef<pos:position pos:line="443" pos:column="7"/></cpp:directive> <name pos:line="443" pos:column="8">SUPPORT_UTF8<pos:position pos:line="443" pos:column="20"/></name></cpp:ifdef>
          <if pos:line="444" pos:column="11">if <condition pos:line="444" pos:column="14">(<expr><name pos:line="444" pos:column="15">utf8<pos:position pos:line="444" pos:column="19"/></name> <operator pos:line="444" pos:column="20">&amp;&amp;<pos:position pos:line="444" pos:column="30"/></operator> <operator pos:line="444" pos:column="23">(<pos:position pos:line="444" pos:column="24"/></operator><name pos:line="444" pos:column="24">d<pos:position pos:line="444" pos:column="25"/></name> <operator pos:line="444" pos:column="26">&gt;<pos:position pos:line="444" pos:column="30"/></operator> <literal type="number" pos:line="444" pos:column="28">255<pos:position pos:line="444" pos:column="31"/></literal> <operator pos:line="444" pos:column="32">||<pos:position pos:line="444" pos:column="34"/></operator> <operator pos:line="444" pos:column="35">(<pos:position pos:line="444" pos:column="36"/></operator><operator pos:line="444" pos:column="36">(<pos:position pos:line="444" pos:column="37"/></operator><name pos:line="444" pos:column="37">options<pos:position pos:line="444" pos:column="44"/></name> <operator pos:line="444" pos:column="45">&amp;<pos:position pos:line="444" pos:column="50"/></operator> <name pos:line="444" pos:column="47">PCRE_CASELESS<pos:position pos:line="444" pos:column="60"/></name><operator pos:line="444" pos:column="60">)<pos:position pos:line="444" pos:column="61"/></operator> <operator pos:line="444" pos:column="62">!=<pos:position pos:line="444" pos:column="64"/></operator> <literal type="number" pos:line="444" pos:column="65">0<pos:position pos:line="444" pos:column="66"/></literal> <operator pos:line="444" pos:column="67">&amp;&amp;<pos:position pos:line="444" pos:column="77"/></operator> <name pos:line="444" pos:column="70">d<pos:position pos:line="444" pos:column="71"/></name> <operator pos:line="444" pos:column="72">&gt;<pos:position pos:line="444" pos:column="76"/></operator> <literal type="number" pos:line="444" pos:column="74">127<pos:position pos:line="444" pos:column="77"/></literal><operator pos:line="444" pos:column="77">)<pos:position pos:line="444" pos:column="78"/></operator><operator pos:line="444" pos:column="78">)<pos:position pos:line="444" pos:column="79"/></operator></expr>)<pos:position pos:line="444" pos:column="80"/></condition><then pos:line="444" pos:column="80">
            <block pos:line="445" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="446" pos:column="13">uschar<pos:position pos:line="446" pos:column="19"/></name></type> <name><name pos:line="446" pos:column="20">buffer<pos:position pos:line="446" pos:column="26"/></name><index pos:line="446" pos:column="26">[<expr><literal type="number" pos:line="446" pos:column="27">6<pos:position pos:line="446" pos:column="28"/></literal></expr>]<pos:position pos:line="446" pos:column="29"/></index></name></decl>;<pos:position pos:line="446" pos:column="30"/></decl_stmt>
            <if pos:line="447" pos:column="13">if <condition pos:line="447" pos:column="16">(<expr><operator pos:line="447" pos:column="17">!<pos:position pos:line="447" pos:column="18"/></operator><name pos:line="447" pos:column="18">class_utf8<pos:position pos:line="447" pos:column="28"/></name></expr>)<pos:position pos:line="447" pos:column="29"/></condition><then pos:line="447" pos:column="29">         <comment type="block" pos:line="447" pos:column="38">/* Allow for XCLASS overhead */</comment>
              <block pos:line="448" pos:column="15">{
              <expr_stmt><expr><name pos:line="449" pos:column="15">class_utf8<pos:position pos:line="449" pos:column="25"/></name> <operator pos:line="449" pos:column="26">=<pos:position pos:line="449" pos:column="27"/></operator> <name pos:line="449" pos:column="28">TRUE<pos:position pos:line="449" pos:column="32"/></name></expr>;<pos:position pos:line="449" pos:column="33"/></expr_stmt>
              <expr_stmt><expr><name pos:line="450" pos:column="15">length<pos:position pos:line="450" pos:column="21"/></name> <operator pos:line="450" pos:column="22">+=<pos:position pos:line="450" pos:column="24"/></operator> <name pos:line="450" pos:column="25">LINK_SIZE<pos:position pos:line="450" pos:column="34"/></name> <operator pos:line="450" pos:column="35">+<pos:position pos:line="450" pos:column="36"/></operator> <literal type="number" pos:line="450" pos:column="37">2<pos:position pos:line="450" pos:column="38"/></literal></expr>;<pos:position pos:line="450" pos:column="39"/></expr_stmt>
              }<pos:position pos:line="451" pos:column="16"/></block></then></if>

<cpp:ifdef pos:line="453" pos:column="1">#<cpp:directive pos:line="453" pos:column="2">ifdef<pos:position pos:line="453" pos:column="7"/></cpp:directive> <name pos:line="453" pos:column="8">SUPPORT_UCP<pos:position pos:line="453" pos:column="19"/></name></cpp:ifdef>
            <comment type="block" pos:line="454" pos:column="13">/* If we have UCP support, find out how many extra ranges are
            needed to map the other case of characters within this range. We
            have to mimic the range optimization here, because extending the
            range upwards might push d over a boundary that makes is use
            another byte in the UTF-8 representation. */</comment>

            <if pos:line="460" pos:column="13">if <condition pos:line="460" pos:column="16">(<expr><operator pos:line="460" pos:column="17">(<pos:position pos:line="460" pos:column="18"/></operator><name pos:line="460" pos:column="18">options<pos:position pos:line="460" pos:column="25"/></name> <operator pos:line="460" pos:column="26">&amp;<pos:position pos:line="460" pos:column="31"/></operator> <name pos:line="460" pos:column="28">PCRE_CASELESS<pos:position pos:line="460" pos:column="41"/></name><operator pos:line="460" pos:column="41">)<pos:position pos:line="460" pos:column="42"/></operator> <operator pos:line="460" pos:column="43">!=<pos:position pos:line="460" pos:column="45"/></operator> <literal type="number" pos:line="460" pos:column="46">0<pos:position pos:line="460" pos:column="47"/></literal></expr>)<pos:position pos:line="460" pos:column="48"/></condition><then pos:line="460" pos:column="48">
              <block pos:line="461" pos:column="15">{
              <decl_stmt><decl><type><name pos:line="462" pos:column="15">int<pos:position pos:line="462" pos:column="18"/></name></type> <name pos:line="462" pos:column="19">occ<pos:position pos:line="462" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="462" pos:column="24">ocd<pos:position pos:line="462" pos:column="27"/></name></decl>;<pos:position pos:line="462" pos:column="28"/></decl_stmt>
              <decl_stmt><decl><type><name pos:line="463" pos:column="15">int<pos:position pos:line="463" pos:column="18"/></name></type> <name pos:line="463" pos:column="19">cc<pos:position pos:line="463" pos:column="21"/></name> <init pos:line="463" pos:column="22">= <expr><name pos:line="463" pos:column="24">c<pos:position pos:line="463" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="463" pos:column="26"/></decl_stmt>
              <decl_stmt><decl><type><name pos:line="464" pos:column="15">int<pos:position pos:line="464" pos:column="18"/></name></type> <name pos:line="464" pos:column="19">origd<pos:position pos:line="464" pos:column="24"/></name> <init pos:line="464" pos:column="25">= <expr><name pos:line="464" pos:column="27">d<pos:position pos:line="464" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="464" pos:column="29"/></decl_stmt>
              <while pos:line="465" pos:column="15">while <condition pos:line="465" pos:column="21">(<expr><call><name pos:line="465" pos:column="22">get_othercase_range<pos:position pos:line="465" pos:column="41"/></name><argument_list pos:line="465" pos:column="41">(<argument><expr><operator pos:line="465" pos:column="42">&amp;<pos:position pos:line="465" pos:column="47"/></operator><name pos:line="465" pos:column="43">cc<pos:position pos:line="465" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="465" pos:column="47">origd<pos:position pos:line="465" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="465" pos:column="54">&amp;<pos:position pos:line="465" pos:column="59"/></operator><name pos:line="465" pos:column="55">occ<pos:position pos:line="465" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="465" pos:column="60">&amp;<pos:position pos:line="465" pos:column="65"/></operator><name pos:line="465" pos:column="61">ocd<pos:position pos:line="465" pos:column="64"/></name></expr></argument>)<pos:position pos:line="465" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="465" pos:column="66"/></condition>
                <block pos:line="466" pos:column="17">{
                <if pos:line="467" pos:column="17">if <condition pos:line="467" pos:column="20">(<expr><name pos:line="467" pos:column="21">occ<pos:position pos:line="467" pos:column="24"/></name> <operator pos:line="467" pos:column="25">&gt;=<pos:position pos:line="467" pos:column="30"/></operator> <name pos:line="467" pos:column="28">c<pos:position pos:line="467" pos:column="29"/></name> <operator pos:line="467" pos:column="30">&amp;&amp;<pos:position pos:line="467" pos:column="40"/></operator> <name pos:line="467" pos:column="33">ocd<pos:position pos:line="467" pos:column="36"/></name> <operator pos:line="467" pos:column="37">&lt;=<pos:position pos:line="467" pos:column="42"/></operator> <name pos:line="467" pos:column="40">d<pos:position pos:line="467" pos:column="41"/></name></expr>)<pos:position pos:line="467" pos:column="42"/></condition><then pos:line="467" pos:column="42"> <block type="pseudo"><continue pos:line="467" pos:column="43">continue;<pos:position pos:line="467" pos:column="52"/></continue></block></then></if>   <comment type="block" pos:line="467" pos:column="55">/* Skip embedded */</comment>

                <if pos:line="469" pos:column="17">if <condition pos:line="469" pos:column="20">(<expr><name pos:line="469" pos:column="21">occ<pos:position pos:line="469" pos:column="24"/></name> <operator pos:line="469" pos:column="25">&lt;<pos:position pos:line="469" pos:column="29"/></operator> <name pos:line="469" pos:column="27">c<pos:position pos:line="469" pos:column="28"/></name>  <operator pos:line="469" pos:column="30">&amp;&amp;<pos:position pos:line="469" pos:column="40"/></operator> <name pos:line="469" pos:column="33">ocd<pos:position pos:line="469" pos:column="36"/></name> <operator pos:line="469" pos:column="37">&gt;=<pos:position pos:line="469" pos:column="42"/></operator> <name pos:line="469" pos:column="40">c<pos:position pos:line="469" pos:column="41"/></name> <operator pos:line="469" pos:column="42">-<pos:position pos:line="469" pos:column="43"/></operator> <literal type="number" pos:line="469" pos:column="44">1<pos:position pos:line="469" pos:column="45"/></literal></expr>)<pos:position pos:line="469" pos:column="46"/></condition><then pos:line="469" pos:column="46">  <comment type="block" pos:line="469" pos:column="48">/* Extend the basic range */</comment>
                  <block pos:line="470" pos:column="19">{                            <comment type="block" pos:line="470" pos:column="48">/* if there is overlap,   */</comment>
                  <expr_stmt><expr><name pos:line="471" pos:column="19">c<pos:position pos:line="471" pos:column="20"/></name> <operator pos:line="471" pos:column="21">=<pos:position pos:line="471" pos:column="22"/></operator> <name pos:line="471" pos:column="23">occ<pos:position pos:line="471" pos:column="26"/></name></expr>;<pos:position pos:line="471" pos:column="27"/></expr_stmt>                     <comment type="block" pos:line="471" pos:column="48">/* noting that if occ &lt; c */</comment>
                  <continue pos:line="472" pos:column="19">continue;<pos:position pos:line="472" pos:column="28"/></continue>                    <comment type="block" pos:line="472" pos:column="48">/* we can't have ocd &gt; d  */</comment>
                  }<pos:position pos:line="473" pos:column="20"/></block></then></if>                            <comment type="block" pos:line="473" pos:column="48">/* because a subrange is  */</comment>
                <if pos:line="474" pos:column="17">if <condition pos:line="474" pos:column="20">(<expr><name pos:line="474" pos:column="21">ocd<pos:position pos:line="474" pos:column="24"/></name> <operator pos:line="474" pos:column="25">&gt;<pos:position pos:line="474" pos:column="29"/></operator> <name pos:line="474" pos:column="27">d<pos:position pos:line="474" pos:column="28"/></name> <operator pos:line="474" pos:column="29">&amp;&amp;<pos:position pos:line="474" pos:column="39"/></operator> <name pos:line="474" pos:column="32">occ<pos:position pos:line="474" pos:column="35"/></name> <operator pos:line="474" pos:column="36">&lt;=<pos:position pos:line="474" pos:column="41"/></operator> <name pos:line="474" pos:column="39">d<pos:position pos:line="474" pos:column="40"/></name> <operator pos:line="474" pos:column="41">+<pos:position pos:line="474" pos:column="42"/></operator> <literal type="number" pos:line="474" pos:column="43">1<pos:position pos:line="474" pos:column="44"/></literal></expr>)<pos:position pos:line="474" pos:column="45"/></condition><then pos:line="474" pos:column="45">   <comment type="block" pos:line="474" pos:column="48">/* always shorter than    */</comment>
                  <block pos:line="475" pos:column="19">{                            <comment type="block" pos:line="475" pos:column="48">/* the basic range.       */</comment>
                  <expr_stmt><expr><name pos:line="476" pos:column="19">d<pos:position pos:line="476" pos:column="20"/></name> <operator pos:line="476" pos:column="21">=<pos:position pos:line="476" pos:column="22"/></operator> <name pos:line="476" pos:column="23">ocd<pos:position pos:line="476" pos:column="26"/></name></expr>;<pos:position pos:line="476" pos:column="27"/></expr_stmt>
                  <continue pos:line="477" pos:column="19">continue;<pos:position pos:line="477" pos:column="28"/></continue>
                  }<pos:position pos:line="478" pos:column="20"/></block></then></if>

                <comment type="block" pos:line="480" pos:column="17">/* An extra item is needed */</comment>

                <expr_stmt><expr><name pos:line="482" pos:column="17">length<pos:position pos:line="482" pos:column="23"/></name> <operator pos:line="482" pos:column="24">+=<pos:position pos:line="482" pos:column="26"/></operator> <literal type="number" pos:line="482" pos:column="27">1<pos:position pos:line="482" pos:column="28"/></literal> <operator pos:line="482" pos:column="29">+<pos:position pos:line="482" pos:column="30"/></operator> <call><name pos:line="482" pos:column="31">ord2utf8<pos:position pos:line="482" pos:column="39"/></name><argument_list pos:line="482" pos:column="39">(<argument><expr><name pos:line="482" pos:column="40">occ<pos:position pos:line="482" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="482" pos:column="45">buffer<pos:position pos:line="482" pos:column="51"/></name></expr></argument>)<pos:position pos:line="482" pos:column="52"/></argument_list></call> <operator pos:line="482" pos:column="53">+<pos:position pos:line="482" pos:column="54"/></operator>
                  <operator pos:line="483" pos:column="19">(<pos:position pos:line="483" pos:column="20"/></operator><ternary><condition><expr><operator pos:line="483" pos:column="20">(<pos:position pos:line="483" pos:column="21"/></operator><name pos:line="483" pos:column="21">occ<pos:position pos:line="483" pos:column="24"/></name> <operator pos:line="483" pos:column="25">==<pos:position pos:line="483" pos:column="27"/></operator> <name pos:line="483" pos:column="28">ocd<pos:position pos:line="483" pos:column="31"/></name><operator pos:line="483" pos:column="31">)<pos:position pos:line="483" pos:column="32"/></operator></expr>?<pos:position pos:line="483" pos:column="33"/></condition><then pos:line="483" pos:column="33"> <expr><literal type="number" pos:line="483" pos:column="34">0<pos:position pos:line="483" pos:column="35"/></literal></expr> <pos:position pos:line="483" pos:column="36"/></then><else pos:line="483" pos:column="36">: <expr><call><name pos:line="483" pos:column="38">ord2utf8<pos:position pos:line="483" pos:column="46"/></name><argument_list pos:line="483" pos:column="46">(<argument><expr><name pos:line="483" pos:column="47">ocd<pos:position pos:line="483" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="483" pos:column="52">buffer<pos:position pos:line="483" pos:column="58"/></name></expr></argument>)<pos:position pos:line="483" pos:column="59"/></argument_list></call></expr></else></ternary><operator pos:line="483" pos:column="59">)<pos:position pos:line="483" pos:column="60"/></operator></expr>;<pos:position pos:line="483" pos:column="61"/></expr_stmt>
                }<pos:position pos:line="484" pos:column="18"/></block></while>
              }<pos:position pos:line="485" pos:column="16"/></block></then></if>
<cpp:endif pos:line="486" pos:column="1">#<cpp:directive pos:line="486" pos:column="2">endif<pos:position pos:line="486" pos:column="7"/></cpp:directive></cpp:endif>  <comment type="block" pos:line="486" pos:column="9">/* SUPPORT_UCP */</comment>

            <comment type="block" pos:line="488" pos:column="13">/* The length of the (possibly extended) range */</comment>

            <expr_stmt><expr><name pos:line="490" pos:column="13">length<pos:position pos:line="490" pos:column="19"/></name> <operator pos:line="490" pos:column="20">+=<pos:position pos:line="490" pos:column="22"/></operator> <literal type="number" pos:line="490" pos:column="23">1<pos:position pos:line="490" pos:column="24"/></literal> <operator pos:line="490" pos:column="25">+<pos:position pos:line="490" pos:column="26"/></operator> <call><name pos:line="490" pos:column="27">ord2utf8<pos:position pos:line="490" pos:column="35"/></name><argument_list pos:line="490" pos:column="35">(<argument><expr><name pos:line="490" pos:column="36">c<pos:position pos:line="490" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="490" pos:column="39">buffer<pos:position pos:line="490" pos:column="45"/></name></expr></argument>)<pos:position pos:line="490" pos:column="46"/></argument_list></call> <operator pos:line="490" pos:column="47">+<pos:position pos:line="490" pos:column="48"/></operator> <call><name pos:line="490" pos:column="49">ord2utf8<pos:position pos:line="490" pos:column="57"/></name><argument_list pos:line="490" pos:column="57">(<argument><expr><name pos:line="490" pos:column="58">d<pos:position pos:line="490" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="490" pos:column="61">buffer<pos:position pos:line="490" pos:column="67"/></name></expr></argument>)<pos:position pos:line="490" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="490" pos:column="69"/></expr_stmt>
            }<pos:position pos:line="491" pos:column="14"/></block></then></if>
<cpp:endif pos:line="492" pos:column="1">#<cpp:directive pos:line="492" pos:column="2">endif<pos:position pos:line="492" pos:column="7"/></cpp:directive></cpp:endif>  <comment type="block" pos:line="492" pos:column="9">/* SUPPORT_UTF8 */</comment>

          }<pos:position pos:line="494" pos:column="12"/></block></then>

        <comment type="block" pos:line="496" pos:column="9">/* We have a single character. There is nothing to be done unless we
        are in UTF-8 mode. If the char is &gt; 255, or 127 when caseless, we must
        allow for an XCL_SINGLE item, doubled for caselessness if there is UCP
        support. */</comment>

        <else pos:line="501" pos:column="9">else
          <block pos:line="502" pos:column="11">{
<cpp:ifdef pos:line="503" pos:column="1">#<cpp:directive pos:line="503" pos:column="2">ifdef<pos:position pos:line="503" pos:column="7"/></cpp:directive> <name pos:line="503" pos:column="8">SUPPORT_UTF8<pos:position pos:line="503" pos:column="20"/></name></cpp:ifdef>
          <if pos:line="504" pos:column="11">if <condition pos:line="504" pos:column="14">(<expr><name pos:line="504" pos:column="15">utf8<pos:position pos:line="504" pos:column="19"/></name> <operator pos:line="504" pos:column="20">&amp;&amp;<pos:position pos:line="504" pos:column="30"/></operator> <operator pos:line="504" pos:column="23">(<pos:position pos:line="504" pos:column="24"/></operator><name pos:line="504" pos:column="24">c<pos:position pos:line="504" pos:column="25"/></name> <operator pos:line="504" pos:column="26">&gt;<pos:position pos:line="504" pos:column="30"/></operator> <literal type="number" pos:line="504" pos:column="28">255<pos:position pos:line="504" pos:column="31"/></literal> <operator pos:line="504" pos:column="32">||<pos:position pos:line="504" pos:column="34"/></operator> <operator pos:line="504" pos:column="35">(<pos:position pos:line="504" pos:column="36"/></operator><operator pos:line="504" pos:column="36">(<pos:position pos:line="504" pos:column="37"/></operator><name pos:line="504" pos:column="37">options<pos:position pos:line="504" pos:column="44"/></name> <operator pos:line="504" pos:column="45">&amp;<pos:position pos:line="504" pos:column="50"/></operator> <name pos:line="504" pos:column="47">PCRE_CASELESS<pos:position pos:line="504" pos:column="60"/></name><operator pos:line="504" pos:column="60">)<pos:position pos:line="504" pos:column="61"/></operator> <operator pos:line="504" pos:column="62">!=<pos:position pos:line="504" pos:column="64"/></operator> <literal type="number" pos:line="504" pos:column="65">0<pos:position pos:line="504" pos:column="66"/></literal> <operator pos:line="504" pos:column="67">&amp;&amp;<pos:position pos:line="504" pos:column="77"/></operator> <name pos:line="504" pos:column="70">c<pos:position pos:line="504" pos:column="71"/></name> <operator pos:line="504" pos:column="72">&gt;<pos:position pos:line="504" pos:column="76"/></operator> <literal type="number" pos:line="504" pos:column="74">127<pos:position pos:line="504" pos:column="77"/></literal><operator pos:line="504" pos:column="77">)<pos:position pos:line="504" pos:column="78"/></operator><operator pos:line="504" pos:column="78">)<pos:position pos:line="504" pos:column="79"/></operator></expr>)<pos:position pos:line="504" pos:column="80"/></condition><then pos:line="504" pos:column="80">
            <block pos:line="505" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="506" pos:column="13">uschar<pos:position pos:line="506" pos:column="19"/></name></type> <name><name pos:line="506" pos:column="20">buffer<pos:position pos:line="506" pos:column="26"/></name><index pos:line="506" pos:column="26">[<expr><literal type="number" pos:line="506" pos:column="27">6<pos:position pos:line="506" pos:column="28"/></literal></expr>]<pos:position pos:line="506" pos:column="29"/></index></name></decl>;<pos:position pos:line="506" pos:column="30"/></decl_stmt>
            <expr_stmt><expr><name pos:line="507" pos:column="13">class_optcount<pos:position pos:line="507" pos:column="27"/></name> <operator pos:line="507" pos:column="28">=<pos:position pos:line="507" pos:column="29"/></operator> <literal type="number" pos:line="507" pos:column="30">10<pos:position pos:line="507" pos:column="32"/></literal></expr>;<pos:position pos:line="507" pos:column="33"/></expr_stmt>     <comment type="block" pos:line="507" pos:column="38">/* Ensure &gt; 1 */</comment>
            <if pos:line="508" pos:column="13">if <condition pos:line="508" pos:column="16">(<expr><operator pos:line="508" pos:column="17">!<pos:position pos:line="508" pos:column="18"/></operator><name pos:line="508" pos:column="18">class_utf8<pos:position pos:line="508" pos:column="28"/></name></expr>)<pos:position pos:line="508" pos:column="29"/></condition><then pos:line="508" pos:column="29">         <comment type="block" pos:line="508" pos:column="38">/* Allow for XCLASS overhead */</comment>
              <block pos:line="509" pos:column="15">{
              <expr_stmt><expr><name pos:line="510" pos:column="15">class_utf8<pos:position pos:line="510" pos:column="25"/></name> <operator pos:line="510" pos:column="26">=<pos:position pos:line="510" pos:column="27"/></operator> <name pos:line="510" pos:column="28">TRUE<pos:position pos:line="510" pos:column="32"/></name></expr>;<pos:position pos:line="510" pos:column="33"/></expr_stmt>
              <expr_stmt><expr><name pos:line="511" pos:column="15">length<pos:position pos:line="511" pos:column="21"/></name> <operator pos:line="511" pos:column="22">+=<pos:position pos:line="511" pos:column="24"/></operator> <name pos:line="511" pos:column="25">LINK_SIZE<pos:position pos:line="511" pos:column="34"/></name> <operator pos:line="511" pos:column="35">+<pos:position pos:line="511" pos:column="36"/></operator> <literal type="number" pos:line="511" pos:column="37">2<pos:position pos:line="511" pos:column="38"/></literal></expr>;<pos:position pos:line="511" pos:column="39"/></expr_stmt>
              }<pos:position pos:line="512" pos:column="16"/></block></then></if>
<cpp:ifdef pos:line="513" pos:column="1">#<cpp:directive pos:line="513" pos:column="2">ifdef<pos:position pos:line="513" pos:column="7"/></cpp:directive> <name pos:line="513" pos:column="8">SUPPORT_UCP<pos:position pos:line="513" pos:column="19"/></name></cpp:ifdef>
            <expr_stmt><expr><name pos:line="514" pos:column="13">length<pos:position pos:line="514" pos:column="19"/></name> <operator pos:line="514" pos:column="20">+=<pos:position pos:line="514" pos:column="22"/></operator> <operator pos:line="514" pos:column="23">(<pos:position pos:line="514" pos:column="24"/></operator><ternary><condition><expr><operator pos:line="514" pos:column="24">(<pos:position pos:line="514" pos:column="25"/></operator><operator pos:line="514" pos:column="25">(<pos:position pos:line="514" pos:column="26"/></operator><name pos:line="514" pos:column="26">options<pos:position pos:line="514" pos:column="33"/></name> <operator pos:line="514" pos:column="34">&amp;<pos:position pos:line="514" pos:column="39"/></operator> <name pos:line="514" pos:column="36">PCRE_CASELESS<pos:position pos:line="514" pos:column="49"/></name><operator pos:line="514" pos:column="49">)<pos:position pos:line="514" pos:column="50"/></operator> <operator pos:line="514" pos:column="51">!=<pos:position pos:line="514" pos:column="53"/></operator> <literal type="number" pos:line="514" pos:column="54">0<pos:position pos:line="514" pos:column="55"/></literal><operator pos:line="514" pos:column="55">)<pos:position pos:line="514" pos:column="56"/></operator></expr>?<pos:position pos:line="514" pos:column="57"/></condition><then pos:line="514" pos:column="57"> <expr><literal type="number" pos:line="514" pos:column="58">2<pos:position pos:line="514" pos:column="59"/></literal></expr> <pos:position pos:line="514" pos:column="60"/></then><else pos:line="514" pos:column="60">: <expr><literal type="number" pos:line="514" pos:column="62">1<pos:position pos:line="514" pos:column="63"/></literal></expr></else></ternary><operator pos:line="514" pos:column="63">)<pos:position pos:line="514" pos:column="64"/></operator> <operator pos:line="514" pos:column="65">*<pos:position pos:line="514" pos:column="66"/></operator>
              <operator pos:line="515" pos:column="15">(<pos:position pos:line="515" pos:column="16"/></operator><literal type="number" pos:line="515" pos:column="16">1<pos:position pos:line="515" pos:column="17"/></literal> <operator pos:line="515" pos:column="18">+<pos:position pos:line="515" pos:column="19"/></operator> <call><name pos:line="515" pos:column="20">ord2utf8<pos:position pos:line="515" pos:column="28"/></name><argument_list pos:line="515" pos:column="28">(<argument><expr><name pos:line="515" pos:column="29">c<pos:position pos:line="515" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="515" pos:column="32">buffer<pos:position pos:line="515" pos:column="38"/></name></expr></argument>)<pos:position pos:line="515" pos:column="39"/></argument_list></call><operator pos:line="515" pos:column="39">)<pos:position pos:line="515" pos:column="40"/></operator></expr>;<pos:position pos:line="515" pos:column="41"/></expr_stmt>
<cpp:else pos:line="516" pos:column="1">#<cpp:directive pos:line="516" pos:column="2">else<pos:position pos:line="516" pos:column="6"/></cpp:directive></cpp:else>   <comment type="block" pos:line="516" pos:column="9">/* SUPPORT_UCP */</comment>
            <expr_stmt><expr><name pos:line="517" pos:column="13">length<pos:position pos:line="517" pos:column="19"/></name> <operator pos:line="517" pos:column="20">+=<pos:position pos:line="517" pos:column="22"/></operator> <literal type="number" pos:line="517" pos:column="23">1<pos:position pos:line="517" pos:column="24"/></literal> <operator pos:line="517" pos:column="25">+<pos:position pos:line="517" pos:column="26"/></operator> <call><name pos:line="517" pos:column="27">ord2utf8<pos:position pos:line="517" pos:column="35"/></name><argument_list pos:line="517" pos:column="35">(<argument><expr><name pos:line="517" pos:column="36">c<pos:position pos:line="517" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="517" pos:column="39">buffer<pos:position pos:line="517" pos:column="45"/></name></expr></argument>)<pos:position pos:line="517" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="517" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="518" pos:column="1">#<cpp:directive pos:line="518" pos:column="2">endif<pos:position pos:line="518" pos:column="7"/></cpp:directive></cpp:endif>  <comment type="block" pos:line="518" pos:column="9">/* SUPPORT_UCP */</comment>
            }<pos:position pos:line="519" pos:column="14"/></block></then></if>
<cpp:endif pos:line="520" pos:column="1">#<cpp:directive pos:line="520" pos:column="2">endif<pos:position pos:line="520" pos:column="7"/></cpp:directive></cpp:endif>  <comment type="block" pos:line="520" pos:column="9">/* SUPPORT_UTF8 */</comment>
          }<pos:position pos:line="521" pos:column="12"/></block></else></if>
        }<pos:position pos:line="522" pos:column="10"/></block></else></if>
      }<pos:position pos:line="523" pos:column="8"/></block>
    while <condition pos:line="524" pos:column="11">(<expr><operator pos:line="524" pos:column="12">*<pos:position pos:line="524" pos:column="13"/></operator><operator pos:line="524" pos:column="13">(<pos:position pos:line="524" pos:column="14"/></operator><operator pos:line="524" pos:column="14">++<pos:position pos:line="524" pos:column="16"/></operator><name pos:line="524" pos:column="16">ptr<pos:position pos:line="524" pos:column="19"/></name><operator pos:line="524" pos:column="19">)<pos:position pos:line="524" pos:column="20"/></operator> <operator pos:line="524" pos:column="21">!=<pos:position pos:line="524" pos:column="23"/></operator> <literal type="number" pos:line="524" pos:column="24">0<pos:position pos:line="524" pos:column="25"/></literal> <operator pos:line="524" pos:column="26">&amp;&amp;<pos:position pos:line="524" pos:column="36"/></operator> <operator pos:line="524" pos:column="29">(<pos:position pos:line="524" pos:column="30"/></operator><name pos:line="524" pos:column="30">inescq<pos:position pos:line="524" pos:column="36"/></name> <operator pos:line="524" pos:column="37">||<pos:position pos:line="524" pos:column="39"/></operator> <operator pos:line="524" pos:column="40">*<pos:position pos:line="524" pos:column="41"/></operator><name pos:line="524" pos:column="41">ptr<pos:position pos:line="524" pos:column="44"/></name> <operator pos:line="524" pos:column="45">!=<pos:position pos:line="524" pos:column="47"/></operator> <literal type="char" pos:line="524" pos:column="48">']'<pos:position pos:line="524" pos:column="51"/></literal><operator pos:line="524" pos:column="51">)<pos:position pos:line="524" pos:column="52"/></operator></expr>)<pos:position pos:line="524" pos:column="53"/></condition>;<pos:position pos:line="524" pos:column="54"/></do></block></then></if> <comment type="block" pos:line="524" pos:column="55">/* Concludes "do" above */</comment>

    <if pos:line="526" pos:column="5">if <condition pos:line="526" pos:column="8">(<expr><operator pos:line="526" pos:column="9">*<pos:position pos:line="526" pos:column="10"/></operator><name pos:line="526" pos:column="10">ptr<pos:position pos:line="526" pos:column="13"/></name> <operator pos:line="526" pos:column="14">==<pos:position pos:line="526" pos:column="16"/></operator> <literal type="number" pos:line="526" pos:column="17">0<pos:position pos:line="526" pos:column="18"/></literal></expr>)<pos:position pos:line="526" pos:column="19"/></condition><then pos:line="526" pos:column="19">                          <comment type="block" pos:line="526" pos:column="45">/* Missing terminating ']' */</comment>
      <block pos:line="527" pos:column="7">{
      <expr_stmt><expr><operator pos:line="528" pos:column="7">*<pos:position pos:line="528" pos:column="8"/></operator><name pos:line="528" pos:column="8">errorptr<pos:position pos:line="528" pos:column="16"/></name> <operator pos:line="528" pos:column="17">=<pos:position pos:line="528" pos:column="18"/></operator> <name pos:line="528" pos:column="19">ERR6<pos:position pos:line="528" pos:column="23"/></name></expr>;<pos:position pos:line="528" pos:column="24"/></expr_stmt>
      <goto pos:line="529" pos:column="7">goto <name pos:line="529" pos:column="12">PCRE_ERROR_RETURN<pos:position pos:line="529" pos:column="29"/></name>;<pos:position pos:line="529" pos:column="30"/></goto>
      }<pos:position pos:line="530" pos:column="8"/></block></then></if>

    <comment type="block" pos:line="532" pos:column="5">/* We can optimize when there was only one optimizable character. Repeats
    for positive and negated single one-byte chars are handled by the general
    code. Here, we handle repeats for the class opcodes. */</comment>

    <if pos:line="536" pos:column="5">if <condition pos:line="536" pos:column="8">(<expr><name pos:line="536" pos:column="9">class_optcount<pos:position pos:line="536" pos:column="23"/></name> <operator pos:line="536" pos:column="24">==<pos:position pos:line="536" pos:column="26"/></operator> <literal type="number" pos:line="536" pos:column="27">1<pos:position pos:line="536" pos:column="28"/></literal></expr>)<pos:position pos:line="536" pos:column="29"/></condition><then pos:line="536" pos:column="29"> <block type="pseudo"><expr_stmt><expr><name pos:line="536" pos:column="30">length<pos:position pos:line="536" pos:column="36"/></name> <operator pos:line="536" pos:column="37">+=<pos:position pos:line="536" pos:column="39"/></operator> <literal type="number" pos:line="536" pos:column="40">3<pos:position pos:line="536" pos:column="41"/></literal></expr>;<pos:position pos:line="536" pos:column="42"/></expr_stmt></block></then> <else pos:line="536" pos:column="43">else
      <block pos:line="537" pos:column="7">{
      <expr_stmt><expr><name pos:line="538" pos:column="7">length<pos:position pos:line="538" pos:column="13"/></name> <operator pos:line="538" pos:column="14">+=<pos:position pos:line="538" pos:column="16"/></operator> <literal type="number" pos:line="538" pos:column="17">33<pos:position pos:line="538" pos:column="19"/></literal></expr>;<pos:position pos:line="538" pos:column="20"/></expr_stmt>

      <comment type="block" pos:line="540" pos:column="7">/* A repeat needs either 1 or 5 bytes. If it is a possessive quantifier,
      we also need extra for wrapping the whole thing in a sub-pattern. */</comment>

      <if pos:line="543" pos:column="7">if <condition pos:line="543" pos:column="10">(<expr><operator pos:line="543" pos:column="11">*<pos:position pos:line="543" pos:column="12"/></operator><name pos:line="543" pos:column="12">ptr<pos:position pos:line="543" pos:column="15"/></name> <operator pos:line="543" pos:column="16">!=<pos:position pos:line="543" pos:column="18"/></operator> <literal type="number" pos:line="543" pos:column="19">0<pos:position pos:line="543" pos:column="20"/></literal> <operator pos:line="543" pos:column="21">&amp;&amp;<pos:position pos:line="543" pos:column="31"/></operator> <name><name pos:line="543" pos:column="24">ptr<pos:position pos:line="543" pos:column="27"/></name><index pos:line="543" pos:column="27">[<expr><literal type="number" pos:line="543" pos:column="28">1<pos:position pos:line="543" pos:column="29"/></literal></expr>]<pos:position pos:line="543" pos:column="30"/></index></name> <operator pos:line="543" pos:column="31">==<pos:position pos:line="543" pos:column="33"/></operator> <literal type="char" pos:line="543" pos:column="34">'{'<pos:position pos:line="543" pos:column="37"/></literal> <operator pos:line="543" pos:column="38">&amp;&amp;<pos:position pos:line="543" pos:column="48"/></operator> <call><name pos:line="543" pos:column="41">is_counted_repeat<pos:position pos:line="543" pos:column="58"/></name><argument_list pos:line="543" pos:column="58">(<argument><expr><name pos:line="543" pos:column="59">ptr<pos:position pos:line="543" pos:column="62"/></name><operator pos:line="543" pos:column="62">+<pos:position pos:line="543" pos:column="63"/></operator><literal type="number" pos:line="543" pos:column="63">2<pos:position pos:line="543" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="543" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="543" pos:column="66"/></condition><then pos:line="543" pos:column="66">
        <block pos:line="544" pos:column="9">{
        <expr_stmt><expr><name pos:line="545" pos:column="9">ptr<pos:position pos:line="545" pos:column="12"/></name> <operator pos:line="545" pos:column="13">=<pos:position pos:line="545" pos:column="14"/></operator> <call><name pos:line="545" pos:column="15">read_repeat_counts<pos:position pos:line="545" pos:column="33"/></name><argument_list pos:line="545" pos:column="33">(<argument><expr><name pos:line="545" pos:column="34">ptr<pos:position pos:line="545" pos:column="37"/></name><operator pos:line="545" pos:column="37">+<pos:position pos:line="545" pos:column="38"/></operator><literal type="number" pos:line="545" pos:column="38">2<pos:position pos:line="545" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="545" pos:column="41">&amp;<pos:position pos:line="545" pos:column="46"/></operator><name pos:line="545" pos:column="42">min<pos:position pos:line="545" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="545" pos:column="47">&amp;<pos:position pos:line="545" pos:column="52"/></operator><name pos:line="545" pos:column="48">max<pos:position pos:line="545" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="545" pos:column="53">errorptr<pos:position pos:line="545" pos:column="61"/></name></expr></argument>)<pos:position pos:line="545" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="545" pos:column="63"/></expr_stmt>
        <if pos:line="546" pos:column="9">if <condition pos:line="546" pos:column="12">(<expr><operator pos:line="546" pos:column="13">*<pos:position pos:line="546" pos:column="14"/></operator><name pos:line="546" pos:column="14">errorptr<pos:position pos:line="546" pos:column="22"/></name> <operator pos:line="546" pos:column="23">!=<pos:position pos:line="546" pos:column="25"/></operator> <name pos:line="546" pos:column="26">NULL<pos:position pos:line="546" pos:column="30"/></name></expr>)<pos:position pos:line="546" pos:column="31"/></condition><then pos:line="546" pos:column="31"> <block type="pseudo"><goto pos:line="546" pos:column="32">goto <name pos:line="546" pos:column="37">PCRE_ERROR_RETURN<pos:position pos:line="546" pos:column="54"/></name>;<pos:position pos:line="546" pos:column="55"/></goto></block></then></if>
        <if pos:line="547" pos:column="9">if <condition pos:line="547" pos:column="12">(<expr><operator pos:line="547" pos:column="13">(<pos:position pos:line="547" pos:column="14"/></operator><name pos:line="547" pos:column="14">min<pos:position pos:line="547" pos:column="17"/></name> <operator pos:line="547" pos:column="18">==<pos:position pos:line="547" pos:column="20"/></operator> <literal type="number" pos:line="547" pos:column="21">0<pos:position pos:line="547" pos:column="22"/></literal> <operator pos:line="547" pos:column="23">&amp;&amp;<pos:position pos:line="547" pos:column="33"/></operator> <operator pos:line="547" pos:column="26">(<pos:position pos:line="547" pos:column="27"/></operator><name pos:line="547" pos:column="27">max<pos:position pos:line="547" pos:column="30"/></name> <operator pos:line="547" pos:column="31">==<pos:position pos:line="547" pos:column="33"/></operator> <literal type="number" pos:line="547" pos:column="34">1<pos:position pos:line="547" pos:column="35"/></literal> <operator pos:line="547" pos:column="36">||<pos:position pos:line="547" pos:column="38"/></operator> <name pos:line="547" pos:column="39">max<pos:position pos:line="547" pos:column="42"/></name> <operator pos:line="547" pos:column="43">==<pos:position pos:line="547" pos:column="45"/></operator> <operator pos:line="547" pos:column="46">-<pos:position pos:line="547" pos:column="47"/></operator><literal type="number" pos:line="547" pos:column="47">1<pos:position pos:line="547" pos:column="48"/></literal><operator pos:line="547" pos:column="48">)<pos:position pos:line="547" pos:column="49"/></operator><operator pos:line="547" pos:column="49">)<pos:position pos:line="547" pos:column="50"/></operator> <operator pos:line="547" pos:column="51">||<pos:position pos:line="547" pos:column="53"/></operator>
          <operator pos:line="548" pos:column="11">(<pos:position pos:line="548" pos:column="12"/></operator><name pos:line="548" pos:column="12">min<pos:position pos:line="548" pos:column="15"/></name> <operator pos:line="548" pos:column="16">==<pos:position pos:line="548" pos:column="18"/></operator> <literal type="number" pos:line="548" pos:column="19">1<pos:position pos:line="548" pos:column="20"/></literal> <operator pos:line="548" pos:column="21">&amp;&amp;<pos:position pos:line="548" pos:column="31"/></operator> <name pos:line="548" pos:column="24">max<pos:position pos:line="548" pos:column="27"/></name> <operator pos:line="548" pos:column="28">==<pos:position pos:line="548" pos:column="30"/></operator> <operator pos:line="548" pos:column="31">-<pos:position pos:line="548" pos:column="32"/></operator><literal type="number" pos:line="548" pos:column="32">1<pos:position pos:line="548" pos:column="33"/></literal><operator pos:line="548" pos:column="33">)<pos:position pos:line="548" pos:column="34"/></operator></expr>)<pos:position pos:line="548" pos:column="35"/></condition><then pos:line="548" pos:column="35">
            <block type="pseudo"><expr_stmt><expr><name pos:line="549" pos:column="13">length<pos:position pos:line="549" pos:column="19"/></name><operator pos:line="549" pos:column="19">++<pos:position pos:line="549" pos:column="21"/></operator></expr>;<pos:position pos:line="549" pos:column="22"/></expr_stmt></block></then>
        <else pos:line="550" pos:column="9">else <block type="pseudo"><expr_stmt><expr><name pos:line="550" pos:column="14">length<pos:position pos:line="550" pos:column="20"/></name> <operator pos:line="550" pos:column="21">+=<pos:position pos:line="550" pos:column="23"/></operator> <literal type="number" pos:line="550" pos:column="24">5<pos:position pos:line="550" pos:column="25"/></literal></expr>;<pos:position pos:line="550" pos:column="26"/></expr_stmt></block></else></if>
        <if pos:line="551" pos:column="9">if <condition pos:line="551" pos:column="12">(<expr><name><name pos:line="551" pos:column="13">ptr<pos:position pos:line="551" pos:column="16"/></name><index pos:line="551" pos:column="16">[<expr><literal type="number" pos:line="551" pos:column="17">1<pos:position pos:line="551" pos:column="18"/></literal></expr>]<pos:position pos:line="551" pos:column="19"/></index></name> <operator pos:line="551" pos:column="20">==<pos:position pos:line="551" pos:column="22"/></operator> <literal type="char" pos:line="551" pos:column="23">'+'<pos:position pos:line="551" pos:column="26"/></literal></expr>)<pos:position pos:line="551" pos:column="27"/></condition><then pos:line="551" pos:column="27">
          <block pos:line="552" pos:column="11">{
          <expr_stmt><expr><name pos:line="553" pos:column="11">ptr<pos:position pos:line="553" pos:column="14"/></name><operator pos:line="553" pos:column="14">++<pos:position pos:line="553" pos:column="16"/></operator></expr>;<pos:position pos:line="553" pos:column="17"/></expr_stmt>
          <expr_stmt><expr><name pos:line="554" pos:column="11">length<pos:position pos:line="554" pos:column="17"/></name> <operator pos:line="554" pos:column="18">+=<pos:position pos:line="554" pos:column="20"/></operator> <literal type="number" pos:line="554" pos:column="21">2<pos:position pos:line="554" pos:column="22"/></literal> <operator pos:line="554" pos:column="23">+<pos:position pos:line="554" pos:column="24"/></operator> <literal type="number" pos:line="554" pos:column="25">2<pos:position pos:line="554" pos:column="26"/></literal><operator pos:line="554" pos:column="26">*<pos:position pos:line="554" pos:column="27"/></operator><name pos:line="554" pos:column="27">LINK_SIZE<pos:position pos:line="554" pos:column="36"/></name></expr>;<pos:position pos:line="554" pos:column="37"/></expr_stmt>
          }<pos:position pos:line="555" pos:column="12"/></block></then>
        <elseif pos:line="556" pos:column="9">else <if pos:line="556" pos:column="14">if <condition pos:line="556" pos:column="17">(<expr><name><name pos:line="556" pos:column="18">ptr<pos:position pos:line="556" pos:column="21"/></name><index pos:line="556" pos:column="21">[<expr><literal type="number" pos:line="556" pos:column="22">1<pos:position pos:line="556" pos:column="23"/></literal></expr>]<pos:position pos:line="556" pos:column="24"/></index></name> <operator pos:line="556" pos:column="25">==<pos:position pos:line="556" pos:column="27"/></operator> <literal type="char" pos:line="556" pos:column="28">'?'<pos:position pos:line="556" pos:column="31"/></literal></expr>)<pos:position pos:line="556" pos:column="32"/></condition><then pos:line="556" pos:column="32"> <block type="pseudo"><expr_stmt><expr><name pos:line="556" pos:column="33">ptr<pos:position pos:line="556" pos:column="36"/></name><operator pos:line="556" pos:column="36">++<pos:position pos:line="556" pos:column="38"/></operator></expr>;<pos:position pos:line="556" pos:column="39"/></expr_stmt></block></then></if></elseif></if>
        }<pos:position pos:line="557" pos:column="10"/></block></then></if>
      }<pos:position pos:line="558" pos:column="8"/></block></else></if>
    <continue pos:line="559" pos:column="5">continue;<pos:position pos:line="559" pos:column="14"/></continue>

    <comment type="block" pos:line="561" pos:column="5">/* Brackets may be genuine groups or special things */</comment>

    <case pos:line="563" pos:column="5">case <expr><literal type="char" pos:line="563" pos:column="10">'('<pos:position pos:line="563" pos:column="13"/></literal></expr>:<pos:position pos:line="563" pos:column="14"/></case>
    <expr_stmt><expr><name pos:line="564" pos:column="5">branch_newextra<pos:position pos:line="564" pos:column="20"/></name> <operator pos:line="564" pos:column="21">=<pos:position pos:line="564" pos:column="22"/></operator> <literal type="number" pos:line="564" pos:column="23">0<pos:position pos:line="564" pos:column="24"/></literal></expr>;<pos:position pos:line="564" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="565" pos:column="5">bracket_length<pos:position pos:line="565" pos:column="19"/></name> <operator pos:line="565" pos:column="20">=<pos:position pos:line="565" pos:column="21"/></operator> <literal type="number" pos:line="565" pos:column="22">1<pos:position pos:line="565" pos:column="23"/></literal> <operator pos:line="565" pos:column="24">+<pos:position pos:line="565" pos:column="25"/></operator> <name pos:line="565" pos:column="26">LINK_SIZE<pos:position pos:line="565" pos:column="35"/></name></expr>;<pos:position pos:line="565" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="567" pos:column="5">/* Handle special forms of bracket, which all start (? */</comment>

    <if pos:line="569" pos:column="5">if <condition pos:line="569" pos:column="8">(<expr><name><name pos:line="569" pos:column="9">ptr<pos:position pos:line="569" pos:column="12"/></name><index pos:line="569" pos:column="12">[<expr><literal type="number" pos:line="569" pos:column="13">1<pos:position pos:line="569" pos:column="14"/></literal></expr>]<pos:position pos:line="569" pos:column="15"/></index></name> <operator pos:line="569" pos:column="16">==<pos:position pos:line="569" pos:column="18"/></operator> <literal type="char" pos:line="569" pos:column="19">'?'<pos:position pos:line="569" pos:column="22"/></literal></expr>)<pos:position pos:line="569" pos:column="23"/></condition><then pos:line="569" pos:column="23">
      <block pos:line="570" pos:column="7">{
      <decl_stmt><decl><type><name pos:line="571" pos:column="7">int<pos:position pos:line="571" pos:column="10"/></name></type> <name pos:line="571" pos:column="11">set<pos:position pos:line="571" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="571" pos:column="16">unset<pos:position pos:line="571" pos:column="21"/></name></decl>;<pos:position pos:line="571" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="572" pos:column="7">int<pos:position pos:line="572" pos:column="10"/></name> <modifier pos:line="572" pos:column="11">*<pos:position pos:line="572" pos:column="12"/></modifier></type><name pos:line="572" pos:column="12">optset<pos:position pos:line="572" pos:column="18"/></name></decl>;<pos:position pos:line="572" pos:column="19"/></decl_stmt>

      <switch pos:line="574" pos:column="7">switch <condition pos:line="574" pos:column="14">(<expr><name pos:line="574" pos:column="15">c<pos:position pos:line="574" pos:column="16"/></name> <operator pos:line="574" pos:column="17">=<pos:position pos:line="574" pos:column="18"/></operator> <name><name pos:line="574" pos:column="19">ptr<pos:position pos:line="574" pos:column="22"/></name><index pos:line="574" pos:column="22">[<expr><literal type="number" pos:line="574" pos:column="23">2<pos:position pos:line="574" pos:column="24"/></literal></expr>]<pos:position pos:line="574" pos:column="25"/></index></name></expr>)<pos:position pos:line="574" pos:column="26"/></condition>
        <block pos:line="575" pos:column="9">{
        <comment type="block" pos:line="576" pos:column="9">/* Skip over comments entirely */</comment>
        <case pos:line="577" pos:column="9">case <expr><literal type="char" pos:line="577" pos:column="14">'#'<pos:position pos:line="577" pos:column="17"/></literal></expr>:<pos:position pos:line="577" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="578" pos:column="9">ptr<pos:position pos:line="578" pos:column="12"/></name> <operator pos:line="578" pos:column="13">+=<pos:position pos:line="578" pos:column="15"/></operator> <literal type="number" pos:line="578" pos:column="16">3<pos:position pos:line="578" pos:column="17"/></literal></expr>;<pos:position pos:line="578" pos:column="18"/></expr_stmt>
        <while pos:line="579" pos:column="9">while <condition pos:line="579" pos:column="15">(<expr><operator pos:line="579" pos:column="16">*<pos:position pos:line="579" pos:column="17"/></operator><name pos:line="579" pos:column="17">ptr<pos:position pos:line="579" pos:column="20"/></name> <operator pos:line="579" pos:column="21">!=<pos:position pos:line="579" pos:column="23"/></operator> <literal type="number" pos:line="579" pos:column="24">0<pos:position pos:line="579" pos:column="25"/></literal> <operator pos:line="579" pos:column="26">&amp;&amp;<pos:position pos:line="579" pos:column="36"/></operator> <operator pos:line="579" pos:column="29">*<pos:position pos:line="579" pos:column="30"/></operator><name pos:line="579" pos:column="30">ptr<pos:position pos:line="579" pos:column="33"/></name> <operator pos:line="579" pos:column="34">!=<pos:position pos:line="579" pos:column="36"/></operator> <literal type="char" pos:line="579" pos:column="37">')'<pos:position pos:line="579" pos:column="40"/></literal></expr>)<pos:position pos:line="579" pos:column="41"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="579" pos:column="42">ptr<pos:position pos:line="579" pos:column="45"/></name><operator pos:line="579" pos:column="45">++<pos:position pos:line="579" pos:column="47"/></operator></expr>;<pos:position pos:line="579" pos:column="48"/></expr_stmt></block></while>
        <if pos:line="580" pos:column="9">if <condition pos:line="580" pos:column="12">(<expr><operator pos:line="580" pos:column="13">*<pos:position pos:line="580" pos:column="14"/></operator><name pos:line="580" pos:column="14">ptr<pos:position pos:line="580" pos:column="17"/></name> <operator pos:line="580" pos:column="18">==<pos:position pos:line="580" pos:column="20"/></operator> <literal type="number" pos:line="580" pos:column="21">0<pos:position pos:line="580" pos:column="22"/></literal></expr>)<pos:position pos:line="580" pos:column="23"/></condition><then pos:line="580" pos:column="23">
          <block pos:line="581" pos:column="11">{
          <expr_stmt><expr><operator pos:line="582" pos:column="11">*<pos:position pos:line="582" pos:column="12"/></operator><name pos:line="582" pos:column="12">errorptr<pos:position pos:line="582" pos:column="20"/></name> <operator pos:line="582" pos:column="21">=<pos:position pos:line="582" pos:column="22"/></operator> <name pos:line="582" pos:column="23">ERR18<pos:position pos:line="582" pos:column="28"/></name></expr>;<pos:position pos:line="582" pos:column="29"/></expr_stmt>
          <goto pos:line="583" pos:column="11">goto <name pos:line="583" pos:column="16">PCRE_ERROR_RETURN<pos:position pos:line="583" pos:column="33"/></name>;<pos:position pos:line="583" pos:column="34"/></goto>
          }<pos:position pos:line="584" pos:column="12"/></block></then></if>
        <continue pos:line="585" pos:column="9">continue;<pos:position pos:line="585" pos:column="18"/></continue>

        <comment type="block" pos:line="587" pos:column="9">/* Non-referencing groups and lookaheads just move the pointer on, and
        then behave like a non-special bracket, except that they don't increment
        the count of extracting brackets. Ditto for the "once only" bracket,
        which is in Perl from version 5.005. */</comment>

        <case pos:line="592" pos:column="9">case <expr><literal type="char" pos:line="592" pos:column="14">':'<pos:position pos:line="592" pos:column="17"/></literal></expr>:<pos:position pos:line="592" pos:column="18"/></case>
        <case pos:line="593" pos:column="9">case <expr><literal type="char" pos:line="593" pos:column="14">'='<pos:position pos:line="593" pos:column="17"/></literal></expr>:<pos:position pos:line="593" pos:column="18"/></case>
        <case pos:line="594" pos:column="9">case <expr><literal type="char" pos:line="594" pos:column="14">'!'<pos:position pos:line="594" pos:column="17"/></literal></expr>:<pos:position pos:line="594" pos:column="18"/></case>
        <case pos:line="595" pos:column="9">case <expr><literal type="char" pos:line="595" pos:column="14">'&gt;'<pos:position pos:line="595" pos:column="20"/></literal></expr>:<pos:position pos:line="595" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="596" pos:column="9">ptr<pos:position pos:line="596" pos:column="12"/></name> <operator pos:line="596" pos:column="13">+=<pos:position pos:line="596" pos:column="15"/></operator> <literal type="number" pos:line="596" pos:column="16">2<pos:position pos:line="596" pos:column="17"/></literal></expr>;<pos:position pos:line="596" pos:column="18"/></expr_stmt>
        <break pos:line="597" pos:column="9">break;<pos:position pos:line="597" pos:column="15"/></break>

        <comment type="block" pos:line="599" pos:column="9">/* (?R) specifies a recursive call to the regex, which is an extension
        to provide the facility which can be obtained by (?p{perl-code}) in
        Perl 5.6. In Perl 5.8 this has become (??{perl-code}).

        From PCRE 4.00, items such as (?3) specify subroutine-like "calls" to
        the appropriate numbered brackets. This includes both recursive and
        non-recursive calls. (?R) is now synonymous with (?0). */</comment>

        <case pos:line="607" pos:column="9">case <expr><literal type="char" pos:line="607" pos:column="14">'R'<pos:position pos:line="607" pos:column="17"/></literal></expr>:<pos:position pos:line="607" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="608" pos:column="9">ptr<pos:position pos:line="608" pos:column="12"/></name><operator pos:line="608" pos:column="12">++<pos:position pos:line="608" pos:column="14"/></operator></expr>;<pos:position pos:line="608" pos:column="15"/></expr_stmt>

        <case pos:line="610" pos:column="9">case <expr><literal type="char" pos:line="610" pos:column="14">'0'<pos:position pos:line="610" pos:column="17"/></literal></expr>:<pos:position pos:line="610" pos:column="18"/></case> <case pos:line="610" pos:column="19">case <expr><literal type="char" pos:line="610" pos:column="24">'1'<pos:position pos:line="610" pos:column="27"/></literal></expr>:<pos:position pos:line="610" pos:column="28"/></case> <case pos:line="610" pos:column="29">case <expr><literal type="char" pos:line="610" pos:column="34">'2'<pos:position pos:line="610" pos:column="37"/></literal></expr>:<pos:position pos:line="610" pos:column="38"/></case> <case pos:line="610" pos:column="39">case <expr><literal type="char" pos:line="610" pos:column="44">'3'<pos:position pos:line="610" pos:column="47"/></literal></expr>:<pos:position pos:line="610" pos:column="48"/></case> <case pos:line="610" pos:column="49">case <expr><literal type="char" pos:line="610" pos:column="54">'4'<pos:position pos:line="610" pos:column="57"/></literal></expr>:<pos:position pos:line="610" pos:column="58"/></case>
        <case pos:line="611" pos:column="9">case <expr><literal type="char" pos:line="611" pos:column="14">'5'<pos:position pos:line="611" pos:column="17"/></literal></expr>:<pos:position pos:line="611" pos:column="18"/></case> <case pos:line="611" pos:column="19">case <expr><literal type="char" pos:line="611" pos:column="24">'6'<pos:position pos:line="611" pos:column="27"/></literal></expr>:<pos:position pos:line="611" pos:column="28"/></case> <case pos:line="611" pos:column="29">case <expr><literal type="char" pos:line="611" pos:column="34">'7'<pos:position pos:line="611" pos:column="37"/></literal></expr>:<pos:position pos:line="611" pos:column="38"/></case> <case pos:line="611" pos:column="39">case <expr><literal type="char" pos:line="611" pos:column="44">'8'<pos:position pos:line="611" pos:column="47"/></literal></expr>:<pos:position pos:line="611" pos:column="48"/></case> <case pos:line="611" pos:column="49">case <expr><literal type="char" pos:line="611" pos:column="54">'9'<pos:position pos:line="611" pos:column="57"/></literal></expr>:<pos:position pos:line="611" pos:column="58"/></case>
        <expr_stmt><expr><name pos:line="612" pos:column="9">ptr<pos:position pos:line="612" pos:column="12"/></name> <operator pos:line="612" pos:column="13">+=<pos:position pos:line="612" pos:column="15"/></operator> <literal type="number" pos:line="612" pos:column="16">2<pos:position pos:line="612" pos:column="17"/></literal></expr>;<pos:position pos:line="612" pos:column="18"/></expr_stmt>
        <if pos:line="613" pos:column="9">if <condition pos:line="613" pos:column="12">(<expr><name pos:line="613" pos:column="13">c<pos:position pos:line="613" pos:column="14"/></name> <operator pos:line="613" pos:column="15">!=<pos:position pos:line="613" pos:column="17"/></operator> <literal type="char" pos:line="613" pos:column="18">'R'<pos:position pos:line="613" pos:column="21"/></literal></expr>)<pos:position pos:line="613" pos:column="22"/></condition><then pos:line="613" pos:column="22">
          <block type="pseudo"><while pos:line="614" pos:column="11">while <condition pos:line="614" pos:column="17">(<expr><operator pos:line="614" pos:column="18">(<pos:position pos:line="614" pos:column="19"/></operator><name><name pos:line="614" pos:column="19">digitab<pos:position pos:line="614" pos:column="26"/></name><index pos:line="614" pos:column="26">[<expr><operator pos:line="614" pos:column="27">*<pos:position pos:line="614" pos:column="28"/></operator><operator pos:line="614" pos:column="28">(<pos:position pos:line="614" pos:column="29"/></operator><operator pos:line="614" pos:column="29">++<pos:position pos:line="614" pos:column="31"/></operator><name pos:line="614" pos:column="31">ptr<pos:position pos:line="614" pos:column="34"/></name><operator pos:line="614" pos:column="34">)<pos:position pos:line="614" pos:column="35"/></operator></expr>]<pos:position pos:line="614" pos:column="36"/></index></name> <operator pos:line="614" pos:column="37">&amp;<pos:position pos:line="614" pos:column="42"/></operator> <name pos:line="614" pos:column="39">ctype_digit<pos:position pos:line="614" pos:column="50"/></name><operator pos:line="614" pos:column="50">)<pos:position pos:line="614" pos:column="51"/></operator> <operator pos:line="614" pos:column="52">!=<pos:position pos:line="614" pos:column="54"/></operator> <literal type="number" pos:line="614" pos:column="55">0<pos:position pos:line="614" pos:column="56"/></literal></expr>)<pos:position pos:line="614" pos:column="57"/></condition><block type="pseudo"><empty_stmt pos:line="614" pos:column="57">;<pos:position pos:line="614" pos:column="58"/></empty_stmt></block></while></block></then></if>
        <if pos:line="615" pos:column="9">if <condition pos:line="615" pos:column="12">(<expr><operator pos:line="615" pos:column="13">*<pos:position pos:line="615" pos:column="14"/></operator><name pos:line="615" pos:column="14">ptr<pos:position pos:line="615" pos:column="17"/></name> <operator pos:line="615" pos:column="18">!=<pos:position pos:line="615" pos:column="20"/></operator> <literal type="char" pos:line="615" pos:column="21">')'<pos:position pos:line="615" pos:column="24"/></literal></expr>)<pos:position pos:line="615" pos:column="25"/></condition><then pos:line="615" pos:column="25">
          <block pos:line="616" pos:column="11">{
          <expr_stmt><expr><operator pos:line="617" pos:column="11">*<pos:position pos:line="617" pos:column="12"/></operator><name pos:line="617" pos:column="12">errorptr<pos:position pos:line="617" pos:column="20"/></name> <operator pos:line="617" pos:column="21">=<pos:position pos:line="617" pos:column="22"/></operator> <name pos:line="617" pos:column="23">ERR29<pos:position pos:line="617" pos:column="28"/></name></expr>;<pos:position pos:line="617" pos:column="29"/></expr_stmt>
          <goto pos:line="618" pos:column="11">goto <name pos:line="618" pos:column="16">PCRE_ERROR_RETURN<pos:position pos:line="618" pos:column="33"/></name>;<pos:position pos:line="618" pos:column="34"/></goto>
          }<pos:position pos:line="619" pos:column="12"/></block></then></if>
        <expr_stmt><expr><name pos:line="620" pos:column="9">length<pos:position pos:line="620" pos:column="15"/></name> <operator pos:line="620" pos:column="16">+=<pos:position pos:line="620" pos:column="18"/></operator> <literal type="number" pos:line="620" pos:column="19">1<pos:position pos:line="620" pos:column="20"/></literal> <operator pos:line="620" pos:column="21">+<pos:position pos:line="620" pos:column="22"/></operator> <name pos:line="620" pos:column="23">LINK_SIZE<pos:position pos:line="620" pos:column="32"/></name></expr>;<pos:position pos:line="620" pos:column="33"/></expr_stmt>

        <comment type="block" pos:line="622" pos:column="9">/* If this item is quantified, it will get wrapped inside brackets so
        as to use the code for quantified brackets. We jump down and use the
        code that handles this for real brackets. */</comment>

        <if pos:line="626" pos:column="9">if <condition pos:line="626" pos:column="12">(<expr><name><name pos:line="626" pos:column="13">ptr<pos:position pos:line="626" pos:column="16"/></name><index pos:line="626" pos:column="16">[<expr><literal type="number" pos:line="626" pos:column="17">1<pos:position pos:line="626" pos:column="18"/></literal></expr>]<pos:position pos:line="626" pos:column="19"/></index></name> <operator pos:line="626" pos:column="20">==<pos:position pos:line="626" pos:column="22"/></operator> <literal type="char" pos:line="626" pos:column="23">'+'<pos:position pos:line="626" pos:column="26"/></literal> <operator pos:line="626" pos:column="27">||<pos:position pos:line="626" pos:column="29"/></operator> <name><name pos:line="626" pos:column="30">ptr<pos:position pos:line="626" pos:column="33"/></name><index pos:line="626" pos:column="33">[<expr><literal type="number" pos:line="626" pos:column="34">1<pos:position pos:line="626" pos:column="35"/></literal></expr>]<pos:position pos:line="626" pos:column="36"/></index></name> <operator pos:line="626" pos:column="37">==<pos:position pos:line="626" pos:column="39"/></operator> <literal type="char" pos:line="626" pos:column="40">'*'<pos:position pos:line="626" pos:column="43"/></literal> <operator pos:line="626" pos:column="44">||<pos:position pos:line="626" pos:column="46"/></operator> <name><name pos:line="626" pos:column="47">ptr<pos:position pos:line="626" pos:column="50"/></name><index pos:line="626" pos:column="50">[<expr><literal type="number" pos:line="626" pos:column="51">1<pos:position pos:line="626" pos:column="52"/></literal></expr>]<pos:position pos:line="626" pos:column="53"/></index></name> <operator pos:line="626" pos:column="54">==<pos:position pos:line="626" pos:column="56"/></operator> <literal type="char" pos:line="626" pos:column="57">'?'<pos:position pos:line="626" pos:column="60"/></literal> <operator pos:line="626" pos:column="61">||<pos:position pos:line="626" pos:column="63"/></operator> <name><name pos:line="626" pos:column="64">ptr<pos:position pos:line="626" pos:column="67"/></name><index pos:line="626" pos:column="67">[<expr><literal type="number" pos:line="626" pos:column="68">1<pos:position pos:line="626" pos:column="69"/></literal></expr>]<pos:position pos:line="626" pos:column="70"/></index></name> <operator pos:line="626" pos:column="71">==<pos:position pos:line="626" pos:column="73"/></operator> <literal type="char" pos:line="626" pos:column="74">'{'<pos:position pos:line="626" pos:column="77"/></literal></expr>)<pos:position pos:line="626" pos:column="78"/></condition><then pos:line="626" pos:column="78">
          <block pos:line="627" pos:column="11">{
          <expr_stmt><expr><name pos:line="628" pos:column="11">length<pos:position pos:line="628" pos:column="17"/></name> <operator pos:line="628" pos:column="18">+=<pos:position pos:line="628" pos:column="20"/></operator> <literal type="number" pos:line="628" pos:column="21">2<pos:position pos:line="628" pos:column="22"/></literal> <operator pos:line="628" pos:column="23">+<pos:position pos:line="628" pos:column="24"/></operator> <literal type="number" pos:line="628" pos:column="25">2<pos:position pos:line="628" pos:column="26"/></literal> <operator pos:line="628" pos:column="27">*<pos:position pos:line="628" pos:column="28"/></operator> <name pos:line="628" pos:column="29">LINK_SIZE<pos:position pos:line="628" pos:column="38"/></name></expr>;<pos:position pos:line="628" pos:column="39"/></expr_stmt>       <comment type="block" pos:line="628" pos:column="46">/* to make bracketed */</comment>
          <expr_stmt><expr><name pos:line="629" pos:column="11">duplength<pos:position pos:line="629" pos:column="20"/></name> <operator pos:line="629" pos:column="21">=<pos:position pos:line="629" pos:column="22"/></operator> <literal type="number" pos:line="629" pos:column="23">5<pos:position pos:line="629" pos:column="24"/></literal> <operator pos:line="629" pos:column="25">+<pos:position pos:line="629" pos:column="26"/></operator> <literal type="number" pos:line="629" pos:column="27">3<pos:position pos:line="629" pos:column="28"/></literal> <operator pos:line="629" pos:column="29">*<pos:position pos:line="629" pos:column="30"/></operator> <name pos:line="629" pos:column="31">LINK_SIZE<pos:position pos:line="629" pos:column="40"/></name></expr>;<pos:position pos:line="629" pos:column="41"/></expr_stmt>
          <goto pos:line="630" pos:column="11">goto <name pos:line="630" pos:column="16">HANDLE_QUANTIFIED_BRACKETS<pos:position pos:line="630" pos:column="42"/></name>;<pos:position pos:line="630" pos:column="43"/></goto>
          }<pos:position pos:line="631" pos:column="12"/></block></then></if>
        <continue pos:line="632" pos:column="9">continue;<pos:position pos:line="632" pos:column="18"/></continue>

        <comment type="block" pos:line="634" pos:column="9">/* (?C) is an extension which provides "callout" - to provide a bit of
        the functionality of the Perl (?{...}) feature. An optional number may
        follow (default is zero). */</comment>

        <case pos:line="638" pos:column="9">case <expr><literal type="char" pos:line="638" pos:column="14">'C'<pos:position pos:line="638" pos:column="17"/></literal></expr>:<pos:position pos:line="638" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="639" pos:column="9">ptr<pos:position pos:line="639" pos:column="12"/></name> <operator pos:line="639" pos:column="13">+=<pos:position pos:line="639" pos:column="15"/></operator> <literal type="number" pos:line="639" pos:column="16">2<pos:position pos:line="639" pos:column="17"/></literal></expr>;<pos:position pos:line="639" pos:column="18"/></expr_stmt>
        <while pos:line="640" pos:column="9">while <condition pos:line="640" pos:column="15">(<expr><operator pos:line="640" pos:column="16">(<pos:position pos:line="640" pos:column="17"/></operator><name><name pos:line="640" pos:column="17">digitab<pos:position pos:line="640" pos:column="24"/></name><index pos:line="640" pos:column="24">[<expr><operator pos:line="640" pos:column="25">*<pos:position pos:line="640" pos:column="26"/></operator><operator pos:line="640" pos:column="26">(<pos:position pos:line="640" pos:column="27"/></operator><operator pos:line="640" pos:column="27">++<pos:position pos:line="640" pos:column="29"/></operator><name pos:line="640" pos:column="29">ptr<pos:position pos:line="640" pos:column="32"/></name><operator pos:line="640" pos:column="32">)<pos:position pos:line="640" pos:column="33"/></operator></expr>]<pos:position pos:line="640" pos:column="34"/></index></name> <operator pos:line="640" pos:column="35">&amp;<pos:position pos:line="640" pos:column="40"/></operator> <name pos:line="640" pos:column="37">ctype_digit<pos:position pos:line="640" pos:column="48"/></name><operator pos:line="640" pos:column="48">)<pos:position pos:line="640" pos:column="49"/></operator> <operator pos:line="640" pos:column="50">!=<pos:position pos:line="640" pos:column="52"/></operator> <literal type="number" pos:line="640" pos:column="53">0<pos:position pos:line="640" pos:column="54"/></literal></expr>)<pos:position pos:line="640" pos:column="55"/></condition><block type="pseudo"><empty_stmt pos:line="640" pos:column="55">;<pos:position pos:line="640" pos:column="56"/></empty_stmt></block></while>
        <if pos:line="641" pos:column="9">if <condition pos:line="641" pos:column="12">(<expr><operator pos:line="641" pos:column="13">*<pos:position pos:line="641" pos:column="14"/></operator><name pos:line="641" pos:column="14">ptr<pos:position pos:line="641" pos:column="17"/></name> <operator pos:line="641" pos:column="18">!=<pos:position pos:line="641" pos:column="20"/></operator> <literal type="char" pos:line="641" pos:column="21">')'<pos:position pos:line="641" pos:column="24"/></literal></expr>)<pos:position pos:line="641" pos:column="25"/></condition><then pos:line="641" pos:column="25">
          <block pos:line="642" pos:column="11">{
          <expr_stmt><expr><operator pos:line="643" pos:column="11">*<pos:position pos:line="643" pos:column="12"/></operator><name pos:line="643" pos:column="12">errorptr<pos:position pos:line="643" pos:column="20"/></name> <operator pos:line="643" pos:column="21">=<pos:position pos:line="643" pos:column="22"/></operator> <name pos:line="643" pos:column="23">ERR39<pos:position pos:line="643" pos:column="28"/></name></expr>;<pos:position pos:line="643" pos:column="29"/></expr_stmt>
          <goto pos:line="644" pos:column="11">goto <name pos:line="644" pos:column="16">PCRE_ERROR_RETURN<pos:position pos:line="644" pos:column="33"/></name>;<pos:position pos:line="644" pos:column="34"/></goto>
          }<pos:position pos:line="645" pos:column="12"/></block></then></if>
        <expr_stmt><expr><name pos:line="646" pos:column="9">length<pos:position pos:line="646" pos:column="15"/></name> <operator pos:line="646" pos:column="16">+=<pos:position pos:line="646" pos:column="18"/></operator> <literal type="number" pos:line="646" pos:column="19">2<pos:position pos:line="646" pos:column="20"/></literal> <operator pos:line="646" pos:column="21">+<pos:position pos:line="646" pos:column="22"/></operator> <literal type="number" pos:line="646" pos:column="23">2<pos:position pos:line="646" pos:column="24"/></literal><operator pos:line="646" pos:column="24">*<pos:position pos:line="646" pos:column="25"/></operator><name pos:line="646" pos:column="25">LINK_SIZE<pos:position pos:line="646" pos:column="34"/></name></expr>;<pos:position pos:line="646" pos:column="35"/></expr_stmt>
        <continue pos:line="647" pos:column="9">continue;<pos:position pos:line="647" pos:column="18"/></continue>

        <comment type="block" pos:line="649" pos:column="9">/* Named subpatterns are an extension copied from Python */</comment>

        <case pos:line="651" pos:column="9">case <expr><literal type="char" pos:line="651" pos:column="14">'P'<pos:position pos:line="651" pos:column="17"/></literal></expr>:<pos:position pos:line="651" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="652" pos:column="9">ptr<pos:position pos:line="652" pos:column="12"/></name> <operator pos:line="652" pos:column="13">+=<pos:position pos:line="652" pos:column="15"/></operator> <literal type="number" pos:line="652" pos:column="16">3<pos:position pos:line="652" pos:column="17"/></literal></expr>;<pos:position pos:line="652" pos:column="18"/></expr_stmt>
        <if pos:line="653" pos:column="9">if <condition pos:line="653" pos:column="12">(<expr><operator pos:line="653" pos:column="13">*<pos:position pos:line="653" pos:column="14"/></operator><name pos:line="653" pos:column="14">ptr<pos:position pos:line="653" pos:column="17"/></name> <operator pos:line="653" pos:column="18">==<pos:position pos:line="653" pos:column="20"/></operator> <literal type="char" pos:line="653" pos:column="21">'&lt;'<pos:position pos:line="653" pos:column="27"/></literal></expr>)<pos:position pos:line="653" pos:column="25"/></condition><then pos:line="653" pos:column="25">
          <block pos:line="654" pos:column="11">{
          <decl_stmt><decl><type><specifier pos:line="655" pos:column="11">const<pos:position pos:line="655" pos:column="16"/></specifier> <name pos:line="655" pos:column="17">uschar<pos:position pos:line="655" pos:column="23"/></name> <modifier pos:line="655" pos:column="24">*<pos:position pos:line="655" pos:column="25"/></modifier></type><name pos:line="655" pos:column="25">p<pos:position pos:line="655" pos:column="26"/></name></decl>;<pos:position pos:line="655" pos:column="27"/></decl_stmt>    <comment type="block" pos:line="655" pos:column="31">/* Don't amalgamate; some compilers */</comment>
          <expr_stmt><expr><name pos:line="656" pos:column="11">p<pos:position pos:line="656" pos:column="12"/></name> <operator pos:line="656" pos:column="13">=<pos:position pos:line="656" pos:column="14"/></operator> <operator pos:line="656" pos:column="15">++<pos:position pos:line="656" pos:column="17"/></operator><name pos:line="656" pos:column="17">ptr<pos:position pos:line="656" pos:column="20"/></name></expr>;<pos:position pos:line="656" pos:column="21"/></expr_stmt>          <comment type="block" pos:line="656" pos:column="31">/* grumble at autoincrement in declaration */</comment>
          <while pos:line="657" pos:column="11">while <condition pos:line="657" pos:column="17">(<expr><operator pos:line="657" pos:column="18">(<pos:position pos:line="657" pos:column="19"/></operator><name><name pos:line="657" pos:column="19">compile_block<pos:position pos:line="657" pos:column="32"/></name><operator pos:line="657" pos:column="32">.<pos:position pos:line="657" pos:column="33"/></operator><name pos:line="657" pos:column="33">ctypes<pos:position pos:line="657" pos:column="39"/></name><index pos:line="657" pos:column="39">[<expr><operator pos:line="657" pos:column="40">*<pos:position pos:line="657" pos:column="41"/></operator><name pos:line="657" pos:column="41">ptr<pos:position pos:line="657" pos:column="44"/></name></expr>]<pos:position pos:line="657" pos:column="45"/></index></name> <operator pos:line="657" pos:column="46">&amp;<pos:position pos:line="657" pos:column="51"/></operator> <name pos:line="657" pos:column="48">ctype_word<pos:position pos:line="657" pos:column="58"/></name><operator pos:line="657" pos:column="58">)<pos:position pos:line="657" pos:column="59"/></operator> <operator pos:line="657" pos:column="60">!=<pos:position pos:line="657" pos:column="62"/></operator> <literal type="number" pos:line="657" pos:column="63">0<pos:position pos:line="657" pos:column="64"/></literal></expr>)<pos:position pos:line="657" pos:column="65"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="657" pos:column="66">ptr<pos:position pos:line="657" pos:column="69"/></name><operator pos:line="657" pos:column="69">++<pos:position pos:line="657" pos:column="71"/></operator></expr>;<pos:position pos:line="657" pos:column="72"/></expr_stmt></block></while>
          <if pos:line="658" pos:column="11">if <condition pos:line="658" pos:column="14">(<expr><operator pos:line="658" pos:column="15">*<pos:position pos:line="658" pos:column="16"/></operator><name pos:line="658" pos:column="16">ptr<pos:position pos:line="658" pos:column="19"/></name> <operator pos:line="658" pos:column="20">!=<pos:position pos:line="658" pos:column="22"/></operator> <literal type="char" pos:line="658" pos:column="23">'&gt;'<pos:position pos:line="658" pos:column="29"/></literal></expr>)<pos:position pos:line="658" pos:column="27"/></condition><then pos:line="658" pos:column="27">
            <block pos:line="659" pos:column="13">{
            <expr_stmt><expr><operator pos:line="660" pos:column="13">*<pos:position pos:line="660" pos:column="14"/></operator><name pos:line="660" pos:column="14">errorptr<pos:position pos:line="660" pos:column="22"/></name> <operator pos:line="660" pos:column="23">=<pos:position pos:line="660" pos:column="24"/></operator> <name pos:line="660" pos:column="25">ERR42<pos:position pos:line="660" pos:column="30"/></name></expr>;<pos:position pos:line="660" pos:column="31"/></expr_stmt>
            <goto pos:line="661" pos:column="13">goto <name pos:line="661" pos:column="18">PCRE_ERROR_RETURN<pos:position pos:line="661" pos:column="35"/></name>;<pos:position pos:line="661" pos:column="36"/></goto>
            }<pos:position pos:line="662" pos:column="14"/></block></then></if>
          <expr_stmt><expr><name pos:line="663" pos:column="11">name_count<pos:position pos:line="663" pos:column="21"/></name><operator pos:line="663" pos:column="21">++<pos:position pos:line="663" pos:column="23"/></operator></expr>;<pos:position pos:line="663" pos:column="24"/></expr_stmt>
          <if pos:line="664" pos:column="11">if <condition pos:line="664" pos:column="14">(<expr><name pos:line="664" pos:column="15">ptr<pos:position pos:line="664" pos:column="18"/></name> <operator pos:line="664" pos:column="19">-<pos:position pos:line="664" pos:column="20"/></operator> <name pos:line="664" pos:column="21">p<pos:position pos:line="664" pos:column="22"/></name> <operator pos:line="664" pos:column="23">&gt;<pos:position pos:line="664" pos:column="27"/></operator> <name pos:line="664" pos:column="25">max_name_size<pos:position pos:line="664" pos:column="38"/></name></expr>)<pos:position pos:line="664" pos:column="39"/></condition><then pos:line="664" pos:column="39"> <block type="pseudo"><expr_stmt><expr><name pos:line="664" pos:column="40">max_name_size<pos:position pos:line="664" pos:column="53"/></name> <operator pos:line="664" pos:column="54">=<pos:position pos:line="664" pos:column="55"/></operator> <operator pos:line="664" pos:column="56">(<pos:position pos:line="664" pos:column="57"/></operator><name pos:line="664" pos:column="57">ptr<pos:position pos:line="664" pos:column="60"/></name> <operator pos:line="664" pos:column="61">-<pos:position pos:line="664" pos:column="62"/></operator> <name pos:line="664" pos:column="63">p<pos:position pos:line="664" pos:column="64"/></name><operator pos:line="664" pos:column="64">)<pos:position pos:line="664" pos:column="65"/></operator></expr>;<pos:position pos:line="664" pos:column="66"/></expr_stmt></block></then></if>
          <break pos:line="665" pos:column="11">break;<pos:position pos:line="665" pos:column="17"/></break>
          }<pos:position pos:line="666" pos:column="12"/></block></then></if>

        <if pos:line="668" pos:column="9">if <condition pos:line="668" pos:column="12">(<expr><operator pos:line="668" pos:column="13">*<pos:position pos:line="668" pos:column="14"/></operator><name pos:line="668" pos:column="14">ptr<pos:position pos:line="668" pos:column="17"/></name> <operator pos:line="668" pos:column="18">==<pos:position pos:line="668" pos:column="20"/></operator> <literal type="char" pos:line="668" pos:column="21">'='<pos:position pos:line="668" pos:column="24"/></literal> <operator pos:line="668" pos:column="25">||<pos:position pos:line="668" pos:column="27"/></operator> <operator pos:line="668" pos:column="28">*<pos:position pos:line="668" pos:column="29"/></operator><name pos:line="668" pos:column="29">ptr<pos:position pos:line="668" pos:column="32"/></name> <operator pos:line="668" pos:column="33">==<pos:position pos:line="668" pos:column="35"/></operator> <literal type="char" pos:line="668" pos:column="36">'&gt;'<pos:position pos:line="668" pos:column="42"/></literal></expr>)<pos:position pos:line="668" pos:column="40"/></condition><then pos:line="668" pos:column="40">
          <block pos:line="669" pos:column="11">{
          <while pos:line="670" pos:column="11">while <condition pos:line="670" pos:column="17">(<expr><operator pos:line="670" pos:column="18">(<pos:position pos:line="670" pos:column="19"/></operator><name><name pos:line="670" pos:column="19">compile_block<pos:position pos:line="670" pos:column="32"/></name><operator pos:line="670" pos:column="32">.<pos:position pos:line="670" pos:column="33"/></operator><name pos:line="670" pos:column="33">ctypes<pos:position pos:line="670" pos:column="39"/></name><index pos:line="670" pos:column="39">[<expr><operator pos:line="670" pos:column="40">*<pos:position pos:line="670" pos:column="41"/></operator><operator pos:line="670" pos:column="41">(<pos:position pos:line="670" pos:column="42"/></operator><operator pos:line="670" pos:column="42">++<pos:position pos:line="670" pos:column="44"/></operator><name pos:line="670" pos:column="44">ptr<pos:position pos:line="670" pos:column="47"/></name><operator pos:line="670" pos:column="47">)<pos:position pos:line="670" pos:column="48"/></operator></expr>]<pos:position pos:line="670" pos:column="49"/></index></name> <operator pos:line="670" pos:column="50">&amp;<pos:position pos:line="670" pos:column="55"/></operator> <name pos:line="670" pos:column="52">ctype_word<pos:position pos:line="670" pos:column="62"/></name><operator pos:line="670" pos:column="62">)<pos:position pos:line="670" pos:column="63"/></operator> <operator pos:line="670" pos:column="64">!=<pos:position pos:line="670" pos:column="66"/></operator> <literal type="number" pos:line="670" pos:column="67">0<pos:position pos:line="670" pos:column="68"/></literal></expr>)<pos:position pos:line="670" pos:column="69"/></condition><block type="pseudo"><empty_stmt pos:line="670" pos:column="69">;<pos:position pos:line="670" pos:column="70"/></empty_stmt></block></while>
          <if pos:line="671" pos:column="11">if <condition pos:line="671" pos:column="14">(<expr><operator pos:line="671" pos:column="15">*<pos:position pos:line="671" pos:column="16"/></operator><name pos:line="671" pos:column="16">ptr<pos:position pos:line="671" pos:column="19"/></name> <operator pos:line="671" pos:column="20">!=<pos:position pos:line="671" pos:column="22"/></operator> <literal type="char" pos:line="671" pos:column="23">')'<pos:position pos:line="671" pos:column="26"/></literal></expr>)<pos:position pos:line="671" pos:column="27"/></condition><then pos:line="671" pos:column="27">
            <block pos:line="672" pos:column="13">{
            <expr_stmt><expr><operator pos:line="673" pos:column="13">*<pos:position pos:line="673" pos:column="14"/></operator><name pos:line="673" pos:column="14">errorptr<pos:position pos:line="673" pos:column="22"/></name> <operator pos:line="673" pos:column="23">=<pos:position pos:line="673" pos:column="24"/></operator> <name pos:line="673" pos:column="25">ERR42<pos:position pos:line="673" pos:column="30"/></name></expr>;<pos:position pos:line="673" pos:column="31"/></expr_stmt>
            <goto pos:line="674" pos:column="13">goto <name pos:line="674" pos:column="18">PCRE_ERROR_RETURN<pos:position pos:line="674" pos:column="35"/></name>;<pos:position pos:line="674" pos:column="36"/></goto>
            }<pos:position pos:line="675" pos:column="14"/></block></then></if>
          <break pos:line="676" pos:column="11">break;<pos:position pos:line="676" pos:column="17"/></break>
          }<pos:position pos:line="677" pos:column="12"/></block></then></if>

        <comment type="block" pos:line="679" pos:column="9">/* Unknown character after (?P */</comment>

        <expr_stmt><expr><operator pos:line="681" pos:column="9">*<pos:position pos:line="681" pos:column="10"/></operator><name pos:line="681" pos:column="10">errorptr<pos:position pos:line="681" pos:column="18"/></name> <operator pos:line="681" pos:column="19">=<pos:position pos:line="681" pos:column="20"/></operator> <name pos:line="681" pos:column="21">ERR41<pos:position pos:line="681" pos:column="26"/></name></expr>;<pos:position pos:line="681" pos:column="27"/></expr_stmt>
        <goto pos:line="682" pos:column="9">goto <name pos:line="682" pos:column="14">PCRE_ERROR_RETURN<pos:position pos:line="682" pos:column="31"/></name>;<pos:position pos:line="682" pos:column="32"/></goto>

        <comment type="block" pos:line="684" pos:column="9">/* Lookbehinds are in Perl from version 5.005 */</comment>

        <case pos:line="686" pos:column="9">case <expr><literal type="char" pos:line="686" pos:column="14">'&lt;'<pos:position pos:line="686" pos:column="20"/></literal></expr>:<pos:position pos:line="686" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="687" pos:column="9">ptr<pos:position pos:line="687" pos:column="12"/></name> <operator pos:line="687" pos:column="13">+=<pos:position pos:line="687" pos:column="15"/></operator> <literal type="number" pos:line="687" pos:column="16">3<pos:position pos:line="687" pos:column="17"/></literal></expr>;<pos:position pos:line="687" pos:column="18"/></expr_stmt>
        <if pos:line="688" pos:column="9">if <condition pos:line="688" pos:column="12">(<expr><operator pos:line="688" pos:column="13">*<pos:position pos:line="688" pos:column="14"/></operator><name pos:line="688" pos:column="14">ptr<pos:position pos:line="688" pos:column="17"/></name> <operator pos:line="688" pos:column="18">==<pos:position pos:line="688" pos:column="20"/></operator> <literal type="char" pos:line="688" pos:column="21">'='<pos:position pos:line="688" pos:column="24"/></literal> <operator pos:line="688" pos:column="25">||<pos:position pos:line="688" pos:column="27"/></operator> <operator pos:line="688" pos:column="28">*<pos:position pos:line="688" pos:column="29"/></operator><name pos:line="688" pos:column="29">ptr<pos:position pos:line="688" pos:column="32"/></name> <operator pos:line="688" pos:column="33">==<pos:position pos:line="688" pos:column="35"/></operator> <literal type="char" pos:line="688" pos:column="36">'!'<pos:position pos:line="688" pos:column="39"/></literal></expr>)<pos:position pos:line="688" pos:column="40"/></condition><then pos:line="688" pos:column="40">
          <block pos:line="689" pos:column="11">{
          <expr_stmt><expr><name pos:line="690" pos:column="11">branch_newextra<pos:position pos:line="690" pos:column="26"/></name> <operator pos:line="690" pos:column="27">=<pos:position pos:line="690" pos:column="28"/></operator> <literal type="number" pos:line="690" pos:column="29">1<pos:position pos:line="690" pos:column="30"/></literal> <operator pos:line="690" pos:column="31">+<pos:position pos:line="690" pos:column="32"/></operator> <name pos:line="690" pos:column="33">LINK_SIZE<pos:position pos:line="690" pos:column="42"/></name></expr>;<pos:position pos:line="690" pos:column="43"/></expr_stmt>
          <expr_stmt><expr><name pos:line="691" pos:column="11">length<pos:position pos:line="691" pos:column="17"/></name> <operator pos:line="691" pos:column="18">+=<pos:position pos:line="691" pos:column="20"/></operator> <literal type="number" pos:line="691" pos:column="21">1<pos:position pos:line="691" pos:column="22"/></literal> <operator pos:line="691" pos:column="23">+<pos:position pos:line="691" pos:column="24"/></operator> <name pos:line="691" pos:column="25">LINK_SIZE<pos:position pos:line="691" pos:column="34"/></name></expr>;<pos:position pos:line="691" pos:column="35"/></expr_stmt>         <comment type="block" pos:line="691" pos:column="44">/* For the first branch */</comment>
          <break pos:line="692" pos:column="11">break;<pos:position pos:line="692" pos:column="17"/></break>
          }<pos:position pos:line="693" pos:column="12"/></block></then></if>
        <expr_stmt><expr><operator pos:line="694" pos:column="9">*<pos:position pos:line="694" pos:column="10"/></operator><name pos:line="694" pos:column="10">errorptr<pos:position pos:line="694" pos:column="18"/></name> <operator pos:line="694" pos:column="19">=<pos:position pos:line="694" pos:column="20"/></operator> <name pos:line="694" pos:column="21">ERR24<pos:position pos:line="694" pos:column="26"/></name></expr>;<pos:position pos:line="694" pos:column="27"/></expr_stmt>
        <goto pos:line="695" pos:column="9">goto <name pos:line="695" pos:column="14">PCRE_ERROR_RETURN<pos:position pos:line="695" pos:column="31"/></name>;<pos:position pos:line="695" pos:column="32"/></goto>

        <comment type="block" pos:line="697" pos:column="9">/* Conditionals are in Perl from version 5.005. The bracket must either
        be followed by a number (for bracket reference) or by an assertion
        group, or (a PCRE extension) by 'R' for a recursion test. */</comment>

        <case pos:line="701" pos:column="9">case <expr><literal type="char" pos:line="701" pos:column="14">'('<pos:position pos:line="701" pos:column="17"/></literal></expr>:<pos:position pos:line="701" pos:column="18"/></case>
        <if pos:line="702" pos:column="9">if <condition pos:line="702" pos:column="12">(<expr><name><name pos:line="702" pos:column="13">ptr<pos:position pos:line="702" pos:column="16"/></name><index pos:line="702" pos:column="16">[<expr><literal type="number" pos:line="702" pos:column="17">3<pos:position pos:line="702" pos:column="18"/></literal></expr>]<pos:position pos:line="702" pos:column="19"/></index></name> <operator pos:line="702" pos:column="20">==<pos:position pos:line="702" pos:column="22"/></operator> <literal type="char" pos:line="702" pos:column="23">'R'<pos:position pos:line="702" pos:column="26"/></literal> <operator pos:line="702" pos:column="27">&amp;&amp;<pos:position pos:line="702" pos:column="37"/></operator> <name><name pos:line="702" pos:column="30">ptr<pos:position pos:line="702" pos:column="33"/></name><index pos:line="702" pos:column="33">[<expr><literal type="number" pos:line="702" pos:column="34">4<pos:position pos:line="702" pos:column="35"/></literal></expr>]<pos:position pos:line="702" pos:column="36"/></index></name> <operator pos:line="702" pos:column="37">==<pos:position pos:line="702" pos:column="39"/></operator> <literal type="char" pos:line="702" pos:column="40">')'<pos:position pos:line="702" pos:column="43"/></literal></expr>)<pos:position pos:line="702" pos:column="44"/></condition><then pos:line="702" pos:column="44">
          <block pos:line="703" pos:column="11">{
          <expr_stmt><expr><name pos:line="704" pos:column="11">ptr<pos:position pos:line="704" pos:column="14"/></name> <operator pos:line="704" pos:column="15">+=<pos:position pos:line="704" pos:column="17"/></operator> <literal type="number" pos:line="704" pos:column="18">4<pos:position pos:line="704" pos:column="19"/></literal></expr>;<pos:position pos:line="704" pos:column="20"/></expr_stmt>
          <expr_stmt><expr><name pos:line="705" pos:column="11">length<pos:position pos:line="705" pos:column="17"/></name> <operator pos:line="705" pos:column="18">+=<pos:position pos:line="705" pos:column="20"/></operator> <literal type="number" pos:line="705" pos:column="21">3<pos:position pos:line="705" pos:column="22"/></literal></expr>;<pos:position pos:line="705" pos:column="23"/></expr_stmt>
          }<pos:position pos:line="706" pos:column="12"/></block></then>
        <elseif pos:line="707" pos:column="9">else <if pos:line="707" pos:column="14">if <condition pos:line="707" pos:column="17">(<expr><operator pos:line="707" pos:column="18">(<pos:position pos:line="707" pos:column="19"/></operator><name><name pos:line="707" pos:column="19">digitab<pos:position pos:line="707" pos:column="26"/></name><index pos:line="707" pos:column="26">[<expr><name><name pos:line="707" pos:column="27">ptr<pos:position pos:line="707" pos:column="30"/></name><index pos:line="707" pos:column="30">[<expr><literal type="number" pos:line="707" pos:column="31">3<pos:position pos:line="707" pos:column="32"/></literal></expr>]<pos:position pos:line="707" pos:column="33"/></index></name></expr>]<pos:position pos:line="707" pos:column="34"/></index></name> <operator pos:line="707" pos:column="35">&amp;<pos:position pos:line="707" pos:column="40"/></operator> <name pos:line="707" pos:column="37">ctype_digit<pos:position pos:line="707" pos:column="48"/></name><operator pos:line="707" pos:column="48">)<pos:position pos:line="707" pos:column="49"/></operator> <operator pos:line="707" pos:column="50">!=<pos:position pos:line="707" pos:column="52"/></operator> <literal type="number" pos:line="707" pos:column="53">0<pos:position pos:line="707" pos:column="54"/></literal></expr>)<pos:position pos:line="707" pos:column="55"/></condition><then pos:line="707" pos:column="55">
          <block pos:line="708" pos:column="11">{
          <expr_stmt><expr><name pos:line="709" pos:column="11">ptr<pos:position pos:line="709" pos:column="14"/></name> <operator pos:line="709" pos:column="15">+=<pos:position pos:line="709" pos:column="17"/></operator> <literal type="number" pos:line="709" pos:column="18">4<pos:position pos:line="709" pos:column="19"/></literal></expr>;<pos:position pos:line="709" pos:column="20"/></expr_stmt>
          <expr_stmt><expr><name pos:line="710" pos:column="11">length<pos:position pos:line="710" pos:column="17"/></name> <operator pos:line="710" pos:column="18">+=<pos:position pos:line="710" pos:column="20"/></operator> <literal type="number" pos:line="710" pos:column="21">3<pos:position pos:line="710" pos:column="22"/></literal></expr>;<pos:position pos:line="710" pos:column="23"/></expr_stmt>
          <while pos:line="711" pos:column="11">while <condition pos:line="711" pos:column="17">(<expr><operator pos:line="711" pos:column="18">(<pos:position pos:line="711" pos:column="19"/></operator><name><name pos:line="711" pos:column="19">digitab<pos:position pos:line="711" pos:column="26"/></name><index pos:line="711" pos:column="26">[<expr><operator pos:line="711" pos:column="27">*<pos:position pos:line="711" pos:column="28"/></operator><name pos:line="711" pos:column="28">ptr<pos:position pos:line="711" pos:column="31"/></name></expr>]<pos:position pos:line="711" pos:column="32"/></index></name> <operator pos:line="711" pos:column="33">&amp;<pos:position pos:line="711" pos:column="38"/></operator> <name pos:line="711" pos:column="35">ctype_digit<pos:position pos:line="711" pos:column="46"/></name><operator pos:line="711" pos:column="46">)<pos:position pos:line="711" pos:column="47"/></operator> <operator pos:line="711" pos:column="48">!=<pos:position pos:line="711" pos:column="50"/></operator> <literal type="number" pos:line="711" pos:column="51">0<pos:position pos:line="711" pos:column="52"/></literal></expr>)<pos:position pos:line="711" pos:column="53"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="711" pos:column="54">ptr<pos:position pos:line="711" pos:column="57"/></name><operator pos:line="711" pos:column="57">++<pos:position pos:line="711" pos:column="59"/></operator></expr>;<pos:position pos:line="711" pos:column="60"/></expr_stmt></block></while>
          <if pos:line="712" pos:column="11">if <condition pos:line="712" pos:column="14">(<expr><operator pos:line="712" pos:column="15">*<pos:position pos:line="712" pos:column="16"/></operator><name pos:line="712" pos:column="16">ptr<pos:position pos:line="712" pos:column="19"/></name> <operator pos:line="712" pos:column="20">!=<pos:position pos:line="712" pos:column="22"/></operator> <literal type="char" pos:line="712" pos:column="23">')'<pos:position pos:line="712" pos:column="26"/></literal></expr>)<pos:position pos:line="712" pos:column="27"/></condition><then pos:line="712" pos:column="27">
            <block pos:line="713" pos:column="13">{
            <expr_stmt><expr><operator pos:line="714" pos:column="13">*<pos:position pos:line="714" pos:column="14"/></operator><name pos:line="714" pos:column="14">errorptr<pos:position pos:line="714" pos:column="22"/></name> <operator pos:line="714" pos:column="23">=<pos:position pos:line="714" pos:column="24"/></operator> <name pos:line="714" pos:column="25">ERR26<pos:position pos:line="714" pos:column="30"/></name></expr>;<pos:position pos:line="714" pos:column="31"/></expr_stmt>
            <goto pos:line="715" pos:column="13">goto <name pos:line="715" pos:column="18">PCRE_ERROR_RETURN<pos:position pos:line="715" pos:column="35"/></name>;<pos:position pos:line="715" pos:column="36"/></goto>
            }<pos:position pos:line="716" pos:column="14"/></block></then></if>
          }<pos:position pos:line="717" pos:column="12"/></block></then></if></elseif>
        <else pos:line="718" pos:column="9">else   <comment type="block" pos:line="718" pos:column="16">/* An assertion must follow */</comment>
          <block pos:line="719" pos:column="11">{
          <expr_stmt><expr><name pos:line="720" pos:column="11">ptr<pos:position pos:line="720" pos:column="14"/></name><operator pos:line="720" pos:column="14">++<pos:position pos:line="720" pos:column="16"/></operator></expr>;<pos:position pos:line="720" pos:column="17"/></expr_stmt>   <comment type="block" pos:line="720" pos:column="20">/* Can treat like ':' as far as spacing is concerned */</comment>
          <if pos:line="721" pos:column="11">if <condition pos:line="721" pos:column="14">(<expr><name><name pos:line="721" pos:column="15">ptr<pos:position pos:line="721" pos:column="18"/></name><index pos:line="721" pos:column="18">[<expr><literal type="number" pos:line="721" pos:column="19">2<pos:position pos:line="721" pos:column="20"/></literal></expr>]<pos:position pos:line="721" pos:column="21"/></index></name> <operator pos:line="721" pos:column="22">!=<pos:position pos:line="721" pos:column="24"/></operator> <literal type="char" pos:line="721" pos:column="25">'?'<pos:position pos:line="721" pos:column="28"/></literal> <operator pos:line="721" pos:column="29">||<pos:position pos:line="721" pos:column="31"/></operator>
             <operator pos:line="722" pos:column="14">(<pos:position pos:line="722" pos:column="15"/></operator><name><name pos:line="722" pos:column="15">ptr<pos:position pos:line="722" pos:column="18"/></name><index pos:line="722" pos:column="18">[<expr><literal type="number" pos:line="722" pos:column="19">3<pos:position pos:line="722" pos:column="20"/></literal></expr>]<pos:position pos:line="722" pos:column="21"/></index></name> <operator pos:line="722" pos:column="22">!=<pos:position pos:line="722" pos:column="24"/></operator> <literal type="char" pos:line="722" pos:column="25">'='<pos:position pos:line="722" pos:column="28"/></literal> <operator pos:line="722" pos:column="29">&amp;&amp;<pos:position pos:line="722" pos:column="39"/></operator> <name><name pos:line="722" pos:column="32">ptr<pos:position pos:line="722" pos:column="35"/></name><index pos:line="722" pos:column="35">[<expr><literal type="number" pos:line="722" pos:column="36">3<pos:position pos:line="722" pos:column="37"/></literal></expr>]<pos:position pos:line="722" pos:column="38"/></index></name> <operator pos:line="722" pos:column="39">!=<pos:position pos:line="722" pos:column="41"/></operator> <literal type="char" pos:line="722" pos:column="42">'!'<pos:position pos:line="722" pos:column="45"/></literal> <operator pos:line="722" pos:column="46">&amp;&amp;<pos:position pos:line="722" pos:column="56"/></operator> <name><name pos:line="722" pos:column="49">ptr<pos:position pos:line="722" pos:column="52"/></name><index pos:line="722" pos:column="52">[<expr><literal type="number" pos:line="722" pos:column="53">3<pos:position pos:line="722" pos:column="54"/></literal></expr>]<pos:position pos:line="722" pos:column="55"/></index></name> <operator pos:line="722" pos:column="56">!=<pos:position pos:line="722" pos:column="58"/></operator> <literal type="char" pos:line="722" pos:column="59">'&lt;'<pos:position pos:line="722" pos:column="65"/></literal><operator pos:line="722" pos:column="62">)<pos:position pos:line="722" pos:column="63"/></operator></expr> )<pos:position pos:line="722" pos:column="65"/></condition><then pos:line="722" pos:column="65">
            <block pos:line="723" pos:column="13">{
            <expr_stmt><expr><name pos:line="724" pos:column="13">ptr<pos:position pos:line="724" pos:column="16"/></name> <operator pos:line="724" pos:column="17">+=<pos:position pos:line="724" pos:column="19"/></operator> <literal type="number" pos:line="724" pos:column="20">2<pos:position pos:line="724" pos:column="21"/></literal></expr>;<pos:position pos:line="724" pos:column="22"/></expr_stmt>    <comment type="block" pos:line="724" pos:column="26">/* To get right offset in message */</comment>
            <expr_stmt><expr><operator pos:line="725" pos:column="13">*<pos:position pos:line="725" pos:column="14"/></operator><name pos:line="725" pos:column="14">errorptr<pos:position pos:line="725" pos:column="22"/></name> <operator pos:line="725" pos:column="23">=<pos:position pos:line="725" pos:column="24"/></operator> <name pos:line="725" pos:column="25">ERR28<pos:position pos:line="725" pos:column="30"/></name></expr>;<pos:position pos:line="725" pos:column="31"/></expr_stmt>
            <goto pos:line="726" pos:column="13">goto <name pos:line="726" pos:column="18">PCRE_ERROR_RETURN<pos:position pos:line="726" pos:column="35"/></name>;<pos:position pos:line="726" pos:column="36"/></goto>
            }<pos:position pos:line="727" pos:column="14"/></block></then></if>
          }<pos:position pos:line="728" pos:column="12"/></block></else></if>
        <break pos:line="729" pos:column="9">break;<pos:position pos:line="729" pos:column="15"/></break>

        <comment type="block" pos:line="731" pos:column="9">/* Else loop checking valid options until ) is met. Anything else is an
        error. If we are without any brackets, i.e. at top level, the settings
        act as if specified in the options, so massage the options immediately.
        This is for backward compatibility with Perl 5.004. */</comment>

        <default pos:line="736" pos:column="9">default:<pos:position pos:line="736" pos:column="17"/></default>
        <expr_stmt><expr><name pos:line="737" pos:column="9">set<pos:position pos:line="737" pos:column="12"/></name> <operator pos:line="737" pos:column="13">=<pos:position pos:line="737" pos:column="14"/></operator> <name pos:line="737" pos:column="15">unset<pos:position pos:line="737" pos:column="20"/></name> <operator pos:line="737" pos:column="21">=<pos:position pos:line="737" pos:column="22"/></operator> <literal type="number" pos:line="737" pos:column="23">0<pos:position pos:line="737" pos:column="24"/></literal></expr>;<pos:position pos:line="737" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="738" pos:column="9">optset<pos:position pos:line="738" pos:column="15"/></name> <operator pos:line="738" pos:column="16">=<pos:position pos:line="738" pos:column="17"/></operator> <operator pos:line="738" pos:column="18">&amp;<pos:position pos:line="738" pos:column="23"/></operator><name pos:line="738" pos:column="19">set<pos:position pos:line="738" pos:column="22"/></name></expr>;<pos:position pos:line="738" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="739" pos:column="9">ptr<pos:position pos:line="739" pos:column="12"/></name> <operator pos:line="739" pos:column="13">+=<pos:position pos:line="739" pos:column="15"/></operator> <literal type="number" pos:line="739" pos:column="16">2<pos:position pos:line="739" pos:column="17"/></literal></expr>;<pos:position pos:line="739" pos:column="18"/></expr_stmt>

        <for pos:line="741" pos:column="9">for <control pos:line="741" pos:column="13">(<init pos:line="741" pos:column="14">;<pos:position pos:line="741" pos:column="15"/></init><condition pos:line="741" pos:column="15">;<pos:position pos:line="741" pos:column="16"/></condition> <incr><expr><name pos:line="741" pos:column="17">ptr<pos:position pos:line="741" pos:column="20"/></name><operator pos:line="741" pos:column="20">++<pos:position pos:line="741" pos:column="22"/></operator></expr></incr>)<pos:position pos:line="741" pos:column="23"/></control>
          <block pos:line="742" pos:column="11">{
          <expr_stmt><expr><name pos:line="743" pos:column="11">c<pos:position pos:line="743" pos:column="12"/></name> <operator pos:line="743" pos:column="13">=<pos:position pos:line="743" pos:column="14"/></operator> <operator pos:line="743" pos:column="15">*<pos:position pos:line="743" pos:column="16"/></operator><name pos:line="743" pos:column="16">ptr<pos:position pos:line="743" pos:column="19"/></name></expr>;<pos:position pos:line="743" pos:column="20"/></expr_stmt>
          <switch pos:line="744" pos:column="11">switch <condition pos:line="744" pos:column="18">(<expr><name pos:line="744" pos:column="19">c<pos:position pos:line="744" pos:column="20"/></name></expr>)<pos:position pos:line="744" pos:column="21"/></condition>
            <block pos:line="745" pos:column="13">{
            <case pos:line="746" pos:column="13">case <expr><literal type="char" pos:line="746" pos:column="18">'i'<pos:position pos:line="746" pos:column="21"/></literal></expr>:<pos:position pos:line="746" pos:column="22"/></case>
            <expr_stmt><expr><operator pos:line="747" pos:column="13">*<pos:position pos:line="747" pos:column="14"/></operator><name pos:line="747" pos:column="14">optset<pos:position pos:line="747" pos:column="20"/></name> <operator pos:line="747" pos:column="21">|=<pos:position pos:line="747" pos:column="23"/></operator> <name pos:line="747" pos:column="24">PCRE_CASELESS<pos:position pos:line="747" pos:column="37"/></name></expr>;<pos:position pos:line="747" pos:column="38"/></expr_stmt>
            <continue pos:line="748" pos:column="13">continue;<pos:position pos:line="748" pos:column="22"/></continue>

            <case pos:line="750" pos:column="13">case <expr><literal type="char" pos:line="750" pos:column="18">'m'<pos:position pos:line="750" pos:column="21"/></literal></expr>:<pos:position pos:line="750" pos:column="22"/></case>
            <expr_stmt><expr><operator pos:line="751" pos:column="13">*<pos:position pos:line="751" pos:column="14"/></operator><name pos:line="751" pos:column="14">optset<pos:position pos:line="751" pos:column="20"/></name> <operator pos:line="751" pos:column="21">|=<pos:position pos:line="751" pos:column="23"/></operator> <name pos:line="751" pos:column="24">PCRE_MULTILINE<pos:position pos:line="751" pos:column="38"/></name></expr>;<pos:position pos:line="751" pos:column="39"/></expr_stmt>
            <continue pos:line="752" pos:column="13">continue;<pos:position pos:line="752" pos:column="22"/></continue>

            <case pos:line="754" pos:column="13">case <expr><literal type="char" pos:line="754" pos:column="18">'s'<pos:position pos:line="754" pos:column="21"/></literal></expr>:<pos:position pos:line="754" pos:column="22"/></case>
            <expr_stmt><expr><operator pos:line="755" pos:column="13">*<pos:position pos:line="755" pos:column="14"/></operator><name pos:line="755" pos:column="14">optset<pos:position pos:line="755" pos:column="20"/></name> <operator pos:line="755" pos:column="21">|=<pos:position pos:line="755" pos:column="23"/></operator> <name pos:line="755" pos:column="24">PCRE_DOTALL<pos:position pos:line="755" pos:column="35"/></name></expr>;<pos:position pos:line="755" pos:column="36"/></expr_stmt>
            <continue pos:line="756" pos:column="13">continue;<pos:position pos:line="756" pos:column="22"/></continue>

            <case pos:line="758" pos:column="13">case <expr><literal type="char" pos:line="758" pos:column="18">'x'<pos:position pos:line="758" pos:column="21"/></literal></expr>:<pos:position pos:line="758" pos:column="22"/></case>
            <expr_stmt><expr><operator pos:line="759" pos:column="13">*<pos:position pos:line="759" pos:column="14"/></operator><name pos:line="759" pos:column="14">optset<pos:position pos:line="759" pos:column="20"/></name> <operator pos:line="759" pos:column="21">|=<pos:position pos:line="759" pos:column="23"/></operator> <name pos:line="759" pos:column="24">PCRE_EXTENDED<pos:position pos:line="759" pos:column="37"/></name></expr>;<pos:position pos:line="759" pos:column="38"/></expr_stmt>
            <continue pos:line="760" pos:column="13">continue;<pos:position pos:line="760" pos:column="22"/></continue>

            <case pos:line="762" pos:column="13">case <expr><literal type="char" pos:line="762" pos:column="18">'X'<pos:position pos:line="762" pos:column="21"/></literal></expr>:<pos:position pos:line="762" pos:column="22"/></case>
            <expr_stmt><expr><operator pos:line="763" pos:column="13">*<pos:position pos:line="763" pos:column="14"/></operator><name pos:line="763" pos:column="14">optset<pos:position pos:line="763" pos:column="20"/></name> <operator pos:line="763" pos:column="21">|=<pos:position pos:line="763" pos:column="23"/></operator> <name pos:line="763" pos:column="24">PCRE_EXTRA<pos:position pos:line="763" pos:column="34"/></name></expr>;<pos:position pos:line="763" pos:column="35"/></expr_stmt>
            <continue pos:line="764" pos:column="13">continue;<pos:position pos:line="764" pos:column="22"/></continue>

            <case pos:line="766" pos:column="13">case <expr><literal type="char" pos:line="766" pos:column="18">'U'<pos:position pos:line="766" pos:column="21"/></literal></expr>:<pos:position pos:line="766" pos:column="22"/></case>
            <expr_stmt><expr><operator pos:line="767" pos:column="13">*<pos:position pos:line="767" pos:column="14"/></operator><name pos:line="767" pos:column="14">optset<pos:position pos:line="767" pos:column="20"/></name> <operator pos:line="767" pos:column="21">|=<pos:position pos:line="767" pos:column="23"/></operator> <name pos:line="767" pos:column="24">PCRE_UNGREEDY<pos:position pos:line="767" pos:column="37"/></name></expr>;<pos:position pos:line="767" pos:column="38"/></expr_stmt>
            <continue pos:line="768" pos:column="13">continue;<pos:position pos:line="768" pos:column="22"/></continue>

            <case pos:line="770" pos:column="13">case <expr><literal type="char" pos:line="770" pos:column="18">'-'<pos:position pos:line="770" pos:column="21"/></literal></expr>:<pos:position pos:line="770" pos:column="22"/></case>
            <expr_stmt><expr><name pos:line="771" pos:column="13">optset<pos:position pos:line="771" pos:column="19"/></name> <operator pos:line="771" pos:column="20">=<pos:position pos:line="771" pos:column="21"/></operator> <operator pos:line="771" pos:column="22">&amp;<pos:position pos:line="771" pos:column="27"/></operator><name pos:line="771" pos:column="23">unset<pos:position pos:line="771" pos:column="28"/></name></expr>;<pos:position pos:line="771" pos:column="29"/></expr_stmt>
            <continue pos:line="772" pos:column="13">continue;<pos:position pos:line="772" pos:column="22"/></continue>

            <comment type="block" pos:line="774" pos:column="13">/* A termination by ')' indicates an options-setting-only item; if
            this is at the very start of the pattern (indicated by item_count
            being zero), we use it to set the global options. This is helpful
            when analyzing the pattern for first characters, etc. Otherwise
            nothing is done here and it is handled during the compiling
            process.

            [Historical note: Up to Perl 5.8, options settings at top level
            were always global settings, wherever they appeared in the pattern.
            That is, they were equivalent to an external setting. From 5.8
            onwards, they apply only to what follows (which is what you might
            expect).] */</comment>

            <case pos:line="787" pos:column="13">case <expr><literal type="char" pos:line="787" pos:column="18">')'<pos:position pos:line="787" pos:column="21"/></literal></expr>:<pos:position pos:line="787" pos:column="22"/></case>
            <if pos:line="788" pos:column="13">if <condition pos:line="788" pos:column="16">(<expr><name pos:line="788" pos:column="17">item_count<pos:position pos:line="788" pos:column="27"/></name> <operator pos:line="788" pos:column="28">==<pos:position pos:line="788" pos:column="30"/></operator> <literal type="number" pos:line="788" pos:column="31">0<pos:position pos:line="788" pos:column="32"/></literal></expr>)<pos:position pos:line="788" pos:column="33"/></condition><then pos:line="788" pos:column="33">
              <block pos:line="789" pos:column="15">{
              <expr_stmt><expr><name pos:line="790" pos:column="15">options<pos:position pos:line="790" pos:column="22"/></name> <operator pos:line="790" pos:column="23">=<pos:position pos:line="790" pos:column="24"/></operator> <operator pos:line="790" pos:column="25">(<pos:position pos:line="790" pos:column="26"/></operator><name pos:line="790" pos:column="26">options<pos:position pos:line="790" pos:column="33"/></name> <operator pos:line="790" pos:column="34">|<pos:position pos:line="790" pos:column="35"/></operator> <name pos:line="790" pos:column="36">set<pos:position pos:line="790" pos:column="39"/></name><operator pos:line="790" pos:column="39">)<pos:position pos:line="790" pos:column="40"/></operator> <operator pos:line="790" pos:column="41">&amp;<pos:position pos:line="790" pos:column="46"/></operator> <operator pos:line="790" pos:column="43">(<pos:position pos:line="790" pos:column="44"/></operator><operator pos:line="790" pos:column="44">~<pos:position pos:line="790" pos:column="45"/></operator><name pos:line="790" pos:column="45">unset<pos:position pos:line="790" pos:column="50"/></name><operator pos:line="790" pos:column="50">)<pos:position pos:line="790" pos:column="51"/></operator></expr>;<pos:position pos:line="790" pos:column="52"/></expr_stmt>
              <expr_stmt><expr><name pos:line="791" pos:column="15">set<pos:position pos:line="791" pos:column="18"/></name> <operator pos:line="791" pos:column="19">=<pos:position pos:line="791" pos:column="20"/></operator> <name pos:line="791" pos:column="21">unset<pos:position pos:line="791" pos:column="26"/></name> <operator pos:line="791" pos:column="27">=<pos:position pos:line="791" pos:column="28"/></operator> <literal type="number" pos:line="791" pos:column="29">0<pos:position pos:line="791" pos:column="30"/></literal></expr>;<pos:position pos:line="791" pos:column="31"/></expr_stmt>     <comment type="block" pos:line="791" pos:column="36">/* To save length */</comment>
              <expr_stmt><expr><name pos:line="792" pos:column="15">item_count<pos:position pos:line="792" pos:column="25"/></name><operator pos:line="792" pos:column="25">--<pos:position pos:line="792" pos:column="27"/></operator></expr>;<pos:position pos:line="792" pos:column="28"/></expr_stmt>        <comment type="block" pos:line="792" pos:column="36">/* To allow for several */</comment>
              }<pos:position pos:line="793" pos:column="16"/></block></then></if>

            <comment type="block" pos:line="795" pos:column="13">/* Fall through */</comment>

            <comment type="block" pos:line="797" pos:column="13">/* A termination by ':' indicates the start of a nested group with
            the given options set. This is again handled at compile time, but
            we must allow for compiled space if any of the ims options are
            set. We also have to allow for resetting space at the end of
            the group, which is why 4 is added to the length and not just 2.
            If there are several changes of options within the same group, this
            will lead to an over-estimate on the length, but this shouldn't
            matter very much. We also have to allow for resetting options at
            the start of any alternations, which we do by setting
            branch_newextra to 2. Finally, we record whether the case-dependent
            flag ever changes within the regex. This is used by the "required
            character" code. */</comment>

            <case pos:line="810" pos:column="13">case <expr><literal type="char" pos:line="810" pos:column="18">':'<pos:position pos:line="810" pos:column="21"/></literal></expr>:<pos:position pos:line="810" pos:column="22"/></case>
            <if pos:line="811" pos:column="13">if <condition pos:line="811" pos:column="16">(<expr><operator pos:line="811" pos:column="17">(<pos:position pos:line="811" pos:column="18"/></operator><operator pos:line="811" pos:column="18">(<pos:position pos:line="811" pos:column="19"/></operator><name pos:line="811" pos:column="19">set<pos:position pos:line="811" pos:column="22"/></name><operator pos:line="811" pos:column="22">|<pos:position pos:line="811" pos:column="23"/></operator><name pos:line="811" pos:column="23">unset<pos:position pos:line="811" pos:column="28"/></name><operator pos:line="811" pos:column="28">)<pos:position pos:line="811" pos:column="29"/></operator> <operator pos:line="811" pos:column="30">&amp;<pos:position pos:line="811" pos:column="35"/></operator> <name pos:line="811" pos:column="32">PCRE_IMS<pos:position pos:line="811" pos:column="40"/></name><operator pos:line="811" pos:column="40">)<pos:position pos:line="811" pos:column="41"/></operator> <operator pos:line="811" pos:column="42">!=<pos:position pos:line="811" pos:column="44"/></operator> <literal type="number" pos:line="811" pos:column="45">0<pos:position pos:line="811" pos:column="46"/></literal></expr>)<pos:position pos:line="811" pos:column="47"/></condition><then pos:line="811" pos:column="47">
              <block pos:line="812" pos:column="15">{
              <expr_stmt><expr><name pos:line="813" pos:column="15">length<pos:position pos:line="813" pos:column="21"/></name> <operator pos:line="813" pos:column="22">+=<pos:position pos:line="813" pos:column="24"/></operator> <literal type="number" pos:line="813" pos:column="25">4<pos:position pos:line="813" pos:column="26"/></literal></expr>;<pos:position pos:line="813" pos:column="27"/></expr_stmt>
              <expr_stmt><expr><name pos:line="814" pos:column="15">branch_newextra<pos:position pos:line="814" pos:column="30"/></name> <operator pos:line="814" pos:column="31">=<pos:position pos:line="814" pos:column="32"/></operator> <literal type="number" pos:line="814" pos:column="33">2<pos:position pos:line="814" pos:column="34"/></literal></expr>;<pos:position pos:line="814" pos:column="35"/></expr_stmt>
              <if pos:line="815" pos:column="15">if <condition pos:line="815" pos:column="18">(<expr><operator pos:line="815" pos:column="19">(<pos:position pos:line="815" pos:column="20"/></operator><operator pos:line="815" pos:column="20">(<pos:position pos:line="815" pos:column="21"/></operator><name pos:line="815" pos:column="21">set<pos:position pos:line="815" pos:column="24"/></name><operator pos:line="815" pos:column="24">|<pos:position pos:line="815" pos:column="25"/></operator><name pos:line="815" pos:column="25">unset<pos:position pos:line="815" pos:column="30"/></name><operator pos:line="815" pos:column="30">)<pos:position pos:line="815" pos:column="31"/></operator> <operator pos:line="815" pos:column="32">&amp;<pos:position pos:line="815" pos:column="37"/></operator> <name pos:line="815" pos:column="34">PCRE_CASELESS<pos:position pos:line="815" pos:column="47"/></name><operator pos:line="815" pos:column="47">)<pos:position pos:line="815" pos:column="48"/></operator> <operator pos:line="815" pos:column="49">!=<pos:position pos:line="815" pos:column="51"/></operator> <literal type="number" pos:line="815" pos:column="52">0<pos:position pos:line="815" pos:column="53"/></literal></expr>)<pos:position pos:line="815" pos:column="54"/></condition><then pos:line="815" pos:column="54"> <block type="pseudo"><expr_stmt><expr><name pos:line="815" pos:column="55">options<pos:position pos:line="815" pos:column="62"/></name> <operator pos:line="815" pos:column="63">|=<pos:position pos:line="815" pos:column="65"/></operator> <name pos:line="815" pos:column="66">PCRE_ICHANGED<pos:position pos:line="815" pos:column="79"/></name></expr>;<pos:position pos:line="815" pos:column="80"/></expr_stmt></block></then></if>
              }<pos:position pos:line="816" pos:column="16"/></block></then></if>
            <goto pos:line="817" pos:column="13">goto <name pos:line="817" pos:column="18">END_OPTIONS<pos:position pos:line="817" pos:column="29"/></name>;<pos:position pos:line="817" pos:column="30"/></goto>

            <comment type="block" pos:line="819" pos:column="13">/* Unrecognized option character */</comment>

            <default pos:line="821" pos:column="13">default:<pos:position pos:line="821" pos:column="21"/></default>
            <expr_stmt><expr><operator pos:line="822" pos:column="13">*<pos:position pos:line="822" pos:column="14"/></operator><name pos:line="822" pos:column="14">errorptr<pos:position pos:line="822" pos:column="22"/></name> <operator pos:line="822" pos:column="23">=<pos:position pos:line="822" pos:column="24"/></operator> <name pos:line="822" pos:column="25">ERR12<pos:position pos:line="822" pos:column="30"/></name></expr>;<pos:position pos:line="822" pos:column="31"/></expr_stmt>
            <goto pos:line="823" pos:column="13">goto <name pos:line="823" pos:column="18">PCRE_ERROR_RETURN<pos:position pos:line="823" pos:column="35"/></name>;<pos:position pos:line="823" pos:column="36"/></goto>
            }<pos:position pos:line="824" pos:column="14"/></block></switch>
          }<pos:position pos:line="825" pos:column="12"/></block></for>

        <comment type="block" pos:line="827" pos:column="9">/* If we hit a closing bracket, that's it - this is a freestanding
        option-setting. We need to ensure that branch_extra is updated if
        necessary. The only values branch_newextra can have here are 0 or 2.
        If the value is 2, then branch_extra must either be 2 or 5, depending
        on whether this is a lookbehind group or not. */</comment>

        <label><name pos:line="833" pos:column="9">END_OPTIONS<pos:position pos:line="833" pos:column="20"/></name>:<pos:position pos:line="833" pos:column="21"/></label>
        <if pos:line="834" pos:column="9">if <condition pos:line="834" pos:column="12">(<expr><name pos:line="834" pos:column="13">c<pos:position pos:line="834" pos:column="14"/></name> <operator pos:line="834" pos:column="15">==<pos:position pos:line="834" pos:column="17"/></operator> <literal type="char" pos:line="834" pos:column="18">')'<pos:position pos:line="834" pos:column="21"/></literal></expr>)<pos:position pos:line="834" pos:column="22"/></condition><then pos:line="834" pos:column="22">
          <block pos:line="835" pos:column="11">{
          <if pos:line="836" pos:column="11">if <condition pos:line="836" pos:column="14">(<expr><name pos:line="836" pos:column="15">branch_newextra<pos:position pos:line="836" pos:column="30"/></name> <operator pos:line="836" pos:column="31">==<pos:position pos:line="836" pos:column="33"/></operator> <literal type="number" pos:line="836" pos:column="34">2<pos:position pos:line="836" pos:column="35"/></literal> <operator pos:line="836" pos:column="36">&amp;&amp;<pos:position pos:line="836" pos:column="46"/></operator>
              <operator pos:line="837" pos:column="15">(<pos:position pos:line="837" pos:column="16"/></operator><name pos:line="837" pos:column="16">branch_extra<pos:position pos:line="837" pos:column="28"/></name> <operator pos:line="837" pos:column="29">==<pos:position pos:line="837" pos:column="31"/></operator> <literal type="number" pos:line="837" pos:column="32">0<pos:position pos:line="837" pos:column="33"/></literal> <operator pos:line="837" pos:column="34">||<pos:position pos:line="837" pos:column="36"/></operator> <name pos:line="837" pos:column="37">branch_extra<pos:position pos:line="837" pos:column="49"/></name> <operator pos:line="837" pos:column="50">==<pos:position pos:line="837" pos:column="52"/></operator> <literal type="number" pos:line="837" pos:column="53">1<pos:position pos:line="837" pos:column="54"/></literal><operator pos:line="837" pos:column="54">+<pos:position pos:line="837" pos:column="55"/></operator><name pos:line="837" pos:column="55">LINK_SIZE<pos:position pos:line="837" pos:column="64"/></name><operator pos:line="837" pos:column="64">)<pos:position pos:line="837" pos:column="65"/></operator></expr>)<pos:position pos:line="837" pos:column="66"/></condition><then pos:line="837" pos:column="66">
            <block type="pseudo"><expr_stmt><expr><name pos:line="838" pos:column="13">branch_extra<pos:position pos:line="838" pos:column="25"/></name> <operator pos:line="838" pos:column="26">+=<pos:position pos:line="838" pos:column="28"/></operator> <name pos:line="838" pos:column="29">branch_newextra<pos:position pos:line="838" pos:column="44"/></name></expr>;<pos:position pos:line="838" pos:column="45"/></expr_stmt></block></then></if>
          <continue pos:line="839" pos:column="11">continue;<pos:position pos:line="839" pos:column="20"/></continue>
          }<pos:position pos:line="840" pos:column="12"/></block></then></if>

        <comment type="block" pos:line="842" pos:column="9">/* If options were terminated by ':' control comes here. Fall through
        to handle the group below. */</comment>
        }<pos:position pos:line="844" pos:column="10"/></block></switch>
      }<pos:position pos:line="845" pos:column="8"/></block></then>

    <comment type="block" pos:line="847" pos:column="5">/* Extracting brackets must be counted so we can process escapes in a
    Perlish way. If the number exceeds EXTRACT_BASIC_MAX we are going to
    need an additional 3 bytes of store per extracting bracket. However, if
    PCRE_NO_AUTO)CAPTURE is set, unadorned brackets become non-capturing, so we
    must leave the count alone (it will aways be zero). */</comment>

    <elseif pos:line="853" pos:column="5">else <if pos:line="853" pos:column="10">if <condition pos:line="853" pos:column="13">(<expr><operator pos:line="853" pos:column="14">(<pos:position pos:line="853" pos:column="15"/></operator><name pos:line="853" pos:column="15">options<pos:position pos:line="853" pos:column="22"/></name> <operator pos:line="853" pos:column="23">&amp;<pos:position pos:line="853" pos:column="28"/></operator> <name pos:line="853" pos:column="25">PCRE_NO_AUTO_CAPTURE<pos:position pos:line="853" pos:column="45"/></name><operator pos:line="853" pos:column="45">)<pos:position pos:line="853" pos:column="46"/></operator> <operator pos:line="853" pos:column="47">==<pos:position pos:line="853" pos:column="49"/></operator> <literal type="number" pos:line="853" pos:column="50">0<pos:position pos:line="853" pos:column="51"/></literal></expr>)<pos:position pos:line="853" pos:column="52"/></condition><then pos:line="853" pos:column="52">
      <block pos:line="854" pos:column="7">{
      <expr_stmt><expr><name pos:line="855" pos:column="7">bracount<pos:position pos:line="855" pos:column="15"/></name><operator pos:line="855" pos:column="15">++<pos:position pos:line="855" pos:column="17"/></operator></expr>;<pos:position pos:line="855" pos:column="18"/></expr_stmt>
      <if pos:line="856" pos:column="7">if <condition pos:line="856" pos:column="10">(<expr><name pos:line="856" pos:column="11">bracount<pos:position pos:line="856" pos:column="19"/></name> <operator pos:line="856" pos:column="20">&gt;<pos:position pos:line="856" pos:column="24"/></operator> <name pos:line="856" pos:column="22">EXTRACT_BASIC_MAX<pos:position pos:line="856" pos:column="39"/></name></expr>)<pos:position pos:line="856" pos:column="40"/></condition><then pos:line="856" pos:column="40"> <block type="pseudo"><expr_stmt><expr><name pos:line="856" pos:column="41">bracket_length<pos:position pos:line="856" pos:column="55"/></name> <operator pos:line="856" pos:column="56">+=<pos:position pos:line="856" pos:column="58"/></operator> <literal type="number" pos:line="856" pos:column="59">3<pos:position pos:line="856" pos:column="60"/></literal></expr>;<pos:position pos:line="856" pos:column="61"/></expr_stmt></block></then></if>
      }<pos:position pos:line="857" pos:column="8"/></block></then></if></elseif></if>

    <comment type="block" pos:line="859" pos:column="5">/* Save length for computing whole length at end if there's a repeat that
    requires duplication of the group. Also save the current value of
    branch_extra, and start the new group with the new value. If non-zero, this
    will either be 2 for a (?imsx: group, or 3 for a lookbehind assertion. */</comment>

    <if pos:line="864" pos:column="5">if <condition pos:line="864" pos:column="8">(<expr><name pos:line="864" pos:column="9">brastackptr<pos:position pos:line="864" pos:column="20"/></name> <operator pos:line="864" pos:column="21">&gt;=<pos:position pos:line="864" pos:column="26"/></operator> <sizeof pos:line="864" pos:column="24">sizeof<argument_list pos:line="864" pos:column="30">(<argument><expr><name pos:line="864" pos:column="31">brastack<pos:position pos:line="864" pos:column="39"/></name></expr></argument>)<pos:position pos:line="864" pos:column="40"/></argument_list></sizeof><operator pos:line="864" pos:column="40">/<pos:position pos:line="864" pos:column="41"/></operator><sizeof pos:line="864" pos:column="41">sizeof<argument_list pos:line="864" pos:column="47">(<argument><expr><name pos:line="864" pos:column="48">int<pos:position pos:line="864" pos:column="51"/></name></expr></argument>)<pos:position pos:line="864" pos:column="52"/></argument_list></sizeof></expr>)<pos:position pos:line="864" pos:column="53"/></condition><then pos:line="864" pos:column="53">
      <block pos:line="865" pos:column="7">{
      <expr_stmt><expr><operator pos:line="866" pos:column="7">*<pos:position pos:line="866" pos:column="8"/></operator><name pos:line="866" pos:column="8">errorptr<pos:position pos:line="866" pos:column="16"/></name> <operator pos:line="866" pos:column="17">=<pos:position pos:line="866" pos:column="18"/></operator> <name pos:line="866" pos:column="19">ERR19<pos:position pos:line="866" pos:column="24"/></name></expr>;<pos:position pos:line="866" pos:column="25"/></expr_stmt>
      <goto pos:line="867" pos:column="7">goto <name pos:line="867" pos:column="12">PCRE_ERROR_RETURN<pos:position pos:line="867" pos:column="29"/></name>;<pos:position pos:line="867" pos:column="30"/></goto>
      }<pos:position pos:line="868" pos:column="8"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="870" pos:column="5">bralenstack<pos:position pos:line="870" pos:column="16"/></name><index pos:line="870" pos:column="16">[<expr><name pos:line="870" pos:column="17">brastackptr<pos:position pos:line="870" pos:column="28"/></name></expr>]<pos:position pos:line="870" pos:column="29"/></index></name> <operator pos:line="870" pos:column="30">=<pos:position pos:line="870" pos:column="31"/></operator> <name pos:line="870" pos:column="32">branch_extra<pos:position pos:line="870" pos:column="44"/></name></expr>;<pos:position pos:line="870" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name pos:line="871" pos:column="5">branch_extra<pos:position pos:line="871" pos:column="17"/></name> <operator pos:line="871" pos:column="18">=<pos:position pos:line="871" pos:column="19"/></operator> <name pos:line="871" pos:column="20">branch_newextra<pos:position pos:line="871" pos:column="35"/></name></expr>;<pos:position pos:line="871" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="873" pos:column="5">brastack<pos:position pos:line="873" pos:column="13"/></name><index pos:line="873" pos:column="13">[<expr><name pos:line="873" pos:column="14">brastackptr<pos:position pos:line="873" pos:column="25"/></name><operator pos:line="873" pos:column="25">++<pos:position pos:line="873" pos:column="27"/></operator></expr>]<pos:position pos:line="873" pos:column="28"/></index></name> <operator pos:line="873" pos:column="29">=<pos:position pos:line="873" pos:column="30"/></operator> <name pos:line="873" pos:column="31">length<pos:position pos:line="873" pos:column="37"/></name></expr>;<pos:position pos:line="873" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="874" pos:column="5">length<pos:position pos:line="874" pos:column="11"/></name> <operator pos:line="874" pos:column="12">+=<pos:position pos:line="874" pos:column="14"/></operator> <name pos:line="874" pos:column="15">bracket_length<pos:position pos:line="874" pos:column="29"/></name></expr>;<pos:position pos:line="874" pos:column="30"/></expr_stmt>
    <continue pos:line="875" pos:column="5">continue;<pos:position pos:line="875" pos:column="14"/></continue>

    <comment type="block" pos:line="877" pos:column="5">/* Handle ket. Look for subsequent max/min; for certain sets of values we
    have to replicate this bracket up to that many times. If brastackptr is
    0 this is an unmatched bracket which will generate an error, but take care
    not to try to access brastack[-1] when computing the length and restoring
    the branch_extra value. */</comment>

    <case pos:line="883" pos:column="5">case <expr><literal type="char" pos:line="883" pos:column="10">')'<pos:position pos:line="883" pos:column="13"/></literal></expr>:<pos:position pos:line="883" pos:column="14"/></case>
    <expr_stmt><expr><name pos:line="884" pos:column="5">length<pos:position pos:line="884" pos:column="11"/></name> <operator pos:line="884" pos:column="12">+=<pos:position pos:line="884" pos:column="14"/></operator> <literal type="number" pos:line="884" pos:column="15">1<pos:position pos:line="884" pos:column="16"/></literal> <operator pos:line="884" pos:column="17">+<pos:position pos:line="884" pos:column="18"/></operator> <name pos:line="884" pos:column="19">LINK_SIZE<pos:position pos:line="884" pos:column="28"/></name></expr>;<pos:position pos:line="884" pos:column="29"/></expr_stmt>
    <if pos:line="885" pos:column="5">if <condition pos:line="885" pos:column="8">(<expr><name pos:line="885" pos:column="9">brastackptr<pos:position pos:line="885" pos:column="20"/></name> <operator pos:line="885" pos:column="21">&gt;<pos:position pos:line="885" pos:column="25"/></operator> <literal type="number" pos:line="885" pos:column="23">0<pos:position pos:line="885" pos:column="24"/></literal></expr>)<pos:position pos:line="885" pos:column="25"/></condition><then pos:line="885" pos:column="25">
      <block pos:line="886" pos:column="7">{
      <expr_stmt><expr><name pos:line="887" pos:column="7">duplength<pos:position pos:line="887" pos:column="16"/></name> <operator pos:line="887" pos:column="17">=<pos:position pos:line="887" pos:column="18"/></operator> <name pos:line="887" pos:column="19">length<pos:position pos:line="887" pos:column="25"/></name> <operator pos:line="887" pos:column="26">-<pos:position pos:line="887" pos:column="27"/></operator> <name><name pos:line="887" pos:column="28">brastack<pos:position pos:line="887" pos:column="36"/></name><index pos:line="887" pos:column="36">[<expr><operator pos:line="887" pos:column="37">--<pos:position pos:line="887" pos:column="39"/></operator><name pos:line="887" pos:column="39">brastackptr<pos:position pos:line="887" pos:column="50"/></name></expr>]<pos:position pos:line="887" pos:column="51"/></index></name></expr>;<pos:position pos:line="887" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name pos:line="888" pos:column="7">branch_extra<pos:position pos:line="888" pos:column="19"/></name> <operator pos:line="888" pos:column="20">=<pos:position pos:line="888" pos:column="21"/></operator> <name><name pos:line="888" pos:column="22">bralenstack<pos:position pos:line="888" pos:column="33"/></name><index pos:line="888" pos:column="33">[<expr><name pos:line="888" pos:column="34">brastackptr<pos:position pos:line="888" pos:column="45"/></name></expr>]<pos:position pos:line="888" pos:column="46"/></index></name></expr>;<pos:position pos:line="888" pos:column="47"/></expr_stmt>
      }<pos:position pos:line="889" pos:column="8"/></block></then>
    <else pos:line="890" pos:column="5">else <block type="pseudo"><expr_stmt><expr><name pos:line="890" pos:column="10">duplength<pos:position pos:line="890" pos:column="19"/></name> <operator pos:line="890" pos:column="20">=<pos:position pos:line="890" pos:column="21"/></operator> <literal type="number" pos:line="890" pos:column="22">0<pos:position pos:line="890" pos:column="23"/></literal></expr>;<pos:position pos:line="890" pos:column="24"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="892" pos:column="5">/* The following code is also used when a recursion such as (?3) is
    followed by a quantifier, because in that case, it has to be wrapped inside
    brackets so that the quantifier works. The value of duplength must be
    set before arrival. */</comment>

    <label><name pos:line="897" pos:column="5">HANDLE_QUANTIFIED_BRACKETS<pos:position pos:line="897" pos:column="31"/></name>:<pos:position pos:line="897" pos:column="32"/></label>

    <comment type="block" pos:line="899" pos:column="5">/* Leave ptr at the final char; for read_repeat_counts this happens
    automatically; for the others we need an increment. */</comment>

    <if pos:line="902" pos:column="5">if <condition pos:line="902" pos:column="8">(<expr><operator pos:line="902" pos:column="9">(<pos:position pos:line="902" pos:column="10"/></operator><name pos:line="902" pos:column="10">c<pos:position pos:line="902" pos:column="11"/></name> <operator pos:line="902" pos:column="12">=<pos:position pos:line="902" pos:column="13"/></operator> <name><name pos:line="902" pos:column="14">ptr<pos:position pos:line="902" pos:column="17"/></name><index pos:line="902" pos:column="17">[<expr><literal type="number" pos:line="902" pos:column="18">1<pos:position pos:line="902" pos:column="19"/></literal></expr>]<pos:position pos:line="902" pos:column="20"/></index></name><operator pos:line="902" pos:column="20">)<pos:position pos:line="902" pos:column="21"/></operator> <operator pos:line="902" pos:column="22">==<pos:position pos:line="902" pos:column="24"/></operator> <literal type="char" pos:line="902" pos:column="25">'{'<pos:position pos:line="902" pos:column="28"/></literal> <operator pos:line="902" pos:column="29">&amp;&amp;<pos:position pos:line="902" pos:column="39"/></operator> <call><name pos:line="902" pos:column="32">is_counted_repeat<pos:position pos:line="902" pos:column="49"/></name><argument_list pos:line="902" pos:column="49">(<argument><expr><name pos:line="902" pos:column="50">ptr<pos:position pos:line="902" pos:column="53"/></name><operator pos:line="902" pos:column="53">+<pos:position pos:line="902" pos:column="54"/></operator><literal type="number" pos:line="902" pos:column="54">2<pos:position pos:line="902" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="902" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="902" pos:column="57"/></condition><then pos:line="902" pos:column="57">
      <block pos:line="903" pos:column="7">{
      <expr_stmt><expr><name pos:line="904" pos:column="7">ptr<pos:position pos:line="904" pos:column="10"/></name> <operator pos:line="904" pos:column="11">=<pos:position pos:line="904" pos:column="12"/></operator> <call><name pos:line="904" pos:column="13">read_repeat_counts<pos:position pos:line="904" pos:column="31"/></name><argument_list pos:line="904" pos:column="31">(<argument><expr><name pos:line="904" pos:column="32">ptr<pos:position pos:line="904" pos:column="35"/></name><operator pos:line="904" pos:column="35">+<pos:position pos:line="904" pos:column="36"/></operator><literal type="number" pos:line="904" pos:column="36">2<pos:position pos:line="904" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="904" pos:column="39">&amp;<pos:position pos:line="904" pos:column="44"/></operator><name pos:line="904" pos:column="40">min<pos:position pos:line="904" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="904" pos:column="45">&amp;<pos:position pos:line="904" pos:column="50"/></operator><name pos:line="904" pos:column="46">max<pos:position pos:line="904" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="904" pos:column="51">errorptr<pos:position pos:line="904" pos:column="59"/></name></expr></argument>)<pos:position pos:line="904" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="904" pos:column="61"/></expr_stmt>
      <if pos:line="905" pos:column="7">if <condition pos:line="905" pos:column="10">(<expr><operator pos:line="905" pos:column="11">*<pos:position pos:line="905" pos:column="12"/></operator><name pos:line="905" pos:column="12">errorptr<pos:position pos:line="905" pos:column="20"/></name> <operator pos:line="905" pos:column="21">!=<pos:position pos:line="905" pos:column="23"/></operator> <name pos:line="905" pos:column="24">NULL<pos:position pos:line="905" pos:column="28"/></name></expr>)<pos:position pos:line="905" pos:column="29"/></condition><then pos:line="905" pos:column="29"> <block type="pseudo"><goto pos:line="905" pos:column="30">goto <name pos:line="905" pos:column="35">PCRE_ERROR_RETURN<pos:position pos:line="905" pos:column="52"/></name>;<pos:position pos:line="905" pos:column="53"/></goto></block></then></if>
      }<pos:position pos:line="906" pos:column="8"/></block></then>
    <elseif pos:line="907" pos:column="5">else <if pos:line="907" pos:column="10">if <condition pos:line="907" pos:column="13">(<expr><name pos:line="907" pos:column="14">c<pos:position pos:line="907" pos:column="15"/></name> <operator pos:line="907" pos:column="16">==<pos:position pos:line="907" pos:column="18"/></operator> <literal type="char" pos:line="907" pos:column="19">'*'<pos:position pos:line="907" pos:column="22"/></literal></expr>)<pos:position pos:line="907" pos:column="23"/></condition><then pos:line="907" pos:column="23"> <block pos:line="907" pos:column="24">{ <expr_stmt><expr><name pos:line="907" pos:column="26">min<pos:position pos:line="907" pos:column="29"/></name> <operator pos:line="907" pos:column="30">=<pos:position pos:line="907" pos:column="31"/></operator> <literal type="number" pos:line="907" pos:column="32">0<pos:position pos:line="907" pos:column="33"/></literal></expr>;<pos:position pos:line="907" pos:column="34"/></expr_stmt> <expr_stmt><expr><name pos:line="907" pos:column="35">max<pos:position pos:line="907" pos:column="38"/></name> <operator pos:line="907" pos:column="39">=<pos:position pos:line="907" pos:column="40"/></operator> <operator pos:line="907" pos:column="41">-<pos:position pos:line="907" pos:column="42"/></operator><literal type="number" pos:line="907" pos:column="42">1<pos:position pos:line="907" pos:column="43"/></literal></expr>;<pos:position pos:line="907" pos:column="44"/></expr_stmt> <expr_stmt><expr><name pos:line="907" pos:column="45">ptr<pos:position pos:line="907" pos:column="48"/></name><operator pos:line="907" pos:column="48">++<pos:position pos:line="907" pos:column="50"/></operator></expr>;<pos:position pos:line="907" pos:column="51"/></expr_stmt> }<pos:position pos:line="907" pos:column="53"/></block></then></if></elseif>
    <elseif pos:line="908" pos:column="5">else <if pos:line="908" pos:column="10">if <condition pos:line="908" pos:column="13">(<expr><name pos:line="908" pos:column="14">c<pos:position pos:line="908" pos:column="15"/></name> <operator pos:line="908" pos:column="16">==<pos:position pos:line="908" pos:column="18"/></operator> <literal type="char" pos:line="908" pos:column="19">'+'<pos:position pos:line="908" pos:column="22"/></literal></expr>)<pos:position pos:line="908" pos:column="23"/></condition><then pos:line="908" pos:column="23"> <block pos:line="908" pos:column="24">{ <expr_stmt><expr><name pos:line="908" pos:column="26">min<pos:position pos:line="908" pos:column="29"/></name> <operator pos:line="908" pos:column="30">=<pos:position pos:line="908" pos:column="31"/></operator> <literal type="number" pos:line="908" pos:column="32">1<pos:position pos:line="908" pos:column="33"/></literal></expr>;<pos:position pos:line="908" pos:column="34"/></expr_stmt> <expr_stmt><expr><name pos:line="908" pos:column="35">max<pos:position pos:line="908" pos:column="38"/></name> <operator pos:line="908" pos:column="39">=<pos:position pos:line="908" pos:column="40"/></operator> <operator pos:line="908" pos:column="41">-<pos:position pos:line="908" pos:column="42"/></operator><literal type="number" pos:line="908" pos:column="42">1<pos:position pos:line="908" pos:column="43"/></literal></expr>;<pos:position pos:line="908" pos:column="44"/></expr_stmt> <expr_stmt><expr><name pos:line="908" pos:column="45">ptr<pos:position pos:line="908" pos:column="48"/></name><operator pos:line="908" pos:column="48">++<pos:position pos:line="908" pos:column="50"/></operator></expr>;<pos:position pos:line="908" pos:column="51"/></expr_stmt> }<pos:position pos:line="908" pos:column="53"/></block></then></if></elseif>
    <elseif pos:line="909" pos:column="5">else <if pos:line="909" pos:column="10">if <condition pos:line="909" pos:column="13">(<expr><name pos:line="909" pos:column="14">c<pos:position pos:line="909" pos:column="15"/></name> <operator pos:line="909" pos:column="16">==<pos:position pos:line="909" pos:column="18"/></operator> <literal type="char" pos:line="909" pos:column="19">'?'<pos:position pos:line="909" pos:column="22"/></literal></expr>)<pos:position pos:line="909" pos:column="23"/></condition><then pos:line="909" pos:column="23"> <block pos:line="909" pos:column="24">{ <expr_stmt><expr><name pos:line="909" pos:column="26">min<pos:position pos:line="909" pos:column="29"/></name> <operator pos:line="909" pos:column="30">=<pos:position pos:line="909" pos:column="31"/></operator> <literal type="number" pos:line="909" pos:column="32">0<pos:position pos:line="909" pos:column="33"/></literal></expr>;<pos:position pos:line="909" pos:column="34"/></expr_stmt> <expr_stmt><expr><name pos:line="909" pos:column="35">max<pos:position pos:line="909" pos:column="38"/></name> <operator pos:line="909" pos:column="39">=<pos:position pos:line="909" pos:column="40"/></operator> <literal type="number" pos:line="909" pos:column="41">1<pos:position pos:line="909" pos:column="42"/></literal></expr>;<pos:position pos:line="909" pos:column="43"/></expr_stmt>  <expr_stmt><expr><name pos:line="909" pos:column="45">ptr<pos:position pos:line="909" pos:column="48"/></name><operator pos:line="909" pos:column="48">++<pos:position pos:line="909" pos:column="50"/></operator></expr>;<pos:position pos:line="909" pos:column="51"/></expr_stmt> }<pos:position pos:line="909" pos:column="53"/></block></then></if></elseif>
    <else pos:line="910" pos:column="5">else <block pos:line="910" pos:column="10">{ <expr_stmt><expr><name pos:line="910" pos:column="12">min<pos:position pos:line="910" pos:column="15"/></name> <operator pos:line="910" pos:column="16">=<pos:position pos:line="910" pos:column="17"/></operator> <literal type="number" pos:line="910" pos:column="18">1<pos:position pos:line="910" pos:column="19"/></literal></expr>;<pos:position pos:line="910" pos:column="20"/></expr_stmt> <expr_stmt><expr><name pos:line="910" pos:column="21">max<pos:position pos:line="910" pos:column="24"/></name> <operator pos:line="910" pos:column="25">=<pos:position pos:line="910" pos:column="26"/></operator> <literal type="number" pos:line="910" pos:column="27">1<pos:position pos:line="910" pos:column="28"/></literal></expr>;<pos:position pos:line="910" pos:column="29"/></expr_stmt> }<pos:position pos:line="910" pos:column="31"/></block></else></if>

    <comment type="block" pos:line="912" pos:column="5">/* If the minimum is zero, we have to allow for an OP_BRAZERO before the
    group, and if the maximum is greater than zero, we have to replicate
    maxval-1 times; each replication acquires an OP_BRAZERO plus a nesting
    bracket set. */</comment>

    <if pos:line="917" pos:column="5">if <condition pos:line="917" pos:column="8">(<expr><name pos:line="917" pos:column="9">min<pos:position pos:line="917" pos:column="12"/></name> <operator pos:line="917" pos:column="13">==<pos:position pos:line="917" pos:column="15"/></operator> <literal type="number" pos:line="917" pos:column="16">0<pos:position pos:line="917" pos:column="17"/></literal></expr>)<pos:position pos:line="917" pos:column="18"/></condition><then pos:line="917" pos:column="18">
      <block pos:line="918" pos:column="7">{
      <expr_stmt><expr><name pos:line="919" pos:column="7">length<pos:position pos:line="919" pos:column="13"/></name><operator pos:line="919" pos:column="13">++<pos:position pos:line="919" pos:column="15"/></operator></expr>;<pos:position pos:line="919" pos:column="16"/></expr_stmt>
      <if pos:line="920" pos:column="7">if <condition pos:line="920" pos:column="10">(<expr><name pos:line="920" pos:column="11">max<pos:position pos:line="920" pos:column="14"/></name> <operator pos:line="920" pos:column="15">&gt;<pos:position pos:line="920" pos:column="19"/></operator> <literal type="number" pos:line="920" pos:column="17">0<pos:position pos:line="920" pos:column="18"/></literal></expr>)<pos:position pos:line="920" pos:column="19"/></condition><then pos:line="920" pos:column="19"> <block type="pseudo"><expr_stmt><expr><name pos:line="920" pos:column="20">length<pos:position pos:line="920" pos:column="26"/></name> <operator pos:line="920" pos:column="27">+=<pos:position pos:line="920" pos:column="29"/></operator> <operator pos:line="920" pos:column="30">(<pos:position pos:line="920" pos:column="31"/></operator><name pos:line="920" pos:column="31">max<pos:position pos:line="920" pos:column="34"/></name> <operator pos:line="920" pos:column="35">-<pos:position pos:line="920" pos:column="36"/></operator> <literal type="number" pos:line="920" pos:column="37">1<pos:position pos:line="920" pos:column="38"/></literal><operator pos:line="920" pos:column="38">)<pos:position pos:line="920" pos:column="39"/></operator> <operator pos:line="920" pos:column="40">*<pos:position pos:line="920" pos:column="41"/></operator> <operator pos:line="920" pos:column="42">(<pos:position pos:line="920" pos:column="43"/></operator><name pos:line="920" pos:column="43">duplength<pos:position pos:line="920" pos:column="52"/></name> <operator pos:line="920" pos:column="53">+<pos:position pos:line="920" pos:column="54"/></operator> <literal type="number" pos:line="920" pos:column="55">3<pos:position pos:line="920" pos:column="56"/></literal> <operator pos:line="920" pos:column="57">+<pos:position pos:line="920" pos:column="58"/></operator> <literal type="number" pos:line="920" pos:column="59">2<pos:position pos:line="920" pos:column="60"/></literal><operator pos:line="920" pos:column="60">*<pos:position pos:line="920" pos:column="61"/></operator><name pos:line="920" pos:column="61">LINK_SIZE<pos:position pos:line="920" pos:column="70"/></name><operator pos:line="920" pos:column="70">)<pos:position pos:line="920" pos:column="71"/></operator></expr>;<pos:position pos:line="920" pos:column="72"/></expr_stmt></block></then></if>
      }<pos:position pos:line="921" pos:column="8"/></block></then>

    <comment type="block" pos:line="923" pos:column="5">/* When the minimum is greater than zero, we have to replicate up to
    minval-1 times, with no additions required in the copies. Then, if there
    is a limited maximum we have to replicate up to maxval-1 times allowing
    for a BRAZERO item before each optional copy and nesting brackets for all
    but one of the optional copies. */</comment>

    <else pos:line="929" pos:column="5">else
      <block pos:line="930" pos:column="7">{
      <expr_stmt><expr><name pos:line="931" pos:column="7">length<pos:position pos:line="931" pos:column="13"/></name> <operator pos:line="931" pos:column="14">+=<pos:position pos:line="931" pos:column="16"/></operator> <operator pos:line="931" pos:column="17">(<pos:position pos:line="931" pos:column="18"/></operator><name pos:line="931" pos:column="18">min<pos:position pos:line="931" pos:column="21"/></name> <operator pos:line="931" pos:column="22">-<pos:position pos:line="931" pos:column="23"/></operator> <literal type="number" pos:line="931" pos:column="24">1<pos:position pos:line="931" pos:column="25"/></literal><operator pos:line="931" pos:column="25">)<pos:position pos:line="931" pos:column="26"/></operator> <operator pos:line="931" pos:column="27">*<pos:position pos:line="931" pos:column="28"/></operator> <name pos:line="931" pos:column="29">duplength<pos:position pos:line="931" pos:column="38"/></name></expr>;<pos:position pos:line="931" pos:column="39"/></expr_stmt>
      <if pos:line="932" pos:column="7">if <condition pos:line="932" pos:column="10">(<expr><name pos:line="932" pos:column="11">max<pos:position pos:line="932" pos:column="14"/></name> <operator pos:line="932" pos:column="15">&gt;<pos:position pos:line="932" pos:column="19"/></operator> <name pos:line="932" pos:column="17">min<pos:position pos:line="932" pos:column="20"/></name></expr>)<pos:position pos:line="932" pos:column="21"/></condition><then pos:line="932" pos:column="21">   <comment type="block" pos:line="932" pos:column="24">/* Need this test as max=-1 means no limit */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="933" pos:column="9">length<pos:position pos:line="933" pos:column="15"/></name> <operator pos:line="933" pos:column="16">+=<pos:position pos:line="933" pos:column="18"/></operator> <operator pos:line="933" pos:column="19">(<pos:position pos:line="933" pos:column="20"/></operator><name pos:line="933" pos:column="20">max<pos:position pos:line="933" pos:column="23"/></name> <operator pos:line="933" pos:column="24">-<pos:position pos:line="933" pos:column="25"/></operator> <name pos:line="933" pos:column="26">min<pos:position pos:line="933" pos:column="29"/></name><operator pos:line="933" pos:column="29">)<pos:position pos:line="933" pos:column="30"/></operator> <operator pos:line="933" pos:column="31">*<pos:position pos:line="933" pos:column="32"/></operator> <operator pos:line="933" pos:column="33">(<pos:position pos:line="933" pos:column="34"/></operator><name pos:line="933" pos:column="34">duplength<pos:position pos:line="933" pos:column="43"/></name> <operator pos:line="933" pos:column="44">+<pos:position pos:line="933" pos:column="45"/></operator> <literal type="number" pos:line="933" pos:column="46">3<pos:position pos:line="933" pos:column="47"/></literal> <operator pos:line="933" pos:column="48">+<pos:position pos:line="933" pos:column="49"/></operator> <literal type="number" pos:line="933" pos:column="50">2<pos:position pos:line="933" pos:column="51"/></literal><operator pos:line="933" pos:column="51">*<pos:position pos:line="933" pos:column="52"/></operator><name pos:line="933" pos:column="52">LINK_SIZE<pos:position pos:line="933" pos:column="61"/></name><operator pos:line="933" pos:column="61">)<pos:position pos:line="933" pos:column="62"/></operator>
          <operator pos:line="934" pos:column="11">-<pos:position pos:line="934" pos:column="12"/></operator> <operator pos:line="934" pos:column="13">(<pos:position pos:line="934" pos:column="14"/></operator><literal type="number" pos:line="934" pos:column="14">2<pos:position pos:line="934" pos:column="15"/></literal> <operator pos:line="934" pos:column="16">+<pos:position pos:line="934" pos:column="17"/></operator> <literal type="number" pos:line="934" pos:column="18">2<pos:position pos:line="934" pos:column="19"/></literal><operator pos:line="934" pos:column="19">*<pos:position pos:line="934" pos:column="20"/></operator><name pos:line="934" pos:column="20">LINK_SIZE<pos:position pos:line="934" pos:column="29"/></name><operator pos:line="934" pos:column="29">)<pos:position pos:line="934" pos:column="30"/></operator></expr>;<pos:position pos:line="934" pos:column="31"/></expr_stmt></block></then></if>
      }<pos:position pos:line="935" pos:column="8"/></block></else></if>

    <comment type="block" pos:line="937" pos:column="5">/* Allow space for once brackets for "possessive quantifier" */</comment>

    <if pos:line="939" pos:column="5">if <condition pos:line="939" pos:column="8">(<expr><name><name pos:line="939" pos:column="9">ptr<pos:position pos:line="939" pos:column="12"/></name><index pos:line="939" pos:column="12">[<expr><literal type="number" pos:line="939" pos:column="13">1<pos:position pos:line="939" pos:column="14"/></literal></expr>]<pos:position pos:line="939" pos:column="15"/></index></name> <operator pos:line="939" pos:column="16">==<pos:position pos:line="939" pos:column="18"/></operator> <literal type="char" pos:line="939" pos:column="19">'+'<pos:position pos:line="939" pos:column="22"/></literal></expr>)<pos:position pos:line="939" pos:column="23"/></condition><then pos:line="939" pos:column="23">
      <block pos:line="940" pos:column="7">{
      <expr_stmt><expr><name pos:line="941" pos:column="7">ptr<pos:position pos:line="941" pos:column="10"/></name><operator pos:line="941" pos:column="10">++<pos:position pos:line="941" pos:column="12"/></operator></expr>;<pos:position pos:line="941" pos:column="13"/></expr_stmt>
      <expr_stmt><expr><name pos:line="942" pos:column="7">length<pos:position pos:line="942" pos:column="13"/></name> <operator pos:line="942" pos:column="14">+=<pos:position pos:line="942" pos:column="16"/></operator> <literal type="number" pos:line="942" pos:column="17">2<pos:position pos:line="942" pos:column="18"/></literal> <operator pos:line="942" pos:column="19">+<pos:position pos:line="942" pos:column="20"/></operator> <literal type="number" pos:line="942" pos:column="21">2<pos:position pos:line="942" pos:column="22"/></literal><operator pos:line="942" pos:column="22">*<pos:position pos:line="942" pos:column="23"/></operator><name pos:line="942" pos:column="23">LINK_SIZE<pos:position pos:line="942" pos:column="32"/></name></expr>;<pos:position pos:line="942" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="943" pos:column="8"/></block></then></if>
    <continue pos:line="944" pos:column="5">continue;<pos:position pos:line="944" pos:column="14"/></continue>

    <comment type="block" pos:line="946" pos:column="5">/* Non-special character. It won't be space or # in extended mode, so it is
    always a genuine character. If we are in a \Q...\E sequence, check for the
    end; if not, we have a literal. */</comment>

    <default pos:line="950" pos:column="5">default:<pos:position pos:line="950" pos:column="13"/></default>
    <label><name pos:line="951" pos:column="5">NORMAL_CHAR<pos:position pos:line="951" pos:column="16"/></name>:<pos:position pos:line="951" pos:column="17"/></label>

    <if pos:line="953" pos:column="5">if <condition pos:line="953" pos:column="8">(<expr><name pos:line="953" pos:column="9">inescq<pos:position pos:line="953" pos:column="15"/></name> <operator pos:line="953" pos:column="16">&amp;&amp;<pos:position pos:line="953" pos:column="26"/></operator> <name pos:line="953" pos:column="19">c<pos:position pos:line="953" pos:column="20"/></name> <operator pos:line="953" pos:column="21">==<pos:position pos:line="953" pos:column="23"/></operator> <literal type="char" pos:line="953" pos:column="24">'\\'<pos:position pos:line="953" pos:column="28"/></literal> <operator pos:line="953" pos:column="29">&amp;&amp;<pos:position pos:line="953" pos:column="39"/></operator> <name><name pos:line="953" pos:column="32">ptr<pos:position pos:line="953" pos:column="35"/></name><index pos:line="953" pos:column="35">[<expr><literal type="number" pos:line="953" pos:column="36">1<pos:position pos:line="953" pos:column="37"/></literal></expr>]<pos:position pos:line="953" pos:column="38"/></index></name> <operator pos:line="953" pos:column="39">==<pos:position pos:line="953" pos:column="41"/></operator> <literal type="char" pos:line="953" pos:column="42">'E'<pos:position pos:line="953" pos:column="45"/></literal></expr>)<pos:position pos:line="953" pos:column="46"/></condition><then pos:line="953" pos:column="46">
      <block pos:line="954" pos:column="7">{
      <expr_stmt><expr><name pos:line="955" pos:column="7">inescq<pos:position pos:line="955" pos:column="13"/></name> <operator pos:line="955" pos:column="14">=<pos:position pos:line="955" pos:column="15"/></operator> <name pos:line="955" pos:column="16">FALSE<pos:position pos:line="955" pos:column="21"/></name></expr>;<pos:position pos:line="955" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="956" pos:column="7">ptr<pos:position pos:line="956" pos:column="10"/></name><operator pos:line="956" pos:column="10">++<pos:position pos:line="956" pos:column="12"/></operator></expr>;<pos:position pos:line="956" pos:column="13"/></expr_stmt>
      <continue pos:line="957" pos:column="7">continue;<pos:position pos:line="957" pos:column="16"/></continue>
      }<pos:position pos:line="958" pos:column="8"/></block></then></if>

    <expr_stmt><expr><name pos:line="960" pos:column="5">length<pos:position pos:line="960" pos:column="11"/></name> <operator pos:line="960" pos:column="12">+=<pos:position pos:line="960" pos:column="14"/></operator> <literal type="number" pos:line="960" pos:column="15">2<pos:position pos:line="960" pos:column="16"/></literal></expr>;<pos:position pos:line="960" pos:column="17"/></expr_stmt>          <comment type="block" pos:line="960" pos:column="27">/* For a one-byte character */</comment>
    <expr_stmt><expr><name pos:line="961" pos:column="5">lastitemlength<pos:position pos:line="961" pos:column="19"/></name> <operator pos:line="961" pos:column="20">=<pos:position pos:line="961" pos:column="21"/></operator> <literal type="number" pos:line="961" pos:column="22">1<pos:position pos:line="961" pos:column="23"/></literal></expr>;<pos:position pos:line="961" pos:column="24"/></expr_stmt>   <comment type="block" pos:line="961" pos:column="27">/* Default length of last item for repeats */</comment>

    <comment type="block" pos:line="963" pos:column="5">/* In UTF-8 mode, check for additional bytes. */</comment>

<cpp:ifdef pos:line="965" pos:column="1">#<cpp:directive pos:line="965" pos:column="2">ifdef<pos:position pos:line="965" pos:column="7"/></cpp:directive> <name pos:line="965" pos:column="8">SUPPORT_UTF8<pos:position pos:line="965" pos:column="20"/></name></cpp:ifdef>
    <if pos:line="966" pos:column="5">if <condition pos:line="966" pos:column="8">(<expr><name pos:line="966" pos:column="9">utf8<pos:position pos:line="966" pos:column="13"/></name> <operator pos:line="966" pos:column="14">&amp;&amp;<pos:position pos:line="966" pos:column="24"/></operator> <operator pos:line="966" pos:column="17">(<pos:position pos:line="966" pos:column="18"/></operator><name pos:line="966" pos:column="18">c<pos:position pos:line="966" pos:column="19"/></name> <operator pos:line="966" pos:column="20">&amp;<pos:position pos:line="966" pos:column="25"/></operator> <literal type="number" pos:line="966" pos:column="22">0xc0<pos:position pos:line="966" pos:column="26"/></literal><operator pos:line="966" pos:column="26">)<pos:position pos:line="966" pos:column="27"/></operator> <operator pos:line="966" pos:column="28">==<pos:position pos:line="966" pos:column="30"/></operator> <literal type="number" pos:line="966" pos:column="31">0xc0<pos:position pos:line="966" pos:column="35"/></literal></expr>)<pos:position pos:line="966" pos:column="36"/></condition><then pos:line="966" pos:column="36">
      <block pos:line="967" pos:column="7">{
      <while pos:line="968" pos:column="7">while <condition pos:line="968" pos:column="13">(<expr><operator pos:line="968" pos:column="14">(<pos:position pos:line="968" pos:column="15"/></operator><name><name pos:line="968" pos:column="15">ptr<pos:position pos:line="968" pos:column="18"/></name><index pos:line="968" pos:column="18">[<expr><literal type="number" pos:line="968" pos:column="19">1<pos:position pos:line="968" pos:column="20"/></literal></expr>]<pos:position pos:line="968" pos:column="21"/></index></name> <operator pos:line="968" pos:column="22">&amp;<pos:position pos:line="968" pos:column="27"/></operator> <literal type="number" pos:line="968" pos:column="24">0xc0<pos:position pos:line="968" pos:column="28"/></literal><operator pos:line="968" pos:column="28">)<pos:position pos:line="968" pos:column="29"/></operator> <operator pos:line="968" pos:column="30">==<pos:position pos:line="968" pos:column="32"/></operator> <literal type="number" pos:line="968" pos:column="33">0x80<pos:position pos:line="968" pos:column="37"/></literal></expr>)<pos:position pos:line="968" pos:column="38"/></condition>         <comment type="block" pos:line="968" pos:column="47">/* Can't flow over the end */</comment>
        <block pos:line="969" pos:column="9">{                                     <comment type="block" pos:line="969" pos:column="47">/* because the end is marked */</comment>
        <expr_stmt><expr><name pos:line="970" pos:column="9">lastitemlength<pos:position pos:line="970" pos:column="23"/></name><operator pos:line="970" pos:column="23">++<pos:position pos:line="970" pos:column="25"/></operator></expr>;<pos:position pos:line="970" pos:column="26"/></expr_stmt>                     <comment type="block" pos:line="970" pos:column="47">/* by a zero byte. */</comment>
        <expr_stmt><expr><name pos:line="971" pos:column="9">length<pos:position pos:line="971" pos:column="15"/></name><operator pos:line="971" pos:column="15">++<pos:position pos:line="971" pos:column="17"/></operator></expr>;<pos:position pos:line="971" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="972" pos:column="9">ptr<pos:position pos:line="972" pos:column="12"/></name><operator pos:line="972" pos:column="12">++<pos:position pos:line="972" pos:column="14"/></operator></expr>;<pos:position pos:line="972" pos:column="15"/></expr_stmt>
        }<pos:position pos:line="973" pos:column="10"/></block></while>
      }<pos:position pos:line="974" pos:column="8"/></block></then></if>
<cpp:endif pos:line="975" pos:column="1">#<cpp:directive pos:line="975" pos:column="2">endif<pos:position pos:line="975" pos:column="7"/></cpp:directive></cpp:endif>

    <continue pos:line="977" pos:column="5">continue;<pos:position pos:line="977" pos:column="14"/></continue>
    }<pos:position pos:line="978" pos:column="6"/></block></switch>
  }<pos:position pos:line="979" pos:column="4"/></block></while>

<expr_stmt><expr><name pos:line="981" pos:column="1">length<pos:position pos:line="981" pos:column="7"/></name> <operator pos:line="981" pos:column="8">+=<pos:position pos:line="981" pos:column="10"/></operator> <literal type="number" pos:line="981" pos:column="11">2<pos:position pos:line="981" pos:column="12"/></literal> <operator pos:line="981" pos:column="13">+<pos:position pos:line="981" pos:column="14"/></operator> <name pos:line="981" pos:column="15">LINK_SIZE<pos:position pos:line="981" pos:column="24"/></name></expr>;<pos:position pos:line="981" pos:column="25"/></expr_stmt>    <comment type="block" pos:line="981" pos:column="29">/* For final KET and END */</comment>

<if pos:line="983" pos:column="1">if <condition pos:line="983" pos:column="4">(<expr><operator pos:line="983" pos:column="5">(<pos:position pos:line="983" pos:column="6"/></operator><name pos:line="983" pos:column="6">options<pos:position pos:line="983" pos:column="13"/></name> <operator pos:line="983" pos:column="14">&amp;<pos:position pos:line="983" pos:column="19"/></operator> <name pos:line="983" pos:column="16">PCRE_AUTO_CALLOUT<pos:position pos:line="983" pos:column="33"/></name><operator pos:line="983" pos:column="33">)<pos:position pos:line="983" pos:column="34"/></operator> <operator pos:line="983" pos:column="35">!=<pos:position pos:line="983" pos:column="37"/></operator> <literal type="number" pos:line="983" pos:column="38">0<pos:position pos:line="983" pos:column="39"/></literal></expr>)<pos:position pos:line="983" pos:column="40"/></condition><then pos:line="983" pos:column="40">
  <block type="pseudo"><expr_stmt><expr><name pos:line="984" pos:column="3">length<pos:position pos:line="984" pos:column="9"/></name> <operator pos:line="984" pos:column="10">+=<pos:position pos:line="984" pos:column="12"/></operator> <literal type="number" pos:line="984" pos:column="13">2<pos:position pos:line="984" pos:column="14"/></literal> <operator pos:line="984" pos:column="15">+<pos:position pos:line="984" pos:column="16"/></operator> <literal type="number" pos:line="984" pos:column="17">2<pos:position pos:line="984" pos:column="18"/></literal><operator pos:line="984" pos:column="18">*<pos:position pos:line="984" pos:column="19"/></operator><name pos:line="984" pos:column="19">LINK_SIZE<pos:position pos:line="984" pos:column="28"/></name></expr>;<pos:position pos:line="984" pos:column="29"/></expr_stmt></block></then></if>  <comment type="block" pos:line="984" pos:column="31">/* For final callout */</comment>

<if pos:line="986" pos:column="1">if <condition pos:line="986" pos:column="4">(<expr><name pos:line="986" pos:column="5">length<pos:position pos:line="986" pos:column="11"/></name> <operator pos:line="986" pos:column="12">&gt;<pos:position pos:line="986" pos:column="16"/></operator> <name pos:line="986" pos:column="14">MAX_PATTERN_SIZE<pos:position pos:line="986" pos:column="30"/></name></expr>)<pos:position pos:line="986" pos:column="31"/></condition><then pos:line="986" pos:column="31">
  <block pos:line="987" pos:column="3">{
  <expr_stmt><expr><operator pos:line="988" pos:column="3">*<pos:position pos:line="988" pos:column="4"/></operator><name pos:line="988" pos:column="4">errorptr<pos:position pos:line="988" pos:column="12"/></name> <operator pos:line="988" pos:column="13">=<pos:position pos:line="988" pos:column="14"/></operator> <name pos:line="988" pos:column="15">ERR20<pos:position pos:line="988" pos:column="20"/></name></expr>;<pos:position pos:line="988" pos:column="21"/></expr_stmt>
  <return pos:line="989" pos:column="3">return <expr><name pos:line="989" pos:column="10">NULL<pos:position pos:line="989" pos:column="14"/></name></expr>;<pos:position pos:line="989" pos:column="15"/></return>
  }<pos:position pos:line="990" pos:column="4"/></block></then></if>

<comment type="block" pos:line="992" pos:column="1">/* Compute the size of data block needed and get it, either from malloc or
externally provided function. */</comment>

<expr_stmt><expr><name pos:line="995" pos:column="1">size<pos:position pos:line="995" pos:column="5"/></name> <operator pos:line="995" pos:column="6">=<pos:position pos:line="995" pos:column="7"/></operator> <name pos:line="995" pos:column="8">length<pos:position pos:line="995" pos:column="14"/></name> <operator pos:line="995" pos:column="15">+<pos:position pos:line="995" pos:column="16"/></operator> <sizeof pos:line="995" pos:column="17">sizeof<argument_list pos:line="995" pos:column="23">(<argument><expr><name pos:line="995" pos:column="24">real_pcre<pos:position pos:line="995" pos:column="33"/></name></expr></argument>)<pos:position pos:line="995" pos:column="34"/></argument_list></sizeof> <operator pos:line="995" pos:column="35">+<pos:position pos:line="995" pos:column="36"/></operator> <name pos:line="995" pos:column="37">name_count<pos:position pos:line="995" pos:column="47"/></name> <operator pos:line="995" pos:column="48">*<pos:position pos:line="995" pos:column="49"/></operator> <operator pos:line="995" pos:column="50">(<pos:position pos:line="995" pos:column="51"/></operator><name pos:line="995" pos:column="51">max_name_size<pos:position pos:line="995" pos:column="64"/></name> <operator pos:line="995" pos:column="65">+<pos:position pos:line="995" pos:column="66"/></operator> <literal type="number" pos:line="995" pos:column="67">3<pos:position pos:line="995" pos:column="68"/></literal><operator pos:line="995" pos:column="68">)<pos:position pos:line="995" pos:column="69"/></operator></expr>;<pos:position pos:line="995" pos:column="70"/></expr_stmt>
<expr_stmt><expr><name pos:line="996" pos:column="1">re<pos:position pos:line="996" pos:column="3"/></name> <operator pos:line="996" pos:column="4">=<pos:position pos:line="996" pos:column="5"/></operator> <operator pos:line="996" pos:column="6">(<pos:position pos:line="996" pos:column="7"/></operator><name pos:line="996" pos:column="7">real_pcre<pos:position pos:line="996" pos:column="16"/></name> <operator pos:line="996" pos:column="17">*<pos:position pos:line="996" pos:column="18"/></operator><operator pos:line="996" pos:column="18">)<pos:position pos:line="996" pos:column="19"/></operator><call pos:line="996" pos:column="19">(<name pos:line="996" pos:column="20">pcre_malloc<pos:position pos:line="996" pos:column="31"/></name>)<argument_list pos:line="996" pos:column="32">(<argument><expr><name pos:line="996" pos:column="33">size<pos:position pos:line="996" pos:column="37"/></name></expr></argument>)<pos:position pos:line="996" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="996" pos:column="39"/></expr_stmt>

<if pos:line="998" pos:column="1">if <condition pos:line="998" pos:column="4">(<expr><name pos:line="998" pos:column="5">re<pos:position pos:line="998" pos:column="7"/></name> <operator pos:line="998" pos:column="8">==<pos:position pos:line="998" pos:column="10"/></operator> <name pos:line="998" pos:column="11">NULL<pos:position pos:line="998" pos:column="15"/></name></expr>)<pos:position pos:line="998" pos:column="16"/></condition><then pos:line="998" pos:column="16">
  <block pos:line="999" pos:column="3">{
  <expr_stmt><expr><operator pos:line="1000" pos:column="3">*<pos:position pos:line="1000" pos:column="4"/></operator><name pos:line="1000" pos:column="4">errorptr<pos:position pos:line="1000" pos:column="12"/></name> <operator pos:line="1000" pos:column="13">=<pos:position pos:line="1000" pos:column="14"/></operator> <name pos:line="1000" pos:column="15">ERR21<pos:position pos:line="1000" pos:column="20"/></name></expr>;<pos:position pos:line="1000" pos:column="21"/></expr_stmt>
  <return pos:line="1001" pos:column="3">return <expr><name pos:line="1001" pos:column="10">NULL<pos:position pos:line="1001" pos:column="14"/></name></expr>;<pos:position pos:line="1001" pos:column="15"/></return>
  }<pos:position pos:line="1002" pos:column="4"/></block></then></if>

<comment type="block" pos:line="1004" pos:column="1">/* Put in the magic number, and save the sizes, options, and character table
pointer. NULL is used for the default character tables. The nullpad field is at
the end; it's there to help in the case when a regex compiled on a system with
4-byte pointers is run on another with 8-byte pointers. */</comment>

<expr_stmt><expr><name><name pos:line="1009" pos:column="1">re<pos:position pos:line="1009" pos:column="3"/></name><operator pos:line="1009" pos:column="3">-&gt;<pos:position pos:line="1009" pos:column="8"/></operator><name pos:line="1009" pos:column="5">magic_number<pos:position pos:line="1009" pos:column="17"/></name></name> <operator pos:line="1009" pos:column="18">=<pos:position pos:line="1009" pos:column="19"/></operator> <name pos:line="1009" pos:column="20">MAGIC_NUMBER<pos:position pos:line="1009" pos:column="32"/></name></expr>;<pos:position pos:line="1009" pos:column="33"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="1010" pos:column="1">re<pos:position pos:line="1010" pos:column="3"/></name><operator pos:line="1010" pos:column="3">-&gt;<pos:position pos:line="1010" pos:column="8"/></operator><name pos:line="1010" pos:column="5">size<pos:position pos:line="1010" pos:column="9"/></name></name> <operator pos:line="1010" pos:column="10">=<pos:position pos:line="1010" pos:column="11"/></operator> <name pos:line="1010" pos:column="12">size<pos:position pos:line="1010" pos:column="16"/></name></expr>;<pos:position pos:line="1010" pos:column="17"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="1011" pos:column="1">re<pos:position pos:line="1011" pos:column="3"/></name><operator pos:line="1011" pos:column="3">-&gt;<pos:position pos:line="1011" pos:column="8"/></operator><name pos:line="1011" pos:column="5">options<pos:position pos:line="1011" pos:column="12"/></name></name> <operator pos:line="1011" pos:column="13">=<pos:position pos:line="1011" pos:column="14"/></operator> <name pos:line="1011" pos:column="15">options<pos:position pos:line="1011" pos:column="22"/></name></expr>;<pos:position pos:line="1011" pos:column="23"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="1012" pos:column="1">re<pos:position pos:line="1012" pos:column="3"/></name><operator pos:line="1012" pos:column="3">-&gt;<pos:position pos:line="1012" pos:column="8"/></operator><name pos:line="1012" pos:column="5">dummy1<pos:position pos:line="1012" pos:column="11"/></name></name> <operator pos:line="1012" pos:column="12">=<pos:position pos:line="1012" pos:column="13"/></operator> <name><name pos:line="1012" pos:column="14">re<pos:position pos:line="1012" pos:column="16"/></name><operator pos:line="1012" pos:column="16">-&gt;<pos:position pos:line="1012" pos:column="21"/></operator><name pos:line="1012" pos:column="18">dummy2<pos:position pos:line="1012" pos:column="24"/></name></name> <operator pos:line="1012" pos:column="25">=<pos:position pos:line="1012" pos:column="26"/></operator> <literal type="number" pos:line="1012" pos:column="27">0<pos:position pos:line="1012" pos:column="28"/></literal></expr>;<pos:position pos:line="1012" pos:column="29"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="1013" pos:column="1">re<pos:position pos:line="1013" pos:column="3"/></name><operator pos:line="1013" pos:column="3">-&gt;<pos:position pos:line="1013" pos:column="8"/></operator><name pos:line="1013" pos:column="5">name_table_offset<pos:position pos:line="1013" pos:column="22"/></name></name> <operator pos:line="1013" pos:column="23">=<pos:position pos:line="1013" pos:column="24"/></operator> <sizeof pos:line="1013" pos:column="25">sizeof<argument_list pos:line="1013" pos:column="31">(<argument><expr><name pos:line="1013" pos:column="32">real_pcre<pos:position pos:line="1013" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1013" pos:column="42"/></argument_list></sizeof></expr>;<pos:position pos:line="1013" pos:column="43"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="1014" pos:column="1">re<pos:position pos:line="1014" pos:column="3"/></name><operator pos:line="1014" pos:column="3">-&gt;<pos:position pos:line="1014" pos:column="8"/></operator><name pos:line="1014" pos:column="5">name_entry_size<pos:position pos:line="1014" pos:column="20"/></name></name> <operator pos:line="1014" pos:column="21">=<pos:position pos:line="1014" pos:column="22"/></operator> <name pos:line="1014" pos:column="23">max_name_size<pos:position pos:line="1014" pos:column="36"/></name> <operator pos:line="1014" pos:column="37">+<pos:position pos:line="1014" pos:column="38"/></operator> <literal type="number" pos:line="1014" pos:column="39">3<pos:position pos:line="1014" pos:column="40"/></literal></expr>;<pos:position pos:line="1014" pos:column="41"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="1015" pos:column="1">re<pos:position pos:line="1015" pos:column="3"/></name><operator pos:line="1015" pos:column="3">-&gt;<pos:position pos:line="1015" pos:column="8"/></operator><name pos:line="1015" pos:column="5">name_count<pos:position pos:line="1015" pos:column="15"/></name></name> <operator pos:line="1015" pos:column="16">=<pos:position pos:line="1015" pos:column="17"/></operator> <name pos:line="1015" pos:column="18">name_count<pos:position pos:line="1015" pos:column="28"/></name></expr>;<pos:position pos:line="1015" pos:column="29"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="1016" pos:column="1">re<pos:position pos:line="1016" pos:column="3"/></name><operator pos:line="1016" pos:column="3">-&gt;<pos:position pos:line="1016" pos:column="8"/></operator><name pos:line="1016" pos:column="5">tables<pos:position pos:line="1016" pos:column="11"/></name></name> <operator pos:line="1016" pos:column="12">=<pos:position pos:line="1016" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="1016" pos:column="14">(<pos:position pos:line="1016" pos:column="15"/></operator><name pos:line="1016" pos:column="15">tables<pos:position pos:line="1016" pos:column="21"/></name> <operator pos:line="1016" pos:column="22">==<pos:position pos:line="1016" pos:column="24"/></operator> <name pos:line="1016" pos:column="25">pcre_default_tables<pos:position pos:line="1016" pos:column="44"/></name><operator pos:line="1016" pos:column="44">)<pos:position pos:line="1016" pos:column="45"/></operator></expr>?<pos:position pos:line="1016" pos:column="46"/></condition><then pos:line="1016" pos:column="46"> <expr><name pos:line="1016" pos:column="47">NULL<pos:position pos:line="1016" pos:column="51"/></name></expr> <pos:position pos:line="1016" pos:column="52"/></then><else pos:line="1016" pos:column="52">: <expr><name pos:line="1016" pos:column="54">tables<pos:position pos:line="1016" pos:column="60"/></name></expr></else></ternary></expr>;<pos:position pos:line="1016" pos:column="61"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="1017" pos:column="1">re<pos:position pos:line="1017" pos:column="3"/></name><operator pos:line="1017" pos:column="3">-&gt;<pos:position pos:line="1017" pos:column="8"/></operator><name pos:line="1017" pos:column="5">nullpad<pos:position pos:line="1017" pos:column="12"/></name></name> <operator pos:line="1017" pos:column="13">=<pos:position pos:line="1017" pos:column="14"/></operator> <name pos:line="1017" pos:column="15">NULL<pos:position pos:line="1017" pos:column="19"/></name></expr>;<pos:position pos:line="1017" pos:column="20"/></expr_stmt>

<comment type="block" pos:line="1019" pos:column="1">/* The starting points of the name/number translation table and of the code are
passed around in the compile data block. */</comment>

<expr_stmt><expr><name><name pos:line="1022" pos:column="1">compile_block<pos:position pos:line="1022" pos:column="14"/></name><operator pos:line="1022" pos:column="14">.<pos:position pos:line="1022" pos:column="15"/></operator><name pos:line="1022" pos:column="15">names_found<pos:position pos:line="1022" pos:column="26"/></name></name> <operator pos:line="1022" pos:column="27">=<pos:position pos:line="1022" pos:column="28"/></operator> <literal type="number" pos:line="1022" pos:column="29">0<pos:position pos:line="1022" pos:column="30"/></literal></expr>;<pos:position pos:line="1022" pos:column="31"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="1023" pos:column="1">compile_block<pos:position pos:line="1023" pos:column="14"/></name><operator pos:line="1023" pos:column="14">.<pos:position pos:line="1023" pos:column="15"/></operator><name pos:line="1023" pos:column="15">name_entry_size<pos:position pos:line="1023" pos:column="30"/></name></name> <operator pos:line="1023" pos:column="31">=<pos:position pos:line="1023" pos:column="32"/></operator> <name pos:line="1023" pos:column="33">max_name_size<pos:position pos:line="1023" pos:column="46"/></name> <operator pos:line="1023" pos:column="47">+<pos:position pos:line="1023" pos:column="48"/></operator> <literal type="number" pos:line="1023" pos:column="49">3<pos:position pos:line="1023" pos:column="50"/></literal></expr>;<pos:position pos:line="1023" pos:column="51"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="1024" pos:column="1">compile_block<pos:position pos:line="1024" pos:column="14"/></name><operator pos:line="1024" pos:column="14">.<pos:position pos:line="1024" pos:column="15"/></operator><name pos:line="1024" pos:column="15">name_table<pos:position pos:line="1024" pos:column="25"/></name></name> <operator pos:line="1024" pos:column="26">=<pos:position pos:line="1024" pos:column="27"/></operator> <operator pos:line="1024" pos:column="28">(<pos:position pos:line="1024" pos:column="29"/></operator><name pos:line="1024" pos:column="29">uschar<pos:position pos:line="1024" pos:column="35"/></name> <operator pos:line="1024" pos:column="36">*<pos:position pos:line="1024" pos:column="37"/></operator><operator pos:line="1024" pos:column="37">)<pos:position pos:line="1024" pos:column="38"/></operator><name pos:line="1024" pos:column="38">re<pos:position pos:line="1024" pos:column="40"/></name> <operator pos:line="1024" pos:column="41">+<pos:position pos:line="1024" pos:column="42"/></operator> <name><name pos:line="1024" pos:column="43">re<pos:position pos:line="1024" pos:column="45"/></name><operator pos:line="1024" pos:column="45">-&gt;<pos:position pos:line="1024" pos:column="50"/></operator><name pos:line="1024" pos:column="47">name_table_offset<pos:position pos:line="1024" pos:column="64"/></name></name></expr>;<pos:position pos:line="1024" pos:column="65"/></expr_stmt>
<expr_stmt><expr><name pos:line="1025" pos:column="1">codestart<pos:position pos:line="1025" pos:column="10"/></name> <operator pos:line="1025" pos:column="11">=<pos:position pos:line="1025" pos:column="12"/></operator> <name><name pos:line="1025" pos:column="13">compile_block<pos:position pos:line="1025" pos:column="26"/></name><operator pos:line="1025" pos:column="26">.<pos:position pos:line="1025" pos:column="27"/></operator><name pos:line="1025" pos:column="27">name_table<pos:position pos:line="1025" pos:column="37"/></name></name> <operator pos:line="1025" pos:column="38">+<pos:position pos:line="1025" pos:column="39"/></operator> <name><name pos:line="1025" pos:column="40">re<pos:position pos:line="1025" pos:column="42"/></name><operator pos:line="1025" pos:column="42">-&gt;<pos:position pos:line="1025" pos:column="47"/></operator><name pos:line="1025" pos:column="44">name_entry_size<pos:position pos:line="1025" pos:column="59"/></name></name> <operator pos:line="1025" pos:column="60">*<pos:position pos:line="1025" pos:column="61"/></operator> <name><name pos:line="1025" pos:column="62">re<pos:position pos:line="1025" pos:column="64"/></name><operator pos:line="1025" pos:column="64">-&gt;<pos:position pos:line="1025" pos:column="69"/></operator><name pos:line="1025" pos:column="66">name_count<pos:position pos:line="1025" pos:column="76"/></name></name></expr>;<pos:position pos:line="1025" pos:column="77"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="1026" pos:column="1">compile_block<pos:position pos:line="1026" pos:column="14"/></name><operator pos:line="1026" pos:column="14">.<pos:position pos:line="1026" pos:column="15"/></operator><name pos:line="1026" pos:column="15">start_code<pos:position pos:line="1026" pos:column="25"/></name></name> <operator pos:line="1026" pos:column="26">=<pos:position pos:line="1026" pos:column="27"/></operator> <name pos:line="1026" pos:column="28">codestart<pos:position pos:line="1026" pos:column="37"/></name></expr>;<pos:position pos:line="1026" pos:column="38"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="1027" pos:column="1">compile_block<pos:position pos:line="1027" pos:column="14"/></name><operator pos:line="1027" pos:column="14">.<pos:position pos:line="1027" pos:column="15"/></operator><name pos:line="1027" pos:column="15">start_pattern<pos:position pos:line="1027" pos:column="28"/></name></name> <operator pos:line="1027" pos:column="29">=<pos:position pos:line="1027" pos:column="30"/></operator> <operator pos:line="1027" pos:column="31">(<pos:position pos:line="1027" pos:column="32"/></operator><specifier pos:line="1027" pos:column="32">const<pos:position pos:line="1027" pos:column="37"/></specifier> <name pos:line="1027" pos:column="38">uschar<pos:position pos:line="1027" pos:column="44"/></name> <operator pos:line="1027" pos:column="45">*<pos:position pos:line="1027" pos:column="46"/></operator><operator pos:line="1027" pos:column="46">)<pos:position pos:line="1027" pos:column="47"/></operator><name pos:line="1027" pos:column="47">pattern<pos:position pos:line="1027" pos:column="54"/></name></expr>;<pos:position pos:line="1027" pos:column="55"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="1028" pos:column="1">compile_block<pos:position pos:line="1028" pos:column="14"/></name><operator pos:line="1028" pos:column="14">.<pos:position pos:line="1028" pos:column="15"/></operator><name pos:line="1028" pos:column="15">req_varyopt<pos:position pos:line="1028" pos:column="26"/></name></name> <operator pos:line="1028" pos:column="27">=<pos:position pos:line="1028" pos:column="28"/></operator> <literal type="number" pos:line="1028" pos:column="29">0<pos:position pos:line="1028" pos:column="30"/></literal></expr>;<pos:position pos:line="1028" pos:column="31"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="1029" pos:column="1">compile_block<pos:position pos:line="1029" pos:column="14"/></name><operator pos:line="1029" pos:column="14">.<pos:position pos:line="1029" pos:column="15"/></operator><name pos:line="1029" pos:column="15">nopartial<pos:position pos:line="1029" pos:column="24"/></name></name> <operator pos:line="1029" pos:column="25">=<pos:position pos:line="1029" pos:column="26"/></operator> <name pos:line="1029" pos:column="27">FALSE<pos:position pos:line="1029" pos:column="32"/></name></expr>;<pos:position pos:line="1029" pos:column="33"/></expr_stmt>

<comment type="block" pos:line="1031" pos:column="1">/* Set up a starting, non-extracting bracket, then compile the expression. On
error, *errorptr will be set non-NULL, so we don't need to look at the result
of the function here. */</comment>

<expr_stmt><expr><name pos:line="1035" pos:column="1">ptr<pos:position pos:line="1035" pos:column="4"/></name> <operator pos:line="1035" pos:column="5">=<pos:position pos:line="1035" pos:column="6"/></operator> <operator pos:line="1035" pos:column="7">(<pos:position pos:line="1035" pos:column="8"/></operator><specifier pos:line="1035" pos:column="8">const<pos:position pos:line="1035" pos:column="13"/></specifier> <name pos:line="1035" pos:column="14">uschar<pos:position pos:line="1035" pos:column="20"/></name> <operator pos:line="1035" pos:column="21">*<pos:position pos:line="1035" pos:column="22"/></operator><operator pos:line="1035" pos:column="22">)<pos:position pos:line="1035" pos:column="23"/></operator><name pos:line="1035" pos:column="23">pattern<pos:position pos:line="1035" pos:column="30"/></name></expr>;<pos:position pos:line="1035" pos:column="31"/></expr_stmt>
<expr_stmt><expr><name pos:line="1036" pos:column="1">code<pos:position pos:line="1036" pos:column="5"/></name> <operator pos:line="1036" pos:column="6">=<pos:position pos:line="1036" pos:column="7"/></operator> <operator pos:line="1036" pos:column="8">(<pos:position pos:line="1036" pos:column="9"/></operator><name pos:line="1036" pos:column="9">uschar<pos:position pos:line="1036" pos:column="15"/></name> <operator pos:line="1036" pos:column="16">*<pos:position pos:line="1036" pos:column="17"/></operator><operator pos:line="1036" pos:column="17">)<pos:position pos:line="1036" pos:column="18"/></operator><name pos:line="1036" pos:column="18">codestart<pos:position pos:line="1036" pos:column="27"/></name></expr>;<pos:position pos:line="1036" pos:column="28"/></expr_stmt>
<expr_stmt><expr><operator pos:line="1037" pos:column="1">*<pos:position pos:line="1037" pos:column="2"/></operator><name pos:line="1037" pos:column="2">code<pos:position pos:line="1037" pos:column="6"/></name> <operator pos:line="1037" pos:column="7">=<pos:position pos:line="1037" pos:column="8"/></operator> <name pos:line="1037" pos:column="9">OP_BRA<pos:position pos:line="1037" pos:column="15"/></name></expr>;<pos:position pos:line="1037" pos:column="16"/></expr_stmt>
<expr_stmt><expr><name pos:line="1038" pos:column="1">bracount<pos:position pos:line="1038" pos:column="9"/></name> <operator pos:line="1038" pos:column="10">=<pos:position pos:line="1038" pos:column="11"/></operator> <literal type="number" pos:line="1038" pos:column="12">0<pos:position pos:line="1038" pos:column="13"/></literal></expr>;<pos:position pos:line="1038" pos:column="14"/></expr_stmt>
<expr_stmt><expr><operator pos:line="1039" pos:column="1">(<pos:position pos:line="1039" pos:column="2"/></operator><name pos:line="1039" pos:column="2">void<pos:position pos:line="1039" pos:column="6"/></name><operator pos:line="1039" pos:column="6">)<pos:position pos:line="1039" pos:column="7"/></operator><call><name pos:line="1039" pos:column="7">compile_regex<pos:position pos:line="1039" pos:column="20"/></name><argument_list pos:line="1039" pos:column="20">(<argument><expr><name pos:line="1039" pos:column="21">options<pos:position pos:line="1039" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1039" pos:column="30">options<pos:position pos:line="1039" pos:column="37"/></name> <operator pos:line="1039" pos:column="38">&amp;<pos:position pos:line="1039" pos:column="43"/></operator> <name pos:line="1039" pos:column="40">PCRE_IMS<pos:position pos:line="1039" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="1039" pos:column="50">&amp;<pos:position pos:line="1039" pos:column="55"/></operator><name pos:line="1039" pos:column="51">bracount<pos:position pos:line="1039" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="1039" pos:column="61">&amp;<pos:position pos:line="1039" pos:column="66"/></operator><name pos:line="1039" pos:column="62">code<pos:position pos:line="1039" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="1039" pos:column="68">&amp;<pos:position pos:line="1039" pos:column="73"/></operator><name pos:line="1039" pos:column="69">ptr<pos:position pos:line="1039" pos:column="72"/></name></expr></argument>,
  <argument><expr><name pos:line="1040" pos:column="3">errorptr<pos:position pos:line="1040" pos:column="11"/></name></expr></argument>, <argument><expr><name pos:line="1040" pos:column="13">FALSE<pos:position pos:line="1040" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1040" pos:column="20">0<pos:position pos:line="1040" pos:column="21"/></literal></expr></argument>, <argument><expr><operator pos:line="1040" pos:column="23">&amp;<pos:position pos:line="1040" pos:column="28"/></operator><name pos:line="1040" pos:column="24">firstbyte<pos:position pos:line="1040" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="1040" pos:column="35">&amp;<pos:position pos:line="1040" pos:column="40"/></operator><name pos:line="1040" pos:column="36">reqbyte<pos:position pos:line="1040" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="1040" pos:column="45">NULL<pos:position pos:line="1040" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="1040" pos:column="51">&amp;<pos:position pos:line="1040" pos:column="56"/></operator><name pos:line="1040" pos:column="52">compile_block<pos:position pos:line="1040" pos:column="65"/></name></expr></argument>)<pos:position pos:line="1040" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1040" pos:column="67"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="1041" pos:column="1">re<pos:position pos:line="1041" pos:column="3"/></name><operator pos:line="1041" pos:column="3">-&gt;<pos:position pos:line="1041" pos:column="8"/></operator><name pos:line="1041" pos:column="5">top_bracket<pos:position pos:line="1041" pos:column="16"/></name></name> <operator pos:line="1041" pos:column="17">=<pos:position pos:line="1041" pos:column="18"/></operator> <name pos:line="1041" pos:column="19">bracount<pos:position pos:line="1041" pos:column="27"/></name></expr>;<pos:position pos:line="1041" pos:column="28"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="1042" pos:column="1">re<pos:position pos:line="1042" pos:column="3"/></name><operator pos:line="1042" pos:column="3">-&gt;<pos:position pos:line="1042" pos:column="8"/></operator><name pos:line="1042" pos:column="5">top_backref<pos:position pos:line="1042" pos:column="16"/></name></name> <operator pos:line="1042" pos:column="17">=<pos:position pos:line="1042" pos:column="18"/></operator> <name><name pos:line="1042" pos:column="19">compile_block<pos:position pos:line="1042" pos:column="32"/></name><operator pos:line="1042" pos:column="32">.<pos:position pos:line="1042" pos:column="33"/></operator><name pos:line="1042" pos:column="33">top_backref<pos:position pos:line="1042" pos:column="44"/></name></name></expr>;<pos:position pos:line="1042" pos:column="45"/></expr_stmt>

<if pos:line="1044" pos:column="1">if <condition pos:line="1044" pos:column="4">(<expr><name><name pos:line="1044" pos:column="5">compile_block<pos:position pos:line="1044" pos:column="18"/></name><operator pos:line="1044" pos:column="18">.<pos:position pos:line="1044" pos:column="19"/></operator><name pos:line="1044" pos:column="19">nopartial<pos:position pos:line="1044" pos:column="28"/></name></name></expr>)<pos:position pos:line="1044" pos:column="29"/></condition><then pos:line="1044" pos:column="29"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="1044" pos:column="30">re<pos:position pos:line="1044" pos:column="32"/></name><operator pos:line="1044" pos:column="32">-&gt;<pos:position pos:line="1044" pos:column="37"/></operator><name pos:line="1044" pos:column="34">options<pos:position pos:line="1044" pos:column="41"/></name></name> <operator pos:line="1044" pos:column="42">|=<pos:position pos:line="1044" pos:column="44"/></operator> <name pos:line="1044" pos:column="45">PCRE_NOPARTIAL<pos:position pos:line="1044" pos:column="59"/></name></expr>;<pos:position pos:line="1044" pos:column="60"/></expr_stmt></block></then></if>

<comment type="block" pos:line="1046" pos:column="1">/* If not reached end of pattern on success, there's an excess bracket. */</comment>

<if pos:line="1048" pos:column="1">if <condition pos:line="1048" pos:column="4">(<expr><operator pos:line="1048" pos:column="5">*<pos:position pos:line="1048" pos:column="6"/></operator><name pos:line="1048" pos:column="6">errorptr<pos:position pos:line="1048" pos:column="14"/></name> <operator pos:line="1048" pos:column="15">==<pos:position pos:line="1048" pos:column="17"/></operator> <name pos:line="1048" pos:column="18">NULL<pos:position pos:line="1048" pos:column="22"/></name> <operator pos:line="1048" pos:column="23">&amp;&amp;<pos:position pos:line="1048" pos:column="33"/></operator> <operator pos:line="1048" pos:column="26">*<pos:position pos:line="1048" pos:column="27"/></operator><name pos:line="1048" pos:column="27">ptr<pos:position pos:line="1048" pos:column="30"/></name> <operator pos:line="1048" pos:column="31">!=<pos:position pos:line="1048" pos:column="33"/></operator> <literal type="number" pos:line="1048" pos:column="34">0<pos:position pos:line="1048" pos:column="35"/></literal></expr>)<pos:position pos:line="1048" pos:column="36"/></condition><then pos:line="1048" pos:column="36"> <block type="pseudo"><expr_stmt><expr><operator pos:line="1048" pos:column="37">*<pos:position pos:line="1048" pos:column="38"/></operator><name pos:line="1048" pos:column="38">errorptr<pos:position pos:line="1048" pos:column="46"/></name> <operator pos:line="1048" pos:column="47">=<pos:position pos:line="1048" pos:column="48"/></operator> <name pos:line="1048" pos:column="49">ERR22<pos:position pos:line="1048" pos:column="54"/></name></expr>;<pos:position pos:line="1048" pos:column="55"/></expr_stmt></block></then></if>

<comment type="block" pos:line="1050" pos:column="1">/* Fill in the terminating state and check for disastrous overflow, but
if debugging, leave the test till after things are printed out. */</comment>

<expr_stmt><expr><operator pos:line="1053" pos:column="1">*<pos:position pos:line="1053" pos:column="2"/></operator><name pos:line="1053" pos:column="2">code<pos:position pos:line="1053" pos:column="6"/></name><operator pos:line="1053" pos:column="6">++<pos:position pos:line="1053" pos:column="8"/></operator> <operator pos:line="1053" pos:column="9">=<pos:position pos:line="1053" pos:column="10"/></operator> <name pos:line="1053" pos:column="11">OP_END<pos:position pos:line="1053" pos:column="17"/></name></expr>;<pos:position pos:line="1053" pos:column="18"/></expr_stmt>

<cpp:ifndef pos:line="1055" pos:column="1">#<cpp:directive pos:line="1055" pos:column="2">ifndef<pos:position pos:line="1055" pos:column="8"/></cpp:directive> <name pos:line="1055" pos:column="9">DEBUG<pos:position pos:line="1055" pos:column="14"/></name></cpp:ifndef>
<if pos:line="1056" pos:column="1">if <condition pos:line="1056" pos:column="4">(<expr><name pos:line="1056" pos:column="5">code<pos:position pos:line="1056" pos:column="9"/></name> <operator pos:line="1056" pos:column="10">-<pos:position pos:line="1056" pos:column="11"/></operator> <name pos:line="1056" pos:column="12">codestart<pos:position pos:line="1056" pos:column="21"/></name> <operator pos:line="1056" pos:column="22">&gt;<pos:position pos:line="1056" pos:column="26"/></operator> <name pos:line="1056" pos:column="24">length<pos:position pos:line="1056" pos:column="30"/></name></expr>)<pos:position pos:line="1056" pos:column="31"/></condition><then pos:line="1056" pos:column="31"> <block type="pseudo"><expr_stmt><expr><operator pos:line="1056" pos:column="32">*<pos:position pos:line="1056" pos:column="33"/></operator><name pos:line="1056" pos:column="33">errorptr<pos:position pos:line="1056" pos:column="41"/></name> <operator pos:line="1056" pos:column="42">=<pos:position pos:line="1056" pos:column="43"/></operator> <name pos:line="1056" pos:column="44">ERR23<pos:position pos:line="1056" pos:column="49"/></name></expr>;<pos:position pos:line="1056" pos:column="50"/></expr_stmt></block></then></if>
<cpp:endif pos:line="1057" pos:column="1">#<cpp:directive pos:line="1057" pos:column="2">endif<pos:position pos:line="1057" pos:column="7"/></cpp:directive></cpp:endif>

<comment type="block" pos:line="1059" pos:column="1">/* Give an error if there's back reference to a non-existent capturing
subpattern. */</comment>

<if pos:line="1062" pos:column="1">if <condition pos:line="1062" pos:column="4">(<expr><name><name pos:line="1062" pos:column="5">re<pos:position pos:line="1062" pos:column="7"/></name><operator pos:line="1062" pos:column="7">-&gt;<pos:position pos:line="1062" pos:column="12"/></operator><name pos:line="1062" pos:column="9">top_backref<pos:position pos:line="1062" pos:column="20"/></name></name> <operator pos:line="1062" pos:column="21">&gt;<pos:position pos:line="1062" pos:column="25"/></operator> <name><name pos:line="1062" pos:column="23">re<pos:position pos:line="1062" pos:column="25"/></name><operator pos:line="1062" pos:column="25">-&gt;<pos:position pos:line="1062" pos:column="30"/></operator><name pos:line="1062" pos:column="27">top_bracket<pos:position pos:line="1062" pos:column="38"/></name></name></expr>)<pos:position pos:line="1062" pos:column="39"/></condition><then pos:line="1062" pos:column="39"> <block type="pseudo"><expr_stmt><expr><operator pos:line="1062" pos:column="40">*<pos:position pos:line="1062" pos:column="41"/></operator><name pos:line="1062" pos:column="41">errorptr<pos:position pos:line="1062" pos:column="49"/></name> <operator pos:line="1062" pos:column="50">=<pos:position pos:line="1062" pos:column="51"/></operator> <name pos:line="1062" pos:column="52">ERR15<pos:position pos:line="1062" pos:column="57"/></name></expr>;<pos:position pos:line="1062" pos:column="58"/></expr_stmt></block></then></if>

<comment type="block" pos:line="1064" pos:column="1">/* Failed to compile, or error while post-processing */</comment>

<if pos:line="1066" pos:column="1">if <condition pos:line="1066" pos:column="4">(<expr><operator pos:line="1066" pos:column="5">*<pos:position pos:line="1066" pos:column="6"/></operator><name pos:line="1066" pos:column="6">errorptr<pos:position pos:line="1066" pos:column="14"/></name> <operator pos:line="1066" pos:column="15">!=<pos:position pos:line="1066" pos:column="17"/></operator> <name pos:line="1066" pos:column="18">NULL<pos:position pos:line="1066" pos:column="22"/></name></expr>)<pos:position pos:line="1066" pos:column="23"/></condition><then pos:line="1066" pos:column="23">
  <block pos:line="1067" pos:column="3">{
  <expr_stmt><expr><call pos:line="1068" pos:column="3">(<name pos:line="1068" pos:column="4">pcre_free<pos:position pos:line="1068" pos:column="13"/></name>)<argument_list pos:line="1068" pos:column="14">(<argument><expr><name pos:line="1068" pos:column="15">re<pos:position pos:line="1068" pos:column="17"/></name></expr></argument>)<pos:position pos:line="1068" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="1068" pos:column="19"/></expr_stmt>
  <label><name pos:line="1069" pos:column="3">PCRE_ERROR_RETURN<pos:position pos:line="1069" pos:column="20"/></name>:<pos:position pos:line="1069" pos:column="21"/></label>
  <expr_stmt><expr><operator pos:line="1070" pos:column="3">*<pos:position pos:line="1070" pos:column="4"/></operator><name pos:line="1070" pos:column="4">erroroffset<pos:position pos:line="1070" pos:column="15"/></name> <operator pos:line="1070" pos:column="16">=<pos:position pos:line="1070" pos:column="17"/></operator> <name pos:line="1070" pos:column="18">ptr<pos:position pos:line="1070" pos:column="21"/></name> <operator pos:line="1070" pos:column="22">-<pos:position pos:line="1070" pos:column="23"/></operator> <operator pos:line="1070" pos:column="24">(<pos:position pos:line="1070" pos:column="25"/></operator><specifier pos:line="1070" pos:column="25">const<pos:position pos:line="1070" pos:column="30"/></specifier> <name pos:line="1070" pos:column="31">uschar<pos:position pos:line="1070" pos:column="37"/></name> <operator pos:line="1070" pos:column="38">*<pos:position pos:line="1070" pos:column="39"/></operator><operator pos:line="1070" pos:column="39">)<pos:position pos:line="1070" pos:column="40"/></operator><name pos:line="1070" pos:column="40">pattern<pos:position pos:line="1070" pos:column="47"/></name></expr>;<pos:position pos:line="1070" pos:column="48"/></expr_stmt>
  <return pos:line="1071" pos:column="3">return <expr><name pos:line="1071" pos:column="10">NULL<pos:position pos:line="1071" pos:column="14"/></name></expr>;<pos:position pos:line="1071" pos:column="15"/></return>
  }<pos:position pos:line="1072" pos:column="4"/></block></then></if>

<comment type="block" pos:line="1074" pos:column="1">/* If the anchored option was not passed, set the flag if we can determine that
the pattern is anchored by virtue of ^ characters or \A or anything else (such
as starting with .* when DOTALL is set).

Otherwise, if we know what the first character has to be, save it, because that
speeds up unanchored matches no end. If not, see if we can set the
PCRE_STARTLINE flag. This is helpful for multiline matches when all branches
start with ^. and also when all branches start with .* for non-DOTALL matches.
*/</comment>

<if pos:line="1084" pos:column="1">if <condition pos:line="1084" pos:column="4">(<expr><operator pos:line="1084" pos:column="5">(<pos:position pos:line="1084" pos:column="6"/></operator><name pos:line="1084" pos:column="6">options<pos:position pos:line="1084" pos:column="13"/></name> <operator pos:line="1084" pos:column="14">&amp;<pos:position pos:line="1084" pos:column="19"/></operator> <name pos:line="1084" pos:column="16">PCRE_ANCHORED<pos:position pos:line="1084" pos:column="29"/></name><operator pos:line="1084" pos:column="29">)<pos:position pos:line="1084" pos:column="30"/></operator> <operator pos:line="1084" pos:column="31">==<pos:position pos:line="1084" pos:column="33"/></operator> <literal type="number" pos:line="1084" pos:column="34">0<pos:position pos:line="1084" pos:column="35"/></literal></expr>)<pos:position pos:line="1084" pos:column="36"/></condition><then pos:line="1084" pos:column="36">
  <block pos:line="1085" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="1086" pos:column="3">int<pos:position pos:line="1086" pos:column="6"/></name></type> <name pos:line="1086" pos:column="7">temp_options<pos:position pos:line="1086" pos:column="19"/></name> <init pos:line="1086" pos:column="20">= <expr><name pos:line="1086" pos:column="22">options<pos:position pos:line="1086" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="1086" pos:column="30"/></decl_stmt>
  <if pos:line="1087" pos:column="3">if <condition pos:line="1087" pos:column="6">(<expr><call><name pos:line="1087" pos:column="7">is_anchored<pos:position pos:line="1087" pos:column="18"/></name><argument_list pos:line="1087" pos:column="18">(<argument><expr><name pos:line="1087" pos:column="19">codestart<pos:position pos:line="1087" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="1087" pos:column="30">&amp;<pos:position pos:line="1087" pos:column="35"/></operator><name pos:line="1087" pos:column="31">temp_options<pos:position pos:line="1087" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1087" pos:column="45">0<pos:position pos:line="1087" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="1087" pos:column="48">compile_block<pos:position pos:line="1087" pos:column="61"/></name><operator pos:line="1087" pos:column="61">.<pos:position pos:line="1087" pos:column="62"/></operator><name pos:line="1087" pos:column="62">backref_map<pos:position pos:line="1087" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="1087" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="1087" pos:column="75"/></condition><then pos:line="1087" pos:column="75">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="1088" pos:column="5">re<pos:position pos:line="1088" pos:column="7"/></name><operator pos:line="1088" pos:column="7">-&gt;<pos:position pos:line="1088" pos:column="12"/></operator><name pos:line="1088" pos:column="9">options<pos:position pos:line="1088" pos:column="16"/></name></name> <operator pos:line="1088" pos:column="17">|=<pos:position pos:line="1088" pos:column="19"/></operator> <name pos:line="1088" pos:column="20">PCRE_ANCHORED<pos:position pos:line="1088" pos:column="33"/></name></expr>;<pos:position pos:line="1088" pos:column="34"/></expr_stmt></block></then>
  <else pos:line="1089" pos:column="3">else
    <block pos:line="1090" pos:column="5">{
    <if pos:line="1091" pos:column="5">if <condition pos:line="1091" pos:column="8">(<expr><name pos:line="1091" pos:column="9">firstbyte<pos:position pos:line="1091" pos:column="18"/></name> <operator pos:line="1091" pos:column="19">&lt;<pos:position pos:line="1091" pos:column="23"/></operator> <literal type="number" pos:line="1091" pos:column="21">0<pos:position pos:line="1091" pos:column="22"/></literal></expr>)<pos:position pos:line="1091" pos:column="23"/></condition><then pos:line="1091" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><name pos:line="1092" pos:column="7">firstbyte<pos:position pos:line="1092" pos:column="16"/></name> <operator pos:line="1092" pos:column="17">=<pos:position pos:line="1092" pos:column="18"/></operator> <call><name pos:line="1092" pos:column="19">find_firstassertedchar<pos:position pos:line="1092" pos:column="41"/></name><argument_list pos:line="1092" pos:column="41">(<argument><expr><name pos:line="1092" pos:column="42">codestart<pos:position pos:line="1092" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="1092" pos:column="53">&amp;<pos:position pos:line="1092" pos:column="58"/></operator><name pos:line="1092" pos:column="54">temp_options<pos:position pos:line="1092" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="1092" pos:column="68">FALSE<pos:position pos:line="1092" pos:column="73"/></name></expr></argument>)<pos:position pos:line="1092" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="1092" pos:column="75"/></expr_stmt></block></then></if>
    <if pos:line="1093" pos:column="5">if <condition pos:line="1093" pos:column="8">(<expr><name pos:line="1093" pos:column="9">firstbyte<pos:position pos:line="1093" pos:column="18"/></name> <operator pos:line="1093" pos:column="19">&gt;=<pos:position pos:line="1093" pos:column="24"/></operator> <literal type="number" pos:line="1093" pos:column="22">0<pos:position pos:line="1093" pos:column="23"/></literal></expr>)<pos:position pos:line="1093" pos:column="24"/></condition><then pos:line="1093" pos:column="24">   <comment type="block" pos:line="1093" pos:column="27">/* Remove caseless flag for non-caseable chars */</comment>
      <block pos:line="1094" pos:column="7">{
      <decl_stmt><decl><type><name pos:line="1095" pos:column="7">int<pos:position pos:line="1095" pos:column="10"/></name></type> <name pos:line="1095" pos:column="11">ch<pos:position pos:line="1095" pos:column="13"/></name> <init pos:line="1095" pos:column="14">= <expr><name pos:line="1095" pos:column="16">firstbyte<pos:position pos:line="1095" pos:column="25"/></name> <operator pos:line="1095" pos:column="26">&amp;<pos:position pos:line="1095" pos:column="31"/></operator> <literal type="number" pos:line="1095" pos:column="28">255<pos:position pos:line="1095" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="1095" pos:column="32"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="1096" pos:column="7">re<pos:position pos:line="1096" pos:column="9"/></name><operator pos:line="1096" pos:column="9">-&gt;<pos:position pos:line="1096" pos:column="14"/></operator><name pos:line="1096" pos:column="11">first_byte<pos:position pos:line="1096" pos:column="21"/></name></name> <operator pos:line="1096" pos:column="22">=<pos:position pos:line="1096" pos:column="23"/></operator> <ternary><condition><expr><operator pos:line="1096" pos:column="24">(<pos:position pos:line="1096" pos:column="25"/></operator><operator pos:line="1096" pos:column="25">(<pos:position pos:line="1096" pos:column="26"/></operator><name pos:line="1096" pos:column="26">firstbyte<pos:position pos:line="1096" pos:column="35"/></name> <operator pos:line="1096" pos:column="36">&amp;<pos:position pos:line="1096" pos:column="41"/></operator> <name pos:line="1096" pos:column="38">REQ_CASELESS<pos:position pos:line="1096" pos:column="50"/></name><operator pos:line="1096" pos:column="50">)<pos:position pos:line="1096" pos:column="51"/></operator> <operator pos:line="1096" pos:column="52">!=<pos:position pos:line="1096" pos:column="54"/></operator> <literal type="number" pos:line="1096" pos:column="55">0<pos:position pos:line="1096" pos:column="56"/></literal> <operator pos:line="1096" pos:column="57">&amp;&amp;<pos:position pos:line="1096" pos:column="67"/></operator>
         <name><name pos:line="1097" pos:column="10">compile_block<pos:position pos:line="1097" pos:column="23"/></name><operator pos:line="1097" pos:column="23">.<pos:position pos:line="1097" pos:column="24"/></operator><name pos:line="1097" pos:column="24">fcc<pos:position pos:line="1097" pos:column="27"/></name><index pos:line="1097" pos:column="27">[<expr><name pos:line="1097" pos:column="28">ch<pos:position pos:line="1097" pos:column="30"/></name></expr>]<pos:position pos:line="1097" pos:column="31"/></index></name> <operator pos:line="1097" pos:column="32">==<pos:position pos:line="1097" pos:column="34"/></operator> <name pos:line="1097" pos:column="35">ch<pos:position pos:line="1097" pos:column="37"/></name><operator pos:line="1097" pos:column="37">)<pos:position pos:line="1097" pos:column="38"/></operator></expr>?<pos:position pos:line="1097" pos:column="39"/></condition><then pos:line="1097" pos:column="39"> <expr><name pos:line="1097" pos:column="40">ch<pos:position pos:line="1097" pos:column="42"/></name></expr> <pos:position pos:line="1097" pos:column="43"/></then><else pos:line="1097" pos:column="43">: <expr><name pos:line="1097" pos:column="45">firstbyte<pos:position pos:line="1097" pos:column="54"/></name></expr></else></ternary></expr>;<pos:position pos:line="1097" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1098" pos:column="7">re<pos:position pos:line="1098" pos:column="9"/></name><operator pos:line="1098" pos:column="9">-&gt;<pos:position pos:line="1098" pos:column="14"/></operator><name pos:line="1098" pos:column="11">options<pos:position pos:line="1098" pos:column="18"/></name></name> <operator pos:line="1098" pos:column="19">|=<pos:position pos:line="1098" pos:column="21"/></operator> <name pos:line="1098" pos:column="22">PCRE_FIRSTSET<pos:position pos:line="1098" pos:column="35"/></name></expr>;<pos:position pos:line="1098" pos:column="36"/></expr_stmt>
      }<pos:position pos:line="1099" pos:column="8"/></block></then>
    <elseif pos:line="1100" pos:column="5">else <if pos:line="1100" pos:column="10">if <condition pos:line="1100" pos:column="13">(<expr><call><name pos:line="1100" pos:column="14">is_startline<pos:position pos:line="1100" pos:column="26"/></name><argument_list pos:line="1100" pos:column="26">(<argument><expr><name pos:line="1100" pos:column="27">codestart<pos:position pos:line="1100" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1100" pos:column="38">0<pos:position pos:line="1100" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="1100" pos:column="41">compile_block<pos:position pos:line="1100" pos:column="54"/></name><operator pos:line="1100" pos:column="54">.<pos:position pos:line="1100" pos:column="55"/></operator><name pos:line="1100" pos:column="55">backref_map<pos:position pos:line="1100" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="1100" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="1100" pos:column="68"/></condition><then pos:line="1100" pos:column="68">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="1101" pos:column="7">re<pos:position pos:line="1101" pos:column="9"/></name><operator pos:line="1101" pos:column="9">-&gt;<pos:position pos:line="1101" pos:column="14"/></operator><name pos:line="1101" pos:column="11">options<pos:position pos:line="1101" pos:column="18"/></name></name> <operator pos:line="1101" pos:column="19">|=<pos:position pos:line="1101" pos:column="21"/></operator> <name pos:line="1101" pos:column="22">PCRE_STARTLINE<pos:position pos:line="1101" pos:column="36"/></name></expr>;<pos:position pos:line="1101" pos:column="37"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="1102" pos:column="6"/></block></else></if>
  }<pos:position pos:line="1103" pos:column="4"/></block></then></if>

<comment type="block" pos:line="1105" pos:column="1">/* For an anchored pattern, we use the "required byte" only if it follows a
variable length item in the regex. Remove the caseless flag for non-caseable
bytes. */</comment>

<if pos:line="1109" pos:column="1">if <condition pos:line="1109" pos:column="4">(<expr><name pos:line="1109" pos:column="5">reqbyte<pos:position pos:line="1109" pos:column="12"/></name> <operator pos:line="1109" pos:column="13">&gt;=<pos:position pos:line="1109" pos:column="18"/></operator> <literal type="number" pos:line="1109" pos:column="16">0<pos:position pos:line="1109" pos:column="17"/></literal> <operator pos:line="1109" pos:column="18">&amp;&amp;<pos:position pos:line="1109" pos:column="28"/></operator>
     <operator pos:line="1110" pos:column="6">(<pos:position pos:line="1110" pos:column="7"/></operator><operator pos:line="1110" pos:column="7">(<pos:position pos:line="1110" pos:column="8"/></operator><name><name pos:line="1110" pos:column="8">re<pos:position pos:line="1110" pos:column="10"/></name><operator pos:line="1110" pos:column="10">-&gt;<pos:position pos:line="1110" pos:column="15"/></operator><name pos:line="1110" pos:column="12">options<pos:position pos:line="1110" pos:column="19"/></name></name> <operator pos:line="1110" pos:column="20">&amp;<pos:position pos:line="1110" pos:column="25"/></operator> <name pos:line="1110" pos:column="22">PCRE_ANCHORED<pos:position pos:line="1110" pos:column="35"/></name><operator pos:line="1110" pos:column="35">)<pos:position pos:line="1110" pos:column="36"/></operator> <operator pos:line="1110" pos:column="37">==<pos:position pos:line="1110" pos:column="39"/></operator> <literal type="number" pos:line="1110" pos:column="40">0<pos:position pos:line="1110" pos:column="41"/></literal> <operator pos:line="1110" pos:column="42">||<pos:position pos:line="1110" pos:column="44"/></operator> <operator pos:line="1110" pos:column="45">(<pos:position pos:line="1110" pos:column="46"/></operator><name pos:line="1110" pos:column="46">reqbyte<pos:position pos:line="1110" pos:column="53"/></name> <operator pos:line="1110" pos:column="54">&amp;<pos:position pos:line="1110" pos:column="59"/></operator> <name pos:line="1110" pos:column="56">REQ_VARY<pos:position pos:line="1110" pos:column="64"/></name><operator pos:line="1110" pos:column="64">)<pos:position pos:line="1110" pos:column="65"/></operator> <operator pos:line="1110" pos:column="66">!=<pos:position pos:line="1110" pos:column="68"/></operator> <literal type="number" pos:line="1110" pos:column="69">0<pos:position pos:line="1110" pos:column="70"/></literal><operator pos:line="1110" pos:column="70">)<pos:position pos:line="1110" pos:column="71"/></operator></expr>)<pos:position pos:line="1110" pos:column="72"/></condition><then pos:line="1110" pos:column="72">
  <block pos:line="1111" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="1112" pos:column="3">int<pos:position pos:line="1112" pos:column="6"/></name></type> <name pos:line="1112" pos:column="7">ch<pos:position pos:line="1112" pos:column="9"/></name> <init pos:line="1112" pos:column="10">= <expr><name pos:line="1112" pos:column="12">reqbyte<pos:position pos:line="1112" pos:column="19"/></name> <operator pos:line="1112" pos:column="20">&amp;<pos:position pos:line="1112" pos:column="25"/></operator> <literal type="number" pos:line="1112" pos:column="22">255<pos:position pos:line="1112" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="1112" pos:column="26"/></decl_stmt>
  <expr_stmt><expr><name><name pos:line="1113" pos:column="3">re<pos:position pos:line="1113" pos:column="5"/></name><operator pos:line="1113" pos:column="5">-&gt;<pos:position pos:line="1113" pos:column="10"/></operator><name pos:line="1113" pos:column="7">req_byte<pos:position pos:line="1113" pos:column="15"/></name></name> <operator pos:line="1113" pos:column="16">=<pos:position pos:line="1113" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="1113" pos:column="18">(<pos:position pos:line="1113" pos:column="19"/></operator><operator pos:line="1113" pos:column="19">(<pos:position pos:line="1113" pos:column="20"/></operator><name pos:line="1113" pos:column="20">reqbyte<pos:position pos:line="1113" pos:column="27"/></name> <operator pos:line="1113" pos:column="28">&amp;<pos:position pos:line="1113" pos:column="33"/></operator> <name pos:line="1113" pos:column="30">REQ_CASELESS<pos:position pos:line="1113" pos:column="42"/></name><operator pos:line="1113" pos:column="42">)<pos:position pos:line="1113" pos:column="43"/></operator> <operator pos:line="1113" pos:column="44">!=<pos:position pos:line="1113" pos:column="46"/></operator> <literal type="number" pos:line="1113" pos:column="47">0<pos:position pos:line="1113" pos:column="48"/></literal> <operator pos:line="1113" pos:column="49">&amp;&amp;<pos:position pos:line="1113" pos:column="59"/></operator>
    <name><name pos:line="1114" pos:column="5">compile_block<pos:position pos:line="1114" pos:column="18"/></name><operator pos:line="1114" pos:column="18">.<pos:position pos:line="1114" pos:column="19"/></operator><name pos:line="1114" pos:column="19">fcc<pos:position pos:line="1114" pos:column="22"/></name><index pos:line="1114" pos:column="22">[<expr><name pos:line="1114" pos:column="23">ch<pos:position pos:line="1114" pos:column="25"/></name></expr>]<pos:position pos:line="1114" pos:column="26"/></index></name> <operator pos:line="1114" pos:column="27">==<pos:position pos:line="1114" pos:column="29"/></operator> <name pos:line="1114" pos:column="30">ch<pos:position pos:line="1114" pos:column="32"/></name><operator pos:line="1114" pos:column="32">)<pos:position pos:line="1114" pos:column="33"/></operator></expr>?<pos:position pos:line="1114" pos:column="34"/></condition><then pos:line="1114" pos:column="34"> <expr><operator pos:line="1114" pos:column="35">(<pos:position pos:line="1114" pos:column="36"/></operator><name pos:line="1114" pos:column="36">reqbyte<pos:position pos:line="1114" pos:column="43"/></name> <operator pos:line="1114" pos:column="44">&amp;<pos:position pos:line="1114" pos:column="49"/></operator> <operator pos:line="1114" pos:column="46">~<pos:position pos:line="1114" pos:column="47"/></operator><name pos:line="1114" pos:column="47">REQ_CASELESS<pos:position pos:line="1114" pos:column="59"/></name><operator pos:line="1114" pos:column="59">)<pos:position pos:line="1114" pos:column="60"/></operator></expr> <pos:position pos:line="1114" pos:column="61"/></then><else pos:line="1114" pos:column="61">: <expr><name pos:line="1114" pos:column="63">reqbyte<pos:position pos:line="1114" pos:column="70"/></name></expr></else></ternary></expr>;<pos:position pos:line="1114" pos:column="71"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="1115" pos:column="3">re<pos:position pos:line="1115" pos:column="5"/></name><operator pos:line="1115" pos:column="5">-&gt;<pos:position pos:line="1115" pos:column="10"/></operator><name pos:line="1115" pos:column="7">options<pos:position pos:line="1115" pos:column="14"/></name></name> <operator pos:line="1115" pos:column="15">|=<pos:position pos:line="1115" pos:column="17"/></operator> <name pos:line="1115" pos:column="18">PCRE_REQCHSET<pos:position pos:line="1115" pos:column="31"/></name></expr>;<pos:position pos:line="1115" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="1116" pos:column="4"/></block></then></if>

<comment type="block" pos:line="1118" pos:column="1">/* Print out the compiled data for debugging */</comment>

<cpp:ifdef pos:line="1120" pos:column="1">#<cpp:directive pos:line="1120" pos:column="2">ifdef<pos:position pos:line="1120" pos:column="7"/></cpp:directive> <name pos:line="1120" pos:column="8">DEBUG<pos:position pos:line="1120" pos:column="13"/></name></cpp:ifdef>

<expr_stmt><expr><call><name pos:line="1122" pos:column="1">printf<pos:position pos:line="1122" pos:column="7"/></name><argument_list pos:line="1122" pos:column="7">(<argument><expr><literal type="string" pos:line="1122" pos:column="8">"Length = %d top_bracket = %d top_backref = %d\n"<pos:position pos:line="1122" pos:column="57"/></literal></expr></argument>,
  <argument><expr><name pos:line="1123" pos:column="3">length<pos:position pos:line="1123" pos:column="9"/></name></expr></argument>, <argument><expr><name><name pos:line="1123" pos:column="11">re<pos:position pos:line="1123" pos:column="13"/></name><operator pos:line="1123" pos:column="13">-&gt;<pos:position pos:line="1123" pos:column="18"/></operator><name pos:line="1123" pos:column="15">top_bracket<pos:position pos:line="1123" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1123" pos:column="28">re<pos:position pos:line="1123" pos:column="30"/></name><operator pos:line="1123" pos:column="30">-&gt;<pos:position pos:line="1123" pos:column="35"/></operator><name pos:line="1123" pos:column="32">top_backref<pos:position pos:line="1123" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="1123" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="1123" pos:column="45"/></expr_stmt>

<if pos:line="1125" pos:column="1">if <condition pos:line="1125" pos:column="4">(<expr><name><name pos:line="1125" pos:column="5">re<pos:position pos:line="1125" pos:column="7"/></name><operator pos:line="1125" pos:column="7">-&gt;<pos:position pos:line="1125" pos:column="12"/></operator><name pos:line="1125" pos:column="9">options<pos:position pos:line="1125" pos:column="16"/></name></name> <operator pos:line="1125" pos:column="17">!=<pos:position pos:line="1125" pos:column="19"/></operator> <literal type="number" pos:line="1125" pos:column="20">0<pos:position pos:line="1125" pos:column="21"/></literal></expr>)<pos:position pos:line="1125" pos:column="22"/></condition><then pos:line="1125" pos:column="22">
  <block pos:line="1126" pos:column="3">{
  <expr_stmt><expr><call><name pos:line="1127" pos:column="3">printf<pos:position pos:line="1127" pos:column="9"/></name><argument_list pos:line="1127" pos:column="9">(<argument><expr><literal type="string" pos:line="1127" pos:column="10">"%s%s%s%s%s%s%s%s%s%s\n"<pos:position pos:line="1127" pos:column="34"/></literal></expr></argument>,
    <argument><expr><ternary><condition><expr><operator pos:line="1128" pos:column="5">(<pos:position pos:line="1128" pos:column="6"/></operator><operator pos:line="1128" pos:column="6">(<pos:position pos:line="1128" pos:column="7"/></operator><name><name pos:line="1128" pos:column="7">re<pos:position pos:line="1128" pos:column="9"/></name><operator pos:line="1128" pos:column="9">-&gt;<pos:position pos:line="1128" pos:column="14"/></operator><name pos:line="1128" pos:column="11">options<pos:position pos:line="1128" pos:column="18"/></name></name> <operator pos:line="1128" pos:column="19">&amp;<pos:position pos:line="1128" pos:column="24"/></operator> <name pos:line="1128" pos:column="21">PCRE_NOPARTIAL<pos:position pos:line="1128" pos:column="35"/></name><operator pos:line="1128" pos:column="35">)<pos:position pos:line="1128" pos:column="36"/></operator> <operator pos:line="1128" pos:column="37">!=<pos:position pos:line="1128" pos:column="39"/></operator> <literal type="number" pos:line="1128" pos:column="40">0<pos:position pos:line="1128" pos:column="41"/></literal><operator pos:line="1128" pos:column="41">)<pos:position pos:line="1128" pos:column="42"/></operator></expr>?<pos:position pos:line="1128" pos:column="43"/></condition><then pos:line="1128" pos:column="43"> <expr><literal type="string" pos:line="1128" pos:column="44">"nopartial "<pos:position pos:line="1128" pos:column="56"/></literal></expr> <pos:position pos:line="1128" pos:column="57"/></then><else pos:line="1128" pos:column="57">: <expr><literal type="string" pos:line="1128" pos:column="59">""<pos:position pos:line="1128" pos:column="61"/></literal></expr></else></ternary></expr></argument>,
    <argument><expr><ternary><condition><expr><operator pos:line="1129" pos:column="5">(<pos:position pos:line="1129" pos:column="6"/></operator><operator pos:line="1129" pos:column="6">(<pos:position pos:line="1129" pos:column="7"/></operator><name><name pos:line="1129" pos:column="7">re<pos:position pos:line="1129" pos:column="9"/></name><operator pos:line="1129" pos:column="9">-&gt;<pos:position pos:line="1129" pos:column="14"/></operator><name pos:line="1129" pos:column="11">options<pos:position pos:line="1129" pos:column="18"/></name></name> <operator pos:line="1129" pos:column="19">&amp;<pos:position pos:line="1129" pos:column="24"/></operator> <name pos:line="1129" pos:column="21">PCRE_ANCHORED<pos:position pos:line="1129" pos:column="34"/></name><operator pos:line="1129" pos:column="34">)<pos:position pos:line="1129" pos:column="35"/></operator> <operator pos:line="1129" pos:column="36">!=<pos:position pos:line="1129" pos:column="38"/></operator> <literal type="number" pos:line="1129" pos:column="39">0<pos:position pos:line="1129" pos:column="40"/></literal><operator pos:line="1129" pos:column="40">)<pos:position pos:line="1129" pos:column="41"/></operator></expr>?<pos:position pos:line="1129" pos:column="42"/></condition><then pos:line="1129" pos:column="42"> <expr><literal type="string" pos:line="1129" pos:column="43">"anchored "<pos:position pos:line="1129" pos:column="54"/></literal></expr> <pos:position pos:line="1129" pos:column="55"/></then><else pos:line="1129" pos:column="55">: <expr><literal type="string" pos:line="1129" pos:column="57">""<pos:position pos:line="1129" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
    <argument><expr><ternary><condition><expr><operator pos:line="1130" pos:column="5">(<pos:position pos:line="1130" pos:column="6"/></operator><operator pos:line="1130" pos:column="6">(<pos:position pos:line="1130" pos:column="7"/></operator><name><name pos:line="1130" pos:column="7">re<pos:position pos:line="1130" pos:column="9"/></name><operator pos:line="1130" pos:column="9">-&gt;<pos:position pos:line="1130" pos:column="14"/></operator><name pos:line="1130" pos:column="11">options<pos:position pos:line="1130" pos:column="18"/></name></name> <operator pos:line="1130" pos:column="19">&amp;<pos:position pos:line="1130" pos:column="24"/></operator> <name pos:line="1130" pos:column="21">PCRE_CASELESS<pos:position pos:line="1130" pos:column="34"/></name><operator pos:line="1130" pos:column="34">)<pos:position pos:line="1130" pos:column="35"/></operator> <operator pos:line="1130" pos:column="36">!=<pos:position pos:line="1130" pos:column="38"/></operator> <literal type="number" pos:line="1130" pos:column="39">0<pos:position pos:line="1130" pos:column="40"/></literal><operator pos:line="1130" pos:column="40">)<pos:position pos:line="1130" pos:column="41"/></operator></expr>?<pos:position pos:line="1130" pos:column="42"/></condition><then pos:line="1130" pos:column="42"> <expr><literal type="string" pos:line="1130" pos:column="43">"caseless "<pos:position pos:line="1130" pos:column="54"/></literal></expr> <pos:position pos:line="1130" pos:column="55"/></then><else pos:line="1130" pos:column="55">: <expr><literal type="string" pos:line="1130" pos:column="57">""<pos:position pos:line="1130" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
    <argument><expr><ternary><condition><expr><operator pos:line="1131" pos:column="5">(<pos:position pos:line="1131" pos:column="6"/></operator><operator pos:line="1131" pos:column="6">(<pos:position pos:line="1131" pos:column="7"/></operator><name><name pos:line="1131" pos:column="7">re<pos:position pos:line="1131" pos:column="9"/></name><operator pos:line="1131" pos:column="9">-&gt;<pos:position pos:line="1131" pos:column="14"/></operator><name pos:line="1131" pos:column="11">options<pos:position pos:line="1131" pos:column="18"/></name></name> <operator pos:line="1131" pos:column="19">&amp;<pos:position pos:line="1131" pos:column="24"/></operator> <name pos:line="1131" pos:column="21">PCRE_ICHANGED<pos:position pos:line="1131" pos:column="34"/></name><operator pos:line="1131" pos:column="34">)<pos:position pos:line="1131" pos:column="35"/></operator> <operator pos:line="1131" pos:column="36">!=<pos:position pos:line="1131" pos:column="38"/></operator> <literal type="number" pos:line="1131" pos:column="39">0<pos:position pos:line="1131" pos:column="40"/></literal><operator pos:line="1131" pos:column="40">)<pos:position pos:line="1131" pos:column="41"/></operator></expr>?<pos:position pos:line="1131" pos:column="42"/></condition><then pos:line="1131" pos:column="42"> <expr><literal type="string" pos:line="1131" pos:column="43">"case state changed "<pos:position pos:line="1131" pos:column="64"/></literal></expr> <pos:position pos:line="1131" pos:column="65"/></then><else pos:line="1131" pos:column="65">: <expr><literal type="string" pos:line="1131" pos:column="67">""<pos:position pos:line="1131" pos:column="69"/></literal></expr></else></ternary></expr></argument>,
    <argument><expr><ternary><condition><expr><operator pos:line="1132" pos:column="5">(<pos:position pos:line="1132" pos:column="6"/></operator><operator pos:line="1132" pos:column="6">(<pos:position pos:line="1132" pos:column="7"/></operator><name><name pos:line="1132" pos:column="7">re<pos:position pos:line="1132" pos:column="9"/></name><operator pos:line="1132" pos:column="9">-&gt;<pos:position pos:line="1132" pos:column="14"/></operator><name pos:line="1132" pos:column="11">options<pos:position pos:line="1132" pos:column="18"/></name></name> <operator pos:line="1132" pos:column="19">&amp;<pos:position pos:line="1132" pos:column="24"/></operator> <name pos:line="1132" pos:column="21">PCRE_EXTENDED<pos:position pos:line="1132" pos:column="34"/></name><operator pos:line="1132" pos:column="34">)<pos:position pos:line="1132" pos:column="35"/></operator> <operator pos:line="1132" pos:column="36">!=<pos:position pos:line="1132" pos:column="38"/></operator> <literal type="number" pos:line="1132" pos:column="39">0<pos:position pos:line="1132" pos:column="40"/></literal><operator pos:line="1132" pos:column="40">)<pos:position pos:line="1132" pos:column="41"/></operator></expr>?<pos:position pos:line="1132" pos:column="42"/></condition><then pos:line="1132" pos:column="42"> <expr><literal type="string" pos:line="1132" pos:column="43">"extended "<pos:position pos:line="1132" pos:column="54"/></literal></expr> <pos:position pos:line="1132" pos:column="55"/></then><else pos:line="1132" pos:column="55">: <expr><literal type="string" pos:line="1132" pos:column="57">""<pos:position pos:line="1132" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
    <argument><expr><ternary><condition><expr><operator pos:line="1133" pos:column="5">(<pos:position pos:line="1133" pos:column="6"/></operator><operator pos:line="1133" pos:column="6">(<pos:position pos:line="1133" pos:column="7"/></operator><name><name pos:line="1133" pos:column="7">re<pos:position pos:line="1133" pos:column="9"/></name><operator pos:line="1133" pos:column="9">-&gt;<pos:position pos:line="1133" pos:column="14"/></operator><name pos:line="1133" pos:column="11">options<pos:position pos:line="1133" pos:column="18"/></name></name> <operator pos:line="1133" pos:column="19">&amp;<pos:position pos:line="1133" pos:column="24"/></operator> <name pos:line="1133" pos:column="21">PCRE_MULTILINE<pos:position pos:line="1133" pos:column="35"/></name><operator pos:line="1133" pos:column="35">)<pos:position pos:line="1133" pos:column="36"/></operator> <operator pos:line="1133" pos:column="37">!=<pos:position pos:line="1133" pos:column="39"/></operator> <literal type="number" pos:line="1133" pos:column="40">0<pos:position pos:line="1133" pos:column="41"/></literal><operator pos:line="1133" pos:column="41">)<pos:position pos:line="1133" pos:column="42"/></operator></expr>?<pos:position pos:line="1133" pos:column="43"/></condition><then pos:line="1133" pos:column="43"> <expr><literal type="string" pos:line="1133" pos:column="44">"multiline "<pos:position pos:line="1133" pos:column="56"/></literal></expr> <pos:position pos:line="1133" pos:column="57"/></then><else pos:line="1133" pos:column="57">: <expr><literal type="string" pos:line="1133" pos:column="59">""<pos:position pos:line="1133" pos:column="61"/></literal></expr></else></ternary></expr></argument>,
    <argument><expr><ternary><condition><expr><operator pos:line="1134" pos:column="5">(<pos:position pos:line="1134" pos:column="6"/></operator><operator pos:line="1134" pos:column="6">(<pos:position pos:line="1134" pos:column="7"/></operator><name><name pos:line="1134" pos:column="7">re<pos:position pos:line="1134" pos:column="9"/></name><operator pos:line="1134" pos:column="9">-&gt;<pos:position pos:line="1134" pos:column="14"/></operator><name pos:line="1134" pos:column="11">options<pos:position pos:line="1134" pos:column="18"/></name></name> <operator pos:line="1134" pos:column="19">&amp;<pos:position pos:line="1134" pos:column="24"/></operator> <name pos:line="1134" pos:column="21">PCRE_DOTALL<pos:position pos:line="1134" pos:column="32"/></name><operator pos:line="1134" pos:column="32">)<pos:position pos:line="1134" pos:column="33"/></operator> <operator pos:line="1134" pos:column="34">!=<pos:position pos:line="1134" pos:column="36"/></operator> <literal type="number" pos:line="1134" pos:column="37">0<pos:position pos:line="1134" pos:column="38"/></literal><operator pos:line="1134" pos:column="38">)<pos:position pos:line="1134" pos:column="39"/></operator></expr>?<pos:position pos:line="1134" pos:column="40"/></condition><then pos:line="1134" pos:column="40"> <expr><literal type="string" pos:line="1134" pos:column="41">"dotall "<pos:position pos:line="1134" pos:column="50"/></literal></expr> <pos:position pos:line="1134" pos:column="51"/></then><else pos:line="1134" pos:column="51">: <expr><literal type="string" pos:line="1134" pos:column="53">""<pos:position pos:line="1134" pos:column="55"/></literal></expr></else></ternary></expr></argument>,
    <argument><expr><ternary><condition><expr><operator pos:line="1135" pos:column="5">(<pos:position pos:line="1135" pos:column="6"/></operator><operator pos:line="1135" pos:column="6">(<pos:position pos:line="1135" pos:column="7"/></operator><name><name pos:line="1135" pos:column="7">re<pos:position pos:line="1135" pos:column="9"/></name><operator pos:line="1135" pos:column="9">-&gt;<pos:position pos:line="1135" pos:column="14"/></operator><name pos:line="1135" pos:column="11">options<pos:position pos:line="1135" pos:column="18"/></name></name> <operator pos:line="1135" pos:column="19">&amp;<pos:position pos:line="1135" pos:column="24"/></operator> <name pos:line="1135" pos:column="21">PCRE_DOLLAR_ENDONLY<pos:position pos:line="1135" pos:column="40"/></name><operator pos:line="1135" pos:column="40">)<pos:position pos:line="1135" pos:column="41"/></operator> <operator pos:line="1135" pos:column="42">!=<pos:position pos:line="1135" pos:column="44"/></operator> <literal type="number" pos:line="1135" pos:column="45">0<pos:position pos:line="1135" pos:column="46"/></literal><operator pos:line="1135" pos:column="46">)<pos:position pos:line="1135" pos:column="47"/></operator></expr>?<pos:position pos:line="1135" pos:column="48"/></condition><then pos:line="1135" pos:column="48"> <expr><literal type="string" pos:line="1135" pos:column="49">"endonly "<pos:position pos:line="1135" pos:column="59"/></literal></expr> <pos:position pos:line="1135" pos:column="60"/></then><else pos:line="1135" pos:column="60">: <expr><literal type="string" pos:line="1135" pos:column="62">""<pos:position pos:line="1135" pos:column="64"/></literal></expr></else></ternary></expr></argument>,
    <argument><expr><ternary><condition><expr><operator pos:line="1136" pos:column="5">(<pos:position pos:line="1136" pos:column="6"/></operator><operator pos:line="1136" pos:column="6">(<pos:position pos:line="1136" pos:column="7"/></operator><name><name pos:line="1136" pos:column="7">re<pos:position pos:line="1136" pos:column="9"/></name><operator pos:line="1136" pos:column="9">-&gt;<pos:position pos:line="1136" pos:column="14"/></operator><name pos:line="1136" pos:column="11">options<pos:position pos:line="1136" pos:column="18"/></name></name> <operator pos:line="1136" pos:column="19">&amp;<pos:position pos:line="1136" pos:column="24"/></operator> <name pos:line="1136" pos:column="21">PCRE_EXTRA<pos:position pos:line="1136" pos:column="31"/></name><operator pos:line="1136" pos:column="31">)<pos:position pos:line="1136" pos:column="32"/></operator> <operator pos:line="1136" pos:column="33">!=<pos:position pos:line="1136" pos:column="35"/></operator> <literal type="number" pos:line="1136" pos:column="36">0<pos:position pos:line="1136" pos:column="37"/></literal><operator pos:line="1136" pos:column="37">)<pos:position pos:line="1136" pos:column="38"/></operator></expr>?<pos:position pos:line="1136" pos:column="39"/></condition><then pos:line="1136" pos:column="39"> <expr><literal type="string" pos:line="1136" pos:column="40">"extra "<pos:position pos:line="1136" pos:column="48"/></literal></expr> <pos:position pos:line="1136" pos:column="49"/></then><else pos:line="1136" pos:column="49">: <expr><literal type="string" pos:line="1136" pos:column="51">""<pos:position pos:line="1136" pos:column="53"/></literal></expr></else></ternary></expr></argument>,
    <argument><expr><ternary><condition><expr><operator pos:line="1137" pos:column="5">(<pos:position pos:line="1137" pos:column="6"/></operator><operator pos:line="1137" pos:column="6">(<pos:position pos:line="1137" pos:column="7"/></operator><name><name pos:line="1137" pos:column="7">re<pos:position pos:line="1137" pos:column="9"/></name><operator pos:line="1137" pos:column="9">-&gt;<pos:position pos:line="1137" pos:column="14"/></operator><name pos:line="1137" pos:column="11">options<pos:position pos:line="1137" pos:column="18"/></name></name> <operator pos:line="1137" pos:column="19">&amp;<pos:position pos:line="1137" pos:column="24"/></operator> <name pos:line="1137" pos:column="21">PCRE_UNGREEDY<pos:position pos:line="1137" pos:column="34"/></name><operator pos:line="1137" pos:column="34">)<pos:position pos:line="1137" pos:column="35"/></operator> <operator pos:line="1137" pos:column="36">!=<pos:position pos:line="1137" pos:column="38"/></operator> <literal type="number" pos:line="1137" pos:column="39">0<pos:position pos:line="1137" pos:column="40"/></literal><operator pos:line="1137" pos:column="40">)<pos:position pos:line="1137" pos:column="41"/></operator></expr>?<pos:position pos:line="1137" pos:column="42"/></condition><then pos:line="1137" pos:column="42"> <expr><literal type="string" pos:line="1137" pos:column="43">"ungreedy "<pos:position pos:line="1137" pos:column="54"/></literal></expr> <pos:position pos:line="1137" pos:column="55"/></then><else pos:line="1137" pos:column="55">: <expr><literal type="string" pos:line="1137" pos:column="57">""<pos:position pos:line="1137" pos:column="59"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="1137" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="1137" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="1138" pos:column="4"/></block></then></if>

<if pos:line="1140" pos:column="1">if <condition pos:line="1140" pos:column="4">(<expr><operator pos:line="1140" pos:column="5">(<pos:position pos:line="1140" pos:column="6"/></operator><name><name pos:line="1140" pos:column="6">re<pos:position pos:line="1140" pos:column="8"/></name><operator pos:line="1140" pos:column="8">-&gt;<pos:position pos:line="1140" pos:column="13"/></operator><name pos:line="1140" pos:column="10">options<pos:position pos:line="1140" pos:column="17"/></name></name> <operator pos:line="1140" pos:column="18">&amp;<pos:position pos:line="1140" pos:column="23"/></operator> <name pos:line="1140" pos:column="20">PCRE_FIRSTSET<pos:position pos:line="1140" pos:column="33"/></name><operator pos:line="1140" pos:column="33">)<pos:position pos:line="1140" pos:column="34"/></operator> <operator pos:line="1140" pos:column="35">!=<pos:position pos:line="1140" pos:column="37"/></operator> <literal type="number" pos:line="1140" pos:column="38">0<pos:position pos:line="1140" pos:column="39"/></literal></expr>)<pos:position pos:line="1140" pos:column="40"/></condition><then pos:line="1140" pos:column="40">
  <block pos:line="1141" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="1142" pos:column="3">int<pos:position pos:line="1142" pos:column="6"/></name></type> <name pos:line="1142" pos:column="7">ch<pos:position pos:line="1142" pos:column="9"/></name> <init pos:line="1142" pos:column="10">= <expr><name><name pos:line="1142" pos:column="12">re<pos:position pos:line="1142" pos:column="14"/></name><operator pos:line="1142" pos:column="14">-&gt;<pos:position pos:line="1142" pos:column="19"/></operator><name pos:line="1142" pos:column="16">first_byte<pos:position pos:line="1142" pos:column="26"/></name></name> <operator pos:line="1142" pos:column="27">&amp;<pos:position pos:line="1142" pos:column="32"/></operator> <literal type="number" pos:line="1142" pos:column="29">255<pos:position pos:line="1142" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="1142" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="1143" pos:column="3">const<pos:position pos:line="1143" pos:column="8"/></specifier> <name pos:line="1143" pos:column="9">char<pos:position pos:line="1143" pos:column="13"/></name> <modifier pos:line="1143" pos:column="14">*<pos:position pos:line="1143" pos:column="15"/></modifier></type><name pos:line="1143" pos:column="15">caseless<pos:position pos:line="1143" pos:column="23"/></name> <init pos:line="1143" pos:column="24">= <expr><ternary><condition><expr><operator pos:line="1143" pos:column="26">(<pos:position pos:line="1143" pos:column="27"/></operator><operator pos:line="1143" pos:column="27">(<pos:position pos:line="1143" pos:column="28"/></operator><name><name pos:line="1143" pos:column="28">re<pos:position pos:line="1143" pos:column="30"/></name><operator pos:line="1143" pos:column="30">-&gt;<pos:position pos:line="1143" pos:column="35"/></operator><name pos:line="1143" pos:column="32">first_byte<pos:position pos:line="1143" pos:column="42"/></name></name> <operator pos:line="1143" pos:column="43">&amp;<pos:position pos:line="1143" pos:column="48"/></operator> <name pos:line="1143" pos:column="45">REQ_CASELESS<pos:position pos:line="1143" pos:column="57"/></name><operator pos:line="1143" pos:column="57">)<pos:position pos:line="1143" pos:column="58"/></operator> <operator pos:line="1143" pos:column="59">==<pos:position pos:line="1143" pos:column="61"/></operator> <literal type="number" pos:line="1143" pos:column="62">0<pos:position pos:line="1143" pos:column="63"/></literal><operator pos:line="1143" pos:column="63">)<pos:position pos:line="1143" pos:column="64"/></operator></expr>?<pos:position pos:line="1143" pos:column="65"/></condition><then pos:line="1143" pos:column="65"> <expr><literal type="string" pos:line="1143" pos:column="66">""<pos:position pos:line="1143" pos:column="68"/></literal></expr> <pos:position pos:line="1143" pos:column="69"/></then><else pos:line="1143" pos:column="69">: <expr><literal type="string" pos:line="1143" pos:column="71">" (caseless)"<pos:position pos:line="1143" pos:column="84"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="1143" pos:column="85"/></decl_stmt>
  <if pos:line="1144" pos:column="3">if <condition pos:line="1144" pos:column="6">(<expr><call><name pos:line="1144" pos:column="7">isprint<pos:position pos:line="1144" pos:column="14"/></name><argument_list pos:line="1144" pos:column="14">(<argument><expr><name pos:line="1144" pos:column="15">ch<pos:position pos:line="1144" pos:column="17"/></name></expr></argument>)<pos:position pos:line="1144" pos:column="18"/></argument_list></call></expr>)<pos:position pos:line="1144" pos:column="19"/></condition><then pos:line="1144" pos:column="19"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1144" pos:column="20">printf<pos:position pos:line="1144" pos:column="26"/></name><argument_list pos:line="1144" pos:column="26">(<argument><expr><literal type="string" pos:line="1144" pos:column="27">"First char = %c%s\n"<pos:position pos:line="1144" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="1144" pos:column="50">ch<pos:position pos:line="1144" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1144" pos:column="54">caseless<pos:position pos:line="1144" pos:column="62"/></name></expr></argument>)<pos:position pos:line="1144" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="1144" pos:column="64"/></expr_stmt></block></then>
    <else pos:line="1145" pos:column="5">else <block type="pseudo"><expr_stmt><expr><call><name pos:line="1145" pos:column="10">printf<pos:position pos:line="1145" pos:column="16"/></name><argument_list pos:line="1145" pos:column="16">(<argument><expr><literal type="string" pos:line="1145" pos:column="17">"First char = \\x%02x%s\n"<pos:position pos:line="1145" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="1145" pos:column="45">ch<pos:position pos:line="1145" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="1145" pos:column="49">caseless<pos:position pos:line="1145" pos:column="57"/></name></expr></argument>)<pos:position pos:line="1145" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1145" pos:column="59"/></expr_stmt></block></else></if>
  }<pos:position pos:line="1146" pos:column="4"/></block></then></if>

<if pos:line="1148" pos:column="1">if <condition pos:line="1148" pos:column="4">(<expr><operator pos:line="1148" pos:column="5">(<pos:position pos:line="1148" pos:column="6"/></operator><name><name pos:line="1148" pos:column="6">re<pos:position pos:line="1148" pos:column="8"/></name><operator pos:line="1148" pos:column="8">-&gt;<pos:position pos:line="1148" pos:column="13"/></operator><name pos:line="1148" pos:column="10">options<pos:position pos:line="1148" pos:column="17"/></name></name> <operator pos:line="1148" pos:column="18">&amp;<pos:position pos:line="1148" pos:column="23"/></operator> <name pos:line="1148" pos:column="20">PCRE_REQCHSET<pos:position pos:line="1148" pos:column="33"/></name><operator pos:line="1148" pos:column="33">)<pos:position pos:line="1148" pos:column="34"/></operator> <operator pos:line="1148" pos:column="35">!=<pos:position pos:line="1148" pos:column="37"/></operator> <literal type="number" pos:line="1148" pos:column="38">0<pos:position pos:line="1148" pos:column="39"/></literal></expr>)<pos:position pos:line="1148" pos:column="40"/></condition><then pos:line="1148" pos:column="40">
  <block pos:line="1149" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="1150" pos:column="3">int<pos:position pos:line="1150" pos:column="6"/></name></type> <name pos:line="1150" pos:column="7">ch<pos:position pos:line="1150" pos:column="9"/></name> <init pos:line="1150" pos:column="10">= <expr><name><name pos:line="1150" pos:column="12">re<pos:position pos:line="1150" pos:column="14"/></name><operator pos:line="1150" pos:column="14">-&gt;<pos:position pos:line="1150" pos:column="19"/></operator><name pos:line="1150" pos:column="16">req_byte<pos:position pos:line="1150" pos:column="24"/></name></name> <operator pos:line="1150" pos:column="25">&amp;<pos:position pos:line="1150" pos:column="30"/></operator> <literal type="number" pos:line="1150" pos:column="27">255<pos:position pos:line="1150" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="1150" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="1151" pos:column="3">const<pos:position pos:line="1151" pos:column="8"/></specifier> <name pos:line="1151" pos:column="9">char<pos:position pos:line="1151" pos:column="13"/></name> <modifier pos:line="1151" pos:column="14">*<pos:position pos:line="1151" pos:column="15"/></modifier></type><name pos:line="1151" pos:column="15">caseless<pos:position pos:line="1151" pos:column="23"/></name> <init pos:line="1151" pos:column="24">= <expr><ternary><condition><expr><operator pos:line="1151" pos:column="26">(<pos:position pos:line="1151" pos:column="27"/></operator><operator pos:line="1151" pos:column="27">(<pos:position pos:line="1151" pos:column="28"/></operator><name><name pos:line="1151" pos:column="28">re<pos:position pos:line="1151" pos:column="30"/></name><operator pos:line="1151" pos:column="30">-&gt;<pos:position pos:line="1151" pos:column="35"/></operator><name pos:line="1151" pos:column="32">req_byte<pos:position pos:line="1151" pos:column="40"/></name></name> <operator pos:line="1151" pos:column="41">&amp;<pos:position pos:line="1151" pos:column="46"/></operator> <name pos:line="1151" pos:column="43">REQ_CASELESS<pos:position pos:line="1151" pos:column="55"/></name><operator pos:line="1151" pos:column="55">)<pos:position pos:line="1151" pos:column="56"/></operator> <operator pos:line="1151" pos:column="57">==<pos:position pos:line="1151" pos:column="59"/></operator> <literal type="number" pos:line="1151" pos:column="60">0<pos:position pos:line="1151" pos:column="61"/></literal><operator pos:line="1151" pos:column="61">)<pos:position pos:line="1151" pos:column="62"/></operator></expr>?<pos:position pos:line="1151" pos:column="63"/></condition><then pos:line="1151" pos:column="63"> <expr><literal type="string" pos:line="1151" pos:column="64">""<pos:position pos:line="1151" pos:column="66"/></literal></expr> <pos:position pos:line="1151" pos:column="67"/></then><else pos:line="1151" pos:column="67">: <expr><literal type="string" pos:line="1151" pos:column="69">" (caseless)"<pos:position pos:line="1151" pos:column="82"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="1151" pos:column="83"/></decl_stmt>
  <if pos:line="1152" pos:column="3">if <condition pos:line="1152" pos:column="6">(<expr><call><name pos:line="1152" pos:column="7">isprint<pos:position pos:line="1152" pos:column="14"/></name><argument_list pos:line="1152" pos:column="14">(<argument><expr><name pos:line="1152" pos:column="15">ch<pos:position pos:line="1152" pos:column="17"/></name></expr></argument>)<pos:position pos:line="1152" pos:column="18"/></argument_list></call></expr>)<pos:position pos:line="1152" pos:column="19"/></condition><then pos:line="1152" pos:column="19"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1152" pos:column="20">printf<pos:position pos:line="1152" pos:column="26"/></name><argument_list pos:line="1152" pos:column="26">(<argument><expr><literal type="string" pos:line="1152" pos:column="27">"Req char = %c%s\n"<pos:position pos:line="1152" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="1152" pos:column="48">ch<pos:position pos:line="1152" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1152" pos:column="52">caseless<pos:position pos:line="1152" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1152" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1152" pos:column="62"/></expr_stmt></block></then>
    <else pos:line="1153" pos:column="5">else <block type="pseudo"><expr_stmt><expr><call><name pos:line="1153" pos:column="10">printf<pos:position pos:line="1153" pos:column="16"/></name><argument_list pos:line="1153" pos:column="16">(<argument><expr><literal type="string" pos:line="1153" pos:column="17">"Req char = \\x%02x%s\n"<pos:position pos:line="1153" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="1153" pos:column="43">ch<pos:position pos:line="1153" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="1153" pos:column="47">caseless<pos:position pos:line="1153" pos:column="55"/></name></expr></argument>)<pos:position pos:line="1153" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="1153" pos:column="57"/></expr_stmt></block></else></if>
  }<pos:position pos:line="1154" pos:column="4"/></block></then></if>

<expr_stmt><expr><call><name pos:line="1156" pos:column="1">print_internals<pos:position pos:line="1156" pos:column="16"/></name><argument_list pos:line="1156" pos:column="16">(<argument><expr><name pos:line="1156" pos:column="17">re<pos:position pos:line="1156" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="1156" pos:column="21">stdout<pos:position pos:line="1156" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1156" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1156" pos:column="29"/></expr_stmt>

<comment type="block" pos:line="1158" pos:column="1">/* This check is done here in the debugging case so that the code that
was compiled can be seen. */</comment>

<if pos:line="1161" pos:column="1">if <condition pos:line="1161" pos:column="4">(<expr><name pos:line="1161" pos:column="5">code<pos:position pos:line="1161" pos:column="9"/></name> <operator pos:line="1161" pos:column="10">-<pos:position pos:line="1161" pos:column="11"/></operator> <name pos:line="1161" pos:column="12">codestart<pos:position pos:line="1161" pos:column="21"/></name> <operator pos:line="1161" pos:column="22">&gt;<pos:position pos:line="1161" pos:column="26"/></operator> <name pos:line="1161" pos:column="24">length<pos:position pos:line="1161" pos:column="30"/></name></expr>)<pos:position pos:line="1161" pos:column="31"/></condition><then pos:line="1161" pos:column="31">
  <block pos:line="1162" pos:column="3">{
  <expr_stmt><expr><operator pos:line="1163" pos:column="3">*<pos:position pos:line="1163" pos:column="4"/></operator><name pos:line="1163" pos:column="4">errorptr<pos:position pos:line="1163" pos:column="12"/></name> <operator pos:line="1163" pos:column="13">=<pos:position pos:line="1163" pos:column="14"/></operator> <name pos:line="1163" pos:column="15">ERR23<pos:position pos:line="1163" pos:column="20"/></name></expr>;<pos:position pos:line="1163" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call pos:line="1164" pos:column="3">(<name pos:line="1164" pos:column="4">pcre_free<pos:position pos:line="1164" pos:column="13"/></name>)<argument_list pos:line="1164" pos:column="14">(<argument><expr><name pos:line="1164" pos:column="15">re<pos:position pos:line="1164" pos:column="17"/></name></expr></argument>)<pos:position pos:line="1164" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="1164" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="1165" pos:column="3">*<pos:position pos:line="1165" pos:column="4"/></operator><name pos:line="1165" pos:column="4">erroroffset<pos:position pos:line="1165" pos:column="15"/></name> <operator pos:line="1165" pos:column="16">=<pos:position pos:line="1165" pos:column="17"/></operator> <name pos:line="1165" pos:column="18">ptr<pos:position pos:line="1165" pos:column="21"/></name> <operator pos:line="1165" pos:column="22">-<pos:position pos:line="1165" pos:column="23"/></operator> <operator pos:line="1165" pos:column="24">(<pos:position pos:line="1165" pos:column="25"/></operator><name pos:line="1165" pos:column="25">uschar<pos:position pos:line="1165" pos:column="31"/></name> <operator pos:line="1165" pos:column="32">*<pos:position pos:line="1165" pos:column="33"/></operator><operator pos:line="1165" pos:column="33">)<pos:position pos:line="1165" pos:column="34"/></operator><name pos:line="1165" pos:column="34">pattern<pos:position pos:line="1165" pos:column="41"/></name></expr>;<pos:position pos:line="1165" pos:column="42"/></expr_stmt>
  <return pos:line="1166" pos:column="3">return <expr><name pos:line="1166" pos:column="10">NULL<pos:position pos:line="1166" pos:column="14"/></name></expr>;<pos:position pos:line="1166" pos:column="15"/></return>
  }<pos:position pos:line="1167" pos:column="4"/></block></then></if>
<cpp:endif pos:line="1168" pos:column="1">#<cpp:directive pos:line="1168" pos:column="2">endif<pos:position pos:line="1168" pos:column="7"/></cpp:directive></cpp:endif>

<return pos:line="1170" pos:column="1">return <expr><operator pos:line="1170" pos:column="8">(<pos:position pos:line="1170" pos:column="9"/></operator><name pos:line="1170" pos:column="9">pcre<pos:position pos:line="1170" pos:column="13"/></name> <operator pos:line="1170" pos:column="14">*<pos:position pos:line="1170" pos:column="15"/></operator><operator pos:line="1170" pos:column="15">)<pos:position pos:line="1170" pos:column="16"/></operator><name pos:line="1170" pos:column="16">re<pos:position pos:line="1170" pos:column="18"/></name></expr>;<pos:position pos:line="1170" pos:column="19"/></return>
}<pos:position pos:line="1171" pos:column="2"/></block></function></unit>

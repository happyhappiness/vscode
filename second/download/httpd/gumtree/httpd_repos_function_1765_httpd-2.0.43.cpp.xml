<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1765_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">ap_walk_config_sub<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">ap_directive_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">current<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="2" pos:column="39">cmd_parms<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">parms<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="3" pos:column="39">ap_conf_vector_t<pos:position pos:line="3" pos:column="55"/></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type><name pos:line="3" pos:column="57">section_vector<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="72"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">module<pos:position pos:line="5" pos:column="11"/></name> <modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type><name pos:line="5" pos:column="13">mod<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name pos:line="5" pos:column="19">ap_top_module<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>

    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><literal type="number" pos:line="7" pos:column="12">1<pos:position pos:line="7" pos:column="13"/></literal></expr>)<pos:position pos:line="7" pos:column="14"/></condition> <block pos:line="7" pos:column="15">{
        <decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">command_rec<pos:position pos:line="8" pos:column="26"/></name> <modifier pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></modifier></type><name pos:line="8" pos:column="28">cmd<pos:position pos:line="8" pos:column="31"/></name></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>

        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">cmd<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <call><name pos:line="10" pos:column="21">ap_find_command_in_modules<pos:position pos:line="10" pos:column="47"/></name><argument_list pos:line="10" pos:column="47">(<argument><expr><name><name pos:line="10" pos:column="48">current<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">-&gt;<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="57">directive<pos:position pos:line="10" pos:column="66"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="68">&amp;<pos:position pos:line="10" pos:column="73"/></operator><name pos:line="10" pos:column="69">mod<pos:position pos:line="10" pos:column="72"/></name></expr></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></call><operator pos:line="10" pos:column="73">)<pos:position pos:line="10" pos:column="74"/></operator></expr>)<pos:position pos:line="10" pos:column="75"/></condition><then pos:line="10" pos:column="75"> <block pos:line="10" pos:column="76">{
            <expr_stmt><expr><name><name pos:line="11" pos:column="13">parms<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">err_directive<pos:position pos:line="11" pos:column="33"/></name></name> <operator pos:line="11" pos:column="34">=<pos:position pos:line="11" pos:column="35"/></operator> <name pos:line="11" pos:column="36">current<pos:position pos:line="11" pos:column="43"/></name></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
            <return pos:line="12" pos:column="13">return <expr><call><name pos:line="12" pos:column="20">apr_pstrcat<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name><name pos:line="12" pos:column="32">parms<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">pool<pos:position pos:line="12" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="45">"Invalid command '"<pos:position pos:line="12" pos:column="64"/></literal></expr></argument>,
                               <argument><expr><name><name pos:line="13" pos:column="32">current<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">directive<pos:position pos:line="13" pos:column="50"/></name></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="14" pos:column="32">"', perhaps mis-spelled or defined by a module "<pos:position pos:line="14" pos:column="80"/></literal>
                               <literal type="string" pos:line="15" pos:column="32">"not included in the server configuration"<pos:position pos:line="15" pos:column="74"/></literal></expr></argument>,
                               <argument><expr><name pos:line="16" pos:column="32">NULL<pos:position pos:line="16" pos:column="36"/></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="38"/></return>
        }<pos:position pos:line="17" pos:column="10"/></block></then>
        <else pos:line="18" pos:column="9">else <block pos:line="18" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="19" pos:column="13">void<pos:position pos:line="19" pos:column="17"/></name> <modifier pos:line="19" pos:column="18">*<pos:position pos:line="19" pos:column="19"/></modifier></type><name pos:line="19" pos:column="19">dir_config<pos:position pos:line="19" pos:column="29"/></name> <init pos:line="19" pos:column="30">= <expr><call><name pos:line="19" pos:column="32">ap_set_config_vectors<pos:position pos:line="19" pos:column="53"/></name><argument_list pos:line="19" pos:column="53">(<argument><expr><name><name pos:line="19" pos:column="54">parms<pos:position pos:line="19" pos:column="59"/></name><operator pos:line="19" pos:column="59">-&gt;<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="61">server<pos:position pos:line="19" pos:column="67"/></name></name></expr></argument>,
                                                     <argument><expr><name pos:line="20" pos:column="54">section_vector<pos:position pos:line="20" pos:column="68"/></name></expr></argument>,
                                                     <argument><expr><name><name pos:line="21" pos:column="54">parms<pos:position pos:line="21" pos:column="59"/></name><operator pos:line="21" pos:column="59">-&gt;<pos:position pos:line="21" pos:column="64"/></operator><name pos:line="21" pos:column="61">path<pos:position pos:line="21" pos:column="65"/></name></name></expr></argument>,
                                                     <argument><expr><name pos:line="22" pos:column="54">mod<pos:position pos:line="22" pos:column="57"/></name></expr></argument>,
                                                     <argument><expr><name><name pos:line="23" pos:column="54">parms<pos:position pos:line="23" pos:column="59"/></name><operator pos:line="23" pos:column="59">-&gt;<pos:position pos:line="23" pos:column="64"/></operator><name pos:line="23" pos:column="61">pool<pos:position pos:line="23" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="67"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="24" pos:column="13">const<pos:position pos:line="24" pos:column="18"/></specifier> <name pos:line="24" pos:column="19">char<pos:position pos:line="24" pos:column="23"/></name> <modifier pos:line="24" pos:column="24">*<pos:position pos:line="24" pos:column="25"/></modifier></type><name pos:line="24" pos:column="25">retval<pos:position pos:line="24" pos:column="31"/></name></decl>;<pos:position pos:line="24" pos:column="32"/></decl_stmt>

            <comment type="block" pos:line="26" pos:column="13">/* Once was enough? */</comment>
            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<expr><name><name pos:line="27" pos:column="17">cmd<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">req_override<pos:position pos:line="27" pos:column="34"/></name></name> <operator pos:line="27" pos:column="35">&amp;<pos:position pos:line="27" pos:column="40"/></operator> <name pos:line="27" pos:column="37">EXEC_ON_READ<pos:position pos:line="27" pos:column="49"/></name></expr>)<pos:position pos:line="27" pos:column="50"/></condition><then pos:line="27" pos:column="50"> <block pos:line="27" pos:column="51">{
                <return pos:line="28" pos:column="17">return <expr><name pos:line="28" pos:column="24">NULL<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></return>
            }<pos:position pos:line="29" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="31" pos:column="13">retval<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <call><name pos:line="31" pos:column="22">invoke_cmd<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name pos:line="31" pos:column="33">cmd<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">parms<pos:position pos:line="31" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="45">dir_config<pos:position pos:line="31" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="57">current<pos:position pos:line="31" pos:column="64"/></name><operator pos:line="31" pos:column="64">-&gt;<pos:position pos:line="31" pos:column="69"/></operator><name pos:line="31" pos:column="66">args<pos:position pos:line="31" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="72"/></expr_stmt>
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><name pos:line="32" pos:column="17">retval<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">==<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="27">NULL<pos:position pos:line="32" pos:column="31"/></name></expr>)<pos:position pos:line="32" pos:column="32"/></condition><then pos:line="32" pos:column="32"> <block pos:line="32" pos:column="33">{
                <return pos:line="33" pos:column="17">return <expr><name pos:line="33" pos:column="24">NULL<pos:position pos:line="33" pos:column="28"/></name></expr>;<pos:position pos:line="33" pos:column="29"/></return>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if>

            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><call><name pos:line="36" pos:column="17">strcmp<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">retval<pos:position pos:line="36" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="32">DECLINE_CMD<pos:position pos:line="36" pos:column="43"/></name></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call> <operator pos:line="36" pos:column="45">!=<pos:position pos:line="36" pos:column="47"/></operator> <literal type="number" pos:line="36" pos:column="48">0<pos:position pos:line="36" pos:column="49"/></literal></expr>)<pos:position pos:line="36" pos:column="50"/></condition><then pos:line="36" pos:column="50"> <block pos:line="36" pos:column="51">{
                <comment type="block" pos:line="37" pos:column="17">/* If the directive in error has already been set, don't
                 * replace it.  Otherwise, an error inside a container 
                 * will be reported as occuring on the first line of the
                 * container.
                 */</comment>
                <if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">!<pos:position pos:line="42" pos:column="22"/></operator><name><name pos:line="42" pos:column="22">parms<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">-&gt;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="29">err_directive<pos:position pos:line="42" pos:column="42"/></name></name></expr>)<pos:position pos:line="42" pos:column="43"/></condition><then pos:line="42" pos:column="43"> <block pos:line="42" pos:column="44">{
                    <expr_stmt><expr><name><name pos:line="43" pos:column="21">parms<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">-&gt;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="28">err_directive<pos:position pos:line="43" pos:column="41"/></name></name> <operator pos:line="43" pos:column="42">=<pos:position pos:line="43" pos:column="43"/></operator> <name pos:line="43" pos:column="44">current<pos:position pos:line="43" pos:column="51"/></name></expr>;<pos:position pos:line="43" pos:column="52"/></expr_stmt>
                }<pos:position pos:line="44" pos:column="18"/></block></then></if>

                <return pos:line="46" pos:column="17">return <expr><name pos:line="46" pos:column="24">retval<pos:position pos:line="46" pos:column="30"/></name></expr>;<pos:position pos:line="46" pos:column="31"/></return>
            }<pos:position pos:line="47" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="49" pos:column="13">mod<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <name><name pos:line="49" pos:column="19">mod<pos:position pos:line="49" pos:column="22"/></name><operator pos:line="49" pos:column="22">-&gt;<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="24">next<pos:position pos:line="49" pos:column="28"/></name></name></expr>;<pos:position pos:line="49" pos:column="29"/></expr_stmt> <comment type="block" pos:line="49" pos:column="30">/* Next time around, skip this one */</comment>
        }<pos:position pos:line="50" pos:column="10"/></block></else></if>
    }<pos:position pos:line="51" pos:column="6"/></block></while>
    <comment type="block" pos:line="52" pos:column="5">/* NOTREACHED */</comment>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

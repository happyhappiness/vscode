<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1700_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">xlate_brigade<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">charset_filter_ctx_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">ctx<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">apr_bucket_brigade<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">bb<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">char<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">buffer<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>, 
                                  <parameter><decl><type><name pos:line="4" pos:column="35">apr_size_t<pos:position pos:line="4" pos:column="45"/></name> <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier></type><name pos:line="4" pos:column="47">buffer_avail<pos:position pos:line="4" pos:column="59"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="5" pos:column="35">int<pos:position pos:line="5" pos:column="38"/></name> <modifier pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></modifier></type><name pos:line="5" pos:column="40">hit_eos<pos:position pos:line="5" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="48"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_bucket<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">b<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt> <comment type="block" pos:line="7" pos:column="27">/* set to NULL only to quiet some gcc */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_bucket<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">consumed_bucket<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">bucket<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">bytes_in_bucket<pos:position pos:line="10" pos:column="31"/></name></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt> <comment type="block" pos:line="10" pos:column="33">/* total bytes read from current bucket */</comment>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_size_t<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">bucket_avail<pos:position pos:line="11" pos:column="28"/></name></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>    <comment type="block" pos:line="11" pos:column="33">/* bytes left in current bucket */</comment>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_status_t<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">rv<pos:position pos:line="12" pos:column="20"/></name> <init pos:line="12" pos:column="21">= <expr><name pos:line="12" pos:column="23">APR_SUCCESS<pos:position pos:line="12" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="35"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="14" pos:column="5">*<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">hit_eos<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">bucket_avail<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <literal type="number" pos:line="15" pos:column="20">0<pos:position pos:line="15" pos:column="21"/></literal></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">consumed_bucket<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="23">NULL<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><literal type="number" pos:line="17" pos:column="12">1<pos:position pos:line="17" pos:column="13"/></literal></expr>)<pos:position pos:line="17" pos:column="14"/></condition> <block pos:line="17" pos:column="15">{
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">bucket_avail<pos:position pos:line="18" pos:column="26"/></name></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27"> <block pos:line="18" pos:column="28">{ <comment type="block" pos:line="18" pos:column="30">/* no bytes left to process in the current bucket... */</comment>
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><name pos:line="19" pos:column="17">consumed_bucket<pos:position pos:line="19" pos:column="32"/></name></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33"> <block pos:line="19" pos:column="34">{
                <expr_stmt><expr><call><name pos:line="20" pos:column="17">apr_bucket_delete<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><name pos:line="20" pos:column="35">consumed_bucket<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
                <expr_stmt><expr><name pos:line="21" pos:column="17">consumed_bucket<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">=<pos:position pos:line="21" pos:column="34"/></operator> <name pos:line="21" pos:column="35">NULL<pos:position pos:line="21" pos:column="39"/></name></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="22" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="23" pos:column="13">b<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <call><name pos:line="23" pos:column="17">APR_BRIGADE_FIRST<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><name pos:line="23" pos:column="35">bb<pos:position pos:line="23" pos:column="37"/></name></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name pos:line="24" pos:column="17">b<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">==<pos:position pos:line="24" pos:column="21"/></operator> <call><name pos:line="24" pos:column="22">APR_BRIGADE_SENTINEL<pos:position pos:line="24" pos:column="42"/></name><argument_list pos:line="24" pos:column="42">(<argument><expr><name pos:line="24" pos:column="43">bb<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call> <operator pos:line="24" pos:column="47">||<pos:position pos:line="24" pos:column="49"/></operator>
                <call><name pos:line="25" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">b<pos:position pos:line="25" pos:column="36"/></name></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="38"/></condition><then pos:line="25" pos:column="38"> <block pos:line="25" pos:column="39">{
                <break pos:line="26" pos:column="17">break;<pos:position pos:line="26" pos:column="23"/></break>
            }<pos:position pos:line="27" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="28" pos:column="13">rv<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">apr_bucket_read<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">b<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="37">&amp;<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="38">bucket<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="46">&amp;<pos:position pos:line="28" pos:column="51"/></operator><name pos:line="28" pos:column="47">bytes_in_bucket<pos:position pos:line="28" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="64">APR_BLOCK_READ<pos:position pos:line="28" pos:column="78"/></name></expr></argument>)<pos:position pos:line="28" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="80"/></expr_stmt>
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name pos:line="29" pos:column="17">rv<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">!=<pos:position pos:line="29" pos:column="22"/></operator> <name pos:line="29" pos:column="23">APR_SUCCESS<pos:position pos:line="29" pos:column="34"/></name></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35"> <block pos:line="29" pos:column="36">{
                <expr_stmt><expr><name><name pos:line="30" pos:column="17">ctx<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">ees<pos:position pos:line="30" pos:column="25"/></name></name> <operator pos:line="30" pos:column="26">=<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="28">EES_BUCKET_READ<pos:position pos:line="30" pos:column="43"/></name></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
                <break pos:line="31" pos:column="17">break;<pos:position pos:line="31" pos:column="23"/></break>
            }<pos:position pos:line="32" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="33" pos:column="13">bucket_avail<pos:position pos:line="33" pos:column="25"/></name> <operator pos:line="33" pos:column="26">=<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="28">bytes_in_bucket<pos:position pos:line="33" pos:column="43"/></name></expr>;<pos:position pos:line="33" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name pos:line="34" pos:column="13">consumed_bucket<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">=<pos:position pos:line="34" pos:column="30"/></operator> <name pos:line="34" pos:column="31">b<pos:position pos:line="34" pos:column="32"/></name></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>   <comment type="block" pos:line="34" pos:column="36">/* for axing when we're done reading it */</comment>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">bucket_avail<pos:position pos:line="36" pos:column="25"/></name></expr>)<pos:position pos:line="36" pos:column="26"/></condition><then pos:line="36" pos:column="26"> <block pos:line="36" pos:column="27">{
            <comment type="block" pos:line="37" pos:column="13">/* We've got data, so translate it. */</comment>
            <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><name><name pos:line="38" pos:column="17">ctx<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">-&gt;<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="22">saved<pos:position pos:line="38" pos:column="27"/></name></name></expr>)<pos:position pos:line="38" pos:column="28"/></condition><then pos:line="38" pos:column="28"> <block pos:line="38" pos:column="29">{
                <comment type="block" pos:line="39" pos:column="17">/* Rats... we need to finish a partial character from the previous
                 * bucket.
                 *
                 * Strangely, finish_partial_char() increments the input buffer
                 * pointer but does not increment the output buffer pointer.
                 */</comment>
                <decl_stmt><decl><type><name pos:line="45" pos:column="17">apr_size_t<pos:position pos:line="45" pos:column="27"/></name></type> <name pos:line="45" pos:column="28">old_buffer_avail<pos:position pos:line="45" pos:column="44"/></name> <init pos:line="45" pos:column="45">= <expr><operator pos:line="45" pos:column="47">*<pos:position pos:line="45" pos:column="48"/></operator><name pos:line="45" pos:column="48">buffer_avail<pos:position pos:line="45" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="45" pos:column="61"/></decl_stmt>
                <expr_stmt><expr><name pos:line="46" pos:column="17">rv<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">=<pos:position pos:line="46" pos:column="21"/></operator> <call><name pos:line="46" pos:column="22">finish_partial_char<pos:position pos:line="46" pos:column="41"/></name><argument_list pos:line="46" pos:column="41">(<argument><expr><name pos:line="46" pos:column="42">ctx<pos:position pos:line="46" pos:column="45"/></name></expr></argument>,
                                         <argument><expr><operator pos:line="47" pos:column="42">&amp;<pos:position pos:line="47" pos:column="47"/></operator><name pos:line="47" pos:column="43">bucket<pos:position pos:line="47" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="51">&amp;<pos:position pos:line="47" pos:column="56"/></operator><name pos:line="47" pos:column="52">bucket_avail<pos:position pos:line="47" pos:column="64"/></name></expr></argument>,
                                         <argument><expr><operator pos:line="48" pos:column="42">&amp;<pos:position pos:line="48" pos:column="47"/></operator><name pos:line="48" pos:column="43">buffer<pos:position pos:line="48" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="51">buffer_avail<pos:position pos:line="48" pos:column="63"/></name></expr></argument>)<pos:position pos:line="48" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="65"/></expr_stmt>
                <expr_stmt><expr><name pos:line="49" pos:column="17">buffer<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">+=<pos:position pos:line="49" pos:column="26"/></operator> <name pos:line="49" pos:column="27">old_buffer_avail<pos:position pos:line="49" pos:column="43"/></name> <operator pos:line="49" pos:column="44">-<pos:position pos:line="49" pos:column="45"/></operator> <operator pos:line="49" pos:column="46">*<pos:position pos:line="49" pos:column="47"/></operator><name pos:line="49" pos:column="47">buffer_avail<pos:position pos:line="49" pos:column="59"/></name></expr>;<pos:position pos:line="49" pos:column="60"/></expr_stmt>
            }<pos:position pos:line="50" pos:column="14"/></block></then>
            <else pos:line="51" pos:column="13">else <block pos:line="51" pos:column="18">{
                <decl_stmt><decl><type><name pos:line="52" pos:column="17">apr_size_t<pos:position pos:line="52" pos:column="27"/></name></type> <name pos:line="52" pos:column="28">old_buffer_avail<pos:position pos:line="52" pos:column="44"/></name> <init pos:line="52" pos:column="45">= <expr><operator pos:line="52" pos:column="47">*<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="48">buffer_avail<pos:position pos:line="52" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="52" pos:column="61"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="53" pos:column="17">apr_size_t<pos:position pos:line="53" pos:column="27"/></name></type> <name pos:line="53" pos:column="28">old_bucket_avail<pos:position pos:line="53" pos:column="44"/></name> <init pos:line="53" pos:column="45">= <expr><name pos:line="53" pos:column="47">bucket_avail<pos:position pos:line="53" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="53" pos:column="60"/></decl_stmt>
                <expr_stmt><expr><name pos:line="54" pos:column="17">rv<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <call><name pos:line="54" pos:column="22">apr_xlate_conv_buffer<pos:position pos:line="54" pos:column="43"/></name><argument_list pos:line="54" pos:column="43">(<argument><expr><name><name pos:line="54" pos:column="44">ctx<pos:position pos:line="54" pos:column="47"/></name><operator pos:line="54" pos:column="47">-&gt;<pos:position pos:line="54" pos:column="52"/></operator><name pos:line="54" pos:column="49">xlate<pos:position pos:line="54" pos:column="54"/></name></name></expr></argument>,
                                           <argument><expr><name pos:line="55" pos:column="44">bucket<pos:position pos:line="55" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="52">&amp;<pos:position pos:line="55" pos:column="57"/></operator><name pos:line="55" pos:column="53">bucket_avail<pos:position pos:line="55" pos:column="65"/></name></expr></argument>,
                                           <argument><expr><name pos:line="56" pos:column="44">buffer<pos:position pos:line="56" pos:column="50"/></name></expr></argument>,
                                           <argument><expr><name pos:line="57" pos:column="44">buffer_avail<pos:position pos:line="57" pos:column="56"/></name></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name pos:line="58" pos:column="17">buffer<pos:position pos:line="58" pos:column="23"/></name>  <operator pos:line="58" pos:column="25">+=<pos:position pos:line="58" pos:column="27"/></operator> <name pos:line="58" pos:column="28">old_buffer_avail<pos:position pos:line="58" pos:column="44"/></name> <operator pos:line="58" pos:column="45">-<pos:position pos:line="58" pos:column="46"/></operator> <operator pos:line="58" pos:column="47">*<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="48">buffer_avail<pos:position pos:line="58" pos:column="60"/></name></expr>;<pos:position pos:line="58" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><name pos:line="59" pos:column="17">bucket<pos:position pos:line="59" pos:column="23"/></name>  <operator pos:line="59" pos:column="25">+=<pos:position pos:line="59" pos:column="27"/></operator> <name pos:line="59" pos:column="28">old_bucket_avail<pos:position pos:line="59" pos:column="44"/></name> <operator pos:line="59" pos:column="45">-<pos:position pos:line="59" pos:column="46"/></operator> <name pos:line="59" pos:column="47">bucket_avail<pos:position pos:line="59" pos:column="59"/></name></expr>;<pos:position pos:line="59" pos:column="60"/></expr_stmt>
                
                <if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><name pos:line="61" pos:column="21">rv<pos:position pos:line="61" pos:column="23"/></name> <operator pos:line="61" pos:column="24">==<pos:position pos:line="61" pos:column="26"/></operator> <name pos:line="61" pos:column="27">APR_INCOMPLETE<pos:position pos:line="61" pos:column="41"/></name></expr>)<pos:position pos:line="61" pos:column="42"/></condition><then pos:line="61" pos:column="42"> <block pos:line="61" pos:column="43">{ <comment type="block" pos:line="61" pos:column="45">/* partial character at end of input */</comment>
                    <comment type="block" pos:line="62" pos:column="21">/* We need to save the final byte(s) for next time; we can't
                     * convert it until we look at the next bucket.
                     */</comment>
                    <expr_stmt><expr><name pos:line="65" pos:column="21">rv<pos:position pos:line="65" pos:column="23"/></name> <operator pos:line="65" pos:column="24">=<pos:position pos:line="65" pos:column="25"/></operator> <call><name pos:line="65" pos:column="26">set_aside_partial_char<pos:position pos:line="65" pos:column="48"/></name><argument_list pos:line="65" pos:column="48">(<argument><expr><name pos:line="65" pos:column="49">ctx<pos:position pos:line="65" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="54">bucket<pos:position pos:line="65" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="62">bucket_avail<pos:position pos:line="65" pos:column="74"/></name></expr></argument>)<pos:position pos:line="65" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="76"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="66" pos:column="21">bucket_avail<pos:position pos:line="66" pos:column="33"/></name> <operator pos:line="66" pos:column="34">=<pos:position pos:line="66" pos:column="35"/></operator> <literal type="number" pos:line="66" pos:column="36">0<pos:position pos:line="66" pos:column="37"/></literal></expr>;<pos:position pos:line="66" pos:column="38"/></expr_stmt>
                }<pos:position pos:line="67" pos:column="18"/></block></then></if>
            }<pos:position pos:line="68" pos:column="14"/></block></else></if>
            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><name pos:line="69" pos:column="17">rv<pos:position pos:line="69" pos:column="19"/></name> <operator pos:line="69" pos:column="20">!=<pos:position pos:line="69" pos:column="22"/></operator> <name pos:line="69" pos:column="23">APR_SUCCESS<pos:position pos:line="69" pos:column="34"/></name></expr>)<pos:position pos:line="69" pos:column="35"/></condition><then pos:line="69" pos:column="35"> <block pos:line="69" pos:column="36">{
                <comment type="block" pos:line="70" pos:column="17">/* bad input byte or partial char too big to store */</comment>
                <break pos:line="71" pos:column="17">break;<pos:position pos:line="71" pos:column="23"/></break>
            }<pos:position pos:line="72" pos:column="14"/></block></then></if>
            <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><operator pos:line="73" pos:column="17">*<pos:position pos:line="73" pos:column="18"/></operator><name pos:line="73" pos:column="18">buffer_avail<pos:position pos:line="73" pos:column="30"/></name> <operator pos:line="73" pos:column="31">&lt;<pos:position pos:line="73" pos:column="35"/></operator> <name pos:line="73" pos:column="33">XLATE_MIN_BUFF_LEFT<pos:position pos:line="73" pos:column="52"/></name></expr>)<pos:position pos:line="73" pos:column="53"/></condition><then pos:line="73" pos:column="53"> <block pos:line="73" pos:column="54">{
                <comment type="block" pos:line="74" pos:column="17">/* if any data remains in the current bucket, split there */</comment>
                <if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><name pos:line="75" pos:column="21">bucket_avail<pos:position pos:line="75" pos:column="33"/></name></expr>)<pos:position pos:line="75" pos:column="34"/></condition><then pos:line="75" pos:column="34"> <block pos:line="75" pos:column="35">{
                    <expr_stmt><expr><call><name pos:line="76" pos:column="21">apr_bucket_split<pos:position pos:line="76" pos:column="37"/></name><argument_list pos:line="76" pos:column="37">(<argument><expr><name pos:line="76" pos:column="38">b<pos:position pos:line="76" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="41">bytes_in_bucket<pos:position pos:line="76" pos:column="56"/></name> <operator pos:line="76" pos:column="57">-<pos:position pos:line="76" pos:column="58"/></operator> <name pos:line="76" pos:column="59">bucket_avail<pos:position pos:line="76" pos:column="71"/></name></expr></argument>)<pos:position pos:line="76" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="73"/></expr_stmt>
                }<pos:position pos:line="77" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="78" pos:column="17">apr_bucket_delete<pos:position pos:line="78" pos:column="34"/></name><argument_list pos:line="78" pos:column="34">(<argument><expr><name pos:line="78" pos:column="35">b<pos:position pos:line="78" pos:column="36"/></name></expr></argument>)<pos:position pos:line="78" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="38"/></expr_stmt>
                <break pos:line="79" pos:column="17">break;<pos:position pos:line="79" pos:column="23"/></break>
            }<pos:position pos:line="80" pos:column="14"/></block></then></if>
        }<pos:position pos:line="81" pos:column="10"/></block></then></if>
    }<pos:position pos:line="82" pos:column="6"/></block></while>

    <if pos:line="84" pos:column="5">if <condition pos:line="84" pos:column="8">(<expr><operator pos:line="84" pos:column="9">!<pos:position pos:line="84" pos:column="10"/></operator><call><name pos:line="84" pos:column="10">APR_BRIGADE_EMPTY<pos:position pos:line="84" pos:column="27"/></name><argument_list pos:line="84" pos:column="27">(<argument><expr><name pos:line="84" pos:column="28">bb<pos:position pos:line="84" pos:column="30"/></name></expr></argument>)<pos:position pos:line="84" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="32"/></condition><then pos:line="84" pos:column="32"> <block pos:line="84" pos:column="33">{
        <expr_stmt><expr><name pos:line="85" pos:column="9">b<pos:position pos:line="85" pos:column="10"/></name> <operator pos:line="85" pos:column="11">=<pos:position pos:line="85" pos:column="12"/></operator> <call><name pos:line="85" pos:column="13">APR_BRIGADE_FIRST<pos:position pos:line="85" pos:column="30"/></name><argument_list pos:line="85" pos:column="30">(<argument><expr><name pos:line="85" pos:column="31">bb<pos:position pos:line="85" pos:column="33"/></name></expr></argument>)<pos:position pos:line="85" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="35"/></expr_stmt>
        <if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><call><name pos:line="86" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="86" pos:column="30"/></name><argument_list pos:line="86" pos:column="30">(<argument><expr><name pos:line="86" pos:column="31">b<pos:position pos:line="86" pos:column="32"/></name></expr></argument>)<pos:position pos:line="86" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="34"/></condition><then pos:line="86" pos:column="34"> <block pos:line="86" pos:column="35">{
            <comment type="block" pos:line="87" pos:column="13">/* Leave the eos bucket in the brigade for reporting to
             * subsequent filters.
             */</comment>
            <expr_stmt><expr><operator pos:line="90" pos:column="13">*<pos:position pos:line="90" pos:column="14"/></operator><name pos:line="90" pos:column="14">hit_eos<pos:position pos:line="90" pos:column="21"/></name> <operator pos:line="90" pos:column="22">=<pos:position pos:line="90" pos:column="23"/></operator> <literal type="number" pos:line="90" pos:column="24">1<pos:position pos:line="90" pos:column="25"/></literal></expr>;<pos:position pos:line="90" pos:column="26"/></expr_stmt>
            <if pos:line="91" pos:column="13">if <condition pos:line="91" pos:column="16">(<expr><name><name pos:line="91" pos:column="17">ctx<pos:position pos:line="91" pos:column="20"/></name><operator pos:line="91" pos:column="20">-&gt;<pos:position pos:line="91" pos:column="25"/></operator><name pos:line="91" pos:column="22">saved<pos:position pos:line="91" pos:column="27"/></name></name></expr>)<pos:position pos:line="91" pos:column="28"/></condition><then pos:line="91" pos:column="28"> <block pos:line="91" pos:column="29">{
                <comment type="block" pos:line="92" pos:column="17">/* Oops... we have a partial char from the previous bucket
                 * that won't be completed because there's no more data.
                 */</comment>
                <expr_stmt><expr><name pos:line="95" pos:column="17">rv<pos:position pos:line="95" pos:column="19"/></name> <operator pos:line="95" pos:column="20">=<pos:position pos:line="95" pos:column="21"/></operator> <name pos:line="95" pos:column="22">APR_INCOMPLETE<pos:position pos:line="95" pos:column="36"/></name></expr>;<pos:position pos:line="95" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="96" pos:column="17">ctx<pos:position pos:line="96" pos:column="20"/></name><operator pos:line="96" pos:column="20">-&gt;<pos:position pos:line="96" pos:column="25"/></operator><name pos:line="96" pos:column="22">ees<pos:position pos:line="96" pos:column="25"/></name></name> <operator pos:line="96" pos:column="26">=<pos:position pos:line="96" pos:column="27"/></operator> <name pos:line="96" pos:column="28">EES_INCOMPLETE_CHAR<pos:position pos:line="96" pos:column="47"/></name></expr>;<pos:position pos:line="96" pos:column="48"/></expr_stmt>
            }<pos:position pos:line="97" pos:column="14"/></block></then></if>
        }<pos:position pos:line="98" pos:column="10"/></block></then></if>
    }<pos:position pos:line="99" pos:column="6"/></block></then></if>

    <return pos:line="101" pos:column="5">return <expr><name pos:line="101" pos:column="12">rv<pos:position pos:line="101" pos:column="14"/></name></expr>;<pos:position pos:line="101" pos:column="15"/></return>
}<pos:position pos:line="102" pos:column="2"/></block></function></unit>

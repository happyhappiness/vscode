<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_506_httpd-2.2.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">revision_suffix<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">request_rec<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">r<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">suffix_pos<pos:position pos:line="3" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="21">result<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">sub_filename<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">request_rec<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">sub<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>

<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="7" pos:column="21"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ap_log_rerror<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">APLOG_MARK<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="31">APLOG_DEBUG<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="44">0<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="47">r<pos:position pos:line="8" pos:column="48"/></name></expr></argument>,
                <argument><expr><name pos:line="9" pos:column="17">MODNAME<pos:position pos:line="9" pos:column="24"/></name> <literal type="string" pos:line="9" pos:column="25">": revision_suffix checking %s"<pos:position pos:line="9" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="58">r<pos:position pos:line="9" pos:column="59"/></name><operator pos:line="9" pos:column="59">-&gt;<pos:position pos:line="9" pos:column="64"/></operator><name pos:line="9" pos:column="61">filename<pos:position pos:line="9" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="71"/></expr_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="10" pos:column="8">/* MIME_MAGIC_DEBUG */</comment>

    <comment type="block" pos:line="12" pos:column="5">/* check for recognized revision suffix */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">suffix_pos<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">strlen<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name><name pos:line="13" pos:column="25">r<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">filename<pos:position pos:line="13" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call> <operator pos:line="13" pos:column="38">-<pos:position pos:line="13" pos:column="39"/></operator> <literal type="number" pos:line="13" pos:column="40">1<pos:position pos:line="13" pos:column="41"/></literal></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><call><name pos:line="14" pos:column="10">apr_isdigit<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name><name pos:line="14" pos:column="22">r<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">filename<pos:position pos:line="14" pos:column="33"/></name><index pos:line="14" pos:column="33">[<expr><name pos:line="14" pos:column="34">suffix_pos<pos:position pos:line="14" pos:column="44"/></name></expr>]<pos:position pos:line="14" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="47"/></condition><then pos:line="14" pos:column="47"> <block pos:line="14" pos:column="48">{
        <return pos:line="15" pos:column="9">return <expr><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><name pos:line="17" pos:column="12">suffix_pos<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">&gt;=<pos:position pos:line="17" pos:column="28"/></operator> <literal type="number" pos:line="17" pos:column="26">0<pos:position pos:line="17" pos:column="27"/></literal> <operator pos:line="17" pos:column="28">&amp;&amp;<pos:position pos:line="17" pos:column="38"/></operator> <call><name pos:line="17" pos:column="31">apr_isdigit<pos:position pos:line="17" pos:column="42"/></name><argument_list pos:line="17" pos:column="42">(<argument><expr><name><name pos:line="17" pos:column="43">r<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">-&gt;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="46">filename<pos:position pos:line="17" pos:column="54"/></name><index pos:line="17" pos:column="54">[<expr><name pos:line="17" pos:column="55">suffix_pos<pos:position pos:line="17" pos:column="65"/></name></expr>]<pos:position pos:line="17" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="68"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="9">suffix_pos<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">--<pos:position pos:line="18" pos:column="21"/></operator></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt></block></while>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">suffix_pos<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">&lt;<pos:position pos:line="19" pos:column="24"/></operator> <literal type="number" pos:line="19" pos:column="22">0<pos:position pos:line="19" pos:column="23"/></literal> <operator pos:line="19" pos:column="24">||<pos:position pos:line="19" pos:column="26"/></operator> <name><name pos:line="19" pos:column="27">r<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">filename<pos:position pos:line="19" pos:column="38"/></name><index pos:line="19" pos:column="38">[<expr><name pos:line="19" pos:column="39">suffix_pos<pos:position pos:line="19" pos:column="49"/></name></expr>]<pos:position pos:line="19" pos:column="50"/></index></name> <operator pos:line="19" pos:column="51">!=<pos:position pos:line="19" pos:column="53"/></operator> <literal type="char" pos:line="19" pos:column="54">'@'<pos:position pos:line="19" pos:column="57"/></literal></expr>)<pos:position pos:line="19" pos:column="58"/></condition><then pos:line="19" pos:column="58"> <block pos:line="19" pos:column="59">{
        <return pos:line="20" pos:column="9">return <expr><literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="23" pos:column="5">/* perform sub-request for the file name without the suffix */</comment>
    <expr_stmt><expr><name pos:line="24" pos:column="5">result<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>;<pos:position pos:line="24" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">sub_filename<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <call><name pos:line="25" pos:column="20">apr_pstrndup<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name><name pos:line="25" pos:column="33">r<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">-&gt;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="36">pool<pos:position pos:line="25" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="42">r<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">filename<pos:position pos:line="25" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="55">suffix_pos<pos:position pos:line="25" pos:column="65"/></name></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="67"/></expr_stmt>
<cpp:if pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">if<pos:position pos:line="26" pos:column="4"/></cpp:directive> <expr><name pos:line="26" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="26" pos:column="21"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">ap_log_rerror<pos:position pos:line="27" pos:column="18"/></name><argument_list pos:line="27" pos:column="18">(<argument><expr><name pos:line="27" pos:column="19">APLOG_MARK<pos:position pos:line="27" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="31">APLOG_DEBUG<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="44">0<pos:position pos:line="27" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="47">r<pos:position pos:line="27" pos:column="48"/></name></expr></argument>,
                <argument><expr><name pos:line="28" pos:column="17">MODNAME<pos:position pos:line="28" pos:column="24"/></name> <literal type="string" pos:line="28" pos:column="25">": subrequest lookup for %s"<pos:position pos:line="28" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="55">sub_filename<pos:position pos:line="28" pos:column="67"/></name></expr></argument>)<pos:position pos:line="28" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="69"/></expr_stmt>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="29" pos:column="8">/* MIME_MAGIC_DEBUG */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">sub<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <call><name pos:line="30" pos:column="11">ap_sub_req_lookup_file<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">sub_filename<pos:position pos:line="30" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="48">r<pos:position pos:line="30" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="51">NULL<pos:position pos:line="30" pos:column="55"/></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="32" pos:column="5">/* extract content type/encoding/language from sub-request */</comment>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">sub<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">content_type<pos:position pos:line="33" pos:column="26"/></name></name></expr>)<pos:position pos:line="33" pos:column="27"/></condition><then pos:line="33" pos:column="27"> <block pos:line="33" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">ap_set_content_type<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><name pos:line="34" pos:column="29">r<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="32">apr_pstrdup<pos:position pos:line="34" pos:column="43"/></name><argument_list pos:line="34" pos:column="43">(<argument><expr><name><name pos:line="34" pos:column="44">r<pos:position pos:line="34" pos:column="45"/></name><operator pos:line="34" pos:column="45">-&gt;<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="47">pool<pos:position pos:line="34" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="53">sub<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">-&gt;<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="58">content_type<pos:position pos:line="34" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt>
<cpp:if pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">if<pos:position pos:line="35" pos:column="4"/></cpp:directive> <expr><name pos:line="35" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="35" pos:column="21"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_log_rerror<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name pos:line="36" pos:column="23">APLOG_MARK<pos:position pos:line="36" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="35">APLOG_DEBUG<pos:position pos:line="36" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="48">0<pos:position pos:line="36" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="51">r<pos:position pos:line="36" pos:column="52"/></name></expr></argument>,
                    <argument><expr><name pos:line="37" pos:column="21">MODNAME<pos:position pos:line="37" pos:column="28"/></name> <literal type="string" pos:line="37" pos:column="29">": subrequest %s got %s"<pos:position pos:line="37" pos:column="53"/></literal></expr></argument>,
                    <argument><expr><name pos:line="38" pos:column="21">sub_filename<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="35">r<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">-&gt;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="38">content_type<pos:position pos:line="38" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="39" pos:column="8">/* MIME_MAGIC_DEBUG */</comment>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name><name pos:line="40" pos:column="13">sub<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">content_encoding<pos:position pos:line="40" pos:column="34"/></name></name></expr>)<pos:position pos:line="40" pos:column="35"/></condition><then pos:line="40" pos:column="35">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="13">r<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">-&gt;<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="16">content_encoding<pos:position pos:line="41" pos:column="32"/></name></name> <operator pos:line="41" pos:column="33">=<pos:position pos:line="41" pos:column="34"/></operator>
                <call><name pos:line="42" pos:column="17">apr_pstrdup<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name><name pos:line="42" pos:column="29">r<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">-&gt;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="32">pool<pos:position pos:line="42" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="38">sub<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">-&gt;<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="43">content_encoding<pos:position pos:line="42" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt></block></then></if>
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name><name pos:line="43" pos:column="13">sub<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">-&gt;<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="18">content_languages<pos:position pos:line="43" pos:column="35"/></name></name></expr>)<pos:position pos:line="43" pos:column="36"/></condition><then pos:line="43" pos:column="36"> <block pos:line="43" pos:column="37">{
            <decl_stmt><decl><type><name pos:line="44" pos:column="13">int<pos:position pos:line="44" pos:column="16"/></name></type> <name pos:line="44" pos:column="17">n<pos:position pos:line="44" pos:column="18"/></name></decl>;<pos:position pos:line="44" pos:column="19"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="45" pos:column="13">r<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">-&gt;<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="16">content_languages<pos:position pos:line="45" pos:column="33"/></name></name> <operator pos:line="45" pos:column="34">=<pos:position pos:line="45" pos:column="35"/></operator> <call><name pos:line="45" pos:column="36">apr_array_copy<pos:position pos:line="45" pos:column="50"/></name><argument_list pos:line="45" pos:column="50">(<argument><expr><name><name pos:line="45" pos:column="51">r<pos:position pos:line="45" pos:column="52"/></name><operator pos:line="45" pos:column="52">-&gt;<pos:position pos:line="45" pos:column="57"/></operator><name pos:line="45" pos:column="54">pool<pos:position pos:line="45" pos:column="58"/></name></name></expr></argument>,
                                                  <argument><expr><name><name pos:line="46" pos:column="51">sub<pos:position pos:line="46" pos:column="54"/></name><operator pos:line="46" pos:column="54">-&gt;<pos:position pos:line="46" pos:column="59"/></operator><name pos:line="46" pos:column="56">content_languages<pos:position pos:line="46" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="75"/></expr_stmt>
            <for pos:line="47" pos:column="13">for <control pos:line="47" pos:column="17">(<init><expr><name pos:line="47" pos:column="18">n<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <literal type="number" pos:line="47" pos:column="22">0<pos:position pos:line="47" pos:column="23"/></literal></expr>;<pos:position pos:line="47" pos:column="24"/></init> <condition><expr><name pos:line="47" pos:column="25">n<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">&lt;<pos:position pos:line="47" pos:column="31"/></operator> <name><name pos:line="47" pos:column="29">r<pos:position pos:line="47" pos:column="30"/></name><operator pos:line="47" pos:column="30">-&gt;<pos:position pos:line="47" pos:column="35"/></operator><name pos:line="47" pos:column="32">content_languages<pos:position pos:line="47" pos:column="49"/></name><operator pos:line="47" pos:column="49">-&gt;<pos:position pos:line="47" pos:column="54"/></operator><name pos:line="47" pos:column="51">nelts<pos:position pos:line="47" pos:column="56"/></name></name></expr>;<pos:position pos:line="47" pos:column="57"/></condition> <incr><expr><operator pos:line="47" pos:column="58">++<pos:position pos:line="47" pos:column="60"/></operator><name pos:line="47" pos:column="60">n<pos:position pos:line="47" pos:column="61"/></name></expr></incr>)<pos:position pos:line="47" pos:column="62"/></control> <block pos:line="47" pos:column="63">{
                <decl_stmt><decl><type><name pos:line="48" pos:column="17">char<pos:position pos:line="48" pos:column="21"/></name> <modifier pos:line="48" pos:column="22">*<pos:position pos:line="48" pos:column="23"/></modifier><modifier pos:line="48" pos:column="23">*<pos:position pos:line="48" pos:column="24"/></modifier></type><name pos:line="48" pos:column="24">lang<pos:position pos:line="48" pos:column="28"/></name> <init pos:line="48" pos:column="29">= <expr><operator pos:line="48" pos:column="31">(<pos:position pos:line="48" pos:column="32"/></operator><operator pos:line="48" pos:column="32">(<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="33">char<pos:position pos:line="48" pos:column="37"/></name> <operator pos:line="48" pos:column="38">*<pos:position pos:line="48" pos:column="39"/></operator><operator pos:line="48" pos:column="39">*<pos:position pos:line="48" pos:column="40"/></operator><operator pos:line="48" pos:column="40">)<pos:position pos:line="48" pos:column="41"/></operator><name><name pos:line="48" pos:column="41">r<pos:position pos:line="48" pos:column="42"/></name><operator pos:line="48" pos:column="42">-&gt;<pos:position pos:line="48" pos:column="47"/></operator><name pos:line="48" pos:column="44">content_languages<pos:position pos:line="48" pos:column="61"/></name><operator pos:line="48" pos:column="61">-&gt;<pos:position pos:line="48" pos:column="66"/></operator><name pos:line="48" pos:column="63">elts<pos:position pos:line="48" pos:column="67"/></name></name><operator pos:line="48" pos:column="67">)<pos:position pos:line="48" pos:column="68"/></operator> <operator pos:line="48" pos:column="69">+<pos:position pos:line="48" pos:column="70"/></operator> <name pos:line="48" pos:column="71">n<pos:position pos:line="48" pos:column="72"/></name></expr></init></decl>;<pos:position pos:line="48" pos:column="73"/></decl_stmt>
                <expr_stmt><expr><operator pos:line="49" pos:column="17">*<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="18">lang<pos:position pos:line="49" pos:column="22"/></name> <operator pos:line="49" pos:column="23">=<pos:position pos:line="49" pos:column="24"/></operator> <call><name pos:line="49" pos:column="25">apr_pstrdup<pos:position pos:line="49" pos:column="36"/></name><argument_list pos:line="49" pos:column="36">(<argument><expr><name><name pos:line="49" pos:column="37">r<pos:position pos:line="49" pos:column="38"/></name><operator pos:line="49" pos:column="38">-&gt;<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="40">pool<pos:position pos:line="49" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="46">*<pos:position pos:line="49" pos:column="47"/></operator><name pos:line="49" pos:column="47">lang<pos:position pos:line="49" pos:column="51"/></name></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="50" pos:column="14"/></block></for>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="52" pos:column="9">result<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <literal type="number" pos:line="52" pos:column="18">1<pos:position pos:line="52" pos:column="19"/></literal></expr>;<pos:position pos:line="52" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="55" pos:column="5">/* clean up */</comment>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">ap_destroy_sub_req<pos:position pos:line="56" pos:column="23"/></name><argument_list pos:line="56" pos:column="23">(<argument><expr><name pos:line="56" pos:column="24">sub<pos:position pos:line="56" pos:column="27"/></name></expr></argument>)<pos:position pos:line="56" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>

    <return pos:line="58" pos:column="5">return <expr><name pos:line="58" pos:column="12">result<pos:position pos:line="58" pos:column="18"/></name></expr>;<pos:position pos:line="58" pos:column="19"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2957_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">convert_secure_socket<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">conn_rec<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">c<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">apr_socket_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">csd<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">rcode<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">tlsclientopts<pos:position pos:line="4" pos:column="25"/></name></name></type> <name pos:line="4" pos:column="26">sWS2Opts<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">nwtlsopts<pos:position pos:line="5" pos:column="21"/></name></name></type> <name pos:line="5" pos:column="22">sNWTLSOpts<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">sslserveropts<pos:position pos:line="6" pos:column="25"/></name></name></type> <name pos:line="6" pos:column="26">opts<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">long<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">ulFlags<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">SOCKET<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">sock<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">unicode_t<pos:position pos:line="9" pos:column="14"/></name></type> <name><name pos:line="9" pos:column="15">keyFileName<pos:position pos:line="9" pos:column="26"/></name><index pos:line="9" pos:column="26">[<expr><literal type="number" pos:line="9" pos:column="27">60<pos:position pos:line="9" pos:column="29"/></literal></expr>]<pos:position pos:line="9" pos:column="30"/></index></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">apr_os_sock_get<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><operator pos:line="11" pos:column="21">&amp;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="22">sock<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">csd<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* zero out buffers */</comment>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">memset<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">char<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">*<pos:position pos:line="14" pos:column="19"/></operator><operator pos:line="14" pos:column="19">)<pos:position pos:line="14" pos:column="20"/></operator><operator pos:line="14" pos:column="20">&amp;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="21">sWS2Opts<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="31">0<pos:position pos:line="14" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="34">sizeof<argument_list pos:line="14" pos:column="40">(<argument><expr pos:line="14" pos:column="41">struct <name pos:line="14" pos:column="48">tlsclientopts<pos:position pos:line="14" pos:column="61"/></name></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">memset<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">char<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">*<pos:position pos:line="15" pos:column="19"/></operator><operator pos:line="15" pos:column="19">)<pos:position pos:line="15" pos:column="20"/></operator><operator pos:line="15" pos:column="20">&amp;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="21">sNWTLSOpts<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="33">0<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="36">sizeof<argument_list pos:line="15" pos:column="42">(<argument><expr pos:line="15" pos:column="43">struct <name pos:line="15" pos:column="50">nwtlsopts<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* turn on ssl for the socket */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">ulFlags<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <operator pos:line="18" pos:column="15">(<pos:position pos:line="18" pos:column="16"/></operator><ternary><condition><expr><name pos:line="18" pos:column="16">numcerts<pos:position pos:line="18" pos:column="24"/></name></expr> ?<pos:position pos:line="18" pos:column="26"/></condition><then pos:line="18" pos:column="26"> <expr><name pos:line="18" pos:column="27">SO_TLS_ENABLE<pos:position pos:line="18" pos:column="40"/></name></expr> <pos:position pos:line="18" pos:column="41"/></then><else pos:line="18" pos:column="41">: <expr><name pos:line="18" pos:column="43">SO_TLS_ENABLE<pos:position pos:line="18" pos:column="56"/></name> <operator pos:line="18" pos:column="57">|<pos:position pos:line="18" pos:column="58"/></operator> <name pos:line="18" pos:column="59">SO_TLS_BLIND_ACCEPT<pos:position pos:line="18" pos:column="78"/></name></expr></else></ternary><operator pos:line="18" pos:column="78">)<pos:position pos:line="18" pos:column="79"/></operator></expr>;<pos:position pos:line="18" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">rcode<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <call><name pos:line="19" pos:column="13">WSAIoctl<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">sock<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">SO_TLS_SET_FLAGS<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="46">&amp;<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="47">ulFlags<pos:position pos:line="19" pos:column="54"/></name></expr></argument>, <argument><expr pos:line="19" pos:column="56">sizeof<operator pos:line="19" pos:column="62">(<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="63">unsigned<pos:position pos:line="19" pos:column="71"/></name> <name pos:line="19" pos:column="72">long<pos:position pos:line="19" pos:column="76"/></name><operator pos:line="19" pos:column="76">)<pos:position pos:line="19" pos:column="77"/></operator></expr></argument>,
                     <argument><expr><name pos:line="20" pos:column="22">NULL<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="28">0<pos:position pos:line="20" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">NULL<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="37">NULL<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="43">NULL<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">SOCKET_ERROR<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">==<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">rcode<pos:position pos:line="21" pos:column="30"/></name></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31"> <block pos:line="21" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">ap_log_error<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">APLOG_MARK<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">APLOG_ERR<pos:position pos:line="22" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="45">0<pos:position pos:line="22" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="48">c<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">-&gt;<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="51">base_server<pos:position pos:line="22" pos:column="62"/></name></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="64">APLOGNO<pos:position pos:line="22" pos:column="71"/></name><argument_list pos:line="22" pos:column="71">(<argument><expr><literal type="number" pos:line="22" pos:column="72">02124<pos:position pos:line="22" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="78"/></argument_list></call>
                     <literal type="string" pos:line="23" pos:column="22">"Error: %d with WSAIoctl(flag SO_TLS_ENABLE)"<pos:position pos:line="23" pos:column="67"/></literal></expr></argument>,
                     <argument><expr><call><name pos:line="24" pos:column="22">WSAGetLastError<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">()<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>
        <return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">rcode<pos:position pos:line="25" pos:column="21"/></name></expr>;<pos:position pos:line="25" pos:column="22"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="28" pos:column="5">ulFlags<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <name pos:line="28" pos:column="15">SO_TLS_UNCLEAN_SHUTDOWN<pos:position pos:line="28" pos:column="38"/></name></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">WSAIoctl<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><name pos:line="29" pos:column="14">sock<pos:position pos:line="29" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="20">SO_TLS_SET_FLAGS<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="38">&amp;<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="39">ulFlags<pos:position pos:line="29" pos:column="46"/></name></expr></argument>, <argument><expr pos:line="29" pos:column="48">sizeof<operator pos:line="29" pos:column="54">(<pos:position pos:line="29" pos:column="55"/></operator><name pos:line="29" pos:column="55">unsigned<pos:position pos:line="29" pos:column="63"/></name> <name pos:line="29" pos:column="64">long<pos:position pos:line="29" pos:column="68"/></name><operator pos:line="29" pos:column="68">)<pos:position pos:line="29" pos:column="69"/></operator></expr></argument>,
             <argument><expr><name pos:line="30" pos:column="14">NULL<pos:position pos:line="30" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="20">0<pos:position pos:line="30" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="23">NULL<pos:position pos:line="30" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="29">NULL<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="35">NULL<pos:position pos:line="30" pos:column="39"/></name></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="32" pos:column="5">/* setup the socket for SSL */</comment>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">memset<pos:position pos:line="33" pos:column="11"/></name> <argument_list pos:line="33" pos:column="12">(<argument><expr><operator pos:line="33" pos:column="13">&amp;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="14">sWS2Opts<pos:position pos:line="33" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="24">0<pos:position pos:line="33" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="27">sizeof<argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">sWS2Opts<pos:position pos:line="33" pos:column="42"/></name></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">memset<pos:position pos:line="34" pos:column="11"/></name> <argument_list pos:line="34" pos:column="12">(<argument><expr><operator pos:line="34" pos:column="13">&amp;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="14">sNWTLSOpts<pos:position pos:line="34" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="26">0<pos:position pos:line="34" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="29">sizeof<argument_list pos:line="34" pos:column="35">(<argument><expr><name pos:line="34" pos:column="36">sNWTLSOpts<pos:position pos:line="34" pos:column="46"/></name></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">sWS2Opts<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">.<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">options<pos:position pos:line="35" pos:column="21"/></name></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <operator pos:line="35" pos:column="24">&amp;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="25">sNWTLSOpts<pos:position pos:line="35" pos:column="35"/></name></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">numcerts<pos:position pos:line="37" pos:column="17"/></name></expr>)<pos:position pos:line="37" pos:column="18"/></condition><then pos:line="37" pos:column="18"> <block pos:line="37" pos:column="19">{
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">sNWTLSOpts<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">.<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">walletProvider<pos:position pos:line="38" pos:column="34"/></name></name> <operator pos:line="38" pos:column="35">=<pos:position pos:line="38" pos:column="36"/></operator> <name pos:line="38" pos:column="37">WAL_PROV_DER<pos:position pos:line="38" pos:column="49"/></name></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>   <comment type="block" pos:line="38" pos:column="53">/* the wallet provider defined in wdefs.h */</comment>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">sNWTLSOpts<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">.<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="20">TrustedRootList<pos:position pos:line="39" pos:column="35"/></name></name> <operator pos:line="39" pos:column="36">=<pos:position pos:line="39" pos:column="37"/></operator> <name pos:line="39" pos:column="38">certarray<pos:position pos:line="39" pos:column="47"/></name></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt>     <comment type="block" pos:line="39" pos:column="53">/* array of certs in UNICODE format       */</comment>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">sNWTLSOpts<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">.<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">numElementsInTRList<pos:position pos:line="40" pos:column="39"/></name></name> <operator pos:line="40" pos:column="40">=<pos:position pos:line="40" pos:column="41"/></operator> <name pos:line="40" pos:column="42">numcerts<pos:position pos:line="40" pos:column="50"/></name></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt>  <comment type="block" pos:line="40" pos:column="53">/* number of certs in TRList              */</comment>
    }<pos:position pos:line="41" pos:column="6"/></block></then>
    <else pos:line="42" pos:column="5">else <block pos:line="42" pos:column="10">{
        <comment type="block" pos:line="43" pos:column="9">/* setup the socket for SSL */</comment>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">unicpy<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><name pos:line="44" pos:column="16">keyFileName<pos:position pos:line="44" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="29">L"SSL CertificateIP"<pos:position pos:line="44" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">sWS2Opts<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">.<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="18">wallet<pos:position pos:line="45" pos:column="24"/></name></name> <operator pos:line="45" pos:column="25">=<pos:position pos:line="45" pos:column="26"/></operator> <name pos:line="45" pos:column="27">keyFileName<pos:position pos:line="45" pos:column="38"/></name></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt>              <comment type="block" pos:line="45" pos:column="53">/* no client certificate */</comment>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">sWS2Opts<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">.<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">walletlen<pos:position pos:line="46" pos:column="27"/></name></name> <operator pos:line="46" pos:column="28">=<pos:position pos:line="46" pos:column="29"/></operator> <call><name pos:line="46" pos:column="30">unilen<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><name pos:line="46" pos:column="37">keyFileName<pos:position pos:line="46" pos:column="48"/></name></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="48" pos:column="9">sNWTLSOpts<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">walletProvider<pos:position pos:line="48" pos:column="34"/></name></name> <operator pos:line="48" pos:column="35">=<pos:position pos:line="48" pos:column="36"/></operator> <name pos:line="48" pos:column="37">WAL_PROV_KMO<pos:position pos:line="48" pos:column="49"/></name></expr>;<pos:position pos:line="48" pos:column="50"/></expr_stmt>   <comment type="block" pos:line="48" pos:column="53">/* the wallet provider defined in wdefs.h */</comment>
    }<pos:position pos:line="49" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="51" pos:column="5">/* make the IOCTL call */</comment>
    <expr_stmt><expr><name pos:line="52" pos:column="5">rcode<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <call><name pos:line="52" pos:column="13">WSAIoctl<pos:position pos:line="52" pos:column="21"/></name><argument_list pos:line="52" pos:column="21">(<argument><expr><name pos:line="52" pos:column="22">sock<pos:position pos:line="52" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="28">SO_TLS_SET_CLIENT<pos:position pos:line="52" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="47">&amp;<pos:position pos:line="52" pos:column="52"/></operator><name pos:line="52" pos:column="48">sWS2Opts<pos:position pos:line="52" pos:column="56"/></name></expr></argument>,
                     <argument><expr><sizeof pos:line="53" pos:column="22">sizeof<argument_list pos:line="53" pos:column="28">(<argument><expr pos:line="53" pos:column="29">struct <name pos:line="53" pos:column="36">tlsclientopts<pos:position pos:line="53" pos:column="49"/></name></expr></argument>)<pos:position pos:line="53" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="53" pos:column="52">NULL<pos:position pos:line="53" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="58">0<pos:position pos:line="53" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="61">NULL<pos:position pos:line="53" pos:column="65"/></name></expr></argument>,
                     <argument><expr><name pos:line="54" pos:column="22">NULL<pos:position pos:line="54" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="28">NULL<pos:position pos:line="54" pos:column="32"/></name></expr></argument>)<pos:position pos:line="54" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="56" pos:column="5">/* make sure that it was successful */</comment>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">SOCKET_ERROR<pos:position pos:line="57" pos:column="21"/></name> <operator pos:line="57" pos:column="22">==<pos:position pos:line="57" pos:column="24"/></operator> <name pos:line="57" pos:column="25">rcode<pos:position pos:line="57" pos:column="30"/></name></expr> )<pos:position pos:line="57" pos:column="32"/></condition><then pos:line="57" pos:column="32"> <block pos:line="57" pos:column="33">{
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">ap_log_error<pos:position pos:line="58" pos:column="17"/></name><argument_list pos:line="58" pos:column="17">(<argument><expr><name pos:line="58" pos:column="18">APLOG_MARK<pos:position pos:line="58" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="30">APLOG_ERR<pos:position pos:line="58" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="41">0<pos:position pos:line="58" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="44">c<pos:position pos:line="58" pos:column="45"/></name><operator pos:line="58" pos:column="45">-&gt;<pos:position pos:line="58" pos:column="50"/></operator><name pos:line="58" pos:column="47">base_server<pos:position pos:line="58" pos:column="58"/></name></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="60">APLOGNO<pos:position pos:line="58" pos:column="67"/></name><argument_list pos:line="58" pos:column="67">(<argument><expr><literal type="number" pos:line="58" pos:column="68">02125<pos:position pos:line="58" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="74"/></argument_list></call>
                 <literal type="string" pos:line="59" pos:column="18">"Error: %d with WSAIoctl(SO_TLS_SET_CLIENT)"<pos:position pos:line="59" pos:column="62"/></literal></expr></argument>,
                 <argument><expr><call><name pos:line="60" pos:column="18">WSAGetLastError<pos:position pos:line="60" pos:column="33"/></name><argument_list pos:line="60" pos:column="33">()<pos:position pos:line="60" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
    <return pos:line="62" pos:column="5">return <expr><name pos:line="62" pos:column="12">rcode<pos:position pos:line="62" pos:column="17"/></name></expr>;<pos:position pos:line="62" pos:column="18"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3462.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">socache_dbm_store<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">ap_socache_instance_t<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">ctx<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, 
                                      <parameter><decl><type><name pos:line="2" pos:column="39">server_rec<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">s<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier> <name pos:line="2" pos:column="60">unsigned<pos:position pos:line="2" pos:column="68"/></name> <name pos:line="2" pos:column="69">char<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">id<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>, 
                                      <parameter><decl><type><name pos:line="3" pos:column="39">unsigned<pos:position pos:line="3" pos:column="47"/></name> <name pos:line="3" pos:column="48">int<pos:position pos:line="3" pos:column="51"/></name></type> <name pos:line="3" pos:column="52">idlen<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="59">apr_time_t<pos:position pos:line="3" pos:column="69"/></name></type> <name pos:line="3" pos:column="70">expiry<pos:position pos:line="3" pos:column="76"/></name></decl></parameter>, 
                                      <parameter><decl><type><name pos:line="4" pos:column="39">unsigned<pos:position pos:line="4" pos:column="47"/></name> <name pos:line="4" pos:column="48">char<pos:position pos:line="4" pos:column="52"/></name> <modifier pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></modifier></type><name pos:line="4" pos:column="54">ucaData<pos:position pos:line="4" pos:column="61"/></name></decl></parameter>, 
                                      <parameter><decl><type><name pos:line="5" pos:column="39">unsigned<pos:position pos:line="5" pos:column="47"/></name> <name pos:line="5" pos:column="48">int<pos:position pos:line="5" pos:column="51"/></name></type> <name pos:line="5" pos:column="52">nData<pos:position pos:line="5" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="59">apr_pool_t<pos:position pos:line="5" pos:column="69"/></name> <modifier pos:line="5" pos:column="70">*<pos:position pos:line="5" pos:column="71"/></modifier></type><name pos:line="5" pos:column="71">pool<pos:position pos:line="5" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="76"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_dbm_t<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">dbm<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_datum_t<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">dbmkey<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_datum_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">dbmval<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_status_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">rv<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* be careful: do not try to store too much bytes in a DBM file! */</comment>
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">PAIRMAX<pos:position pos:line="13" pos:column="15"/></name></cpp:ifdef>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">idlen<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">+<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">nData<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">)<pos:position pos:line="14" pos:column="24"/></operator> <operator pos:line="14" pos:column="25">&gt;=<pos:position pos:line="14" pos:column="30"/></operator> <name pos:line="14" pos:column="28">PAIRMAX<pos:position pos:line="14" pos:column="35"/></name></expr>)<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36"> <block pos:line="14" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">ap_log_error<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">APLOG_MARK<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">APLOG_DEBUG<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="47">0<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">s<pos:position pos:line="15" pos:column="51"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="16" pos:column="18">"data size too large for DBM socache: %d &gt;= %d"<pos:position pos:line="16" pos:column="68"/></literal></expr></argument>,
                 <argument><expr><operator pos:line="17" pos:column="18">(<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">idlen<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">+<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">nData<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">)<pos:position pos:line="17" pos:column="33"/></operator></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">PAIRMAX<pos:position pos:line="17" pos:column="42"/></name></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">APR_ENOSPC<pos:position pos:line="18" pos:column="26"/></name></expr>;<pos:position pos:line="18" pos:column="27"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
<cpp:else pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">else<pos:position pos:line="20" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">idlen<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">+<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">nData<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">)<pos:position pos:line="21" pos:column="24"/></operator> <operator pos:line="21" pos:column="25">&gt;=<pos:position pos:line="21" pos:column="30"/></operator> <literal type="number" pos:line="21" pos:column="28">950<pos:position pos:line="21" pos:column="31"/></literal></expr> <comment type="block" pos:line="21" pos:column="32">/* at least less than approx. 1KB */</comment>)<pos:position pos:line="21" pos:column="69"/></condition><then pos:line="21" pos:column="69"> <block pos:line="21" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">ap_log_error<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">APLOG_MARK<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">APLOG_DEBUG<pos:position pos:line="22" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="47">0<pos:position pos:line="22" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="50">s<pos:position pos:line="22" pos:column="51"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="23" pos:column="18">"data size too large for DBM socache: %d &gt;= %d"<pos:position pos:line="23" pos:column="68"/></literal></expr></argument>,
                 <argument><expr><operator pos:line="24" pos:column="18">(<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="19">idlen<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">+<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">nData<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">)<pos:position pos:line="24" pos:column="33"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="35">950<pos:position pos:line="24" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>
        <return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">APR_ENOSPC<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="29" pos:column="5">/* create DBM key */</comment>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">dbmkey<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">.<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="12">dptr<pos:position pos:line="30" pos:column="16"/></name></name>  <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <operator pos:line="30" pos:column="20">(<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">char<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">*<pos:position pos:line="30" pos:column="27"/></operator><operator pos:line="30" pos:column="27">)<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="28">id<pos:position pos:line="30" pos:column="30"/></name></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">dbmkey<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">.<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">dsize<pos:position pos:line="31" pos:column="17"/></name></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <name pos:line="31" pos:column="20">idlen<pos:position pos:line="31" pos:column="25"/></name></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="33" pos:column="5">/* create DBM value */</comment>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">dbmval<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">.<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="12">dsize<pos:position pos:line="34" pos:column="17"/></name></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <sizeof pos:line="34" pos:column="20">sizeof<argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">apr_time_t<pos:position pos:line="34" pos:column="37"/></name></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></sizeof> <operator pos:line="34" pos:column="39">+<pos:position pos:line="34" pos:column="40"/></operator> <name pos:line="34" pos:column="41">nData<pos:position pos:line="34" pos:column="46"/></name></expr>;<pos:position pos:line="34" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">dbmval<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">.<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="12">dptr<pos:position pos:line="35" pos:column="16"/></name></name>  <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <operator pos:line="35" pos:column="20">(<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="21">char<pos:position pos:line="35" pos:column="25"/></name> <operator pos:line="35" pos:column="26">*<pos:position pos:line="35" pos:column="27"/></operator><operator pos:line="35" pos:column="27">)<pos:position pos:line="35" pos:column="28"/></operator><call><name pos:line="35" pos:column="28">malloc<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name><name pos:line="35" pos:column="35">dbmval<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">.<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="42">dsize<pos:position pos:line="35" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">dbmval<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">.<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="16">dptr<pos:position pos:line="36" pos:column="20"/></name></name> <operator pos:line="36" pos:column="21">==<pos:position pos:line="36" pos:column="23"/></operator> <name pos:line="36" pos:column="24">NULL<pos:position pos:line="36" pos:column="28"/></name></expr>)<pos:position pos:line="36" pos:column="29"/></condition><then pos:line="36" pos:column="29"> <block pos:line="36" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">ap_log_error<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">APLOG_MARK<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">APLOG_DEBUG<pos:position pos:line="37" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="47">0<pos:position pos:line="37" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="50">s<pos:position pos:line="37" pos:column="51"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="38" pos:column="18">"malloc error creating DBM value"<pos:position pos:line="38" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">APR_ENOMEM<pos:position pos:line="39" pos:column="26"/></name></expr>;<pos:position pos:line="39" pos:column="27"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">memcpy<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="13">char<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">*<pos:position pos:line="41" pos:column="19"/></operator><operator pos:line="41" pos:column="19">)<pos:position pos:line="41" pos:column="20"/></operator><name><name pos:line="41" pos:column="20">dbmval<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">.<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">dptr<pos:position pos:line="41" pos:column="31"/></name></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="33">&amp;<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="34">expiry<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="42">sizeof<argument_list pos:line="41" pos:column="48">(<argument><expr><name pos:line="41" pos:column="49">apr_time_t<pos:position pos:line="41" pos:column="59"/></name></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">memcpy<pos:position pos:line="42" pos:column="11"/></name><argument_list pos:line="42" pos:column="11">(<argument><expr><operator pos:line="42" pos:column="12">(<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">char<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">*<pos:position pos:line="42" pos:column="19"/></operator><operator pos:line="42" pos:column="19">)<pos:position pos:line="42" pos:column="20"/></operator><name><name pos:line="42" pos:column="20">dbmval<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">.<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="27">dptr<pos:position pos:line="42" pos:column="31"/></name></name><operator pos:line="42" pos:column="31">+<pos:position pos:line="42" pos:column="32"/></operator><sizeof pos:line="42" pos:column="32">sizeof<argument_list pos:line="42" pos:column="38">(<argument><expr><name pos:line="42" pos:column="39">apr_time_t<pos:position pos:line="42" pos:column="49"/></name></expr></argument>)<pos:position pos:line="42" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="42" pos:column="52">ucaData<pos:position pos:line="42" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="61">nData<pos:position pos:line="42" pos:column="66"/></name></expr></argument>)<pos:position pos:line="42" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="68"/></expr_stmt>

    <comment type="block" pos:line="44" pos:column="5">/* and store it to the DBM file */</comment>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">apr_pool_clear<pos:position pos:line="45" pos:column="19"/></name><argument_list pos:line="45" pos:column="19">(<argument><expr><name><name pos:line="45" pos:column="20">ctx<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">-&gt;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="25">pool<pos:position pos:line="45" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><operator pos:line="47" pos:column="9">(<pos:position pos:line="47" pos:column="10"/></operator><name pos:line="47" pos:column="10">rv<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <call><name pos:line="47" pos:column="15">apr_dbm_open<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><operator pos:line="47" pos:column="28">&amp;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="29">dbm<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="34">ctx<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">-&gt;<pos:position pos:line="47" pos:column="42"/></operator><name pos:line="47" pos:column="39">data_file<pos:position pos:line="47" pos:column="48"/></name></name></expr></argument>,
                           <argument><expr><name pos:line="48" pos:column="28">APR_DBM_RWCREATE<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="46">DBM_FILE_MODE<pos:position pos:line="48" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="61">ctx<pos:position pos:line="48" pos:column="64"/></name><operator pos:line="48" pos:column="64">-&gt;<pos:position pos:line="48" pos:column="69"/></operator><name pos:line="48" pos:column="66">pool<pos:position pos:line="48" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="71"/></argument_list></call><operator pos:line="48" pos:column="71">)<pos:position pos:line="48" pos:column="72"/></operator> <operator pos:line="48" pos:column="73">!=<pos:position pos:line="48" pos:column="75"/></operator> <name pos:line="48" pos:column="76">APR_SUCCESS<pos:position pos:line="48" pos:column="87"/></name></expr>)<pos:position pos:line="48" pos:column="88"/></condition><then pos:line="48" pos:column="88"> <block pos:line="48" pos:column="89">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">ap_log_error<pos:position pos:line="49" pos:column="21"/></name><argument_list pos:line="49" pos:column="21">(<argument><expr><name pos:line="49" pos:column="22">APLOG_MARK<pos:position pos:line="49" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="34">APLOG_ERR<pos:position pos:line="49" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="45">rv<pos:position pos:line="49" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="49">s<pos:position pos:line="49" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="50" pos:column="22">"Cannot open socache DBM file `%s' for writing "<pos:position pos:line="50" pos:column="70"/></literal>
                     <literal type="string" pos:line="51" pos:column="22">"(store)"<pos:position pos:line="51" pos:column="31"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="52" pos:column="22">ctx<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">-&gt;<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="27">data_file<pos:position pos:line="52" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">free<pos:position pos:line="53" pos:column="13"/></name><argument_list pos:line="53" pos:column="13">(<argument><expr><name><name pos:line="53" pos:column="14">dbmval<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">.<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="21">dptr<pos:position pos:line="53" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="27"/></expr_stmt>
        <return pos:line="54" pos:column="9">return <expr><name pos:line="54" pos:column="16">rv<pos:position pos:line="54" pos:column="18"/></name></expr>;<pos:position pos:line="54" pos:column="19"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><operator pos:line="56" pos:column="9">(<pos:position pos:line="56" pos:column="10"/></operator><name pos:line="56" pos:column="10">rv<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <call><name pos:line="56" pos:column="15">apr_dbm_store<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><name pos:line="56" pos:column="29">dbm<pos:position pos:line="56" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="34">dbmkey<pos:position pos:line="56" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="42">dbmval<pos:position pos:line="56" pos:column="48"/></name></expr></argument>)<pos:position pos:line="56" pos:column="49"/></argument_list></call><operator pos:line="56" pos:column="49">)<pos:position pos:line="56" pos:column="50"/></operator> <operator pos:line="56" pos:column="51">!=<pos:position pos:line="56" pos:column="53"/></operator> <name pos:line="56" pos:column="54">APR_SUCCESS<pos:position pos:line="56" pos:column="65"/></name></expr>)<pos:position pos:line="56" pos:column="66"/></condition><then pos:line="56" pos:column="66"> <block pos:line="56" pos:column="67">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">ap_log_error<pos:position pos:line="57" pos:column="21"/></name><argument_list pos:line="57" pos:column="21">(<argument><expr><name pos:line="57" pos:column="22">APLOG_MARK<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="34">APLOG_ERR<pos:position pos:line="57" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="45">rv<pos:position pos:line="57" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="49">s<pos:position pos:line="57" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="58" pos:column="22">"Cannot store socache object to DBM file `%s'"<pos:position pos:line="58" pos:column="68"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="59" pos:column="22">ctx<pos:position pos:line="59" pos:column="25"/></name><operator pos:line="59" pos:column="25">-&gt;<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="27">data_file<pos:position pos:line="59" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">apr_dbm_close<pos:position pos:line="60" pos:column="22"/></name><argument_list pos:line="60" pos:column="22">(<argument><expr><name pos:line="60" pos:column="23">dbm<pos:position pos:line="60" pos:column="26"/></name></expr></argument>)<pos:position pos:line="60" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">free<pos:position pos:line="61" pos:column="13"/></name><argument_list pos:line="61" pos:column="13">(<argument><expr><name><name pos:line="61" pos:column="14">dbmval<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">.<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="21">dptr<pos:position pos:line="61" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="27"/></expr_stmt>
        <return pos:line="62" pos:column="9">return <expr><name pos:line="62" pos:column="16">rv<pos:position pos:line="62" pos:column="18"/></name></expr>;<pos:position pos:line="62" pos:column="19"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">apr_dbm_close<pos:position pos:line="64" pos:column="18"/></name><argument_list pos:line="64" pos:column="18">(<argument><expr><name pos:line="64" pos:column="19">dbm<pos:position pos:line="64" pos:column="22"/></name></expr></argument>)<pos:position pos:line="64" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="66" pos:column="5">/* free temporary buffers */</comment>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">free<pos:position pos:line="67" pos:column="9"/></name><argument_list pos:line="67" pos:column="9">(<argument><expr><name><name pos:line="67" pos:column="10">dbmval<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">.<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="17">dptr<pos:position pos:line="67" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="69" pos:column="5">/* allow the regular expiring to occur */</comment>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">socache_dbm_expire<pos:position pos:line="70" pos:column="23"/></name><argument_list pos:line="70" pos:column="23">(<argument><expr><name pos:line="70" pos:column="24">ctx<pos:position pos:line="70" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="29">s<pos:position pos:line="70" pos:column="30"/></name></expr></argument>)<pos:position pos:line="70" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="32"/></expr_stmt>

    <return pos:line="72" pos:column="5">return <expr><name pos:line="72" pos:column="12">APR_SUCCESS<pos:position pos:line="72" pos:column="23"/></name></expr>;<pos:position pos:line="72" pos:column="24"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

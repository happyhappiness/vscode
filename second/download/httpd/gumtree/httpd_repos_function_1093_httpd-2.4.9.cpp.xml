<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1093_httpd-2.4.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">req_parsebody<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">lua_State<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">L<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_array_header_t<pos:position pos:line="3" pos:column="23"/></name>          <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">pairs<pos:position pos:line="3" pos:column="39"/></name></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_off_t<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">len<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">res<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">size<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">max_post_size<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">multipart<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">contentType<pos:position pos:line="9" pos:column="28"/></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">request_rec<pos:position pos:line="10" pos:column="16"/></name> <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier></type><name pos:line="10" pos:column="18">r<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><call><name pos:line="10" pos:column="22">ap_lua_check_request_rec<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">(<argument><expr><name pos:line="10" pos:column="47">L<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="50">1<pos:position pos:line="10" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="53"/></decl_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">max_post_size<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <operator pos:line="11" pos:column="21">(<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">apr_size_t<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">)<pos:position pos:line="11" pos:column="33"/></operator> <call><name pos:line="11" pos:column="34">luaL_optint<pos:position pos:line="11" pos:column="45"/></name><argument_list pos:line="11" pos:column="45">(<argument><expr><name pos:line="11" pos:column="46">L<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="49">2<pos:position pos:line="11" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">MAX_STRING_LEN<pos:position pos:line="11" pos:column="66"/></name></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">multipart<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">apr_pcalloc<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name><name pos:line="12" pos:column="29">r<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">pool<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="38">256<pos:position pos:line="12" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">contentType<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <call><name pos:line="13" pos:column="19">apr_table_get<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name><name pos:line="13" pos:column="33">r<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">-&gt;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="36">headers_in<pos:position pos:line="13" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="48">"Content-Type"<pos:position pos:line="13" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">lua_newtable<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">L<pos:position pos:line="14" pos:column="19"/></name></expr></argument>)<pos:position pos:line="14" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">lua_newtable<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><name pos:line="15" pos:column="18">L<pos:position pos:line="15" pos:column="19"/></name></expr></argument>)<pos:position pos:line="15" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>            <comment type="block" pos:line="15" pos:column="33">/* [table, table] */</comment>    
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">contentType<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">!=<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">NULL<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">&amp;&amp;<pos:position pos:line="16" pos:column="39"/></operator> <operator pos:line="16" pos:column="32">(<pos:position pos:line="16" pos:column="33"/></operator><call><name pos:line="16" pos:column="33">sscanf<pos:position pos:line="16" pos:column="39"/></name><argument_list pos:line="16" pos:column="39">(<argument><expr><name pos:line="16" pos:column="40">contentType<pos:position pos:line="16" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="53">"multipart/form-data; boundary=%250c"<pos:position pos:line="16" pos:column="90"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="92">multipart<pos:position pos:line="16" pos:column="101"/></name></expr></argument>)<pos:position pos:line="16" pos:column="102"/></argument_list></call> <operator pos:line="16" pos:column="103">==<pos:position pos:line="16" pos:column="105"/></operator> <literal type="number" pos:line="16" pos:column="106">1<pos:position pos:line="16" pos:column="107"/></literal><operator pos:line="16" pos:column="107">)<pos:position pos:line="16" pos:column="108"/></operator></expr>)<pos:position pos:line="16" pos:column="109"/></condition><then pos:line="16" pos:column="109"> <block pos:line="16" pos:column="110">{
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name>        <modifier pos:line="17" pos:column="21">*<pos:position pos:line="17" pos:column="22"/></modifier></type><name pos:line="17" pos:column="22">buffer<pos:position pos:line="17" pos:column="28"/></name></decl>, <modifier pos:line="17" pos:column="30">*<pos:position pos:line="17" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="17" pos:column="31">key<pos:position pos:line="17" pos:column="34"/></name></decl>, <modifier pos:line="17" pos:column="36">*<pos:position pos:line="17" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="17" pos:column="37">filename<pos:position pos:line="17" pos:column="45"/></name></decl>;<pos:position pos:line="17" pos:column="46"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">char<pos:position pos:line="18" pos:column="13"/></name>        <modifier pos:line="18" pos:column="21">*<pos:position pos:line="18" pos:column="22"/></modifier></type><name pos:line="18" pos:column="22">start<pos:position pos:line="18" pos:column="27"/></name> <init pos:line="18" pos:column="28">= <expr><literal type="number" pos:line="18" pos:column="30">0<pos:position pos:line="18" pos:column="31"/></literal></expr></init></decl>, <modifier pos:line="18" pos:column="33">*<pos:position pos:line="18" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="18" pos:column="34">end<pos:position pos:line="18" pos:column="37"/></name> <init pos:line="18" pos:column="38">= <expr><literal type="number" pos:line="18" pos:column="40">0<pos:position pos:line="18" pos:column="41"/></literal></expr></init></decl>, <modifier pos:line="18" pos:column="43">*<pos:position pos:line="18" pos:column="44"/></modifier><decl><type ref="prev"/><name pos:line="18" pos:column="44">crlf<pos:position pos:line="18" pos:column="48"/></name> <init pos:line="18" pos:column="49">= <expr><literal type="number" pos:line="18" pos:column="51">0<pos:position pos:line="18" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="53"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">const<pos:position pos:line="19" pos:column="14"/></specifier> <name pos:line="19" pos:column="15">char<pos:position pos:line="19" pos:column="19"/></name>  <modifier pos:line="19" pos:column="21">*<pos:position pos:line="19" pos:column="22"/></modifier></type><name pos:line="19" pos:column="22">data<pos:position pos:line="19" pos:column="26"/></name></decl>;<pos:position pos:line="19" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">int<pos:position pos:line="20" pos:column="12"/></name></type>         <name pos:line="20" pos:column="21">i<pos:position pos:line="20" pos:column="22"/></name></decl>;<pos:position pos:line="20" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">size_t<pos:position pos:line="21" pos:column="15"/></name></type>      <name pos:line="21" pos:column="21">vlen<pos:position pos:line="21" pos:column="25"/></name> <init pos:line="21" pos:column="26">= <expr><literal type="number" pos:line="21" pos:column="28">0<pos:position pos:line="21" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">size_t<pos:position pos:line="22" pos:column="15"/></name></type>      <name pos:line="22" pos:column="21">len<pos:position pos:line="22" pos:column="24"/></name> <init pos:line="22" pos:column="25">= <expr><literal type="number" pos:line="22" pos:column="27">0<pos:position pos:line="22" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="29"/></decl_stmt>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">lua_read_body<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">r<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="30">&amp;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="31">data<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="37">(<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="38">apr_off_t<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">*<pos:position pos:line="23" pos:column="48"/></operator><operator pos:line="23" pos:column="48">)<pos:position pos:line="23" pos:column="49"/></operator> <operator pos:line="23" pos:column="50">&amp;<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="51">size<pos:position pos:line="23" pos:column="55"/></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call> <operator pos:line="23" pos:column="57">!=<pos:position pos:line="23" pos:column="59"/></operator> <name pos:line="23" pos:column="60">OK<pos:position pos:line="23" pos:column="62"/></name></expr>)<pos:position pos:line="23" pos:column="63"/></condition><then pos:line="23" pos:column="63"> <block pos:line="23" pos:column="64">{
            <return pos:line="24" pos:column="13">return <expr><literal type="number" pos:line="24" pos:column="20">2<pos:position pos:line="24" pos:column="21"/></literal></expr>;<pos:position pos:line="24" pos:column="22"/></return>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="26" pos:column="9">len<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <call><name pos:line="26" pos:column="15">strlen<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">multipart<pos:position pos:line="26" pos:column="31"/></name></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">i<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <literal type="number" pos:line="27" pos:column="13">0<pos:position pos:line="27" pos:column="14"/></literal></expr>;<pos:position pos:line="27" pos:column="15"/></expr_stmt>
        <for pos:line="28" pos:column="9">for
        <control pos:line="29" pos:column="9">(
            <init><expr><name pos:line="30" pos:column="13">start<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <call><name pos:line="30" pos:column="21">strstr<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><operator pos:line="30" pos:column="28">(<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="29">char<pos:position pos:line="30" pos:column="33"/></name> <operator pos:line="30" pos:column="34">*<pos:position pos:line="30" pos:column="35"/></operator><operator pos:line="30" pos:column="35">)<pos:position pos:line="30" pos:column="36"/></operator> <name pos:line="30" pos:column="37">data<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="43">multipart<pos:position pos:line="30" pos:column="52"/></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="54"/></init>
            <condition><expr><name pos:line="31" pos:column="13">start<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">!=<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">start<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">+<pos:position pos:line="31" pos:column="29"/></operator> <name pos:line="31" pos:column="30">size<pos:position pos:line="31" pos:column="34"/></name></expr>;<pos:position pos:line="31" pos:column="35"/></condition>
            <incr><expr><name pos:line="32" pos:column="13">start<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <name pos:line="32" pos:column="21">end<pos:position pos:line="32" pos:column="24"/></name></expr></incr>
        )<pos:position pos:line="33" pos:column="10"/></control> <block pos:line="33" pos:column="11">{
            <expr_stmt><expr><name pos:line="34" pos:column="13">i<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">++<pos:position pos:line="34" pos:column="16"/></operator></expr>;<pos:position pos:line="34" pos:column="17"/></expr_stmt>
            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><name pos:line="35" pos:column="17">i<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">==<pos:position pos:line="35" pos:column="21"/></operator> <name pos:line="35" pos:column="22">POST_MAX_VARS<pos:position pos:line="35" pos:column="35"/></name></expr>)<pos:position pos:line="35" pos:column="36"/></condition><then pos:line="35" pos:column="36"> <block type="pseudo"><break pos:line="35" pos:column="37">break;<pos:position pos:line="35" pos:column="43"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="36" pos:column="13">end<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <call><name pos:line="36" pos:column="19">strstr<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><operator pos:line="36" pos:column="26">(<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">char<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">*<pos:position pos:line="36" pos:column="33"/></operator><operator pos:line="36" pos:column="33">)<pos:position pos:line="36" pos:column="34"/></operator> <operator pos:line="36" pos:column="35">(<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="36">start<pos:position pos:line="36" pos:column="41"/></name> <operator pos:line="36" pos:column="42">+<pos:position pos:line="36" pos:column="43"/></operator> <literal type="number" pos:line="36" pos:column="44">1<pos:position pos:line="36" pos:column="45"/></literal><operator pos:line="36" pos:column="45">)<pos:position pos:line="36" pos:column="46"/></operator></expr></argument>, <argument><expr><name pos:line="36" pos:column="48">multipart<pos:position pos:line="36" pos:column="57"/></name></expr></argument>)<pos:position pos:line="36" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="59"/></expr_stmt>
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><operator pos:line="37" pos:column="17">!<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="18">end<pos:position pos:line="37" pos:column="21"/></name></expr>)<pos:position pos:line="37" pos:column="22"/></condition><then pos:line="37" pos:column="22"> <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="23">end<pos:position pos:line="37" pos:column="26"/></name> <operator pos:line="37" pos:column="27">=<pos:position pos:line="37" pos:column="28"/></operator> <name pos:line="37" pos:column="29">start<pos:position pos:line="37" pos:column="34"/></name> <operator pos:line="37" pos:column="35">+<pos:position pos:line="37" pos:column="36"/></operator> <name pos:line="37" pos:column="37">size<pos:position pos:line="37" pos:column="41"/></name></expr>;<pos:position pos:line="37" pos:column="42"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name pos:line="38" pos:column="13">crlf<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <call><name pos:line="38" pos:column="20">strstr<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><operator pos:line="38" pos:column="27">(<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="28">char<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">*<pos:position pos:line="38" pos:column="34"/></operator><operator pos:line="38" pos:column="34">)<pos:position pos:line="38" pos:column="35"/></operator> <name pos:line="38" pos:column="36">start<pos:position pos:line="38" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="43">"\r\n\r\n"<pos:position pos:line="38" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt>
            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><operator pos:line="39" pos:column="17">!<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">crlf<pos:position pos:line="39" pos:column="22"/></name></expr>)<pos:position pos:line="39" pos:column="23"/></condition><then pos:line="39" pos:column="23"> <block type="pseudo"><break pos:line="39" pos:column="24">break;<pos:position pos:line="39" pos:column="30"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="40" pos:column="13">key<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <operator pos:line="40" pos:column="19">(<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">char<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">*<pos:position pos:line="40" pos:column="26"/></operator><operator pos:line="40" pos:column="26">)<pos:position pos:line="40" pos:column="27"/></operator> <call><name pos:line="40" pos:column="28">apr_pcalloc<pos:position pos:line="40" pos:column="39"/></name><argument_list pos:line="40" pos:column="39">(<argument><expr><name><name pos:line="40" pos:column="40">r<pos:position pos:line="40" pos:column="41"/></name><operator pos:line="40" pos:column="41">-&gt;<pos:position pos:line="40" pos:column="46"/></operator><name pos:line="40" pos:column="43">pool<pos:position pos:line="40" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="49">256<pos:position pos:line="40" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="41" pos:column="13">filename<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <operator pos:line="41" pos:column="24">(<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">char<pos:position pos:line="41" pos:column="29"/></name> <operator pos:line="41" pos:column="30">*<pos:position pos:line="41" pos:column="31"/></operator><operator pos:line="41" pos:column="31">)<pos:position pos:line="41" pos:column="32"/></operator> <call><name pos:line="41" pos:column="33">apr_pcalloc<pos:position pos:line="41" pos:column="44"/></name><argument_list pos:line="41" pos:column="44">(<argument><expr><name><name pos:line="41" pos:column="45">r<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">-&gt;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="48">pool<pos:position pos:line="41" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="54">256<pos:position pos:line="41" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name pos:line="42" pos:column="13">vlen<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">=<pos:position pos:line="42" pos:column="19"/></operator> <name pos:line="42" pos:column="20">end<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">-<pos:position pos:line="42" pos:column="25"/></operator> <name pos:line="42" pos:column="26">crlf<pos:position pos:line="42" pos:column="30"/></name> <operator pos:line="42" pos:column="31">-<pos:position pos:line="42" pos:column="32"/></operator> <literal type="number" pos:line="42" pos:column="33">8<pos:position pos:line="42" pos:column="34"/></literal></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="43" pos:column="13">buffer<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <operator pos:line="43" pos:column="22">(<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">char<pos:position pos:line="43" pos:column="27"/></name> <operator pos:line="43" pos:column="28">*<pos:position pos:line="43" pos:column="29"/></operator><operator pos:line="43" pos:column="29">)<pos:position pos:line="43" pos:column="30"/></operator> <call><name pos:line="43" pos:column="31">apr_pcalloc<pos:position pos:line="43" pos:column="42"/></name><argument_list pos:line="43" pos:column="42">(<argument><expr><name><name pos:line="43" pos:column="43">r<pos:position pos:line="43" pos:column="44"/></name><operator pos:line="43" pos:column="44">-&gt;<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="46">pool<pos:position pos:line="43" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="52">vlen<pos:position pos:line="43" pos:column="56"/></name><operator pos:line="43" pos:column="56">+<pos:position pos:line="43" pos:column="57"/></operator><literal type="number" pos:line="43" pos:column="57">1<pos:position pos:line="43" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">memcpy<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">(<argument><expr><name pos:line="44" pos:column="20">buffer<pos:position pos:line="44" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="28">crlf<pos:position pos:line="44" pos:column="32"/></name> <operator pos:line="44" pos:column="33">+<pos:position pos:line="44" pos:column="34"/></operator> <literal type="number" pos:line="44" pos:column="35">4<pos:position pos:line="44" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="38">vlen<pos:position pos:line="44" pos:column="42"/></name></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">sscanf<pos:position pos:line="45" pos:column="19"/></name><argument_list pos:line="45" pos:column="19">(<argument><expr><name pos:line="45" pos:column="20">start<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">+<pos:position pos:line="45" pos:column="27"/></operator> <name pos:line="45" pos:column="28">len<pos:position pos:line="45" pos:column="31"/></name> <operator pos:line="45" pos:column="32">+<pos:position pos:line="45" pos:column="33"/></operator> <literal type="number" pos:line="45" pos:column="34">2<pos:position pos:line="45" pos:column="35"/></literal></expr></argument>,
                <argument><expr><literal type="string" pos:line="46" pos:column="17">"Content-Disposition: form-data; name=\"%255[^\"]\"; filename=\"%255[^\"]\""<pos:position pos:line="46" pos:column="93"/></literal></expr></argument>,
                <argument><expr><name pos:line="47" pos:column="17">key<pos:position pos:line="47" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="22">filename<pos:position pos:line="47" pos:column="30"/></name></expr></argument>)<pos:position pos:line="47" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt>
            <if pos:line="48" pos:column="13">if <condition pos:line="48" pos:column="16">(<expr><call><name pos:line="48" pos:column="17">strlen<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><name pos:line="48" pos:column="24">key<pos:position pos:line="48" pos:column="27"/></name></expr></argument>)<pos:position pos:line="48" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="29"/></condition><then pos:line="48" pos:column="29"> <block pos:line="48" pos:column="30">{
                <expr_stmt><expr><call><name pos:line="49" pos:column="17">req_aprtable2luatable_cb_len<pos:position pos:line="49" pos:column="45"/></name><argument_list pos:line="49" pos:column="45">(<argument><expr><name pos:line="49" pos:column="46">L<pos:position pos:line="49" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="49">key<pos:position pos:line="49" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="54">buffer<pos:position pos:line="49" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="62">vlen<pos:position pos:line="49" pos:column="66"/></name></expr></argument>)<pos:position pos:line="49" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="50" pos:column="14"/></block></then></if>
        }<pos:position pos:line="51" pos:column="10"/></block></for>
    }<pos:position pos:line="52" pos:column="6"/></block></then>
    <else pos:line="53" pos:column="5">else <block pos:line="53" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="54" pos:column="9">char<pos:position pos:line="54" pos:column="13"/></name> <modifier pos:line="54" pos:column="14">*<pos:position pos:line="54" pos:column="15"/></modifier></type><name pos:line="54" pos:column="15">buffer<pos:position pos:line="54" pos:column="21"/></name></decl>;<pos:position pos:line="54" pos:column="22"/></decl_stmt>
        <expr_stmt><expr><name pos:line="55" pos:column="9">res<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">=<pos:position pos:line="55" pos:column="14"/></operator> <call><name pos:line="55" pos:column="15">ap_parse_form_data<pos:position pos:line="55" pos:column="33"/></name><argument_list pos:line="55" pos:column="33">(<argument><expr><name pos:line="55" pos:column="34">r<pos:position pos:line="55" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="37">NULL<pos:position pos:line="55" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="43">&amp;<pos:position pos:line="55" pos:column="48"/></operator><name pos:line="55" pos:column="44">pairs<pos:position pos:line="55" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="51">-<pos:position pos:line="55" pos:column="52"/></operator><literal type="number" pos:line="55" pos:column="52">1<pos:position pos:line="55" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="55">max_post_size<pos:position pos:line="55" pos:column="68"/></name></expr></argument>)<pos:position pos:line="55" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="70"/></expr_stmt>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">res<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">==<pos:position pos:line="56" pos:column="19"/></operator> <name pos:line="56" pos:column="20">OK<pos:position pos:line="56" pos:column="22"/></name></expr>)<pos:position pos:line="56" pos:column="23"/></condition><then pos:line="56" pos:column="23"> <block pos:line="56" pos:column="24">{
            <while pos:line="57" pos:column="13">while<condition pos:line="57" pos:column="18">(<expr><name pos:line="57" pos:column="19">pairs<pos:position pos:line="57" pos:column="24"/></name> <operator pos:line="57" pos:column="25">&amp;&amp;<pos:position pos:line="57" pos:column="35"/></operator> <operator pos:line="57" pos:column="28">!<pos:position pos:line="57" pos:column="29"/></operator><call><name pos:line="57" pos:column="29">apr_is_empty_array<pos:position pos:line="57" pos:column="47"/></name><argument_list pos:line="57" pos:column="47">(<argument><expr><name pos:line="57" pos:column="48">pairs<pos:position pos:line="57" pos:column="53"/></name></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="55"/></condition> <block pos:line="57" pos:column="56">{
                <decl_stmt><decl><type><name pos:line="58" pos:column="17">ap_form_pair_t<pos:position pos:line="58" pos:column="31"/></name> <modifier pos:line="58" pos:column="32">*<pos:position pos:line="58" pos:column="33"/></modifier></type><name pos:line="58" pos:column="33">pair<pos:position pos:line="58" pos:column="37"/></name> <init pos:line="58" pos:column="38">= <expr><operator pos:line="58" pos:column="40">(<pos:position pos:line="58" pos:column="41"/></operator><name pos:line="58" pos:column="41">ap_form_pair_t<pos:position pos:line="58" pos:column="55"/></name> <operator pos:line="58" pos:column="56">*<pos:position pos:line="58" pos:column="57"/></operator><operator pos:line="58" pos:column="57">)<pos:position pos:line="58" pos:column="58"/></operator> <call><name pos:line="58" pos:column="59">apr_array_pop<pos:position pos:line="58" pos:column="72"/></name><argument_list pos:line="58" pos:column="72">(<argument><expr><name pos:line="58" pos:column="73">pairs<pos:position pos:line="58" pos:column="78"/></name></expr></argument>)<pos:position pos:line="58" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="58" pos:column="80"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="59" pos:column="17">apr_brigade_length<pos:position pos:line="59" pos:column="35"/></name><argument_list pos:line="59" pos:column="35">(<argument><expr><name><name pos:line="59" pos:column="36">pair<pos:position pos:line="59" pos:column="40"/></name><operator pos:line="59" pos:column="40">-&gt;<pos:position pos:line="59" pos:column="45"/></operator><name pos:line="59" pos:column="42">value<pos:position pos:line="59" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="49">1<pos:position pos:line="59" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="59" pos:column="52">&amp;<pos:position pos:line="59" pos:column="57"/></operator><name pos:line="59" pos:column="53">len<pos:position pos:line="59" pos:column="56"/></name></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name pos:line="60" pos:column="17">size<pos:position pos:line="60" pos:column="21"/></name> <operator pos:line="60" pos:column="22">=<pos:position pos:line="60" pos:column="23"/></operator> <operator pos:line="60" pos:column="24">(<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="25">apr_size_t<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">)<pos:position pos:line="60" pos:column="36"/></operator> <name pos:line="60" pos:column="37">len<pos:position pos:line="60" pos:column="40"/></name></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="61" pos:column="17">buffer<pos:position pos:line="61" pos:column="23"/></name> <operator pos:line="61" pos:column="24">=<pos:position pos:line="61" pos:column="25"/></operator> <call><name pos:line="61" pos:column="26">apr_palloc<pos:position pos:line="61" pos:column="36"/></name><argument_list pos:line="61" pos:column="36">(<argument><expr><name><name pos:line="61" pos:column="37">r<pos:position pos:line="61" pos:column="38"/></name><operator pos:line="61" pos:column="38">-&gt;<pos:position pos:line="61" pos:column="43"/></operator><name pos:line="61" pos:column="40">pool<pos:position pos:line="61" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="46">size<pos:position pos:line="61" pos:column="50"/></name> <operator pos:line="61" pos:column="51">+<pos:position pos:line="61" pos:column="52"/></operator> <literal type="number" pos:line="61" pos:column="53">1<pos:position pos:line="61" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="56"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="62" pos:column="17">apr_brigade_flatten<pos:position pos:line="62" pos:column="36"/></name><argument_list pos:line="62" pos:column="36">(<argument><expr><name><name pos:line="62" pos:column="37">pair<pos:position pos:line="62" pos:column="41"/></name><operator pos:line="62" pos:column="41">-&gt;<pos:position pos:line="62" pos:column="46"/></operator><name pos:line="62" pos:column="43">value<pos:position pos:line="62" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="50">buffer<pos:position pos:line="62" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="58">&amp;<pos:position pos:line="62" pos:column="63"/></operator><name pos:line="62" pos:column="59">size<pos:position pos:line="62" pos:column="63"/></name></expr></argument>)<pos:position pos:line="62" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="65"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="63" pos:column="17">buffer<pos:position pos:line="63" pos:column="23"/></name><index pos:line="63" pos:column="23">[<expr><name pos:line="63" pos:column="24">len<pos:position pos:line="63" pos:column="27"/></name></expr>]<pos:position pos:line="63" pos:column="28"/></index></name> <operator pos:line="63" pos:column="29">=<pos:position pos:line="63" pos:column="30"/></operator> <literal type="number" pos:line="63" pos:column="31">0<pos:position pos:line="63" pos:column="32"/></literal></expr>;<pos:position pos:line="63" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">req_aprtable2luatable_cb<pos:position pos:line="64" pos:column="41"/></name><argument_list pos:line="64" pos:column="41">(<argument><expr><name pos:line="64" pos:column="42">L<pos:position pos:line="64" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="45">pair<pos:position pos:line="64" pos:column="49"/></name><operator pos:line="64" pos:column="49">-&gt;<pos:position pos:line="64" pos:column="54"/></operator><name pos:line="64" pos:column="51">name<pos:position pos:line="64" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="57">buffer<pos:position pos:line="64" pos:column="63"/></name></expr></argument>)<pos:position pos:line="64" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="65" pos:column="14"/></block></while>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>
    }<pos:position pos:line="67" pos:column="6"/></block></else></if>
    <return pos:line="68" pos:column="5">return <expr><literal type="number" pos:line="68" pos:column="12">2<pos:position pos:line="68" pos:column="13"/></literal></expr>;<pos:position pos:line="68" pos:column="14"/></return>                   <comment type="block" pos:line="68" pos:column="33">/* [table&lt;string, string&gt;, table&lt;string, array&lt;string&gt;&gt;] */</comment>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

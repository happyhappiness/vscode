<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_772.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">init_child<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">apr_pool_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">p<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">server_rec<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">s<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><literal type="number" pos:line="3" pos:column="23">0<pos:position pos:line="3" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt> <comment type="block" pos:line="3" pos:column="26">/* get a rid of gcc warning (REWRITELOG_DISABLED) */</comment>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">lockname<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">!=<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">&amp;&amp;<pos:position pos:line="5" pos:column="36"/></operator> <operator pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></operator><operator pos:line="5" pos:column="30">(<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">lockname<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">)<pos:position pos:line="5" pos:column="40"/></operator> <operator pos:line="5" pos:column="41">!=<pos:position pos:line="5" pos:column="43"/></operator> <literal type="char" pos:line="5" pos:column="44">'\0'<pos:position pos:line="5" pos:column="48"/></literal></expr>)<pos:position pos:line="5" pos:column="49"/></condition><then pos:line="5" pos:column="49"> <block pos:line="5" pos:column="50">{
        <expr_stmt><expr><name pos:line="6" pos:column="9">rv<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">apr_global_mutex_child_init<pos:position pos:line="6" pos:column="41"/></name><argument_list pos:line="6" pos:column="41">(<argument><expr><operator pos:line="6" pos:column="42">&amp;<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="43">rewrite_mapr_lock_acquire<pos:position pos:line="6" pos:column="68"/></name></expr></argument>,
                                         <argument><expr><name pos:line="7" pos:column="42">lockname<pos:position pos:line="7" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="52">p<pos:position pos:line="7" pos:column="53"/></name></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="55"/></expr_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">rv<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">!=<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">APR_SUCCESS<pos:position pos:line="8" pos:column="30"/></name></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31"> <block pos:line="8" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="9" pos:column="13">ap_log_error<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">APLOG_MARK<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="38">APLOG_CRIT<pos:position pos:line="9" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="50">rv<pos:position pos:line="9" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="54">s<pos:position pos:line="9" pos:column="55"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="10" pos:column="26">"mod_rewrite: could not init rewrite_mapr_lock_acquire"<pos:position pos:line="10" pos:column="81"/></literal>
                         <literal type="string" pos:line="11" pos:column="26">" in child"<pos:position pos:line="11" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

<cpp:ifndef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifndef<pos:position pos:line="15" pos:column="8"/></cpp:directive> <name pos:line="15" pos:column="9">REWRITELOG_DISABLED<pos:position pos:line="15" pos:column="28"/></name></cpp:ifndef>
    <expr_stmt><expr><name pos:line="16" pos:column="5">rv<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <call><name pos:line="16" pos:column="10">apr_global_mutex_child_init<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><operator pos:line="16" pos:column="38">&amp;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="39">rewrite_log_lock<pos:position pos:line="16" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="57">NULL<pos:position pos:line="16" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="63">p<pos:position pos:line="16" pos:column="64"/></name></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="66"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">rv<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">!=<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">APR_SUCCESS<pos:position pos:line="17" pos:column="26"/></name></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27"> <block pos:line="17" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ap_log_error<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">APLOG_MARK<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">APLOG_CRIT<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="46">rv<pos:position pos:line="18" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">s<pos:position pos:line="18" pos:column="51"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="19" pos:column="22">"mod_rewrite: could not init rewrite log lock in child"<pos:position pos:line="19" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="23" pos:column="5">/* create the lookup cache */</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><call><name pos:line="24" pos:column="10">init_cache<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">p<pos:position pos:line="24" pos:column="22"/></name></expr></argument>)<pos:position pos:line="24" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then pos:line="24" pos:column="24"> <block pos:line="24" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">ap_log_error<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">APLOG_MARK<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">APLOG_CRIT<pos:position pos:line="25" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="46">rv<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">s<pos:position pos:line="25" pos:column="51"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="26" pos:column="22">"mod_rewrite: could not init map cache in child"<pos:position pos:line="26" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6568.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_filter_headers_out<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">ap_filter_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">f<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">apr_bucket_brigade<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">bb<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">h2_task<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">task<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name><name pos:line="3" pos:column="21">f<pos:position pos:line="3" pos:column="22"/></name><operator pos:line="3" pos:column="22">-&gt;<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="24">ctx<pos:position pos:line="3" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">request_rec<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">r<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">f<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">-&gt;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="25">r<pos:position pos:line="4" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_bucket<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">b<pos:position pos:line="5" pos:column="18"/></name></decl>, <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="21">bresp<pos:position pos:line="5" pos:column="26"/></name></decl>, <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="29">body_bucket<pos:position pos:line="5" pos:column="40"/></name> <init pos:line="5" pos:column="41">= <expr><name pos:line="5" pos:column="43">NULL<pos:position pos:line="5" pos:column="47"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="49">*<pos:position pos:line="5" pos:column="50"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="50">next<pos:position pos:line="5" pos:column="54"/></name></decl>;<pos:position pos:line="5" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ap_bucket_error<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">eb<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">NULL<pos:position pos:line="6" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">h2_headers<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">response<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name pos:line="7" pos:column="28">NULL<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ap_log_cerror<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><name pos:line="9" pos:column="19">APLOG_MARK<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="31">APLOG_TRACE1<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="45">0<pos:position pos:line="9" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="48">f<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">-&gt;<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="51">c<pos:position pos:line="9" pos:column="52"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="10" pos:column="19">"h2_task(%s): output_filter called"<pos:position pos:line="10" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="56">task<pos:position pos:line="10" pos:column="60"/></name><operator pos:line="10" pos:column="60">-&gt;<pos:position pos:line="10" pos:column="65"/></operator><name pos:line="10" pos:column="62">id<pos:position pos:line="10" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="66"/></expr_stmt>
    
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name><name pos:line="12" pos:column="10">task<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">output<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">.<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">sent_response<pos:position pos:line="12" pos:column="36"/></name></name></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37"> <block pos:line="12" pos:column="38">{
        <comment type="block" pos:line="13" pos:column="9">/* check, if we need to send the response now. Until we actually
         * see a DATA bucket or some EOS/EOR, we do not do so. */</comment>
        <for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">b<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">APR_BRIGADE_FIRST<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">bb<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></init>
             <condition><expr><name pos:line="16" pos:column="14">b<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">!=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">APR_BRIGADE_SENTINEL<pos:position pos:line="16" pos:column="39"/></name><argument_list pos:line="16" pos:column="39">(<argument><expr><name pos:line="16" pos:column="40">bb<pos:position pos:line="16" pos:column="42"/></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="44"/></condition>
             <incr><expr><name pos:line="17" pos:column="14">b<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">APR_BUCKET_NEXT<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">b<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr></incr>)<pos:position pos:line="17" pos:column="37"/></control>
        <block pos:line="18" pos:column="9">{
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><call><name pos:line="19" pos:column="17">AP_BUCKET_IS_ERROR<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">b<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call> <operator pos:line="19" pos:column="39">&amp;&amp;<pos:position pos:line="19" pos:column="49"/></operator> <operator pos:line="19" pos:column="42">!<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="43">eb<pos:position pos:line="19" pos:column="45"/></name></expr>)<pos:position pos:line="19" pos:column="46"/></condition><then pos:line="19" pos:column="46"> <block pos:line="19" pos:column="47">{
                <expr_stmt><expr><name pos:line="20" pos:column="17">eb<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name><name pos:line="20" pos:column="22">b<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">data<pos:position pos:line="20" pos:column="29"/></name></name></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="21" pos:column="14"/></block></then>
            <elseif pos:line="22" pos:column="13">else <if pos:line="22" pos:column="18">if <condition pos:line="22" pos:column="21">(<expr><call><name pos:line="22" pos:column="22">AP_BUCKET_IS_EOC<pos:position pos:line="22" pos:column="38"/></name><argument_list pos:line="22" pos:column="38">(<argument><expr><name pos:line="22" pos:column="39">b<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="42"/></condition><then pos:line="22" pos:column="42"> <block pos:line="22" pos:column="43">{
                <comment type="block" pos:line="23" pos:column="17">/* If we see an EOC bucket it is a signal that we should get out
                 * of the way doing nothing.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="26" pos:column="17">ap_remove_output_filter<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">f<pos:position pos:line="26" pos:column="42"/></name></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="27" pos:column="17">ap_log_cerror<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">APLOG_MARK<pos:position pos:line="27" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="43">APLOG_TRACE2<pos:position pos:line="27" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="57">0<pos:position pos:line="27" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="60">f<pos:position pos:line="27" pos:column="61"/></name><operator pos:line="27" pos:column="61">-&gt;<pos:position pos:line="27" pos:column="66"/></operator><name pos:line="27" pos:column="63">c<pos:position pos:line="27" pos:column="64"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="28" pos:column="31">"h2_task(%s): eoc bucket passed"<pos:position pos:line="28" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="65">task<pos:position pos:line="28" pos:column="69"/></name><operator pos:line="28" pos:column="69">-&gt;<pos:position pos:line="28" pos:column="74"/></operator><name pos:line="28" pos:column="71">id<pos:position pos:line="28" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="75"/></expr_stmt>
                <return pos:line="29" pos:column="17">return <expr><call><name pos:line="29" pos:column="24">ap_pass_brigade<pos:position pos:line="29" pos:column="39"/></name><argument_list pos:line="29" pos:column="39">(<argument><expr><name><name pos:line="29" pos:column="40">f<pos:position pos:line="29" pos:column="41"/></name><operator pos:line="29" pos:column="41">-&gt;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="43">next<pos:position pos:line="29" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">bb<pos:position pos:line="29" pos:column="51"/></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="53"/></return>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="31" pos:column="13">else <if pos:line="31" pos:column="18">if <condition pos:line="31" pos:column="21">(<expr><operator pos:line="31" pos:column="22">!<pos:position pos:line="31" pos:column="23"/></operator><call><name pos:line="31" pos:column="23">H2_BUCKET_IS_HEADERS<pos:position pos:line="31" pos:column="43"/></name><argument_list pos:line="31" pos:column="43">(<argument><expr><name pos:line="31" pos:column="44">b<pos:position pos:line="31" pos:column="45"/></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call> <operator pos:line="31" pos:column="47">&amp;&amp;<pos:position pos:line="31" pos:column="57"/></operator> <operator pos:line="31" pos:column="50">!<pos:position pos:line="31" pos:column="51"/></operator><call><name pos:line="31" pos:column="51">APR_BUCKET_IS_FLUSH<pos:position pos:line="31" pos:column="70"/></name><argument_list pos:line="31" pos:column="70">(<argument><expr><name pos:line="31" pos:column="71">b<pos:position pos:line="31" pos:column="72"/></name></expr></argument>)<pos:position pos:line="31" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="74"/></condition><then pos:line="31" pos:column="74"> <block pos:line="31" pos:column="75">{ 
                <expr_stmt><expr><name pos:line="32" pos:column="17">body_bucket<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <name pos:line="32" pos:column="31">b<pos:position pos:line="32" pos:column="32"/></name></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
                <break pos:line="33" pos:column="17">break;<pos:position pos:line="33" pos:column="23"/></break>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="35" pos:column="10"/></block></for>
        
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">eb<pos:position pos:line="37" pos:column="15"/></name></expr>)<pos:position pos:line="37" pos:column="16"/></condition><then pos:line="37" pos:column="16"> <block pos:line="37" pos:column="17">{
            <decl_stmt><decl><type><name pos:line="38" pos:column="13">int<pos:position pos:line="38" pos:column="16"/></name></type> <name pos:line="38" pos:column="17">st<pos:position pos:line="38" pos:column="19"/></name> <init pos:line="38" pos:column="20">= <expr><name><name pos:line="38" pos:column="22">eb<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">status<pos:position pos:line="38" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="38" pos:column="33"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">ap_log_cerror<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">APLOG_MARK<pos:position pos:line="39" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="39">APLOG_DEBUG<pos:position pos:line="39" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="52">0<pos:position pos:line="39" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="55">f<pos:position pos:line="39" pos:column="56"/></name><operator pos:line="39" pos:column="56">-&gt;<pos:position pos:line="39" pos:column="61"/></operator><name pos:line="39" pos:column="58">c<pos:position pos:line="39" pos:column="59"/></name></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="61">APLOGNO<pos:position pos:line="39" pos:column="68"/></name><argument_list pos:line="39" pos:column="68">(<argument><expr><literal type="number" pos:line="39" pos:column="69">03047<pos:position pos:line="39" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="75"/></argument_list></call>
                          <literal type="string" pos:line="40" pos:column="27">"h2_task(%s): err bucket status=%d"<pos:position pos:line="40" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="64">task<pos:position pos:line="40" pos:column="68"/></name><operator pos:line="40" pos:column="68">-&gt;<pos:position pos:line="40" pos:column="73"/></operator><name pos:line="40" pos:column="70">id<pos:position pos:line="40" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="74">st<pos:position pos:line="40" pos:column="76"/></name></expr></argument>)<pos:position pos:line="40" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="78"/></expr_stmt>
            <comment type="block" pos:line="41" pos:column="13">/* throw everything away and replace it with the error response
             * generated by ap_die() */</comment>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">apr_brigade_cleanup<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name pos:line="43" pos:column="33">bb<pos:position pos:line="43" pos:column="35"/></name></expr></argument>)<pos:position pos:line="43" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">ap_die<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">(<argument><expr><name pos:line="44" pos:column="20">st<pos:position pos:line="44" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="24">r<pos:position pos:line="44" pos:column="25"/></name></expr></argument>)<pos:position pos:line="44" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>
            <return pos:line="45" pos:column="13">return <expr><name pos:line="45" pos:column="20">AP_FILTER_ERROR<pos:position pos:line="45" pos:column="35"/></name></expr>;<pos:position pos:line="45" pos:column="36"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
        
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">body_bucket<pos:position pos:line="48" pos:column="24"/></name></expr>)<pos:position pos:line="48" pos:column="25"/></condition><then pos:line="48" pos:column="25"> <block pos:line="48" pos:column="26">{
            <comment type="block" pos:line="49" pos:column="13">/* time to insert the response bucket before the body */</comment>
            <expr_stmt><expr><name pos:line="50" pos:column="13">response<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <call><name pos:line="50" pos:column="24">create_response<pos:position pos:line="50" pos:column="39"/></name><argument_list pos:line="50" pos:column="39">(<argument><expr><name pos:line="50" pos:column="40">task<pos:position pos:line="50" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="46">r<pos:position pos:line="50" pos:column="47"/></name></expr></argument>)<pos:position pos:line="50" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="49"/></expr_stmt>
            <if pos:line="51" pos:column="13">if <condition pos:line="51" pos:column="16">(<expr><name pos:line="51" pos:column="17">response<pos:position pos:line="51" pos:column="25"/></name> <operator pos:line="51" pos:column="26">==<pos:position pos:line="51" pos:column="28"/></operator> <name pos:line="51" pos:column="29">NULL<pos:position pos:line="51" pos:column="33"/></name></expr>)<pos:position pos:line="51" pos:column="34"/></condition><then pos:line="51" pos:column="34"> <block pos:line="51" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="52" pos:column="17">ap_log_cerror<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><name pos:line="52" pos:column="31">APLOG_MARK<pos:position pos:line="52" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">APLOG_NOTICE<pos:position pos:line="52" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="57">0<pos:position pos:line="52" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="60">f<pos:position pos:line="52" pos:column="61"/></name><operator pos:line="52" pos:column="61">-&gt;<pos:position pos:line="52" pos:column="66"/></operator><name pos:line="52" pos:column="63">c<pos:position pos:line="52" pos:column="64"/></name></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="66">APLOGNO<pos:position pos:line="52" pos:column="73"/></name><argument_list pos:line="52" pos:column="73">(<argument><expr><literal type="number" pos:line="52" pos:column="74">03048<pos:position pos:line="52" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="80"/></argument_list></call>
                              <literal type="string" pos:line="53" pos:column="31">"h2_task(%s): unable to create response"<pos:position pos:line="53" pos:column="71"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="73">task<pos:position pos:line="53" pos:column="77"/></name><operator pos:line="53" pos:column="77">-&gt;<pos:position pos:line="53" pos:column="82"/></operator><name pos:line="53" pos:column="79">id<pos:position pos:line="53" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="83"/></expr_stmt>
                <return pos:line="54" pos:column="17">return <expr><name pos:line="54" pos:column="24">APR_ENOMEM<pos:position pos:line="54" pos:column="34"/></name></expr>;<pos:position pos:line="54" pos:column="35"/></return>
            }<pos:position pos:line="55" pos:column="14"/></block></then></if>
            
            <expr_stmt><expr><name pos:line="57" pos:column="13">bresp<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <call><name pos:line="57" pos:column="21">h2_bucket_headers_create<pos:position pos:line="57" pos:column="45"/></name><argument_list pos:line="57" pos:column="45">(<argument><expr><name><name pos:line="57" pos:column="46">f<pos:position pos:line="57" pos:column="47"/></name><operator pos:line="57" pos:column="47">-&gt;<pos:position pos:line="57" pos:column="52"/></operator><name pos:line="57" pos:column="49">c<pos:position pos:line="57" pos:column="50"/></name><operator pos:line="57" pos:column="50">-&gt;<pos:position pos:line="57" pos:column="55"/></operator><name pos:line="57" pos:column="52">bucket_alloc<pos:position pos:line="57" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="66">response<pos:position pos:line="57" pos:column="74"/></name></expr></argument>)<pos:position pos:line="57" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">APR_BUCKET_INSERT_BEFORE<pos:position pos:line="58" pos:column="37"/></name><argument_list pos:line="58" pos:column="37">(<argument><expr><name pos:line="58" pos:column="38">body_bucket<pos:position pos:line="58" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="51">bresp<pos:position pos:line="58" pos:column="56"/></name></expr></argument>)<pos:position pos:line="58" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="59" pos:column="13">task<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">-&gt;<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="19">output<pos:position pos:line="59" pos:column="25"/></name><operator pos:line="59" pos:column="25">.<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="26">sent_response<pos:position pos:line="59" pos:column="39"/></name></name> <operator pos:line="59" pos:column="40">=<pos:position pos:line="59" pos:column="41"/></operator> <literal type="number" pos:line="59" pos:column="42">1<pos:position pos:line="59" pos:column="43"/></literal></expr>;<pos:position pos:line="59" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="60" pos:column="13">r<pos:position pos:line="60" pos:column="14"/></name><operator pos:line="60" pos:column="14">-&gt;<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="16">sent_bodyct<pos:position pos:line="60" pos:column="27"/></name></name> <operator pos:line="60" pos:column="28">=<pos:position pos:line="60" pos:column="29"/></operator> <literal type="number" pos:line="60" pos:column="30">1<pos:position pos:line="60" pos:column="31"/></literal></expr>;<pos:position pos:line="60" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>
    
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name><name pos:line="64" pos:column="9">r<pos:position pos:line="64" pos:column="10"/></name><operator pos:line="64" pos:column="10">-&gt;<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="12">header_only<pos:position pos:line="64" pos:column="23"/></name></name></expr>)<pos:position pos:line="64" pos:column="24"/></condition><then pos:line="64" pos:column="24"> <block pos:line="64" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">ap_log_cerror<pos:position pos:line="65" pos:column="22"/></name><argument_list pos:line="65" pos:column="22">(<argument><expr><name pos:line="65" pos:column="23">APLOG_MARK<pos:position pos:line="65" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="35">APLOG_TRACE1<pos:position pos:line="65" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="49">0<pos:position pos:line="65" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="52">f<pos:position pos:line="65" pos:column="53"/></name><operator pos:line="65" pos:column="53">-&gt;<pos:position pos:line="65" pos:column="58"/></operator><name pos:line="65" pos:column="55">c<pos:position pos:line="65" pos:column="56"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="66" pos:column="23">"h2_task(%s): header_only, cleanup output brigade"<pos:position pos:line="66" pos:column="73"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="67" pos:column="23">task<pos:position pos:line="67" pos:column="27"/></name><operator pos:line="67" pos:column="27">-&gt;<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="29">id<pos:position pos:line="67" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="68" pos:column="9">b<pos:position pos:line="68" pos:column="10"/></name> <operator pos:line="68" pos:column="11">=<pos:position pos:line="68" pos:column="12"/></operator> <ternary><condition><expr><name pos:line="68" pos:column="13">body_bucket<pos:position pos:line="68" pos:column="24"/></name></expr>?<pos:position pos:line="68" pos:column="25"/></condition><then pos:line="68" pos:column="25"> <expr><name pos:line="68" pos:column="26">body_bucket<pos:position pos:line="68" pos:column="37"/></name></expr> <pos:position pos:line="68" pos:column="38"/></then><else pos:line="68" pos:column="38">: <expr><call><name pos:line="68" pos:column="40">APR_BRIGADE_FIRST<pos:position pos:line="68" pos:column="57"/></name><argument_list pos:line="68" pos:column="57">(<argument><expr><name pos:line="68" pos:column="58">bb<pos:position pos:line="68" pos:column="60"/></name></expr></argument>)<pos:position pos:line="68" pos:column="61"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="68" pos:column="62"/></expr_stmt>
        <while pos:line="69" pos:column="9">while <condition pos:line="69" pos:column="15">(<expr><name pos:line="69" pos:column="16">b<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">!=<pos:position pos:line="69" pos:column="20"/></operator> <call><name pos:line="69" pos:column="21">APR_BRIGADE_SENTINEL<pos:position pos:line="69" pos:column="41"/></name><argument_list pos:line="69" pos:column="41">(<argument><expr><name pos:line="69" pos:column="42">bb<pos:position pos:line="69" pos:column="44"/></name></expr></argument>)<pos:position pos:line="69" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="46"/></condition> <block pos:line="69" pos:column="47">{
            <expr_stmt><expr><name pos:line="70" pos:column="13">next<pos:position pos:line="70" pos:column="17"/></name> <operator pos:line="70" pos:column="18">=<pos:position pos:line="70" pos:column="19"/></operator> <call><name pos:line="70" pos:column="20">APR_BUCKET_NEXT<pos:position pos:line="70" pos:column="35"/></name><argument_list pos:line="70" pos:column="35">(<argument><expr><name pos:line="70" pos:column="36">b<pos:position pos:line="70" pos:column="37"/></name></expr></argument>)<pos:position pos:line="70" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="39"/></expr_stmt>
            <if pos:line="71" pos:column="13">if <condition pos:line="71" pos:column="16">(<expr><call><name pos:line="71" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="71" pos:column="34"/></name><argument_list pos:line="71" pos:column="34">(<argument><expr><name pos:line="71" pos:column="35">b<pos:position pos:line="71" pos:column="36"/></name></expr></argument>)<pos:position pos:line="71" pos:column="37"/></argument_list></call> <operator pos:line="71" pos:column="38">||<pos:position pos:line="71" pos:column="40"/></operator> <call><name pos:line="71" pos:column="41">AP_BUCKET_IS_EOR<pos:position pos:line="71" pos:column="57"/></name><argument_list pos:line="71" pos:column="57">(<argument><expr><name pos:line="71" pos:column="58">b<pos:position pos:line="71" pos:column="59"/></name></expr></argument>)<pos:position pos:line="71" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="61"/></condition><then pos:line="71" pos:column="61"> <block pos:line="71" pos:column="62">{
                <break pos:line="72" pos:column="17">break;<pos:position pos:line="72" pos:column="23"/></break>
            }<pos:position pos:line="73" pos:column="14"/></block></then></if> 
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="74" pos:column="30"/></name><argument_list pos:line="74" pos:column="30">(<argument><expr><name pos:line="74" pos:column="31">b<pos:position pos:line="74" pos:column="32"/></name></expr></argument>)<pos:position pos:line="74" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">apr_bucket_destroy<pos:position pos:line="75" pos:column="31"/></name><argument_list pos:line="75" pos:column="31">(<argument><expr><name pos:line="75" pos:column="32">b<pos:position pos:line="75" pos:column="33"/></name></expr></argument>)<pos:position pos:line="75" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="76" pos:column="13">b<pos:position pos:line="76" pos:column="14"/></name> <operator pos:line="76" pos:column="15">=<pos:position pos:line="76" pos:column="16"/></operator> <name pos:line="76" pos:column="17">next<pos:position pos:line="76" pos:column="21"/></name></expr>;<pos:position pos:line="76" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></while>
    }<pos:position pos:line="78" pos:column="6"/></block></then>
    <elseif pos:line="79" pos:column="5">else <if pos:line="79" pos:column="10">if <condition pos:line="79" pos:column="13">(<expr><name><name pos:line="79" pos:column="14">task<pos:position pos:line="79" pos:column="18"/></name><operator pos:line="79" pos:column="18">-&gt;<pos:position pos:line="79" pos:column="23"/></operator><name pos:line="79" pos:column="20">output<pos:position pos:line="79" pos:column="26"/></name><operator pos:line="79" pos:column="26">.<pos:position pos:line="79" pos:column="27"/></operator><name pos:line="79" pos:column="27">sent_response<pos:position pos:line="79" pos:column="40"/></name></name></expr>)<pos:position pos:line="79" pos:column="41"/></condition><then pos:line="79" pos:column="41"> <block pos:line="79" pos:column="42">{
        <comment type="block" pos:line="80" pos:column="9">/* lets get out of the way, our task is done */</comment>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">ap_remove_output_filter<pos:position pos:line="81" pos:column="32"/></name><argument_list pos:line="81" pos:column="32">(<argument><expr><name pos:line="81" pos:column="33">f<pos:position pos:line="81" pos:column="34"/></name></expr></argument>)<pos:position pos:line="81" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if></elseif></if>
    <return pos:line="83" pos:column="5">return <expr><call><name pos:line="83" pos:column="12">ap_pass_brigade<pos:position pos:line="83" pos:column="27"/></name><argument_list pos:line="83" pos:column="27">(<argument><expr><name><name pos:line="83" pos:column="28">f<pos:position pos:line="83" pos:column="29"/></name><operator pos:line="83" pos:column="29">-&gt;<pos:position pos:line="83" pos:column="34"/></operator><name pos:line="83" pos:column="31">next<pos:position pos:line="83" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="37">bb<pos:position pos:line="83" pos:column="39"/></name></expr></argument>)<pos:position pos:line="83" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="41"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

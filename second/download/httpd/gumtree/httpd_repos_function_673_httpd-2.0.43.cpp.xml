<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_673_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ssl_io_input_read<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">ssl_io_input_ctx_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">ctx<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">buf<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="3" pos:column="39">apr_size_t<pos:position pos:line="3" pos:column="49"/></name> <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type><name pos:line="3" pos:column="51">len<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="55"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">wanted<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><operator pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">len<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">bytes<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">rc<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="9" pos:column="5">*<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">len<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">bytes<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <call><name pos:line="11" pos:column="18">char_buffer_read<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><operator pos:line="11" pos:column="35">&amp;<pos:position pos:line="11" pos:column="40"/></operator><name><name pos:line="11" pos:column="36">ctx<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="41">cbuf<pos:position pos:line="11" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="47">buf<pos:position pos:line="11" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">wanted<pos:position pos:line="11" pos:column="58"/></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call><operator pos:line="11" pos:column="59">)<pos:position pos:line="11" pos:column="60"/></operator></expr>)<pos:position pos:line="11" pos:column="61"/></condition><then pos:line="11" pos:column="61"> <block pos:line="11" pos:column="62">{
        <expr_stmt><expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">len<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">bytes<pos:position pos:line="12" pos:column="21"/></name></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">ctx<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">inbio<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">.<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">mode<pos:position pos:line="13" pos:column="28"/></name></name> <operator pos:line="13" pos:column="29">==<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">AP_MODE_SPECULATIVE<pos:position pos:line="13" pos:column="51"/></name></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52"> <block pos:line="13" pos:column="53">{
            <comment type="block" pos:line="14" pos:column="13">/* We want to rollback this read. */</comment>
            <expr_stmt><expr><name><name pos:line="15" pos:column="13">ctx<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">cbuf<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">.<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">value<pos:position pos:line="15" pos:column="28"/></name></name> <operator pos:line="15" pos:column="29">-=<pos:position pos:line="15" pos:column="31"/></operator> <name pos:line="15" pos:column="32">bytes<pos:position pos:line="15" pos:column="37"/></name></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="16" pos:column="13">ctx<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">cbuf<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">.<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="23">length<pos:position pos:line="16" pos:column="29"/></name></name> <operator pos:line="16" pos:column="30">+=<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="33">bytes<pos:position pos:line="16" pos:column="38"/></name></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
            <return pos:line="17" pos:column="13">return <expr><name pos:line="17" pos:column="20">APR_SUCCESS<pos:position pos:line="17" pos:column="31"/></name></expr>;<pos:position pos:line="17" pos:column="32"/></return>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if> 
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><operator pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">len<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">&gt;=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="22">wanted<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">)<pos:position pos:line="19" pos:column="29"/></operator> <operator pos:line="19" pos:column="30">||<pos:position pos:line="19" pos:column="32"/></operator> <name><name pos:line="19" pos:column="33">ctx<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">-&gt;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="38">inbio<pos:position pos:line="19" pos:column="43"/></name><operator pos:line="19" pos:column="43">.<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="44">mode<pos:position pos:line="19" pos:column="48"/></name></name> <operator pos:line="19" pos:column="49">==<pos:position pos:line="19" pos:column="51"/></operator> <name pos:line="19" pos:column="52">AP_MODE_GETLINE<pos:position pos:line="19" pos:column="67"/></name></expr>)<pos:position pos:line="19" pos:column="68"/></condition><then pos:line="19" pos:column="68"> <block pos:line="19" pos:column="69">{
            <return pos:line="20" pos:column="13">return <expr><name pos:line="20" pos:column="20">APR_SUCCESS<pos:position pos:line="20" pos:column="31"/></name></expr>;<pos:position pos:line="20" pos:column="32"/></return>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="24" pos:column="5">rc<pos:position pos:line="24" pos:column="7"/></name> <operator pos:line="24" pos:column="8">=<pos:position pos:line="24" pos:column="9"/></operator> <call><name pos:line="24" pos:column="10">ssl_io_hook_read<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><name><name pos:line="24" pos:column="27">ctx<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">-&gt;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="32">frec<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">pssl<pos:position pos:line="24" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="44">buf<pos:position pos:line="24" pos:column="47"/></name> <operator pos:line="24" pos:column="48">+<pos:position pos:line="24" pos:column="49"/></operator> <name pos:line="24" pos:column="50">bytes<pos:position pos:line="24" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="57">wanted<pos:position pos:line="24" pos:column="63"/></name> <operator pos:line="24" pos:column="64">-<pos:position pos:line="24" pos:column="65"/></operator> <name pos:line="24" pos:column="66">bytes<pos:position pos:line="24" pos:column="71"/></name></expr></argument>)<pos:position pos:line="24" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="73"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">rc<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">&gt;<pos:position pos:line="26" pos:column="16"/></operator> <literal type="number" pos:line="26" pos:column="14">0<pos:position pos:line="26" pos:column="15"/></literal></expr>)<pos:position pos:line="26" pos:column="16"/></condition><then pos:line="26" pos:column="16"> <block pos:line="26" pos:column="17">{
        <expr_stmt><expr><operator pos:line="27" pos:column="9">*<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">len<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">+=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">rc<pos:position pos:line="27" pos:column="19"/></name></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">ctx<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">inbio<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">.<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">mode<pos:position pos:line="28" pos:column="28"/></name></name> <operator pos:line="28" pos:column="29">==<pos:position pos:line="28" pos:column="31"/></operator> <name pos:line="28" pos:column="32">AP_MODE_SPECULATIVE<pos:position pos:line="28" pos:column="51"/></name></expr>)<pos:position pos:line="28" pos:column="52"/></condition><then pos:line="28" pos:column="52"> <block pos:line="28" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">char_buffer_write<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><operator pos:line="29" pos:column="31">&amp;<pos:position pos:line="29" pos:column="36"/></operator><name><name pos:line="29" pos:column="32">ctx<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">-&gt;<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="37">cbuf<pos:position pos:line="29" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="43">buf<pos:position pos:line="29" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="48">rc<pos:position pos:line="29" pos:column="50"/></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then>
    <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><operator pos:line="32" pos:column="14">(<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">rc<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">==<pos:position pos:line="32" pos:column="20"/></operator> <literal type="number" pos:line="32" pos:column="21">0<pos:position pos:line="32" pos:column="22"/></literal><operator pos:line="32" pos:column="22">)<pos:position pos:line="32" pos:column="23"/></operator> <operator pos:line="32" pos:column="24">&amp;&amp;<pos:position pos:line="32" pos:column="34"/></operator> <operator pos:line="32" pos:column="27">(<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="28">errno<pos:position pos:line="32" pos:column="33"/></name> <operator pos:line="32" pos:column="34">!=<pos:position pos:line="32" pos:column="36"/></operator> <name pos:line="32" pos:column="37">EINTR<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">)<pos:position pos:line="32" pos:column="43"/></operator></expr>)<pos:position pos:line="32" pos:column="44"/></condition><then pos:line="32" pos:column="44"> <block pos:line="32" pos:column="45">{
        <comment type="block" pos:line="33" pos:column="9">/* something other than SSL_ERROR_WANT_READ */</comment>
        <return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">APR_EOF<pos:position pos:line="34" pos:column="23"/></name></expr>;<pos:position pos:line="34" pos:column="24"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="36" pos:column="5">else <if pos:line="36" pos:column="10">if <condition pos:line="36" pos:column="13">(<expr><operator pos:line="36" pos:column="14">(<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">rc<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">==<pos:position pos:line="36" pos:column="20"/></operator> <operator pos:line="36" pos:column="21">-<pos:position pos:line="36" pos:column="22"/></operator><literal type="number" pos:line="36" pos:column="22">1<pos:position pos:line="36" pos:column="23"/></literal><operator pos:line="36" pos:column="23">)<pos:position pos:line="36" pos:column="24"/></operator> <operator pos:line="36" pos:column="25">&amp;&amp;<pos:position pos:line="36" pos:column="35"/></operator> <operator pos:line="36" pos:column="28">(<pos:position pos:line="36" pos:column="29"/></operator><name><name pos:line="36" pos:column="29">ctx<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">-&gt;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="34">inbio<pos:position pos:line="36" pos:column="39"/></name><operator pos:line="36" pos:column="39">.<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="40">rc<pos:position pos:line="36" pos:column="42"/></name></name> <operator pos:line="36" pos:column="43">==<pos:position pos:line="36" pos:column="45"/></operator> <name pos:line="36" pos:column="46">APR_SUCCESS<pos:position pos:line="36" pos:column="57"/></name><operator pos:line="36" pos:column="57">)<pos:position pos:line="36" pos:column="58"/></operator></expr>)<pos:position pos:line="36" pos:column="59"/></condition><then pos:line="36" pos:column="59"> <block pos:line="36" pos:column="60">{
        <comment type="block" pos:line="37" pos:column="9">/*
         * bucket read from socket was successful,
         * but there was an error within the ssl runtime.
         */</comment>
        <return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">APR_EGENERAL<pos:position pos:line="41" pos:column="28"/></name></expr>;<pos:position pos:line="41" pos:column="29"/></return>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if></elseif></if>

    <return pos:line="44" pos:column="5">return <expr><name><name pos:line="44" pos:column="12">ctx<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">-&gt;<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="17">inbio<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">.<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="23">rc<pos:position pos:line="44" pos:column="25"/></name></name></expr>;<pos:position pos:line="44" pos:column="26"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

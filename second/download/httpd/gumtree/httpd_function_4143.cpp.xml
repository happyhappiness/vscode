<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4143.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">ajp_ilink_send<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">apr_socket_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">sock<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">ajp_msg_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">msg<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name>         <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">buf<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">status<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type>   <name pos:line="5" pos:column="18">length<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">sock<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">==<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">NULL<pos:position pos:line="7" pos:column="21"/></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22"> <block pos:line="7" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">ap_log_error<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">APLOG_MARK<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">APLOG_ERR<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="45">0<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="48">NULL<pos:position pos:line="8" pos:column="52"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="9" pos:column="23">"ajp_ilink_send(): NULL socket provided"<pos:position pos:line="9" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="65"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">AJP_EINVAL<pos:position pos:line="10" pos:column="26"/></name></expr>;<pos:position pos:line="10" pos:column="27"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ajp_msg_end<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">msg<pos:position pos:line="13" pos:column="20"/></name></expr></argument>)<pos:position pos:line="13" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">length<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <name><name pos:line="15" pos:column="14">msg<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">len<pos:position pos:line="15" pos:column="22"/></name></name></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">buf<pos:position pos:line="16" pos:column="8"/></name>    <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">char<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">*<pos:position pos:line="16" pos:column="21"/></operator><operator pos:line="16" pos:column="21">)<pos:position pos:line="16" pos:column="22"/></operator><name><name pos:line="16" pos:column="22">msg<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">buf<pos:position pos:line="16" pos:column="30"/></name></name></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>

    <do pos:line="18" pos:column="5">do <block pos:line="18" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">apr_size_t<pos:position pos:line="19" pos:column="19"/></name></type> <name pos:line="19" pos:column="20">written<pos:position pos:line="19" pos:column="27"/></name> <init pos:line="19" pos:column="28">= <expr><name pos:line="19" pos:column="30">length<pos:position pos:line="19" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="37"/></decl_stmt>

        <expr_stmt><expr><name pos:line="21" pos:column="9">status<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">apr_socket_send<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">sock<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="40">buf<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="45">&amp;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="46">written<pos:position pos:line="21" pos:column="53"/></name></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="55"/></expr_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">status<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">!=<pos:position pos:line="22" pos:column="22"/></operator> <name pos:line="22" pos:column="23">APR_SUCCESS<pos:position pos:line="22" pos:column="34"/></name></expr>)<pos:position pos:line="22" pos:column="35"/></condition><then pos:line="22" pos:column="35"> <block pos:line="22" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">ap_log_error<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">APLOG_MARK<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">APLOG_ERR<pos:position pos:line="23" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="49">status<pos:position pos:line="23" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="57">NULL<pos:position pos:line="23" pos:column="61"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="24" pos:column="27">"ajp_ilink_send(): send failed"<pos:position pos:line="24" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="60"/></expr_stmt>
            <return pos:line="25" pos:column="13">return <expr><name pos:line="25" pos:column="20">status<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="27" pos:column="9">length<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">-=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">written<pos:position pos:line="27" pos:column="26"/></name></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">buf<pos:position pos:line="28" pos:column="12"/></name>    <operator pos:line="28" pos:column="16">+=<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">written<pos:position pos:line="28" pos:column="26"/></name></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block> while <condition pos:line="29" pos:column="13">(<expr><name pos:line="29" pos:column="14">length<pos:position pos:line="29" pos:column="20"/></name></expr>)<pos:position pos:line="29" pos:column="21"/></condition>;<pos:position pos:line="29" pos:column="22"/></do>

    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">APR_SUCCESS<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

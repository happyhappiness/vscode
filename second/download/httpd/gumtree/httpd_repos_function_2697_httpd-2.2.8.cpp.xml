<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2697_httpd-2.2.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dbd_mysql_prepare<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">apr_pool_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">pool<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">apr_dbd_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">sql<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                             <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">query<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="49">const<pos:position pos:line="2" pos:column="54"/></specifier> <name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">label<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="3" pos:column="30">apr_dbd_prepared_t<pos:position pos:line="3" pos:column="48"/></name> <modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier><modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type><name pos:line="3" pos:column="51">statement<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="61"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <comment type="block" pos:line="5" pos:column="5">/* Translate from apr_dbd to native query format */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">myquery<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><call><name pos:line="6" pos:column="21">apr_pstrdup<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">pool<pos:position pos:line="6" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="39">query<pos:position pos:line="6" pos:column="44"/></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">p<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><name pos:line="7" pos:column="15">myquery<pos:position pos:line="7" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">q<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">ret<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>
    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init><expr><name pos:line="10" pos:column="10">q<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">query<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></init> <condition><expr><operator pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">q<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></condition> <incr><expr><operator pos:line="10" pos:column="25">++<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">q<pos:position pos:line="10" pos:column="28"/></name></expr></incr>)<pos:position pos:line="10" pos:column="29"/></control> <block pos:line="10" pos:column="30">{
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">q<pos:position pos:line="11" pos:column="14"/></name><index pos:line="11" pos:column="14">[<expr><literal type="number" pos:line="11" pos:column="15">0<pos:position pos:line="11" pos:column="16"/></literal></expr>]<pos:position pos:line="11" pos:column="17"/></index></name> <operator pos:line="11" pos:column="18">==<pos:position pos:line="11" pos:column="20"/></operator> <literal type="char" pos:line="11" pos:column="21">'%'<pos:position pos:line="11" pos:column="24"/></literal></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25"> <block pos:line="11" pos:column="26">{
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><call><name pos:line="12" pos:column="17">isalpha<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name><name pos:line="12" pos:column="25">q<pos:position pos:line="12" pos:column="26"/></name><index pos:line="12" pos:column="26">[<expr><literal type="number" pos:line="12" pos:column="27">1<pos:position pos:line="12" pos:column="28"/></literal></expr>]<pos:position pos:line="12" pos:column="29"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31"> <block pos:line="12" pos:column="32">{
                <expr_stmt><expr><operator pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">p<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">++<pos:position pos:line="13" pos:column="21"/></operator> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <literal type="char" pos:line="13" pos:column="24">'?'<pos:position pos:line="13" pos:column="27"/></literal></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="14" pos:column="17">++<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">q<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
            }<pos:position pos:line="15" pos:column="14"/></block></then>
            <elseif pos:line="16" pos:column="13">else <if pos:line="16" pos:column="18">if <condition pos:line="16" pos:column="21">(<expr><name><name pos:line="16" pos:column="22">q<pos:position pos:line="16" pos:column="23"/></name><index pos:line="16" pos:column="23">[<expr><literal type="number" pos:line="16" pos:column="24">1<pos:position pos:line="16" pos:column="25"/></literal></expr>]<pos:position pos:line="16" pos:column="26"/></index></name> <operator pos:line="16" pos:column="27">==<pos:position pos:line="16" pos:column="29"/></operator> <literal type="char" pos:line="16" pos:column="30">'%'<pos:position pos:line="16" pos:column="33"/></literal></expr>)<pos:position pos:line="16" pos:column="34"/></condition><then pos:line="16" pos:column="34"> <block pos:line="16" pos:column="35">{
                <comment type="block" pos:line="17" pos:column="17">/* reduce %% to % */</comment>
                <expr_stmt><expr><operator pos:line="18" pos:column="17">*<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">p<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">++<pos:position pos:line="18" pos:column="21"/></operator> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <operator pos:line="18" pos:column="24">*<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">q<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">++<pos:position pos:line="18" pos:column="28"/></operator></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="19" pos:column="14"/></block></then></if></elseif>
            <else pos:line="20" pos:column="13">else <block pos:line="20" pos:column="18">{
                <expr_stmt><expr><operator pos:line="21" pos:column="17">*<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">p<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">++<pos:position pos:line="21" pos:column="21"/></operator> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <operator pos:line="21" pos:column="24">*<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">q<pos:position pos:line="21" pos:column="26"/></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="22" pos:column="14"/></block></else></if>
        }<pos:position pos:line="23" pos:column="10"/></block></then>
        <else pos:line="24" pos:column="9">else <block pos:line="24" pos:column="14">{
            <expr_stmt><expr><operator pos:line="25" pos:column="13">*<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">p<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">++<pos:position pos:line="25" pos:column="17"/></operator> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <operator pos:line="25" pos:column="20">*<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">q<pos:position pos:line="25" pos:column="22"/></name></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></else></if>
    }<pos:position pos:line="27" pos:column="6"/></block></for> 
    <expr_stmt><expr><operator pos:line="28" pos:column="5">*<pos:position pos:line="28" pos:column="6"/></operator><name pos:line="28" pos:column="6">p<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <literal type="number" pos:line="28" pos:column="10">0<pos:position pos:line="28" pos:column="11"/></literal></expr>;<pos:position pos:line="28" pos:column="12"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">!<pos:position pos:line="29" pos:column="10"/></operator><operator pos:line="29" pos:column="10">*<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="11">statement<pos:position pos:line="29" pos:column="20"/></name></expr>)<pos:position pos:line="29" pos:column="21"/></condition><then pos:line="29" pos:column="21"> <block pos:line="29" pos:column="22">{
        <expr_stmt><expr><operator pos:line="30" pos:column="9">*<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">statement<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <call><name pos:line="30" pos:column="22">apr_palloc<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name pos:line="30" pos:column="33">pool<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="39">sizeof<argument_list pos:line="30" pos:column="45">(<argument><expr><name pos:line="30" pos:column="46">apr_dbd_prepared_t<pos:position pos:line="30" pos:column="64"/></name></expr></argument>)<pos:position pos:line="30" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><operator pos:line="32" pos:column="5">(<pos:position pos:line="32" pos:column="6"/></operator><operator pos:line="32" pos:column="6">*<pos:position pos:line="32" pos:column="7"/></operator><name pos:line="32" pos:column="7">statement<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">)<pos:position pos:line="32" pos:column="17"/></operator><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">stmt<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <call><name pos:line="32" pos:column="26">mysql_stmt_init<pos:position pos:line="32" pos:column="41"/></name><argument_list pos:line="32" pos:column="41">(<argument><expr><name><name pos:line="32" pos:column="42">sql<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">-&gt;<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="47">conn<pos:position pos:line="32" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="53"/></expr_stmt>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name><operator pos:line="34" pos:column="9">(<pos:position pos:line="34" pos:column="10"/></operator><operator pos:line="34" pos:column="10">*<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="11">statement<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">)<pos:position pos:line="34" pos:column="21"/></operator><operator pos:line="34" pos:column="21">-&gt;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="23">stmt<pos:position pos:line="34" pos:column="27"/></name></name></expr>)<pos:position pos:line="34" pos:column="28"/></condition><then pos:line="34" pos:column="28"> <block pos:line="34" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">apr_pool_cleanup_register<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">pool<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><name><operator pos:line="35" pos:column="41">(<pos:position pos:line="35" pos:column="42"/></operator><operator pos:line="35" pos:column="42">*<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="43">statement<pos:position pos:line="35" pos:column="52"/></name><operator pos:line="35" pos:column="52">)<pos:position pos:line="35" pos:column="53"/></operator><operator pos:line="35" pos:column="53">-&gt;<pos:position pos:line="35" pos:column="58"/></operator><name pos:line="35" pos:column="55">stmt<pos:position pos:line="35" pos:column="59"/></name></name></expr></argument>,
                                  <argument><expr><name pos:line="36" pos:column="35">stmt_close<pos:position pos:line="36" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">apr_pool_cleanup_null<pos:position pos:line="36" pos:column="68"/></name></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">ret<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <call><name pos:line="37" pos:column="15">mysql_stmt_prepare<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name><operator pos:line="37" pos:column="34">(<pos:position pos:line="37" pos:column="35"/></operator><operator pos:line="37" pos:column="35">*<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="36">statement<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">)<pos:position pos:line="37" pos:column="46"/></operator><operator pos:line="37" pos:column="46">-&gt;<pos:position pos:line="37" pos:column="51"/></operator><name pos:line="37" pos:column="48">stmt<pos:position pos:line="37" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="54">myquery<pos:position pos:line="37" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="63">strlen<pos:position pos:line="37" pos:column="69"/></name><argument_list pos:line="37" pos:column="69">(<argument><expr><name pos:line="37" pos:column="70">myquery<pos:position pos:line="37" pos:column="77"/></name></expr></argument>)<pos:position pos:line="37" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="80"/></expr_stmt>

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">ret<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">!=<pos:position pos:line="39" pos:column="19"/></operator> <literal type="number" pos:line="39" pos:column="20">0<pos:position pos:line="39" pos:column="21"/></literal></expr>)<pos:position pos:line="39" pos:column="22"/></condition><then pos:line="39" pos:column="22"> <block pos:line="39" pos:column="23">{
            <expr_stmt><expr><name pos:line="40" pos:column="13">ret<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <call><name pos:line="40" pos:column="19">mysql_stmt_errno<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name><operator pos:line="40" pos:column="36">(<pos:position pos:line="40" pos:column="37"/></operator><operator pos:line="40" pos:column="37">*<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="38">statement<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">)<pos:position pos:line="40" pos:column="48"/></operator><operator pos:line="40" pos:column="48">-&gt;<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="50">stmt<pos:position pos:line="40" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>

        <return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">ret<pos:position pos:line="43" pos:column="19"/></name></expr>;<pos:position pos:line="43" pos:column="20"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <return pos:line="46" pos:column="5">return <expr><name pos:line="46" pos:column="12">CR_OUT_OF_MEMORY<pos:position pos:line="46" pos:column="28"/></name></expr>;<pos:position pos:line="46" pos:column="29"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

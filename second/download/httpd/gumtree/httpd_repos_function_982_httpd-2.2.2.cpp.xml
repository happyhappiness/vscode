<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_982_httpd-2.2.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">cache_generate_key_default<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">request_rec<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">r<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">apr_pool_t<pos:position pos:line="1" pos:column="67"/></name><modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type> <name pos:line="1" pos:column="69">p<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name><modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier><modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">key<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">port_str<pos:position pos:line="4" pos:column="19"/></name></decl>, <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="22">scheme<pos:position pos:line="4" pos:column="28"/></name></decl>, <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="31">hn<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type> <name pos:line="5" pos:column="18">hostname<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/*
     * Use the canonical name to improve cache hit rate, but only if this is
     * not a proxy request or if this is a reverse proxy request.
     * We need to handle both cases in the same manner as for the reverse proxy
     * case we have the following situation:
     *
     * If a cached entry is looked up by mod_cache's quick handler r-&gt;proxyreq
     * is still unset in the reverse proxy case as it only gets set in the
     * translate name hook (either by ProxyPass or mod_rewrite) which is run
     * after the quick handler hook. This is different to the forward proxy
     * case where it gets set before the quick handler is run (in the
     * post_read_request hook).
     * If a cache entry is created by the CACHE_SAVE filter we always have
     * r-&gt;proxyreq set correctly.
     * So we must ensure that in the reverse proxy case we use the same code
     * path and using the canonical name seems to be the right thing to do
     * in the reverse proxy case.
     */</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><name><name pos:line="26" pos:column="10">r<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">proxyreq<pos:position pos:line="26" pos:column="21"/></name></name> <operator pos:line="26" pos:column="22">||<pos:position pos:line="26" pos:column="24"/></operator> <operator pos:line="26" pos:column="25">(<pos:position pos:line="26" pos:column="26"/></operator><name><name pos:line="26" pos:column="26">r<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">proxyreq<pos:position pos:line="26" pos:column="37"/></name></name> <operator pos:line="26" pos:column="38">==<pos:position pos:line="26" pos:column="40"/></operator> <name pos:line="26" pos:column="41">PROXYREQ_REVERSE<pos:position pos:line="26" pos:column="57"/></name><operator pos:line="26" pos:column="57">)<pos:position pos:line="26" pos:column="58"/></operator></expr>)<pos:position pos:line="26" pos:column="59"/></condition><then pos:line="26" pos:column="59"> <block pos:line="26" pos:column="60">{
        <comment type="block" pos:line="27" pos:column="9">/* Use _default_ as the hostname if none present, as in mod_vhost */</comment>
        <expr_stmt><expr><name pos:line="28" pos:column="9">hostname<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator>  <call><name pos:line="28" pos:column="21">ap_get_server_name<pos:position pos:line="28" pos:column="39"/></name><argument_list pos:line="28" pos:column="39">(<argument><expr><name pos:line="28" pos:column="40">r<pos:position pos:line="28" pos:column="41"/></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">hostname<pos:position pos:line="29" pos:column="22"/></name></expr>)<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23"> <block pos:line="29" pos:column="24">{
            <expr_stmt><expr><name pos:line="30" pos:column="13">hostname<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <literal type="string" pos:line="30" pos:column="24">"_default_"<pos:position pos:line="30" pos:column="35"/></literal></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then>
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if<condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">r<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">parsed_uri<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">.<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="27">hostname<pos:position pos:line="33" pos:column="35"/></name></name></expr>)<pos:position pos:line="33" pos:column="36"/></condition><then pos:line="33" pos:column="36"> <block pos:line="33" pos:column="37">{
        <comment type="block" pos:line="34" pos:column="9">/* Copy the parsed uri hostname */</comment>
        <expr_stmt><expr><name pos:line="35" pos:column="9">hn<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <call><name pos:line="35" pos:column="14">apr_pcalloc<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">p<pos:position pos:line="35" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="29">strlen<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name><name pos:line="35" pos:column="36">r<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">-&gt;<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="39">parsed_uri<pos:position pos:line="35" pos:column="49"/></name><operator pos:line="35" pos:column="49">.<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="50">hostname<pos:position pos:line="35" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call> <operator pos:line="35" pos:column="60">+<pos:position pos:line="35" pos:column="61"/></operator> <literal type="number" pos:line="35" pos:column="62">1<pos:position pos:line="35" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
        <for pos:line="36" pos:column="9">for <control pos:line="36" pos:column="13">(<init><expr><name pos:line="36" pos:column="14">i<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <literal type="number" pos:line="36" pos:column="18">0<pos:position pos:line="36" pos:column="19"/></literal></expr>;<pos:position pos:line="36" pos:column="20"/></init> <condition><expr><name><name pos:line="36" pos:column="21">r<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">-&gt;<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="24">parsed_uri<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">.<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="35">hostname<pos:position pos:line="36" pos:column="43"/></name><index pos:line="36" pos:column="43">[<expr><name pos:line="36" pos:column="44">i<pos:position pos:line="36" pos:column="45"/></name></expr>]<pos:position pos:line="36" pos:column="46"/></index></name></expr>;<pos:position pos:line="36" pos:column="47"/></condition> <incr><expr><name pos:line="36" pos:column="48">i<pos:position pos:line="36" pos:column="49"/></name><operator pos:line="36" pos:column="49">++<pos:position pos:line="36" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="52"/></control> <block pos:line="36" pos:column="53">{
            <expr_stmt><expr><name><name pos:line="37" pos:column="13">hn<pos:position pos:line="37" pos:column="15"/></name><index pos:line="37" pos:column="15">[<expr><name pos:line="37" pos:column="16">i<pos:position pos:line="37" pos:column="17"/></name></expr>]<pos:position pos:line="37" pos:column="18"/></index></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <call><name pos:line="37" pos:column="21">apr_tolower<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name><name pos:line="37" pos:column="33">r<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">-&gt;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="36">parsed_uri<pos:position pos:line="37" pos:column="46"/></name><operator pos:line="37" pos:column="46">.<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="47">hostname<pos:position pos:line="37" pos:column="55"/></name><index pos:line="37" pos:column="55">[<expr><name pos:line="37" pos:column="56">i<pos:position pos:line="37" pos:column="57"/></name></expr>]<pos:position pos:line="37" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></for>
        <comment type="block" pos:line="39" pos:column="9">/* const work-around */</comment>
        <expr_stmt><expr><name pos:line="40" pos:column="9">hostname<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <name pos:line="40" pos:column="20">hn<pos:position pos:line="40" pos:column="22"/></name></expr>;<pos:position pos:line="40" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if></elseif>
    <else pos:line="42" pos:column="5">else <block pos:line="42" pos:column="10">{
        <comment type="block" pos:line="43" pos:column="9">/* We are a proxied request, with no hostname. Unlikely
         * to get very far - but just in case */</comment>
        <expr_stmt><expr><name pos:line="45" pos:column="9">hostname<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <literal type="string" pos:line="45" pos:column="20">"_default_"<pos:position pos:line="45" pos:column="31"/></literal></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="48" pos:column="5">/* Copy the scheme, ensuring that it is lower case. If the parsed uri
     * contains no string or if this is not a proxy request.
     */</comment>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name><name pos:line="51" pos:column="9">r<pos:position pos:line="51" pos:column="10"/></name><operator pos:line="51" pos:column="10">-&gt;<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="12">proxyreq<pos:position pos:line="51" pos:column="20"/></name></name> <operator pos:line="51" pos:column="21">&amp;&amp;<pos:position pos:line="51" pos:column="31"/></operator> <name><name pos:line="51" pos:column="24">r<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">-&gt;<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="27">parsed_uri<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">.<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="38">scheme<pos:position pos:line="51" pos:column="44"/></name></name></expr>)<pos:position pos:line="51" pos:column="45"/></condition><then pos:line="51" pos:column="45"> <block pos:line="51" pos:column="46">{
        <comment type="block" pos:line="52" pos:column="9">/* Copy the scheme */</comment>
        <expr_stmt><expr><name pos:line="53" pos:column="9">scheme<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <call><name pos:line="53" pos:column="18">apr_pcalloc<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><name pos:line="53" pos:column="30">p<pos:position pos:line="53" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="33">strlen<pos:position pos:line="53" pos:column="39"/></name><argument_list pos:line="53" pos:column="39">(<argument><expr><name><name pos:line="53" pos:column="40">r<pos:position pos:line="53" pos:column="41"/></name><operator pos:line="53" pos:column="41">-&gt;<pos:position pos:line="53" pos:column="46"/></operator><name pos:line="53" pos:column="43">parsed_uri<pos:position pos:line="53" pos:column="53"/></name><operator pos:line="53" pos:column="53">.<pos:position pos:line="53" pos:column="54"/></operator><name pos:line="53" pos:column="54">scheme<pos:position pos:line="53" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="61"/></argument_list></call> <operator pos:line="53" pos:column="62">+<pos:position pos:line="53" pos:column="63"/></operator> <literal type="number" pos:line="53" pos:column="64">1<pos:position pos:line="53" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="67"/></expr_stmt>
        <for pos:line="54" pos:column="9">for <control pos:line="54" pos:column="13">(<init><expr><name pos:line="54" pos:column="14">i<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <literal type="number" pos:line="54" pos:column="18">0<pos:position pos:line="54" pos:column="19"/></literal></expr>;<pos:position pos:line="54" pos:column="20"/></init> <condition><expr><name><name pos:line="54" pos:column="21">r<pos:position pos:line="54" pos:column="22"/></name><operator pos:line="54" pos:column="22">-&gt;<pos:position pos:line="54" pos:column="27"/></operator><name pos:line="54" pos:column="24">parsed_uri<pos:position pos:line="54" pos:column="34"/></name><operator pos:line="54" pos:column="34">.<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="35">scheme<pos:position pos:line="54" pos:column="41"/></name><index pos:line="54" pos:column="41">[<expr><name pos:line="54" pos:column="42">i<pos:position pos:line="54" pos:column="43"/></name></expr>]<pos:position pos:line="54" pos:column="44"/></index></name></expr>;<pos:position pos:line="54" pos:column="45"/></condition> <incr><expr><name pos:line="54" pos:column="46">i<pos:position pos:line="54" pos:column="47"/></name><operator pos:line="54" pos:column="47">++<pos:position pos:line="54" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="50"/></control> <block pos:line="54" pos:column="51">{
            <expr_stmt><expr><name><name pos:line="55" pos:column="13">scheme<pos:position pos:line="55" pos:column="19"/></name><index pos:line="55" pos:column="19">[<expr><name pos:line="55" pos:column="20">i<pos:position pos:line="55" pos:column="21"/></name></expr>]<pos:position pos:line="55" pos:column="22"/></index></name> <operator pos:line="55" pos:column="23">=<pos:position pos:line="55" pos:column="24"/></operator> <call><name pos:line="55" pos:column="25">apr_tolower<pos:position pos:line="55" pos:column="36"/></name><argument_list pos:line="55" pos:column="36">(<argument><expr><name><name pos:line="55" pos:column="37">r<pos:position pos:line="55" pos:column="38"/></name><operator pos:line="55" pos:column="38">-&gt;<pos:position pos:line="55" pos:column="43"/></operator><name pos:line="55" pos:column="40">parsed_uri<pos:position pos:line="55" pos:column="50"/></name><operator pos:line="55" pos:column="50">.<pos:position pos:line="55" pos:column="51"/></operator><name pos:line="55" pos:column="51">scheme<pos:position pos:line="55" pos:column="57"/></name><index pos:line="55" pos:column="57">[<expr><name pos:line="55" pos:column="58">i<pos:position pos:line="55" pos:column="59"/></name></expr>]<pos:position pos:line="55" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="55" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="56" pos:column="10"/></block></for>
    }<pos:position pos:line="57" pos:column="6"/></block></then>
    <else pos:line="58" pos:column="5">else <block pos:line="58" pos:column="10">{
        <expr_stmt><expr><name pos:line="59" pos:column="9">scheme<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <literal type="string" pos:line="59" pos:column="18">"http"<pos:position pos:line="59" pos:column="24"/></literal></expr>;<pos:position pos:line="59" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="62" pos:column="5">/* If the content is locally generated, use the port-number of the
     * current server. Otherwise. copy the URI's port-string (which may be a
     * service name). If the URI contains no port-string, use apr-util's
     * notion of the default port for that scheme - if available.
     */</comment>
    <if pos:line="67" pos:column="5">if<condition pos:line="67" pos:column="7">(<expr><name><name pos:line="67" pos:column="8">r<pos:position pos:line="67" pos:column="9"/></name><operator pos:line="67" pos:column="9">-&gt;<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="11">proxyreq<pos:position pos:line="67" pos:column="19"/></name></name></expr>)<pos:position pos:line="67" pos:column="20"/></condition><then pos:line="67" pos:column="20"> <block pos:line="67" pos:column="21">{
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name><name pos:line="68" pos:column="13">r<pos:position pos:line="68" pos:column="14"/></name><operator pos:line="68" pos:column="14">-&gt;<pos:position pos:line="68" pos:column="19"/></operator><name pos:line="68" pos:column="16">parsed_uri<pos:position pos:line="68" pos:column="26"/></name><operator pos:line="68" pos:column="26">.<pos:position pos:line="68" pos:column="27"/></operator><name pos:line="68" pos:column="27">port_str<pos:position pos:line="68" pos:column="35"/></name></name></expr>)<pos:position pos:line="68" pos:column="36"/></condition><then pos:line="68" pos:column="36"> <block pos:line="68" pos:column="37">{
            <expr_stmt><expr><name pos:line="69" pos:column="13">port_str<pos:position pos:line="69" pos:column="21"/></name> <operator pos:line="69" pos:column="22">=<pos:position pos:line="69" pos:column="23"/></operator> <call><name pos:line="69" pos:column="24">apr_pcalloc<pos:position pos:line="69" pos:column="35"/></name><argument_list pos:line="69" pos:column="35">(<argument><expr><name pos:line="69" pos:column="36">p<pos:position pos:line="69" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="39">strlen<pos:position pos:line="69" pos:column="45"/></name><argument_list pos:line="69" pos:column="45">(<argument><expr><name><name pos:line="69" pos:column="46">r<pos:position pos:line="69" pos:column="47"/></name><operator pos:line="69" pos:column="47">-&gt;<pos:position pos:line="69" pos:column="52"/></operator><name pos:line="69" pos:column="49">parsed_uri<pos:position pos:line="69" pos:column="59"/></name><operator pos:line="69" pos:column="59">.<pos:position pos:line="69" pos:column="60"/></operator><name pos:line="69" pos:column="60">port_str<pos:position pos:line="69" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="69"/></argument_list></call> <operator pos:line="69" pos:column="70">+<pos:position pos:line="69" pos:column="71"/></operator> <literal type="number" pos:line="69" pos:column="72">2<pos:position pos:line="69" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="70" pos:column="13">port_str<pos:position pos:line="70" pos:column="21"/></name><index pos:line="70" pos:column="21">[<expr><literal type="number" pos:line="70" pos:column="22">0<pos:position pos:line="70" pos:column="23"/></literal></expr>]<pos:position pos:line="70" pos:column="24"/></index></name> <operator pos:line="70" pos:column="25">=<pos:position pos:line="70" pos:column="26"/></operator> <literal type="char" pos:line="70" pos:column="27">':'<pos:position pos:line="70" pos:column="30"/></literal></expr>;<pos:position pos:line="70" pos:column="31"/></expr_stmt>
            <for pos:line="71" pos:column="13">for <control pos:line="71" pos:column="17">(<init><expr><name pos:line="71" pos:column="18">i<pos:position pos:line="71" pos:column="19"/></name> <operator pos:line="71" pos:column="20">=<pos:position pos:line="71" pos:column="21"/></operator> <literal type="number" pos:line="71" pos:column="22">0<pos:position pos:line="71" pos:column="23"/></literal></expr>;<pos:position pos:line="71" pos:column="24"/></init> <condition><expr><name><name pos:line="71" pos:column="25">r<pos:position pos:line="71" pos:column="26"/></name><operator pos:line="71" pos:column="26">-&gt;<pos:position pos:line="71" pos:column="31"/></operator><name pos:line="71" pos:column="28">parsed_uri<pos:position pos:line="71" pos:column="38"/></name><operator pos:line="71" pos:column="38">.<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="39">port_str<pos:position pos:line="71" pos:column="47"/></name><index pos:line="71" pos:column="47">[<expr><name pos:line="71" pos:column="48">i<pos:position pos:line="71" pos:column="49"/></name></expr>]<pos:position pos:line="71" pos:column="50"/></index></name></expr>;<pos:position pos:line="71" pos:column="51"/></condition> <incr><expr><name pos:line="71" pos:column="52">i<pos:position pos:line="71" pos:column="53"/></name><operator pos:line="71" pos:column="53">++<pos:position pos:line="71" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="71" pos:column="56"/></control> <block pos:line="71" pos:column="57">{
                <expr_stmt><expr><name><name pos:line="72" pos:column="17">port_str<pos:position pos:line="72" pos:column="25"/></name><index pos:line="72" pos:column="25">[<expr><name pos:line="72" pos:column="26">i<pos:position pos:line="72" pos:column="27"/></name> <operator pos:line="72" pos:column="28">+<pos:position pos:line="72" pos:column="29"/></operator> <literal type="number" pos:line="72" pos:column="30">1<pos:position pos:line="72" pos:column="31"/></literal></expr>]<pos:position pos:line="72" pos:column="32"/></index></name> <operator pos:line="72" pos:column="33">=<pos:position pos:line="72" pos:column="34"/></operator> <call><name pos:line="72" pos:column="35">apr_tolower<pos:position pos:line="72" pos:column="46"/></name><argument_list pos:line="72" pos:column="46">(<argument><expr><name><name pos:line="72" pos:column="47">r<pos:position pos:line="72" pos:column="48"/></name><operator pos:line="72" pos:column="48">-&gt;<pos:position pos:line="72" pos:column="53"/></operator><name pos:line="72" pos:column="50">parsed_uri<pos:position pos:line="72" pos:column="60"/></name><operator pos:line="72" pos:column="60">.<pos:position pos:line="72" pos:column="61"/></operator><name pos:line="72" pos:column="61">port_str<pos:position pos:line="72" pos:column="69"/></name><index pos:line="72" pos:column="69">[<expr><name pos:line="72" pos:column="70">i<pos:position pos:line="72" pos:column="71"/></name></expr>]<pos:position pos:line="72" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="72" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="74"/></expr_stmt>
            }<pos:position pos:line="73" pos:column="14"/></block></for>
        }<pos:position pos:line="74" pos:column="10"/></block></then>
        <elseif pos:line="75" pos:column="9">else <if pos:line="75" pos:column="14">if <condition pos:line="75" pos:column="17">(<expr><call><name pos:line="75" pos:column="18">apr_uri_port_of_scheme<pos:position pos:line="75" pos:column="40"/></name><argument_list pos:line="75" pos:column="40">(<argument><expr><name pos:line="75" pos:column="41">scheme<pos:position pos:line="75" pos:column="47"/></name></expr></argument>)<pos:position pos:line="75" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="49"/></condition><then pos:line="75" pos:column="49"> <block pos:line="75" pos:column="50">{
            <expr_stmt><expr><name pos:line="76" pos:column="13">port_str<pos:position pos:line="76" pos:column="21"/></name> <operator pos:line="76" pos:column="22">=<pos:position pos:line="76" pos:column="23"/></operator> <call><name pos:line="76" pos:column="24">apr_psprintf<pos:position pos:line="76" pos:column="36"/></name><argument_list pos:line="76" pos:column="36">(<argument><expr><name pos:line="76" pos:column="37">p<pos:position pos:line="76" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="40">":%u"<pos:position pos:line="76" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="76" pos:column="47">apr_uri_port_of_scheme<pos:position pos:line="76" pos:column="69"/></name><argument_list pos:line="76" pos:column="69">(<argument><expr><name pos:line="76" pos:column="70">scheme<pos:position pos:line="76" pos:column="76"/></name></expr></argument>)<pos:position pos:line="76" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></then></if></elseif>
        <else pos:line="78" pos:column="9">else <block pos:line="78" pos:column="14">{
            <comment type="block" pos:line="79" pos:column="13">/* No port string given in the AbsoluteUri, and we have no
             * idea what the default port for the scheme is. Leave it
             * blank and live with the inefficiency of some extra cached
             * entities.
             */</comment>
            <expr_stmt><expr><name pos:line="84" pos:column="13">port_str<pos:position pos:line="84" pos:column="21"/></name> <operator pos:line="84" pos:column="22">=<pos:position pos:line="84" pos:column="23"/></operator> <literal type="string" pos:line="84" pos:column="24">""<pos:position pos:line="84" pos:column="26"/></literal></expr>;<pos:position pos:line="84" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="85" pos:column="10"/></block></else></if>
    }<pos:position pos:line="86" pos:column="6"/></block></then>
    <else pos:line="87" pos:column="5">else <block pos:line="87" pos:column="10">{
        <comment type="block" pos:line="88" pos:column="9">/* Use the server port */</comment>
        <expr_stmt><expr><name pos:line="89" pos:column="9">port_str<pos:position pos:line="89" pos:column="17"/></name> <operator pos:line="89" pos:column="18">=<pos:position pos:line="89" pos:column="19"/></operator> <call><name pos:line="89" pos:column="20">apr_psprintf<pos:position pos:line="89" pos:column="32"/></name><argument_list pos:line="89" pos:column="32">(<argument><expr><name pos:line="89" pos:column="33">p<pos:position pos:line="89" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="36">":%u"<pos:position pos:line="89" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="89" pos:column="43">ap_get_server_port<pos:position pos:line="89" pos:column="61"/></name><argument_list pos:line="89" pos:column="61">(<argument><expr><name pos:line="89" pos:column="62">r<pos:position pos:line="89" pos:column="63"/></name></expr></argument>)<pos:position pos:line="89" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="92" pos:column="5">/* Key format is a URI */</comment>
    <expr_stmt><expr><operator pos:line="93" pos:column="5">*<pos:position pos:line="93" pos:column="6"/></operator><name pos:line="93" pos:column="6">key<pos:position pos:line="93" pos:column="9"/></name> <operator pos:line="93" pos:column="10">=<pos:position pos:line="93" pos:column="11"/></operator> <call><name pos:line="93" pos:column="12">apr_pstrcat<pos:position pos:line="93" pos:column="23"/></name><argument_list pos:line="93" pos:column="23">(<argument><expr><name pos:line="93" pos:column="24">p<pos:position pos:line="93" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="27">scheme<pos:position pos:line="93" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="35">"://"<pos:position pos:line="93" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="42">hostname<pos:position pos:line="93" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="52">port_str<pos:position pos:line="93" pos:column="60"/></name></expr></argument>,
                       <argument><expr><name><name pos:line="94" pos:column="24">r<pos:position pos:line="94" pos:column="25"/></name><operator pos:line="94" pos:column="25">-&gt;<pos:position pos:line="94" pos:column="30"/></operator><name pos:line="94" pos:column="27">parsed_uri<pos:position pos:line="94" pos:column="37"/></name><operator pos:line="94" pos:column="37">.<pos:position pos:line="94" pos:column="38"/></operator><name pos:line="94" pos:column="38">path<pos:position pos:line="94" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="44">"?"<pos:position pos:line="94" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="49">r<pos:position pos:line="94" pos:column="50"/></name><operator pos:line="94" pos:column="50">-&gt;<pos:position pos:line="94" pos:column="55"/></operator><name pos:line="94" pos:column="52">args<pos:position pos:line="94" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="58">NULL<pos:position pos:line="94" pos:column="62"/></name></expr></argument>)<pos:position pos:line="94" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="64"/></expr_stmt>

    <return pos:line="96" pos:column="5">return <expr><name pos:line="96" pos:column="12">APR_SUCCESS<pos:position pos:line="96" pos:column="23"/></name></expr>;<pos:position pos:line="96" pos:column="24"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

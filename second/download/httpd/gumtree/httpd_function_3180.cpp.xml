<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3180.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ap_authn_cache_store<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">request_rec<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">r<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">module<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                                 <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">user<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <name pos:line="2" pos:column="58">char<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">realm<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
                                 <parameter><decl><type><specifier pos:line="3" pos:column="34">const<pos:position pos:line="3" pos:column="39"/></specifier> <name pos:line="3" pos:column="40">char<pos:position pos:line="3" pos:column="44"/></name><modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type> <name pos:line="3" pos:column="46">data<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="51"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">authn_cache_dircfg<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">dcfg<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">key<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_time_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">expiry<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">i<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">use_cache<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><literal type="number" pos:line="10" pos:column="21">0<pos:position pos:line="10" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* first check whether we're cacheing for this module */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">dcfg<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <call><name pos:line="13" pos:column="12">ap_get_module_config<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name><name pos:line="13" pos:column="33">r<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">-&gt;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="36">per_dir_config<pos:position pos:line="13" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="52">&amp;<pos:position pos:line="13" pos:column="57"/></operator><name pos:line="13" pos:column="53">authn_socache_module<pos:position pos:line="13" pos:column="73"/></name></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">dcfg<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">providers<pos:position pos:line="14" pos:column="25"/></name></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26"> <block pos:line="14" pos:column="27">{
        <return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <for pos:line="17" pos:column="5">for <control pos:line="17" pos:column="9">(<init><expr><name pos:line="17" pos:column="10">i<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <literal type="number" pos:line="17" pos:column="14">0<pos:position pos:line="17" pos:column="15"/></literal></expr>;<pos:position pos:line="17" pos:column="16"/></init> <condition><expr><name pos:line="17" pos:column="17">i<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">&lt;<pos:position pos:line="17" pos:column="23"/></operator> <name><name pos:line="17" pos:column="21">dcfg<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">providers<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">nelts<pos:position pos:line="17" pos:column="43"/></name></name></expr>;<pos:position pos:line="17" pos:column="44"/></condition> <incr><expr><operator pos:line="17" pos:column="45">++<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="47">i<pos:position pos:line="17" pos:column="48"/></name></expr></incr>)<pos:position pos:line="17" pos:column="49"/></control> <block pos:line="17" pos:column="50">{
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><call><name pos:line="18" pos:column="14">strcmp<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">module<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="29">APR_ARRAY_IDX<pos:position pos:line="18" pos:column="42"/></name><argument_list pos:line="18" pos:column="42">(<argument><expr><name><name pos:line="18" pos:column="43">dcfg<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">providers<pos:position pos:line="18" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="60">i<pos:position pos:line="18" pos:column="61"/></name></expr></argument>, <argument><expr><specifier pos:line="18" pos:column="63">const<pos:position pos:line="18" pos:column="68"/></specifier> <name pos:line="18" pos:column="69">char<pos:position pos:line="18" pos:column="73"/></name><operator pos:line="18" pos:column="73">*<pos:position pos:line="18" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="77"/></condition><then pos:line="18" pos:column="77"> <block pos:line="18" pos:column="78">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">use_cache<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
            <break pos:line="20" pos:column="13">break;<pos:position pos:line="20" pos:column="19"/></break>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></for>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">use_cache<pos:position pos:line="23" pos:column="19"/></name></expr>)<pos:position pos:line="23" pos:column="20"/></condition><then pos:line="23" pos:column="20"> <block pos:line="23" pos:column="21">{
        <return pos:line="24" pos:column="9">return;<pos:position pos:line="24" pos:column="16"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="27" pos:column="5">/* OK, we're on.  Grab mutex to do our business */</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">rv<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <call><name pos:line="28" pos:column="10">apr_global_mutex_trylock<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">authn_cache_mutex<pos:position pos:line="28" pos:column="52"/></name></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="54"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><call><name pos:line="29" pos:column="9">APR_STATUS_IS_EBUSY<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name pos:line="29" pos:column="29">rv<pos:position pos:line="29" pos:column="31"/></name></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="33"/></condition><then pos:line="29" pos:column="33"> <block pos:line="29" pos:column="34">{
        <comment type="block" pos:line="30" pos:column="9">/* don't wait around; just abandon it */</comment>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">ap_log_rerror<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">APLOG_MARK<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="35">APLOG_DEBUG<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">rv<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="52">r<pos:position pos:line="31" pos:column="53"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="32" pos:column="23">"authn credentials for %s not cached (mutex busy)"<pos:position pos:line="32" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="75">user<pos:position pos:line="32" pos:column="79"/></name></expr></argument>)<pos:position pos:line="32" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="81"/></expr_stmt>
        <return pos:line="33" pos:column="9">return;<pos:position pos:line="33" pos:column="16"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then>
    <elseif pos:line="35" pos:column="5">else <if pos:line="35" pos:column="10">if <condition pos:line="35" pos:column="13">(<expr><name pos:line="35" pos:column="14">rv<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">!=<pos:position pos:line="35" pos:column="19"/></operator> <name pos:line="35" pos:column="20">APR_SUCCESS<pos:position pos:line="35" pos:column="31"/></name></expr>)<pos:position pos:line="35" pos:column="32"/></condition><then pos:line="35" pos:column="32"> <block pos:line="35" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_log_rerror<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name pos:line="36" pos:column="23">APLOG_MARK<pos:position pos:line="36" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="35">APLOG_ERR<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="46">rv<pos:position pos:line="36" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="50">r<pos:position pos:line="36" pos:column="51"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="37" pos:column="23">"Failed to cache authn credentials for %s in %s"<pos:position pos:line="37" pos:column="71"/></literal></expr></argument>,
                      <argument><expr><name pos:line="38" pos:column="23">module<pos:position pos:line="38" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="31">dcfg<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">-&gt;<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="37">context<pos:position pos:line="38" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="46"/></expr_stmt>
        <return pos:line="39" pos:column="9">return;<pos:position pos:line="39" pos:column="16"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="42" pos:column="5">/* We have the mutex, so go ahead */</comment>
    <comment type="block" pos:line="43" pos:column="5">/* first build our key and determine expiry time */</comment>
    <expr_stmt><expr><name pos:line="44" pos:column="5">key<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator> <call><name pos:line="44" pos:column="11">construct_key<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><name pos:line="44" pos:column="25">r<pos:position pos:line="44" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="28">dcfg<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">context<pos:position pos:line="44" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="43">user<pos:position pos:line="44" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="49">realm<pos:position pos:line="44" pos:column="54"/></name></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">expiry<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <call><name pos:line="45" pos:column="14">apr_time_now<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">()<pos:position pos:line="45" pos:column="28"/></argument_list></call> <operator pos:line="45" pos:column="29">+<pos:position pos:line="45" pos:column="30"/></operator> <name><name pos:line="45" pos:column="31">dcfg<pos:position pos:line="45" pos:column="35"/></name><operator pos:line="45" pos:column="35">-&gt;<pos:position pos:line="45" pos:column="40"/></operator><name pos:line="45" pos:column="37">timeout<pos:position pos:line="45" pos:column="44"/></name></name></expr>;<pos:position pos:line="45" pos:column="45"/></expr_stmt>

    <comment type="block" pos:line="47" pos:column="5">/* store it */</comment>
    <expr_stmt><expr><name pos:line="48" pos:column="5">rv<pos:position pos:line="48" pos:column="7"/></name> <operator pos:line="48" pos:column="8">=<pos:position pos:line="48" pos:column="9"/></operator> <call><name><name pos:line="48" pos:column="10">socache_provider<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">-&gt;<pos:position pos:line="48" pos:column="31"/></operator><name pos:line="48" pos:column="28">store<pos:position pos:line="48" pos:column="33"/></name></name><argument_list pos:line="48" pos:column="33">(<argument><expr><name pos:line="48" pos:column="34">socache_instance<pos:position pos:line="48" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="52">r<pos:position pos:line="48" pos:column="53"/></name><operator pos:line="48" pos:column="53">-&gt;<pos:position pos:line="48" pos:column="58"/></operator><name pos:line="48" pos:column="55">server<pos:position pos:line="48" pos:column="61"/></name></name></expr></argument>,
                                 <argument><expr><operator pos:line="49" pos:column="34">(<pos:position pos:line="49" pos:column="35"/></operator><name pos:line="49" pos:column="35">unsigned<pos:position pos:line="49" pos:column="43"/></name> <name pos:line="49" pos:column="44">char<pos:position pos:line="49" pos:column="48"/></name><operator pos:line="49" pos:column="48">*<pos:position pos:line="49" pos:column="49"/></operator><operator pos:line="49" pos:column="49">)<pos:position pos:line="49" pos:column="50"/></operator><name pos:line="49" pos:column="50">key<pos:position pos:line="49" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="55">strlen<pos:position pos:line="49" pos:column="61"/></name><argument_list pos:line="49" pos:column="61">(<argument><expr><name pos:line="49" pos:column="62">key<pos:position pos:line="49" pos:column="65"/></name></expr></argument>)<pos:position pos:line="49" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="49" pos:column="68">expiry<pos:position pos:line="49" pos:column="74"/></name></expr></argument>,
                                 <argument><expr><operator pos:line="50" pos:column="34">(<pos:position pos:line="50" pos:column="35"/></operator><name pos:line="50" pos:column="35">unsigned<pos:position pos:line="50" pos:column="43"/></name> <name pos:line="50" pos:column="44">char<pos:position pos:line="50" pos:column="48"/></name><operator pos:line="50" pos:column="48">*<pos:position pos:line="50" pos:column="49"/></operator><operator pos:line="50" pos:column="49">)<pos:position pos:line="50" pos:column="50"/></operator><name pos:line="50" pos:column="50">data<pos:position pos:line="50" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="56">strlen<pos:position pos:line="50" pos:column="62"/></name><argument_list pos:line="50" pos:column="62">(<argument><expr><name pos:line="50" pos:column="63">data<pos:position pos:line="50" pos:column="67"/></name></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="70">r<pos:position pos:line="50" pos:column="71"/></name><operator pos:line="50" pos:column="71">-&gt;<pos:position pos:line="50" pos:column="76"/></operator><name pos:line="50" pos:column="73">pool<pos:position pos:line="50" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="79"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">rv<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">==<pos:position pos:line="51" pos:column="14"/></operator> <name pos:line="51" pos:column="15">APR_SUCCESS<pos:position pos:line="51" pos:column="26"/></name></expr>)<pos:position pos:line="51" pos:column="27"/></condition><then pos:line="51" pos:column="27"> <block pos:line="51" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">ap_log_rerror<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><name pos:line="52" pos:column="23">APLOG_MARK<pos:position pos:line="52" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="35">APLOG_DEBUG<pos:position pos:line="52" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="48">0<pos:position pos:line="52" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="51">r<pos:position pos:line="52" pos:column="52"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="53" pos:column="23">"Cached authn credentials for %s in %s"<pos:position pos:line="53" pos:column="62"/></literal></expr></argument>,
                      <argument><expr><name pos:line="54" pos:column="23">user<pos:position pos:line="54" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="29">dcfg<pos:position pos:line="54" pos:column="33"/></name><operator pos:line="54" pos:column="33">-&gt;<pos:position pos:line="54" pos:column="38"/></operator><name pos:line="54" pos:column="35">context<pos:position pos:line="54" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then>
    <else pos:line="56" pos:column="5">else <block pos:line="56" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">ap_log_rerror<pos:position pos:line="57" pos:column="22"/></name><argument_list pos:line="57" pos:column="22">(<argument><expr><name pos:line="57" pos:column="23">APLOG_MARK<pos:position pos:line="57" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="35">APLOG_ERR<pos:position pos:line="57" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="46">rv<pos:position pos:line="57" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="50">r<pos:position pos:line="57" pos:column="51"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="58" pos:column="23">"Failed to cache authn credentials for %s in %s"<pos:position pos:line="58" pos:column="71"/></literal></expr></argument>,
                      <argument><expr><name pos:line="59" pos:column="23">module<pos:position pos:line="59" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="31">dcfg<pos:position pos:line="59" pos:column="35"/></name><operator pos:line="59" pos:column="35">-&gt;<pos:position pos:line="59" pos:column="40"/></operator><name pos:line="59" pos:column="37">context<pos:position pos:line="59" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="62" pos:column="5">/* We're done with the mutex */</comment>
    <expr_stmt><expr><name pos:line="63" pos:column="5">rv<pos:position pos:line="63" pos:column="7"/></name> <operator pos:line="63" pos:column="8">=<pos:position pos:line="63" pos:column="9"/></operator> <call><name pos:line="63" pos:column="10">apr_global_mutex_unlock<pos:position pos:line="63" pos:column="33"/></name><argument_list pos:line="63" pos:column="33">(<argument><expr><name pos:line="63" pos:column="34">authn_cache_mutex<pos:position pos:line="63" pos:column="51"/></name></expr></argument>)<pos:position pos:line="63" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="53"/></expr_stmt>
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name pos:line="64" pos:column="9">rv<pos:position pos:line="64" pos:column="11"/></name> <operator pos:line="64" pos:column="12">!=<pos:position pos:line="64" pos:column="14"/></operator> <name pos:line="64" pos:column="15">APR_SUCCESS<pos:position pos:line="64" pos:column="26"/></name></expr>)<pos:position pos:line="64" pos:column="27"/></condition><then pos:line="64" pos:column="27"> <block pos:line="64" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">ap_log_rerror<pos:position pos:line="65" pos:column="22"/></name><argument_list pos:line="65" pos:column="22">(<argument><expr><name pos:line="65" pos:column="23">APLOG_MARK<pos:position pos:line="65" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="35">APLOG_ERR<pos:position pos:line="65" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="46">rv<pos:position pos:line="65" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="50">r<pos:position pos:line="65" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="53">"Failed to release mutex!"<pos:position pos:line="65" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
    <return pos:line="67" pos:column="5">return;<pos:position pos:line="67" pos:column="12"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

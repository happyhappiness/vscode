<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_831_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ssl_expr_yygrowstack<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">()<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">newsize<pos:position pos:line="3" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="18">i<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">short<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">newss<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">YYSTYPE<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">newvs<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">newsize<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">ssl_expr_yystacksize<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">)<pos:position pos:line="7" pos:column="41"/></operator> <operator pos:line="7" pos:column="42">==<pos:position pos:line="7" pos:column="44"/></operator> <literal type="number" pos:line="7" pos:column="45">0<pos:position pos:line="7" pos:column="46"/></literal></expr>)<pos:position pos:line="7" pos:column="47"/></condition><then pos:line="7" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="9">newsize<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">YYINITSTACKSIZE<pos:position pos:line="8" pos:column="34"/></name></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt></block></then>
    <elseif pos:line="9" pos:column="5">else <if pos:line="9" pos:column="10">if <condition pos:line="9" pos:column="13">(<expr><name pos:line="9" pos:column="14">newsize<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">&gt;=<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="25">YYMAXDEPTH<pos:position pos:line="9" pos:column="35"/></name></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">-<pos:position pos:line="10" pos:column="17"/></operator><literal type="number" pos:line="10" pos:column="17">1<pos:position pos:line="10" pos:column="18"/></literal></expr>;<pos:position pos:line="10" pos:column="19"/></return></block></then></if></elseif>
    <elseif pos:line="11" pos:column="5">else <if pos:line="11" pos:column="10">if <condition pos:line="11" pos:column="13">(<expr><operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">newsize<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">*=<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="26">2<pos:position pos:line="11" pos:column="27"/></literal><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator> <operator pos:line="11" pos:column="29">&gt;<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="31">YYMAXDEPTH<pos:position pos:line="11" pos:column="41"/></name></expr>)<pos:position pos:line="11" pos:column="42"/></condition><then pos:line="11" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="9">newsize<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">YYMAXDEPTH<pos:position pos:line="12" pos:column="29"/></name></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt></block></then></if></elseif></if>
    <expr_stmt><expr><name pos:line="13" pos:column="5">i<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <name pos:line="13" pos:column="9">ssl_expr_yyssp<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">-<pos:position pos:line="13" pos:column="25"/></operator> <name pos:line="13" pos:column="26">ssl_expr_yyss<pos:position pos:line="13" pos:column="39"/></name></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">newss<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <ternary><condition><expr><name pos:line="14" pos:column="13">ssl_expr_yyss<pos:position pos:line="14" pos:column="26"/></name></expr> ?<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28"> <expr><operator pos:line="14" pos:column="29">(<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">short<pos:position pos:line="14" pos:column="35"/></name> <operator pos:line="14" pos:column="36">*<pos:position pos:line="14" pos:column="37"/></operator><operator pos:line="14" pos:column="37">)<pos:position pos:line="14" pos:column="38"/></operator><call><name pos:line="14" pos:column="38">realloc<pos:position pos:line="14" pos:column="45"/></name><argument_list pos:line="14" pos:column="45">(<argument><expr><name pos:line="14" pos:column="46">ssl_expr_yyss<pos:position pos:line="14" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="61">newsize<pos:position pos:line="14" pos:column="68"/></name> <operator pos:line="14" pos:column="69">*<pos:position pos:line="14" pos:column="70"/></operator> <sizeof pos:line="14" pos:column="71">sizeof <name><pos:position pos:line="14" pos:column="78"/></name></sizeof>*<name pos:line="14" pos:column="79">newss<pos:position pos:line="14" pos:column="84"/></name></expr></argument>)<pos:position pos:line="14" pos:column="85"/></argument_list></call></expr> <pos:position pos:line="14" pos:column="86"/></then><else pos:line="14" pos:column="86">:
      <expr><operator pos:line="15" pos:column="7">(<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">short<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></operator><operator pos:line="15" pos:column="15">)<pos:position pos:line="15" pos:column="16"/></operator><call><name pos:line="15" pos:column="16">malloc<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">newsize<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">*<pos:position pos:line="15" pos:column="32"/></operator> <sizeof pos:line="15" pos:column="33">sizeof <name><pos:position pos:line="15" pos:column="40"/></name></sizeof>*<name pos:line="15" pos:column="41">newss<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">newss<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">==<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="18">NULL<pos:position pos:line="16" pos:column="22"/></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23">
        <block type="pseudo"><return pos:line="17" pos:column="9">return <expr><operator pos:line="17" pos:column="16">-<pos:position pos:line="17" pos:column="17"/></operator><literal type="number" pos:line="17" pos:column="17">1<pos:position pos:line="17" pos:column="18"/></literal></expr>;<pos:position pos:line="17" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="18" pos:column="5">ssl_expr_yyss<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">newss<pos:position pos:line="18" pos:column="26"/></name></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">ssl_expr_yyssp<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="22">newss<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">+<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="30">i<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">newvs<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <ternary><condition><expr><name pos:line="20" pos:column="13">ssl_expr_yyvs<pos:position pos:line="20" pos:column="26"/></name></expr> ?<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28"> <expr><operator pos:line="20" pos:column="29">(<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">YYSTYPE<pos:position pos:line="20" pos:column="37"/></name> <operator pos:line="20" pos:column="38">*<pos:position pos:line="20" pos:column="39"/></operator><operator pos:line="20" pos:column="39">)<pos:position pos:line="20" pos:column="40"/></operator><call><name pos:line="20" pos:column="40">realloc<pos:position pos:line="20" pos:column="47"/></name><argument_list pos:line="20" pos:column="47">(<argument><expr><name pos:line="20" pos:column="48">ssl_expr_yyvs<pos:position pos:line="20" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="63">newsize<pos:position pos:line="20" pos:column="70"/></name> <operator pos:line="20" pos:column="71">*<pos:position pos:line="20" pos:column="72"/></operator> <sizeof pos:line="20" pos:column="73">sizeof <name><pos:position pos:line="20" pos:column="80"/></name></sizeof>*<name pos:line="20" pos:column="81">newvs<pos:position pos:line="20" pos:column="86"/></name></expr></argument>)<pos:position pos:line="20" pos:column="87"/></argument_list></call></expr> <pos:position pos:line="20" pos:column="88"/></then><else pos:line="20" pos:column="88">:
      <expr><operator pos:line="21" pos:column="7">(<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">YYSTYPE<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">*<pos:position pos:line="21" pos:column="17"/></operator><operator pos:line="21" pos:column="17">)<pos:position pos:line="21" pos:column="18"/></operator><call><name pos:line="21" pos:column="18">malloc<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">newsize<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">*<pos:position pos:line="21" pos:column="34"/></operator> <sizeof pos:line="21" pos:column="35">sizeof <name><pos:position pos:line="21" pos:column="42"/></name></sizeof>*<name pos:line="21" pos:column="43">newvs<pos:position pos:line="21" pos:column="48"/></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">newvs<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">==<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">NULL<pos:position pos:line="22" pos:column="22"/></name></expr>)<pos:position pos:line="22" pos:column="23"/></condition><then pos:line="22" pos:column="23">
        <block type="pseudo"><return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">-<pos:position pos:line="23" pos:column="17"/></operator><literal type="number" pos:line="23" pos:column="17">1<pos:position pos:line="23" pos:column="18"/></literal></expr>;<pos:position pos:line="23" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="24" pos:column="5">ssl_expr_yyvs<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">newvs<pos:position pos:line="24" pos:column="26"/></name></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">ssl_expr_yyvsp<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="22">newvs<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">+<pos:position pos:line="25" pos:column="29"/></operator> <name pos:line="25" pos:column="30">i<pos:position pos:line="25" pos:column="31"/></name></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">ssl_expr_yystacksize<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="28">newsize<pos:position pos:line="26" pos:column="35"/></name></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">ssl_expr_yysslim<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="24">ssl_expr_yyss<pos:position pos:line="27" pos:column="37"/></name> <operator pos:line="27" pos:column="38">+<pos:position pos:line="27" pos:column="39"/></operator> <name pos:line="27" pos:column="40">newsize<pos:position pos:line="27" pos:column="47"/></name> <operator pos:line="27" pos:column="48">-<pos:position pos:line="27" pos:column="49"/></operator> <literal type="number" pos:line="27" pos:column="50">1<pos:position pos:line="27" pos:column="51"/></literal></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal></expr>;<pos:position pos:line="28" pos:column="14"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

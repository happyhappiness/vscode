<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1850_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dump_header_to_log<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">request_rec<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">r<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">unsigned<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name></type> <name><name pos:line="1" pos:column="62">fheader<pos:position pos:line="1" pos:column="69"/></name><index pos:line="1" pos:column="69">[]<pos:position pos:line="1" pos:column="71"/></index></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">apr_size_t<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">length<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">FCGI_DUMP_HEADERS<pos:position pos:line="4" pos:column="25"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">posn<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">asc_line<pos:position pos:line="6" pos:column="18"/></name><index pos:line="6" pos:column="18">[<expr><literal type="number" pos:line="6" pos:column="19">20<pos:position pos:line="6" pos:column="21"/></literal></expr>]<pos:position pos:line="6" pos:column="22"/></index></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">hex_line<pos:position pos:line="7" pos:column="18"/></name><index pos:line="7" pos:column="18">[<expr><literal type="number" pos:line="7" pos:column="19">60<pos:position pos:line="7" pos:column="21"/></literal></expr>]<pos:position pos:line="7" pos:column="22"/></index></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name> <init pos:line="8" pos:column="11">= <expr><literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">memset<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">asc_line<pos:position pos:line="10" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="22">0<pos:position pos:line="10" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="25">sizeof<argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">asc_line<pos:position pos:line="10" pos:column="40"/></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">memset<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">hex_line<pos:position pos:line="11" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="25">sizeof<argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">hex_line<pos:position pos:line="11" pos:column="40"/></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>

    <while pos:line="13" pos:column="5">while <condition pos:line="13" pos:column="11">(<expr><name pos:line="13" pos:column="12">posn<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">&lt;<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="19">length<pos:position pos:line="13" pos:column="25"/></name></expr>)<pos:position pos:line="13" pos:column="26"/></condition> <block pos:line="13" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">unsigned<pos:position pos:line="14" pos:column="17"/></name> <name pos:line="14" pos:column="18">char<pos:position pos:line="14" pos:column="22"/></name></type> <name pos:line="14" pos:column="23">c<pos:position pos:line="14" pos:column="24"/></name> <init pos:line="14" pos:column="25">= <expr><name><name pos:line="14" pos:column="27">fheader<pos:position pos:line="14" pos:column="34"/></name><index pos:line="14" pos:column="34">[<expr><name pos:line="14" pos:column="35">posn<pos:position pos:line="14" pos:column="39"/></name></expr>]<pos:position pos:line="14" pos:column="40"/></index></name></expr></init></decl>;<pos:position pos:line="14" pos:column="41"/></decl_stmt> 
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name></type> <name><name pos:line="15" pos:column="14">hexval<pos:position pos:line="15" pos:column="20"/></name><index pos:line="15" pos:column="20">[<expr><literal type="number" pos:line="15" pos:column="21">3<pos:position pos:line="15" pos:column="22"/></literal></expr>]<pos:position pos:line="15" pos:column="23"/></index></name></decl>;<pos:position pos:line="15" pos:column="24"/></decl_stmt>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">i<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">&gt;=<pos:position pos:line="17" pos:column="20"/></operator> <literal type="number" pos:line="17" pos:column="18">20<pos:position pos:line="17" pos:column="20"/></literal></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21"> <block pos:line="17" pos:column="22">{
            <expr_stmt><expr><name pos:line="18" pos:column="13">i<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="20" pos:column="13">ap_log_error<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">APLOG_MARK<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">APLOG_DEBUG<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="51">0<pos:position pos:line="20" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="54">r<pos:position pos:line="20" pos:column="55"/></name><operator pos:line="20" pos:column="55">-&gt;<pos:position pos:line="20" pos:column="60"/></operator><name pos:line="20" pos:column="57">server<pos:position pos:line="20" pos:column="63"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="21" pos:column="26">"HEADER: %s %s"<pos:position pos:line="21" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="43">asc_line<pos:position pos:line="21" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="53">hex_line<pos:position pos:line="21" pos:column="61"/></name></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="63"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="23" pos:column="13">memset<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">asc_line<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="30">0<pos:position pos:line="23" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="33">sizeof<argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">asc_line<pos:position pos:line="23" pos:column="48"/></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">memset<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">hex_line<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="30">0<pos:position pos:line="24" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="33">sizeof<argument_list pos:line="24" pos:column="39">(<argument><expr><name pos:line="24" pos:column="40">hex_line<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">isprint<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">c<pos:position pos:line="27" pos:column="22"/></name></expr></argument>)<pos:position pos:line="27" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="24"/></condition><then pos:line="27" pos:column="24"> <block pos:line="27" pos:column="25">{
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">asc_line<pos:position pos:line="28" pos:column="21"/></name><index pos:line="28" pos:column="21">[<expr><name pos:line="28" pos:column="22">i<pos:position pos:line="28" pos:column="23"/></name></expr>]<pos:position pos:line="28" pos:column="24"/></index></name> <operator pos:line="28" pos:column="25">=<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">c<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then>
        <else pos:line="30" pos:column="9">else <block pos:line="30" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">asc_line<pos:position pos:line="31" pos:column="21"/></name><index pos:line="31" pos:column="21">[<expr><name pos:line="31" pos:column="22">i<pos:position pos:line="31" pos:column="23"/></name></expr>]<pos:position pos:line="31" pos:column="24"/></index></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <literal type="char" pos:line="31" pos:column="27">'.'<pos:position pos:line="31" pos:column="30"/></literal></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></else></if>

        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">(<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">c<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">&gt;&gt;<pos:position pos:line="34" pos:column="21"/></operator> <literal type="number" pos:line="34" pos:column="19">4<pos:position pos:line="34" pos:column="20"/></literal><operator pos:line="34" pos:column="20">)<pos:position pos:line="34" pos:column="21"/></operator> <operator pos:line="34" pos:column="22">&gt;=<pos:position pos:line="34" pos:column="27"/></operator> <literal type="number" pos:line="34" pos:column="25">10<pos:position pos:line="34" pos:column="27"/></literal></expr>)<pos:position pos:line="34" pos:column="28"/></condition><then pos:line="34" pos:column="28"> <block pos:line="34" pos:column="29">{
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">hex_line<pos:position pos:line="35" pos:column="21"/></name><index pos:line="35" pos:column="21">[<expr><name pos:line="35" pos:column="22">i<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">*<pos:position pos:line="35" pos:column="25"/></operator> <literal type="number" pos:line="35" pos:column="26">3<pos:position pos:line="35" pos:column="27"/></literal></expr>]<pos:position pos:line="35" pos:column="28"/></index></name> <operator pos:line="35" pos:column="29">=<pos:position pos:line="35" pos:column="30"/></operator> <literal type="char" pos:line="35" pos:column="31">'a'<pos:position pos:line="35" pos:column="34"/></literal> <operator pos:line="35" pos:column="35">+<pos:position pos:line="35" pos:column="36"/></operator> <operator pos:line="35" pos:column="37">(<pos:position pos:line="35" pos:column="38"/></operator><operator pos:line="35" pos:column="38">(<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="39">c<pos:position pos:line="35" pos:column="40"/></name> <operator pos:line="35" pos:column="41">&gt;&gt;<pos:position pos:line="35" pos:column="46"/></operator> <literal type="number" pos:line="35" pos:column="44">4<pos:position pos:line="35" pos:column="45"/></literal><operator pos:line="35" pos:column="45">)<pos:position pos:line="35" pos:column="46"/></operator> <operator pos:line="35" pos:column="47">-<pos:position pos:line="35" pos:column="48"/></operator> <literal type="number" pos:line="35" pos:column="49">10<pos:position pos:line="35" pos:column="51"/></literal><operator pos:line="35" pos:column="51">)<pos:position pos:line="35" pos:column="52"/></operator></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then>
        <else pos:line="37" pos:column="9">else <block pos:line="37" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">hex_line<pos:position pos:line="38" pos:column="21"/></name><index pos:line="38" pos:column="21">[<expr><name pos:line="38" pos:column="22">i<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">*<pos:position pos:line="38" pos:column="25"/></operator> <literal type="number" pos:line="38" pos:column="26">3<pos:position pos:line="38" pos:column="27"/></literal></expr>]<pos:position pos:line="38" pos:column="28"/></index></name> <operator pos:line="38" pos:column="29">=<pos:position pos:line="38" pos:column="30"/></operator> <literal type="char" pos:line="38" pos:column="31">'0'<pos:position pos:line="38" pos:column="34"/></literal> <operator pos:line="38" pos:column="35">+<pos:position pos:line="38" pos:column="36"/></operator> <operator pos:line="38" pos:column="37">(<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="38">c<pos:position pos:line="38" pos:column="39"/></name> <operator pos:line="38" pos:column="40">&gt;&gt;<pos:position pos:line="38" pos:column="45"/></operator> <literal type="number" pos:line="38" pos:column="43">4<pos:position pos:line="38" pos:column="44"/></literal><operator pos:line="38" pos:column="44">)<pos:position pos:line="38" pos:column="45"/></operator></expr>;<pos:position pos:line="38" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></else></if>

        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">(<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">c<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">&amp;<pos:position pos:line="41" pos:column="21"/></operator> <literal type="number" pos:line="41" pos:column="18">0x0F<pos:position pos:line="41" pos:column="22"/></literal><operator pos:line="41" pos:column="22">)<pos:position pos:line="41" pos:column="23"/></operator> <operator pos:line="41" pos:column="24">&gt;=<pos:position pos:line="41" pos:column="29"/></operator> <literal type="number" pos:line="41" pos:column="27">10<pos:position pos:line="41" pos:column="29"/></literal></expr>)<pos:position pos:line="41" pos:column="30"/></condition><then pos:line="41" pos:column="30"> <block pos:line="41" pos:column="31">{
            <expr_stmt><expr><name><name pos:line="42" pos:column="13">hex_line<pos:position pos:line="42" pos:column="21"/></name><index pos:line="42" pos:column="21">[<expr><name pos:line="42" pos:column="22">i<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">*<pos:position pos:line="42" pos:column="25"/></operator> <literal type="number" pos:line="42" pos:column="26">3<pos:position pos:line="42" pos:column="27"/></literal> <operator pos:line="42" pos:column="28">+<pos:position pos:line="42" pos:column="29"/></operator> <literal type="number" pos:line="42" pos:column="30">1<pos:position pos:line="42" pos:column="31"/></literal></expr>]<pos:position pos:line="42" pos:column="32"/></index></name> <operator pos:line="42" pos:column="33">=<pos:position pos:line="42" pos:column="34"/></operator> <literal type="char" pos:line="42" pos:column="35">'a'<pos:position pos:line="42" pos:column="38"/></literal> <operator pos:line="42" pos:column="39">+<pos:position pos:line="42" pos:column="40"/></operator> <operator pos:line="42" pos:column="41">(<pos:position pos:line="42" pos:column="42"/></operator><operator pos:line="42" pos:column="42">(<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="43">c<pos:position pos:line="42" pos:column="44"/></name> <operator pos:line="42" pos:column="45">&amp;<pos:position pos:line="42" pos:column="50"/></operator> <literal type="number" pos:line="42" pos:column="47">0x0F<pos:position pos:line="42" pos:column="51"/></literal><operator pos:line="42" pos:column="51">)<pos:position pos:line="42" pos:column="52"/></operator> <operator pos:line="42" pos:column="53">-<pos:position pos:line="42" pos:column="54"/></operator> <literal type="number" pos:line="42" pos:column="55">10<pos:position pos:line="42" pos:column="57"/></literal><operator pos:line="42" pos:column="57">)<pos:position pos:line="42" pos:column="58"/></operator></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></then>
        <else pos:line="44" pos:column="9">else <block pos:line="44" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="45" pos:column="13">hex_line<pos:position pos:line="45" pos:column="21"/></name><index pos:line="45" pos:column="21">[<expr><name pos:line="45" pos:column="22">i<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">*<pos:position pos:line="45" pos:column="25"/></operator> <literal type="number" pos:line="45" pos:column="26">3<pos:position pos:line="45" pos:column="27"/></literal> <operator pos:line="45" pos:column="28">+<pos:position pos:line="45" pos:column="29"/></operator> <literal type="number" pos:line="45" pos:column="30">1<pos:position pos:line="45" pos:column="31"/></literal></expr>]<pos:position pos:line="45" pos:column="32"/></index></name> <operator pos:line="45" pos:column="33">=<pos:position pos:line="45" pos:column="34"/></operator> <literal type="char" pos:line="45" pos:column="35">'0'<pos:position pos:line="45" pos:column="38"/></literal> <operator pos:line="45" pos:column="39">+<pos:position pos:line="45" pos:column="40"/></operator> <operator pos:line="45" pos:column="41">(<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="42">c<pos:position pos:line="45" pos:column="43"/></name> <operator pos:line="45" pos:column="44">&amp;<pos:position pos:line="45" pos:column="49"/></operator> <literal type="number" pos:line="45" pos:column="46">0xF<pos:position pos:line="45" pos:column="49"/></literal><operator pos:line="45" pos:column="49">)<pos:position pos:line="45" pos:column="50"/></operator></expr>;<pos:position pos:line="45" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name><name pos:line="48" pos:column="9">hex_line<pos:position pos:line="48" pos:column="17"/></name><index pos:line="48" pos:column="17">[<expr><name pos:line="48" pos:column="18">i<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">*<pos:position pos:line="48" pos:column="21"/></operator> <literal type="number" pos:line="48" pos:column="22">3<pos:position pos:line="48" pos:column="23"/></literal> <operator pos:line="48" pos:column="24">+<pos:position pos:line="48" pos:column="25"/></operator> <literal type="number" pos:line="48" pos:column="26">2<pos:position pos:line="48" pos:column="27"/></literal></expr>]<pos:position pos:line="48" pos:column="28"/></index></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <literal type="char" pos:line="48" pos:column="31">' '<pos:position pos:line="48" pos:column="34"/></literal></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>

        <expr_stmt><expr><name pos:line="50" pos:column="9">i<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">++<pos:position pos:line="50" pos:column="12"/></operator></expr>;<pos:position pos:line="50" pos:column="13"/></expr_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">posn<pos:position pos:line="51" pos:column="13"/></name><operator pos:line="51" pos:column="13">++<pos:position pos:line="51" pos:column="15"/></operator></expr>;<pos:position pos:line="51" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></while>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">i<pos:position pos:line="54" pos:column="10"/></name> <operator pos:line="54" pos:column="11">!=<pos:position pos:line="54" pos:column="13"/></operator> <literal type="number" pos:line="54" pos:column="14">1<pos:position pos:line="54" pos:column="15"/></literal></expr>)<pos:position pos:line="54" pos:column="16"/></condition><then pos:line="54" pos:column="16"> <block pos:line="54" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">ap_log_error<pos:position pos:line="55" pos:column="21"/></name><argument_list pos:line="55" pos:column="21">(<argument><expr><name pos:line="55" pos:column="22">APLOG_MARK<pos:position pos:line="55" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="34">APLOG_DEBUG<pos:position pos:line="55" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="47">0<pos:position pos:line="55" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="50">r<pos:position pos:line="55" pos:column="51"/></name><operator pos:line="55" pos:column="51">-&gt;<pos:position pos:line="55" pos:column="56"/></operator><name pos:line="55" pos:column="53">server<pos:position pos:line="55" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="61">"HEADER: %s %s"<pos:position pos:line="55" pos:column="76"/></literal></expr></argument>,
                     <argument><expr><name pos:line="56" pos:column="22">asc_line<pos:position pos:line="56" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="32">hex_line<pos:position pos:line="56" pos:column="40"/></name></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="59" pos:column="5">ap_log_error<pos:position pos:line="59" pos:column="17"/></name><argument_list pos:line="59" pos:column="17">(<argument><expr><name pos:line="59" pos:column="18">APLOG_MARK<pos:position pos:line="59" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="30">APLOG_DEBUG<pos:position pos:line="59" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="43">0<pos:position pos:line="59" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="46">r<pos:position pos:line="59" pos:column="47"/></name><operator pos:line="59" pos:column="47">-&gt;<pos:position pos:line="59" pos:column="52"/></operator><name pos:line="59" pos:column="49">server<pos:position pos:line="59" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="57">"HEADER: -EOH-"<pos:position pos:line="59" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="74"/></expr_stmt>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_4048_httpd-2.2.22.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">unsigned<pos:position pos:line="1" pos:column="15"/></name> <name pos:line="1" pos:column="16">char<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type>
<name pos:line="2" pos:column="1">pcre_maketables<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">void<pos:position pos:line="2" pos:column="21"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
<decl_stmt><decl><type><name pos:line="4" pos:column="1">unsigned<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">char<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">yield<pos:position pos:line="4" pos:column="21"/></name></decl>, <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="24">p<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="5" pos:column="1">int<pos:position pos:line="5" pos:column="4"/></name></type> <name pos:line="5" pos:column="5">i<pos:position pos:line="5" pos:column="6"/></name></decl>;<pos:position pos:line="5" pos:column="7"/></decl_stmt>

<cpp:ifndef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifndef<pos:position pos:line="7" pos:column="8"/></cpp:directive> <name pos:line="7" pos:column="9">DFTABLES<pos:position pos:line="7" pos:column="17"/></name></cpp:ifndef>
<expr_stmt><expr><name pos:line="8" pos:column="1">yield<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">unsigned<pos:position pos:line="8" pos:column="18"/></name> <name pos:line="8" pos:column="19">char<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></operator><operator pos:line="8" pos:column="24">)<pos:position pos:line="8" pos:column="25"/></operator><call pos:line="8" pos:column="25">(<name pos:line="8" pos:column="26">pcre_malloc<pos:position pos:line="8" pos:column="37"/></name>)<argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">tables_length<pos:position pos:line="8" pos:column="52"/></name></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt>
<cpp:else pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">else<pos:position pos:line="9" pos:column="6"/></cpp:directive></cpp:else>
<expr_stmt><expr><name pos:line="10" pos:column="1">yield<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">unsigned<pos:position pos:line="10" pos:column="18"/></name> <name pos:line="10" pos:column="19">char<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></operator><operator pos:line="10" pos:column="24">)<pos:position pos:line="10" pos:column="25"/></operator><call><name pos:line="10" pos:column="25">malloc<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">tables_length<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>

<if pos:line="13" pos:column="1">if <condition pos:line="13" pos:column="4">(<expr><name pos:line="13" pos:column="5">yield<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">==<pos:position pos:line="13" pos:column="13"/></operator> <name pos:line="13" pos:column="14">NULL<pos:position pos:line="13" pos:column="18"/></name></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19"> <block type="pseudo"><return pos:line="13" pos:column="20">return <expr><name pos:line="13" pos:column="27">NULL<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></return></block></then></if>
<expr_stmt><expr><name pos:line="14" pos:column="1">p<pos:position pos:line="14" pos:column="2"/></name> <operator pos:line="14" pos:column="3">=<pos:position pos:line="14" pos:column="4"/></operator> <name pos:line="14" pos:column="5">yield<pos:position pos:line="14" pos:column="10"/></name></expr>;<pos:position pos:line="14" pos:column="11"/></expr_stmt>

<comment type="block" pos:line="16" pos:column="1">/* First comes the lower casing table */</comment>

<for pos:line="18" pos:column="1">for <control pos:line="18" pos:column="5">(<init><expr><name pos:line="18" pos:column="6">i<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <literal type="number" pos:line="18" pos:column="10">0<pos:position pos:line="18" pos:column="11"/></literal></expr>;<pos:position pos:line="18" pos:column="12"/></init> <condition><expr><name pos:line="18" pos:column="13">i<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">&lt;<pos:position pos:line="18" pos:column="19"/></operator> <literal type="number" pos:line="18" pos:column="17">256<pos:position pos:line="18" pos:column="20"/></literal></expr>;<pos:position pos:line="18" pos:column="21"/></condition> <incr><expr><name pos:line="18" pos:column="22">i<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">++<pos:position pos:line="18" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="26"/></control> <block type="pseudo"><expr_stmt><expr><operator pos:line="18" pos:column="27">*<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">p<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">++<pos:position pos:line="18" pos:column="31"/></operator> <operator pos:line="18" pos:column="32">=<pos:position pos:line="18" pos:column="33"/></operator> <call><name pos:line="18" pos:column="34">tolower<pos:position pos:line="18" pos:column="41"/></name><argument_list pos:line="18" pos:column="41">(<argument><expr><name pos:line="18" pos:column="42">i<pos:position pos:line="18" pos:column="43"/></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt></block></for>

<comment type="block" pos:line="20" pos:column="1">/* Next the case-flipping table */</comment>

<for pos:line="22" pos:column="1">for <control pos:line="22" pos:column="5">(<init><expr><name pos:line="22" pos:column="6">i<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <literal type="number" pos:line="22" pos:column="10">0<pos:position pos:line="22" pos:column="11"/></literal></expr>;<pos:position pos:line="22" pos:column="12"/></init> <condition><expr><name pos:line="22" pos:column="13">i<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">&lt;<pos:position pos:line="22" pos:column="19"/></operator> <literal type="number" pos:line="22" pos:column="17">256<pos:position pos:line="22" pos:column="20"/></literal></expr>;<pos:position pos:line="22" pos:column="21"/></condition> <incr><expr><name pos:line="22" pos:column="22">i<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">++<pos:position pos:line="22" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="26"/></control> <block type="pseudo"><expr_stmt><expr><operator pos:line="22" pos:column="27">*<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">p<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">++<pos:position pos:line="22" pos:column="31"/></operator> <operator pos:line="22" pos:column="32">=<pos:position pos:line="22" pos:column="33"/></operator> <ternary><condition><expr><call><name pos:line="22" pos:column="34">islower<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">(<argument><expr><name pos:line="22" pos:column="42">i<pos:position pos:line="22" pos:column="43"/></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr>?<pos:position pos:line="22" pos:column="45"/></condition><then pos:line="22" pos:column="45"> <expr><call><name pos:line="22" pos:column="46">toupper<pos:position pos:line="22" pos:column="53"/></name><argument_list pos:line="22" pos:column="53">(<argument><expr><name pos:line="22" pos:column="54">i<pos:position pos:line="22" pos:column="55"/></name></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr> <pos:position pos:line="22" pos:column="57"/></then><else pos:line="22" pos:column="57">: <expr><call><name pos:line="22" pos:column="59">tolower<pos:position pos:line="22" pos:column="66"/></name><argument_list pos:line="22" pos:column="66">(<argument><expr><name pos:line="22" pos:column="67">i<pos:position pos:line="22" pos:column="68"/></name></expr></argument>)<pos:position pos:line="22" pos:column="69"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="22" pos:column="70"/></expr_stmt></block></for>

<comment type="block" pos:line="24" pos:column="1">/* Then the character class tables. Don't try to be clever and save effort
on exclusive ones - in some locales things may be different. Note that the
table for "space" includes everything "isspace" gives, including VT in the
default locale. This makes it work for the POSIX class [:space:]. */</comment>

<expr_stmt><expr><call><name pos:line="29" pos:column="1">memset<pos:position pos:line="29" pos:column="7"/></name><argument_list pos:line="29" pos:column="7">(<argument><expr><name pos:line="29" pos:column="8">p<pos:position pos:line="29" pos:column="9"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="11">0<pos:position pos:line="29" pos:column="12"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="14">cbit_length<pos:position pos:line="29" pos:column="25"/></name></expr></argument>)<pos:position pos:line="29" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
<for pos:line="30" pos:column="1">for <control pos:line="30" pos:column="5">(<init><expr><name pos:line="30" pos:column="6">i<pos:position pos:line="30" pos:column="7"/></name> <operator pos:line="30" pos:column="8">=<pos:position pos:line="30" pos:column="9"/></operator> <literal type="number" pos:line="30" pos:column="10">0<pos:position pos:line="30" pos:column="11"/></literal></expr>;<pos:position pos:line="30" pos:column="12"/></init> <condition><expr><name pos:line="30" pos:column="13">i<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">&lt;<pos:position pos:line="30" pos:column="19"/></operator> <literal type="number" pos:line="30" pos:column="17">256<pos:position pos:line="30" pos:column="20"/></literal></expr>;<pos:position pos:line="30" pos:column="21"/></condition> <incr><expr><name pos:line="30" pos:column="22">i<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">++<pos:position pos:line="30" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="26"/></control>
  <block pos:line="31" pos:column="3">{
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><call><name pos:line="32" pos:column="7">isdigit<pos:position pos:line="32" pos:column="14"/></name><argument_list pos:line="32" pos:column="14">(<argument><expr><name pos:line="32" pos:column="15">i<pos:position pos:line="32" pos:column="16"/></name></expr></argument>)<pos:position pos:line="32" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="18"/></condition><then pos:line="32" pos:column="18">
    <block pos:line="33" pos:column="5">{
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">p<pos:position pos:line="34" pos:column="6"/></name><index pos:line="34" pos:column="6">[<expr><name pos:line="34" pos:column="7">cbit_digit<pos:position pos:line="34" pos:column="17"/></name>  <operator pos:line="34" pos:column="19">+<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">i<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">/<pos:position pos:line="34" pos:column="23"/></operator><literal type="number" pos:line="34" pos:column="23">8<pos:position pos:line="34" pos:column="24"/></literal></expr>]<pos:position pos:line="34" pos:column="25"/></index></name> <operator pos:line="34" pos:column="26">|=<pos:position pos:line="34" pos:column="28"/></operator> <literal type="number" pos:line="34" pos:column="29">1<pos:position pos:line="34" pos:column="30"/></literal> <operator pos:line="34" pos:column="31">&lt;&lt;<pos:position pos:line="34" pos:column="39"/></operator> <operator pos:line="34" pos:column="34">(<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">i<pos:position pos:line="34" pos:column="36"/></name><operator pos:line="34" pos:column="36">&amp;<pos:position pos:line="34" pos:column="41"/></operator><literal type="number" pos:line="34" pos:column="37">7<pos:position pos:line="34" pos:column="38"/></literal><operator pos:line="34" pos:column="38">)<pos:position pos:line="34" pos:column="39"/></operator></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">p<pos:position pos:line="35" pos:column="6"/></name><index pos:line="35" pos:column="6">[<expr><name pos:line="35" pos:column="7">cbit_word<pos:position pos:line="35" pos:column="16"/></name>   <operator pos:line="35" pos:column="19">+<pos:position pos:line="35" pos:column="20"/></operator> <name pos:line="35" pos:column="21">i<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">/<pos:position pos:line="35" pos:column="23"/></operator><literal type="number" pos:line="35" pos:column="23">8<pos:position pos:line="35" pos:column="24"/></literal></expr>]<pos:position pos:line="35" pos:column="25"/></index></name> <operator pos:line="35" pos:column="26">|=<pos:position pos:line="35" pos:column="28"/></operator> <literal type="number" pos:line="35" pos:column="29">1<pos:position pos:line="35" pos:column="30"/></literal> <operator pos:line="35" pos:column="31">&lt;&lt;<pos:position pos:line="35" pos:column="39"/></operator> <operator pos:line="35" pos:column="34">(<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="35">i<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">&amp;<pos:position pos:line="35" pos:column="41"/></operator><literal type="number" pos:line="35" pos:column="37">7<pos:position pos:line="35" pos:column="38"/></literal><operator pos:line="35" pos:column="38">)<pos:position pos:line="35" pos:column="39"/></operator></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><call><name pos:line="37" pos:column="7">isupper<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><name pos:line="37" pos:column="15">i<pos:position pos:line="37" pos:column="16"/></name></expr></argument>)<pos:position pos:line="37" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="18"/></condition><then pos:line="37" pos:column="18">
    <block pos:line="38" pos:column="5">{
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">p<pos:position pos:line="39" pos:column="6"/></name><index pos:line="39" pos:column="6">[<expr><name pos:line="39" pos:column="7">cbit_upper<pos:position pos:line="39" pos:column="17"/></name>  <operator pos:line="39" pos:column="19">+<pos:position pos:line="39" pos:column="20"/></operator> <name pos:line="39" pos:column="21">i<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">/<pos:position pos:line="39" pos:column="23"/></operator><literal type="number" pos:line="39" pos:column="23">8<pos:position pos:line="39" pos:column="24"/></literal></expr>]<pos:position pos:line="39" pos:column="25"/></index></name> <operator pos:line="39" pos:column="26">|=<pos:position pos:line="39" pos:column="28"/></operator> <literal type="number" pos:line="39" pos:column="29">1<pos:position pos:line="39" pos:column="30"/></literal> <operator pos:line="39" pos:column="31">&lt;&lt;<pos:position pos:line="39" pos:column="39"/></operator> <operator pos:line="39" pos:column="34">(<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="35">i<pos:position pos:line="39" pos:column="36"/></name><operator pos:line="39" pos:column="36">&amp;<pos:position pos:line="39" pos:column="41"/></operator><literal type="number" pos:line="39" pos:column="37">7<pos:position pos:line="39" pos:column="38"/></literal><operator pos:line="39" pos:column="38">)<pos:position pos:line="39" pos:column="39"/></operator></expr>;<pos:position pos:line="39" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">p<pos:position pos:line="40" pos:column="6"/></name><index pos:line="40" pos:column="6">[<expr><name pos:line="40" pos:column="7">cbit_word<pos:position pos:line="40" pos:column="16"/></name>   <operator pos:line="40" pos:column="19">+<pos:position pos:line="40" pos:column="20"/></operator> <name pos:line="40" pos:column="21">i<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">/<pos:position pos:line="40" pos:column="23"/></operator><literal type="number" pos:line="40" pos:column="23">8<pos:position pos:line="40" pos:column="24"/></literal></expr>]<pos:position pos:line="40" pos:column="25"/></index></name> <operator pos:line="40" pos:column="26">|=<pos:position pos:line="40" pos:column="28"/></operator> <literal type="number" pos:line="40" pos:column="29">1<pos:position pos:line="40" pos:column="30"/></literal> <operator pos:line="40" pos:column="31">&lt;&lt;<pos:position pos:line="40" pos:column="39"/></operator> <operator pos:line="40" pos:column="34">(<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="35">i<pos:position pos:line="40" pos:column="36"/></name><operator pos:line="40" pos:column="36">&amp;<pos:position pos:line="40" pos:column="41"/></operator><literal type="number" pos:line="40" pos:column="37">7<pos:position pos:line="40" pos:column="38"/></literal><operator pos:line="40" pos:column="38">)<pos:position pos:line="40" pos:column="39"/></operator></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><call><name pos:line="42" pos:column="7">islower<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><name pos:line="42" pos:column="15">i<pos:position pos:line="42" pos:column="16"/></name></expr></argument>)<pos:position pos:line="42" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="18"/></condition><then pos:line="42" pos:column="18">
    <block pos:line="43" pos:column="5">{
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">p<pos:position pos:line="44" pos:column="6"/></name><index pos:line="44" pos:column="6">[<expr><name pos:line="44" pos:column="7">cbit_lower<pos:position pos:line="44" pos:column="17"/></name>  <operator pos:line="44" pos:column="19">+<pos:position pos:line="44" pos:column="20"/></operator> <name pos:line="44" pos:column="21">i<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">/<pos:position pos:line="44" pos:column="23"/></operator><literal type="number" pos:line="44" pos:column="23">8<pos:position pos:line="44" pos:column="24"/></literal></expr>]<pos:position pos:line="44" pos:column="25"/></index></name> <operator pos:line="44" pos:column="26">|=<pos:position pos:line="44" pos:column="28"/></operator> <literal type="number" pos:line="44" pos:column="29">1<pos:position pos:line="44" pos:column="30"/></literal> <operator pos:line="44" pos:column="31">&lt;&lt;<pos:position pos:line="44" pos:column="39"/></operator> <operator pos:line="44" pos:column="34">(<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="35">i<pos:position pos:line="44" pos:column="36"/></name><operator pos:line="44" pos:column="36">&amp;<pos:position pos:line="44" pos:column="41"/></operator><literal type="number" pos:line="44" pos:column="37">7<pos:position pos:line="44" pos:column="38"/></literal><operator pos:line="44" pos:column="38">)<pos:position pos:line="44" pos:column="39"/></operator></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">p<pos:position pos:line="45" pos:column="6"/></name><index pos:line="45" pos:column="6">[<expr><name pos:line="45" pos:column="7">cbit_word<pos:position pos:line="45" pos:column="16"/></name>   <operator pos:line="45" pos:column="19">+<pos:position pos:line="45" pos:column="20"/></operator> <name pos:line="45" pos:column="21">i<pos:position pos:line="45" pos:column="22"/></name><operator pos:line="45" pos:column="22">/<pos:position pos:line="45" pos:column="23"/></operator><literal type="number" pos:line="45" pos:column="23">8<pos:position pos:line="45" pos:column="24"/></literal></expr>]<pos:position pos:line="45" pos:column="25"/></index></name> <operator pos:line="45" pos:column="26">|=<pos:position pos:line="45" pos:column="28"/></operator> <literal type="number" pos:line="45" pos:column="29">1<pos:position pos:line="45" pos:column="30"/></literal> <operator pos:line="45" pos:column="31">&lt;&lt;<pos:position pos:line="45" pos:column="39"/></operator> <operator pos:line="45" pos:column="34">(<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="35">i<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">&amp;<pos:position pos:line="45" pos:column="41"/></operator><literal type="number" pos:line="45" pos:column="37">7<pos:position pos:line="45" pos:column="38"/></literal><operator pos:line="45" pos:column="38">)<pos:position pos:line="45" pos:column="39"/></operator></expr>;<pos:position pos:line="45" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name pos:line="47" pos:column="7">i<pos:position pos:line="47" pos:column="8"/></name> <operator pos:line="47" pos:column="9">==<pos:position pos:line="47" pos:column="11"/></operator> <literal type="char" pos:line="47" pos:column="12">'_'<pos:position pos:line="47" pos:column="15"/></literal></expr>)<pos:position pos:line="47" pos:column="16"/></condition><then pos:line="47" pos:column="16">   <block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="19">p<pos:position pos:line="47" pos:column="20"/></name><index pos:line="47" pos:column="20">[<expr><name pos:line="47" pos:column="21">cbit_word<pos:position pos:line="47" pos:column="30"/></name>   <operator pos:line="47" pos:column="33">+<pos:position pos:line="47" pos:column="34"/></operator> <name pos:line="47" pos:column="35">i<pos:position pos:line="47" pos:column="36"/></name><operator pos:line="47" pos:column="36">/<pos:position pos:line="47" pos:column="37"/></operator><literal type="number" pos:line="47" pos:column="37">8<pos:position pos:line="47" pos:column="38"/></literal></expr>]<pos:position pos:line="47" pos:column="39"/></index></name> <operator pos:line="47" pos:column="40">|=<pos:position pos:line="47" pos:column="42"/></operator> <literal type="number" pos:line="47" pos:column="43">1<pos:position pos:line="47" pos:column="44"/></literal> <operator pos:line="47" pos:column="45">&lt;&lt;<pos:position pos:line="47" pos:column="53"/></operator> <operator pos:line="47" pos:column="48">(<pos:position pos:line="47" pos:column="49"/></operator><name pos:line="47" pos:column="49">i<pos:position pos:line="47" pos:column="50"/></name><operator pos:line="47" pos:column="50">&amp;<pos:position pos:line="47" pos:column="55"/></operator><literal type="number" pos:line="47" pos:column="51">7<pos:position pos:line="47" pos:column="52"/></literal><operator pos:line="47" pos:column="52">)<pos:position pos:line="47" pos:column="53"/></operator></expr>;<pos:position pos:line="47" pos:column="54"/></expr_stmt></block></then></if>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><call><name pos:line="48" pos:column="7">isspace<pos:position pos:line="48" pos:column="14"/></name><argument_list pos:line="48" pos:column="14">(<argument><expr><name pos:line="48" pos:column="15">i<pos:position pos:line="48" pos:column="16"/></name></expr></argument>)<pos:position pos:line="48" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="18"/></condition><then pos:line="48" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="48" pos:column="19">p<pos:position pos:line="48" pos:column="20"/></name><index pos:line="48" pos:column="20">[<expr><name pos:line="48" pos:column="21">cbit_space<pos:position pos:line="48" pos:column="31"/></name>  <operator pos:line="48" pos:column="33">+<pos:position pos:line="48" pos:column="34"/></operator> <name pos:line="48" pos:column="35">i<pos:position pos:line="48" pos:column="36"/></name><operator pos:line="48" pos:column="36">/<pos:position pos:line="48" pos:column="37"/></operator><literal type="number" pos:line="48" pos:column="37">8<pos:position pos:line="48" pos:column="38"/></literal></expr>]<pos:position pos:line="48" pos:column="39"/></index></name> <operator pos:line="48" pos:column="40">|=<pos:position pos:line="48" pos:column="42"/></operator> <literal type="number" pos:line="48" pos:column="43">1<pos:position pos:line="48" pos:column="44"/></literal> <operator pos:line="48" pos:column="45">&lt;&lt;<pos:position pos:line="48" pos:column="53"/></operator> <operator pos:line="48" pos:column="48">(<pos:position pos:line="48" pos:column="49"/></operator><name pos:line="48" pos:column="49">i<pos:position pos:line="48" pos:column="50"/></name><operator pos:line="48" pos:column="50">&amp;<pos:position pos:line="48" pos:column="55"/></operator><literal type="number" pos:line="48" pos:column="51">7<pos:position pos:line="48" pos:column="52"/></literal><operator pos:line="48" pos:column="52">)<pos:position pos:line="48" pos:column="53"/></operator></expr>;<pos:position pos:line="48" pos:column="54"/></expr_stmt></block></then></if>
  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><call><name pos:line="49" pos:column="7">isxdigit<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name pos:line="49" pos:column="16">i<pos:position pos:line="49" pos:column="17"/></name></expr></argument>)<pos:position pos:line="49" pos:column="18"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="19"/></condition><then><block type="pseudo"><expr_stmt><expr><name><name pos:line="49" pos:column="19">p<pos:position pos:line="49" pos:column="20"/></name><index pos:line="49" pos:column="20">[<expr><name pos:line="49" pos:column="21">cbit_xdigit<pos:position pos:line="49" pos:column="32"/></name> <operator pos:line="49" pos:column="33">+<pos:position pos:line="49" pos:column="34"/></operator> <name pos:line="49" pos:column="35">i<pos:position pos:line="49" pos:column="36"/></name><operator pos:line="49" pos:column="36">/<pos:position pos:line="49" pos:column="37"/></operator><literal type="number" pos:line="49" pos:column="37">8<pos:position pos:line="49" pos:column="38"/></literal></expr>]<pos:position pos:line="49" pos:column="39"/></index></name> <operator pos:line="49" pos:column="40">|=<pos:position pos:line="49" pos:column="42"/></operator> <literal type="number" pos:line="49" pos:column="43">1<pos:position pos:line="49" pos:column="44"/></literal> <operator pos:line="49" pos:column="45">&lt;&lt;<pos:position pos:line="49" pos:column="53"/></operator> <operator pos:line="49" pos:column="48">(<pos:position pos:line="49" pos:column="49"/></operator><name pos:line="49" pos:column="49">i<pos:position pos:line="49" pos:column="50"/></name><operator pos:line="49" pos:column="50">&amp;<pos:position pos:line="49" pos:column="55"/></operator><literal type="number" pos:line="49" pos:column="51">7<pos:position pos:line="49" pos:column="52"/></literal><operator pos:line="49" pos:column="52">)<pos:position pos:line="49" pos:column="53"/></operator></expr>;<pos:position pos:line="49" pos:column="54"/></expr_stmt></block></then></if>
  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><call><name pos:line="50" pos:column="7">isgraph<pos:position pos:line="50" pos:column="14"/></name><argument_list pos:line="50" pos:column="14">(<argument><expr><name pos:line="50" pos:column="15">i<pos:position pos:line="50" pos:column="16"/></name></expr></argument>)<pos:position pos:line="50" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="18"/></condition><then pos:line="50" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="19">p<pos:position pos:line="50" pos:column="20"/></name><index pos:line="50" pos:column="20">[<expr><name pos:line="50" pos:column="21">cbit_graph<pos:position pos:line="50" pos:column="31"/></name>  <operator pos:line="50" pos:column="33">+<pos:position pos:line="50" pos:column="34"/></operator> <name pos:line="50" pos:column="35">i<pos:position pos:line="50" pos:column="36"/></name><operator pos:line="50" pos:column="36">/<pos:position pos:line="50" pos:column="37"/></operator><literal type="number" pos:line="50" pos:column="37">8<pos:position pos:line="50" pos:column="38"/></literal></expr>]<pos:position pos:line="50" pos:column="39"/></index></name> <operator pos:line="50" pos:column="40">|=<pos:position pos:line="50" pos:column="42"/></operator> <literal type="number" pos:line="50" pos:column="43">1<pos:position pos:line="50" pos:column="44"/></literal> <operator pos:line="50" pos:column="45">&lt;&lt;<pos:position pos:line="50" pos:column="53"/></operator> <operator pos:line="50" pos:column="48">(<pos:position pos:line="50" pos:column="49"/></operator><name pos:line="50" pos:column="49">i<pos:position pos:line="50" pos:column="50"/></name><operator pos:line="50" pos:column="50">&amp;<pos:position pos:line="50" pos:column="55"/></operator><literal type="number" pos:line="50" pos:column="51">7<pos:position pos:line="50" pos:column="52"/></literal><operator pos:line="50" pos:column="52">)<pos:position pos:line="50" pos:column="53"/></operator></expr>;<pos:position pos:line="50" pos:column="54"/></expr_stmt></block></then></if>
  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><call><name pos:line="51" pos:column="7">isprint<pos:position pos:line="51" pos:column="14"/></name><argument_list pos:line="51" pos:column="14">(<argument><expr><name pos:line="51" pos:column="15">i<pos:position pos:line="51" pos:column="16"/></name></expr></argument>)<pos:position pos:line="51" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="18"/></condition><then pos:line="51" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="51" pos:column="19">p<pos:position pos:line="51" pos:column="20"/></name><index pos:line="51" pos:column="20">[<expr><name pos:line="51" pos:column="21">cbit_print<pos:position pos:line="51" pos:column="31"/></name>  <operator pos:line="51" pos:column="33">+<pos:position pos:line="51" pos:column="34"/></operator> <name pos:line="51" pos:column="35">i<pos:position pos:line="51" pos:column="36"/></name><operator pos:line="51" pos:column="36">/<pos:position pos:line="51" pos:column="37"/></operator><literal type="number" pos:line="51" pos:column="37">8<pos:position pos:line="51" pos:column="38"/></literal></expr>]<pos:position pos:line="51" pos:column="39"/></index></name> <operator pos:line="51" pos:column="40">|=<pos:position pos:line="51" pos:column="42"/></operator> <literal type="number" pos:line="51" pos:column="43">1<pos:position pos:line="51" pos:column="44"/></literal> <operator pos:line="51" pos:column="45">&lt;&lt;<pos:position pos:line="51" pos:column="53"/></operator> <operator pos:line="51" pos:column="48">(<pos:position pos:line="51" pos:column="49"/></operator><name pos:line="51" pos:column="49">i<pos:position pos:line="51" pos:column="50"/></name><operator pos:line="51" pos:column="50">&amp;<pos:position pos:line="51" pos:column="55"/></operator><literal type="number" pos:line="51" pos:column="51">7<pos:position pos:line="51" pos:column="52"/></literal><operator pos:line="51" pos:column="52">)<pos:position pos:line="51" pos:column="53"/></operator></expr>;<pos:position pos:line="51" pos:column="54"/></expr_stmt></block></then></if>
  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><call><name pos:line="52" pos:column="7">ispunct<pos:position pos:line="52" pos:column="14"/></name><argument_list pos:line="52" pos:column="14">(<argument><expr><name pos:line="52" pos:column="15">i<pos:position pos:line="52" pos:column="16"/></name></expr></argument>)<pos:position pos:line="52" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="18"/></condition><then pos:line="52" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="52" pos:column="19">p<pos:position pos:line="52" pos:column="20"/></name><index pos:line="52" pos:column="20">[<expr><name pos:line="52" pos:column="21">cbit_punct<pos:position pos:line="52" pos:column="31"/></name>  <operator pos:line="52" pos:column="33">+<pos:position pos:line="52" pos:column="34"/></operator> <name pos:line="52" pos:column="35">i<pos:position pos:line="52" pos:column="36"/></name><operator pos:line="52" pos:column="36">/<pos:position pos:line="52" pos:column="37"/></operator><literal type="number" pos:line="52" pos:column="37">8<pos:position pos:line="52" pos:column="38"/></literal></expr>]<pos:position pos:line="52" pos:column="39"/></index></name> <operator pos:line="52" pos:column="40">|=<pos:position pos:line="52" pos:column="42"/></operator> <literal type="number" pos:line="52" pos:column="43">1<pos:position pos:line="52" pos:column="44"/></literal> <operator pos:line="52" pos:column="45">&lt;&lt;<pos:position pos:line="52" pos:column="53"/></operator> <operator pos:line="52" pos:column="48">(<pos:position pos:line="52" pos:column="49"/></operator><name pos:line="52" pos:column="49">i<pos:position pos:line="52" pos:column="50"/></name><operator pos:line="52" pos:column="50">&amp;<pos:position pos:line="52" pos:column="55"/></operator><literal type="number" pos:line="52" pos:column="51">7<pos:position pos:line="52" pos:column="52"/></literal><operator pos:line="52" pos:column="52">)<pos:position pos:line="52" pos:column="53"/></operator></expr>;<pos:position pos:line="52" pos:column="54"/></expr_stmt></block></then></if>
  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><call><name pos:line="53" pos:column="7">iscntrl<pos:position pos:line="53" pos:column="14"/></name><argument_list pos:line="53" pos:column="14">(<argument><expr><name pos:line="53" pos:column="15">i<pos:position pos:line="53" pos:column="16"/></name></expr></argument>)<pos:position pos:line="53" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="18"/></condition><then pos:line="53" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="19">p<pos:position pos:line="53" pos:column="20"/></name><index pos:line="53" pos:column="20">[<expr><name pos:line="53" pos:column="21">cbit_cntrl<pos:position pos:line="53" pos:column="31"/></name>  <operator pos:line="53" pos:column="33">+<pos:position pos:line="53" pos:column="34"/></operator> <name pos:line="53" pos:column="35">i<pos:position pos:line="53" pos:column="36"/></name><operator pos:line="53" pos:column="36">/<pos:position pos:line="53" pos:column="37"/></operator><literal type="number" pos:line="53" pos:column="37">8<pos:position pos:line="53" pos:column="38"/></literal></expr>]<pos:position pos:line="53" pos:column="39"/></index></name> <operator pos:line="53" pos:column="40">|=<pos:position pos:line="53" pos:column="42"/></operator> <literal type="number" pos:line="53" pos:column="43">1<pos:position pos:line="53" pos:column="44"/></literal> <operator pos:line="53" pos:column="45">&lt;&lt;<pos:position pos:line="53" pos:column="53"/></operator> <operator pos:line="53" pos:column="48">(<pos:position pos:line="53" pos:column="49"/></operator><name pos:line="53" pos:column="49">i<pos:position pos:line="53" pos:column="50"/></name><operator pos:line="53" pos:column="50">&amp;<pos:position pos:line="53" pos:column="55"/></operator><literal type="number" pos:line="53" pos:column="51">7<pos:position pos:line="53" pos:column="52"/></literal><operator pos:line="53" pos:column="52">)<pos:position pos:line="53" pos:column="53"/></operator></expr>;<pos:position pos:line="53" pos:column="54"/></expr_stmt></block></then></if>
  }<pos:position pos:line="54" pos:column="4"/></block></for>
<expr_stmt><expr><name pos:line="55" pos:column="1">p<pos:position pos:line="55" pos:column="2"/></name> <operator pos:line="55" pos:column="3">+=<pos:position pos:line="55" pos:column="5"/></operator> <name pos:line="55" pos:column="6">cbit_length<pos:position pos:line="55" pos:column="17"/></name></expr>;<pos:position pos:line="55" pos:column="18"/></expr_stmt>

<comment type="block" pos:line="57" pos:column="1">/* Finally, the character type table. In this, we exclude VT from the white
space chars, because Perl doesn't recognize it as such for \s and for comments
within regexes. */</comment>

<for pos:line="61" pos:column="1">for <control pos:line="61" pos:column="5">(<init><expr><name pos:line="61" pos:column="6">i<pos:position pos:line="61" pos:column="7"/></name> <operator pos:line="61" pos:column="8">=<pos:position pos:line="61" pos:column="9"/></operator> <literal type="number" pos:line="61" pos:column="10">0<pos:position pos:line="61" pos:column="11"/></literal></expr>;<pos:position pos:line="61" pos:column="12"/></init> <condition><expr><name pos:line="61" pos:column="13">i<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">&lt;<pos:position pos:line="61" pos:column="19"/></operator> <literal type="number" pos:line="61" pos:column="17">256<pos:position pos:line="61" pos:column="20"/></literal></expr>;<pos:position pos:line="61" pos:column="21"/></condition> <incr><expr><name pos:line="61" pos:column="22">i<pos:position pos:line="61" pos:column="23"/></name><operator pos:line="61" pos:column="23">++<pos:position pos:line="61" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="61" pos:column="26"/></control>
  <block pos:line="62" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="63" pos:column="3">int<pos:position pos:line="63" pos:column="6"/></name></type> <name pos:line="63" pos:column="7">x<pos:position pos:line="63" pos:column="8"/></name> <init pos:line="63" pos:column="9">= <expr><literal type="number" pos:line="63" pos:column="11">0<pos:position pos:line="63" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="63" pos:column="13"/></decl_stmt>
  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><name pos:line="64" pos:column="7">i<pos:position pos:line="64" pos:column="8"/></name> <operator pos:line="64" pos:column="9">!=<pos:position pos:line="64" pos:column="11"/></operator> <literal type="number" pos:line="64" pos:column="12">0x0b<pos:position pos:line="64" pos:column="16"/></literal> <operator pos:line="64" pos:column="17">&amp;&amp;<pos:position pos:line="64" pos:column="27"/></operator> <call><name pos:line="64" pos:column="20">isspace<pos:position pos:line="64" pos:column="27"/></name><argument_list pos:line="64" pos:column="27">(<argument><expr><name pos:line="64" pos:column="28">i<pos:position pos:line="64" pos:column="29"/></name></expr></argument>)<pos:position pos:line="64" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="31"/></condition><then pos:line="64" pos:column="31"> <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="32">x<pos:position pos:line="64" pos:column="33"/></name> <operator pos:line="64" pos:column="34">+=<pos:position pos:line="64" pos:column="36"/></operator> <name pos:line="64" pos:column="37">ctype_space<pos:position pos:line="64" pos:column="48"/></name></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt></block></then></if>
  <if pos:line="65" pos:column="3">if <condition pos:line="65" pos:column="6">(<expr><call><name pos:line="65" pos:column="7">isalpha<pos:position pos:line="65" pos:column="14"/></name><argument_list pos:line="65" pos:column="14">(<argument><expr><name pos:line="65" pos:column="15">i<pos:position pos:line="65" pos:column="16"/></name></expr></argument>)<pos:position pos:line="65" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="18"/></condition><then pos:line="65" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="19">x<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">+=<pos:position pos:line="65" pos:column="23"/></operator> <name pos:line="65" pos:column="24">ctype_letter<pos:position pos:line="65" pos:column="36"/></name></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt></block></then></if>
  <if pos:line="66" pos:column="3">if <condition pos:line="66" pos:column="6">(<expr><call><name pos:line="66" pos:column="7">isdigit<pos:position pos:line="66" pos:column="14"/></name><argument_list pos:line="66" pos:column="14">(<argument><expr><name pos:line="66" pos:column="15">i<pos:position pos:line="66" pos:column="16"/></name></expr></argument>)<pos:position pos:line="66" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="18"/></condition><then pos:line="66" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="19">x<pos:position pos:line="66" pos:column="20"/></name> <operator pos:line="66" pos:column="21">+=<pos:position pos:line="66" pos:column="23"/></operator> <name pos:line="66" pos:column="24">ctype_digit<pos:position pos:line="66" pos:column="35"/></name></expr>;<pos:position pos:line="66" pos:column="36"/></expr_stmt></block></then></if>
  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><call><name pos:line="67" pos:column="7">isxdigit<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">(<argument><expr><name pos:line="67" pos:column="16">i<pos:position pos:line="67" pos:column="17"/></name></expr></argument>)<pos:position pos:line="67" pos:column="18"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="19"/></condition><then pos:line="67" pos:column="19"> <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="20">x<pos:position pos:line="67" pos:column="21"/></name> <operator pos:line="67" pos:column="22">+=<pos:position pos:line="67" pos:column="24"/></operator> <name pos:line="67" pos:column="25">ctype_xdigit<pos:position pos:line="67" pos:column="37"/></name></expr>;<pos:position pos:line="67" pos:column="38"/></expr_stmt></block></then></if>
  <if pos:line="68" pos:column="3">if <condition pos:line="68" pos:column="6">(<expr><call><name pos:line="68" pos:column="7">isalnum<pos:position pos:line="68" pos:column="14"/></name><argument_list pos:line="68" pos:column="14">(<argument><expr><name pos:line="68" pos:column="15">i<pos:position pos:line="68" pos:column="16"/></name></expr></argument>)<pos:position pos:line="68" pos:column="17"/></argument_list></call> <operator pos:line="68" pos:column="18">||<pos:position pos:line="68" pos:column="20"/></operator> <name pos:line="68" pos:column="21">i<pos:position pos:line="68" pos:column="22"/></name> <operator pos:line="68" pos:column="23">==<pos:position pos:line="68" pos:column="25"/></operator> <literal type="char" pos:line="68" pos:column="26">'_'<pos:position pos:line="68" pos:column="29"/></literal></expr>)<pos:position pos:line="68" pos:column="30"/></condition><then pos:line="68" pos:column="30"> <block type="pseudo"><expr_stmt><expr><name pos:line="68" pos:column="31">x<pos:position pos:line="68" pos:column="32"/></name> <operator pos:line="68" pos:column="33">+=<pos:position pos:line="68" pos:column="35"/></operator> <name pos:line="68" pos:column="36">ctype_word<pos:position pos:line="68" pos:column="46"/></name></expr>;<pos:position pos:line="68" pos:column="47"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="70" pos:column="3">/* Note: strchr includes the terminating zero in the characters it considers.
  In this instance, that is ok because we want binary zero to be flagged as a
  meta-character, which in this sense is any character that terminates a run
  of data characters. */</comment>

  <if pos:line="75" pos:column="3">if <condition pos:line="75" pos:column="6">(<expr><call><name pos:line="75" pos:column="7">strchr<pos:position pos:line="75" pos:column="13"/></name><argument_list pos:line="75" pos:column="13">(<argument><expr><literal type="string" pos:line="75" pos:column="14">"*+?{^.$|()["<pos:position pos:line="75" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="29">i<pos:position pos:line="75" pos:column="30"/></name></expr></argument>)<pos:position pos:line="75" pos:column="31"/></argument_list></call> <operator pos:line="75" pos:column="32">!=<pos:position pos:line="75" pos:column="34"/></operator> <literal type="number" pos:line="75" pos:column="35">0<pos:position pos:line="75" pos:column="36"/></literal></expr>)<pos:position pos:line="75" pos:column="37"/></condition><then pos:line="75" pos:column="37"> <block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="38">x<pos:position pos:line="75" pos:column="39"/></name> <operator pos:line="75" pos:column="40">+=<pos:position pos:line="75" pos:column="42"/></operator> <name pos:line="75" pos:column="43">ctype_meta<pos:position pos:line="75" pos:column="53"/></name></expr>;<pos:position pos:line="75" pos:column="54"/></expr_stmt></block></then></if> <expr_stmt><expr><operator pos:line="75" pos:column="55">*<pos:position pos:line="75" pos:column="56"/></operator><name pos:line="75" pos:column="56">p<pos:position pos:line="75" pos:column="57"/></name><operator pos:line="75" pos:column="57">++<pos:position pos:line="75" pos:column="59"/></operator> <operator pos:line="75" pos:column="60">=<pos:position pos:line="75" pos:column="61"/></operator> <name pos:line="75" pos:column="62">x<pos:position pos:line="75" pos:column="63"/></name></expr>;<pos:position pos:line="75" pos:column="64"/></expr_stmt> }<pos:position pos:line="75" pos:column="66"/></block></for>

<return pos:line="77" pos:column="1">return <expr><name pos:line="77" pos:column="8">yield<pos:position pos:line="77" pos:column="13"/></name></expr>;<pos:position pos:line="77" pos:column="14"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

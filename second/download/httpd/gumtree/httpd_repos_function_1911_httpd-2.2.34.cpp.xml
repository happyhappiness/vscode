<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1911_httpd-2.2.34.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">util_ald_cache_fetch<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">util_ald_cache_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">cache<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">void<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">payload<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">unsigned<pos:position pos:line="3" pos:column="13"/></name> <name pos:line="3" pos:column="14">long<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">hashval<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">util_cache_node_t<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">p<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">cache<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">==<pos:position pos:line="6" pos:column="17"/></operator> <name pos:line="6" pos:column="18">NULL<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">NULL<pos:position pos:line="7" pos:column="20"/></name></expr>;<pos:position pos:line="7" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">cache<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">fetches<pos:position pos:line="9" pos:column="19"/></name></name><operator pos:line="9" pos:column="19">++<pos:position pos:line="9" pos:column="21"/></operator></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">hashval<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <call pos:line="11" pos:column="15">(<modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier><name><name pos:line="11" pos:column="17">cache<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">-&gt;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="24">hash<pos:position pos:line="11" pos:column="28"/></name></name>)<argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">payload<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call> <operator pos:line="11" pos:column="39">%<pos:position pos:line="11" pos:column="40"/></operator> <name><name pos:line="11" pos:column="41">cache<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">-&gt;<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="48">size<pos:position pos:line="11" pos:column="52"/></name></name></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>
    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><expr><name pos:line="12" pos:column="10">p<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <name><name pos:line="12" pos:column="14">cache<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">nodes<pos:position pos:line="12" pos:column="26"/></name><index pos:line="12" pos:column="26">[<expr><name pos:line="12" pos:column="27">hashval<pos:position pos:line="12" pos:column="34"/></name></expr>]<pos:position pos:line="12" pos:column="35"/></index></name></expr>;<pos:position pos:line="12" pos:column="36"/></init>
         <condition><expr><name pos:line="13" pos:column="10">p<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">&amp;&amp;<pos:position pos:line="13" pos:column="22"/></operator> <operator pos:line="13" pos:column="15">!<pos:position pos:line="13" pos:column="16"/></operator><call pos:line="13" pos:column="16">(<modifier pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></modifier><name><name pos:line="13" pos:column="18">cache<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">compare<pos:position pos:line="13" pos:column="32"/></name></name>)<argument_list pos:line="13" pos:column="33">(<argument><expr><name><name pos:line="13" pos:column="34">p<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">payload<pos:position pos:line="13" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">payload<pos:position pos:line="13" pos:column="53"/></name></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></condition>
    <incr><expr><name pos:line="14" pos:column="5">p<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <name><name pos:line="14" pos:column="9">p<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">next<pos:position pos:line="14" pos:column="16"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="17"/></control> <block type="pseudo"><empty_stmt pos:line="14" pos:column="18">;<pos:position pos:line="14" pos:column="19"/></empty_stmt></block></for>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">p<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">!=<pos:position pos:line="16" pos:column="13"/></operator> <name pos:line="16" pos:column="14">NULL<pos:position pos:line="16" pos:column="18"/></name></expr>)<pos:position pos:line="16" pos:column="19"/></condition><then pos:line="16" pos:column="19"> <block pos:line="16" pos:column="20">{
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">cache<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">hits<pos:position pos:line="17" pos:column="20"/></name></name><operator pos:line="17" pos:column="20">++<pos:position pos:line="17" pos:column="22"/></operator></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><name><name pos:line="18" pos:column="16">p<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">payload<pos:position pos:line="18" pos:column="26"/></name></name></expr>;<pos:position pos:line="18" pos:column="27"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then>
    <else pos:line="20" pos:column="5">else <block pos:line="20" pos:column="10">{
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">NULL<pos:position pos:line="21" pos:column="20"/></name></expr>;<pos:position pos:line="21" pos:column="21"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2822_httpd-2.0.43.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cstat<pos:position pos:line="1" pos:column="10"/></name> <parameter_list pos:line="1" pos:column="11">(<parameter><decl><type><specifier pos:line="1" pos:column="12">const<pos:position pos:line="1" pos:column="17"/></specifier> <name pos:line="1" pos:column="18">char<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">path<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">stat<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">buf<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier><modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">casedName<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">apr_pool_t<pos:position pos:line="1" pos:column="76"/></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">pool<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="83"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_hash_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">statCache<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><operator pos:line="3" pos:column="29">(<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="30">apr_hash_t<pos:position pos:line="3" pos:column="40"/></name> <operator pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></operator><operator pos:line="3" pos:column="42">)<pos:position pos:line="3" pos:column="43"/></operator><call><name pos:line="3" pos:column="43">getStatCache<pos:position pos:line="3" pos:column="55"/></name><argument_list pos:line="3" pos:column="55">(<argument><expr><name pos:line="3" pos:column="56">CpuCurrentProcessor<pos:position pos:line="3" pos:column="75"/></name></expr></argument>)<pos:position pos:line="3" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="77"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_pool_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">gPool<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><operator pos:line="4" pos:column="25">(<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">apr_pool_t<pos:position pos:line="4" pos:column="36"/></name> <operator pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></operator><operator pos:line="4" pos:column="38">)<pos:position pos:line="4" pos:column="39"/></operator><call><name pos:line="4" pos:column="39">getGlobalPool<pos:position pos:line="4" pos:column="52"/></name><argument_list pos:line="4" pos:column="52">(<argument><expr><name pos:line="4" pos:column="53">CpuCurrentProcessor<pos:position pos:line="4" pos:column="72"/></name></expr></argument>)<pos:position pos:line="4" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="74"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_stat_entry_t<pos:position pos:line="5" pos:column="21"/></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">stat_entry<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">stat<pos:position pos:line="6" pos:column="16"/></name></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">info<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_time_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">now<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><call><name pos:line="7" pos:column="22">apr_time_now<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">()<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">key<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">ret<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">found<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="12" pos:column="5">*<pos:position pos:line="12" pos:column="6"/></operator><name pos:line="12" pos:column="6">casedName<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">NULL<pos:position pos:line="12" pos:column="22"/></name></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* If there isn't a global pool then just stat the file
       and return */</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">gPool<pos:position pos:line="16" pos:column="15"/></name></expr>)<pos:position pos:line="16" pos:column="16"/></condition><then pos:line="16" pos:column="16"> <block pos:line="16" pos:column="17">{
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name></type> <name><name pos:line="17" pos:column="14">poolname<pos:position pos:line="17" pos:column="22"/></name><index pos:line="17" pos:column="22">[<expr><literal type="number" pos:line="17" pos:column="23">50<pos:position pos:line="17" pos:column="25"/></literal></expr>]<pos:position pos:line="17" pos:column="26"/></index></name></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">apr_pool_create<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><operator pos:line="19" pos:column="29">&amp;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="30">gPool<pos:position pos:line="19" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="37">NULL<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call> <operator pos:line="19" pos:column="43">!=<pos:position pos:line="19" pos:column="45"/></operator> <name pos:line="19" pos:column="46">APR_SUCCESS<pos:position pos:line="19" pos:column="57"/></name></expr>)<pos:position pos:line="19" pos:column="58"/></condition><then pos:line="19" pos:column="58"> <block pos:line="19" pos:column="59">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">ret<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <call><name pos:line="20" pos:column="19">stat<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">path<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="30">buf<pos:position pos:line="20" pos:column="33"/></name></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><name pos:line="21" pos:column="17">ret<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">==<pos:position pos:line="21" pos:column="23"/></operator> <literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal></expr>)<pos:position pos:line="21" pos:column="26"/></condition><then pos:line="21" pos:column="26">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">casedName<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <call><name pos:line="22" pos:column="30">case_filename<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">(<argument><expr><name pos:line="22" pos:column="44">pool<pos:position pos:line="22" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="50">path<pos:position pos:line="22" pos:column="54"/></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt></block></then></if>
            <return pos:line="23" pos:column="13">return <expr><name pos:line="23" pos:column="20">ret<pos:position pos:line="23" pos:column="23"/></name></expr>;<pos:position pos:line="23" pos:column="24"/></return>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="26" pos:column="9">sprintf<pos:position pos:line="26" pos:column="16"/></name> <argument_list pos:line="26" pos:column="17">(<argument><expr><name pos:line="26" pos:column="18">poolname<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="28">"cstat_mem_pool_%d"<pos:position pos:line="26" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="49">CpuCurrentProcessor<pos:position pos:line="26" pos:column="68"/></name></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">apr_pool_tag<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">gPool<pos:position pos:line="27" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="29">poolname<pos:position pos:line="27" pos:column="37"/></name></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="29" pos:column="9">setGlobalPool<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">gPool<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="30">CpuCurrentProcessor<pos:position pos:line="29" pos:column="49"/></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="32" pos:column="5">/* If we have a statCache hash table then use it.
       Otherwise we need to create it and initialized it
       with a new mutex lock. */</comment>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">statCache<pos:position pos:line="35" pos:column="19"/></name></expr>)<pos:position pos:line="35" pos:column="20"/></condition><then pos:line="35" pos:column="20"> <block pos:line="35" pos:column="21">{
        <expr_stmt><expr><name pos:line="36" pos:column="9">statCache<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <call><name pos:line="36" pos:column="21">apr_hash_make<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">gPool<pos:position pos:line="36" pos:column="40"/></name></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">setStatCache<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><operator pos:line="37" pos:column="22">(<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="23">void<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">*<pos:position pos:line="37" pos:column="28"/></operator><operator pos:line="37" pos:column="28">)<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="29">statCache<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="40">CpuCurrentProcessor<pos:position pos:line="37" pos:column="59"/></name></expr></argument>)<pos:position pos:line="37" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="40" pos:column="5">/* If we have a statCache then try to pull the information
       from the cache.  Otherwise just stat the file and return.*/</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">statCache<pos:position pos:line="42" pos:column="18"/></name></expr>)<pos:position pos:line="42" pos:column="19"/></condition><then pos:line="42" pos:column="19"> <block pos:line="42" pos:column="20">{
        <expr_stmt><expr><name pos:line="43" pos:column="9">stat_entry<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <operator pos:line="43" pos:column="22">(<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">apr_stat_entry_t<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">*<pos:position pos:line="43" pos:column="40"/></operator><operator pos:line="43" pos:column="40">)<pos:position pos:line="43" pos:column="41"/></operator> <call><name pos:line="43" pos:column="42">apr_hash_get<pos:position pos:line="43" pos:column="54"/></name><argument_list pos:line="43" pos:column="54">(<argument><expr><name pos:line="43" pos:column="55">statCache<pos:position pos:line="43" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="66">path<pos:position pos:line="43" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="72">APR_HASH_KEY_STRING<pos:position pos:line="43" pos:column="91"/></name></expr></argument>)<pos:position pos:line="43" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="93"/></expr_stmt>
        <comment type="block" pos:line="44" pos:column="9">/* If we got an entry then check the expiration time.  If the entry
           hasn't expired yet then copy the information and return. */</comment>
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">stat_entry<pos:position pos:line="46" pos:column="23"/></name></expr>)<pos:position pos:line="46" pos:column="24"/></condition><then pos:line="46" pos:column="24"> <block pos:line="46" pos:column="25">{
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><operator pos:line="47" pos:column="17">(<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">now<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">-<pos:position pos:line="47" pos:column="23"/></operator> <name><name pos:line="47" pos:column="24">stat_entry<pos:position pos:line="47" pos:column="34"/></name><operator pos:line="47" pos:column="34">-&gt;<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="36">expire<pos:position pos:line="47" pos:column="42"/></name></name><operator pos:line="47" pos:column="42">)<pos:position pos:line="47" pos:column="43"/></operator> <operator pos:line="47" pos:column="44">&lt;=<pos:position pos:line="47" pos:column="49"/></operator> <name pos:line="47" pos:column="47">APR_USEC_PER_SEC<pos:position pos:line="47" pos:column="63"/></name></expr>)<pos:position pos:line="47" pos:column="64"/></condition><then pos:line="47" pos:column="64"> <block pos:line="47" pos:column="65">{
                <expr_stmt><expr><call><name pos:line="48" pos:column="17">memcpy<pos:position pos:line="48" pos:column="23"/></name> <argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">buf<pos:position pos:line="48" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="30">&amp;<pos:position pos:line="48" pos:column="35"/></operator><operator pos:line="48" pos:column="31">(<pos:position pos:line="48" pos:column="32"/></operator><name><name pos:line="48" pos:column="32">stat_entry<pos:position pos:line="48" pos:column="42"/></name><operator pos:line="48" pos:column="42">-&gt;<pos:position pos:line="48" pos:column="47"/></operator><name pos:line="48" pos:column="44">info<pos:position pos:line="48" pos:column="48"/></name></name><operator pos:line="48" pos:column="48">)<pos:position pos:line="48" pos:column="49"/></operator></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="51">sizeof<argument_list pos:line="48" pos:column="57">(<argument><expr pos:line="48" pos:column="58">struct <name pos:line="48" pos:column="65">stat<pos:position pos:line="48" pos:column="69"/></name></expr></argument>)<pos:position pos:line="48" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="72"/></expr_stmt>
                <if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name><name pos:line="49" pos:column="21">stat_entry<pos:position pos:line="49" pos:column="31"/></name><operator pos:line="49" pos:column="31">-&gt;<pos:position pos:line="49" pos:column="36"/></operator><name pos:line="49" pos:column="33">casedName<pos:position pos:line="49" pos:column="42"/></name></name></expr>)<pos:position pos:line="49" pos:column="43"/></condition><then pos:line="49" pos:column="43">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="50" pos:column="21">*<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="22">casedName<pos:position pos:line="50" pos:column="31"/></name> <operator pos:line="50" pos:column="32">=<pos:position pos:line="50" pos:column="33"/></operator> <call><name pos:line="50" pos:column="34">apr_pstrdup<pos:position pos:line="50" pos:column="45"/></name> <argument_list pos:line="50" pos:column="46">(<argument><expr><name pos:line="50" pos:column="47">pool<pos:position pos:line="50" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="53">stat_entry<pos:position pos:line="50" pos:column="63"/></name><operator pos:line="50" pos:column="63">-&gt;<pos:position pos:line="50" pos:column="68"/></operator><name pos:line="50" pos:column="65">casedName<pos:position pos:line="50" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="76"/></expr_stmt></block></then>
                <else pos:line="51" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="52" pos:column="21">*<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="22">casedName<pos:position pos:line="52" pos:column="31"/></name> <operator pos:line="52" pos:column="32">=<pos:position pos:line="52" pos:column="33"/></operator> <call><name pos:line="52" pos:column="34">case_filename<pos:position pos:line="52" pos:column="47"/></name><argument_list pos:line="52" pos:column="47">(<argument><expr><name pos:line="52" pos:column="48">pool<pos:position pos:line="52" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="54">path<pos:position pos:line="52" pos:column="58"/></name></expr></argument>)<pos:position pos:line="52" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="60"/></expr_stmt></block></else></if>
                <expr_stmt><expr><name pos:line="53" pos:column="17">found<pos:position pos:line="53" pos:column="22"/></name> <operator pos:line="53" pos:column="23">=<pos:position pos:line="53" pos:column="24"/></operator> <literal type="number" pos:line="53" pos:column="25">1<pos:position pos:line="53" pos:column="26"/></literal></expr>;<pos:position pos:line="53" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="54" pos:column="14"/></block></then></if>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="57" pos:column="9">/* Since we are creating a separate stat cache for each processor, we
           don't need to worry about locking the hash table before manipulating
           it. */</comment>
        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><operator pos:line="60" pos:column="13">!<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="14">found<pos:position pos:line="60" pos:column="19"/></name></expr>)<pos:position pos:line="60" pos:column="20"/></condition><then pos:line="60" pos:column="20"> <block pos:line="60" pos:column="21">{
            <comment type="block" pos:line="61" pos:column="13">/* Bind the thread to the current cpu so that we don't wake
               up on some other cpu and try to manipulate the wrong cache. */</comment>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">NXThreadBind<pos:position pos:line="63" pos:column="25"/></name> <argument_list pos:line="63" pos:column="26">(<argument><expr><name pos:line="63" pos:column="27">CpuCurrentProcessor<pos:position pos:line="63" pos:column="46"/></name></expr></argument>)<pos:position pos:line="63" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name pos:line="64" pos:column="13">ret<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">=<pos:position pos:line="64" pos:column="18"/></operator> <call><name pos:line="64" pos:column="19">stat<pos:position pos:line="64" pos:column="23"/></name><argument_list pos:line="64" pos:column="23">(<argument><expr><name pos:line="64" pos:column="24">path<pos:position pos:line="64" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="30">buf<pos:position pos:line="64" pos:column="33"/></name></expr></argument>)<pos:position pos:line="64" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt>
            <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><name pos:line="65" pos:column="17">ret<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">==<pos:position pos:line="65" pos:column="23"/></operator> <literal type="number" pos:line="65" pos:column="24">0<pos:position pos:line="65" pos:column="25"/></literal></expr>)<pos:position pos:line="65" pos:column="26"/></condition><then pos:line="65" pos:column="26"> <block pos:line="65" pos:column="27">{
                <expr_stmt><expr><operator pos:line="66" pos:column="17">*<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="18">casedName<pos:position pos:line="66" pos:column="27"/></name> <operator pos:line="66" pos:column="28">=<pos:position pos:line="66" pos:column="29"/></operator> <call><name pos:line="66" pos:column="30">case_filename<pos:position pos:line="66" pos:column="43"/></name><argument_list pos:line="66" pos:column="43">(<argument><expr><name pos:line="66" pos:column="44">pool<pos:position pos:line="66" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="50">path<pos:position pos:line="66" pos:column="54"/></name></expr></argument>)<pos:position pos:line="66" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="56"/></expr_stmt>
                <comment type="block" pos:line="67" pos:column="17">/* If we don't have a stat_entry then create one, copy
                   the data and add it to the hash table. */</comment>
                <if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><operator pos:line="69" pos:column="21">!<pos:position pos:line="69" pos:column="22"/></operator><name pos:line="69" pos:column="22">stat_entry<pos:position pos:line="69" pos:column="32"/></name></expr>)<pos:position pos:line="69" pos:column="33"/></condition><then pos:line="69" pos:column="33"> <block pos:line="69" pos:column="34">{
                    <expr_stmt><expr><name pos:line="70" pos:column="21">key<pos:position pos:line="70" pos:column="24"/></name> <operator pos:line="70" pos:column="25">=<pos:position pos:line="70" pos:column="26"/></operator> <call><name pos:line="70" pos:column="27">apr_pstrdup<pos:position pos:line="70" pos:column="38"/></name> <argument_list pos:line="70" pos:column="39">(<argument><expr><name pos:line="70" pos:column="40">gPool<pos:position pos:line="70" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="47">path<pos:position pos:line="70" pos:column="51"/></name></expr></argument>)<pos:position pos:line="70" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="53"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="71" pos:column="21">stat_entry<pos:position pos:line="71" pos:column="31"/></name> <operator pos:line="71" pos:column="32">=<pos:position pos:line="71" pos:column="33"/></operator> <call><name pos:line="71" pos:column="34">apr_palloc<pos:position pos:line="71" pos:column="44"/></name> <argument_list pos:line="71" pos:column="45">(<argument><expr><name pos:line="71" pos:column="46">gPool<pos:position pos:line="71" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="53">sizeof<argument_list pos:line="71" pos:column="59">(<argument><expr><name pos:line="71" pos:column="60">apr_stat_entry_t<pos:position pos:line="71" pos:column="76"/></name></expr></argument>)<pos:position pos:line="71" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="71" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="79"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="72" pos:column="21">memcpy<pos:position pos:line="72" pos:column="27"/></name> <argument_list pos:line="72" pos:column="28">(<argument><expr><operator pos:line="72" pos:column="29">&amp;<pos:position pos:line="72" pos:column="34"/></operator><operator pos:line="72" pos:column="30">(<pos:position pos:line="72" pos:column="31"/></operator><name><name pos:line="72" pos:column="31">stat_entry<pos:position pos:line="72" pos:column="41"/></name><operator pos:line="72" pos:column="41">-&gt;<pos:position pos:line="72" pos:column="46"/></operator><name pos:line="72" pos:column="43">info<pos:position pos:line="72" pos:column="47"/></name></name><operator pos:line="72" pos:column="47">)<pos:position pos:line="72" pos:column="48"/></operator></expr></argument>, <argument><expr><name pos:line="72" pos:column="50">buf<pos:position pos:line="72" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="55">sizeof<argument_list pos:line="72" pos:column="61">(<argument><expr pos:line="72" pos:column="62">struct <name pos:line="72" pos:column="69">stat<pos:position pos:line="72" pos:column="73"/></name></expr></argument>)<pos:position pos:line="72" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="72" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="76"/></expr_stmt>
                    <if pos:line="73" pos:column="21">if <condition pos:line="73" pos:column="24">(<expr><operator pos:line="73" pos:column="25">*<pos:position pos:line="73" pos:column="26"/></operator><name pos:line="73" pos:column="26">casedName<pos:position pos:line="73" pos:column="35"/></name></expr>)<pos:position pos:line="73" pos:column="36"/></condition><then pos:line="73" pos:column="36">
                        <block type="pseudo"><expr_stmt><expr><name><name pos:line="74" pos:column="25">stat_entry<pos:position pos:line="74" pos:column="35"/></name><operator pos:line="74" pos:column="35">-&gt;<pos:position pos:line="74" pos:column="40"/></operator><name pos:line="74" pos:column="37">casedName<pos:position pos:line="74" pos:column="46"/></name></name> <operator pos:line="74" pos:column="47">=<pos:position pos:line="74" pos:column="48"/></operator> <call><name pos:line="74" pos:column="49">apr_pstrdup<pos:position pos:line="74" pos:column="60"/></name> <argument_list pos:line="74" pos:column="61">(<argument><expr><name pos:line="74" pos:column="62">gPool<pos:position pos:line="74" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="69">*<pos:position pos:line="74" pos:column="70"/></operator><name pos:line="74" pos:column="70">casedName<pos:position pos:line="74" pos:column="79"/></name></expr></argument>)<pos:position pos:line="74" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="81"/></expr_stmt></block></then></if>
                    <expr_stmt><expr><name><name pos:line="75" pos:column="21">stat_entry<pos:position pos:line="75" pos:column="31"/></name><operator pos:line="75" pos:column="31">-&gt;<pos:position pos:line="75" pos:column="36"/></operator><name pos:line="75" pos:column="33">expire<pos:position pos:line="75" pos:column="39"/></name></name> <operator pos:line="75" pos:column="40">=<pos:position pos:line="75" pos:column="41"/></operator> <name pos:line="75" pos:column="42">now<pos:position pos:line="75" pos:column="45"/></name></expr>;<pos:position pos:line="75" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="76" pos:column="21">apr_hash_set<pos:position pos:line="76" pos:column="33"/></name><argument_list pos:line="76" pos:column="33">(<argument><expr><name pos:line="76" pos:column="34">statCache<pos:position pos:line="76" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="45">key<pos:position pos:line="76" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="50">APR_HASH_KEY_STRING<pos:position pos:line="76" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="71">stat_entry<pos:position pos:line="76" pos:column="81"/></name></expr></argument>)<pos:position pos:line="76" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="83"/></expr_stmt>
                }<pos:position pos:line="77" pos:column="18"/></block></then>
                <else pos:line="78" pos:column="17">else <block pos:line="78" pos:column="22">{
                    <comment type="block" pos:line="79" pos:column="21">/* If we do have a stat_entry then it must have expired.  Just
                       copy the data and reset the expiration. */</comment>
                    <expr_stmt><expr><call><name pos:line="81" pos:column="21">memcpy<pos:position pos:line="81" pos:column="27"/></name> <argument_list pos:line="81" pos:column="28">(<argument><expr><operator pos:line="81" pos:column="29">&amp;<pos:position pos:line="81" pos:column="34"/></operator><operator pos:line="81" pos:column="30">(<pos:position pos:line="81" pos:column="31"/></operator><name><name pos:line="81" pos:column="31">stat_entry<pos:position pos:line="81" pos:column="41"/></name><operator pos:line="81" pos:column="41">-&gt;<pos:position pos:line="81" pos:column="46"/></operator><name pos:line="81" pos:column="43">info<pos:position pos:line="81" pos:column="47"/></name></name><operator pos:line="81" pos:column="47">)<pos:position pos:line="81" pos:column="48"/></operator></expr></argument>, <argument><expr><name pos:line="81" pos:column="50">buf<pos:position pos:line="81" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="81" pos:column="55">sizeof<argument_list pos:line="81" pos:column="61">(<argument><expr pos:line="81" pos:column="62">struct <name pos:line="81" pos:column="69">stat<pos:position pos:line="81" pos:column="73"/></name></expr></argument>)<pos:position pos:line="81" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="81" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="76"/></expr_stmt>

                    <comment type="block" pos:line="83" pos:column="21">/* If we have a casedName and don't have a cached name or the names don't
                       compare, then cache the name. */</comment>
                    <if pos:line="85" pos:column="21">if <condition pos:line="85" pos:column="24">(<expr><operator pos:line="85" pos:column="25">*<pos:position pos:line="85" pos:column="26"/></operator><name pos:line="85" pos:column="26">casedName<pos:position pos:line="85" pos:column="35"/></name> <operator pos:line="85" pos:column="36">&amp;&amp;<pos:position pos:line="85" pos:column="46"/></operator> <operator pos:line="85" pos:column="39">(<pos:position pos:line="85" pos:column="40"/></operator><operator pos:line="85" pos:column="40">!<pos:position pos:line="85" pos:column="41"/></operator><name><name pos:line="85" pos:column="41">stat_entry<pos:position pos:line="85" pos:column="51"/></name><operator pos:line="85" pos:column="51">-&gt;<pos:position pos:line="85" pos:column="56"/></operator><name pos:line="85" pos:column="53">casedName<pos:position pos:line="85" pos:column="62"/></name></name> <operator pos:line="85" pos:column="63">||<pos:position pos:line="85" pos:column="65"/></operator> <call><name pos:line="85" pos:column="66">strcmp<pos:position pos:line="85" pos:column="72"/></name><argument_list pos:line="85" pos:column="72">(<argument><expr><operator pos:line="85" pos:column="73">*<pos:position pos:line="85" pos:column="74"/></operator><name pos:line="85" pos:column="74">casedName<pos:position pos:line="85" pos:column="83"/></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="85">stat_entry<pos:position pos:line="85" pos:column="95"/></name><operator pos:line="85" pos:column="95">-&gt;<pos:position pos:line="85" pos:column="100"/></operator><name pos:line="85" pos:column="97">casedName<pos:position pos:line="85" pos:column="106"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="107"/></argument_list></call><operator pos:line="85" pos:column="107">)<pos:position pos:line="85" pos:column="108"/></operator></expr>)<pos:position pos:line="85" pos:column="109"/></condition><then pos:line="85" pos:column="109"> <block pos:line="85" pos:column="110">{
                        <expr_stmt><expr><name><name pos:line="86" pos:column="25">stat_entry<pos:position pos:line="86" pos:column="35"/></name><operator pos:line="86" pos:column="35">-&gt;<pos:position pos:line="86" pos:column="40"/></operator><name pos:line="86" pos:column="37">casedName<pos:position pos:line="86" pos:column="46"/></name></name> <operator pos:line="86" pos:column="47">=<pos:position pos:line="86" pos:column="48"/></operator> <call><name pos:line="86" pos:column="49">apr_pstrdup<pos:position pos:line="86" pos:column="60"/></name> <argument_list pos:line="86" pos:column="61">(<argument><expr><name pos:line="86" pos:column="62">gPool<pos:position pos:line="86" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="69">*<pos:position pos:line="86" pos:column="70"/></operator><name pos:line="86" pos:column="70">casedName<pos:position pos:line="86" pos:column="79"/></name></expr></argument>)<pos:position pos:line="86" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="81"/></expr_stmt>
                    }<pos:position pos:line="87" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name><name pos:line="88" pos:column="21">stat_entry<pos:position pos:line="88" pos:column="31"/></name><operator pos:line="88" pos:column="31">-&gt;<pos:position pos:line="88" pos:column="36"/></operator><name pos:line="88" pos:column="33">expire<pos:position pos:line="88" pos:column="39"/></name></name> <operator pos:line="88" pos:column="40">=<pos:position pos:line="88" pos:column="41"/></operator> <name pos:line="88" pos:column="42">now<pos:position pos:line="88" pos:column="45"/></name></expr>;<pos:position pos:line="88" pos:column="46"/></expr_stmt>
                }<pos:position pos:line="89" pos:column="18"/></block></else></if>
                <expr_stmt><expr><call><name pos:line="90" pos:column="17">NXThreadBind<pos:position pos:line="90" pos:column="29"/></name> <argument_list pos:line="90" pos:column="30">(<argument><expr><name pos:line="90" pos:column="31">NX_THR_UNBOUND<pos:position pos:line="90" pos:column="45"/></name></expr></argument>)<pos:position pos:line="90" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="91" pos:column="14"/></block></then>
            <else pos:line="92" pos:column="13">else<block pos:line="92" pos:column="17">{
                <expr_stmt><expr><call><name pos:line="93" pos:column="17">NXThreadBind<pos:position pos:line="93" pos:column="29"/></name> <argument_list pos:line="93" pos:column="30">(<argument><expr><name pos:line="93" pos:column="31">NX_THR_UNBOUND<pos:position pos:line="93" pos:column="45"/></name></expr></argument>)<pos:position pos:line="93" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="47"/></expr_stmt>
                <return pos:line="94" pos:column="17">return <expr><name pos:line="94" pos:column="24">ret<pos:position pos:line="94" pos:column="27"/></name></expr>;<pos:position pos:line="94" pos:column="28"/></return>
			}<pos:position pos:line="95" pos:column="26"/></block></else></if>
        }<pos:position pos:line="96" pos:column="10"/></block></then></if>
    }<pos:position pos:line="97" pos:column="6"/></block></then>
    <else pos:line="98" pos:column="5">else <block pos:line="98" pos:column="10">{
        <expr_stmt><expr><name pos:line="99" pos:column="9">ret<pos:position pos:line="99" pos:column="12"/></name> <operator pos:line="99" pos:column="13">=<pos:position pos:line="99" pos:column="14"/></operator> <call><name pos:line="99" pos:column="15">stat<pos:position pos:line="99" pos:column="19"/></name><argument_list pos:line="99" pos:column="19">(<argument><expr><name pos:line="99" pos:column="20">path<pos:position pos:line="99" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="26">buf<pos:position pos:line="99" pos:column="29"/></name></expr></argument>)<pos:position pos:line="99" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="31"/></expr_stmt>
        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">ret<pos:position pos:line="100" pos:column="16"/></name> <operator pos:line="100" pos:column="17">==<pos:position pos:line="100" pos:column="19"/></operator> <literal type="number" pos:line="100" pos:column="20">0<pos:position pos:line="100" pos:column="21"/></literal></expr>)<pos:position pos:line="100" pos:column="22"/></condition><then pos:line="100" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="101" pos:column="13">*<pos:position pos:line="101" pos:column="14"/></operator><name pos:line="101" pos:column="14">casedName<pos:position pos:line="101" pos:column="23"/></name> <operator pos:line="101" pos:column="24">=<pos:position pos:line="101" pos:column="25"/></operator> <call><name pos:line="101" pos:column="26">case_filename<pos:position pos:line="101" pos:column="39"/></name><argument_list pos:line="101" pos:column="39">(<argument><expr><name pos:line="101" pos:column="40">pool<pos:position pos:line="101" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="46">path<pos:position pos:line="101" pos:column="50"/></name></expr></argument>)<pos:position pos:line="101" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="52"/></expr_stmt></block></then></if>
        <return pos:line="102" pos:column="9">return <expr><name pos:line="102" pos:column="16">ret<pos:position pos:line="102" pos:column="19"/></name></expr>;<pos:position pos:line="102" pos:column="20"/></return>
    }<pos:position pos:line="103" pos:column="6"/></block></else></if>
    <return pos:line="104" pos:column="5">return <expr><literal type="number" pos:line="104" pos:column="12">0<pos:position pos:line="104" pos:column="13"/></literal></expr>;<pos:position pos:line="104" pos:column="14"/></return>
}<pos:position pos:line="105" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1486_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_script<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">cmd_parms<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">cmd<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">void<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">m_v<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">method<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">script<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">action_dir_config<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">m<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><operator pos:line="4" pos:column="28">(<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="29">action_dir_config<pos:position pos:line="4" pos:column="46"/></name> <operator pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></operator><operator pos:line="4" pos:column="48">)<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="49">m_v<pos:position pos:line="4" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">methnum<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">cmd<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">pool<pos:position pos:line="6" pos:column="18"/></name></name> <operator pos:line="6" pos:column="19">==<pos:position pos:line="6" pos:column="21"/></operator> <name><name pos:line="6" pos:column="22">cmd<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">temp_pool<pos:position pos:line="6" pos:column="36"/></name></name></expr>)<pos:position pos:line="6" pos:column="37"/></condition><then pos:line="6" pos:column="37"> <block pos:line="6" pos:column="38">{
        <comment type="block" pos:line="7" pos:column="9">/* In .htaccess, we can't globally register new methods. */</comment>
        <expr_stmt><expr><name pos:line="8" pos:column="9">methnum<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <call><name pos:line="8" pos:column="19">ap_method_number_of<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">method<pos:position pos:line="8" pos:column="45"/></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then>
    <else pos:line="10" pos:column="5">else <block pos:line="10" pos:column="10">{
        <comment type="block" pos:line="11" pos:column="9">/* ap_method_register recognizes already registered methods,
         * so don't bother to check its previous existence explicitely.
         */</comment>
        <expr_stmt><expr><name pos:line="14" pos:column="9">methnum<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <call><name pos:line="14" pos:column="19">ap_method_register<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name><name pos:line="14" pos:column="38">cmd<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">-&gt;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="43">pool<pos:position pos:line="14" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="49">method<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></else></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">methnum<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">==<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">M_TRACE<pos:position pos:line="17" pos:column="27"/></name></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28"> <block pos:line="17" pos:column="29">{
        <return pos:line="18" pos:column="9">return <expr><literal type="string" pos:line="18" pos:column="16">"TRACE not allowed for Script"<pos:position pos:line="18" pos:column="46"/></literal></expr>;<pos:position pos:line="18" pos:column="47"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then>
    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><name pos:line="20" pos:column="14">methnum<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">==<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">M_INVALID<pos:position pos:line="20" pos:column="34"/></name></expr>)<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35"> <block pos:line="20" pos:column="36">{
        <return pos:line="21" pos:column="9">return <expr><call><name pos:line="21" pos:column="16">apr_pstrcat<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name><name pos:line="21" pos:column="28">cmd<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">pool<pos:position pos:line="21" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="39">"Could not register method '"<pos:position pos:line="21" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="70">method<pos:position pos:line="21" pos:column="76"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="22" pos:column="28">"' for Script"<pos:position pos:line="22" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="44">NULL<pos:position pos:line="22" pos:column="48"/></name></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><name><name pos:line="25" pos:column="5">m<pos:position pos:line="25" pos:column="6"/></name><operator pos:line="25" pos:column="6">-&gt;<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="8">scripted<pos:position pos:line="25" pos:column="16"/></name><index pos:line="25" pos:column="16">[<expr><name pos:line="25" pos:column="17">methnum<pos:position pos:line="25" pos:column="24"/></name></expr>]<pos:position pos:line="25" pos:column="25"/></index></name> <operator pos:line="25" pos:column="26">=<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="28">script<pos:position pos:line="25" pos:column="34"/></name></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">m<pos:position pos:line="26" pos:column="6"/></name><operator pos:line="26" pos:column="6">-&gt;<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="8">configured<pos:position pos:line="26" pos:column="18"/></name></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <literal type="number" pos:line="26" pos:column="21">1<pos:position pos:line="26" pos:column="22"/></literal></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>

    <return pos:line="28" pos:column="5">return <expr><name pos:line="28" pos:column="12">NULL<pos:position pos:line="28" pos:column="16"/></name></expr>;<pos:position pos:line="28" pos:column="17"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1409_httpd-2.0.58.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">nwssl_pre_connection<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">conn_rec<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">c<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">void<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">csd<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
    
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">apr_table_get<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><name><name pos:line="4" pos:column="23">c<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">-&gt;<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="26">notes<pos:position pos:line="4" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="33">"nwconv-ssl"<pos:position pos:line="4" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="47"/></condition><then pos:line="4" pos:column="47"> <block pos:line="4" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">convert_secure_socket<pos:position pos:line="5" pos:column="30"/></name><argument_list pos:line="5" pos:column="30">(<argument><expr><name pos:line="5" pos:column="31">c<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="34">(<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="35">apr_socket_t<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">*<pos:position pos:line="5" pos:column="48"/></operator><operator pos:line="5" pos:column="48">)<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="49">csd<pos:position pos:line="5" pos:column="52"/></name></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="6" pos:column="6"/></block></then>
    <else pos:line="7" pos:column="5">else <block pos:line="7" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">secsocket_data<pos:position pos:line="8" pos:column="23"/></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">csd_data<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><call><name pos:line="8" pos:column="36">apr_palloc<pos:position pos:line="8" pos:column="46"/></name><argument_list pos:line="8" pos:column="46">(<argument><expr><name><name pos:line="8" pos:column="47">c<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">-&gt;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="50">pool<pos:position pos:line="8" pos:column="54"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="56">sizeof<argument_list pos:line="8" pos:column="62">(<argument><expr><name pos:line="8" pos:column="63">secsocket_data<pos:position pos:line="8" pos:column="77"/></name></expr></argument>)<pos:position pos:line="8" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="80"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="10" pos:column="9">csd_data<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">csd<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <operator pos:line="10" pos:column="25">(<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">apr_socket_t<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">*<pos:position pos:line="10" pos:column="39"/></operator><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">csd<pos:position pos:line="10" pos:column="43"/></name></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">csd_data<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">is_secure<pos:position pos:line="11" pos:column="28"/></name></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <literal type="number" pos:line="11" pos:column="31">0<pos:position pos:line="11" pos:column="32"/></literal></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">ap_set_module_config<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name><name pos:line="12" pos:column="30">c<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">conn_config<pos:position pos:line="12" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="46">&amp;<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="47">nwssl_module<pos:position pos:line="12" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="61">(<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="62">void<pos:position pos:line="12" pos:column="66"/></name><operator pos:line="12" pos:column="66">*<pos:position pos:line="12" pos:column="67"/></operator><operator pos:line="12" pos:column="67">)<pos:position pos:line="12" pos:column="68"/></operator><name pos:line="12" pos:column="68">csd_data<pos:position pos:line="12" pos:column="76"/></name></expr></argument>)<pos:position pos:line="12" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="78"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></else></if>
    
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">OK<pos:position pos:line="15" pos:column="14"/></name></expr>;<pos:position pos:line="15" pos:column="15"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5175.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">prefork_run<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">apr_pool_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">_pconf<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">apr_pool_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">plog<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">server_rec<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">s<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">index<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">remaining_children_to_start<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">ap_log_pid<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">pconf<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">ap_pid_fname<pos:position pos:line="7" pos:column="35"/></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* Initialize cross-process accept lock */</comment>
    <expr_stmt><expr><name pos:line="10" pos:column="5">rv<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <call><name pos:line="10" pos:column="10">ap_proc_mutex_create<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><operator pos:line="10" pos:column="31">&amp;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="32">accept_mutex<pos:position pos:line="10" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="46">NULL<pos:position pos:line="10" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">AP_ACCEPT_MUTEX_TYPE<pos:position pos:line="10" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="74">NULL<pos:position pos:line="10" pos:column="78"/></name></expr></argument>,
                              <argument><expr><name pos:line="11" pos:column="31">s<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">_pconf<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="42">0<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">rv<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">!=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">APR_SUCCESS<pos:position pos:line="12" pos:column="26"/></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27"> <block pos:line="12" pos:column="28">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">mpm_state<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="21">AP_MPMQ_STOPPING<pos:position pos:line="13" pos:column="37"/></name></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">DONE<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">is_graceful<pos:position pos:line="17" pos:column="21"/></name></expr>)<pos:position pos:line="17" pos:column="22"/></condition><then pos:line="17" pos:column="22"> <block pos:line="17" pos:column="23">{
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">ap_run_pre_mpm<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name><name pos:line="18" pos:column="28">s<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">process<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">pool<pos:position pos:line="18" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="46">SB_SHARED<pos:position pos:line="18" pos:column="55"/></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call> <operator pos:line="18" pos:column="57">!=<pos:position pos:line="18" pos:column="59"/></operator> <name pos:line="18" pos:column="60">OK<pos:position pos:line="18" pos:column="62"/></name></expr>)<pos:position pos:line="18" pos:column="63"/></condition><then pos:line="18" pos:column="63"> <block pos:line="18" pos:column="64">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">mpm_state<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">AP_MPMQ_STOPPING<pos:position pos:line="19" pos:column="41"/></name></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
            <return pos:line="20" pos:column="13">return <expr><name pos:line="20" pos:column="20">DONE<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></return>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="22" pos:column="9">/* fix the generation number in the global score; we just got a new,
         * cleared scoreboard
         */</comment>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">ap_scoreboard_image<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">global<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">running_generation<pos:position pos:line="25" pos:column="56"/></name></name> <operator pos:line="25" pos:column="57">=<pos:position pos:line="25" pos:column="58"/></operator> <name pos:line="25" pos:column="59">my_generation<pos:position pos:line="25" pos:column="72"/></name></expr>;<pos:position pos:line="25" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">set_signals<pos:position pos:line="28" pos:column="16"/></name><argument_list pos:line="28" pos:column="16">()<pos:position pos:line="28" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">one_process<pos:position pos:line="30" pos:column="20"/></name></expr>)<pos:position pos:line="30" pos:column="21"/></condition><then pos:line="30" pos:column="21"> <block pos:line="30" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">AP_MONCONTROL<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><literal type="number" pos:line="31" pos:column="23">1<pos:position pos:line="31" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">make_child<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><name pos:line="32" pos:column="20">ap_server_conf<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="36">0<pos:position pos:line="32" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then>
    <else pos:line="34" pos:column="5">else <block pos:line="34" pos:column="10">{
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">ap_daemons_max_free<pos:position pos:line="35" pos:column="28"/></name> <operator pos:line="35" pos:column="29">&lt;<pos:position pos:line="35" pos:column="33"/></operator> <name pos:line="35" pos:column="31">ap_daemons_min_free<pos:position pos:line="35" pos:column="50"/></name> <operator pos:line="35" pos:column="51">+<pos:position pos:line="35" pos:column="52"/></operator> <literal type="number" pos:line="35" pos:column="53">1<pos:position pos:line="35" pos:column="54"/></literal></expr>)<pos:position pos:line="35" pos:column="55"/></condition><then pos:line="35" pos:column="55">  <comment type="block" pos:line="35" pos:column="57">/* Don't thrash... */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="9">ap_daemons_max_free<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <name pos:line="36" pos:column="31">ap_daemons_min_free<pos:position pos:line="36" pos:column="50"/></name> <operator pos:line="36" pos:column="51">+<pos:position pos:line="36" pos:column="52"/></operator> <literal type="number" pos:line="36" pos:column="53">1<pos:position pos:line="36" pos:column="54"/></literal></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="38" pos:column="5">/* If we're doing a graceful_restart then we're going to see a lot
     * of children exiting immediately when we get into the main loop
     * below (because we just sent them AP_SIG_GRACEFUL).  This happens pretty
     * rapidly... and for each one that exits we'll start a new one until
     * we reach at least daemons_min_free.  But we may be permitted to
     * start more than that, so we'll just keep track of how many we're
     * supposed to start up without the 1 second penalty between each fork.
     */</comment>
    <expr_stmt><expr><name pos:line="46" pos:column="5">remaining_children_to_start<pos:position pos:line="46" pos:column="32"/></name> <operator pos:line="46" pos:column="33">=<pos:position pos:line="46" pos:column="34"/></operator> <name pos:line="46" pos:column="35">ap_daemons_to_start<pos:position pos:line="46" pos:column="54"/></name></expr>;<pos:position pos:line="46" pos:column="55"/></expr_stmt>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">remaining_children_to_start<pos:position pos:line="47" pos:column="36"/></name> <operator pos:line="47" pos:column="37">&gt;<pos:position pos:line="47" pos:column="41"/></operator> <name pos:line="47" pos:column="39">ap_daemons_limit<pos:position pos:line="47" pos:column="55"/></name></expr>)<pos:position pos:line="47" pos:column="56"/></condition><then pos:line="47" pos:column="56"> <block pos:line="47" pos:column="57">{
        <expr_stmt><expr><name pos:line="48" pos:column="9">remaining_children_to_start<pos:position pos:line="48" pos:column="36"/></name> <operator pos:line="48" pos:column="37">=<pos:position pos:line="48" pos:column="38"/></operator> <name pos:line="48" pos:column="39">ap_daemons_limit<pos:position pos:line="48" pos:column="55"/></name></expr>;<pos:position pos:line="48" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">!<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">is_graceful<pos:position pos:line="50" pos:column="21"/></name></expr>)<pos:position pos:line="50" pos:column="22"/></condition><then pos:line="50" pos:column="22"> <block pos:line="50" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">startup_children<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><name pos:line="51" pos:column="26">remaining_children_to_start<pos:position pos:line="51" pos:column="53"/></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name pos:line="52" pos:column="9">remaining_children_to_start<pos:position pos:line="52" pos:column="36"/></name> <operator pos:line="52" pos:column="37">=<pos:position pos:line="52" pos:column="38"/></operator> <literal type="number" pos:line="52" pos:column="39">0<pos:position pos:line="52" pos:column="40"/></literal></expr>;<pos:position pos:line="52" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then>
    <else pos:line="54" pos:column="5">else <block pos:line="54" pos:column="10">{
        <comment type="block" pos:line="55" pos:column="9">/* give the system some time to recover before kicking into
         * exponential mode
         */</comment>
        <expr_stmt><expr><name pos:line="58" pos:column="9">hold_off_on_exponential_spawning<pos:position pos:line="58" pos:column="41"/></name> <operator pos:line="58" pos:column="42">=<pos:position pos:line="58" pos:column="43"/></operator> <literal type="number" pos:line="58" pos:column="44">10<pos:position pos:line="58" pos:column="46"/></literal></expr>;<pos:position pos:line="58" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="61" pos:column="5">ap_log_error<pos:position pos:line="61" pos:column="17"/></name><argument_list pos:line="61" pos:column="17">(<argument><expr><name pos:line="61" pos:column="18">APLOG_MARK<pos:position pos:line="61" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="30">APLOG_NOTICE<pos:position pos:line="61" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="44">0<pos:position pos:line="61" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="47">ap_server_conf<pos:position pos:line="61" pos:column="61"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="62" pos:column="17">"%s configured -- resuming normal operations"<pos:position pos:line="62" pos:column="62"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="63" pos:column="17">ap_get_server_description<pos:position pos:line="63" pos:column="42"/></name><argument_list pos:line="63" pos:column="42">()<pos:position pos:line="63" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">ap_log_error<pos:position pos:line="64" pos:column="17"/></name><argument_list pos:line="64" pos:column="17">(<argument><expr><name pos:line="64" pos:column="18">APLOG_MARK<pos:position pos:line="64" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="30">APLOG_INFO<pos:position pos:line="64" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="42">0<pos:position pos:line="64" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="45">ap_server_conf<pos:position pos:line="64" pos:column="59"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="65" pos:column="17">"Server built: %s"<pos:position pos:line="65" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="37">ap_get_server_built<pos:position pos:line="65" pos:column="56"/></name><argument_list pos:line="65" pos:column="56">()<pos:position pos:line="65" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">ap_log_command_line<pos:position pos:line="66" pos:column="24"/></name><argument_list pos:line="66" pos:column="24">(<argument><expr><name pos:line="66" pos:column="25">plog<pos:position pos:line="66" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="31">s<pos:position pos:line="66" pos:column="32"/></name></expr></argument>)<pos:position pos:line="66" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">ap_log_error<pos:position pos:line="67" pos:column="17"/></name><argument_list pos:line="67" pos:column="17">(<argument><expr><name pos:line="67" pos:column="18">APLOG_MARK<pos:position pos:line="67" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="30">APLOG_DEBUG<pos:position pos:line="67" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="43">0<pos:position pos:line="67" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="46">ap_server_conf<pos:position pos:line="67" pos:column="60"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="68" pos:column="17">"Accept mutex: %s (default: %s)"<pos:position pos:line="68" pos:column="49"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="69" pos:column="17">apr_proc_mutex_name<pos:position pos:line="69" pos:column="36"/></name><argument_list pos:line="69" pos:column="36">(<argument><expr><name pos:line="69" pos:column="37">accept_mutex<pos:position pos:line="69" pos:column="49"/></name></expr></argument>)<pos:position pos:line="69" pos:column="50"/></argument_list></call></expr></argument>,
                <argument><expr><call><name pos:line="70" pos:column="17">apr_proc_mutex_defname<pos:position pos:line="70" pos:column="39"/></name><argument_list pos:line="70" pos:column="39">()<pos:position pos:line="70" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="71" pos:column="5">restart_pending<pos:position pos:line="71" pos:column="20"/></name> <operator pos:line="71" pos:column="21">=<pos:position pos:line="71" pos:column="22"/></operator> <name pos:line="71" pos:column="23">shutdown_pending<pos:position pos:line="71" pos:column="39"/></name> <operator pos:line="71" pos:column="40">=<pos:position pos:line="71" pos:column="41"/></operator> <literal type="number" pos:line="71" pos:column="42">0<pos:position pos:line="71" pos:column="43"/></literal></expr>;<pos:position pos:line="71" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><name pos:line="73" pos:column="5">mpm_state<pos:position pos:line="73" pos:column="14"/></name> <operator pos:line="73" pos:column="15">=<pos:position pos:line="73" pos:column="16"/></operator> <name pos:line="73" pos:column="17">AP_MPMQ_RUNNING<pos:position pos:line="73" pos:column="32"/></name></expr>;<pos:position pos:line="73" pos:column="33"/></expr_stmt>

    <while pos:line="75" pos:column="5">while <condition pos:line="75" pos:column="11">(<expr><operator pos:line="75" pos:column="12">!<pos:position pos:line="75" pos:column="13"/></operator><name pos:line="75" pos:column="13">restart_pending<pos:position pos:line="75" pos:column="28"/></name> <operator pos:line="75" pos:column="29">&amp;&amp;<pos:position pos:line="75" pos:column="39"/></operator> <operator pos:line="75" pos:column="32">!<pos:position pos:line="75" pos:column="33"/></operator><name pos:line="75" pos:column="33">shutdown_pending<pos:position pos:line="75" pos:column="49"/></name></expr>)<pos:position pos:line="75" pos:column="50"/></condition> <block pos:line="75" pos:column="51">{
        <decl_stmt><decl><type><name pos:line="76" pos:column="9">int<pos:position pos:line="76" pos:column="12"/></name></type> <name pos:line="76" pos:column="13">child_slot<pos:position pos:line="76" pos:column="23"/></name></decl>;<pos:position pos:line="76" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="77" pos:column="9">apr_exit_why_e<pos:position pos:line="77" pos:column="23"/></name></type> <name pos:line="77" pos:column="24">exitwhy<pos:position pos:line="77" pos:column="31"/></name></decl>;<pos:position pos:line="77" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="78" pos:column="9">int<pos:position pos:line="78" pos:column="12"/></name></type> <name pos:line="78" pos:column="13">status<pos:position pos:line="78" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="78" pos:column="21">processed_status<pos:position pos:line="78" pos:column="37"/></name></decl>;<pos:position pos:line="78" pos:column="38"/></decl_stmt>
        <comment type="block" pos:line="79" pos:column="9">/* this is a memory leak, but I'll fix it later. */</comment>
        <decl_stmt><decl><type><name pos:line="80" pos:column="9">apr_proc_t<pos:position pos:line="80" pos:column="19"/></name></type> <name pos:line="80" pos:column="20">pid<pos:position pos:line="80" pos:column="23"/></name></decl>;<pos:position pos:line="80" pos:column="24"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="82" pos:column="9">ap_wait_or_timeout<pos:position pos:line="82" pos:column="27"/></name><argument_list pos:line="82" pos:column="27">(<argument><expr><operator pos:line="82" pos:column="28">&amp;<pos:position pos:line="82" pos:column="33"/></operator><name pos:line="82" pos:column="29">exitwhy<pos:position pos:line="82" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="38">&amp;<pos:position pos:line="82" pos:column="43"/></operator><name pos:line="82" pos:column="39">status<pos:position pos:line="82" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="47">&amp;<pos:position pos:line="82" pos:column="52"/></operator><name pos:line="82" pos:column="48">pid<pos:position pos:line="82" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="53">pconf<pos:position pos:line="82" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="60">ap_server_conf<pos:position pos:line="82" pos:column="74"/></name></expr></argument>)<pos:position pos:line="82" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="76"/></expr_stmt>

        <comment type="block" pos:line="84" pos:column="9">/* XXX: if it takes longer than 1 second for all our children
         * to start up and get into IDLE state then we may spawn an
         * extra child
         */</comment>
        <if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><name><name pos:line="88" pos:column="13">pid<pos:position pos:line="88" pos:column="16"/></name><operator pos:line="88" pos:column="16">.<pos:position pos:line="88" pos:column="17"/></operator><name pos:line="88" pos:column="17">pid<pos:position pos:line="88" pos:column="20"/></name></name> <operator pos:line="88" pos:column="21">!=<pos:position pos:line="88" pos:column="23"/></operator> <operator pos:line="88" pos:column="24">-<pos:position pos:line="88" pos:column="25"/></operator><literal type="number" pos:line="88" pos:column="25">1<pos:position pos:line="88" pos:column="26"/></literal></expr>)<pos:position pos:line="88" pos:column="27"/></condition><then pos:line="88" pos:column="27"> <block pos:line="88" pos:column="28">{
            <expr_stmt><expr><name pos:line="89" pos:column="13">processed_status<pos:position pos:line="89" pos:column="29"/></name> <operator pos:line="89" pos:column="30">=<pos:position pos:line="89" pos:column="31"/></operator> <call><name pos:line="89" pos:column="32">ap_process_child_status<pos:position pos:line="89" pos:column="55"/></name><argument_list pos:line="89" pos:column="55">(<argument><expr><operator pos:line="89" pos:column="56">&amp;<pos:position pos:line="89" pos:column="61"/></operator><name pos:line="89" pos:column="57">pid<pos:position pos:line="89" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="62">exitwhy<pos:position pos:line="89" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="71">status<pos:position pos:line="89" pos:column="77"/></name></expr></argument>)<pos:position pos:line="89" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="79"/></expr_stmt>
            <if pos:line="90" pos:column="13">if <condition pos:line="90" pos:column="16">(<expr><name pos:line="90" pos:column="17">processed_status<pos:position pos:line="90" pos:column="33"/></name> <operator pos:line="90" pos:column="34">==<pos:position pos:line="90" pos:column="36"/></operator> <name pos:line="90" pos:column="37">APEXIT_CHILDFATAL<pos:position pos:line="90" pos:column="54"/></name></expr>)<pos:position pos:line="90" pos:column="55"/></condition><then pos:line="90" pos:column="55"> <block pos:line="90" pos:column="56">{
                <expr_stmt><expr><name pos:line="91" pos:column="17">mpm_state<pos:position pos:line="91" pos:column="26"/></name> <operator pos:line="91" pos:column="27">=<pos:position pos:line="91" pos:column="28"/></operator> <name pos:line="91" pos:column="29">AP_MPMQ_STOPPING<pos:position pos:line="91" pos:column="45"/></name></expr>;<pos:position pos:line="91" pos:column="46"/></expr_stmt>
                <return pos:line="92" pos:column="17">return <expr><name pos:line="92" pos:column="24">DONE<pos:position pos:line="92" pos:column="28"/></name></expr>;<pos:position pos:line="92" pos:column="29"/></return>
            }<pos:position pos:line="93" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="95" pos:column="13">/* non-fatal death... note that it's gone in the scoreboard. */</comment>
            <expr_stmt><expr><name pos:line="96" pos:column="13">child_slot<pos:position pos:line="96" pos:column="23"/></name> <operator pos:line="96" pos:column="24">=<pos:position pos:line="96" pos:column="25"/></operator> <call><name pos:line="96" pos:column="26">ap_find_child_by_pid<pos:position pos:line="96" pos:column="46"/></name><argument_list pos:line="96" pos:column="46">(<argument><expr><operator pos:line="96" pos:column="47">&amp;<pos:position pos:line="96" pos:column="52"/></operator><name pos:line="96" pos:column="48">pid<pos:position pos:line="96" pos:column="51"/></name></expr></argument>)<pos:position pos:line="96" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="53"/></expr_stmt>
            <if pos:line="97" pos:column="13">if <condition pos:line="97" pos:column="16">(<expr><name pos:line="97" pos:column="17">child_slot<pos:position pos:line="97" pos:column="27"/></name> <operator pos:line="97" pos:column="28">&gt;=<pos:position pos:line="97" pos:column="33"/></operator> <literal type="number" pos:line="97" pos:column="31">0<pos:position pos:line="97" pos:column="32"/></literal></expr>)<pos:position pos:line="97" pos:column="33"/></condition><then pos:line="97" pos:column="33"> <block pos:line="97" pos:column="34">{
                <expr_stmt><expr><operator pos:line="98" pos:column="17">(<pos:position pos:line="98" pos:column="18"/></operator><name pos:line="98" pos:column="18">void<pos:position pos:line="98" pos:column="22"/></name><operator pos:line="98" pos:column="22">)<pos:position pos:line="98" pos:column="23"/></operator> <call><name pos:line="98" pos:column="24">ap_update_child_status_from_indexes<pos:position pos:line="98" pos:column="59"/></name><argument_list pos:line="98" pos:column="59">(<argument><expr><name pos:line="98" pos:column="60">child_slot<pos:position pos:line="98" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="98" pos:column="72">0<pos:position pos:line="98" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="75">SERVER_DEAD<pos:position pos:line="98" pos:column="86"/></name></expr></argument>,
                                                           <argument><expr><operator pos:line="99" pos:column="60">(<pos:position pos:line="99" pos:column="61"/></operator><name pos:line="99" pos:column="61">request_rec<pos:position pos:line="99" pos:column="72"/></name> <operator pos:line="99" pos:column="73">*<pos:position pos:line="99" pos:column="74"/></operator><operator pos:line="99" pos:column="74">)<pos:position pos:line="99" pos:column="75"/></operator> <name pos:line="99" pos:column="76">NULL<pos:position pos:line="99" pos:column="80"/></name></expr></argument>)<pos:position pos:line="99" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="82"/></expr_stmt>
                <if pos:line="100" pos:column="17">if <condition pos:line="100" pos:column="20">(<expr><name pos:line="100" pos:column="21">processed_status<pos:position pos:line="100" pos:column="37"/></name> <operator pos:line="100" pos:column="38">==<pos:position pos:line="100" pos:column="40"/></operator> <name pos:line="100" pos:column="41">APEXIT_CHILDSICK<pos:position pos:line="100" pos:column="57"/></name></expr>)<pos:position pos:line="100" pos:column="58"/></condition><then pos:line="100" pos:column="58"> <block pos:line="100" pos:column="59">{
                    <comment type="block" pos:line="101" pos:column="21">/* child detected a resource shortage (E[NM]FILE, ENOBUFS, etc)
                     * cut the fork rate to the minimum
                     */</comment>
                    <expr_stmt><expr><name pos:line="104" pos:column="21">idle_spawn_rate<pos:position pos:line="104" pos:column="36"/></name> <operator pos:line="104" pos:column="37">=<pos:position pos:line="104" pos:column="38"/></operator> <literal type="number" pos:line="104" pos:column="39">1<pos:position pos:line="104" pos:column="40"/></literal></expr>;<pos:position pos:line="104" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="105" pos:column="18"/></block></then>
                <elseif pos:line="106" pos:column="17">else <if pos:line="106" pos:column="22">if <condition pos:line="106" pos:column="25">(<expr><name pos:line="106" pos:column="26">remaining_children_to_start<pos:position pos:line="106" pos:column="53"/></name>
                    <operator pos:line="107" pos:column="21">&amp;&amp;<pos:position pos:line="107" pos:column="31"/></operator> <name pos:line="107" pos:column="24">child_slot<pos:position pos:line="107" pos:column="34"/></name> <operator pos:line="107" pos:column="35">&lt;<pos:position pos:line="107" pos:column="39"/></operator> <name pos:line="107" pos:column="37">ap_daemons_limit<pos:position pos:line="107" pos:column="53"/></name></expr>)<pos:position pos:line="107" pos:column="54"/></condition><then pos:line="107" pos:column="54"> <block pos:line="107" pos:column="55">{
                    <comment type="block" pos:line="108" pos:column="21">/* we're still doing a 1-for-1 replacement of dead
                     * children with new children
                     */</comment>
                    <expr_stmt><expr><call><name pos:line="111" pos:column="21">make_child<pos:position pos:line="111" pos:column="31"/></name><argument_list pos:line="111" pos:column="31">(<argument><expr><name pos:line="111" pos:column="32">ap_server_conf<pos:position pos:line="111" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="48">child_slot<pos:position pos:line="111" pos:column="58"/></name></expr></argument>)<pos:position pos:line="111" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="60"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="112" pos:column="21">--<pos:position pos:line="112" pos:column="23"/></operator><name pos:line="112" pos:column="23">remaining_children_to_start<pos:position pos:line="112" pos:column="50"/></name></expr>;<pos:position pos:line="112" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="113" pos:column="18"/></block></then></if></elseif></if>
<cpp:if pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">if<pos:position pos:line="114" pos:column="4"/></cpp:directive> <expr><name pos:line="114" pos:column="5">APR_HAS_OTHER_CHILD<pos:position pos:line="114" pos:column="24"/></name></expr></cpp:if>
            }<pos:position pos:line="115" pos:column="14"/></block></then>
            <elseif pos:line="116" pos:column="13">else <if pos:line="116" pos:column="18">if <condition pos:line="116" pos:column="21">(<expr><call><name pos:line="116" pos:column="22">apr_proc_other_child_alert<pos:position pos:line="116" pos:column="48"/></name><argument_list pos:line="116" pos:column="48">(<argument><expr><operator pos:line="116" pos:column="49">&amp;<pos:position pos:line="116" pos:column="54"/></operator><name pos:line="116" pos:column="50">pid<pos:position pos:line="116" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="55">APR_OC_REASON_DEATH<pos:position pos:line="116" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="76">status<pos:position pos:line="116" pos:column="82"/></name></expr></argument>)<pos:position pos:line="116" pos:column="83"/></argument_list></call> <operator pos:line="116" pos:column="84">==<pos:position pos:line="116" pos:column="86"/></operator> <name pos:line="116" pos:column="87">APR_SUCCESS<pos:position pos:line="116" pos:column="98"/></name></expr>)<pos:position pos:line="116" pos:column="99"/></condition><then pos:line="116" pos:column="99"> <block pos:line="116" pos:column="100">{
                <comment type="block" pos:line="117" pos:column="17">/* handled */</comment>
<cpp:endif pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">endif<pos:position pos:line="118" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="119" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="120" pos:column="13">else <if pos:line="120" pos:column="18">if <condition pos:line="120" pos:column="21">(<expr><name pos:line="120" pos:column="22">is_graceful<pos:position pos:line="120" pos:column="33"/></name></expr>)<pos:position pos:line="120" pos:column="34"/></condition><then pos:line="120" pos:column="34"> <block pos:line="120" pos:column="35">{
                <comment type="block" pos:line="121" pos:column="17">/* Great, we've probably just lost a slot in the
                 * scoreboard.  Somehow we don't know about this
                 * child.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="125" pos:column="17">ap_log_error<pos:position pos:line="125" pos:column="29"/></name><argument_list pos:line="125" pos:column="29">(<argument><expr><name pos:line="125" pos:column="30">APLOG_MARK<pos:position pos:line="125" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="42">APLOG_WARNING<pos:position pos:line="125" pos:column="55"/></name></expr></argument>,
                            <argument><expr><literal type="number" pos:line="126" pos:column="29">0<pos:position pos:line="126" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="126" pos:column="32">ap_server_conf<pos:position pos:line="126" pos:column="46"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="127" pos:column="29">"long lost child came home! (pid %ld)"<pos:position pos:line="127" pos:column="67"/></literal></expr></argument>, <argument><expr><operator pos:line="127" pos:column="69">(<pos:position pos:line="127" pos:column="70"/></operator><name pos:line="127" pos:column="70">long<pos:position pos:line="127" pos:column="74"/></name><operator pos:line="127" pos:column="74">)<pos:position pos:line="127" pos:column="75"/></operator><name><name pos:line="127" pos:column="75">pid<pos:position pos:line="127" pos:column="78"/></name><operator pos:line="127" pos:column="78">.<pos:position pos:line="127" pos:column="79"/></operator><name pos:line="127" pos:column="79">pid<pos:position pos:line="127" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="84"/></expr_stmt>
            }<pos:position pos:line="128" pos:column="14"/></block></then></if></elseif></if>
            <comment type="block" pos:line="129" pos:column="13">/* Don't perform idle maintenance when a child dies,
             * only do it when there's a timeout.  Remember only a
             * finite number of children can die, and it's pretty
             * pathological for a lot to die suddenly.
             */</comment>
            <continue pos:line="134" pos:column="13">continue;<pos:position pos:line="134" pos:column="22"/></continue>
        }<pos:position pos:line="135" pos:column="10"/></block></then>
        <elseif pos:line="136" pos:column="9">else <if pos:line="136" pos:column="14">if <condition pos:line="136" pos:column="17">(<expr><name pos:line="136" pos:column="18">remaining_children_to_start<pos:position pos:line="136" pos:column="45"/></name></expr>)<pos:position pos:line="136" pos:column="46"/></condition><then pos:line="136" pos:column="46"> <block pos:line="136" pos:column="47">{
            <comment type="block" pos:line="137" pos:column="13">/* we hit a 1 second timeout in which none of the previous
             * generation of children needed to be reaped... so assume
             * they're all done, and pick up the slack if any is left.
             */</comment>
            <expr_stmt><expr><call><name pos:line="141" pos:column="13">startup_children<pos:position pos:line="141" pos:column="29"/></name><argument_list pos:line="141" pos:column="29">(<argument><expr><name pos:line="141" pos:column="30">remaining_children_to_start<pos:position pos:line="141" pos:column="57"/></name></expr></argument>)<pos:position pos:line="141" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name pos:line="142" pos:column="13">remaining_children_to_start<pos:position pos:line="142" pos:column="40"/></name> <operator pos:line="142" pos:column="41">=<pos:position pos:line="142" pos:column="42"/></operator> <literal type="number" pos:line="142" pos:column="43">0<pos:position pos:line="142" pos:column="44"/></literal></expr>;<pos:position pos:line="142" pos:column="45"/></expr_stmt>
            <comment type="block" pos:line="143" pos:column="13">/* In any event we really shouldn't do the code below because
             * few of the servers we just started are in the IDLE state
             * yet, so we'd mistakenly create an extra server.
             */</comment>
            <continue pos:line="147" pos:column="13">continue;<pos:position pos:line="147" pos:column="22"/></continue>
        }<pos:position pos:line="148" pos:column="10"/></block></then></if></elseif></if>

        <expr_stmt><expr><call><name pos:line="150" pos:column="9">perform_idle_server_maintenance<pos:position pos:line="150" pos:column="40"/></name><argument_list pos:line="150" pos:column="40">(<argument><expr><name pos:line="150" pos:column="41">pconf<pos:position pos:line="150" pos:column="46"/></name></expr></argument>)<pos:position pos:line="150" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="151" pos:column="6"/></block></while>
    }<pos:position pos:line="152" pos:column="6"/></block></else></if> <comment type="block" pos:line="152" pos:column="7">/* one_process */</comment>

    <expr_stmt><expr><name pos:line="154" pos:column="5">mpm_state<pos:position pos:line="154" pos:column="14"/></name> <operator pos:line="154" pos:column="15">=<pos:position pos:line="154" pos:column="16"/></operator> <name pos:line="154" pos:column="17">AP_MPMQ_STOPPING<pos:position pos:line="154" pos:column="33"/></name></expr>;<pos:position pos:line="154" pos:column="34"/></expr_stmt>

    <if pos:line="156" pos:column="5">if <condition pos:line="156" pos:column="8">(<expr><name pos:line="156" pos:column="9">shutdown_pending<pos:position pos:line="156" pos:column="25"/></name> <operator pos:line="156" pos:column="26">&amp;&amp;<pos:position pos:line="156" pos:column="36"/></operator> <operator pos:line="156" pos:column="29">!<pos:position pos:line="156" pos:column="30"/></operator><name pos:line="156" pos:column="30">is_graceful<pos:position pos:line="156" pos:column="41"/></name></expr>)<pos:position pos:line="156" pos:column="42"/></condition><then pos:line="156" pos:column="42"> <block pos:line="156" pos:column="43">{
        <comment type="block" pos:line="157" pos:column="9">/* Time to shut down:
         * Kill child processes, tell them to call child_exit, etc...
         */</comment>
        <if pos:line="160" pos:column="9">if <condition pos:line="160" pos:column="12">(<expr><call><name pos:line="160" pos:column="13">ap_unixd_killpg<pos:position pos:line="160" pos:column="28"/></name><argument_list pos:line="160" pos:column="28">(<argument><expr><call><name pos:line="160" pos:column="29">getpgrp<pos:position pos:line="160" pos:column="36"/></name><argument_list pos:line="160" pos:column="36">()<pos:position pos:line="160" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="160" pos:column="40">SIGTERM<pos:position pos:line="160" pos:column="47"/></name></expr></argument>)<pos:position pos:line="160" pos:column="48"/></argument_list></call> <operator pos:line="160" pos:column="49">&lt;<pos:position pos:line="160" pos:column="53"/></operator> <literal type="number" pos:line="160" pos:column="51">0<pos:position pos:line="160" pos:column="52"/></literal></expr>)<pos:position pos:line="160" pos:column="53"/></condition><then pos:line="160" pos:column="53"> <block pos:line="160" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="161" pos:column="13">ap_log_error<pos:position pos:line="161" pos:column="25"/></name><argument_list pos:line="161" pos:column="25">(<argument><expr><name pos:line="161" pos:column="26">APLOG_MARK<pos:position pos:line="161" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="38">APLOG_WARNING<pos:position pos:line="161" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="53">errno<pos:position pos:line="161" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="60">ap_server_conf<pos:position pos:line="161" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="76">"killpg SIGTERM"<pos:position pos:line="161" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="94"/></expr_stmt>
        }<pos:position pos:line="162" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="163" pos:column="9">ap_reclaim_child_processes<pos:position pos:line="163" pos:column="35"/></name><argument_list pos:line="163" pos:column="35">(<argument><expr><literal type="number" pos:line="163" pos:column="36">1<pos:position pos:line="163" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="39"/></expr_stmt>          <comment type="block" pos:line="163" pos:column="49">/* Start with SIGTERM */</comment>

        <comment type="block" pos:line="165" pos:column="9">/* cleanup pid file on normal shutdown */</comment>
        <block pos:line="166" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="167" pos:column="13">const<pos:position pos:line="167" pos:column="18"/></specifier> <name pos:line="167" pos:column="19">char<pos:position pos:line="167" pos:column="23"/></name> <modifier pos:line="167" pos:column="24">*<pos:position pos:line="167" pos:column="25"/></modifier></type><name pos:line="167" pos:column="25">pidfile<pos:position pos:line="167" pos:column="32"/></name> <init pos:line="167" pos:column="33">= <expr><name pos:line="167" pos:column="35">NULL<pos:position pos:line="167" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="167" pos:column="40"/></decl_stmt>
            <expr_stmt><expr><name pos:line="168" pos:column="13">pidfile<pos:position pos:line="168" pos:column="20"/></name> <operator pos:line="168" pos:column="21">=<pos:position pos:line="168" pos:column="22"/></operator> <call><name pos:line="168" pos:column="23">ap_server_root_relative<pos:position pos:line="168" pos:column="46"/></name> <argument_list pos:line="168" pos:column="47">(<argument><expr><name pos:line="168" pos:column="48">pconf<pos:position pos:line="168" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="55">ap_pid_fname<pos:position pos:line="168" pos:column="67"/></name></expr></argument>)<pos:position pos:line="168" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="69"/></expr_stmt>
            <if pos:line="169" pos:column="13">if <condition pos:line="169" pos:column="16">( <expr><name pos:line="169" pos:column="18">pidfile<pos:position pos:line="169" pos:column="25"/></name> <operator pos:line="169" pos:column="26">!=<pos:position pos:line="169" pos:column="28"/></operator> <name pos:line="169" pos:column="29">NULL<pos:position pos:line="169" pos:column="33"/></name> <operator pos:line="169" pos:column="34">&amp;&amp;<pos:position pos:line="169" pos:column="44"/></operator> <call><name pos:line="169" pos:column="37">unlink<pos:position pos:line="169" pos:column="43"/></name><argument_list pos:line="169" pos:column="43">(<argument><expr><name pos:line="169" pos:column="44">pidfile<pos:position pos:line="169" pos:column="51"/></name></expr></argument>)<pos:position pos:line="169" pos:column="52"/></argument_list></call> <operator pos:line="169" pos:column="53">==<pos:position pos:line="169" pos:column="55"/></operator> <literal type="number" pos:line="169" pos:column="56">0<pos:position pos:line="169" pos:column="57"/></literal></expr>)<pos:position pos:line="169" pos:column="58"/></condition><then pos:line="169" pos:column="58">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="170" pos:column="17">ap_log_error<pos:position pos:line="170" pos:column="29"/></name><argument_list pos:line="170" pos:column="29">(<argument><expr><name pos:line="170" pos:column="30">APLOG_MARK<pos:position pos:line="170" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="42">APLOG_INFO<pos:position pos:line="170" pos:column="52"/></name></expr></argument>,
                                <argument><expr><literal type="number" pos:line="171" pos:column="33">0<pos:position pos:line="171" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="171" pos:column="36">ap_server_conf<pos:position pos:line="171" pos:column="50"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="172" pos:column="33">"removed PID file %s (pid=%ld)"<pos:position pos:line="172" pos:column="64"/></literal></expr></argument>,
                                <argument><expr><name pos:line="173" pos:column="33">pidfile<pos:position pos:line="173" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="173" pos:column="42">(<pos:position pos:line="173" pos:column="43"/></operator><name pos:line="173" pos:column="43">long<pos:position pos:line="173" pos:column="47"/></name><operator pos:line="173" pos:column="47">)<pos:position pos:line="173" pos:column="48"/></operator><call><name pos:line="173" pos:column="48">getpid<pos:position pos:line="173" pos:column="54"/></name><argument_list pos:line="173" pos:column="54">()<pos:position pos:line="173" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="173" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="58"/></expr_stmt></block></then></if>
        }<pos:position pos:line="174" pos:column="10"/></block>

        <expr_stmt><expr><call><name pos:line="176" pos:column="9">ap_log_error<pos:position pos:line="176" pos:column="21"/></name><argument_list pos:line="176" pos:column="21">(<argument><expr><name pos:line="176" pos:column="22">APLOG_MARK<pos:position pos:line="176" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="34">APLOG_NOTICE<pos:position pos:line="176" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="176" pos:column="48">0<pos:position pos:line="176" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="176" pos:column="51">ap_server_conf<pos:position pos:line="176" pos:column="65"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="177" pos:column="21">"caught SIGTERM, shutting down"<pos:position pos:line="177" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="54"/></expr_stmt>

        <return pos:line="179" pos:column="9">return <expr><name pos:line="179" pos:column="16">DONE<pos:position pos:line="179" pos:column="20"/></name></expr>;<pos:position pos:line="179" pos:column="21"/></return>
    }<pos:position pos:line="180" pos:column="6"/></block></then> <elseif pos:line="180" pos:column="7">else <if pos:line="180" pos:column="12">if <condition pos:line="180" pos:column="15">(<expr><name pos:line="180" pos:column="16">shutdown_pending<pos:position pos:line="180" pos:column="32"/></name></expr>)<pos:position pos:line="180" pos:column="33"/></condition><then pos:line="180" pos:column="33"> <block pos:line="180" pos:column="34">{
        <comment type="block" pos:line="181" pos:column="9">/* Time to perform a graceful shut down:
         * Reap the inactive children, and ask the active ones
         * to close their listeners, then wait until they are
         * all done to exit.
         */</comment>
        <decl_stmt><decl><type><name pos:line="186" pos:column="9">int<pos:position pos:line="186" pos:column="12"/></name></type> <name pos:line="186" pos:column="13">active_children<pos:position pos:line="186" pos:column="28"/></name></decl>;<pos:position pos:line="186" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="187" pos:column="9">apr_time_t<pos:position pos:line="187" pos:column="19"/></name></type> <name pos:line="187" pos:column="20">cutoff<pos:position pos:line="187" pos:column="26"/></name> <init pos:line="187" pos:column="27">= <expr><literal type="number" pos:line="187" pos:column="29">0<pos:position pos:line="187" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="187" pos:column="31"/></decl_stmt>

        <comment type="block" pos:line="189" pos:column="9">/* Stop listening */</comment>
        <expr_stmt><expr><call><name pos:line="190" pos:column="9">ap_close_listeners<pos:position pos:line="190" pos:column="27"/></name><argument_list pos:line="190" pos:column="27">()<pos:position pos:line="190" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="30"/></expr_stmt>

        <comment type="block" pos:line="192" pos:column="9">/* kill off the idle ones */</comment>
        <expr_stmt><expr><call><name pos:line="193" pos:column="9">ap_mpm_pod_killpg<pos:position pos:line="193" pos:column="26"/></name><argument_list pos:line="193" pos:column="26">(<argument><expr><name pos:line="193" pos:column="27">pod<pos:position pos:line="193" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="32">max_daemons_limit<pos:position pos:line="193" pos:column="49"/></name></expr></argument>)<pos:position pos:line="193" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="51"/></expr_stmt>

        <comment type="block" pos:line="195" pos:column="9">/* Send SIGUSR1 to the active children */</comment>
        <expr_stmt><expr><name pos:line="196" pos:column="9">active_children<pos:position pos:line="196" pos:column="24"/></name> <operator pos:line="196" pos:column="25">=<pos:position pos:line="196" pos:column="26"/></operator> <literal type="number" pos:line="196" pos:column="27">0<pos:position pos:line="196" pos:column="28"/></literal></expr>;<pos:position pos:line="196" pos:column="29"/></expr_stmt>
        <for pos:line="197" pos:column="9">for <control pos:line="197" pos:column="13">(<init><expr><name pos:line="197" pos:column="14">index<pos:position pos:line="197" pos:column="19"/></name> <operator pos:line="197" pos:column="20">=<pos:position pos:line="197" pos:column="21"/></operator> <literal type="number" pos:line="197" pos:column="22">0<pos:position pos:line="197" pos:column="23"/></literal></expr>;<pos:position pos:line="197" pos:column="24"/></init> <condition><expr><name pos:line="197" pos:column="25">index<pos:position pos:line="197" pos:column="30"/></name> <operator pos:line="197" pos:column="31">&lt;<pos:position pos:line="197" pos:column="35"/></operator> <name pos:line="197" pos:column="33">ap_daemons_limit<pos:position pos:line="197" pos:column="49"/></name></expr>;<pos:position pos:line="197" pos:column="50"/></condition> <incr><expr><operator pos:line="197" pos:column="51">++<pos:position pos:line="197" pos:column="53"/></operator><name pos:line="197" pos:column="53">index<pos:position pos:line="197" pos:column="58"/></name></expr></incr>)<pos:position pos:line="197" pos:column="59"/></control> <block pos:line="197" pos:column="60">{
            <if pos:line="198" pos:column="13">if <condition pos:line="198" pos:column="16">(<expr><name><name pos:line="198" pos:column="17">ap_scoreboard_image<pos:position pos:line="198" pos:column="36"/></name><operator pos:line="198" pos:column="36">-&gt;<pos:position pos:line="198" pos:column="41"/></operator><name pos:line="198" pos:column="38">servers<pos:position pos:line="198" pos:column="45"/></name><index pos:line="198" pos:column="45">[<expr><name pos:line="198" pos:column="46">index<pos:position pos:line="198" pos:column="51"/></name></expr>]<pos:position pos:line="198" pos:column="52"/></index><index pos:line="198" pos:column="52">[<expr><literal type="number" pos:line="198" pos:column="53">0<pos:position pos:line="198" pos:column="54"/></literal></expr>]<pos:position pos:line="198" pos:column="55"/></index></name><operator pos:line="198" pos:column="55">.<pos:position pos:line="198" pos:column="56"/></operator><name pos:line="198" pos:column="56">status<pos:position pos:line="198" pos:column="62"/></name> <operator pos:line="198" pos:column="63">!=<pos:position pos:line="198" pos:column="65"/></operator> <name pos:line="198" pos:column="66">SERVER_DEAD<pos:position pos:line="198" pos:column="77"/></name></expr>)<pos:position pos:line="198" pos:column="78"/></condition><then pos:line="198" pos:column="78"> <block pos:line="198" pos:column="79">{
                <comment type="block" pos:line="199" pos:column="17">/* Ask each child to close its listeners. */</comment>
                <expr_stmt><expr><call><name pos:line="200" pos:column="17">ap_mpm_safe_kill<pos:position pos:line="200" pos:column="33"/></name><argument_list pos:line="200" pos:column="33">(<argument><expr><call><name pos:line="200" pos:column="34">MPM_CHILD_PID<pos:position pos:line="200" pos:column="47"/></name><argument_list pos:line="200" pos:column="47">(<argument><expr><name pos:line="200" pos:column="48">index<pos:position pos:line="200" pos:column="53"/></name></expr></argument>)<pos:position pos:line="200" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="200" pos:column="56">AP_SIG_GRACEFUL<pos:position pos:line="200" pos:column="71"/></name></expr></argument>)<pos:position pos:line="200" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="73"/></expr_stmt>
                <expr_stmt><expr><name pos:line="201" pos:column="17">active_children<pos:position pos:line="201" pos:column="32"/></name><operator pos:line="201" pos:column="32">++<pos:position pos:line="201" pos:column="34"/></operator></expr>;<pos:position pos:line="201" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="202" pos:column="14"/></block></then></if>
        }<pos:position pos:line="203" pos:column="10"/></block></for>

        <comment type="block" pos:line="205" pos:column="9">/* Allow each child which actually finished to exit */</comment>
        <expr_stmt><expr><call><name pos:line="206" pos:column="9">ap_relieve_child_processes<pos:position pos:line="206" pos:column="35"/></name><argument_list pos:line="206" pos:column="35">()<pos:position pos:line="206" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="38"/></expr_stmt>

        <comment type="block" pos:line="208" pos:column="9">/* cleanup pid file */</comment>
        <block pos:line="209" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="210" pos:column="13">const<pos:position pos:line="210" pos:column="18"/></specifier> <name pos:line="210" pos:column="19">char<pos:position pos:line="210" pos:column="23"/></name> <modifier pos:line="210" pos:column="24">*<pos:position pos:line="210" pos:column="25"/></modifier></type><name pos:line="210" pos:column="25">pidfile<pos:position pos:line="210" pos:column="32"/></name> <init pos:line="210" pos:column="33">= <expr><name pos:line="210" pos:column="35">NULL<pos:position pos:line="210" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="210" pos:column="40"/></decl_stmt>
            <expr_stmt><expr><name pos:line="211" pos:column="13">pidfile<pos:position pos:line="211" pos:column="20"/></name> <operator pos:line="211" pos:column="21">=<pos:position pos:line="211" pos:column="22"/></operator> <call><name pos:line="211" pos:column="23">ap_server_root_relative<pos:position pos:line="211" pos:column="46"/></name> <argument_list pos:line="211" pos:column="47">(<argument><expr><name pos:line="211" pos:column="48">pconf<pos:position pos:line="211" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="211" pos:column="55">ap_pid_fname<pos:position pos:line="211" pos:column="67"/></name></expr></argument>)<pos:position pos:line="211" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="69"/></expr_stmt>
            <if pos:line="212" pos:column="13">if <condition pos:line="212" pos:column="16">( <expr><name pos:line="212" pos:column="18">pidfile<pos:position pos:line="212" pos:column="25"/></name> <operator pos:line="212" pos:column="26">!=<pos:position pos:line="212" pos:column="28"/></operator> <name pos:line="212" pos:column="29">NULL<pos:position pos:line="212" pos:column="33"/></name> <operator pos:line="212" pos:column="34">&amp;&amp;<pos:position pos:line="212" pos:column="44"/></operator> <call><name pos:line="212" pos:column="37">unlink<pos:position pos:line="212" pos:column="43"/></name><argument_list pos:line="212" pos:column="43">(<argument><expr><name pos:line="212" pos:column="44">pidfile<pos:position pos:line="212" pos:column="51"/></name></expr></argument>)<pos:position pos:line="212" pos:column="52"/></argument_list></call> <operator pos:line="212" pos:column="53">==<pos:position pos:line="212" pos:column="55"/></operator> <literal type="number" pos:line="212" pos:column="56">0<pos:position pos:line="212" pos:column="57"/></literal></expr>)<pos:position pos:line="212" pos:column="58"/></condition><then pos:line="212" pos:column="58">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="213" pos:column="17">ap_log_error<pos:position pos:line="213" pos:column="29"/></name><argument_list pos:line="213" pos:column="29">(<argument><expr><name pos:line="213" pos:column="30">APLOG_MARK<pos:position pos:line="213" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="42">APLOG_INFO<pos:position pos:line="213" pos:column="52"/></name></expr></argument>,
                                <argument><expr><literal type="number" pos:line="214" pos:column="33">0<pos:position pos:line="214" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="214" pos:column="36">ap_server_conf<pos:position pos:line="214" pos:column="50"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="215" pos:column="33">"removed PID file %s (pid=%ld)"<pos:position pos:line="215" pos:column="64"/></literal></expr></argument>,
                                <argument><expr><name pos:line="216" pos:column="33">pidfile<pos:position pos:line="216" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="216" pos:column="42">(<pos:position pos:line="216" pos:column="43"/></operator><name pos:line="216" pos:column="43">long<pos:position pos:line="216" pos:column="47"/></name><operator pos:line="216" pos:column="47">)<pos:position pos:line="216" pos:column="48"/></operator><call><name pos:line="216" pos:column="48">getpid<pos:position pos:line="216" pos:column="54"/></name><argument_list pos:line="216" pos:column="54">()<pos:position pos:line="216" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="216" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="58"/></expr_stmt></block></then></if>
        }<pos:position pos:line="217" pos:column="10"/></block>

        <expr_stmt><expr><call><name pos:line="219" pos:column="9">ap_log_error<pos:position pos:line="219" pos:column="21"/></name><argument_list pos:line="219" pos:column="21">(<argument><expr><name pos:line="219" pos:column="22">APLOG_MARK<pos:position pos:line="219" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="34">APLOG_NOTICE<pos:position pos:line="219" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="219" pos:column="48">0<pos:position pos:line="219" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="219" pos:column="51">ap_server_conf<pos:position pos:line="219" pos:column="65"/></name></expr></argument>,
           <argument><expr><literal type="string" pos:line="220" pos:column="12">"caught "<pos:position pos:line="220" pos:column="21"/></literal> <name pos:line="220" pos:column="22">AP_SIG_GRACEFUL_STOP_STRING<pos:position pos:line="220" pos:column="49"/></name> <literal type="string" pos:line="220" pos:column="50">", shutting down gracefully"<pos:position pos:line="220" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="220" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="80"/></expr_stmt>

        <if pos:line="222" pos:column="9">if <condition pos:line="222" pos:column="12">(<expr><name pos:line="222" pos:column="13">ap_graceful_shutdown_timeout<pos:position pos:line="222" pos:column="41"/></name></expr>)<pos:position pos:line="222" pos:column="42"/></condition><then pos:line="222" pos:column="42"> <block pos:line="222" pos:column="43">{
            <expr_stmt><expr><name pos:line="223" pos:column="13">cutoff<pos:position pos:line="223" pos:column="19"/></name> <operator pos:line="223" pos:column="20">=<pos:position pos:line="223" pos:column="21"/></operator> <call><name pos:line="223" pos:column="22">apr_time_now<pos:position pos:line="223" pos:column="34"/></name><argument_list pos:line="223" pos:column="34">()<pos:position pos:line="223" pos:column="36"/></argument_list></call> <operator pos:line="223" pos:column="37">+<pos:position pos:line="223" pos:column="38"/></operator>
                     <call><name pos:line="224" pos:column="22">apr_time_from_sec<pos:position pos:line="224" pos:column="39"/></name><argument_list pos:line="224" pos:column="39">(<argument><expr><name pos:line="224" pos:column="40">ap_graceful_shutdown_timeout<pos:position pos:line="224" pos:column="68"/></name></expr></argument>)<pos:position pos:line="224" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="225" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="227" pos:column="9">/* Don't really exit until each child has finished */</comment>
        <expr_stmt><expr><name pos:line="228" pos:column="9">shutdown_pending<pos:position pos:line="228" pos:column="25"/></name> <operator pos:line="228" pos:column="26">=<pos:position pos:line="228" pos:column="27"/></operator> <literal type="number" pos:line="228" pos:column="28">0<pos:position pos:line="228" pos:column="29"/></literal></expr>;<pos:position pos:line="228" pos:column="30"/></expr_stmt>
        <do pos:line="229" pos:column="9">do <block pos:line="229" pos:column="12">{
            <comment type="block" pos:line="230" pos:column="13">/* Pause for a second */</comment>
            <expr_stmt><expr><call><name pos:line="231" pos:column="13">sleep<pos:position pos:line="231" pos:column="18"/></name><argument_list pos:line="231" pos:column="18">(<argument><expr><literal type="number" pos:line="231" pos:column="19">1<pos:position pos:line="231" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="231" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="22"/></expr_stmt>

            <comment type="block" pos:line="233" pos:column="13">/* Relieve any children which have now exited */</comment>
            <expr_stmt><expr><call><name pos:line="234" pos:column="13">ap_relieve_child_processes<pos:position pos:line="234" pos:column="39"/></name><argument_list pos:line="234" pos:column="39">()<pos:position pos:line="234" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="42"/></expr_stmt>

            <expr_stmt><expr><name pos:line="236" pos:column="13">active_children<pos:position pos:line="236" pos:column="28"/></name> <operator pos:line="236" pos:column="29">=<pos:position pos:line="236" pos:column="30"/></operator> <literal type="number" pos:line="236" pos:column="31">0<pos:position pos:line="236" pos:column="32"/></literal></expr>;<pos:position pos:line="236" pos:column="33"/></expr_stmt>
            <for pos:line="237" pos:column="13">for <control pos:line="237" pos:column="17">(<init><expr><name pos:line="237" pos:column="18">index<pos:position pos:line="237" pos:column="23"/></name> <operator pos:line="237" pos:column="24">=<pos:position pos:line="237" pos:column="25"/></operator> <literal type="number" pos:line="237" pos:column="26">0<pos:position pos:line="237" pos:column="27"/></literal></expr>;<pos:position pos:line="237" pos:column="28"/></init> <condition><expr><name pos:line="237" pos:column="29">index<pos:position pos:line="237" pos:column="34"/></name> <operator pos:line="237" pos:column="35">&lt;<pos:position pos:line="237" pos:column="39"/></operator> <name pos:line="237" pos:column="37">ap_daemons_limit<pos:position pos:line="237" pos:column="53"/></name></expr>;<pos:position pos:line="237" pos:column="54"/></condition> <incr><expr><operator pos:line="237" pos:column="55">++<pos:position pos:line="237" pos:column="57"/></operator><name pos:line="237" pos:column="57">index<pos:position pos:line="237" pos:column="62"/></name></expr></incr>)<pos:position pos:line="237" pos:column="63"/></control> <block pos:line="237" pos:column="64">{
                <if pos:line="238" pos:column="17">if <condition pos:line="238" pos:column="20">(<expr><call><name pos:line="238" pos:column="21">ap_mpm_safe_kill<pos:position pos:line="238" pos:column="37"/></name><argument_list pos:line="238" pos:column="37">(<argument><expr><call><name pos:line="238" pos:column="38">MPM_CHILD_PID<pos:position pos:line="238" pos:column="51"/></name><argument_list pos:line="238" pos:column="51">(<argument><expr><name pos:line="238" pos:column="52">index<pos:position pos:line="238" pos:column="57"/></name></expr></argument>)<pos:position pos:line="238" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="238" pos:column="60">0<pos:position pos:line="238" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="238" pos:column="62"/></argument_list></call> <operator pos:line="238" pos:column="63">==<pos:position pos:line="238" pos:column="65"/></operator> <name pos:line="238" pos:column="66">APR_SUCCESS<pos:position pos:line="238" pos:column="77"/></name></expr>)<pos:position pos:line="238" pos:column="78"/></condition><then pos:line="238" pos:column="78"> <block pos:line="238" pos:column="79">{
                    <expr_stmt><expr><name pos:line="239" pos:column="21">active_children<pos:position pos:line="239" pos:column="36"/></name> <operator pos:line="239" pos:column="37">=<pos:position pos:line="239" pos:column="38"/></operator> <literal type="number" pos:line="239" pos:column="39">1<pos:position pos:line="239" pos:column="40"/></literal></expr>;<pos:position pos:line="239" pos:column="41"/></expr_stmt>
                    <comment type="block" pos:line="240" pos:column="21">/* Having just one child is enough to stay around */</comment>
                    <break pos:line="241" pos:column="21">break;<pos:position pos:line="241" pos:column="27"/></break>
                }<pos:position pos:line="242" pos:column="18"/></block></then></if>
            }<pos:position pos:line="243" pos:column="14"/></block></for>
        }<pos:position pos:line="244" pos:column="10"/></block> while <condition pos:line="244" pos:column="17">(<expr><operator pos:line="244" pos:column="18">!<pos:position pos:line="244" pos:column="19"/></operator><name pos:line="244" pos:column="19">shutdown_pending<pos:position pos:line="244" pos:column="35"/></name> <operator pos:line="244" pos:column="36">&amp;&amp;<pos:position pos:line="244" pos:column="46"/></operator> <name pos:line="244" pos:column="39">active_children<pos:position pos:line="244" pos:column="54"/></name> <operator pos:line="244" pos:column="55">&amp;&amp;<pos:position pos:line="244" pos:column="65"/></operator>
                 <operator pos:line="245" pos:column="18">(<pos:position pos:line="245" pos:column="19"/></operator><operator pos:line="245" pos:column="19">!<pos:position pos:line="245" pos:column="20"/></operator><name pos:line="245" pos:column="20">ap_graceful_shutdown_timeout<pos:position pos:line="245" pos:column="48"/></name> <operator pos:line="245" pos:column="49">||<pos:position pos:line="245" pos:column="51"/></operator> <call><name pos:line="245" pos:column="52">apr_time_now<pos:position pos:line="245" pos:column="64"/></name><argument_list pos:line="245" pos:column="64">()<pos:position pos:line="245" pos:column="66"/></argument_list></call> <operator pos:line="245" pos:column="67">&lt;<pos:position pos:line="245" pos:column="71"/></operator> <name pos:line="245" pos:column="69">cutoff<pos:position pos:line="245" pos:column="75"/></name><operator pos:line="245" pos:column="75">)<pos:position pos:line="245" pos:column="76"/></operator></expr>)<pos:position pos:line="245" pos:column="77"/></condition>;<pos:position pos:line="245" pos:column="78"/></do>

        <comment type="block" pos:line="247" pos:column="9">/* We might be here because we received SIGTERM, either
         * way, try and make sure that all of our processes are
         * really dead.
         */</comment>
        <expr_stmt><expr><call><name pos:line="251" pos:column="9">ap_unixd_killpg<pos:position pos:line="251" pos:column="24"/></name><argument_list pos:line="251" pos:column="24">(<argument><expr><call><name pos:line="251" pos:column="25">getpgrp<pos:position pos:line="251" pos:column="32"/></name><argument_list pos:line="251" pos:column="32">()<pos:position pos:line="251" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="251" pos:column="36">SIGTERM<pos:position pos:line="251" pos:column="43"/></name></expr></argument>)<pos:position pos:line="251" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="45"/></expr_stmt>

        <return pos:line="253" pos:column="9">return <expr><name pos:line="253" pos:column="16">DONE<pos:position pos:line="253" pos:column="20"/></name></expr>;<pos:position pos:line="253" pos:column="21"/></return>
    }<pos:position pos:line="254" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="256" pos:column="5">/* we've been told to restart */</comment>
    <expr_stmt><expr><call><name pos:line="257" pos:column="5">apr_signal<pos:position pos:line="257" pos:column="15"/></name><argument_list pos:line="257" pos:column="15">(<argument><expr><name pos:line="257" pos:column="16">SIGHUP<pos:position pos:line="257" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="24">SIG_IGN<pos:position pos:line="257" pos:column="31"/></name></expr></argument>)<pos:position pos:line="257" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="258" pos:column="5">apr_signal<pos:position pos:line="258" pos:column="15"/></name><argument_list pos:line="258" pos:column="15">(<argument><expr><name pos:line="258" pos:column="16">AP_SIG_GRACEFUL<pos:position pos:line="258" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="258" pos:column="33">SIG_IGN<pos:position pos:line="258" pos:column="40"/></name></expr></argument>)<pos:position pos:line="258" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="42"/></expr_stmt>
    <if pos:line="259" pos:column="5">if <condition pos:line="259" pos:column="8">(<expr><name pos:line="259" pos:column="9">one_process<pos:position pos:line="259" pos:column="20"/></name></expr>)<pos:position pos:line="259" pos:column="21"/></condition><then pos:line="259" pos:column="21"> <block pos:line="259" pos:column="22">{
        <comment type="block" pos:line="260" pos:column="9">/* not worth thinking about */</comment>
        <return pos:line="261" pos:column="9">return <expr><name pos:line="261" pos:column="16">DONE<pos:position pos:line="261" pos:column="20"/></name></expr>;<pos:position pos:line="261" pos:column="21"/></return>
    }<pos:position pos:line="262" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="264" pos:column="5">/* advance to the next generation */</comment>
    <comment type="block" pos:line="265" pos:column="5">/* XXX: we really need to make sure this new generation number isn't in
     * use by any of the children.
     */</comment>
    <expr_stmt><expr><operator pos:line="268" pos:column="5">++<pos:position pos:line="268" pos:column="7"/></operator><name pos:line="268" pos:column="7">my_generation<pos:position pos:line="268" pos:column="20"/></name></expr>;<pos:position pos:line="268" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="269" pos:column="5">ap_scoreboard_image<pos:position pos:line="269" pos:column="24"/></name><operator pos:line="269" pos:column="24">-&gt;<pos:position pos:line="269" pos:column="29"/></operator><name pos:line="269" pos:column="26">global<pos:position pos:line="269" pos:column="32"/></name><operator pos:line="269" pos:column="32">-&gt;<pos:position pos:line="269" pos:column="37"/></operator><name pos:line="269" pos:column="34">running_generation<pos:position pos:line="269" pos:column="52"/></name></name> <operator pos:line="269" pos:column="53">=<pos:position pos:line="269" pos:column="54"/></operator> <name pos:line="269" pos:column="55">my_generation<pos:position pos:line="269" pos:column="68"/></name></expr>;<pos:position pos:line="269" pos:column="69"/></expr_stmt>

    <if pos:line="271" pos:column="5">if <condition pos:line="271" pos:column="8">(<expr><name pos:line="271" pos:column="9">is_graceful<pos:position pos:line="271" pos:column="20"/></name></expr>)<pos:position pos:line="271" pos:column="21"/></condition><then pos:line="271" pos:column="21"> <block pos:line="271" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="272" pos:column="9">ap_log_error<pos:position pos:line="272" pos:column="21"/></name><argument_list pos:line="272" pos:column="21">(<argument><expr><name pos:line="272" pos:column="22">APLOG_MARK<pos:position pos:line="272" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="272" pos:column="34">APLOG_NOTICE<pos:position pos:line="272" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="272" pos:column="48">0<pos:position pos:line="272" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="272" pos:column="51">ap_server_conf<pos:position pos:line="272" pos:column="65"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="273" pos:column="21">"Graceful restart requested, doing restart"<pos:position pos:line="273" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="273" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="66"/></expr_stmt>

        <comment type="block" pos:line="275" pos:column="9">/* kill off the idle ones */</comment>
        <expr_stmt><expr><call><name pos:line="276" pos:column="9">ap_mpm_pod_killpg<pos:position pos:line="276" pos:column="26"/></name><argument_list pos:line="276" pos:column="26">(<argument><expr><name pos:line="276" pos:column="27">pod<pos:position pos:line="276" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="276" pos:column="32">max_daemons_limit<pos:position pos:line="276" pos:column="49"/></name></expr></argument>)<pos:position pos:line="276" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="51"/></expr_stmt>

        <comment type="block" pos:line="278" pos:column="9">/* This is mostly for debugging... so that we know what is still
         * gracefully dealing with existing request.  This will break
         * in a very nasty way if we ever have the scoreboard totally
         * file-based (no shared memory)
         */</comment>
        <for pos:line="283" pos:column="9">for <control pos:line="283" pos:column="13">(<init><expr><name pos:line="283" pos:column="14">index<pos:position pos:line="283" pos:column="19"/></name> <operator pos:line="283" pos:column="20">=<pos:position pos:line="283" pos:column="21"/></operator> <literal type="number" pos:line="283" pos:column="22">0<pos:position pos:line="283" pos:column="23"/></literal></expr>;<pos:position pos:line="283" pos:column="24"/></init> <condition><expr><name pos:line="283" pos:column="25">index<pos:position pos:line="283" pos:column="30"/></name> <operator pos:line="283" pos:column="31">&lt;<pos:position pos:line="283" pos:column="35"/></operator> <name pos:line="283" pos:column="33">ap_daemons_limit<pos:position pos:line="283" pos:column="49"/></name></expr>;<pos:position pos:line="283" pos:column="50"/></condition> <incr><expr><operator pos:line="283" pos:column="51">++<pos:position pos:line="283" pos:column="53"/></operator><name pos:line="283" pos:column="53">index<pos:position pos:line="283" pos:column="58"/></name></expr></incr>)<pos:position pos:line="283" pos:column="59"/></control> <block pos:line="283" pos:column="60">{
            <if pos:line="284" pos:column="13">if <condition pos:line="284" pos:column="16">(<expr><name><name pos:line="284" pos:column="17">ap_scoreboard_image<pos:position pos:line="284" pos:column="36"/></name><operator pos:line="284" pos:column="36">-&gt;<pos:position pos:line="284" pos:column="41"/></operator><name pos:line="284" pos:column="38">servers<pos:position pos:line="284" pos:column="45"/></name><index pos:line="284" pos:column="45">[<expr><name pos:line="284" pos:column="46">index<pos:position pos:line="284" pos:column="51"/></name></expr>]<pos:position pos:line="284" pos:column="52"/></index><index pos:line="284" pos:column="52">[<expr><literal type="number" pos:line="284" pos:column="53">0<pos:position pos:line="284" pos:column="54"/></literal></expr>]<pos:position pos:line="284" pos:column="55"/></index></name><operator pos:line="284" pos:column="55">.<pos:position pos:line="284" pos:column="56"/></operator><name pos:line="284" pos:column="56">status<pos:position pos:line="284" pos:column="62"/></name> <operator pos:line="284" pos:column="63">!=<pos:position pos:line="284" pos:column="65"/></operator> <name pos:line="284" pos:column="66">SERVER_DEAD<pos:position pos:line="284" pos:column="77"/></name></expr>)<pos:position pos:line="284" pos:column="78"/></condition><then pos:line="284" pos:column="78"> <block pos:line="284" pos:column="79">{
                <expr_stmt><expr><name><name pos:line="285" pos:column="17">ap_scoreboard_image<pos:position pos:line="285" pos:column="36"/></name><operator pos:line="285" pos:column="36">-&gt;<pos:position pos:line="285" pos:column="41"/></operator><name pos:line="285" pos:column="38">servers<pos:position pos:line="285" pos:column="45"/></name><index pos:line="285" pos:column="45">[<expr><name pos:line="285" pos:column="46">index<pos:position pos:line="285" pos:column="51"/></name></expr>]<pos:position pos:line="285" pos:column="52"/></index><index pos:line="285" pos:column="52">[<expr><literal type="number" pos:line="285" pos:column="53">0<pos:position pos:line="285" pos:column="54"/></literal></expr>]<pos:position pos:line="285" pos:column="55"/></index></name><operator pos:line="285" pos:column="55">.<pos:position pos:line="285" pos:column="56"/></operator><name pos:line="285" pos:column="56">status<pos:position pos:line="285" pos:column="62"/></name> <operator pos:line="285" pos:column="63">=<pos:position pos:line="285" pos:column="64"/></operator> <name pos:line="285" pos:column="65">SERVER_GRACEFUL<pos:position pos:line="285" pos:column="80"/></name></expr>;<pos:position pos:line="285" pos:column="81"/></expr_stmt>
                <comment type="block" pos:line="286" pos:column="17">/* Ask each child to close its listeners.
                 *
                 * NOTE: we use the scoreboard, because if we send SIGUSR1
                 * to every process in the group, this may include CGI's,
                 * piped loggers, etc. They almost certainly won't handle
                 * it gracefully.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="293" pos:column="17">ap_mpm_safe_kill<pos:position pos:line="293" pos:column="33"/></name><argument_list pos:line="293" pos:column="33">(<argument><expr><name><name pos:line="293" pos:column="34">ap_scoreboard_image<pos:position pos:line="293" pos:column="53"/></name><operator pos:line="293" pos:column="53">-&gt;<pos:position pos:line="293" pos:column="58"/></operator><name pos:line="293" pos:column="55">parent<pos:position pos:line="293" pos:column="61"/></name><index pos:line="293" pos:column="61">[<expr><name pos:line="293" pos:column="62">index<pos:position pos:line="293" pos:column="67"/></name></expr>]<pos:position pos:line="293" pos:column="68"/></index></name><operator pos:line="293" pos:column="68">.<pos:position pos:line="293" pos:column="69"/></operator><name pos:line="293" pos:column="69">pid<pos:position pos:line="293" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="293" pos:column="74">AP_SIG_GRACEFUL<pos:position pos:line="293" pos:column="89"/></name></expr></argument>)<pos:position pos:line="293" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="91"/></expr_stmt>
            }<pos:position pos:line="294" pos:column="14"/></block></then></if>
        }<pos:position pos:line="295" pos:column="10"/></block></for>
    }<pos:position pos:line="296" pos:column="6"/></block></then>
    <else pos:line="297" pos:column="5">else <block pos:line="297" pos:column="10">{
        <comment type="block" pos:line="298" pos:column="9">/* Kill 'em off */</comment>
        <if pos:line="299" pos:column="9">if <condition pos:line="299" pos:column="12">(<expr><call><name pos:line="299" pos:column="13">ap_unixd_killpg<pos:position pos:line="299" pos:column="28"/></name><argument_list pos:line="299" pos:column="28">(<argument><expr><call><name pos:line="299" pos:column="29">getpgrp<pos:position pos:line="299" pos:column="36"/></name><argument_list pos:line="299" pos:column="36">()<pos:position pos:line="299" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="299" pos:column="40">SIGHUP<pos:position pos:line="299" pos:column="46"/></name></expr></argument>)<pos:position pos:line="299" pos:column="47"/></argument_list></call> <operator pos:line="299" pos:column="48">&lt;<pos:position pos:line="299" pos:column="52"/></operator> <literal type="number" pos:line="299" pos:column="50">0<pos:position pos:line="299" pos:column="51"/></literal></expr>)<pos:position pos:line="299" pos:column="52"/></condition><then pos:line="299" pos:column="52"> <block pos:line="299" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="300" pos:column="13">ap_log_error<pos:position pos:line="300" pos:column="25"/></name><argument_list pos:line="300" pos:column="25">(<argument><expr><name pos:line="300" pos:column="26">APLOG_MARK<pos:position pos:line="300" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="300" pos:column="38">APLOG_WARNING<pos:position pos:line="300" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="300" pos:column="53">errno<pos:position pos:line="300" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="300" pos:column="60">ap_server_conf<pos:position pos:line="300" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="300" pos:column="76">"killpg SIGHUP"<pos:position pos:line="300" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="300" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="93"/></expr_stmt>
        }<pos:position pos:line="301" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="302" pos:column="9">ap_reclaim_child_processes<pos:position pos:line="302" pos:column="35"/></name><argument_list pos:line="302" pos:column="35">(<argument><expr><literal type="number" pos:line="302" pos:column="36">0<pos:position pos:line="302" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="302" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="39"/></expr_stmt>          <comment type="block" pos:line="302" pos:column="49">/* Not when just starting up */</comment>
        <expr_stmt><expr><call><name pos:line="303" pos:column="9">ap_log_error<pos:position pos:line="303" pos:column="21"/></name><argument_list pos:line="303" pos:column="21">(<argument><expr><name pos:line="303" pos:column="22">APLOG_MARK<pos:position pos:line="303" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="303" pos:column="34">APLOG_NOTICE<pos:position pos:line="303" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="303" pos:column="48">0<pos:position pos:line="303" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="303" pos:column="51">ap_server_conf<pos:position pos:line="303" pos:column="65"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="304" pos:column="21">"SIGHUP received.  Attempting to restart"<pos:position pos:line="304" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="304" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="305" pos:column="6"/></block></else></if>

    <return pos:line="307" pos:column="5">return <expr><name pos:line="307" pos:column="12">OK<pos:position pos:line="307" pos:column="14"/></name></expr>;<pos:position pos:line="307" pos:column="15"/></return>
}<pos:position pos:line="308" pos:column="2"/></block></function></unit>

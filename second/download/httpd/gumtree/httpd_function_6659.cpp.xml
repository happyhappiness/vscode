<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6659.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">H2_TASK_OUT_LOG<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">lvl<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">h2_task<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">task<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">apr_bucket_brigade<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">bb<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>, 
                            <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">tag<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">APLOG_C_IS_LEVEL<pos:position pos:line="4" pos:column="25"/></name><argument_list pos:line="4" pos:column="25">(<argument><expr><name><name pos:line="4" pos:column="26">task<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">-&gt;<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="32">c<pos:position pos:line="4" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="35">lvl<pos:position pos:line="4" pos:column="38"/></name></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="40"/></condition><then pos:line="4" pos:column="40"> <block pos:line="4" pos:column="41">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">conn_rec<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">c<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name><name pos:line="5" pos:column="23">task<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">c<pos:position pos:line="5" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">buffer<pos:position pos:line="6" pos:column="20"/></name><index pos:line="6" pos:column="20">[<expr><literal type="number" pos:line="6" pos:column="21">4<pos:position pos:line="6" pos:column="22"/></literal> <operator pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></operator> <literal type="number" pos:line="6" pos:column="25">1024<pos:position pos:line="6" pos:column="29"/></literal></expr>]<pos:position pos:line="6" pos:column="30"/></index></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">line<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><literal type="string" pos:line="7" pos:column="28">"(null)"<pos:position pos:line="7" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">apr_size_t<pos:position pos:line="8" pos:column="19"/></name></type> <name pos:line="8" pos:column="20">len<pos:position pos:line="8" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="25">bmax<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><sizeof pos:line="8" pos:column="32">sizeof<argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">buffer<pos:position pos:line="8" pos:column="45"/></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></sizeof><operator pos:line="8" pos:column="46">/<pos:position pos:line="8" pos:column="47"/></operator><sizeof pos:line="8" pos:column="47">sizeof<argument_list pos:line="8" pos:column="53">(<argument><expr><name><name pos:line="8" pos:column="54">buffer<pos:position pos:line="8" pos:column="60"/></name><index pos:line="8" pos:column="60">[<expr><literal type="number" pos:line="8" pos:column="61">0<pos:position pos:line="8" pos:column="62"/></literal></expr>]<pos:position pos:line="8" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="8" pos:column="65"/></decl_stmt>
        
        <expr_stmt><expr><name pos:line="10" pos:column="9">len<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">h2_util_bb_print<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">buffer<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">bmax<pos:position pos:line="10" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="46">tag<pos:position pos:line="10" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="51">""<pos:position pos:line="10" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="55">bb<pos:position pos:line="10" pos:column="57"/></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">ap_log_cerror<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">APLOG_MARK<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">lvl<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="40">0<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">c<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="46">"bb_dump(%s): %s"<pos:position pos:line="11" pos:column="63"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="12" pos:column="23">task<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">id<pos:position pos:line="12" pos:column="31"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="12" pos:column="33">len<pos:position pos:line="12" pos:column="36"/></name></expr>?<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37"> <expr><name pos:line="12" pos:column="38">buffer<pos:position pos:line="12" pos:column="44"/></name></expr> <pos:position pos:line="12" pos:column="45"/></then><else pos:line="12" pos:column="45">: <expr><name pos:line="12" pos:column="47">line<pos:position pos:line="12" pos:column="51"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

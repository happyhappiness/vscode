<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1063.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">ap_init_ebcdic<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">apr_pool_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">pool<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">buf<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><literal type="number" pos:line="4" pos:column="14">80<pos:position pos:line="4" pos:column="16"/></literal></expr>]<pos:position pos:line="4" pos:column="17"/></index></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">rv<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <call><name pos:line="6" pos:column="10">apr_xlate_open<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><operator pos:line="6" pos:column="25">&amp;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="26">ap_hdrs_to_ascii<pos:position pos:line="6" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="44">"ISO8859-1"<pos:position pos:line="6" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="57">APR_DEFAULT_CHARSET<pos:position pos:line="6" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="78">pool<pos:position pos:line="6" pos:column="82"/></name></expr></argument>)<pos:position pos:line="6" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="84"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">rv<pos:position pos:line="7" pos:column="11"/></name></expr>)<pos:position pos:line="7" pos:column="12"/></condition><then pos:line="7" pos:column="12"> <block pos:line="7" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">ap_log_error<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">APLOG_MARK<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">APLOG_ERR<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="45">rv<pos:position pos:line="8" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="49">NULL<pos:position pos:line="8" pos:column="53"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="9" pos:column="22">"apr_xlate_open() failed"<pos:position pos:line="9" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="49"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">rv<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="13" pos:column="5">rv<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <call><name pos:line="13" pos:column="10">apr_xlate_open<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><operator pos:line="13" pos:column="25">&amp;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="26">ap_hdrs_from_ascii<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">APR_DEFAULT_CHARSET<pos:position pos:line="13" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="67">"ISO8859-1"<pos:position pos:line="13" pos:column="78"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="80">pool<pos:position pos:line="13" pos:column="84"/></name></expr></argument>)<pos:position pos:line="13" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="86"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">rv<pos:position pos:line="14" pos:column="11"/></name></expr>)<pos:position pos:line="14" pos:column="12"/></condition><then pos:line="14" pos:column="12"> <block pos:line="14" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">ap_log_error<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">APLOG_MARK<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">APLOG_ERR<pos:position pos:line="15" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="45">rv<pos:position pos:line="15" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="49">NULL<pos:position pos:line="15" pos:column="53"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="16" pos:column="22">"apr_xlate_open() failed"<pos:position pos:line="16" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">rv<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">rv<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <call><name pos:line="20" pos:column="10">apr_xlate_open<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><operator pos:line="20" pos:column="25">&amp;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="26">ap_locale_to_ascii<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="46">"ISO8859-1"<pos:position pos:line="20" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="59">APR_LOCALE_CHARSET<pos:position pos:line="20" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="79">pool<pos:position pos:line="20" pos:column="83"/></name></expr></argument>)<pos:position pos:line="20" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="85"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">rv<pos:position pos:line="21" pos:column="11"/></name></expr>)<pos:position pos:line="21" pos:column="12"/></condition><then pos:line="21" pos:column="12"> <block pos:line="21" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">ap_log_error<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">APLOG_MARK<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">APLOG_ERR<pos:position pos:line="22" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">rv<pos:position pos:line="22" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="49">NULL<pos:position pos:line="22" pos:column="53"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="23" pos:column="22">"apr_xlate_open() failed"<pos:position pos:line="23" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">rv<pos:position pos:line="24" pos:column="18"/></name></expr>;<pos:position pos:line="24" pos:column="19"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="27" pos:column="5">rv<pos:position pos:line="27" pos:column="7"/></name> <operator pos:line="27" pos:column="8">=<pos:position pos:line="27" pos:column="9"/></operator> <call><name pos:line="27" pos:column="10">apr_xlate_open<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><operator pos:line="27" pos:column="25">&amp;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="26">ap_locale_from_ascii<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">APR_LOCALE_CHARSET<pos:position pos:line="27" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="68">"ISO8859-1"<pos:position pos:line="27" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="81">pool<pos:position pos:line="27" pos:column="85"/></name></expr></argument>)<pos:position pos:line="27" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="87"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">rv<pos:position pos:line="28" pos:column="11"/></name></expr>)<pos:position pos:line="28" pos:column="12"/></condition><then pos:line="28" pos:column="12"> <block pos:line="28" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">ap_log_error<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><name pos:line="29" pos:column="22">APLOG_MARK<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="34">APLOG_ERR<pos:position pos:line="29" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="45">rv<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">NULL<pos:position pos:line="29" pos:column="53"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="30" pos:column="22">"apr_xlate_open() failed"<pos:position pos:line="30" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="49"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">rv<pos:position pos:line="31" pos:column="18"/></name></expr>;<pos:position pos:line="31" pos:column="19"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="34" pos:column="5">rv<pos:position pos:line="34" pos:column="7"/></name> <operator pos:line="34" pos:column="8">=<pos:position pos:line="34" pos:column="9"/></operator> <call><name pos:line="34" pos:column="10">apr_MD5InitEBCDIC<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">ap_hdrs_to_ascii<pos:position pos:line="34" pos:column="44"/></name></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">rv<pos:position pos:line="35" pos:column="11"/></name></expr>)<pos:position pos:line="35" pos:column="12"/></condition><then pos:line="35" pos:column="12"> <block pos:line="35" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_log_error<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">APLOG_MARK<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">APLOG_ERR<pos:position pos:line="36" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="45">rv<pos:position pos:line="36" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="49">NULL<pos:position pos:line="36" pos:column="53"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="37" pos:column="22">"apr_MD5InitEBCDIC() failed"<pos:position pos:line="37" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="52"/></expr_stmt>
        <return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">rv<pos:position pos:line="38" pos:column="18"/></name></expr>;<pos:position pos:line="38" pos:column="19"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="41" pos:column="5">rv<pos:position pos:line="41" pos:column="7"/></name> <operator pos:line="41" pos:column="8">=<pos:position pos:line="41" pos:column="9"/></operator> <call><name pos:line="41" pos:column="10">apr_base64init_ebcdic<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">ap_hdrs_to_ascii<pos:position pos:line="41" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">ap_hdrs_from_ascii<pos:position pos:line="41" pos:column="68"/></name></expr></argument>)<pos:position pos:line="41" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="70"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">rv<pos:position pos:line="42" pos:column="11"/></name></expr>)<pos:position pos:line="42" pos:column="12"/></condition><then pos:line="42" pos:column="12"> <block pos:line="42" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">ap_log_error<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">APLOG_MARK<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="34">APLOG_ERR<pos:position pos:line="43" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="45">rv<pos:position pos:line="43" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="49">NULL<pos:position pos:line="43" pos:column="53"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="44" pos:column="22">"apr_base64init_ebcdic() failed"<pos:position pos:line="44" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="56"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">rv<pos:position pos:line="45" pos:column="18"/></name></expr>;<pos:position pos:line="45" pos:column="19"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="48" pos:column="5">rv<pos:position pos:line="48" pos:column="7"/></name> <operator pos:line="48" pos:column="8">=<pos:position pos:line="48" pos:column="9"/></operator> <call><name pos:line="48" pos:column="10">apr_SHA1InitEBCDIC<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">ap_hdrs_to_ascii<pos:position pos:line="48" pos:column="45"/></name></expr></argument>)<pos:position pos:line="48" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="47"/></expr_stmt>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">rv<pos:position pos:line="49" pos:column="11"/></name></expr>)<pos:position pos:line="49" pos:column="12"/></condition><then pos:line="49" pos:column="12"> <block pos:line="49" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">ap_log_error<pos:position pos:line="50" pos:column="21"/></name><argument_list pos:line="50" pos:column="21">(<argument><expr><name pos:line="50" pos:column="22">APLOG_MARK<pos:position pos:line="50" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="34">APLOG_ERR<pos:position pos:line="50" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="45">rv<pos:position pos:line="50" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="49">NULL<pos:position pos:line="50" pos:column="53"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="51" pos:column="22">"apr_SHA1InitEBCDIC() failed"<pos:position pos:line="51" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt>
        <return pos:line="52" pos:column="9">return <expr><name pos:line="52" pos:column="16">rv<pos:position pos:line="52" pos:column="18"/></name></expr>;<pos:position pos:line="52" pos:column="19"/></return>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
    
    <return pos:line="55" pos:column="5">return <expr><name pos:line="55" pos:column="12">APR_SUCCESS<pos:position pos:line="55" pos:column="23"/></name></expr>;<pos:position pos:line="55" pos:column="24"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_307.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ap_mpm_run<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">apr_pool_t<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">_pconf<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">apr_pool_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">plog<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">server_rec<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">s<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name><init pos:line="3" pos:column="24">=<expr><literal type="number" pos:line="3" pos:column="25">0<pos:position pos:line="3" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><name pos:line="5" pos:column="5">pconf<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">=<pos:position pos:line="5" pos:column="12"/></operator> <name pos:line="5" pos:column="13">_pconf<pos:position pos:line="5" pos:column="19"/></name></expr>;<pos:position pos:line="5" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">ap_server_conf<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">=<pos:position pos:line="6" pos:column="21"/></operator> <name pos:line="6" pos:column="22">s<pos:position pos:line="6" pos:column="23"/></name></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">setup_listeners<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">s<pos:position pos:line="8" pos:column="26"/></name></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28"> <block pos:line="8" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">ap_log_error<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">APLOG_MARK<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="34">APLOG_ALERT<pos:position pos:line="9" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="47">status<pos:position pos:line="9" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="55">s<pos:position pos:line="9" pos:column="56"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="10" pos:column="13">"no listening sockets available, shutting down"<pos:position pos:line="10" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">-<pos:position pos:line="11" pos:column="17"/></operator><literal type="number" pos:line="11" pos:column="17">1<pos:position pos:line="11" pos:column="18"/></literal></expr>;<pos:position pos:line="11" pos:column="19"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="14" pos:column="5">restart_pending<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">shutdown_pending<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">=<pos:position pos:line="14" pos:column="41"/></operator> <literal type="number" pos:line="14" pos:column="42">0<pos:position pos:line="14" pos:column="43"/></literal></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">worker_thread_count<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <literal type="number" pos:line="15" pos:column="27">0<pos:position pos:line="15" pos:column="28"/></literal></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">is_graceful<pos:position pos:line="17" pos:column="21"/></name></expr>)<pos:position pos:line="17" pos:column="22"/></condition><then pos:line="17" pos:column="22"> <block pos:line="17" pos:column="23">{
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">ap_run_pre_mpm<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name><name pos:line="18" pos:column="28">s<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">process<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">pool<pos:position pos:line="18" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="46">SB_NOT_SHARED<pos:position pos:line="18" pos:column="59"/></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call> <operator pos:line="18" pos:column="61">!=<pos:position pos:line="18" pos:column="63"/></operator> <name pos:line="18" pos:column="64">OK<pos:position pos:line="18" pos:column="66"/></name></expr>)<pos:position pos:line="18" pos:column="67"/></condition><then pos:line="18" pos:column="67"> <block pos:line="18" pos:column="68">{
            <return pos:line="19" pos:column="13">return <expr><literal type="number" pos:line="19" pos:column="20">1<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="23" pos:column="5">/* Only set slot 0 since that is all NetWare will ever have. */</comment>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">ap_scoreboard_image<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">parent<pos:position pos:line="24" pos:column="32"/></name><index pos:line="24" pos:column="32">[<expr><literal type="number" pos:line="24" pos:column="33">0<pos:position pos:line="24" pos:column="34"/></literal></expr>]<pos:position pos:line="24" pos:column="35"/></index></name><operator pos:line="24" pos:column="35">.<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="36">pid<pos:position pos:line="24" pos:column="39"/></name> <operator pos:line="24" pos:column="40">=<pos:position pos:line="24" pos:column="41"/></operator> <call><name pos:line="24" pos:column="42">getpid<pos:position pos:line="24" pos:column="48"/></name><argument_list pos:line="24" pos:column="48">()<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">set_signals<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">()<pos:position pos:line="26" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">apr_pool_create<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><operator pos:line="28" pos:column="21">&amp;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="22">pmain<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="29">pconf<pos:position pos:line="28" pos:column="34"/></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">ap_run_child_init<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">pmain<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="30">ap_server_conf<pos:position pos:line="29" pos:column="44"/></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="46"/></expr_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">ap_threads_max_free<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">&lt;<pos:position pos:line="31" pos:column="33"/></operator> <name pos:line="31" pos:column="31">ap_threads_min_free<pos:position pos:line="31" pos:column="50"/></name> <operator pos:line="31" pos:column="51">+<pos:position pos:line="31" pos:column="52"/></operator> <literal type="number" pos:line="31" pos:column="53">1<pos:position pos:line="31" pos:column="54"/></literal></expr>)<pos:position pos:line="31" pos:column="55"/></condition><then pos:line="31" pos:column="55">	<comment type="block" pos:line="31" pos:column="57">/* Don't thrash... */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="9">ap_threads_max_free<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <name pos:line="32" pos:column="31">ap_threads_min_free<pos:position pos:line="32" pos:column="50"/></name> <operator pos:line="32" pos:column="51">+<pos:position pos:line="32" pos:column="52"/></operator> <literal type="number" pos:line="32" pos:column="53">1<pos:position pos:line="32" pos:column="54"/></literal></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="33" pos:column="5">request_count<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <literal type="number" pos:line="33" pos:column="21">0<pos:position pos:line="33" pos:column="22"/></literal></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">startup_workers<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">ap_threads_to_start<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>

     <comment type="block" pos:line="37" pos:column="6">/* Allow the Apache screen to be closed normally on exit() only if it
        has not been explicitly forced to close on exit(). (ie. the -E flag
        was specified at startup) */</comment>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">hold_screen_on_exit<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">&gt;<pos:position pos:line="40" pos:column="33"/></operator> <literal type="number" pos:line="40" pos:column="31">0<pos:position pos:line="40" pos:column="32"/></literal></expr>)<pos:position pos:line="40" pos:column="33"/></condition><then pos:line="40" pos:column="33"> <block pos:line="40" pos:column="34">{
        <expr_stmt><expr><name pos:line="41" pos:column="9">hold_screen_on_exit<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">=<pos:position pos:line="41" pos:column="30"/></operator> <literal type="number" pos:line="41" pos:column="31">0<pos:position pos:line="41" pos:column="32"/></literal></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">ap_log_error<pos:position pos:line="44" pos:column="17"/></name><argument_list pos:line="44" pos:column="17">(<argument><expr><name pos:line="44" pos:column="18">APLOG_MARK<pos:position pos:line="44" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="30">APLOG_NOTICE<pos:position pos:line="44" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="44">0<pos:position pos:line="44" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="47">ap_server_conf<pos:position pos:line="44" pos:column="61"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="45" pos:column="13">"%s configured -- resuming normal operations"<pos:position pos:line="45" pos:column="58"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="46" pos:column="13">ap_get_server_version<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">()<pos:position pos:line="46" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">ap_log_error<pos:position pos:line="47" pos:column="17"/></name><argument_list pos:line="47" pos:column="17">(<argument><expr><name pos:line="47" pos:column="18">APLOG_MARK<pos:position pos:line="47" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="30">APLOG_INFO<pos:position pos:line="47" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="42">0<pos:position pos:line="47" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="45">ap_server_conf<pos:position pos:line="47" pos:column="59"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="48" pos:column="13">"Server built: %s"<pos:position pos:line="48" pos:column="31"/></literal></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="33">ap_get_server_built<pos:position pos:line="48" pos:column="52"/></name><argument_list pos:line="48" pos:column="52">()<pos:position pos:line="48" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="56"/></expr_stmt>
<cpp:ifdef pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">ifdef<pos:position pos:line="49" pos:column="7"/></cpp:directive> <name pos:line="49" pos:column="8">AP_MPM_WANT_SET_ACCEPT_LOCK_MECH<pos:position pos:line="49" pos:column="40"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">ap_log_error<pos:position pos:line="50" pos:column="17"/></name><argument_list pos:line="50" pos:column="17">(<argument><expr><name pos:line="50" pos:column="18">APLOG_MARK<pos:position pos:line="50" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="30">APLOG_DEBUG<pos:position pos:line="50" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="43">0<pos:position pos:line="50" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="46">ap_server_conf<pos:position pos:line="50" pos:column="60"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="51" pos:column="13">"AcceptMutex: %s (default: %s)"<pos:position pos:line="51" pos:column="44"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="52" pos:column="13">apr_proc_mutex_name<pos:position pos:line="52" pos:column="32"/></name><argument_list pos:line="52" pos:column="32">(<argument><expr><name pos:line="52" pos:column="33">accept_mutex<pos:position pos:line="52" pos:column="45"/></name></expr></argument>)<pos:position pos:line="52" pos:column="46"/></argument_list></call></expr></argument>,
            <argument><expr><call><name pos:line="53" pos:column="13">apr_proc_mutex_defname<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">()<pos:position pos:line="53" pos:column="37"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">show_server_data<pos:position pos:line="55" pos:column="21"/></name><argument_list pos:line="55" pos:column="21">()<pos:position pos:line="55" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name pos:line="57" pos:column="5">mpm_state<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">=<pos:position pos:line="57" pos:column="16"/></operator> <name pos:line="57" pos:column="17">AP_MPMQ_RUNNING<pos:position pos:line="57" pos:column="32"/></name></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt>
    <while pos:line="58" pos:column="5">while <condition pos:line="58" pos:column="11">(<expr><operator pos:line="58" pos:column="12">!<pos:position pos:line="58" pos:column="13"/></operator><name pos:line="58" pos:column="13">restart_pending<pos:position pos:line="58" pos:column="28"/></name> <operator pos:line="58" pos:column="29">&amp;&amp;<pos:position pos:line="58" pos:column="39"/></operator> <operator pos:line="58" pos:column="32">!<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="33">shutdown_pending<pos:position pos:line="58" pos:column="49"/></name></expr>)<pos:position pos:line="58" pos:column="50"/></condition> <block pos:line="58" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">perform_idle_server_maintenance<pos:position pos:line="59" pos:column="40"/></name><argument_list pos:line="59" pos:column="40">(<argument><expr><name pos:line="59" pos:column="41">pconf<pos:position pos:line="59" pos:column="46"/></name></expr></argument>)<pos:position pos:line="59" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="48"/></expr_stmt>
        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">show_settings<pos:position pos:line="60" pos:column="26"/></name></expr>)<pos:position pos:line="60" pos:column="27"/></condition><then pos:line="60" pos:column="27">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="13">display_settings<pos:position pos:line="61" pos:column="29"/></name><argument_list pos:line="61" pos:column="29">()<pos:position pos:line="61" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="32"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">apr_thread_yield<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">()<pos:position pos:line="62" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">apr_sleep<pos:position pos:line="63" pos:column="18"/></name><argument_list pos:line="63" pos:column="18">(<argument><expr><name pos:line="63" pos:column="19">SCOREBOARD_MAINTENANCE_INTERVAL<pos:position pos:line="63" pos:column="50"/></name></expr></argument>)<pos:position pos:line="63" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></while>
    <expr_stmt><expr><name pos:line="65" pos:column="5">mpm_state<pos:position pos:line="65" pos:column="14"/></name> <operator pos:line="65" pos:column="15">=<pos:position pos:line="65" pos:column="16"/></operator> <name pos:line="65" pos:column="17">AP_MPMQ_STOPPING<pos:position pos:line="65" pos:column="33"/></name></expr>;<pos:position pos:line="65" pos:column="34"/></expr_stmt>


    <comment type="block" pos:line="68" pos:column="5">/* Shutdown the listen sockets so that we don't get stuck in a blocking call. 
    shutdown_listeners();*/</comment>

    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">shutdown_pending<pos:position pos:line="71" pos:column="25"/></name></expr>)<pos:position pos:line="71" pos:column="26"/></condition><then pos:line="71" pos:column="26"> <block pos:line="71" pos:column="27">{ <comment type="block" pos:line="71" pos:column="29">/* Got an unload from the console */</comment>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">ap_log_error<pos:position pos:line="72" pos:column="21"/></name><argument_list pos:line="72" pos:column="21">(<argument><expr><name pos:line="72" pos:column="22">APLOG_MARK<pos:position pos:line="72" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="34">APLOG_NOTICE<pos:position pos:line="72" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="48">0<pos:position pos:line="72" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="51">ap_server_conf<pos:position pos:line="72" pos:column="65"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="73" pos:column="13">"caught SIGTERM, shutting down"<pos:position pos:line="73" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="46"/></expr_stmt>

        <while pos:line="75" pos:column="9">while <condition pos:line="75" pos:column="15">(<expr><name pos:line="75" pos:column="16">worker_thread_count<pos:position pos:line="75" pos:column="35"/></name> <operator pos:line="75" pos:column="36">&gt;<pos:position pos:line="75" pos:column="40"/></operator> <literal type="number" pos:line="75" pos:column="38">0<pos:position pos:line="75" pos:column="39"/></literal></expr>)<pos:position pos:line="75" pos:column="40"/></condition> <block pos:line="75" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">printf<pos:position pos:line="76" pos:column="19"/></name> <argument_list pos:line="76" pos:column="20">(<argument><expr><literal type="string" pos:line="76" pos:column="21">"\rShutdown pending. Waiting for %d thread(s) to terminate..."<pos:position pos:line="76" pos:column="83"/></literal></expr></argument>, 
                    <argument><expr><name pos:line="77" pos:column="21">worker_thread_count<pos:position pos:line="77" pos:column="40"/></name></expr></argument>)<pos:position pos:line="77" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">apr_thread_yield<pos:position pos:line="78" pos:column="29"/></name><argument_list pos:line="78" pos:column="29">()<pos:position pos:line="78" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="79" pos:column="10"/></block></while>

        <return pos:line="81" pos:column="9">return <expr><literal type="number" pos:line="81" pos:column="16">1<pos:position pos:line="81" pos:column="17"/></literal></expr>;<pos:position pos:line="81" pos:column="18"/></return>
    }<pos:position pos:line="82" pos:column="6"/></block></then>
    <else pos:line="83" pos:column="5">else <block pos:line="83" pos:column="10">{  <comment type="block" pos:line="83" pos:column="13">/* the only other way out is a restart */</comment>
        <comment type="block" pos:line="84" pos:column="9">/* advance to the next generation */</comment>
        <comment type="block" pos:line="85" pos:column="9">/* XXX: we really need to make sure this new generation number isn't in
         * use by any of the children.
         */</comment>
        <expr_stmt><expr><operator pos:line="88" pos:column="9">++<pos:position pos:line="88" pos:column="11"/></operator><name pos:line="88" pos:column="11">ap_my_generation<pos:position pos:line="88" pos:column="27"/></name></expr>;<pos:position pos:line="88" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="89" pos:column="9">ap_scoreboard_image<pos:position pos:line="89" pos:column="28"/></name><operator pos:line="89" pos:column="28">-&gt;<pos:position pos:line="89" pos:column="33"/></operator><name pos:line="89" pos:column="30">global<pos:position pos:line="89" pos:column="36"/></name><operator pos:line="89" pos:column="36">-&gt;<pos:position pos:line="89" pos:column="41"/></operator><name pos:line="89" pos:column="38">running_generation<pos:position pos:line="89" pos:column="56"/></name></name> <operator pos:line="89" pos:column="57">=<pos:position pos:line="89" pos:column="58"/></operator> <name pos:line="89" pos:column="59">ap_my_generation<pos:position pos:line="89" pos:column="75"/></name></expr>;<pos:position pos:line="89" pos:column="76"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="91" pos:column="9">ap_log_error<pos:position pos:line="91" pos:column="21"/></name><argument_list pos:line="91" pos:column="21">(<argument><expr><name pos:line="91" pos:column="22">APLOG_MARK<pos:position pos:line="91" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="34">APLOG_NOTICE<pos:position pos:line="91" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="48">0<pos:position pos:line="91" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="51">ap_server_conf<pos:position pos:line="91" pos:column="65"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="92" pos:column="17">"Graceful restart requested, doing restart"<pos:position pos:line="92" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="62"/></expr_stmt>

        <comment type="block" pos:line="94" pos:column="9">/* Wait for all of the threads to terminate before initiating the restart */</comment>
        <while pos:line="95" pos:column="9">while <condition pos:line="95" pos:column="15">(<expr><name pos:line="95" pos:column="16">worker_thread_count<pos:position pos:line="95" pos:column="35"/></name> <operator pos:line="95" pos:column="36">&gt;<pos:position pos:line="95" pos:column="40"/></operator> <literal type="number" pos:line="95" pos:column="38">0<pos:position pos:line="95" pos:column="39"/></literal></expr>)<pos:position pos:line="95" pos:column="40"/></condition> <block pos:line="95" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="96" pos:column="13">printf<pos:position pos:line="96" pos:column="19"/></name> <argument_list pos:line="96" pos:column="20">(<argument><expr><literal type="string" pos:line="96" pos:column="21">"\rRestart pending. Waiting for %d thread(s) to terminate..."<pos:position pos:line="96" pos:column="82"/></literal></expr></argument>,
                    <argument><expr><name pos:line="97" pos:column="21">worker_thread_count<pos:position pos:line="97" pos:column="40"/></name></expr></argument>)<pos:position pos:line="97" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="98" pos:column="13">apr_thread_yield<pos:position pos:line="98" pos:column="29"/></name><argument_list pos:line="98" pos:column="29">()<pos:position pos:line="98" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="99" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="100" pos:column="9">printf<pos:position pos:line="100" pos:column="15"/></name> <argument_list pos:line="100" pos:column="16">(<argument><expr><literal type="string" pos:line="100" pos:column="17">"\nRestarting...\n"<pos:position pos:line="100" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></else></if>

    <return pos:line="103" pos:column="5">return <expr><literal type="number" pos:line="103" pos:column="12">0<pos:position pos:line="103" pos:column="13"/></literal></expr>;<pos:position pos:line="103" pos:column="14"/></return>
}<pos:position pos:line="104" pos:column="2"/></block></function></unit>

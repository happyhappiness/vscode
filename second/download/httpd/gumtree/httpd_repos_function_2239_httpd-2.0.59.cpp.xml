<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2239_httpd-2.0.59.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">perchild_pre_config<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">apr_pool_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">p<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">apr_pool_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">plog<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">apr_pool_t<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">ptemp<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="83"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="3" pos:column="5">static<pos:position pos:line="3" pos:column="11"/></specifier> <type><name pos:line="3" pos:column="12">int<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">restart_num<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><literal type="number" pos:line="3" pos:column="30">0<pos:position pos:line="3" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">no_detach<pos:position pos:line="4" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="20">debug<pos:position pos:line="4" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="27">foreground<pos:position pos:line="4" pos:column="37"/></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ap_directive_t<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">pdir<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">tmp_server_limit<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name pos:line="7" pos:column="28">DEFAULT_SERVER_LIMIT<pos:position pos:line="7" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">tmp_thread_limit<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><name pos:line="8" pos:column="28">DEFAULT_THREAD_LIMIT<pos:position pos:line="8" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">rv<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">debug<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <call><name pos:line="11" pos:column="13">ap_exists_config_define<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><literal type="string" pos:line="11" pos:column="37">"DEBUG"<pos:position pos:line="11" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">debug<pos:position pos:line="13" pos:column="14"/></name></expr>)<pos:position pos:line="13" pos:column="15"/></condition><then pos:line="13" pos:column="15"> <block pos:line="13" pos:column="16">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">foreground<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">one_process<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">=<pos:position pos:line="14" pos:column="35"/></operator> <literal type="number" pos:line="14" pos:column="36">1<pos:position pos:line="14" pos:column="37"/></literal></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">no_detach<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <literal type="number" pos:line="15" pos:column="21">0<pos:position pos:line="15" pos:column="22"/></literal></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then>
    <else pos:line="17" pos:column="5">else <block pos:line="17" pos:column="10">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">one_process<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <call><name pos:line="18" pos:column="23">ap_exists_config_define<pos:position pos:line="18" pos:column="46"/></name><argument_list pos:line="18" pos:column="46">(<argument><expr><literal type="string" pos:line="18" pos:column="47">"ONE_PROCESS"<pos:position pos:line="18" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">no_detach<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <call><name pos:line="19" pos:column="21">ap_exists_config_define<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">(<argument><expr><literal type="string" pos:line="19" pos:column="45">"NO_DETACH"<pos:position pos:line="19" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">foreground<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">ap_exists_config_define<pos:position pos:line="20" pos:column="45"/></name><argument_list pos:line="20" pos:column="45">(<argument><expr><literal type="string" pos:line="20" pos:column="46">"FOREGROUND"<pos:position pos:line="20" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="23" pos:column="5">/* sigh, want this only the second time around */</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">restart_num<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">++<pos:position pos:line="24" pos:column="22"/></operator> <operator pos:line="24" pos:column="23">==<pos:position pos:line="24" pos:column="25"/></operator> <literal type="number" pos:line="24" pos:column="26">1<pos:position pos:line="24" pos:column="27"/></literal></expr>)<pos:position pos:line="24" pos:column="28"/></condition><then pos:line="24" pos:column="28"> <block pos:line="24" pos:column="29">{
        <expr_stmt><expr><name pos:line="25" pos:column="9">is_graceful<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <literal type="number" pos:line="25" pos:column="23">0<pos:position pos:line="25" pos:column="24"/></literal></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">one_process<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">&amp;&amp;<pos:position pos:line="27" pos:column="36"/></operator> <operator pos:line="27" pos:column="29">!<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">foreground<pos:position pos:line="27" pos:column="40"/></name></expr>)<pos:position pos:line="27" pos:column="41"/></condition><then pos:line="27" pos:column="41"> <block pos:line="27" pos:column="42">{
            <expr_stmt><expr><name pos:line="28" pos:column="13">rv<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">apr_proc_detach<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><ternary><condition><expr><name pos:line="28" pos:column="34">no_detach<pos:position pos:line="28" pos:column="43"/></name></expr> ?<pos:position pos:line="28" pos:column="45"/></condition><then pos:line="28" pos:column="45"> <expr><name pos:line="28" pos:column="46">APR_PROC_DETACH_FOREGROUND<pos:position pos:line="28" pos:column="72"/></name></expr>
                                           <pos:position pos:line="29" pos:column="44"/></then><else pos:line="29" pos:column="44">: <expr><name pos:line="29" pos:column="46">APR_PROC_DETACH_DAEMONIZE<pos:position pos:line="29" pos:column="71"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="73"/></expr_stmt>
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><name pos:line="30" pos:column="17">rv<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">!=<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">APR_SUCCESS<pos:position pos:line="30" pos:column="34"/></name></expr>)<pos:position pos:line="30" pos:column="35"/></condition><then pos:line="30" pos:column="35"> <block pos:line="30" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="31" pos:column="17">ap_log_error<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">APLOG_MARK<pos:position pos:line="31" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="42">APLOG_CRIT<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="54">rv<pos:position pos:line="31" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="58">NULL<pos:position pos:line="31" pos:column="62"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="32" pos:column="30">"apr_proc_detach failed"<pos:position pos:line="32" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="56"/></expr_stmt>
                <return pos:line="33" pos:column="17">return <expr><name pos:line="33" pos:column="24">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="33" pos:column="50"/></name></expr>;<pos:position pos:line="33" pos:column="51"/></return>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if>                  
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="37" pos:column="9">my_pid<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">getpid<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">()<pos:position pos:line="37" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">unixd_pre_config<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><name pos:line="40" pos:column="22">ptemp<pos:position pos:line="40" pos:column="27"/></name></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">ap_listen_pre_config<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">()<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">num_daemons<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <name pos:line="42" pos:column="19">DEFAULT_NUM_DAEMON<pos:position pos:line="42" pos:column="37"/></name></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">threads_to_start<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">=<pos:position pos:line="43" pos:column="23"/></operator> <name pos:line="43" pos:column="24">DEFAULT_START_THREAD<pos:position pos:line="43" pos:column="44"/></name></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">min_spare_threads<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">=<pos:position pos:line="44" pos:column="24"/></operator> <name pos:line="44" pos:column="25">DEFAULT_MIN_SPARE_THREAD<pos:position pos:line="44" pos:column="49"/></name></expr>;<pos:position pos:line="44" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">max_spare_threads<pos:position pos:line="45" pos:column="22"/></name> <operator pos:line="45" pos:column="23">=<pos:position pos:line="45" pos:column="24"/></operator> <name pos:line="45" pos:column="25">DEFAULT_MAX_SPARE_THREAD<pos:position pos:line="45" pos:column="49"/></name></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="46" pos:column="5">max_threads<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <name pos:line="46" pos:column="19">thread_limit<pos:position pos:line="46" pos:column="31"/></name></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">ap_pid_fname<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <name pos:line="47" pos:column="20">DEFAULT_PIDLOG<pos:position pos:line="47" pos:column="34"/></name></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="48" pos:column="5">ap_lock_fname<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">=<pos:position pos:line="48" pos:column="20"/></operator> <name pos:line="48" pos:column="21">DEFAULT_LOCKFILE<pos:position pos:line="48" pos:column="37"/></name></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">ap_max_requests_per_child<pos:position pos:line="49" pos:column="30"/></name> <operator pos:line="49" pos:column="31">=<pos:position pos:line="49" pos:column="32"/></operator> <name pos:line="49" pos:column="33">DEFAULT_MAX_REQUESTS_PER_CHILD<pos:position pos:line="49" pos:column="63"/></name></expr>;<pos:position pos:line="49" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name pos:line="50" pos:column="5">curr_child_num<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <literal type="number" pos:line="50" pos:column="22">0<pos:position pos:line="50" pos:column="23"/></literal></expr>;<pos:position pos:line="50" pos:column="24"/></expr_stmt>
<cpp:ifdef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifdef<pos:position pos:line="51" pos:column="7"/></cpp:directive> <name pos:line="51" pos:column="8">AP_MPM_WANT_SET_MAX_MEM_FREE<pos:position pos:line="51" pos:column="36"/></name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="52" pos:column="9">ap_max_mem_free<pos:position pos:line="52" pos:column="24"/></name> <operator pos:line="52" pos:column="25">=<pos:position pos:line="52" pos:column="26"/></operator> <name pos:line="52" pos:column="27">APR_ALLOCATOR_MAX_FREE_UNLIMITED<pos:position pos:line="52" pos:column="59"/></name></expr>;<pos:position pos:line="52" pos:column="60"/></expr_stmt>
<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif<pos:position pos:line="53" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="55" pos:column="5">apr_cpystrn<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><name pos:line="55" pos:column="17">ap_coredump_dir<pos:position pos:line="55" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="34">ap_server_root<pos:position pos:line="55" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="50">sizeof<argument_list pos:line="55" pos:column="56">(<argument><expr><name pos:line="55" pos:column="57">ap_coredump_dir<pos:position pos:line="55" pos:column="72"/></name></expr></argument>)<pos:position pos:line="55" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="75"/></expr_stmt>

    <comment type="block" pos:line="57" pos:column="5">/* we need to know ServerLimit and ThreadLimit before we start processing
     * the tree because we need to already have allocated child_info_table
     */</comment>
    <for pos:line="60" pos:column="5">for <control pos:line="60" pos:column="9">(<init><expr><name pos:line="60" pos:column="10">pdir<pos:position pos:line="60" pos:column="14"/></name> <operator pos:line="60" pos:column="15">=<pos:position pos:line="60" pos:column="16"/></operator> <name pos:line="60" pos:column="17">ap_conftree<pos:position pos:line="60" pos:column="28"/></name></expr>;<pos:position pos:line="60" pos:column="29"/></init> <condition><expr><name pos:line="60" pos:column="30">pdir<pos:position pos:line="60" pos:column="34"/></name> <operator pos:line="60" pos:column="35">!=<pos:position pos:line="60" pos:column="37"/></operator> <name pos:line="60" pos:column="38">NULL<pos:position pos:line="60" pos:column="42"/></name></expr>;<pos:position pos:line="60" pos:column="43"/></condition> <incr><expr><name pos:line="60" pos:column="44">pdir<pos:position pos:line="60" pos:column="48"/></name> <operator pos:line="60" pos:column="49">=<pos:position pos:line="60" pos:column="50"/></operator> <name><name pos:line="60" pos:column="51">pdir<pos:position pos:line="60" pos:column="55"/></name><operator pos:line="60" pos:column="55">-&gt;<pos:position pos:line="60" pos:column="60"/></operator><name pos:line="60" pos:column="57">next<pos:position pos:line="60" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="60" pos:column="62"/></control> <block pos:line="60" pos:column="63">{
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">!<pos:position pos:line="61" pos:column="14"/></operator><call><name pos:line="61" pos:column="14">strcasecmp<pos:position pos:line="61" pos:column="24"/></name><argument_list pos:line="61" pos:column="24">(<argument><expr><name><name pos:line="61" pos:column="25">pdir<pos:position pos:line="61" pos:column="29"/></name><operator pos:line="61" pos:column="29">-&gt;<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="31">directive<pos:position pos:line="61" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="42">"ServerLimit"<pos:position pos:line="61" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="57"/></condition><then pos:line="61" pos:column="57"> <block pos:line="61" pos:column="58">{
            <if pos:line="62" pos:column="13">if <condition pos:line="62" pos:column="16">(<expr><call><name pos:line="62" pos:column="17">atoi<pos:position pos:line="62" pos:column="21"/></name><argument_list pos:line="62" pos:column="21">(<argument><expr><name><name pos:line="62" pos:column="22">pdir<pos:position pos:line="62" pos:column="26"/></name><operator pos:line="62" pos:column="26">-&gt;<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="28">args<pos:position pos:line="62" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="33"/></argument_list></call> <operator pos:line="62" pos:column="34">&gt;<pos:position pos:line="62" pos:column="38"/></operator> <name pos:line="62" pos:column="36">tmp_server_limit<pos:position pos:line="62" pos:column="52"/></name></expr>)<pos:position pos:line="62" pos:column="53"/></condition><then pos:line="62" pos:column="53"> <block pos:line="62" pos:column="54">{
                <expr_stmt><expr><name pos:line="63" pos:column="17">tmp_server_limit<pos:position pos:line="63" pos:column="33"/></name> <operator pos:line="63" pos:column="34">=<pos:position pos:line="63" pos:column="35"/></operator> <call><name pos:line="63" pos:column="36">atoi<pos:position pos:line="63" pos:column="40"/></name><argument_list pos:line="63" pos:column="40">(<argument><expr><name><name pos:line="63" pos:column="41">pdir<pos:position pos:line="63" pos:column="45"/></name><operator pos:line="63" pos:column="45">-&gt;<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="47">args<pos:position pos:line="63" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="53"/></expr_stmt>
                <if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><name pos:line="64" pos:column="21">tmp_server_limit<pos:position pos:line="64" pos:column="37"/></name> <operator pos:line="64" pos:column="38">&gt;<pos:position pos:line="64" pos:column="42"/></operator> <name pos:line="64" pos:column="40">MAX_SERVER_LIMIT<pos:position pos:line="64" pos:column="56"/></name></expr>)<pos:position pos:line="64" pos:column="57"/></condition><then pos:line="64" pos:column="57"> <block pos:line="64" pos:column="58">{
                    <expr_stmt><expr><name pos:line="65" pos:column="21">tmp_server_limit<pos:position pos:line="65" pos:column="37"/></name> <operator pos:line="65" pos:column="38">=<pos:position pos:line="65" pos:column="39"/></operator> <name pos:line="65" pos:column="40">MAX_SERVER_LIMIT<pos:position pos:line="65" pos:column="56"/></name></expr>;<pos:position pos:line="65" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="66" pos:column="18"/></block></then></if>
            }<pos:position pos:line="67" pos:column="14"/></block></then></if>
        }<pos:position pos:line="68" pos:column="10"/></block></then>
        <elseif pos:line="69" pos:column="9">else <if pos:line="69" pos:column="14">if <condition pos:line="69" pos:column="17">(<expr><operator pos:line="69" pos:column="18">!<pos:position pos:line="69" pos:column="19"/></operator><call><name pos:line="69" pos:column="19">strcasecmp<pos:position pos:line="69" pos:column="29"/></name><argument_list pos:line="69" pos:column="29">(<argument><expr><name><name pos:line="69" pos:column="30">pdir<pos:position pos:line="69" pos:column="34"/></name><operator pos:line="69" pos:column="34">-&gt;<pos:position pos:line="69" pos:column="39"/></operator><name pos:line="69" pos:column="36">directive<pos:position pos:line="69" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="47">"ThreadLimit"<pos:position pos:line="69" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="62"/></condition><then pos:line="69" pos:column="62"> <block pos:line="69" pos:column="63">{
            <if pos:line="70" pos:column="13">if <condition pos:line="70" pos:column="16">(<expr><call><name pos:line="70" pos:column="17">atoi<pos:position pos:line="70" pos:column="21"/></name><argument_list pos:line="70" pos:column="21">(<argument><expr><name><name pos:line="70" pos:column="22">pdir<pos:position pos:line="70" pos:column="26"/></name><operator pos:line="70" pos:column="26">-&gt;<pos:position pos:line="70" pos:column="31"/></operator><name pos:line="70" pos:column="28">args<pos:position pos:line="70" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="33"/></argument_list></call> <operator pos:line="70" pos:column="34">&gt;<pos:position pos:line="70" pos:column="38"/></operator> <name pos:line="70" pos:column="36">tmp_thread_limit<pos:position pos:line="70" pos:column="52"/></name></expr>)<pos:position pos:line="70" pos:column="53"/></condition><then pos:line="70" pos:column="53"> <block pos:line="70" pos:column="54">{
                <expr_stmt><expr><name pos:line="71" pos:column="17">tmp_thread_limit<pos:position pos:line="71" pos:column="33"/></name> <operator pos:line="71" pos:column="34">=<pos:position pos:line="71" pos:column="35"/></operator> <call><name pos:line="71" pos:column="36">atoi<pos:position pos:line="71" pos:column="40"/></name><argument_list pos:line="71" pos:column="40">(<argument><expr><name><name pos:line="71" pos:column="41">pdir<pos:position pos:line="71" pos:column="45"/></name><operator pos:line="71" pos:column="45">-&gt;<pos:position pos:line="71" pos:column="50"/></operator><name pos:line="71" pos:column="47">args<pos:position pos:line="71" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="53"/></expr_stmt>
                <if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><name pos:line="72" pos:column="21">tmp_thread_limit<pos:position pos:line="72" pos:column="37"/></name> <operator pos:line="72" pos:column="38">&gt;<pos:position pos:line="72" pos:column="42"/></operator> <name pos:line="72" pos:column="40">MAX_THREAD_LIMIT<pos:position pos:line="72" pos:column="56"/></name></expr>)<pos:position pos:line="72" pos:column="57"/></condition><then pos:line="72" pos:column="57"> <block pos:line="72" pos:column="58">{
                    <expr_stmt><expr><name pos:line="73" pos:column="21">tmp_thread_limit<pos:position pos:line="73" pos:column="37"/></name> <operator pos:line="73" pos:column="38">=<pos:position pos:line="73" pos:column="39"/></operator> <name pos:line="73" pos:column="40">MAX_THREAD_LIMIT<pos:position pos:line="73" pos:column="56"/></name></expr>;<pos:position pos:line="73" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="74" pos:column="18"/></block></then></if>
            }<pos:position pos:line="75" pos:column="14"/></block></then></if>
        }<pos:position pos:line="76" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="77" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="79" pos:column="5">child_info_table<pos:position pos:line="79" pos:column="21"/></name> <operator pos:line="79" pos:column="22">=<pos:position pos:line="79" pos:column="23"/></operator> <operator pos:line="79" pos:column="24">(<pos:position pos:line="79" pos:column="25"/></operator><name pos:line="79" pos:column="25">child_info_t<pos:position pos:line="79" pos:column="37"/></name> <operator pos:line="79" pos:column="38">*<pos:position pos:line="79" pos:column="39"/></operator><operator pos:line="79" pos:column="39">)<pos:position pos:line="79" pos:column="40"/></operator><call><name pos:line="79" pos:column="40">apr_pcalloc<pos:position pos:line="79" pos:column="51"/></name><argument_list pos:line="79" pos:column="51">(<argument><expr><name pos:line="79" pos:column="52">p<pos:position pos:line="79" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="55">tmp_server_limit<pos:position pos:line="79" pos:column="71"/></name> <operator pos:line="79" pos:column="72">*<pos:position pos:line="79" pos:column="73"/></operator> <sizeof pos:line="79" pos:column="74">sizeof<argument_list pos:line="79" pos:column="80">(<argument><expr><name pos:line="79" pos:column="81">child_info_t<pos:position pos:line="79" pos:column="93"/></name></expr></argument>)<pos:position pos:line="79" pos:column="94"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="79" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="96"/></expr_stmt>
    <for pos:line="80" pos:column="5">for <control pos:line="80" pos:column="9">(<init><expr><name pos:line="80" pos:column="10">i<pos:position pos:line="80" pos:column="11"/></name> <operator pos:line="80" pos:column="12">=<pos:position pos:line="80" pos:column="13"/></operator> <literal type="number" pos:line="80" pos:column="14">0<pos:position pos:line="80" pos:column="15"/></literal></expr>;<pos:position pos:line="80" pos:column="16"/></init> <condition><expr><name pos:line="80" pos:column="17">i<pos:position pos:line="80" pos:column="18"/></name> <operator pos:line="80" pos:column="19">&lt;<pos:position pos:line="80" pos:column="23"/></operator> <name pos:line="80" pos:column="21">tmp_server_limit<pos:position pos:line="80" pos:column="37"/></name></expr>;<pos:position pos:line="80" pos:column="38"/></condition> <incr><expr><name pos:line="80" pos:column="39">i<pos:position pos:line="80" pos:column="40"/></name><operator pos:line="80" pos:column="40">++<pos:position pos:line="80" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="80" pos:column="43"/></control> <block pos:line="80" pos:column="44">{
        <expr_stmt><expr><name><name pos:line="81" pos:column="9">child_info_table<pos:position pos:line="81" pos:column="25"/></name><index pos:line="81" pos:column="25">[<expr><name pos:line="81" pos:column="26">i<pos:position pos:line="81" pos:column="27"/></name></expr>]<pos:position pos:line="81" pos:column="28"/></index></name><operator pos:line="81" pos:column="28">.<pos:position pos:line="81" pos:column="29"/></operator><name pos:line="81" pos:column="29">uid<pos:position pos:line="81" pos:column="32"/></name> <operator pos:line="81" pos:column="33">=<pos:position pos:line="81" pos:column="34"/></operator> <operator pos:line="81" pos:column="35">-<pos:position pos:line="81" pos:column="36"/></operator><literal type="number" pos:line="81" pos:column="36">1<pos:position pos:line="81" pos:column="37"/></literal></expr>;<pos:position pos:line="81" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="82" pos:column="9">child_info_table<pos:position pos:line="82" pos:column="25"/></name><index pos:line="82" pos:column="25">[<expr><name pos:line="82" pos:column="26">i<pos:position pos:line="82" pos:column="27"/></name></expr>]<pos:position pos:line="82" pos:column="28"/></index></name><operator pos:line="82" pos:column="28">.<pos:position pos:line="82" pos:column="29"/></operator><name pos:line="82" pos:column="29">gid<pos:position pos:line="82" pos:column="32"/></name> <operator pos:line="82" pos:column="33">=<pos:position pos:line="82" pos:column="34"/></operator> <operator pos:line="82" pos:column="35">-<pos:position pos:line="82" pos:column="36"/></operator><literal type="number" pos:line="82" pos:column="36">1<pos:position pos:line="82" pos:column="37"/></literal></expr>;<pos:position pos:line="82" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="83" pos:column="9">child_info_table<pos:position pos:line="83" pos:column="25"/></name><index pos:line="83" pos:column="25">[<expr><name pos:line="83" pos:column="26">i<pos:position pos:line="83" pos:column="27"/></name></expr>]<pos:position pos:line="83" pos:column="28"/></index></name><operator pos:line="83" pos:column="28">.<pos:position pos:line="83" pos:column="29"/></operator><name pos:line="83" pos:column="29">input<pos:position pos:line="83" pos:column="34"/></name> <operator pos:line="83" pos:column="35">=<pos:position pos:line="83" pos:column="36"/></operator> <operator pos:line="83" pos:column="37">-<pos:position pos:line="83" pos:column="38"/></operator><literal type="number" pos:line="83" pos:column="38">1<pos:position pos:line="83" pos:column="39"/></literal></expr>;<pos:position pos:line="83" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="84" pos:column="9">child_info_table<pos:position pos:line="84" pos:column="25"/></name><index pos:line="84" pos:column="25">[<expr><name pos:line="84" pos:column="26">i<pos:position pos:line="84" pos:column="27"/></name></expr>]<pos:position pos:line="84" pos:column="28"/></index></name><operator pos:line="84" pos:column="28">.<pos:position pos:line="84" pos:column="29"/></operator><name pos:line="84" pos:column="29">output<pos:position pos:line="84" pos:column="35"/></name> <operator pos:line="84" pos:column="36">=<pos:position pos:line="84" pos:column="37"/></operator> <operator pos:line="84" pos:column="38">-<pos:position pos:line="84" pos:column="39"/></operator><literal type="number" pos:line="84" pos:column="39">1<pos:position pos:line="84" pos:column="40"/></literal></expr>;<pos:position pos:line="84" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block></for>

    <return pos:line="87" pos:column="5">return <expr><name pos:line="87" pos:column="12">OK<pos:position pos:line="87" pos:column="14"/></name></expr>;<pos:position pos:line="87" pos:column="15"/></return>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

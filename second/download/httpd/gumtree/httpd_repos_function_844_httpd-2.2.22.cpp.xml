<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_844_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">shmcb_subcache_remove<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">server_rec<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">s<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">SHMCBHeader<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">header<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">SHMCBSubcache<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">subcache<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">UCHAR<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">id<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="46">unsigned<pos:position pos:line="3" pos:column="54"/></name> <name pos:line="3" pos:column="55">int<pos:position pos:line="3" pos:column="58"/></name></type> <name pos:line="3" pos:column="59">idlen<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="65"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">int<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">pos<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">int<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">loop<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">BOOL<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">to_return<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">FALSE<pos:position pos:line="7" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* Unlike the others, we don't do an expire-run first. This is to keep
     * consistent statistics where a "remove" operation may actually be the
     * higher layer spotting an expiry issue prior to us. Our caller is
     * handling stats, so a failure return would be inconsistent if the
     * intended session was in fact removed by an expiry run. */</comment>

    <expr_stmt><expr><name pos:line="15" pos:column="5">pos<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <name><name pos:line="15" pos:column="11">subcache<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">-&gt;<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="21">idx_pos<pos:position pos:line="15" pos:column="28"/></name></name></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
    <while pos:line="16" pos:column="5">while <condition pos:line="16" pos:column="11">(<expr><operator pos:line="16" pos:column="12">!<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">to_return<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">&amp;&amp;<pos:position pos:line="16" pos:column="33"/></operator> <operator pos:line="16" pos:column="26">(<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">loop<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">&lt;<pos:position pos:line="16" pos:column="36"/></operator> <name><name pos:line="16" pos:column="34">subcache<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">-&gt;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="44">idx_used<pos:position pos:line="16" pos:column="52"/></name></name><operator pos:line="16" pos:column="52">)<pos:position pos:line="16" pos:column="53"/></operator></expr>)<pos:position pos:line="16" pos:column="54"/></condition> <block pos:line="16" pos:column="55">{
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">SHMCBIndex<pos:position pos:line="17" pos:column="19"/></name> <modifier pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></modifier></type><name pos:line="17" pos:column="21">idx<pos:position pos:line="17" pos:column="24"/></name> <init pos:line="17" pos:column="25">= <expr><call><name pos:line="17" pos:column="27">SHMCB_INDEX<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">subcache<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">pos<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="54"/></decl_stmt>
        <comment type="block" pos:line="18" pos:column="9">/* Only consider 'idx' if the s_id2 byte matches and it's not already
         * removed - easiest way to avoid costly ASN decodings. */</comment>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">(<pos:position pos:line="20" pos:column="14"/></operator><name><name pos:line="20" pos:column="14">idx<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">s_id2<pos:position pos:line="20" pos:column="24"/></name></name> <operator pos:line="20" pos:column="25">==<pos:position pos:line="20" pos:column="27"/></operator> <name><name pos:line="20" pos:column="28">id<pos:position pos:line="20" pos:column="30"/></name><index pos:line="20" pos:column="30">[<expr><literal type="number" pos:line="20" pos:column="31">1<pos:position pos:line="20" pos:column="32"/></literal></expr>]<pos:position pos:line="20" pos:column="33"/></index></name><operator pos:line="20" pos:column="33">)<pos:position pos:line="20" pos:column="34"/></operator> <operator pos:line="20" pos:column="35">&amp;&amp;<pos:position pos:line="20" pos:column="45"/></operator> <operator pos:line="20" pos:column="38">!<pos:position pos:line="20" pos:column="39"/></operator><name><name pos:line="20" pos:column="39">idx<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">removed<pos:position pos:line="20" pos:column="51"/></name></name></expr>)<pos:position pos:line="20" pos:column="52"/></condition><then pos:line="20" pos:column="52"> <block pos:line="20" pos:column="53">{
            <decl_stmt><decl><type><name pos:line="21" pos:column="13">SSL_SESSION<pos:position pos:line="21" pos:column="24"/></name> <modifier pos:line="21" pos:column="25">*<pos:position pos:line="21" pos:column="26"/></modifier></type><name pos:line="21" pos:column="26">pSession<pos:position pos:line="21" pos:column="34"/></name></decl>;<pos:position pos:line="21" pos:column="35"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">unsigned<pos:position pos:line="22" pos:column="21"/></name> <name pos:line="22" pos:column="22">char<pos:position pos:line="22" pos:column="26"/></name> <modifier pos:line="22" pos:column="27">*<pos:position pos:line="22" pos:column="28"/></modifier></type><name pos:line="22" pos:column="28">s_id<pos:position pos:line="22" pos:column="32"/></name></decl>;<pos:position pos:line="22" pos:column="33"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">unsigned<pos:position pos:line="23" pos:column="21"/></name> <name pos:line="23" pos:column="22">int<pos:position pos:line="23" pos:column="25"/></name></type> <name pos:line="23" pos:column="26">s_idlen<pos:position pos:line="23" pos:column="33"/></name></decl>;<pos:position pos:line="23" pos:column="34"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="24" pos:column="13">unsigned<pos:position pos:line="24" pos:column="21"/></name> <name pos:line="24" pos:column="22">char<pos:position pos:line="24" pos:column="26"/></name></type> <name><name pos:line="24" pos:column="27">tempasn<pos:position pos:line="24" pos:column="34"/></name><index pos:line="24" pos:column="34">[<expr><name pos:line="24" pos:column="35">SSL_SESSION_MAX_DER<pos:position pos:line="24" pos:column="54"/></name></expr>]<pos:position pos:line="24" pos:column="55"/></index></name></decl>;<pos:position pos:line="24" pos:column="56"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="25" pos:column="13">MODSSL_D2I_SSL_SESSION_CONST<pos:position pos:line="25" pos:column="41"/></name> <name pos:line="25" pos:column="42">unsigned<pos:position pos:line="25" pos:column="50"/></name> <name pos:line="25" pos:column="51">char<pos:position pos:line="25" pos:column="55"/></name> <modifier pos:line="25" pos:column="56">*<pos:position pos:line="25" pos:column="57"/></modifier></type><name pos:line="25" pos:column="57">ptr<pos:position pos:line="25" pos:column="60"/></name> <init pos:line="25" pos:column="61">= <expr><name pos:line="25" pos:column="63">tempasn<pos:position pos:line="25" pos:column="70"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="71"/></decl_stmt>

            <expr_stmt><expr><call><name pos:line="27" pos:column="13">ap_log_error<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name pos:line="27" pos:column="26">APLOG_MARK<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="38">APLOG_DEBUG<pos:position pos:line="27" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="51">0<pos:position pos:line="27" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="54">s<pos:position pos:line="27" pos:column="55"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="28" pos:column="26">"possible match at idx=%d, data=%d"<pos:position pos:line="28" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="63">pos<pos:position pos:line="28" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="68">idx<pos:position pos:line="28" pos:column="71"/></name><operator pos:line="28" pos:column="71">-&gt;<pos:position pos:line="28" pos:column="76"/></operator><name pos:line="28" pos:column="73">data_pos<pos:position pos:line="28" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="83"/></expr_stmt>
            <comment type="block" pos:line="29" pos:column="13">/* Copy the data */</comment>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">shmcb_cyclic_cton_memcpy<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><name><name pos:line="30" pos:column="38">header<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">-&gt;<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="46">subcache_data_size<pos:position pos:line="30" pos:column="64"/></name></name></expr></argument>,
                                     <argument><expr><name pos:line="31" pos:column="38">tempasn<pos:position pos:line="31" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="47">SHMCB_DATA<pos:position pos:line="31" pos:column="57"/></name><argument_list pos:line="31" pos:column="57">(<argument><expr><name pos:line="31" pos:column="58">header<pos:position pos:line="31" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="66">subcache<pos:position pos:line="31" pos:column="74"/></name></expr></argument>)<pos:position pos:line="31" pos:column="75"/></argument_list></call></expr></argument>,
                                     <argument><expr><name><name pos:line="32" pos:column="38">idx<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">-&gt;<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="43">data_pos<pos:position pos:line="32" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="53">idx<pos:position pos:line="32" pos:column="56"/></name><operator pos:line="32" pos:column="56">-&gt;<pos:position pos:line="32" pos:column="61"/></operator><name pos:line="32" pos:column="58">data_used<pos:position pos:line="32" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="69"/></expr_stmt>
            <comment type="block" pos:line="33" pos:column="13">/* Decode the session */</comment>
            <expr_stmt><expr><name pos:line="34" pos:column="13">pSession<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <call><name pos:line="34" pos:column="24">d2i_SSL_SESSION<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">NULL<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="46">&amp;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="47">ptr<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="52">idx<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">-&gt;<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="57">data_used<pos:position pos:line="34" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="68"/></expr_stmt>
            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><operator pos:line="35" pos:column="17">!<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">pSession<pos:position pos:line="35" pos:column="26"/></name></expr>)<pos:position pos:line="35" pos:column="27"/></condition><then pos:line="35" pos:column="27"> <block pos:line="35" pos:column="28">{
                <expr_stmt><expr><call><name pos:line="36" pos:column="17">ap_log_error<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name pos:line="36" pos:column="30">APLOG_MARK<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="42">APLOG_ERR<pos:position pos:line="36" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="53">0<pos:position pos:line="36" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="56">s<pos:position pos:line="36" pos:column="57"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="37" pos:column="30">"shmcb_subcache_remove internal error"<pos:position pos:line="37" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="70"/></expr_stmt>
                <return pos:line="38" pos:column="17">return <expr><name pos:line="38" pos:column="24">FALSE<pos:position pos:line="38" pos:column="29"/></name></expr>;<pos:position pos:line="38" pos:column="30"/></return>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="40" pos:column="13">s_id<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <call><name pos:line="40" pos:column="20">SSL_SESSION_get_session_id<pos:position pos:line="40" pos:column="46"/></name><argument_list pos:line="40" pos:column="46">(<argument><expr><name pos:line="40" pos:column="47">pSession<pos:position pos:line="40" pos:column="55"/></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name pos:line="41" pos:column="13">s_idlen<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <call><name pos:line="41" pos:column="23">SSL_SESSION_get_session_id_length<pos:position pos:line="41" pos:column="56"/></name><argument_list pos:line="41" pos:column="56">(<argument><expr><name pos:line="41" pos:column="57">pSession<pos:position pos:line="41" pos:column="65"/></name></expr></argument>)<pos:position pos:line="41" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="67"/></expr_stmt>
            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><name pos:line="42" pos:column="17">s_idlen<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">==<pos:position pos:line="42" pos:column="27"/></operator> <name pos:line="42" pos:column="28">idlen<pos:position pos:line="42" pos:column="33"/></name> <operator pos:line="42" pos:column="34">&amp;&amp;<pos:position pos:line="42" pos:column="44"/></operator> <call><name pos:line="42" pos:column="37">memcmp<pos:position pos:line="42" pos:column="43"/></name><argument_list pos:line="42" pos:column="43">(<argument><expr><name pos:line="42" pos:column="44">s_id<pos:position pos:line="42" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="50">id<pos:position pos:line="42" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="54">idlen<pos:position pos:line="42" pos:column="59"/></name></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call> <operator pos:line="42" pos:column="61">==<pos:position pos:line="42" pos:column="63"/></operator> <literal type="number" pos:line="42" pos:column="64">0<pos:position pos:line="42" pos:column="65"/></literal></expr>)<pos:position pos:line="42" pos:column="66"/></condition><then pos:line="42" pos:column="66"> <block pos:line="42" pos:column="67">{
                <comment type="block" pos:line="43" pos:column="17">/* Found the matching session, remove it quietly. */</comment>
                <expr_stmt><expr><name><name pos:line="44" pos:column="17">idx<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">-&gt;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="22">removed<pos:position pos:line="44" pos:column="29"/></name></name> <operator pos:line="44" pos:column="30">=<pos:position pos:line="44" pos:column="31"/></operator> <literal type="number" pos:line="44" pos:column="32">1<pos:position pos:line="44" pos:column="33"/></literal></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><name pos:line="45" pos:column="17">to_return<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">=<pos:position pos:line="45" pos:column="28"/></operator> <name pos:line="45" pos:column="29">TRUE<pos:position pos:line="45" pos:column="33"/></name></expr>;<pos:position pos:line="45" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="46" pos:column="17">ap_log_error<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><name pos:line="46" pos:column="30">APLOG_MARK<pos:position pos:line="46" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="42">APLOG_DEBUG<pos:position pos:line="46" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="55">0<pos:position pos:line="46" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="58">s<pos:position pos:line="46" pos:column="59"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="47" pos:column="30">"shmcb_subcache_remove removing matching session"<pos:position pos:line="47" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="81"/></expr_stmt>
            }<pos:position pos:line="48" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">SSL_SESSION_free<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><name pos:line="49" pos:column="30">pSession<pos:position pos:line="49" pos:column="38"/></name></expr></argument>)<pos:position pos:line="49" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="51" pos:column="9">/* Increment */</comment>
        <expr_stmt><expr><name pos:line="52" pos:column="9">loop<pos:position pos:line="52" pos:column="13"/></name><operator pos:line="52" pos:column="13">++<pos:position pos:line="52" pos:column="15"/></operator></expr>;<pos:position pos:line="52" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name pos:line="53" pos:column="9">pos<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <call><name pos:line="53" pos:column="15">SHMCB_CYCLIC_INCREMENT<pos:position pos:line="53" pos:column="37"/></name><argument_list pos:line="53" pos:column="37">(<argument><expr><name pos:line="53" pos:column="38">pos<pos:position pos:line="53" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="43">1<pos:position pos:line="53" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="46">header<pos:position pos:line="53" pos:column="52"/></name><operator pos:line="53" pos:column="52">-&gt;<pos:position pos:line="53" pos:column="57"/></operator><name pos:line="53" pos:column="54">index_num<pos:position pos:line="53" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></while>

    <return pos:line="56" pos:column="5">return <expr><name pos:line="56" pos:column="12">to_return<pos:position pos:line="56" pos:column="21"/></name></expr>;<pos:position pos:line="56" pos:column="22"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3608_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">compare_left<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">char<pos:position pos:line="2" pos:column="18"/></name> <specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">a<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">b<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
     <comment type="block" pos:line="4" pos:column="6">/* Compare two left-aligned numbers: the first to have a
        different value wins. */</comment>
     <for pos:line="6" pos:column="6">for <control pos:line="6" pos:column="10">(<init pos:line="6" pos:column="11">;<pos:position pos:line="6" pos:column="12"/></init><condition pos:line="6" pos:column="12">;<pos:position pos:line="6" pos:column="13"/></condition> <incr><expr><name pos:line="6" pos:column="14">a<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">++<pos:position pos:line="6" pos:column="17"/></operator></expr><operator pos:line="6" pos:column="17">,<pos:position pos:line="6" pos:column="18"/></operator> <expr><name pos:line="6" pos:column="19">b<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">++<pos:position pos:line="6" pos:column="22"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="23"/></control> <block pos:line="6" pos:column="24">{
	  <if pos:line="7" pos:column="11">if <condition pos:line="7" pos:column="14">(<expr><operator pos:line="7" pos:column="15">!<pos:position pos:line="7" pos:column="16"/></operator><call><name pos:line="7" pos:column="16">apr_isdigit<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><operator pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">a<pos:position pos:line="7" pos:column="30"/></name></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call>  <operator pos:line="7" pos:column="33">&amp;&amp;<pos:position pos:line="7" pos:column="43"/></operator>  <operator pos:line="7" pos:column="37">!<pos:position pos:line="7" pos:column="38"/></operator><call><name pos:line="7" pos:column="38">apr_isdigit<pos:position pos:line="7" pos:column="49"/></name><argument_list pos:line="7" pos:column="49">(<argument><expr><operator pos:line="7" pos:column="50">*<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="51">b<pos:position pos:line="7" pos:column="52"/></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="54"/></condition><then pos:line="7" pos:column="54">
	       <block type="pseudo"><break pos:line="8" pos:column="16">break;<pos:position pos:line="8" pos:column="22"/></break></block></then>
	  <elseif pos:line="9" pos:column="11">else <if pos:line="9" pos:column="16">if <condition pos:line="9" pos:column="19">(<expr><operator pos:line="9" pos:column="20">!<pos:position pos:line="9" pos:column="21"/></operator><call><name pos:line="9" pos:column="21">apr_isdigit<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><operator pos:line="9" pos:column="33">*<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="34">a<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37">
	       <block type="pseudo"><return pos:line="10" pos:column="16">return <expr><operator pos:line="10" pos:column="23">-<pos:position pos:line="10" pos:column="24"/></operator><literal type="number" pos:line="10" pos:column="24">1<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return></block></then></if></elseif>
	  <elseif pos:line="11" pos:column="11">else <if pos:line="11" pos:column="16">if <condition pos:line="11" pos:column="19">(<expr><operator pos:line="11" pos:column="20">!<pos:position pos:line="11" pos:column="21"/></operator><call><name pos:line="11" pos:column="21">apr_isdigit<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><operator pos:line="11" pos:column="33">*<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="34">b<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37">
	       <block type="pseudo"><return pos:line="12" pos:column="16">return <expr><operator pos:line="12" pos:column="23">+<pos:position pos:line="12" pos:column="24"/></operator><literal type="number" pos:line="12" pos:column="24">1<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if></elseif>
	  <elseif pos:line="13" pos:column="11">else <if pos:line="13" pos:column="16">if <condition pos:line="13" pos:column="19">(<expr><operator pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">a<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <operator pos:line="13" pos:column="25">*<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">b<pos:position pos:line="13" pos:column="27"/></name></expr>)<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28">
	       <block type="pseudo"><return pos:line="14" pos:column="16">return <expr><operator pos:line="14" pos:column="23">-<pos:position pos:line="14" pos:column="24"/></operator><literal type="number" pos:line="14" pos:column="24">1<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return></block></then></if></elseif>
	  <elseif pos:line="15" pos:column="11">else <if pos:line="15" pos:column="16">if <condition pos:line="15" pos:column="19">(<expr><operator pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">a<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&gt;<pos:position pos:line="15" pos:column="27"/></operator> <operator pos:line="15" pos:column="25">*<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">b<pos:position pos:line="15" pos:column="27"/></name></expr>)<pos:position pos:line="15" pos:column="28"/></condition><then pos:line="15" pos:column="28">
	       <block type="pseudo"><return pos:line="16" pos:column="16">return <expr><operator pos:line="16" pos:column="23">+<pos:position pos:line="16" pos:column="24"/></operator><literal type="number" pos:line="16" pos:column="24">1<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></return></block></then></if></elseif></if>
     }<pos:position pos:line="17" pos:column="7"/></block></for>
	  
     <return pos:line="19" pos:column="6">return <expr><literal type="number" pos:line="19" pos:column="13">0<pos:position pos:line="19" pos:column="14"/></literal></expr>;<pos:position pos:line="19" pos:column="15"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

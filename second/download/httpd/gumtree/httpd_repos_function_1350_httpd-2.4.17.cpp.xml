<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1350_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">shmcb_cyclic_cton_memcpy<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">unsigned<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">buf_size<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">unsigned<pos:position pos:line="1" pos:column="69"/></name> <name pos:line="1" pos:column="70">char<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">dest<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>,
                                     <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">unsigned<pos:position pos:line="2" pos:column="52"/></name> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">data<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="65">unsigned<pos:position pos:line="2" pos:column="73"/></name> <name pos:line="2" pos:column="74">int<pos:position pos:line="2" pos:column="77"/></name></type> <name pos:line="2" pos:column="78">src_offset<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="3" pos:column="38">unsigned<pos:position pos:line="3" pos:column="46"/></name> <name pos:line="3" pos:column="47">int<pos:position pos:line="3" pos:column="50"/></name></type> <name pos:line="3" pos:column="51">src_len<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="59"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">src_offset<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">+<pos:position pos:line="5" pos:column="21"/></operator> <name pos:line="5" pos:column="22">src_len<pos:position pos:line="5" pos:column="29"/></name> <operator pos:line="5" pos:column="30">&lt;<pos:position pos:line="5" pos:column="34"/></operator> <name pos:line="5" pos:column="32">buf_size<pos:position pos:line="5" pos:column="40"/></name></expr>)<pos:position pos:line="5" pos:column="41"/></condition><then pos:line="5" pos:column="41">
        <comment type="block" pos:line="6" pos:column="9">/* It be copied all in one go */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">memcpy<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">dest<pos:position pos:line="7" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="22">data<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">+<pos:position pos:line="7" pos:column="28"/></operator> <name pos:line="7" pos:column="29">src_offset<pos:position pos:line="7" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="41">src_len<pos:position pos:line="7" pos:column="48"/></name></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="50"/></expr_stmt></block></then>
    <else pos:line="8" pos:column="5">else <block pos:line="8" pos:column="10">{
        <comment type="block" pos:line="9" pos:column="9">/* Copy the two splits */</comment>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">memcpy<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">dest<pos:position pos:line="10" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="22">data<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">+<pos:position pos:line="10" pos:column="28"/></operator> <name pos:line="10" pos:column="29">src_offset<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">buf_size<pos:position pos:line="10" pos:column="49"/></name> <operator pos:line="10" pos:column="50">-<pos:position pos:line="10" pos:column="51"/></operator> <name pos:line="10" pos:column="52">src_offset<pos:position pos:line="10" pos:column="62"/></name></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">memcpy<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">dest<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">+<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">buf_size<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">-<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="34">src_offset<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">data<pos:position pos:line="11" pos:column="50"/></name></expr></argument>,
               <argument><expr><name pos:line="12" pos:column="16">src_len<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">+<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">src_offset<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">-<pos:position pos:line="12" pos:column="38"/></operator> <name pos:line="12" pos:column="39">buf_size<pos:position pos:line="12" pos:column="47"/></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></else></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

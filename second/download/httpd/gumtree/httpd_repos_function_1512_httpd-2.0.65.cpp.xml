<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1512_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cleanup_cache_object<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">cache_object_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">obj<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">mem_cache_object_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">mobj<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name><name pos:line="3" pos:column="32">obj<pos:position pos:line="3" pos:column="35"/></name><operator pos:line="3" pos:column="35">-&gt;<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="37">vobj<pos:position pos:line="3" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>

    <comment type="block" pos:line="5" pos:column="5">/* TODO:
     * We desperately need a more efficient way of allocating objects. We're
     * making way too many malloc calls to create a fully populated 
     * cache object...
     */</comment>

    <comment type="block" pos:line="11" pos:column="5">/* Cleanup the cache_object_t */</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">obj<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">key<pos:position pos:line="12" pos:column="17"/></name></name></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18"> <block pos:line="12" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">free<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name><name pos:line="13" pos:column="14">obj<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">key<pos:position pos:line="13" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">obj<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">info<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">.<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">content_type<pos:position pos:line="15" pos:column="31"/></name></name></expr>)<pos:position pos:line="15" pos:column="32"/></condition><then pos:line="15" pos:column="32"> <block pos:line="15" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">free<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><name><name pos:line="16" pos:column="14">obj<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">info<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">.<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">content_type<pos:position pos:line="16" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">obj<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">info<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">.<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">etag<pos:position pos:line="18" pos:column="23"/></name></name></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24"> <block pos:line="18" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">free<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><name><name pos:line="19" pos:column="14">obj<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">info<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">.<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">etag<pos:position pos:line="19" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">obj<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">info<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">.<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">lastmods<pos:position pos:line="21" pos:column="27"/></name></name></expr>)<pos:position pos:line="21" pos:column="28"/></condition><then pos:line="21" pos:column="28"> <block pos:line="21" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">free<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name><name pos:line="22" pos:column="14">obj<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">info<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">.<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">lastmods<pos:position pos:line="22" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">obj<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">info<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">.<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="19">filename<pos:position pos:line="24" pos:column="27"/></name></name></expr>)<pos:position pos:line="24" pos:column="28"/></condition><then pos:line="24" pos:column="28"> <block pos:line="24" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">free<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name><name pos:line="25" pos:column="14">obj<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">info<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">.<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="24">filename<pos:position pos:line="25" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">free<pos:position pos:line="28" pos:column="9"/></name><argument_list pos:line="28" pos:column="9">(<argument><expr><name pos:line="28" pos:column="10">obj<pos:position pos:line="28" pos:column="13"/></name></expr></argument>)<pos:position pos:line="28" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="15"/></expr_stmt>
    
    <comment type="block" pos:line="30" pos:column="5">/* Cleanup the mem_cache_object_t */</comment>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">mobj<pos:position pos:line="31" pos:column="13"/></name></expr>)<pos:position pos:line="31" pos:column="14"/></condition><then pos:line="31" pos:column="14"> <block pos:line="31" pos:column="15">{
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">mobj<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">type<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">==<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="27">CACHE_TYPE_HEAP<pos:position pos:line="32" pos:column="42"/></name> <operator pos:line="32" pos:column="43">&amp;&amp;<pos:position pos:line="32" pos:column="53"/></operator> <name><name pos:line="32" pos:column="46">mobj<pos:position pos:line="32" pos:column="50"/></name><operator pos:line="32" pos:column="50">-&gt;<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="52">m<pos:position pos:line="32" pos:column="53"/></name></name></expr>)<pos:position pos:line="32" pos:column="54"/></condition><then pos:line="32" pos:column="54"> <block pos:line="32" pos:column="55">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">free<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><name><name pos:line="33" pos:column="18">mobj<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">m<pos:position pos:line="33" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name><name pos:line="35" pos:column="13">mobj<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">-&gt;<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="19">type<pos:position pos:line="35" pos:column="23"/></name></name> <operator pos:line="35" pos:column="24">==<pos:position pos:line="35" pos:column="26"/></operator> <name pos:line="35" pos:column="27">CACHE_TYPE_FILE<pos:position pos:line="35" pos:column="42"/></name> <operator pos:line="35" pos:column="43">&amp;&amp;<pos:position pos:line="35" pos:column="53"/></operator> <name><name pos:line="35" pos:column="46">mobj<pos:position pos:line="35" pos:column="50"/></name><operator pos:line="35" pos:column="50">-&gt;<pos:position pos:line="35" pos:column="55"/></operator><name pos:line="35" pos:column="52">fd<pos:position pos:line="35" pos:column="54"/></name></name></expr>)<pos:position pos:line="35" pos:column="55"/></condition><then pos:line="35" pos:column="55"> <block pos:line="35" pos:column="56">{
<cpp:ifdef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">ifdef<pos:position pos:line="36" pos:column="7"/></cpp:directive> <name pos:line="36" pos:column="8">WIN32<pos:position pos:line="36" pos:column="13"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">CloseHandle<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><name><name pos:line="37" pos:column="25">mobj<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">-&gt;<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="31">fd<pos:position pos:line="37" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>
<cpp:else pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">else<pos:position pos:line="38" pos:column="6"/></cpp:directive></cpp:else>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">close<pos:position pos:line="39" pos:column="18"/></name><argument_list pos:line="39" pos:column="18">(<argument><expr><name><name pos:line="39" pos:column="19">mobj<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">-&gt;<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="25">fd<pos:position pos:line="39" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif<pos:position pos:line="40" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name><name pos:line="42" pos:column="13">mobj<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">-&gt;<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="19">header_out<pos:position pos:line="42" pos:column="29"/></name></name></expr>)<pos:position pos:line="42" pos:column="30"/></condition><then pos:line="42" pos:column="30"> <block pos:line="42" pos:column="31">{
            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><name><name pos:line="43" pos:column="17">mobj<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">-&gt;<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="23">header_out<pos:position pos:line="43" pos:column="33"/></name><index pos:line="43" pos:column="33">[<expr><literal type="number" pos:line="43" pos:column="34">0<pos:position pos:line="43" pos:column="35"/></literal></expr>]<pos:position pos:line="43" pos:column="36"/></index></name><operator pos:line="43" pos:column="36">.<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="37">hdr<pos:position pos:line="43" pos:column="40"/></name></expr>)<pos:position pos:line="43" pos:column="41"/></condition><then pos:line="43" pos:column="41"> 
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="17">free<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name><name pos:line="44" pos:column="22">mobj<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">-&gt;<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="28">header_out<pos:position pos:line="44" pos:column="38"/></name><index pos:line="44" pos:column="38">[<expr><literal type="number" pos:line="44" pos:column="39">0<pos:position pos:line="44" pos:column="40"/></literal></expr>]<pos:position pos:line="44" pos:column="41"/></index></name><operator pos:line="44" pos:column="41">.<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="42">hdr<pos:position pos:line="44" pos:column="45"/></name></expr></argument>)<pos:position pos:line="44" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="47"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">free<pos:position pos:line="45" pos:column="17"/></name><argument_list pos:line="45" pos:column="17">(<argument><expr><name><name pos:line="45" pos:column="18">mobj<pos:position pos:line="45" pos:column="22"/></name><operator pos:line="45" pos:column="22">-&gt;<pos:position pos:line="45" pos:column="27"/></operator><name pos:line="45" pos:column="24">header_out<pos:position pos:line="45" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name><name pos:line="47" pos:column="13">mobj<pos:position pos:line="47" pos:column="17"/></name><operator pos:line="47" pos:column="17">-&gt;<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="19">err_header_out<pos:position pos:line="47" pos:column="33"/></name></name></expr>)<pos:position pos:line="47" pos:column="34"/></condition><then pos:line="47" pos:column="34"> <block pos:line="47" pos:column="35">{
            <if pos:line="48" pos:column="13">if <condition pos:line="48" pos:column="16">(<expr><name><name pos:line="48" pos:column="17">mobj<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">-&gt;<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="23">err_header_out<pos:position pos:line="48" pos:column="37"/></name><index pos:line="48" pos:column="37">[<expr><literal type="number" pos:line="48" pos:column="38">0<pos:position pos:line="48" pos:column="39"/></literal></expr>]<pos:position pos:line="48" pos:column="40"/></index></name><operator pos:line="48" pos:column="40">.<pos:position pos:line="48" pos:column="41"/></operator><name pos:line="48" pos:column="41">hdr<pos:position pos:line="48" pos:column="44"/></name></expr>)<pos:position pos:line="48" pos:column="45"/></condition><then pos:line="48" pos:column="45"> 
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="17">free<pos:position pos:line="49" pos:column="21"/></name><argument_list pos:line="49" pos:column="21">(<argument><expr><name><name pos:line="49" pos:column="22">mobj<pos:position pos:line="49" pos:column="26"/></name><operator pos:line="49" pos:column="26">-&gt;<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="28">err_header_out<pos:position pos:line="49" pos:column="42"/></name><index pos:line="49" pos:column="42">[<expr><literal type="number" pos:line="49" pos:column="43">0<pos:position pos:line="49" pos:column="44"/></literal></expr>]<pos:position pos:line="49" pos:column="45"/></index></name><operator pos:line="49" pos:column="45">.<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="46">hdr<pos:position pos:line="49" pos:column="49"/></name></expr></argument>)<pos:position pos:line="49" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="51"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">free<pos:position pos:line="50" pos:column="17"/></name><argument_list pos:line="50" pos:column="17">(<argument><expr><name><name pos:line="50" pos:column="18">mobj<pos:position pos:line="50" pos:column="22"/></name><operator pos:line="50" pos:column="22">-&gt;<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="24">err_header_out<pos:position pos:line="50" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name><name pos:line="52" pos:column="13">mobj<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">-&gt;<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="19">subprocess_env<pos:position pos:line="52" pos:column="33"/></name></name></expr>)<pos:position pos:line="52" pos:column="34"/></condition><then pos:line="52" pos:column="34"> <block pos:line="52" pos:column="35">{
            <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><name><name pos:line="53" pos:column="17">mobj<pos:position pos:line="53" pos:column="21"/></name><operator pos:line="53" pos:column="21">-&gt;<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="23">subprocess_env<pos:position pos:line="53" pos:column="37"/></name><index pos:line="53" pos:column="37">[<expr><literal type="number" pos:line="53" pos:column="38">0<pos:position pos:line="53" pos:column="39"/></literal></expr>]<pos:position pos:line="53" pos:column="40"/></index></name><operator pos:line="53" pos:column="40">.<pos:position pos:line="53" pos:column="41"/></operator><name pos:line="53" pos:column="41">hdr<pos:position pos:line="53" pos:column="44"/></name></expr>)<pos:position pos:line="53" pos:column="45"/></condition><then pos:line="53" pos:column="45"> 
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="17">free<pos:position pos:line="54" pos:column="21"/></name><argument_list pos:line="54" pos:column="21">(<argument><expr><name><name pos:line="54" pos:column="22">mobj<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">-&gt;<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="28">subprocess_env<pos:position pos:line="54" pos:column="42"/></name><index pos:line="54" pos:column="42">[<expr><literal type="number" pos:line="54" pos:column="43">0<pos:position pos:line="54" pos:column="44"/></literal></expr>]<pos:position pos:line="54" pos:column="45"/></index></name><operator pos:line="54" pos:column="45">.<pos:position pos:line="54" pos:column="46"/></operator><name pos:line="54" pos:column="46">hdr<pos:position pos:line="54" pos:column="49"/></name></expr></argument>)<pos:position pos:line="54" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="51"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">free<pos:position pos:line="55" pos:column="17"/></name><argument_list pos:line="55" pos:column="17">(<argument><expr><name><name pos:line="55" pos:column="18">mobj<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">-&gt;<pos:position pos:line="55" pos:column="27"/></operator><name pos:line="55" pos:column="24">subprocess_env<pos:position pos:line="55" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name><name pos:line="57" pos:column="13">mobj<pos:position pos:line="57" pos:column="17"/></name><operator pos:line="57" pos:column="17">-&gt;<pos:position pos:line="57" pos:column="22"/></operator><name pos:line="57" pos:column="19">notes<pos:position pos:line="57" pos:column="24"/></name></name></expr>)<pos:position pos:line="57" pos:column="25"/></condition><then pos:line="57" pos:column="25"> <block pos:line="57" pos:column="26">{
            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><name><name pos:line="58" pos:column="17">mobj<pos:position pos:line="58" pos:column="21"/></name><operator pos:line="58" pos:column="21">-&gt;<pos:position pos:line="58" pos:column="26"/></operator><name pos:line="58" pos:column="23">notes<pos:position pos:line="58" pos:column="28"/></name><index pos:line="58" pos:column="28">[<expr><literal type="number" pos:line="58" pos:column="29">0<pos:position pos:line="58" pos:column="30"/></literal></expr>]<pos:position pos:line="58" pos:column="31"/></index></name><operator pos:line="58" pos:column="31">.<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="32">hdr<pos:position pos:line="58" pos:column="35"/></name></expr>)<pos:position pos:line="58" pos:column="36"/></condition><then pos:line="58" pos:column="36"> 
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="17">free<pos:position pos:line="59" pos:column="21"/></name><argument_list pos:line="59" pos:column="21">(<argument><expr><name><name pos:line="59" pos:column="22">mobj<pos:position pos:line="59" pos:column="26"/></name><operator pos:line="59" pos:column="26">-&gt;<pos:position pos:line="59" pos:column="31"/></operator><name pos:line="59" pos:column="28">notes<pos:position pos:line="59" pos:column="33"/></name><index pos:line="59" pos:column="33">[<expr><literal type="number" pos:line="59" pos:column="34">0<pos:position pos:line="59" pos:column="35"/></literal></expr>]<pos:position pos:line="59" pos:column="36"/></index></name><operator pos:line="59" pos:column="36">.<pos:position pos:line="59" pos:column="37"/></operator><name pos:line="59" pos:column="37">hdr<pos:position pos:line="59" pos:column="40"/></name></expr></argument>)<pos:position pos:line="59" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">free<pos:position pos:line="60" pos:column="17"/></name><argument_list pos:line="60" pos:column="17">(<argument><expr><name><name pos:line="60" pos:column="18">mobj<pos:position pos:line="60" pos:column="22"/></name><operator pos:line="60" pos:column="22">-&gt;<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="24">notes<pos:position pos:line="60" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>
        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name><name pos:line="62" pos:column="13">mobj<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">-&gt;<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="19">req_hdrs<pos:position pos:line="62" pos:column="27"/></name></name></expr>)<pos:position pos:line="62" pos:column="28"/></condition><then pos:line="62" pos:column="28"> <block pos:line="62" pos:column="29">{
            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><name><name pos:line="63" pos:column="17">mobj<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">-&gt;<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="23">req_hdrs<pos:position pos:line="63" pos:column="31"/></name><index pos:line="63" pos:column="31">[<expr><literal type="number" pos:line="63" pos:column="32">0<pos:position pos:line="63" pos:column="33"/></literal></expr>]<pos:position pos:line="63" pos:column="34"/></index></name><operator pos:line="63" pos:column="34">.<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="35">hdr<pos:position pos:line="63" pos:column="38"/></name></expr>)<pos:position pos:line="63" pos:column="39"/></condition><then pos:line="63" pos:column="39">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="17">free<pos:position pos:line="64" pos:column="21"/></name><argument_list pos:line="64" pos:column="21">(<argument><expr><name><name pos:line="64" pos:column="22">mobj<pos:position pos:line="64" pos:column="26"/></name><operator pos:line="64" pos:column="26">-&gt;<pos:position pos:line="64" pos:column="31"/></operator><name pos:line="64" pos:column="28">req_hdrs<pos:position pos:line="64" pos:column="36"/></name><index pos:line="64" pos:column="36">[<expr><literal type="number" pos:line="64" pos:column="37">0<pos:position pos:line="64" pos:column="38"/></literal></expr>]<pos:position pos:line="64" pos:column="39"/></index></name><operator pos:line="64" pos:column="39">.<pos:position pos:line="64" pos:column="40"/></operator><name pos:line="64" pos:column="40">hdr<pos:position pos:line="64" pos:column="43"/></name></expr></argument>)<pos:position pos:line="64" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="45"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">free<pos:position pos:line="65" pos:column="17"/></name><argument_list pos:line="65" pos:column="17">(<argument><expr><name><name pos:line="65" pos:column="18">mobj<pos:position pos:line="65" pos:column="22"/></name><operator pos:line="65" pos:column="22">-&gt;<pos:position pos:line="65" pos:column="27"/></operator><name pos:line="65" pos:column="24">req_hdrs<pos:position pos:line="65" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">free<pos:position pos:line="67" pos:column="13"/></name><argument_list pos:line="67" pos:column="13">(<argument><expr><name pos:line="67" pos:column="14">mobj<pos:position pos:line="67" pos:column="18"/></name></expr></argument>)<pos:position pos:line="67" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

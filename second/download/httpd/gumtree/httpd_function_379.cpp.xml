<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_379.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ssl_io_filter_Upgrade<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">ap_filter_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">f<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="2" pos:column="42">apr_bucket_brigade<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">bb<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>

<block pos:line="4" pos:column="1">{
<cpp:define pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">define<pos:position pos:line="5" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="5" pos:column="9">SWITCH_STATUS_LINE<pos:position pos:line="5" pos:column="27"/></name></cpp:macro> <cpp:value pos:line="5" pos:column="28">"HTTP/1.1 101 Switching Protocols"<pos:position pos:line="5" pos:column="62"/></cpp:value></cpp:define>
<cpp:define pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">define<pos:position pos:line="6" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="6" pos:column="9">UPGRADE_HEADER<pos:position pos:line="6" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="6" pos:column="24">"Upgrade: TLS/1.0, HTTP/1.1"<pos:position pos:line="6" pos:column="52"/></cpp:value></cpp:define>
<cpp:define pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">define<pos:position pos:line="7" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="7" pos:column="9">CONNECTION_HEADER<pos:position pos:line="7" pos:column="26"/></name></cpp:macro> <cpp:value pos:line="7" pos:column="27">"Connection: Upgrade"<pos:position pos:line="7" pos:column="48"/></cpp:value></cpp:define>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">upgrade<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">connection<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_bucket_brigade<pos:position pos:line="10" pos:column="23"/></name> <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier></type><name pos:line="10" pos:column="25">upgradebb<pos:position pos:line="10" pos:column="34"/></name></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">request_rec<pos:position pos:line="11" pos:column="16"/></name> <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier></type><name pos:line="11" pos:column="18">r<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><name><name pos:line="11" pos:column="22">f<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">r<pos:position pos:line="11" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_socket_t<pos:position pos:line="12" pos:column="17"/></name> <modifier pos:line="12" pos:column="18">*<pos:position pos:line="12" pos:column="19"/></modifier></type><name pos:line="12" pos:column="19">csd<pos:position pos:line="12" pos:column="22"/></name> <init pos:line="12" pos:column="23">= <expr><name pos:line="12" pos:column="25">NULL<pos:position pos:line="12" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">key<pos:position pos:line="13" pos:column="14"/></name></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">unicode_t<pos:position pos:line="14" pos:column="14"/></name></type> <name><name pos:line="14" pos:column="15">keyFileName<pos:position pos:line="14" pos:column="26"/></name><index pos:line="14" pos:column="26">[<expr><literal type="number" pos:line="14" pos:column="27">512<pos:position pos:line="14" pos:column="30"/></literal></expr>]<pos:position pos:line="14" pos:column="31"/></index></name></decl>;<pos:position pos:line="14" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">ret<pos:position pos:line="15" pos:column="12"/></name></decl>;<pos:position pos:line="15" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name> <modifier pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></modifier></type><name pos:line="16" pos:column="11">token_string<pos:position pos:line="16" pos:column="23"/></name></decl>;<pos:position pos:line="16" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name> <modifier pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></modifier></type><name pos:line="17" pos:column="11">token<pos:position pos:line="17" pos:column="16"/></name></decl>;<pos:position pos:line="17" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name> <modifier pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></modifier></type><name pos:line="18" pos:column="11">token_state<pos:position pos:line="18" pos:column="22"/></name></decl>;<pos:position pos:line="18" pos:column="23"/></decl_stmt>

    <comment type="block" pos:line="20" pos:column="5">/* Just remove the filter, if it doesn't work the first time, it won't
     * work at all for this request.
     */</comment>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ap_remove_output_filter<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">f<pos:position pos:line="23" pos:column="30"/></name></expr></argument>)<pos:position pos:line="23" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/* No need to ensure that this is a server with optional SSL, the filter
     * is only inserted if that is true.
     */</comment>

    <expr_stmt><expr><name pos:line="29" pos:column="5">upgrade<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <call><name pos:line="29" pos:column="15">apr_table_get<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name><name pos:line="29" pos:column="29">r<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">headers_in<pos:position pos:line="29" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="44">"Upgrade"<pos:position pos:line="29" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">upgrade<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">==<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="20">NULL<pos:position pos:line="30" pos:column="24"/></name></expr>)<pos:position pos:line="30" pos:column="25"/></condition><then pos:line="30" pos:column="25"> <block pos:line="30" pos:column="26">{
        <return pos:line="31" pos:column="9">return <expr><call><name pos:line="31" pos:column="16">ap_pass_brigade<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name><name pos:line="31" pos:column="32">f<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">-&gt;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="35">next<pos:position pos:line="31" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="41">bb<pos:position pos:line="31" pos:column="43"/></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="45"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="33" pos:column="5">token_string<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <call><name pos:line="33" pos:column="20">apr_pstrdup<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><name><name pos:line="33" pos:column="32">r<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">-&gt;<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="35">pool<pos:position pos:line="33" pos:column="39"/></name></name></expr></argument>,<argument><expr><name pos:line="33" pos:column="40">upgrade<pos:position pos:line="33" pos:column="47"/></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">token<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <call><name pos:line="34" pos:column="13">apr_strtok<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">token_string<pos:position pos:line="34" pos:column="36"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="34" pos:column="37">", "<pos:position pos:line="34" pos:column="41"/></literal></expr></argument>,<argument><expr><operator pos:line="34" pos:column="42">&amp;<pos:position pos:line="34" pos:column="47"/></operator><name pos:line="34" pos:column="43">token_state<pos:position pos:line="34" pos:column="54"/></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="56"/></expr_stmt>
    <while pos:line="35" pos:column="5">while <condition pos:line="35" pos:column="11">(<expr><name pos:line="35" pos:column="12">token<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">&amp;&amp;<pos:position pos:line="35" pos:column="28"/></operator> <call><name pos:line="35" pos:column="21">strcmp<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">token<pos:position pos:line="35" pos:column="33"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="35" pos:column="34">"TLS/1.0"<pos:position pos:line="35" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="45"/></condition> <block pos:line="35" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">apr_strtok<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><name pos:line="36" pos:column="20">NULL<pos:position pos:line="36" pos:column="24"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="36" pos:column="25">", "<pos:position pos:line="36" pos:column="29"/></literal></expr></argument>,<argument><expr><operator pos:line="36" pos:column="30">&amp;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="31">token_state<pos:position pos:line="36" pos:column="42"/></name></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></while>
    <comment type="line" pos:line="38" pos:column="5">// "Upgrade: TLS/1.0" header not found, don't do Upgrade</comment>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">!<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">token<pos:position pos:line="39" pos:column="15"/></name></expr>)<pos:position pos:line="39" pos:column="16"/></condition><then pos:line="39" pos:column="16"> <block pos:line="39" pos:column="17">{
        <return pos:line="40" pos:column="9">return <expr><call><name pos:line="40" pos:column="16">ap_pass_brigade<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name><name pos:line="40" pos:column="32">f<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">next<pos:position pos:line="40" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="41">bb<pos:position pos:line="40" pos:column="43"/></name></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="45"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="43" pos:column="5">connection<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <call><name pos:line="43" pos:column="18">apr_table_get<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><name><name pos:line="43" pos:column="32">r<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">-&gt;<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="35">headers_in<pos:position pos:line="43" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="47">"Connection"<pos:position pos:line="43" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">token_string<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">=<pos:position pos:line="44" pos:column="19"/></operator> <call><name pos:line="44" pos:column="20">apr_pstrdup<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><name><name pos:line="44" pos:column="32">r<pos:position pos:line="44" pos:column="33"/></name><operator pos:line="44" pos:column="33">-&gt;<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="35">pool<pos:position pos:line="44" pos:column="39"/></name></name></expr></argument>,<argument><expr><name pos:line="44" pos:column="40">connection<pos:position pos:line="44" pos:column="50"/></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">token<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">=<pos:position pos:line="45" pos:column="12"/></operator> <call><name pos:line="45" pos:column="13">apr_strtok<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><name pos:line="45" pos:column="24">token_string<pos:position pos:line="45" pos:column="36"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="45" pos:column="37">","<pos:position pos:line="45" pos:column="40"/></literal></expr></argument>,<argument><expr><operator pos:line="45" pos:column="41">&amp;<pos:position pos:line="45" pos:column="46"/></operator><name pos:line="45" pos:column="42">token_state<pos:position pos:line="45" pos:column="53"/></name></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="55"/></expr_stmt>
    <while pos:line="46" pos:column="5">while <condition pos:line="46" pos:column="11">(<expr><name pos:line="46" pos:column="12">token<pos:position pos:line="46" pos:column="17"/></name> <operator pos:line="46" pos:column="18">&amp;&amp;<pos:position pos:line="46" pos:column="28"/></operator> <call><name pos:line="46" pos:column="21">strcmp<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">token<pos:position pos:line="46" pos:column="33"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="46" pos:column="34">"Upgrade"<pos:position pos:line="46" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="45"/></condition> <block pos:line="46" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">apr_strtok<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><name pos:line="47" pos:column="20">NULL<pos:position pos:line="47" pos:column="24"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="47" pos:column="25">","<pos:position pos:line="47" pos:column="28"/></literal></expr></argument>,<argument><expr><operator pos:line="47" pos:column="29">&amp;<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="30">token_state<pos:position pos:line="47" pos:column="41"/></name></expr></argument>)<pos:position pos:line="47" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></while>
    <comment type="line" pos:line="49" pos:column="5">// "Connection: Upgrade" header not found, don't do Upgrade</comment>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">!<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">token<pos:position pos:line="50" pos:column="15"/></name></expr>)<pos:position pos:line="50" pos:column="16"/></condition><then pos:line="50" pos:column="16"> <block pos:line="50" pos:column="17">{
        <return pos:line="51" pos:column="9">return <expr><call><name pos:line="51" pos:column="16">ap_pass_brigade<pos:position pos:line="51" pos:column="31"/></name><argument_list pos:line="51" pos:column="31">(<argument><expr><name><name pos:line="51" pos:column="32">f<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">-&gt;<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="35">next<pos:position pos:line="51" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="41">bb<pos:position pos:line="51" pos:column="43"/></name></expr></argument>)<pos:position pos:line="51" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="45"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="54" pos:column="5">apr_table_unset<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name><name pos:line="54" pos:column="21">r<pos:position pos:line="54" pos:column="22"/></name><operator pos:line="54" pos:column="22">-&gt;<pos:position pos:line="54" pos:column="27"/></operator><name pos:line="54" pos:column="24">headers_out<pos:position pos:line="54" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="37">"Upgrade"<pos:position pos:line="54" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="48"/></expr_stmt>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">r<pos:position pos:line="56" pos:column="10"/></name></expr>)<pos:position pos:line="56" pos:column="11"/></condition><then pos:line="56" pos:column="11"> <block pos:line="56" pos:column="12">{
        <expr_stmt><expr><name pos:line="57" pos:column="9">csd<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <operator pos:line="57" pos:column="15">(<pos:position pos:line="57" pos:column="16"/></operator><name pos:line="57" pos:column="16">apr_socket_t<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">*<pos:position pos:line="57" pos:column="29"/></operator><operator pos:line="57" pos:column="29">)<pos:position pos:line="57" pos:column="30"/></operator><call><name pos:line="57" pos:column="30">ap_get_module_config<pos:position pos:line="57" pos:column="50"/></name><argument_list pos:line="57" pos:column="50">(<argument><expr><name><name pos:line="57" pos:column="51">r<pos:position pos:line="57" pos:column="52"/></name><operator pos:line="57" pos:column="52">-&gt;<pos:position pos:line="57" pos:column="57"/></operator><name pos:line="57" pos:column="54">connection<pos:position pos:line="57" pos:column="64"/></name><operator pos:line="57" pos:column="64">-&gt;<pos:position pos:line="57" pos:column="69"/></operator><name pos:line="57" pos:column="66">conn_config<pos:position pos:line="57" pos:column="77"/></name></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="79">&amp;<pos:position pos:line="57" pos:column="84"/></operator><name pos:line="57" pos:column="80">nwssl_module<pos:position pos:line="57" pos:column="92"/></name></expr></argument>)<pos:position pos:line="57" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="94"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then>
    <else pos:line="59" pos:column="5">else <block pos:line="59" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">ap_log_error<pos:position pos:line="60" pos:column="21"/></name><argument_list pos:line="60" pos:column="21">(<argument><expr><name pos:line="60" pos:column="22">APLOG_MARK<pos:position pos:line="60" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="34">APLOG_ERR<pos:position pos:line="60" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="45">0<pos:position pos:line="60" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="48">r<pos:position pos:line="60" pos:column="49"/></name><operator pos:line="60" pos:column="49">-&gt;<pos:position pos:line="60" pos:column="54"/></operator><name pos:line="60" pos:column="51">server<pos:position pos:line="60" pos:column="57"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="61" pos:column="22">"Unable to get upgradeable socket handle"<pos:position pos:line="61" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="65"/></expr_stmt>
        <return pos:line="62" pos:column="9">return <expr><call><name pos:line="62" pos:column="16">ap_pass_brigade<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name><name pos:line="62" pos:column="32">f<pos:position pos:line="62" pos:column="33"/></name><operator pos:line="62" pos:column="33">-&gt;<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="35">next<pos:position pos:line="62" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="41">bb<pos:position pos:line="62" pos:column="43"/></name></expr></argument>)<pos:position pos:line="62" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="45"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></else></if>


    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name><name pos:line="66" pos:column="9">r<pos:position pos:line="66" pos:column="10"/></name><operator pos:line="66" pos:column="10">-&gt;<pos:position pos:line="66" pos:column="15"/></operator><name pos:line="66" pos:column="12">method_number<pos:position pos:line="66" pos:column="25"/></name></name> <operator pos:line="66" pos:column="26">==<pos:position pos:line="66" pos:column="28"/></operator> <name pos:line="66" pos:column="29">M_OPTIONS<pos:position pos:line="66" pos:column="38"/></name></expr>)<pos:position pos:line="66" pos:column="39"/></condition><then pos:line="66" pos:column="39"> <block pos:line="66" pos:column="40">{
        <decl_stmt><decl><type><name pos:line="67" pos:column="9">apr_bucket<pos:position pos:line="67" pos:column="19"/></name> <modifier pos:line="67" pos:column="20">*<pos:position pos:line="67" pos:column="21"/></modifier></type><name pos:line="67" pos:column="21">b<pos:position pos:line="67" pos:column="22"/></name> <init pos:line="67" pos:column="23">= <expr><name pos:line="67" pos:column="25">NULL<pos:position pos:line="67" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="67" pos:column="30"/></decl_stmt>
        <comment type="block" pos:line="68" pos:column="9">/* This is a mandatory SSL upgrade. */</comment>

        <expr_stmt><expr><name pos:line="70" pos:column="9">upgradebb<pos:position pos:line="70" pos:column="18"/></name> <operator pos:line="70" pos:column="19">=<pos:position pos:line="70" pos:column="20"/></operator> <call><name pos:line="70" pos:column="21">apr_brigade_create<pos:position pos:line="70" pos:column="39"/></name><argument_list pos:line="70" pos:column="39">(<argument><expr><name><name pos:line="70" pos:column="40">r<pos:position pos:line="70" pos:column="41"/></name><operator pos:line="70" pos:column="41">-&gt;<pos:position pos:line="70" pos:column="46"/></operator><name pos:line="70" pos:column="43">pool<pos:position pos:line="70" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="49">f<pos:position pos:line="70" pos:column="50"/></name><operator pos:line="70" pos:column="50">-&gt;<pos:position pos:line="70" pos:column="55"/></operator><name pos:line="70" pos:column="52">c<pos:position pos:line="70" pos:column="53"/></name><operator pos:line="70" pos:column="53">-&gt;<pos:position pos:line="70" pos:column="58"/></operator><name pos:line="70" pos:column="55">bucket_alloc<pos:position pos:line="70" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="69"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="72" pos:column="9">ap_fputstrs<pos:position pos:line="72" pos:column="20"/></name><argument_list pos:line="72" pos:column="20">(<argument><expr><name><name pos:line="72" pos:column="21">f<pos:position pos:line="72" pos:column="22"/></name><operator pos:line="72" pos:column="22">-&gt;<pos:position pos:line="72" pos:column="27"/></operator><name pos:line="72" pos:column="24">next<pos:position pos:line="72" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="30">upgradebb<pos:position pos:line="72" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="41">SWITCH_STATUS_LINE<pos:position pos:line="72" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="61">CRLF<pos:position pos:line="72" pos:column="65"/></name></expr></argument>,
                    <argument><expr><name pos:line="73" pos:column="21">UPGRADE_HEADER<pos:position pos:line="73" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="37">CRLF<pos:position pos:line="73" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="43">CONNECTION_HEADER<pos:position pos:line="73" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="62">CRLF<pos:position pos:line="73" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="68">CRLF<pos:position pos:line="73" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="74">NULL<pos:position pos:line="73" pos:column="78"/></name></expr></argument>)<pos:position pos:line="73" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="80"/></expr_stmt>

        <expr_stmt><expr><name pos:line="75" pos:column="9">b<pos:position pos:line="75" pos:column="10"/></name> <operator pos:line="75" pos:column="11">=<pos:position pos:line="75" pos:column="12"/></operator> <call><name pos:line="75" pos:column="13">apr_bucket_flush_create<pos:position pos:line="75" pos:column="36"/></name><argument_list pos:line="75" pos:column="36">(<argument><expr><name><name pos:line="75" pos:column="37">f<pos:position pos:line="75" pos:column="38"/></name><operator pos:line="75" pos:column="38">-&gt;<pos:position pos:line="75" pos:column="43"/></operator><name pos:line="75" pos:column="40">c<pos:position pos:line="75" pos:column="41"/></name><operator pos:line="75" pos:column="41">-&gt;<pos:position pos:line="75" pos:column="46"/></operator><name pos:line="75" pos:column="43">bucket_alloc<pos:position pos:line="75" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="76" pos:column="32"/></name><argument_list pos:line="76" pos:column="32">(<argument><expr><name pos:line="76" pos:column="33">upgradebb<pos:position pos:line="76" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="44">b<pos:position pos:line="76" pos:column="45"/></name></expr></argument>)<pos:position pos:line="76" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">ap_pass_brigade<pos:position pos:line="77" pos:column="24"/></name><argument_list pos:line="77" pos:column="24">(<argument><expr><name><name pos:line="77" pos:column="25">f<pos:position pos:line="77" pos:column="26"/></name><operator pos:line="77" pos:column="26">-&gt;<pos:position pos:line="77" pos:column="31"/></operator><name pos:line="77" pos:column="28">next<pos:position pos:line="77" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="34">upgradebb<pos:position pos:line="77" pos:column="43"/></name></expr></argument>)<pos:position pos:line="77" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></then>
    <else pos:line="79" pos:column="5">else <block pos:line="79" pos:column="10">{
        <comment type="block" pos:line="80" pos:column="9">/* This is optional, and should be configurable, for now don't bother
         * doing anything.
         */</comment>
        <return pos:line="83" pos:column="9">return <expr><call><name pos:line="83" pos:column="16">ap_pass_brigade<pos:position pos:line="83" pos:column="31"/></name><argument_list pos:line="83" pos:column="31">(<argument><expr><name><name pos:line="83" pos:column="32">f<pos:position pos:line="83" pos:column="33"/></name><operator pos:line="83" pos:column="33">-&gt;<pos:position pos:line="83" pos:column="38"/></operator><name pos:line="83" pos:column="35">next<pos:position pos:line="83" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="41">bb<pos:position pos:line="83" pos:column="43"/></name></expr></argument>)<pos:position pos:line="83" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="45"/></return>
    }<pos:position pos:line="84" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="86" pos:column="5">key<pos:position pos:line="86" pos:column="8"/></name> <operator pos:line="86" pos:column="9">=<pos:position pos:line="86" pos:column="10"/></operator> <call><name pos:line="86" pos:column="11">get_port_key<pos:position pos:line="86" pos:column="23"/></name><argument_list pos:line="86" pos:column="23">(<argument><expr><name><name pos:line="86" pos:column="24">r<pos:position pos:line="86" pos:column="25"/></name><operator pos:line="86" pos:column="25">-&gt;<pos:position pos:line="86" pos:column="30"/></operator><name pos:line="86" pos:column="27">connection<pos:position pos:line="86" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="39"/></expr_stmt>
    
    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><name pos:line="88" pos:column="9">csd<pos:position pos:line="88" pos:column="12"/></name> <operator pos:line="88" pos:column="13">&amp;&amp;<pos:position pos:line="88" pos:column="23"/></operator> <name pos:line="88" pos:column="16">key<pos:position pos:line="88" pos:column="19"/></name></expr>)<pos:position pos:line="88" pos:column="20"/></condition><then pos:line="88" pos:column="20"> <block pos:line="88" pos:column="21">{
        <decl_stmt><decl><type><name pos:line="89" pos:column="9">int<pos:position pos:line="89" pos:column="12"/></name></type> <name pos:line="89" pos:column="13">sockdes<pos:position pos:line="89" pos:column="20"/></name></decl>;<pos:position pos:line="89" pos:column="21"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">apr_os_sock_get<pos:position pos:line="90" pos:column="24"/></name><argument_list pos:line="90" pos:column="24">(<argument><expr><operator pos:line="90" pos:column="25">&amp;<pos:position pos:line="90" pos:column="30"/></operator><name pos:line="90" pos:column="26">sockdes<pos:position pos:line="90" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="35">csd<pos:position pos:line="90" pos:column="38"/></name></expr></argument>)<pos:position pos:line="90" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="40"/></expr_stmt>


        <expr_stmt><expr><name pos:line="93" pos:column="9">ret<pos:position pos:line="93" pos:column="12"/></name> <operator pos:line="93" pos:column="13">=<pos:position pos:line="93" pos:column="14"/></operator> <call><name pos:line="93" pos:column="15">SSLize_Socket<pos:position pos:line="93" pos:column="28"/></name><argument_list pos:line="93" pos:column="28">(<argument><expr><name pos:line="93" pos:column="29">sockdes<pos:position pos:line="93" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="38">key<pos:position pos:line="93" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="43">r<pos:position pos:line="93" pos:column="44"/></name></expr></argument>)<pos:position pos:line="93" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then>
    <else pos:line="95" pos:column="5">else <block pos:line="95" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="96" pos:column="9">ap_log_error<pos:position pos:line="96" pos:column="21"/></name><argument_list pos:line="96" pos:column="21">(<argument><expr><name pos:line="96" pos:column="22">APLOG_MARK<pos:position pos:line="96" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="34">APLOG_ERR<pos:position pos:line="96" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="96" pos:column="45">0<pos:position pos:line="96" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="48">r<pos:position pos:line="96" pos:column="49"/></name><operator pos:line="96" pos:column="49">-&gt;<pos:position pos:line="96" pos:column="54"/></operator><name pos:line="96" pos:column="51">server<pos:position pos:line="96" pos:column="57"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="97" pos:column="22">"Upgradeable socket handle not found"<pos:position pos:line="97" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="61"/></expr_stmt>
        <return pos:line="98" pos:column="9">return <expr><call><name pos:line="98" pos:column="16">ap_pass_brigade<pos:position pos:line="98" pos:column="31"/></name><argument_list pos:line="98" pos:column="31">(<argument><expr><name><name pos:line="98" pos:column="32">f<pos:position pos:line="98" pos:column="33"/></name><operator pos:line="98" pos:column="33">-&gt;<pos:position pos:line="98" pos:column="38"/></operator><name pos:line="98" pos:column="35">next<pos:position pos:line="98" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="41">bb<pos:position pos:line="98" pos:column="43"/></name></expr></argument>)<pos:position pos:line="98" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="45"/></return>
    }<pos:position pos:line="99" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="101" pos:column="5">ap_log_error<pos:position pos:line="101" pos:column="17"/></name><argument_list pos:line="101" pos:column="17">(<argument><expr><name pos:line="101" pos:column="18">APLOG_MARK<pos:position pos:line="101" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="30">APLOG_INFO<pos:position pos:line="101" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="42">0<pos:position pos:line="101" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="45">r<pos:position pos:line="101" pos:column="46"/></name><operator pos:line="101" pos:column="46">-&gt;<pos:position pos:line="101" pos:column="51"/></operator><name pos:line="101" pos:column="48">server<pos:position pos:line="101" pos:column="54"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="102" pos:column="18">"Awaiting re-negotiation handshake"<pos:position pos:line="102" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="55"/></expr_stmt>

    <return pos:line="104" pos:column="5">return <expr><call><name pos:line="104" pos:column="12">ap_pass_brigade<pos:position pos:line="104" pos:column="27"/></name><argument_list pos:line="104" pos:column="27">(<argument><expr><name><name pos:line="104" pos:column="28">f<pos:position pos:line="104" pos:column="29"/></name><operator pos:line="104" pos:column="29">-&gt;<pos:position pos:line="104" pos:column="34"/></operator><name pos:line="104" pos:column="31">next<pos:position pos:line="104" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="37">bb<pos:position pos:line="104" pos:column="39"/></name></expr></argument>)<pos:position pos:line="104" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="41"/></return>
}<pos:position pos:line="105" pos:column="2"/></block></function></unit>

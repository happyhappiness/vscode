<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2626.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_server_data<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">()<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ap_listen_rec<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">lr<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">module<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier><modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">m<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">printf<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="string" pos:line="6" pos:column="12">"%s\n"<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="20">ap_get_server_version<pos:position pos:line="6" pos:column="41"/></name><argument_list pos:line="6" pos:column="41">()<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="45"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">ap_my_addrspace<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">&amp;&amp;<pos:position pos:line="7" pos:column="35"/></operator> <operator pos:line="7" pos:column="28">(<pos:position pos:line="7" pos:column="29"/></operator><name><name pos:line="7" pos:column="29">ap_my_addrspace<pos:position pos:line="7" pos:column="44"/></name><index pos:line="7" pos:column="44">[<expr><literal type="number" pos:line="7" pos:column="45">0<pos:position pos:line="7" pos:column="46"/></literal></expr>]<pos:position pos:line="7" pos:column="47"/></index></name> <operator pos:line="7" pos:column="48">!=<pos:position pos:line="7" pos:column="50"/></operator> <literal type="char" pos:line="7" pos:column="51">'O'<pos:position pos:line="7" pos:column="54"/></literal><operator pos:line="7" pos:column="54">)<pos:position pos:line="7" pos:column="55"/></operator> <operator pos:line="7" pos:column="56">&amp;&amp;<pos:position pos:line="7" pos:column="66"/></operator> <operator pos:line="7" pos:column="59">(<pos:position pos:line="7" pos:column="60"/></operator><name><name pos:line="7" pos:column="60">ap_my_addrspace<pos:position pos:line="7" pos:column="75"/></name><index pos:line="7" pos:column="75">[<expr><literal type="number" pos:line="7" pos:column="76">1<pos:position pos:line="7" pos:column="77"/></literal></expr>]<pos:position pos:line="7" pos:column="78"/></index></name> <operator pos:line="7" pos:column="79">!=<pos:position pos:line="7" pos:column="81"/></operator> <literal type="char" pos:line="7" pos:column="82">'S'<pos:position pos:line="7" pos:column="85"/></literal><operator pos:line="7" pos:column="85">)<pos:position pos:line="7" pos:column="86"/></operator></expr>)<pos:position pos:line="7" pos:column="87"/></condition><then pos:line="7" pos:column="87">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">printf<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="string" pos:line="8" pos:column="16">"   Running in address space %s\n"<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="52">ap_my_addrspace<pos:position pos:line="8" pos:column="67"/></name></expr></argument>)<pos:position pos:line="8" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="69"/></expr_stmt></block></then></if>


    <comment type="block" pos:line="11" pos:column="5">/* Display listening ports */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">printf<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="string" pos:line="12" pos:column="12">"   Listening on port(s):"<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">lr<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <name pos:line="13" pos:column="10">ap_listeners<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
    <do pos:line="14" pos:column="5">do <block pos:line="14" pos:column="8">{
       <expr_stmt><expr><call><name pos:line="15" pos:column="8">printf<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><literal type="string" pos:line="15" pos:column="15">" %d"<pos:position pos:line="15" pos:column="20"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="22">lr<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">bind_addr<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">port<pos:position pos:line="15" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
       <expr_stmt><expr><name pos:line="16" pos:column="8">lr<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name><name pos:line="16" pos:column="13">lr<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">next<pos:position pos:line="16" pos:column="21"/></name></name></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block> while<condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">lr<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">&amp;&amp;<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="19">lr<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">!=<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">ap_listeners<pos:position pos:line="17" pos:column="37"/></name></expr>)<pos:position pos:line="17" pos:column="38"/></condition>;<pos:position pos:line="17" pos:column="39"/></do>

    <comment type="block" pos:line="19" pos:column="5">/* Display dynamic modules loaded */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">printf<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="string" pos:line="20" pos:column="12">"\n"<pos:position pos:line="20" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>
    <for pos:line="21" pos:column="5">for <control pos:line="21" pos:column="9">(<init><expr><name pos:line="21" pos:column="10">m<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <name pos:line="21" pos:column="14">ap_loaded_modules<pos:position pos:line="21" pos:column="31"/></name></expr>;<pos:position pos:line="21" pos:column="32"/></init> <condition><expr><operator pos:line="21" pos:column="33">*<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">m<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">!=<pos:position pos:line="21" pos:column="38"/></operator> <name pos:line="21" pos:column="39">NULL<pos:position pos:line="21" pos:column="43"/></name></expr>;<pos:position pos:line="21" pos:column="44"/></condition> <incr><expr><name pos:line="21" pos:column="45">m<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">++<pos:position pos:line="21" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="49"/></control> <block pos:line="21" pos:column="50">{
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">(<pos:position pos:line="22" pos:column="14"/></operator><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">module<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">*<pos:position pos:line="22" pos:column="22"/></operator><operator pos:line="22" pos:column="22">)<pos:position pos:line="22" pos:column="23"/></operator><operator pos:line="22" pos:column="23">*<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">m<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">)<pos:position pos:line="22" pos:column="26"/></operator><operator pos:line="22" pos:column="26">-&gt;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="28">dynamic_load_handle<pos:position pos:line="22" pos:column="47"/></name></expr>)<pos:position pos:line="22" pos:column="48"/></condition><then pos:line="22" pos:column="48"> <block pos:line="22" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">printf<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><literal type="string" pos:line="23" pos:column="20">"   Loaded dynamic module %s\n"<pos:position pos:line="23" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="53">(<pos:position pos:line="23" pos:column="54"/></operator><operator pos:line="23" pos:column="54">(<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="55">module<pos:position pos:line="23" pos:column="61"/></name><operator pos:line="23" pos:column="61">*<pos:position pos:line="23" pos:column="62"/></operator><operator pos:line="23" pos:column="62">)<pos:position pos:line="23" pos:column="63"/></operator><operator pos:line="23" pos:column="63">*<pos:position pos:line="23" pos:column="64"/></operator><name pos:line="23" pos:column="64">m<pos:position pos:line="23" pos:column="65"/></name><operator pos:line="23" pos:column="65">)<pos:position pos:line="23" pos:column="66"/></operator><operator pos:line="23" pos:column="66">-&gt;<pos:position pos:line="23" pos:column="71"/></operator><name pos:line="23" pos:column="68">name<pos:position pos:line="23" pos:column="72"/></name></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></for>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

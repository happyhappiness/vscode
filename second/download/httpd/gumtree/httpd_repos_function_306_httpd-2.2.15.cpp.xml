<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_306_httpd-2.2.15.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_add_if_state<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">apr_pool_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">p<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">dav_if_header<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">ih<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                    <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">state_token<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="3" pos:column="37">dav_if_state_type<pos:position pos:line="3" pos:column="54"/></name></type> <name pos:line="3" pos:column="55">t<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="58">int<pos:position pos:line="3" pos:column="61"/></name></type> <name pos:line="3" pos:column="62">condition<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>,
                                    <parameter><decl><type><specifier pos:line="4" pos:column="37">const<pos:position pos:line="4" pos:column="42"/></specifier> <name pos:line="4" pos:column="43">dav_hooks_locks<pos:position pos:line="4" pos:column="58"/></name> <modifier pos:line="4" pos:column="59">*<pos:position pos:line="4" pos:column="60"/></modifier></type><name pos:line="4" pos:column="60">locks_hooks<pos:position pos:line="4" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="72"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">dav_if_state_list<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">new_sl<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">new_sl<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">apr_pcalloc<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">p<pos:position pos:line="8" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="29">sizeof<argument_list pos:line="8" pos:column="35">(<argument><expr><operator pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="37">new_sl<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="10" pos:column="5">new_sl<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">condition<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="25">condition<pos:position pos:line="10" pos:column="34"/></name></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">new_sl<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">type<pos:position pos:line="11" pos:column="17"/></name></name>      <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">t<pos:position pos:line="11" pos:column="26"/></name></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">t<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">==<pos:position pos:line="13" pos:column="13"/></operator> <name pos:line="13" pos:column="14">dav_if_opaquelock<pos:position pos:line="13" pos:column="31"/></name></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32"> <block pos:line="13" pos:column="33">{
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">dav_error<pos:position pos:line="14" pos:column="18"/></name> <modifier pos:line="14" pos:column="19">*<pos:position pos:line="14" pos:column="20"/></modifier></type><name pos:line="14" pos:column="20">err<pos:position pos:line="14" pos:column="23"/></name></decl>;<pos:position pos:line="14" pos:column="24"/></decl_stmt>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">err<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <call pos:line="16" pos:column="20">(<modifier pos:line="16" pos:column="21">*<pos:position pos:line="16" pos:column="22"/></modifier><name><name pos:line="16" pos:column="22">locks_hooks<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">-&gt;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="35">parse_locktoken<pos:position pos:line="16" pos:column="50"/></name></name>)<argument_list pos:line="16" pos:column="51">(<argument><expr><name pos:line="16" pos:column="52">p<pos:position pos:line="16" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="55">state_token<pos:position pos:line="16" pos:column="66"/></name></expr></argument>,
                                                   <argument><expr><operator pos:line="17" pos:column="52">&amp;<pos:position pos:line="17" pos:column="57"/></operator><name><name pos:line="17" pos:column="53">new_sl<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">-&gt;<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="61">locktoken<pos:position pos:line="17" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call><operator pos:line="17" pos:column="71">)<pos:position pos:line="17" pos:column="72"/></operator> <operator pos:line="17" pos:column="73">!=<pos:position pos:line="17" pos:column="75"/></operator> <name pos:line="17" pos:column="76">NULL<pos:position pos:line="17" pos:column="80"/></name></expr>)<pos:position pos:line="17" pos:column="81"/></condition><then pos:line="17" pos:column="81"> <block pos:line="17" pos:column="82">{
            <comment type="block" pos:line="18" pos:column="13">/* If the state token cannot be parsed, treat it as an
             * unknown state; this will evaluate to "false" later
             * during If header validation. */</comment>
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><name><name pos:line="21" pos:column="17">err<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">error_id<pos:position pos:line="21" pos:column="30"/></name></name> <operator pos:line="21" pos:column="31">==<pos:position pos:line="21" pos:column="33"/></operator> <name pos:line="21" pos:column="34">DAV_ERR_LOCK_UNK_STATE_TOKEN<pos:position pos:line="21" pos:column="62"/></name></expr>)<pos:position pos:line="21" pos:column="63"/></condition><then pos:line="21" pos:column="63"> <block pos:line="21" pos:column="64">{
                <expr_stmt><expr><name><name pos:line="22" pos:column="17">new_sl<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">type<pos:position pos:line="22" pos:column="29"/></name></name> <operator pos:line="22" pos:column="30">=<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="32">dav_if_unknown<pos:position pos:line="22" pos:column="46"/></name></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="23" pos:column="14"/></block></then>
            <else pos:line="24" pos:column="13">else <block pos:line="24" pos:column="18">{
                <comment type="block" pos:line="25" pos:column="17">/* ### maybe add a higher-level description */</comment>
                <return pos:line="26" pos:column="17">return <expr><name pos:line="26" pos:column="24">err<pos:position pos:line="26" pos:column="27"/></name></expr>;<pos:position pos:line="26" pos:column="28"/></return>
            }<pos:position pos:line="27" pos:column="14"/></block></else></if>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then>
    <else pos:line="30" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="9">new_sl<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">-&gt;<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="17">etag<pos:position pos:line="31" pos:column="21"/></name></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <name pos:line="31" pos:column="24">state_token<pos:position pos:line="31" pos:column="35"/></name></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name><name pos:line="33" pos:column="5">new_sl<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">-&gt;<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="13">next<pos:position pos:line="33" pos:column="17"/></name></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <name><name pos:line="33" pos:column="20">ih<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">state<pos:position pos:line="33" pos:column="29"/></name></name></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">ih<pos:position pos:line="34" pos:column="7"/></name><operator pos:line="34" pos:column="7">-&gt;<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="9">state<pos:position pos:line="34" pos:column="14"/></name></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <name pos:line="34" pos:column="17">new_sl<pos:position pos:line="34" pos:column="23"/></name></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>

    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">NULL<pos:position pos:line="36" pos:column="16"/></name></expr>;<pos:position pos:line="36" pos:column="17"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

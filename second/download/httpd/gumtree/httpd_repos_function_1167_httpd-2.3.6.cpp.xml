<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1167_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">uri_meets_conditions<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">apr_uri_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">filter<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="57">const<pos:position pos:line="1" pos:column="62"/></specifier> <name pos:line="1" pos:column="63">int<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">pathlen<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
        <parameter><decl><type><specifier pos:line="2" pos:column="9">const<pos:position pos:line="2" pos:column="14"/></specifier> <name pos:line="2" pos:column="15">apr_uri_t<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">url<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list> <block pos:line="2" pos:column="30">{

    <comment type="block" pos:line="4" pos:column="5">/* Scheme, hostname port and local part. The filter URI and the
     * URI we test may have the following shapes:
     *   /&lt;path&gt;
     *   &lt;scheme&gt;[:://&lt;hostname&gt;[:&lt;port&gt;][/&lt;path&gt;]]
     * That is, if there is no scheme then there must be only the path,
     * and we check only the path; if there is a scheme, we check the
     * scheme for equality, and then if present we match the hostname,
     * and then if present match the port, and finally the path if any.
     *
     * Note that this means that "/&lt;path&gt;" only matches local paths,
     * and to match proxied paths one *must* specify the scheme.
     */</comment>

    <comment type="block" pos:line="17" pos:column="5">/* Is the filter is just for a local path or a proxy URI? */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><name><name pos:line="18" pos:column="10">filter<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">.<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">scheme<pos:position pos:line="18" pos:column="23"/></name></name></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24"> <block pos:line="18" pos:column="25">{
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">url<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">.<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">scheme<pos:position pos:line="19" pos:column="23"/></name></name> <operator pos:line="19" pos:column="24">||<pos:position pos:line="19" pos:column="26"/></operator> <name><name pos:line="19" pos:column="27">url<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">.<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="31">hostname<pos:position pos:line="19" pos:column="39"/></name></name></expr>)<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40"> <block pos:line="19" pos:column="41">{
            <return pos:line="20" pos:column="13">return <expr><literal type="number" pos:line="20" pos:column="20">0<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></return>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></then>
    <else pos:line="23" pos:column="5">else <block pos:line="23" pos:column="10">{
        <comment type="block" pos:line="24" pos:column="9">/* The URI scheme must be present and identical except for case. */</comment>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><name><name pos:line="25" pos:column="14">url<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">.<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">scheme<pos:position pos:line="25" pos:column="24"/></name></name> <operator pos:line="25" pos:column="25">||<pos:position pos:line="25" pos:column="27"/></operator> <call><name pos:line="25" pos:column="28">strcasecmp<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">(<argument><expr><name><name pos:line="25" pos:column="39">filter<pos:position pos:line="25" pos:column="45"/></name><operator pos:line="25" pos:column="45">.<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="46">scheme<pos:position pos:line="25" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="54">url<pos:position pos:line="25" pos:column="57"/></name><operator pos:line="25" pos:column="57">.<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="58">scheme<pos:position pos:line="25" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="66"/></condition><then pos:line="25" pos:column="66"> <block pos:line="25" pos:column="67">{
            <return pos:line="26" pos:column="13">return <expr><literal type="number" pos:line="26" pos:column="20">0<pos:position pos:line="26" pos:column="21"/></literal></expr>;<pos:position pos:line="26" pos:column="22"/></return>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="29" pos:column="9">/* If the filter hostname is null or empty it matches any hostname,
         * if it begins with a "*" it matches the _end_ of the URI hostname
         * excluding the "*", if it begins with a "." it matches the _end_
         * of the URI * hostname including the ".", otherwise it must match
         * the URI hostname exactly. */</comment>

        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name><name pos:line="35" pos:column="13">filter<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">.<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="20">hostname<pos:position pos:line="35" pos:column="28"/></name></name> <operator pos:line="35" pos:column="29">&amp;&amp;<pos:position pos:line="35" pos:column="39"/></operator> <name><name pos:line="35" pos:column="32">filter<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">.<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="39">hostname<pos:position pos:line="35" pos:column="47"/></name><index pos:line="35" pos:column="47">[<expr><literal type="number" pos:line="35" pos:column="48">0<pos:position pos:line="35" pos:column="49"/></literal></expr>]<pos:position pos:line="35" pos:column="50"/></index></name></expr>)<pos:position pos:line="35" pos:column="51"/></condition><then pos:line="35" pos:column="51"> <block pos:line="35" pos:column="52">{
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name><name pos:line="36" pos:column="17">filter<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">.<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="24">hostname<pos:position pos:line="36" pos:column="32"/></name><index pos:line="36" pos:column="32">[<expr><literal type="number" pos:line="36" pos:column="33">0<pos:position pos:line="36" pos:column="34"/></literal></expr>]<pos:position pos:line="36" pos:column="35"/></index></name> <operator pos:line="36" pos:column="36">==<pos:position pos:line="36" pos:column="38"/></operator> <literal type="char" pos:line="36" pos:column="39">'.'<pos:position pos:line="36" pos:column="42"/></literal></expr>)<pos:position pos:line="36" pos:column="43"/></condition><then pos:line="36" pos:column="43"> <block pos:line="36" pos:column="44">{
                <decl_stmt><decl><type><specifier pos:line="37" pos:column="17">const<pos:position pos:line="37" pos:column="22"/></specifier> <name pos:line="37" pos:column="23">size_t<pos:position pos:line="37" pos:column="29"/></name></type> <name pos:line="37" pos:column="30">fhostlen<pos:position pos:line="37" pos:column="38"/></name> <init pos:line="37" pos:column="39">= <expr><call><name pos:line="37" pos:column="41">strlen<pos:position pos:line="37" pos:column="47"/></name><argument_list pos:line="37" pos:column="47">(<argument><expr><name><name pos:line="37" pos:column="48">filter<pos:position pos:line="37" pos:column="54"/></name><operator pos:line="37" pos:column="54">.<pos:position pos:line="37" pos:column="55"/></operator><name pos:line="37" pos:column="55">hostname<pos:position pos:line="37" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="37" pos:column="65"/></decl_stmt>
                <decl_stmt><decl><type><specifier pos:line="38" pos:column="17">const<pos:position pos:line="38" pos:column="22"/></specifier> <name pos:line="38" pos:column="23">size_t<pos:position pos:line="38" pos:column="29"/></name></type> <name pos:line="38" pos:column="30">uhostlen<pos:position pos:line="38" pos:column="38"/></name> <init pos:line="38" pos:column="39">= <expr><ternary><condition><expr><name><name pos:line="38" pos:column="41">url<pos:position pos:line="38" pos:column="44"/></name><operator pos:line="38" pos:column="44">.<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="45">hostname<pos:position pos:line="38" pos:column="53"/></name></name></expr> ?<pos:position pos:line="38" pos:column="55"/></condition><then pos:line="38" pos:column="55"> <expr><call><name pos:line="38" pos:column="56">strlen<pos:position pos:line="38" pos:column="62"/></name><argument_list pos:line="38" pos:column="62">(<argument><expr><name><name pos:line="38" pos:column="63">url<pos:position pos:line="38" pos:column="66"/></name><operator pos:line="38" pos:column="66">.<pos:position pos:line="38" pos:column="67"/></operator><name pos:line="38" pos:column="67">hostname<pos:position pos:line="38" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="76"/></argument_list></call></expr> <pos:position pos:line="38" pos:column="77"/></then><else pos:line="38" pos:column="77">: <expr><literal type="number" pos:line="38" pos:column="79">0<pos:position pos:line="38" pos:column="80"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="38" pos:column="81"/></decl_stmt>

                <if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">fhostlen<pos:position pos:line="40" pos:column="29"/></name> <operator pos:line="40" pos:column="30">&gt;<pos:position pos:line="40" pos:column="34"/></operator> <name pos:line="40" pos:column="32">uhostlen<pos:position pos:line="40" pos:column="40"/></name> <operator pos:line="40" pos:column="41">||<pos:position pos:line="40" pos:column="43"/></operator> <call><name pos:line="40" pos:column="44">strcasecmp<pos:position pos:line="40" pos:column="54"/></name><argument_list pos:line="40" pos:column="54">(<argument><expr><name><name pos:line="40" pos:column="55">filter<pos:position pos:line="40" pos:column="61"/></name><operator pos:line="40" pos:column="61">.<pos:position pos:line="40" pos:column="62"/></operator><name pos:line="40" pos:column="62">hostname<pos:position pos:line="40" pos:column="70"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="41" pos:column="25">url<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">.<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="29">hostname<pos:position pos:line="41" pos:column="37"/></name></name> <operator pos:line="41" pos:column="38">+<pos:position pos:line="41" pos:column="39"/></operator> <name pos:line="41" pos:column="40">uhostlen<pos:position pos:line="41" pos:column="48"/></name> <operator pos:line="41" pos:column="49">-<pos:position pos:line="41" pos:column="50"/></operator> <name pos:line="41" pos:column="51">fhostlen<pos:position pos:line="41" pos:column="59"/></name></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="61"/></condition><then pos:line="41" pos:column="61"> <block pos:line="41" pos:column="62">{
                    <return pos:line="42" pos:column="21">return <expr><literal type="number" pos:line="42" pos:column="28">0<pos:position pos:line="42" pos:column="29"/></literal></expr>;<pos:position pos:line="42" pos:column="30"/></return>
                }<pos:position pos:line="43" pos:column="18"/></block></then></if>
            }<pos:position pos:line="44" pos:column="14"/></block></then>
            <elseif pos:line="45" pos:column="13">else <if pos:line="45" pos:column="18">if <condition pos:line="45" pos:column="21">(<expr><name><name pos:line="45" pos:column="22">filter<pos:position pos:line="45" pos:column="28"/></name><operator pos:line="45" pos:column="28">.<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="29">hostname<pos:position pos:line="45" pos:column="37"/></name><index pos:line="45" pos:column="37">[<expr><literal type="number" pos:line="45" pos:column="38">0<pos:position pos:line="45" pos:column="39"/></literal></expr>]<pos:position pos:line="45" pos:column="40"/></index></name> <operator pos:line="45" pos:column="41">==<pos:position pos:line="45" pos:column="43"/></operator> <literal type="char" pos:line="45" pos:column="44">'*'<pos:position pos:line="45" pos:column="47"/></literal></expr>)<pos:position pos:line="45" pos:column="48"/></condition><then pos:line="45" pos:column="48"> <block pos:line="45" pos:column="49">{
                <decl_stmt><decl><type><specifier pos:line="46" pos:column="17">const<pos:position pos:line="46" pos:column="22"/></specifier> <name pos:line="46" pos:column="23">size_t<pos:position pos:line="46" pos:column="29"/></name></type> <name pos:line="46" pos:column="30">fhostlen<pos:position pos:line="46" pos:column="38"/></name> <init pos:line="46" pos:column="39">= <expr><call><name pos:line="46" pos:column="41">strlen<pos:position pos:line="46" pos:column="47"/></name><argument_list pos:line="46" pos:column="47">(<argument><expr><name><name pos:line="46" pos:column="48">filter<pos:position pos:line="46" pos:column="54"/></name><operator pos:line="46" pos:column="54">.<pos:position pos:line="46" pos:column="55"/></operator><name pos:line="46" pos:column="55">hostname<pos:position pos:line="46" pos:column="63"/></name></name> <operator pos:line="46" pos:column="64">+<pos:position pos:line="46" pos:column="65"/></operator> <literal type="number" pos:line="46" pos:column="66">1<pos:position pos:line="46" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="69"/></decl_stmt>
                <decl_stmt><decl><type><specifier pos:line="47" pos:column="17">const<pos:position pos:line="47" pos:column="22"/></specifier> <name pos:line="47" pos:column="23">size_t<pos:position pos:line="47" pos:column="29"/></name></type> <name pos:line="47" pos:column="30">uhostlen<pos:position pos:line="47" pos:column="38"/></name> <init pos:line="47" pos:column="39">= <expr><ternary><condition><expr><name><name pos:line="47" pos:column="41">url<pos:position pos:line="47" pos:column="44"/></name><operator pos:line="47" pos:column="44">.<pos:position pos:line="47" pos:column="45"/></operator><name pos:line="47" pos:column="45">hostname<pos:position pos:line="47" pos:column="53"/></name></name></expr> ?<pos:position pos:line="47" pos:column="55"/></condition><then pos:line="47" pos:column="55"> <expr><call><name pos:line="47" pos:column="56">strlen<pos:position pos:line="47" pos:column="62"/></name><argument_list pos:line="47" pos:column="62">(<argument><expr><name><name pos:line="47" pos:column="63">url<pos:position pos:line="47" pos:column="66"/></name><operator pos:line="47" pos:column="66">.<pos:position pos:line="47" pos:column="67"/></operator><name pos:line="47" pos:column="67">hostname<pos:position pos:line="47" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="76"/></argument_list></call></expr> <pos:position pos:line="47" pos:column="77"/></then><else pos:line="47" pos:column="77">: <expr><literal type="number" pos:line="47" pos:column="79">0<pos:position pos:line="47" pos:column="80"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="47" pos:column="81"/></decl_stmt>

                <if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name pos:line="49" pos:column="21">fhostlen<pos:position pos:line="49" pos:column="29"/></name> <operator pos:line="49" pos:column="30">&gt;<pos:position pos:line="49" pos:column="34"/></operator> <name pos:line="49" pos:column="32">uhostlen<pos:position pos:line="49" pos:column="40"/></name> <operator pos:line="49" pos:column="41">||<pos:position pos:line="49" pos:column="43"/></operator> <call><name pos:line="49" pos:column="44">strcasecmp<pos:position pos:line="49" pos:column="54"/></name><argument_list pos:line="49" pos:column="54">(<argument><expr><name><name pos:line="49" pos:column="55">filter<pos:position pos:line="49" pos:column="61"/></name><operator pos:line="49" pos:column="61">.<pos:position pos:line="49" pos:column="62"/></operator><name pos:line="49" pos:column="62">hostname<pos:position pos:line="49" pos:column="70"/></name></name> <operator pos:line="49" pos:column="71">+<pos:position pos:line="49" pos:column="72"/></operator> <literal type="number" pos:line="49" pos:column="73">1<pos:position pos:line="49" pos:column="74"/></literal></expr></argument>,
                        <argument><expr><name><name pos:line="50" pos:column="25">url<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">.<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="29">hostname<pos:position pos:line="50" pos:column="37"/></name></name> <operator pos:line="50" pos:column="38">+<pos:position pos:line="50" pos:column="39"/></operator> <name pos:line="50" pos:column="40">uhostlen<pos:position pos:line="50" pos:column="48"/></name> <operator pos:line="50" pos:column="49">-<pos:position pos:line="50" pos:column="50"/></operator> <name pos:line="50" pos:column="51">fhostlen<pos:position pos:line="50" pos:column="59"/></name></expr></argument>)<pos:position pos:line="50" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="61"/></condition><then pos:line="50" pos:column="61"> <block pos:line="50" pos:column="62">{
                    <return pos:line="51" pos:column="21">return <expr><literal type="number" pos:line="51" pos:column="28">0<pos:position pos:line="51" pos:column="29"/></literal></expr>;<pos:position pos:line="51" pos:column="30"/></return>
                }<pos:position pos:line="52" pos:column="18"/></block></then></if>
            }<pos:position pos:line="53" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="54" pos:column="13">else <if pos:line="54" pos:column="18">if <condition pos:line="54" pos:column="21">(<expr><operator pos:line="54" pos:column="22">!<pos:position pos:line="54" pos:column="23"/></operator><name><name pos:line="54" pos:column="23">url<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">.<pos:position pos:line="54" pos:column="27"/></operator><name pos:line="54" pos:column="27">hostname<pos:position pos:line="54" pos:column="35"/></name></name> <operator pos:line="54" pos:column="36">||<pos:position pos:line="54" pos:column="38"/></operator> <call><name pos:line="54" pos:column="39">strcasecmp<pos:position pos:line="54" pos:column="49"/></name><argument_list pos:line="54" pos:column="49">(<argument><expr><name><name pos:line="54" pos:column="50">filter<pos:position pos:line="54" pos:column="56"/></name><operator pos:line="54" pos:column="56">.<pos:position pos:line="54" pos:column="57"/></operator><name pos:line="54" pos:column="57">hostname<pos:position pos:line="54" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="67">url<pos:position pos:line="54" pos:column="70"/></name><operator pos:line="54" pos:column="70">.<pos:position pos:line="54" pos:column="71"/></operator><name pos:line="54" pos:column="71">hostname<pos:position pos:line="54" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="81"/></condition><then pos:line="54" pos:column="81"> <block pos:line="54" pos:column="82">{
                <return pos:line="55" pos:column="17">return <expr><literal type="number" pos:line="55" pos:column="24">0<pos:position pos:line="55" pos:column="25"/></literal></expr>;<pos:position pos:line="55" pos:column="26"/></return>
            }<pos:position pos:line="56" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="57" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="59" pos:column="9">/* If the filter port is empty it matches any URL port.
         * If the filter or URL port are missing, or the URL port is
         * empty, they default to the port for their scheme. */</comment>

        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><operator pos:line="63" pos:column="13">!<pos:position pos:line="63" pos:column="14"/></operator><operator pos:line="63" pos:column="14">(<pos:position pos:line="63" pos:column="15"/></operator><name><name pos:line="63" pos:column="15">filter<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">.<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="22">port_str<pos:position pos:line="63" pos:column="30"/></name></name> <operator pos:line="63" pos:column="31">&amp;&amp;<pos:position pos:line="63" pos:column="41"/></operator> <operator pos:line="63" pos:column="34">!<pos:position pos:line="63" pos:column="35"/></operator><name><name pos:line="63" pos:column="35">filter<pos:position pos:line="63" pos:column="41"/></name><operator pos:line="63" pos:column="41">.<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="42">port_str<pos:position pos:line="63" pos:column="50"/></name><index pos:line="63" pos:column="50">[<expr><literal type="number" pos:line="63" pos:column="51">0<pos:position pos:line="63" pos:column="52"/></literal></expr>]<pos:position pos:line="63" pos:column="53"/></index></name><operator pos:line="63" pos:column="53">)<pos:position pos:line="63" pos:column="54"/></operator></expr>)<pos:position pos:line="63" pos:column="55"/></condition><then pos:line="63" pos:column="55"> <block pos:line="63" pos:column="56">{
            <comment type="block" pos:line="64" pos:column="13">/* NOTE:  ap_port_of_scheme will return 0 if given NULL input */</comment>
            <decl_stmt><decl><type><specifier pos:line="65" pos:column="13">const<pos:position pos:line="65" pos:column="18"/></specifier> <name pos:line="65" pos:column="19">unsigned<pos:position pos:line="65" pos:column="27"/></name></type> <name pos:line="65" pos:column="28">fport<pos:position pos:line="65" pos:column="33"/></name> <init pos:line="65" pos:column="34">= <expr><ternary><condition><expr><name><name pos:line="65" pos:column="36">filter<pos:position pos:line="65" pos:column="42"/></name><operator pos:line="65" pos:column="42">.<pos:position pos:line="65" pos:column="43"/></operator><name pos:line="65" pos:column="43">port_str<pos:position pos:line="65" pos:column="51"/></name></name></expr> ?<pos:position pos:line="65" pos:column="53"/></condition><then pos:line="65" pos:column="53"> <expr><name><name pos:line="65" pos:column="54">filter<pos:position pos:line="65" pos:column="60"/></name><operator pos:line="65" pos:column="60">.<pos:position pos:line="65" pos:column="61"/></operator><name pos:line="65" pos:column="61">port<pos:position pos:line="65" pos:column="65"/></name></name></expr>
                    <pos:position pos:line="66" pos:column="21"/></then><else pos:line="66" pos:column="21">: <expr><call><name pos:line="66" pos:column="23">apr_uri_port_of_scheme<pos:position pos:line="66" pos:column="45"/></name><argument_list pos:line="66" pos:column="45">(<argument><expr><name><name pos:line="66" pos:column="46">filter<pos:position pos:line="66" pos:column="52"/></name><operator pos:line="66" pos:column="52">.<pos:position pos:line="66" pos:column="53"/></operator><name pos:line="66" pos:column="53">scheme<pos:position pos:line="66" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="60"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="66" pos:column="61"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="67" pos:column="13">const<pos:position pos:line="67" pos:column="18"/></specifier> <name pos:line="67" pos:column="19">unsigned<pos:position pos:line="67" pos:column="27"/></name></type> <name pos:line="67" pos:column="28">uport<pos:position pos:line="67" pos:column="33"/></name> <init pos:line="67" pos:column="34">= <expr><ternary><condition><expr><operator pos:line="67" pos:column="36">(<pos:position pos:line="67" pos:column="37"/></operator><name><name pos:line="67" pos:column="37">url<pos:position pos:line="67" pos:column="40"/></name><operator pos:line="67" pos:column="40">.<pos:position pos:line="67" pos:column="41"/></operator><name pos:line="67" pos:column="41">port_str<pos:position pos:line="67" pos:column="49"/></name></name> <operator pos:line="67" pos:column="50">&amp;&amp;<pos:position pos:line="67" pos:column="60"/></operator> <name><name pos:line="67" pos:column="53">url<pos:position pos:line="67" pos:column="56"/></name><operator pos:line="67" pos:column="56">.<pos:position pos:line="67" pos:column="57"/></operator><name pos:line="67" pos:column="57">port_str<pos:position pos:line="67" pos:column="65"/></name><index pos:line="67" pos:column="65">[<expr><literal type="number" pos:line="67" pos:column="66">0<pos:position pos:line="67" pos:column="67"/></literal></expr>]<pos:position pos:line="67" pos:column="68"/></index></name><operator pos:line="67" pos:column="68">)<pos:position pos:line="67" pos:column="69"/></operator></expr>
                    ?<pos:position pos:line="68" pos:column="22"/></condition><then pos:line="68" pos:column="22"> <expr><name><name pos:line="68" pos:column="23">url<pos:position pos:line="68" pos:column="26"/></name><operator pos:line="68" pos:column="26">.<pos:position pos:line="68" pos:column="27"/></operator><name pos:line="68" pos:column="27">port<pos:position pos:line="68" pos:column="31"/></name></name></expr> <pos:position pos:line="68" pos:column="32"/></then><else pos:line="68" pos:column="32">: <expr><call><name pos:line="68" pos:column="34">apr_uri_port_of_scheme<pos:position pos:line="68" pos:column="56"/></name><argument_list pos:line="68" pos:column="56">(<argument><expr><name><name pos:line="68" pos:column="57">url<pos:position pos:line="68" pos:column="60"/></name><operator pos:line="68" pos:column="60">.<pos:position pos:line="68" pos:column="61"/></operator><name pos:line="68" pos:column="61">scheme<pos:position pos:line="68" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="68"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="68" pos:column="69"/></decl_stmt>

            <if pos:line="70" pos:column="13">if <condition pos:line="70" pos:column="16">(<expr><name pos:line="70" pos:column="17">fport<pos:position pos:line="70" pos:column="22"/></name> <operator pos:line="70" pos:column="23">!=<pos:position pos:line="70" pos:column="25"/></operator> <name pos:line="70" pos:column="26">uport<pos:position pos:line="70" pos:column="31"/></name></expr>)<pos:position pos:line="70" pos:column="32"/></condition><then pos:line="70" pos:column="32"> <block pos:line="70" pos:column="33">{
                <return pos:line="71" pos:column="17">return <expr><literal type="number" pos:line="71" pos:column="24">0<pos:position pos:line="71" pos:column="25"/></literal></expr>;<pos:position pos:line="71" pos:column="26"/></return>
            }<pos:position pos:line="72" pos:column="14"/></block></then></if>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if>
    }<pos:position pos:line="74" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="76" pos:column="5">/* For HTTP caching purposes, an empty (NULL) path is equivalent to
     * a single "/" path. RFCs 3986/2396
     */</comment>
    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><operator pos:line="79" pos:column="9">!<pos:position pos:line="79" pos:column="10"/></operator><name><name pos:line="79" pos:column="10">url<pos:position pos:line="79" pos:column="13"/></name><operator pos:line="79" pos:column="13">.<pos:position pos:line="79" pos:column="14"/></operator><name pos:line="79" pos:column="14">path<pos:position pos:line="79" pos:column="18"/></name></name></expr>)<pos:position pos:line="79" pos:column="19"/></condition><then pos:line="79" pos:column="19"> <block pos:line="79" pos:column="20">{
        <if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><operator pos:line="80" pos:column="13">*<pos:position pos:line="80" pos:column="14"/></operator><name><name pos:line="80" pos:column="14">filter<pos:position pos:line="80" pos:column="20"/></name><operator pos:line="80" pos:column="20">.<pos:position pos:line="80" pos:column="21"/></operator><name pos:line="80" pos:column="21">path<pos:position pos:line="80" pos:column="25"/></name></name> <operator pos:line="80" pos:column="26">==<pos:position pos:line="80" pos:column="28"/></operator> <literal type="char" pos:line="80" pos:column="29">'/'<pos:position pos:line="80" pos:column="32"/></literal> <operator pos:line="80" pos:column="33">&amp;&amp;<pos:position pos:line="80" pos:column="43"/></operator> <name pos:line="80" pos:column="36">pathlen<pos:position pos:line="80" pos:column="43"/></name> <operator pos:line="80" pos:column="44">==<pos:position pos:line="80" pos:column="46"/></operator> <literal type="number" pos:line="80" pos:column="47">1<pos:position pos:line="80" pos:column="48"/></literal></expr>)<pos:position pos:line="80" pos:column="49"/></condition><then pos:line="80" pos:column="49"> <block pos:line="80" pos:column="50">{
            <return pos:line="81" pos:column="13">return <expr><literal type="number" pos:line="81" pos:column="20">1<pos:position pos:line="81" pos:column="21"/></literal></expr>;<pos:position pos:line="81" pos:column="22"/></return>
        }<pos:position pos:line="82" pos:column="10"/></block></then>
        <else pos:line="83" pos:column="9">else <block pos:line="83" pos:column="14">{
            <return pos:line="84" pos:column="13">return <expr><literal type="number" pos:line="84" pos:column="20">0<pos:position pos:line="84" pos:column="21"/></literal></expr>;<pos:position pos:line="84" pos:column="22"/></return>
        }<pos:position pos:line="85" pos:column="10"/></block></else></if>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="88" pos:column="5">/* Url has met all of the filter conditions so far, determine
     * if the paths match.
     */</comment>
    <return pos:line="91" pos:column="5">return <expr><operator pos:line="91" pos:column="12">!<pos:position pos:line="91" pos:column="13"/></operator><call><name pos:line="91" pos:column="13">strncmp<pos:position pos:line="91" pos:column="20"/></name><argument_list pos:line="91" pos:column="20">(<argument><expr><name><name pos:line="91" pos:column="21">filter<pos:position pos:line="91" pos:column="27"/></name><operator pos:line="91" pos:column="27">.<pos:position pos:line="91" pos:column="28"/></operator><name pos:line="91" pos:column="28">path<pos:position pos:line="91" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="34">url<pos:position pos:line="91" pos:column="37"/></name><operator pos:line="91" pos:column="37">.<pos:position pos:line="91" pos:column="38"/></operator><name pos:line="91" pos:column="38">path<pos:position pos:line="91" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="44">pathlen<pos:position pos:line="91" pos:column="51"/></name></expr></argument>)<pos:position pos:line="91" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="53"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

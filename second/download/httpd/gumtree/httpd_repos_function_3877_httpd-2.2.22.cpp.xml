<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3877_httpd-2.2.22.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">dlclose<pos:position pos:line="1" pos:column="12"/></name><parameter_list pos:line="1" pos:column="12">(<parameter><decl><type><name pos:line="1" pos:column="13">void<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">handle<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">register<pos:position pos:line="3" pos:column="13"/></specifier> <name pos:line="3" pos:column="14">ModulePtr<pos:position pos:line="3" pos:column="23"/></name></type> <name pos:line="3" pos:column="24">mp<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><operator pos:line="3" pos:column="29">(<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="30">ModulePtr<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">)<pos:position pos:line="3" pos:column="40"/></operator> <name pos:line="3" pos:column="41">handle<pos:position pos:line="3" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">result<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">register<pos:position pos:line="5" pos:column="13"/></specifier> <name pos:line="5" pos:column="14">ModulePtr<pos:position pos:line="5" pos:column="23"/></name></type> <name pos:line="5" pos:column="24">mp1<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">--<pos:position pos:line="7" pos:column="11"/></operator><name><name pos:line="7" pos:column="11">mp<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">refCnt<pos:position pos:line="7" pos:column="21"/></name></name> <operator pos:line="7" pos:column="22">&gt;<pos:position pos:line="7" pos:column="26"/></operator> <literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26">
	<block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return></block></then></if>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">mp<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">info<pos:position pos:line="9" pos:column="17"/></name></name> <operator pos:line="9" pos:column="18">&amp;&amp;<pos:position pos:line="9" pos:column="28"/></operator> <name><name pos:line="9" pos:column="21">mp<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">-&gt;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="25">info<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">fini<pos:position pos:line="9" pos:column="35"/></name></name></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36">
	<block type="pseudo"><expr_stmt><expr><call pos:line="10" pos:column="9">(<modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier><name><name pos:line="10" pos:column="11">mp<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">info<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">fini<pos:position pos:line="10" pos:column="25"/></name></name>) <argument_list pos:line="10" pos:column="27">()<pos:position pos:line="10" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt></block></then></if>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">mp<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">cdtors<pos:position pos:line="11" pos:column="19"/></name></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20"> <block pos:line="11" pos:column="21">{
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">CdtorPtr<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">cp<pos:position pos:line="12" pos:column="20"/></name> <init pos:line="12" pos:column="21">= <expr><name><name pos:line="12" pos:column="23">mp<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">cdtors<pos:position pos:line="12" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>
	<while pos:line="13" pos:column="9">while <condition pos:line="13" pos:column="15">(<expr><name><name pos:line="13" pos:column="16">cp<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">init<pos:position pos:line="13" pos:column="24"/></name></name> <operator pos:line="13" pos:column="25">||<pos:position pos:line="13" pos:column="27"/></operator> <name><name pos:line="13" pos:column="28">cp<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">term<pos:position pos:line="13" pos:column="36"/></name></name></expr>)<pos:position pos:line="13" pos:column="37"/></condition> <block pos:line="13" pos:column="38">{
	    <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><name><name pos:line="14" pos:column="17">cp<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">term<pos:position pos:line="14" pos:column="25"/></name></name> <operator pos:line="14" pos:column="26">&amp;&amp;<pos:position pos:line="14" pos:column="36"/></operator> <name><name pos:line="14" pos:column="29">cp<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">init<pos:position pos:line="14" pos:column="37"/></name></name> <operator pos:line="14" pos:column="38">!=<pos:position pos:line="14" pos:column="40"/></operator> <operator pos:line="14" pos:column="41">(<pos:position pos:line="14" pos:column="42"/></operator><call><call><name pos:line="14" pos:column="42">void<pos:position pos:line="14" pos:column="46"/></name> <argument_list pos:line="14" pos:column="47">(<argument><expr><operator pos:line="14" pos:column="48">*<pos:position pos:line="14" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call><argument_list pos:line="14" pos:column="50">(<argument><expr><name pos:line="14" pos:column="51">void<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call><operator pos:line="14" pos:column="56">)<pos:position pos:line="14" pos:column="57"/></operator> <literal type="number" pos:line="14" pos:column="58">0xffffffff<pos:position pos:line="14" pos:column="68"/></literal></expr>)<pos:position pos:line="14" pos:column="69"/></condition><then pos:line="14" pos:column="69">
		<block type="pseudo"><expr_stmt><expr><call pos:line="15" pos:column="17">(<modifier pos:line="15" pos:column="18">*<pos:position pos:line="15" pos:column="19"/></modifier><name><name pos:line="15" pos:column="19">cp<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">term<pos:position pos:line="15" pos:column="27"/></name></name>) <argument_list pos:line="15" pos:column="29">()<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt></block></then></if>
	    <expr_stmt><expr><name pos:line="16" pos:column="13">cp<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">++<pos:position pos:line="16" pos:column="17"/></operator></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></while>
	<comment type="block" pos:line="18" pos:column="9">/*
	 * If the function to handle global destructors for g++
	 * exists, call it.  --jwe
	 */</comment>
    }<pos:position pos:line="22" pos:column="6"/></block></then>
    <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if <condition pos:line="23" pos:column="13">(<expr><name><name pos:line="23" pos:column="14">mp<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">gcc_dtor<pos:position pos:line="23" pos:column="26"/></name></name></expr>)<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27"> <block pos:line="23" pos:column="28">{
	<expr_stmt><expr><call pos:line="24" pos:column="9">(<modifier pos:line="24" pos:column="10">*<pos:position pos:line="24" pos:column="11"/></modifier><name><name pos:line="24" pos:column="11">mp<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">gcc_dtor<pos:position pos:line="24" pos:column="23"/></name></name>) <argument_list pos:line="24" pos:column="25">()<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if></elseif></if>
    <expr_stmt><expr><name pos:line="26" pos:column="5">result<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">unload<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name><name pos:line="26" pos:column="21">mp<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">-&gt;<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="25">entry<pos:position pos:line="26" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">result<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">==<pos:position pos:line="27" pos:column="18"/></operator> <operator pos:line="27" pos:column="19">-<pos:position pos:line="27" pos:column="20"/></operator><literal type="number" pos:line="27" pos:column="20">1<pos:position pos:line="27" pos:column="21"/></literal></expr>)<pos:position pos:line="27" pos:column="22"/></condition><then pos:line="27" pos:column="22"> <block pos:line="27" pos:column="23">{
	<expr_stmt><expr><name pos:line="28" pos:column="9">errvalid<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">++<pos:position pos:line="28" pos:column="19"/></operator></expr>;<pos:position pos:line="28" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">strcpy<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><name pos:line="29" pos:column="16">errbuf<pos:position pos:line="29" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="24">strerror<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">errno<pos:position pos:line="29" pos:column="38"/></name></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name><name pos:line="31" pos:column="9">mp<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">-&gt;<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="13">exports<pos:position pos:line="31" pos:column="20"/></name></name></expr>)<pos:position pos:line="31" pos:column="21"/></condition><then pos:line="31" pos:column="21"> <block pos:line="31" pos:column="22">{
	<decl_stmt><decl><type><specifier pos:line="32" pos:column="9">register<pos:position pos:line="32" pos:column="17"/></specifier> <name pos:line="32" pos:column="18">ExportPtr<pos:position pos:line="32" pos:column="27"/></name></type> <name pos:line="32" pos:column="28">ep<pos:position pos:line="32" pos:column="30"/></name></decl>;<pos:position pos:line="32" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="33" pos:column="9">register<pos:position pos:line="33" pos:column="17"/></specifier> <name pos:line="33" pos:column="18">int<pos:position pos:line="33" pos:column="21"/></name></type> <name pos:line="33" pos:column="22">i<pos:position pos:line="33" pos:column="23"/></name></decl>;<pos:position pos:line="33" pos:column="24"/></decl_stmt>
	<for pos:line="34" pos:column="9">for <control pos:line="34" pos:column="13">(<init><expr><name pos:line="34" pos:column="14">ep<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <name><name pos:line="34" pos:column="19">mp<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">-&gt;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="23">exports<pos:position pos:line="34" pos:column="30"/></name></name></expr><operator pos:line="34" pos:column="30">,<pos:position pos:line="34" pos:column="31"/></operator> <expr><name pos:line="34" pos:column="32">i<pos:position pos:line="34" pos:column="33"/></name> <operator pos:line="34" pos:column="34">=<pos:position pos:line="34" pos:column="35"/></operator> <name><name pos:line="34" pos:column="36">mp<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">-&gt;<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="40">nExports<pos:position pos:line="34" pos:column="48"/></name></name></expr>;<pos:position pos:line="34" pos:column="49"/></init> <condition><expr><name pos:line="34" pos:column="50">i<pos:position pos:line="34" pos:column="51"/></name></expr>;<pos:position pos:line="34" pos:column="52"/></condition> <incr><expr><name pos:line="34" pos:column="53">i<pos:position pos:line="34" pos:column="54"/></name><operator pos:line="34" pos:column="54">--<pos:position pos:line="34" pos:column="56"/></operator></expr><operator pos:line="34" pos:column="56">,<pos:position pos:line="34" pos:column="57"/></operator> <expr><name pos:line="34" pos:column="58">ep<pos:position pos:line="34" pos:column="60"/></name><operator pos:line="34" pos:column="60">++<pos:position pos:line="34" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="63"/></control>
	    <block type="pseudo"><if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><name><name pos:line="35" pos:column="17">ep<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">name<pos:position pos:line="35" pos:column="25"/></name></name></expr>)<pos:position pos:line="35" pos:column="26"/></condition><then pos:line="35" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">free<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name><name pos:line="36" pos:column="22">ep<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">-&gt;<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="26">name<pos:position pos:line="36" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt></block></then></if></block></for>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">free<pos:position pos:line="37" pos:column="13"/></name><argument_list pos:line="37" pos:column="13">(<argument><expr><name><name pos:line="37" pos:column="14">mp<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">exports<pos:position pos:line="37" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">mp<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">==<pos:position pos:line="39" pos:column="14"/></operator> <name pos:line="39" pos:column="15">modList<pos:position pos:line="39" pos:column="22"/></name></expr>)<pos:position pos:line="39" pos:column="23"/></condition><then pos:line="39" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="9">modList<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <name><name pos:line="40" pos:column="19">mp<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">-&gt;<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="23">next<pos:position pos:line="40" pos:column="27"/></name></name></expr>;<pos:position pos:line="40" pos:column="28"/></expr_stmt></block></then>
    <else pos:line="41" pos:column="5">else <block pos:line="41" pos:column="10">{
	<for pos:line="42" pos:column="9">for <control pos:line="42" pos:column="13">(<init><expr><name pos:line="42" pos:column="14">mp1<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">=<pos:position pos:line="42" pos:column="19"/></operator> <name pos:line="42" pos:column="20">modList<pos:position pos:line="42" pos:column="27"/></name></expr>;<pos:position pos:line="42" pos:column="28"/></init> <condition><expr><name pos:line="42" pos:column="29">mp1<pos:position pos:line="42" pos:column="32"/></name></expr>;<pos:position pos:line="42" pos:column="33"/></condition> <incr><expr><name pos:line="42" pos:column="34">mp1<pos:position pos:line="42" pos:column="37"/></name> <operator pos:line="42" pos:column="38">=<pos:position pos:line="42" pos:column="39"/></operator> <name><name pos:line="42" pos:column="40">mp1<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">-&gt;<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="45">next<pos:position pos:line="42" pos:column="49"/></name></name></expr></incr>)<pos:position pos:line="42" pos:column="50"/></control>
	    <block type="pseudo"><if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><name><name pos:line="43" pos:column="17">mp1<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">-&gt;<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="22">next<pos:position pos:line="43" pos:column="26"/></name></name> <operator pos:line="43" pos:column="27">==<pos:position pos:line="43" pos:column="29"/></operator> <name pos:line="43" pos:column="30">mp<pos:position pos:line="43" pos:column="32"/></name></expr>)<pos:position pos:line="43" pos:column="33"/></condition><then pos:line="43" pos:column="33"> <block pos:line="43" pos:column="34">{
		<expr_stmt><expr><name><name pos:line="44" pos:column="17">mp1<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">-&gt;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="22">next<pos:position pos:line="44" pos:column="26"/></name></name> <operator pos:line="44" pos:column="27">=<pos:position pos:line="44" pos:column="28"/></operator> <name><name pos:line="44" pos:column="29">mp<pos:position pos:line="44" pos:column="31"/></name><operator pos:line="44" pos:column="31">-&gt;<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="33">next<pos:position pos:line="44" pos:column="37"/></name></name></expr>;<pos:position pos:line="44" pos:column="38"/></expr_stmt>
		<break pos:line="45" pos:column="17">break;<pos:position pos:line="45" pos:column="23"/></break>
	    }<pos:position pos:line="46" pos:column="14"/></block></then></if></block></for>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">free<pos:position pos:line="48" pos:column="9"/></name><argument_list pos:line="48" pos:column="9">(<argument><expr><name><name pos:line="48" pos:column="10">mp<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">name<pos:position pos:line="48" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">free<pos:position pos:line="49" pos:column="9"/></name><argument_list pos:line="49" pos:column="9">(<argument><expr><name pos:line="49" pos:column="10">mp<pos:position pos:line="49" pos:column="12"/></name></expr></argument>)<pos:position pos:line="49" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="14"/></expr_stmt>
    <return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">result<pos:position pos:line="50" pos:column="18"/></name></expr>;<pos:position pos:line="50" pos:column="19"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

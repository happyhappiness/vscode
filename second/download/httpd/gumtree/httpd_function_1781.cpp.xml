<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1781.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">store_body<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">cache_handle_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">h<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">request_rec<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">r<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">apr_bucket_brigade<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">bb<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_bucket<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">e<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">disk_cache_object_t<pos:position pos:line="6" pos:column="24"/></name> <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier></type><name pos:line="6" pos:column="26">dobj<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><operator pos:line="6" pos:column="33">(<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="34">disk_cache_object_t<pos:position pos:line="6" pos:column="53"/></name> <operator pos:line="6" pos:column="54">*<pos:position pos:line="6" pos:column="55"/></operator><operator pos:line="6" pos:column="55">)<pos:position pos:line="6" pos:column="56"/></operator> <name><name pos:line="6" pos:column="57">h<pos:position pos:line="6" pos:column="58"/></name><operator pos:line="6" pos:column="58">-&gt;<pos:position pos:line="6" pos:column="63"/></operator><name pos:line="6" pos:column="60">cache_obj<pos:position pos:line="6" pos:column="69"/></name><operator pos:line="6" pos:column="69">-&gt;<pos:position pos:line="6" pos:column="74"/></operator><name pos:line="6" pos:column="71">vobj<pos:position pos:line="6" pos:column="75"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="76"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">disk_cache_conf<pos:position pos:line="7" pos:column="20"/></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">conf<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><call><name pos:line="7" pos:column="29">ap_get_module_config<pos:position pos:line="7" pos:column="49"/></name><argument_list pos:line="7" pos:column="49">(<argument><expr><name><name pos:line="7" pos:column="50">r<pos:position pos:line="7" pos:column="51"/></name><operator pos:line="7" pos:column="51">-&gt;<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="53">server<pos:position pos:line="7" pos:column="59"/></name><operator pos:line="7" pos:column="59">-&gt;<pos:position pos:line="7" pos:column="64"/></operator><name pos:line="7" pos:column="61">module_config<pos:position pos:line="7" pos:column="74"/></name></name></expr></argument>,
                                                 <argument><expr><operator pos:line="8" pos:column="50">&amp;<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="51">disk_cache_module<pos:position pos:line="8" pos:column="68"/></name></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="70"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* We write to a temp file and then atomically rename the file over
     * in file_cache_el_final().
     */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name><name pos:line="13" pos:column="10">dobj<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">tfd<pos:position pos:line="13" pos:column="19"/></name></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20"> <block pos:line="13" pos:column="21">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">rv<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">apr_file_mktemp<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><operator pos:line="14" pos:column="30">&amp;<pos:position pos:line="14" pos:column="35"/></operator><name><name pos:line="14" pos:column="31">dobj<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">tfd<pos:position pos:line="14" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="42">dobj<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">-&gt;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="48">tempfile<pos:position pos:line="14" pos:column="56"/></name></name></expr></argument>,
                             <argument><expr><name pos:line="15" pos:column="30">APR_CREATE<pos:position pos:line="15" pos:column="40"/></name> <operator pos:line="15" pos:column="41">|<pos:position pos:line="15" pos:column="42"/></operator> <name pos:line="15" pos:column="43">APR_WRITE<pos:position pos:line="15" pos:column="52"/></name> <operator pos:line="15" pos:column="53">|<pos:position pos:line="15" pos:column="54"/></operator> <name pos:line="15" pos:column="55">APR_BINARY<pos:position pos:line="15" pos:column="65"/></name> <operator pos:line="15" pos:column="66">|<pos:position pos:line="15" pos:column="67"/></operator>
                             <name pos:line="16" pos:column="30">APR_BUFFERED<pos:position pos:line="16" pos:column="42"/></name> <operator pos:line="16" pos:column="43">|<pos:position pos:line="16" pos:column="44"/></operator> <name pos:line="16" pos:column="45">APR_EXCL<pos:position pos:line="16" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="55">r<pos:position pos:line="16" pos:column="56"/></name><operator pos:line="16" pos:column="56">-&gt;<pos:position pos:line="16" pos:column="61"/></operator><name pos:line="16" pos:column="58">pool<pos:position pos:line="16" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">rv<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">!=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">APR_SUCCESS<pos:position pos:line="17" pos:column="30"/></name></expr>)<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31"> <block pos:line="17" pos:column="32">{
            <return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">rv<pos:position pos:line="18" pos:column="22"/></name></expr>;<pos:position pos:line="18" pos:column="23"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">dobj<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">file_size<pos:position pos:line="20" pos:column="24"/></name></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <literal type="number" pos:line="20" pos:column="27">0<pos:position pos:line="20" pos:column="28"/></literal></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <for pos:line="23" pos:column="5">for <control pos:line="23" pos:column="9">(<init><expr><name pos:line="23" pos:column="10">e<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">APR_BRIGADE_FIRST<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">bb<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></init>
         <condition><expr><name pos:line="24" pos:column="10">e<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">!=<pos:position pos:line="24" pos:column="14"/></operator> <call><name pos:line="24" pos:column="15">APR_BRIGADE_SENTINEL<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><name pos:line="24" pos:column="36">bb<pos:position pos:line="24" pos:column="38"/></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></condition>
         <incr><expr><name pos:line="25" pos:column="10">e<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">APR_BUCKET_NEXT<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">e<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr></incr>)<pos:position pos:line="25" pos:column="33"/></control>
    <block pos:line="26" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="27" pos:column="9">const<pos:position pos:line="27" pos:column="14"/></specifier> <name pos:line="27" pos:column="15">char<pos:position pos:line="27" pos:column="19"/></name> <modifier pos:line="27" pos:column="20">*<pos:position pos:line="27" pos:column="21"/></modifier></type><name pos:line="27" pos:column="21">str<pos:position pos:line="27" pos:column="24"/></name></decl>;<pos:position pos:line="27" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">apr_size_t<pos:position pos:line="28" pos:column="19"/></name></type> <name pos:line="28" pos:column="20">length<pos:position pos:line="28" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="28" pos:column="28">written<pos:position pos:line="28" pos:column="35"/></name></decl>;<pos:position pos:line="28" pos:column="36"/></decl_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">rv<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">apr_bucket_read<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">e<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="33">&amp;<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="34">str<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="39">&amp;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="40">length<pos:position pos:line="29" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="48">APR_BLOCK_READ<pos:position pos:line="29" pos:column="62"/></name></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="64"/></expr_stmt>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">rv<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">!=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">APR_SUCCESS<pos:position pos:line="30" pos:column="30"/></name></expr>)<pos:position pos:line="30" pos:column="31"/></condition><then pos:line="30" pos:column="31"> <block pos:line="30" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">ap_log_error<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">APLOG_MARK<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">APLOG_ERR<pos:position pos:line="31" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="49">0<pos:position pos:line="31" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="52">r<pos:position pos:line="31" pos:column="53"/></name><operator pos:line="31" pos:column="53">-&gt;<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="55">server<pos:position pos:line="31" pos:column="61"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="32" pos:column="26">"cache_disk: Error when reading bucket for URL %s"<pos:position pos:line="32" pos:column="76"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="33" pos:column="26">h<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">-&gt;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="29">cache_obj<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">-&gt;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="40">key<pos:position pos:line="33" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
            <comment type="block" pos:line="34" pos:column="13">/* Remove the intermediate cache file and return non-APR_SUCCESS */</comment>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">file_cache_errorcleanup<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><name pos:line="35" pos:column="37">dobj<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="43">r<pos:position pos:line="35" pos:column="44"/></name></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>
            <return pos:line="36" pos:column="13">return <expr><name pos:line="36" pos:column="20">rv<pos:position pos:line="36" pos:column="22"/></name></expr>;<pos:position pos:line="36" pos:column="23"/></return>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="38" pos:column="9">rv<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <call><name pos:line="38" pos:column="14">apr_file_write_full<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">(<argument><expr><name><name pos:line="38" pos:column="34">dobj<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">-&gt;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="40">tfd<pos:position pos:line="38" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="45">str<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="50">length<pos:position pos:line="38" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="58">&amp;<pos:position pos:line="38" pos:column="63"/></operator><name pos:line="38" pos:column="59">written<pos:position pos:line="38" pos:column="66"/></name></expr></argument>)<pos:position pos:line="38" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="68"/></expr_stmt>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">rv<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">!=<pos:position pos:line="39" pos:column="18"/></operator> <name pos:line="39" pos:column="19">APR_SUCCESS<pos:position pos:line="39" pos:column="30"/></name></expr>)<pos:position pos:line="39" pos:column="31"/></condition><then pos:line="39" pos:column="31"> <block pos:line="39" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">ap_log_error<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">APLOG_MARK<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="38">APLOG_ERR<pos:position pos:line="40" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="49">0<pos:position pos:line="40" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="52">r<pos:position pos:line="40" pos:column="53"/></name><operator pos:line="40" pos:column="53">-&gt;<pos:position pos:line="40" pos:column="58"/></operator><name pos:line="40" pos:column="55">server<pos:position pos:line="40" pos:column="61"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="41" pos:column="26">"cache_disk: Error when writing cache file for URL %s"<pos:position pos:line="41" pos:column="80"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="42" pos:column="26">h<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">-&gt;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="29">cache_obj<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">-&gt;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="40">key<pos:position pos:line="42" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
            <comment type="block" pos:line="43" pos:column="13">/* Remove the intermediate cache file and return non-APR_SUCCESS */</comment>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">file_cache_errorcleanup<pos:position pos:line="44" pos:column="36"/></name><argument_list pos:line="44" pos:column="36">(<argument><expr><name pos:line="44" pos:column="37">dobj<pos:position pos:line="44" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="43">r<pos:position pos:line="44" pos:column="44"/></name></expr></argument>)<pos:position pos:line="44" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="46"/></expr_stmt>
            <return pos:line="45" pos:column="13">return <expr><name pos:line="45" pos:column="20">rv<pos:position pos:line="45" pos:column="22"/></name></expr>;<pos:position pos:line="45" pos:column="23"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">dobj<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">-&gt;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="15">file_size<pos:position pos:line="47" pos:column="24"/></name></name> <operator pos:line="47" pos:column="25">+=<pos:position pos:line="47" pos:column="27"/></operator> <name pos:line="47" pos:column="28">written<pos:position pos:line="47" pos:column="35"/></name></expr>;<pos:position pos:line="47" pos:column="36"/></expr_stmt>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">dobj<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">-&gt;<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="19">file_size<pos:position pos:line="48" pos:column="28"/></name></name> <operator pos:line="48" pos:column="29">&gt;<pos:position pos:line="48" pos:column="33"/></operator> <name><name pos:line="48" pos:column="31">conf<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">-&gt;<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="37">maxfs<pos:position pos:line="48" pos:column="42"/></name></name></expr>)<pos:position pos:line="48" pos:column="43"/></condition><then pos:line="48" pos:column="43"> <block pos:line="48" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">ap_log_error<pos:position pos:line="49" pos:column="25"/></name><argument_list pos:line="49" pos:column="25">(<argument><expr><name pos:line="49" pos:column="26">APLOG_MARK<pos:position pos:line="49" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="38">APLOG_DEBUG<pos:position pos:line="49" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="51">0<pos:position pos:line="49" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="54">r<pos:position pos:line="49" pos:column="55"/></name><operator pos:line="49" pos:column="55">-&gt;<pos:position pos:line="49" pos:column="60"/></operator><name pos:line="49" pos:column="57">server<pos:position pos:line="49" pos:column="63"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="50" pos:column="26">"cache_disk: URL %s failed the size check "<pos:position pos:line="50" pos:column="69"/></literal>
                         <literal type="string" pos:line="51" pos:column="26">"(%"<pos:position pos:line="51" pos:column="30"/></literal> <name pos:line="51" pos:column="31">APR_OFF_T_FMT<pos:position pos:line="51" pos:column="44"/></name> <literal type="string" pos:line="51" pos:column="45">" &gt; %"<pos:position pos:line="51" pos:column="54"/></literal> <name pos:line="51" pos:column="52">APR_OFF_T_FMT<pos:position pos:line="51" pos:column="65"/></name> <literal type="string" pos:line="51" pos:column="66">")"<pos:position pos:line="51" pos:column="69"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="52" pos:column="26">h<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">-&gt;<pos:position pos:line="52" pos:column="32"/></operator><name pos:line="52" pos:column="29">cache_obj<pos:position pos:line="52" pos:column="38"/></name><operator pos:line="52" pos:column="38">-&gt;<pos:position pos:line="52" pos:column="43"/></operator><name pos:line="52" pos:column="40">key<pos:position pos:line="52" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="45">dobj<pos:position pos:line="52" pos:column="49"/></name><operator pos:line="52" pos:column="49">-&gt;<pos:position pos:line="52" pos:column="54"/></operator><name pos:line="52" pos:column="51">file_size<pos:position pos:line="52" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="62">conf<pos:position pos:line="52" pos:column="66"/></name><operator pos:line="52" pos:column="66">-&gt;<pos:position pos:line="52" pos:column="71"/></operator><name pos:line="52" pos:column="68">maxfs<pos:position pos:line="52" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="75"/></expr_stmt>
            <comment type="block" pos:line="53" pos:column="13">/* Remove the intermediate cache file and return non-APR_SUCCESS */</comment>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">file_cache_errorcleanup<pos:position pos:line="54" pos:column="36"/></name><argument_list pos:line="54" pos:column="36">(<argument><expr><name pos:line="54" pos:column="37">dobj<pos:position pos:line="54" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="43">r<pos:position pos:line="54" pos:column="44"/></name></expr></argument>)<pos:position pos:line="54" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="46"/></expr_stmt>
            <return pos:line="55" pos:column="13">return <expr><name pos:line="55" pos:column="20">APR_EGENERAL<pos:position pos:line="55" pos:column="32"/></name></expr>;<pos:position pos:line="55" pos:column="33"/></return>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>
    }<pos:position pos:line="57" pos:column="6"/></block></for>

    <comment type="block" pos:line="59" pos:column="5">/* Was this the final bucket? If yes, close the temp file and perform
     * sanity checks.
     */</comment>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><call><name pos:line="62" pos:column="9">APR_BUCKET_IS_EOS<pos:position pos:line="62" pos:column="26"/></name><argument_list pos:line="62" pos:column="26">(<argument><expr><call><name pos:line="62" pos:column="27">APR_BRIGADE_LAST<pos:position pos:line="62" pos:column="43"/></name><argument_list pos:line="62" pos:column="43">(<argument><expr><name pos:line="62" pos:column="44">bb<pos:position pos:line="62" pos:column="46"/></name></expr></argument>)<pos:position pos:line="62" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="49"/></condition><then pos:line="62" pos:column="49"> <block pos:line="62" pos:column="50">{
        <decl_stmt><decl><type><specifier pos:line="63" pos:column="9">const<pos:position pos:line="63" pos:column="14"/></specifier> <name pos:line="63" pos:column="15">char<pos:position pos:line="63" pos:column="19"/></name> <modifier pos:line="63" pos:column="20">*<pos:position pos:line="63" pos:column="21"/></modifier></type><name pos:line="63" pos:column="21">cl_header<pos:position pos:line="63" pos:column="30"/></name> <init pos:line="63" pos:column="31">= <expr><call><name pos:line="63" pos:column="33">apr_table_get<pos:position pos:line="63" pos:column="46"/></name><argument_list pos:line="63" pos:column="46">(<argument><expr><name><name pos:line="63" pos:column="47">r<pos:position pos:line="63" pos:column="48"/></name><operator pos:line="63" pos:column="48">-&gt;<pos:position pos:line="63" pos:column="53"/></operator><name pos:line="63" pos:column="50">headers_out<pos:position pos:line="63" pos:column="61"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="63">"Content-Length"<pos:position pos:line="63" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="63" pos:column="81"/></decl_stmt>

        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name><name pos:line="65" pos:column="13">r<pos:position pos:line="65" pos:column="14"/></name><operator pos:line="65" pos:column="14">-&gt;<pos:position pos:line="65" pos:column="19"/></operator><name pos:line="65" pos:column="16">connection<pos:position pos:line="65" pos:column="26"/></name><operator pos:line="65" pos:column="26">-&gt;<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="28">aborted<pos:position pos:line="65" pos:column="35"/></name></name> <operator pos:line="65" pos:column="36">||<pos:position pos:line="65" pos:column="38"/></operator> <name><name pos:line="65" pos:column="39">r<pos:position pos:line="65" pos:column="40"/></name><operator pos:line="65" pos:column="40">-&gt;<pos:position pos:line="65" pos:column="45"/></operator><name pos:line="65" pos:column="42">no_cache<pos:position pos:line="65" pos:column="50"/></name></name></expr>)<pos:position pos:line="65" pos:column="51"/></condition><then pos:line="65" pos:column="51"> <block pos:line="65" pos:column="52">{
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">ap_log_error<pos:position pos:line="66" pos:column="25"/></name><argument_list pos:line="66" pos:column="25">(<argument><expr><name pos:line="66" pos:column="26">APLOG_MARK<pos:position pos:line="66" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="38">APLOG_INFO<pos:position pos:line="66" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="50">0<pos:position pos:line="66" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="53">r<pos:position pos:line="66" pos:column="54"/></name><operator pos:line="66" pos:column="54">-&gt;<pos:position pos:line="66" pos:column="59"/></operator><name pos:line="66" pos:column="56">server<pos:position pos:line="66" pos:column="62"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="67" pos:column="26">"disk_cache: Discarding body for URL %s "<pos:position pos:line="67" pos:column="67"/></literal>
                         <literal type="string" pos:line="68" pos:column="26">"because connection has been aborted."<pos:position pos:line="68" pos:column="64"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="69" pos:column="26">h<pos:position pos:line="69" pos:column="27"/></name><operator pos:line="69" pos:column="27">-&gt;<pos:position pos:line="69" pos:column="32"/></operator><name pos:line="69" pos:column="29">cache_obj<pos:position pos:line="69" pos:column="38"/></name><operator pos:line="69" pos:column="38">-&gt;<pos:position pos:line="69" pos:column="43"/></operator><name pos:line="69" pos:column="40">key<pos:position pos:line="69" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="45"/></expr_stmt>
            <comment type="block" pos:line="70" pos:column="13">/* Remove the intermediate cache file and return non-APR_SUCCESS */</comment>
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">file_cache_errorcleanup<pos:position pos:line="71" pos:column="36"/></name><argument_list pos:line="71" pos:column="36">(<argument><expr><name pos:line="71" pos:column="37">dobj<pos:position pos:line="71" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="43">r<pos:position pos:line="71" pos:column="44"/></name></expr></argument>)<pos:position pos:line="71" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="46"/></expr_stmt>
            <return pos:line="72" pos:column="13">return <expr><name pos:line="72" pos:column="20">APR_EGENERAL<pos:position pos:line="72" pos:column="32"/></name></expr>;<pos:position pos:line="72" pos:column="33"/></return>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if>
        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name><name pos:line="74" pos:column="13">dobj<pos:position pos:line="74" pos:column="17"/></name><operator pos:line="74" pos:column="17">-&gt;<pos:position pos:line="74" pos:column="22"/></operator><name pos:line="74" pos:column="19">file_size<pos:position pos:line="74" pos:column="28"/></name></name> <operator pos:line="74" pos:column="29">&lt;<pos:position pos:line="74" pos:column="33"/></operator> <name><name pos:line="74" pos:column="31">conf<pos:position pos:line="74" pos:column="35"/></name><operator pos:line="74" pos:column="35">-&gt;<pos:position pos:line="74" pos:column="40"/></operator><name pos:line="74" pos:column="37">minfs<pos:position pos:line="74" pos:column="42"/></name></name></expr>)<pos:position pos:line="74" pos:column="43"/></condition><then pos:line="74" pos:column="43"> <block pos:line="74" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">ap_log_error<pos:position pos:line="75" pos:column="25"/></name><argument_list pos:line="75" pos:column="25">(<argument><expr><name pos:line="75" pos:column="26">APLOG_MARK<pos:position pos:line="75" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="38">APLOG_DEBUG<pos:position pos:line="75" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="51">0<pos:position pos:line="75" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="54">r<pos:position pos:line="75" pos:column="55"/></name><operator pos:line="75" pos:column="55">-&gt;<pos:position pos:line="75" pos:column="60"/></operator><name pos:line="75" pos:column="57">server<pos:position pos:line="75" pos:column="63"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="76" pos:column="26">"cache_disk: URL %s failed the size check "<pos:position pos:line="76" pos:column="69"/></literal>
                         <literal type="string" pos:line="77" pos:column="26">"(%"<pos:position pos:line="77" pos:column="30"/></literal> <name pos:line="77" pos:column="31">APR_OFF_T_FMT<pos:position pos:line="77" pos:column="44"/></name> <literal type="string" pos:line="77" pos:column="45">" &lt; %"<pos:position pos:line="77" pos:column="54"/></literal> <name pos:line="77" pos:column="52">APR_OFF_T_FMT<pos:position pos:line="77" pos:column="65"/></name> <literal type="string" pos:line="77" pos:column="66">")"<pos:position pos:line="77" pos:column="69"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="78" pos:column="26">h<pos:position pos:line="78" pos:column="27"/></name><operator pos:line="78" pos:column="27">-&gt;<pos:position pos:line="78" pos:column="32"/></operator><name pos:line="78" pos:column="29">cache_obj<pos:position pos:line="78" pos:column="38"/></name><operator pos:line="78" pos:column="38">-&gt;<pos:position pos:line="78" pos:column="43"/></operator><name pos:line="78" pos:column="40">key<pos:position pos:line="78" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="45">dobj<pos:position pos:line="78" pos:column="49"/></name><operator pos:line="78" pos:column="49">-&gt;<pos:position pos:line="78" pos:column="54"/></operator><name pos:line="78" pos:column="51">file_size<pos:position pos:line="78" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="62">conf<pos:position pos:line="78" pos:column="66"/></name><operator pos:line="78" pos:column="66">-&gt;<pos:position pos:line="78" pos:column="71"/></operator><name pos:line="78" pos:column="68">minfs<pos:position pos:line="78" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="75"/></expr_stmt>
            <comment type="block" pos:line="79" pos:column="13">/* Remove the intermediate cache file and return non-APR_SUCCESS */</comment>
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">file_cache_errorcleanup<pos:position pos:line="80" pos:column="36"/></name><argument_list pos:line="80" pos:column="36">(<argument><expr><name pos:line="80" pos:column="37">dobj<pos:position pos:line="80" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="43">r<pos:position pos:line="80" pos:column="44"/></name></expr></argument>)<pos:position pos:line="80" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="46"/></expr_stmt>
            <return pos:line="81" pos:column="13">return <expr><name pos:line="81" pos:column="20">APR_EGENERAL<pos:position pos:line="81" pos:column="32"/></name></expr>;<pos:position pos:line="81" pos:column="33"/></return>
        }<pos:position pos:line="82" pos:column="10"/></block></then></if>
        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name pos:line="83" pos:column="13">cl_header<pos:position pos:line="83" pos:column="22"/></name></expr>)<pos:position pos:line="83" pos:column="23"/></condition><then pos:line="83" pos:column="23"> <block pos:line="83" pos:column="24">{
            <decl_stmt><decl><type><name pos:line="84" pos:column="13">apr_int64_t<pos:position pos:line="84" pos:column="24"/></name></type> <name pos:line="84" pos:column="25">cl<pos:position pos:line="84" pos:column="27"/></name> <init pos:line="84" pos:column="28">= <expr><call><name pos:line="84" pos:column="30">apr_atoi64<pos:position pos:line="84" pos:column="40"/></name><argument_list pos:line="84" pos:column="40">(<argument><expr><name pos:line="84" pos:column="41">cl_header<pos:position pos:line="84" pos:column="50"/></name></expr></argument>)<pos:position pos:line="84" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="84" pos:column="52"/></decl_stmt>
            <if pos:line="85" pos:column="13">if <condition pos:line="85" pos:column="16">(<expr><operator pos:line="85" pos:column="17">(<pos:position pos:line="85" pos:column="18"/></operator><name pos:line="85" pos:column="18">errno<pos:position pos:line="85" pos:column="23"/></name> <operator pos:line="85" pos:column="24">==<pos:position pos:line="85" pos:column="26"/></operator> <literal type="number" pos:line="85" pos:column="27">0<pos:position pos:line="85" pos:column="28"/></literal><operator pos:line="85" pos:column="28">)<pos:position pos:line="85" pos:column="29"/></operator> <operator pos:line="85" pos:column="30">&amp;&amp;<pos:position pos:line="85" pos:column="40"/></operator> <operator pos:line="85" pos:column="33">(<pos:position pos:line="85" pos:column="34"/></operator><name><name pos:line="85" pos:column="34">dobj<pos:position pos:line="85" pos:column="38"/></name><operator pos:line="85" pos:column="38">-&gt;<pos:position pos:line="85" pos:column="43"/></operator><name pos:line="85" pos:column="40">file_size<pos:position pos:line="85" pos:column="49"/></name></name> <operator pos:line="85" pos:column="50">!=<pos:position pos:line="85" pos:column="52"/></operator> <name pos:line="85" pos:column="53">cl<pos:position pos:line="85" pos:column="55"/></name><operator pos:line="85" pos:column="55">)<pos:position pos:line="85" pos:column="56"/></operator></expr>)<pos:position pos:line="85" pos:column="57"/></condition><then pos:line="85" pos:column="57"> <block pos:line="85" pos:column="58">{
                <expr_stmt><expr><call><name pos:line="86" pos:column="17">ap_log_error<pos:position pos:line="86" pos:column="29"/></name><argument_list pos:line="86" pos:column="29">(<argument><expr><name pos:line="86" pos:column="30">APLOG_MARK<pos:position pos:line="86" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="42">APLOG_DEBUG<pos:position pos:line="86" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="55">0<pos:position pos:line="86" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="58">r<pos:position pos:line="86" pos:column="59"/></name><operator pos:line="86" pos:column="59">-&gt;<pos:position pos:line="86" pos:column="64"/></operator><name pos:line="86" pos:column="61">server<pos:position pos:line="86" pos:column="67"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="87" pos:column="30">"disk_cache: URL %s didn't receive complete response, not caching"<pos:position pos:line="87" pos:column="96"/></literal></expr></argument>,
                             <argument><expr><name><name pos:line="88" pos:column="30">h<pos:position pos:line="88" pos:column="31"/></name><operator pos:line="88" pos:column="31">-&gt;<pos:position pos:line="88" pos:column="36"/></operator><name pos:line="88" pos:column="33">cache_obj<pos:position pos:line="88" pos:column="42"/></name><operator pos:line="88" pos:column="42">-&gt;<pos:position pos:line="88" pos:column="47"/></operator><name pos:line="88" pos:column="44">key<pos:position pos:line="88" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="49"/></expr_stmt>
                <comment type="block" pos:line="89" pos:column="17">/* Remove the intermediate cache file and return non-APR_SUCCESS */</comment>
                <expr_stmt><expr><call><name pos:line="90" pos:column="17">file_cache_errorcleanup<pos:position pos:line="90" pos:column="40"/></name><argument_list pos:line="90" pos:column="40">(<argument><expr><name pos:line="90" pos:column="41">dobj<pos:position pos:line="90" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="47">r<pos:position pos:line="90" pos:column="48"/></name></expr></argument>)<pos:position pos:line="90" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="50"/></expr_stmt>
                <return pos:line="91" pos:column="17">return <expr><name pos:line="91" pos:column="24">APR_EGENERAL<pos:position pos:line="91" pos:column="36"/></name></expr>;<pos:position pos:line="91" pos:column="37"/></return>
            }<pos:position pos:line="92" pos:column="14"/></block></then></if>
        }<pos:position pos:line="93" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="95" pos:column="9">/* All checks were fine. Move tempfile to final destination */</comment>
        <comment type="block" pos:line="96" pos:column="9">/* Link to the perm file, and close the descriptor */</comment>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">file_cache_el_final<pos:position pos:line="97" pos:column="28"/></name><argument_list pos:line="97" pos:column="28">(<argument><expr><name pos:line="97" pos:column="29">dobj<pos:position pos:line="97" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="35">r<pos:position pos:line="97" pos:column="36"/></name></expr></argument>)<pos:position pos:line="97" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="98" pos:column="9">ap_log_error<pos:position pos:line="98" pos:column="21"/></name><argument_list pos:line="98" pos:column="21">(<argument><expr><name pos:line="98" pos:column="22">APLOG_MARK<pos:position pos:line="98" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="34">APLOG_DEBUG<pos:position pos:line="98" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="98" pos:column="47">0<pos:position pos:line="98" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="50">r<pos:position pos:line="98" pos:column="51"/></name><operator pos:line="98" pos:column="51">-&gt;<pos:position pos:line="98" pos:column="56"/></operator><name pos:line="98" pos:column="53">server<pos:position pos:line="98" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="99" pos:column="22">"disk_cache: Body for URL %s cached."<pos:position pos:line="99" pos:column="59"/></literal></expr></argument>,  <argument><expr><name><name pos:line="99" pos:column="62">dobj<pos:position pos:line="99" pos:column="66"/></name><operator pos:line="99" pos:column="66">-&gt;<pos:position pos:line="99" pos:column="71"/></operator><name pos:line="99" pos:column="68">name<pos:position pos:line="99" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>

    <return pos:line="102" pos:column="5">return <expr><name pos:line="102" pos:column="12">APR_SUCCESS<pos:position pos:line="102" pos:column="23"/></name></expr>;<pos:position pos:line="102" pos:column="24"/></return>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_317_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_method_put<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">request_rec<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">r<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_resource<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">resource<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">resource_state<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dav_auto_version_info<pos:position pos:line="5" pos:column="26"/></name></type> <name pos:line="5" pos:column="27">av_info<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">dav_hooks_locks<pos:position pos:line="6" pos:column="26"/></name> <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier></type><name pos:line="6" pos:column="28">locks_hooks<pos:position pos:line="6" pos:column="39"/></name> <init pos:line="6" pos:column="40">= <expr><call><name pos:line="6" pos:column="42">DAV_GET_HOOKS_LOCKS<pos:position pos:line="6" pos:column="61"/></name><argument_list pos:line="6" pos:column="61">(<argument><expr><name pos:line="6" pos:column="62">r<pos:position pos:line="6" pos:column="63"/></name></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="65"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">body<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">dav_error<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">err<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">dav_error<pos:position pos:line="9" pos:column="14"/></name> <modifier pos:line="9" pos:column="15">*<pos:position pos:line="9" pos:column="16"/></modifier></type><name pos:line="9" pos:column="16">err2<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">result<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">dav_stream_mode<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">mode<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">dav_stream<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">stream<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">dav_response<pos:position pos:line="13" pos:column="17"/></name> <modifier pos:line="13" pos:column="18">*<pos:position pos:line="13" pos:column="19"/></modifier></type><name pos:line="13" pos:column="19">multi_response<pos:position pos:line="13" pos:column="33"/></name></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">has_range<pos:position pos:line="14" pos:column="18"/></name></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_off_t<pos:position pos:line="15" pos:column="14"/></name></type> <name pos:line="15" pos:column="15">range_start<pos:position pos:line="15" pos:column="26"/></name></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">apr_off_t<pos:position pos:line="16" pos:column="14"/></name></type> <name pos:line="16" pos:column="15">range_end<pos:position pos:line="16" pos:column="24"/></name></decl>;<pos:position pos:line="16" pos:column="25"/></decl_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">result<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <call><name pos:line="18" pos:column="19">ap_setup_client_block<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><name pos:line="18" pos:column="41">r<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">REQUEST_CHUNKED_DECHUNK<pos:position pos:line="18" pos:column="67"/></name></expr></argument>)<pos:position pos:line="18" pos:column="68"/></argument_list></call><operator pos:line="18" pos:column="68">)<pos:position pos:line="18" pos:column="69"/></operator> <operator pos:line="18" pos:column="70">!=<pos:position pos:line="18" pos:column="72"/></operator> <name pos:line="18" pos:column="73">OK<pos:position pos:line="18" pos:column="75"/></name></expr>)<pos:position pos:line="18" pos:column="76"/></condition><then pos:line="18" pos:column="76"> <block pos:line="18" pos:column="77">{
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">result<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="22" pos:column="5">/* Ask repository module to resolve the resource */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">err<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <call><name pos:line="23" pos:column="11">dav_get_resource<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">r<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="31">0<pos:position pos:line="23" pos:column="32"/></literal></expr></argument> <comment type="block" pos:line="23" pos:column="33">/* label_allowed */</comment>, <argument><expr><literal type="number" pos:line="23" pos:column="54">0<pos:position pos:line="23" pos:column="55"/></literal></expr></argument> <comment type="block" pos:line="23" pos:column="56">/* use_checked_in */</comment>,
                           <argument><expr><operator pos:line="24" pos:column="28">&amp;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="29">resource<pos:position pos:line="24" pos:column="37"/></name></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">err<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">!=<pos:position pos:line="25" pos:column="15"/></operator> <name pos:line="25" pos:column="16">NULL<pos:position pos:line="25" pos:column="20"/></name></expr>)<pos:position pos:line="25" pos:column="21"/></condition><then pos:line="25" pos:column="21">
        <block type="pseudo"><return pos:line="26" pos:column="9">return <expr><call><name pos:line="26" pos:column="16">dav_handle_err<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">r<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">err<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="39">NULL<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></return></block></then></if>

    <comment type="block" pos:line="28" pos:column="5">/* If not a file or collection resource, PUT not allowed */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">resource<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">type<pos:position pos:line="29" pos:column="23"/></name></name> <operator pos:line="29" pos:column="24">!=<pos:position pos:line="29" pos:column="26"/></operator> <name pos:line="29" pos:column="27">DAV_RESOURCE_TYPE_REGULAR<pos:position pos:line="29" pos:column="52"/></name>
        <operator pos:line="30" pos:column="9">&amp;&amp;<pos:position pos:line="30" pos:column="19"/></operator> <name><name pos:line="30" pos:column="12">resource<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">type<pos:position pos:line="30" pos:column="26"/></name></name> <operator pos:line="30" pos:column="27">!=<pos:position pos:line="30" pos:column="29"/></operator> <name pos:line="30" pos:column="30">DAV_RESOURCE_TYPE_WORKING<pos:position pos:line="30" pos:column="55"/></name></expr>)<pos:position pos:line="30" pos:column="56"/></condition><then pos:line="30" pos:column="56"> <block pos:line="30" pos:column="57">{
        <expr_stmt><expr><name pos:line="31" pos:column="9">body<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">apr_psprintf<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><name><name pos:line="31" pos:column="29">r<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">-&gt;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="32">pool<pos:position pos:line="31" pos:column="36"/></name></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="32" pos:column="29">"Cannot create resource %s with PUT."<pos:position pos:line="32" pos:column="66"/></literal></expr></argument>,
                            <argument><expr><call><name pos:line="33" pos:column="29">ap_escape_html<pos:position pos:line="33" pos:column="43"/></name><argument_list pos:line="33" pos:column="43">(<argument><expr><name><name pos:line="33" pos:column="44">r<pos:position pos:line="33" pos:column="45"/></name><operator pos:line="33" pos:column="45">-&gt;<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="47">pool<pos:position pos:line="33" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="53">r<pos:position pos:line="33" pos:column="54"/></name><operator pos:line="33" pos:column="54">-&gt;<pos:position pos:line="33" pos:column="59"/></operator><name pos:line="33" pos:column="56">uri<pos:position pos:line="33" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt>
        <return pos:line="34" pos:column="9">return <expr><call><name pos:line="34" pos:column="16">dav_error_response<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">r<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="38">HTTP_CONFLICT<pos:position pos:line="34" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="53">body<pos:position pos:line="34" pos:column="57"/></name></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="59"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="37" pos:column="5">/* Cannot PUT a collection */</comment>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">resource<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">-&gt;<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="19">collection<pos:position pos:line="38" pos:column="29"/></name></name></expr>)<pos:position pos:line="38" pos:column="30"/></condition><then pos:line="38" pos:column="30"> <block pos:line="38" pos:column="31">{
        <return pos:line="39" pos:column="9">return <expr><call><name pos:line="39" pos:column="16">dav_error_response<pos:position pos:line="39" pos:column="34"/></name><argument_list pos:line="39" pos:column="34">(<argument><expr><name pos:line="39" pos:column="35">r<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="38">HTTP_CONFLICT<pos:position pos:line="39" pos:column="51"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="40" pos:column="35">"Cannot PUT to a collection."<pos:position pos:line="40" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="66"/></return>

    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="44" pos:column="5">resource_state<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <call><name pos:line="44" pos:column="22">dav_get_resource_state<pos:position pos:line="44" pos:column="44"/></name><argument_list pos:line="44" pos:column="44">(<argument><expr><name pos:line="44" pos:column="45">r<pos:position pos:line="44" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="48">resource<pos:position pos:line="44" pos:column="56"/></name></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="58"/></expr_stmt>

    <comment type="block" pos:line="46" pos:column="5">/*
     * Note: depth == 0 normally requires no multistatus response. However,
     * if we pass DAV_VALIDATE_PARENT, then we could get an error on a URI
     * other than the Request-URI, thereby requiring a multistatus.
     *
     * If the resource does not exist (DAV_RESOURCE_NULL), then we must
     * check the resource *and* its parent. If the resource exists or is
     * a locknull resource, then we check only the resource.
     */</comment>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">(<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">err<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <call><name pos:line="55" pos:column="16">dav_validate_request<pos:position pos:line="55" pos:column="36"/></name><argument_list pos:line="55" pos:column="36">(<argument><expr><name pos:line="55" pos:column="37">r<pos:position pos:line="55" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="40">resource<pos:position pos:line="55" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="50">0<pos:position pos:line="55" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="53">NULL<pos:position pos:line="55" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="59">&amp;<pos:position pos:line="55" pos:column="64"/></operator><name pos:line="55" pos:column="60">multi_response<pos:position pos:line="55" pos:column="74"/></name></expr></argument>,
                                    <argument><expr><ternary><condition><expr><name pos:line="56" pos:column="37">resource_state<pos:position pos:line="56" pos:column="51"/></name> <operator pos:line="56" pos:column="52">==<pos:position pos:line="56" pos:column="54"/></operator> <name pos:line="56" pos:column="55">DAV_RESOURCE_NULL<pos:position pos:line="56" pos:column="72"/></name></expr> ?<pos:position pos:line="56" pos:column="74"/></condition><then pos:line="56" pos:column="74">
                                    <expr><name pos:line="57" pos:column="37">DAV_VALIDATE_PARENT<pos:position pos:line="57" pos:column="56"/></name></expr> <pos:position pos:line="57" pos:column="57"/></then><else pos:line="57" pos:column="57">:
                                    <expr><name pos:line="58" pos:column="37">DAV_VALIDATE_RESOURCE<pos:position pos:line="58" pos:column="58"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="58" pos:column="60">NULL<pos:position pos:line="58" pos:column="64"/></name></expr></argument>)<pos:position pos:line="58" pos:column="65"/></argument_list></call><operator pos:line="58" pos:column="65">)<pos:position pos:line="58" pos:column="66"/></operator> <operator pos:line="58" pos:column="67">!=<pos:position pos:line="58" pos:column="69"/></operator> <name pos:line="58" pos:column="70">NULL<pos:position pos:line="58" pos:column="74"/></name></expr>)<pos:position pos:line="58" pos:column="75"/></condition><then pos:line="58" pos:column="75"> <block pos:line="58" pos:column="76">{
        <comment type="block" pos:line="59" pos:column="9">/* ### add a higher-level description? */</comment>
        <return pos:line="60" pos:column="9">return <expr><call><name pos:line="60" pos:column="16">dav_handle_err<pos:position pos:line="60" pos:column="30"/></name><argument_list pos:line="60" pos:column="30">(<argument><expr><name pos:line="60" pos:column="31">r<pos:position pos:line="60" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="34">err<pos:position pos:line="60" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="39">multi_response<pos:position pos:line="60" pos:column="53"/></name></expr></argument>)<pos:position pos:line="60" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="55"/></return>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="63" pos:column="5">/* make sure the resource can be modified (if versioning repository) */</comment>
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><operator pos:line="64" pos:column="9">(<pos:position pos:line="64" pos:column="10"/></operator><name pos:line="64" pos:column="10">err<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">=<pos:position pos:line="64" pos:column="15"/></operator> <call><name pos:line="64" pos:column="16">dav_auto_checkout<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><name pos:line="64" pos:column="34">r<pos:position pos:line="64" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="37">resource<pos:position pos:line="64" pos:column="45"/></name></expr></argument>,
                                 <argument><expr><literal type="number" pos:line="65" pos:column="34">0<pos:position pos:line="65" pos:column="35"/></literal></expr></argument> <comment type="block" pos:line="65" pos:column="36">/* not parent_only */</comment>,
                                 <argument><expr><operator pos:line="66" pos:column="34">&amp;<pos:position pos:line="66" pos:column="39"/></operator><name pos:line="66" pos:column="35">av_info<pos:position pos:line="66" pos:column="42"/></name></expr></argument>)<pos:position pos:line="66" pos:column="43"/></argument_list></call><operator pos:line="66" pos:column="43">)<pos:position pos:line="66" pos:column="44"/></operator> <operator pos:line="66" pos:column="45">!=<pos:position pos:line="66" pos:column="47"/></operator> <name pos:line="66" pos:column="48">NULL<pos:position pos:line="66" pos:column="52"/></name></expr>)<pos:position pos:line="66" pos:column="53"/></condition><then pos:line="66" pos:column="53"> <block pos:line="66" pos:column="54">{
        <comment type="block" pos:line="67" pos:column="9">/* ### add a higher-level description? */</comment>
        <return pos:line="68" pos:column="9">return <expr><call><name pos:line="68" pos:column="16">dav_handle_err<pos:position pos:line="68" pos:column="30"/></name><argument_list pos:line="68" pos:column="30">(<argument><expr><name pos:line="68" pos:column="31">r<pos:position pos:line="68" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="34">err<pos:position pos:line="68" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="39">NULL<pos:position pos:line="68" pos:column="43"/></name></expr></argument>)<pos:position pos:line="68" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="45"/></return>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="71" pos:column="5">/* truncate and rewrite the file unless we see a Content-Range */</comment>
    <expr_stmt><expr><name pos:line="72" pos:column="5">mode<pos:position pos:line="72" pos:column="9"/></name> <operator pos:line="72" pos:column="10">=<pos:position pos:line="72" pos:column="11"/></operator> <name pos:line="72" pos:column="12">DAV_MODE_WRITE_TRUNC<pos:position pos:line="72" pos:column="32"/></name></expr>;<pos:position pos:line="72" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name pos:line="74" pos:column="5">has_range<pos:position pos:line="74" pos:column="14"/></name> <operator pos:line="74" pos:column="15">=<pos:position pos:line="74" pos:column="16"/></operator> <call><name pos:line="74" pos:column="17">dav_parse_range<pos:position pos:line="74" pos:column="32"/></name><argument_list pos:line="74" pos:column="32">(<argument><expr><name pos:line="74" pos:column="33">r<pos:position pos:line="74" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="36">&amp;<pos:position pos:line="74" pos:column="41"/></operator><name pos:line="74" pos:column="37">range_start<pos:position pos:line="74" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="50">&amp;<pos:position pos:line="74" pos:column="55"/></operator><name pos:line="74" pos:column="51">range_end<pos:position pos:line="74" pos:column="60"/></name></expr></argument>)<pos:position pos:line="74" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="62"/></expr_stmt>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><name pos:line="75" pos:column="9">has_range<pos:position pos:line="75" pos:column="18"/></name></expr>)<pos:position pos:line="75" pos:column="19"/></condition><then pos:line="75" pos:column="19"> <block pos:line="75" pos:column="20">{
        <expr_stmt><expr><name pos:line="76" pos:column="9">mode<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">=<pos:position pos:line="76" pos:column="15"/></operator> <name pos:line="76" pos:column="16">DAV_MODE_WRITE_SEEKABLE<pos:position pos:line="76" pos:column="39"/></name></expr>;<pos:position pos:line="76" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="79" pos:column="5">/* Create the new file in the repository */</comment>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><operator pos:line="80" pos:column="9">(<pos:position pos:line="80" pos:column="10"/></operator><name pos:line="80" pos:column="10">err<pos:position pos:line="80" pos:column="13"/></name> <operator pos:line="80" pos:column="14">=<pos:position pos:line="80" pos:column="15"/></operator> <call pos:line="80" pos:column="16">(<modifier pos:line="80" pos:column="17">*<pos:position pos:line="80" pos:column="18"/></modifier><name><name pos:line="80" pos:column="18">resource<pos:position pos:line="80" pos:column="26"/></name><operator pos:line="80" pos:column="26">-&gt;<pos:position pos:line="80" pos:column="31"/></operator><name pos:line="80" pos:column="28">hooks<pos:position pos:line="80" pos:column="33"/></name><operator pos:line="80" pos:column="33">-&gt;<pos:position pos:line="80" pos:column="38"/></operator><name pos:line="80" pos:column="35">open_stream<pos:position pos:line="80" pos:column="46"/></name></name>)<argument_list pos:line="80" pos:column="47">(<argument><expr><name pos:line="80" pos:column="48">resource<pos:position pos:line="80" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="58">mode<pos:position pos:line="80" pos:column="62"/></name></expr></argument>,
                                               <argument><expr><operator pos:line="81" pos:column="48">&amp;<pos:position pos:line="81" pos:column="53"/></operator><name pos:line="81" pos:column="49">stream<pos:position pos:line="81" pos:column="55"/></name></expr></argument>)<pos:position pos:line="81" pos:column="56"/></argument_list></call><operator pos:line="81" pos:column="56">)<pos:position pos:line="81" pos:column="57"/></operator> <operator pos:line="81" pos:column="58">!=<pos:position pos:line="81" pos:column="60"/></operator> <name pos:line="81" pos:column="61">NULL<pos:position pos:line="81" pos:column="65"/></name></expr>)<pos:position pos:line="81" pos:column="66"/></condition><then pos:line="81" pos:column="66"> <block pos:line="81" pos:column="67">{
        <comment type="block" pos:line="82" pos:column="9">/* ### assuming FORBIDDEN is probably not quite right... */</comment>
        <expr_stmt><expr><name pos:line="83" pos:column="9">err<pos:position pos:line="83" pos:column="12"/></name> <operator pos:line="83" pos:column="13">=<pos:position pos:line="83" pos:column="14"/></operator> <call><name pos:line="83" pos:column="15">dav_push_error<pos:position pos:line="83" pos:column="29"/></name><argument_list pos:line="83" pos:column="29">(<argument><expr><name><name pos:line="83" pos:column="30">r<pos:position pos:line="83" pos:column="31"/></name><operator pos:line="83" pos:column="31">-&gt;<pos:position pos:line="83" pos:column="36"/></operator><name pos:line="83" pos:column="33">pool<pos:position pos:line="83" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="39">HTTP_FORBIDDEN<pos:position pos:line="83" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="55">0<pos:position pos:line="83" pos:column="56"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="84" pos:column="30">apr_psprintf<pos:position pos:line="84" pos:column="42"/></name><argument_list pos:line="84" pos:column="42">(<argument><expr><name><name pos:line="84" pos:column="43">r<pos:position pos:line="84" pos:column="44"/></name><operator pos:line="84" pos:column="44">-&gt;<pos:position pos:line="84" pos:column="49"/></operator><name pos:line="84" pos:column="46">pool<pos:position pos:line="84" pos:column="50"/></name></name></expr></argument>,
                                          <argument><expr><literal type="string" pos:line="85" pos:column="43">"Unable to PUT new contents for %s."<pos:position pos:line="85" pos:column="79"/></literal></expr></argument>,
                                          <argument><expr><call><name pos:line="86" pos:column="43">ap_escape_html<pos:position pos:line="86" pos:column="57"/></name><argument_list pos:line="86" pos:column="57">(<argument><expr><name><name pos:line="86" pos:column="58">r<pos:position pos:line="86" pos:column="59"/></name><operator pos:line="86" pos:column="59">-&gt;<pos:position pos:line="86" pos:column="64"/></operator><name pos:line="86" pos:column="61">pool<pos:position pos:line="86" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="67">r<pos:position pos:line="86" pos:column="68"/></name><operator pos:line="86" pos:column="68">-&gt;<pos:position pos:line="86" pos:column="73"/></operator><name pos:line="86" pos:column="70">uri<pos:position pos:line="86" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="75"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="87" pos:column="30">err<pos:position pos:line="87" pos:column="33"/></name></expr></argument>)<pos:position pos:line="87" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>

    <if pos:line="90" pos:column="5">if <condition pos:line="90" pos:column="8">(<expr><name pos:line="90" pos:column="9">err<pos:position pos:line="90" pos:column="12"/></name> <operator pos:line="90" pos:column="13">==<pos:position pos:line="90" pos:column="15"/></operator> <name pos:line="90" pos:column="16">NULL<pos:position pos:line="90" pos:column="20"/></name> <operator pos:line="90" pos:column="21">&amp;&amp;<pos:position pos:line="90" pos:column="31"/></operator> <name pos:line="90" pos:column="24">has_range<pos:position pos:line="90" pos:column="33"/></name></expr>)<pos:position pos:line="90" pos:column="34"/></condition><then pos:line="90" pos:column="34"> <block pos:line="90" pos:column="35">{
        <comment type="block" pos:line="91" pos:column="9">/* a range was provided. seek to the start */</comment>
        <expr_stmt><expr><name pos:line="92" pos:column="9">err<pos:position pos:line="92" pos:column="12"/></name> <operator pos:line="92" pos:column="13">=<pos:position pos:line="92" pos:column="14"/></operator> <call pos:line="92" pos:column="15">(<modifier pos:line="92" pos:column="16">*<pos:position pos:line="92" pos:column="17"/></modifier><name><name pos:line="92" pos:column="17">resource<pos:position pos:line="92" pos:column="25"/></name><operator pos:line="92" pos:column="25">-&gt;<pos:position pos:line="92" pos:column="30"/></operator><name pos:line="92" pos:column="27">hooks<pos:position pos:line="92" pos:column="32"/></name><operator pos:line="92" pos:column="32">-&gt;<pos:position pos:line="92" pos:column="37"/></operator><name pos:line="92" pos:column="34">seek_stream<pos:position pos:line="92" pos:column="45"/></name></name>)<argument_list pos:line="92" pos:column="46">(<argument><expr><name pos:line="92" pos:column="47">stream<pos:position pos:line="92" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="55">range_start<pos:position pos:line="92" pos:column="66"/></name></expr></argument>)<pos:position pos:line="92" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if>

    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><name pos:line="95" pos:column="9">err<pos:position pos:line="95" pos:column="12"/></name> <operator pos:line="95" pos:column="13">==<pos:position pos:line="95" pos:column="15"/></operator> <name pos:line="95" pos:column="16">NULL<pos:position pos:line="95" pos:column="20"/></name></expr>)<pos:position pos:line="95" pos:column="21"/></condition><then pos:line="95" pos:column="21"> <block pos:line="95" pos:column="22">{
        <if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><call><name pos:line="96" pos:column="13">ap_should_client_block<pos:position pos:line="96" pos:column="35"/></name><argument_list pos:line="96" pos:column="35">(<argument><expr><name pos:line="96" pos:column="36">r<pos:position pos:line="96" pos:column="37"/></name></expr></argument>)<pos:position pos:line="96" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="39"/></condition><then pos:line="96" pos:column="39"> <block pos:line="96" pos:column="40">{
            <decl_stmt><decl><type><name pos:line="97" pos:column="13">char<pos:position pos:line="97" pos:column="17"/></name> <modifier pos:line="97" pos:column="18">*<pos:position pos:line="97" pos:column="19"/></modifier></type><name pos:line="97" pos:column="19">buffer<pos:position pos:line="97" pos:column="25"/></name> <init pos:line="97" pos:column="26">= <expr><call><name pos:line="97" pos:column="28">apr_palloc<pos:position pos:line="97" pos:column="38"/></name><argument_list pos:line="97" pos:column="38">(<argument><expr><name><name pos:line="97" pos:column="39">r<pos:position pos:line="97" pos:column="40"/></name><operator pos:line="97" pos:column="40">-&gt;<pos:position pos:line="97" pos:column="45"/></operator><name pos:line="97" pos:column="42">pool<pos:position pos:line="97" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="48">DAV_READ_BLOCKSIZE<pos:position pos:line="97" pos:column="66"/></name></expr></argument>)<pos:position pos:line="97" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="97" pos:column="68"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="98" pos:column="13">long<pos:position pos:line="98" pos:column="17"/></name></type> <name pos:line="98" pos:column="18">len<pos:position pos:line="98" pos:column="21"/></name></decl>;<pos:position pos:line="98" pos:column="22"/></decl_stmt>

            <comment type="block" pos:line="100" pos:column="13">/*
             * Once we start reading the request, then we must read the
             * whole darn thing. ap_discard_request_body() won't do anything
             * for a partially-read request.
             */</comment>

            <while pos:line="106" pos:column="13">while <condition pos:line="106" pos:column="19">(<expr><operator pos:line="106" pos:column="20">(<pos:position pos:line="106" pos:column="21"/></operator><name pos:line="106" pos:column="21">len<pos:position pos:line="106" pos:column="24"/></name> <operator pos:line="106" pos:column="25">=<pos:position pos:line="106" pos:column="26"/></operator> <call><name pos:line="106" pos:column="27">ap_get_client_block<pos:position pos:line="106" pos:column="46"/></name><argument_list pos:line="106" pos:column="46">(<argument><expr><name pos:line="106" pos:column="47">r<pos:position pos:line="106" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="50">buffer<pos:position pos:line="106" pos:column="56"/></name></expr></argument>,
                                              <argument><expr><name pos:line="107" pos:column="47">DAV_READ_BLOCKSIZE<pos:position pos:line="107" pos:column="65"/></name></expr></argument>)<pos:position pos:line="107" pos:column="66"/></argument_list></call><operator pos:line="107" pos:column="66">)<pos:position pos:line="107" pos:column="67"/></operator> <operator pos:line="107" pos:column="68">&gt;<pos:position pos:line="107" pos:column="72"/></operator> <literal type="number" pos:line="107" pos:column="70">0<pos:position pos:line="107" pos:column="71"/></literal></expr>)<pos:position pos:line="107" pos:column="72"/></condition> <block pos:line="107" pos:column="73">{
                   <if pos:line="108" pos:column="20">if <condition pos:line="108" pos:column="23">(<expr><name pos:line="108" pos:column="24">err<pos:position pos:line="108" pos:column="27"/></name> <operator pos:line="108" pos:column="28">==<pos:position pos:line="108" pos:column="30"/></operator> <name pos:line="108" pos:column="31">NULL<pos:position pos:line="108" pos:column="35"/></name></expr>)<pos:position pos:line="108" pos:column="36"/></condition><then pos:line="108" pos:column="36"> <block pos:line="108" pos:column="37">{
                       <comment type="block" pos:line="109" pos:column="24">/* write whatever we read, until we see an error */</comment>
                       <expr_stmt><expr><name pos:line="110" pos:column="24">err<pos:position pos:line="110" pos:column="27"/></name> <operator pos:line="110" pos:column="28">=<pos:position pos:line="110" pos:column="29"/></operator> <call pos:line="110" pos:column="30">(<modifier pos:line="110" pos:column="31">*<pos:position pos:line="110" pos:column="32"/></modifier><name><name pos:line="110" pos:column="32">resource<pos:position pos:line="110" pos:column="40"/></name><operator pos:line="110" pos:column="40">-&gt;<pos:position pos:line="110" pos:column="45"/></operator><name pos:line="110" pos:column="42">hooks<pos:position pos:line="110" pos:column="47"/></name><operator pos:line="110" pos:column="47">-&gt;<pos:position pos:line="110" pos:column="52"/></operator><name pos:line="110" pos:column="49">write_stream<pos:position pos:line="110" pos:column="61"/></name></name>)<argument_list pos:line="110" pos:column="62">(<argument><expr><name pos:line="110" pos:column="63">stream<pos:position pos:line="110" pos:column="69"/></name></expr></argument>,
                                                              <argument><expr><name pos:line="111" pos:column="63">buffer<pos:position pos:line="111" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="71">len<pos:position pos:line="111" pos:column="74"/></name></expr></argument>)<pos:position pos:line="111" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="76"/></expr_stmt>
                   }<pos:position pos:line="112" pos:column="21"/></block></then></if>
            }<pos:position pos:line="113" pos:column="14"/></block></while>

            <comment type="block" pos:line="115" pos:column="13">/*
             * ### what happens if we read more/less than the amount
             * ### specified in the Content-Range? eek...
             */</comment>

            <if pos:line="120" pos:column="13">if <condition pos:line="120" pos:column="16">(<expr><name pos:line="120" pos:column="17">len<pos:position pos:line="120" pos:column="20"/></name> <operator pos:line="120" pos:column="21">==<pos:position pos:line="120" pos:column="23"/></operator> <operator pos:line="120" pos:column="24">-<pos:position pos:line="120" pos:column="25"/></operator><literal type="number" pos:line="120" pos:column="25">1<pos:position pos:line="120" pos:column="26"/></literal></expr>)<pos:position pos:line="120" pos:column="27"/></condition><then pos:line="120" pos:column="27"> <block pos:line="120" pos:column="28">{
                <comment type="block" pos:line="121" pos:column="17">/*
                 * Error reading request body. This has precedence over
                 * prior errors.
                 */</comment>
                <expr_stmt><expr><name pos:line="125" pos:column="17">err<pos:position pos:line="125" pos:column="20"/></name> <operator pos:line="125" pos:column="21">=<pos:position pos:line="125" pos:column="22"/></operator> <call><name pos:line="125" pos:column="23">dav_new_error<pos:position pos:line="125" pos:column="36"/></name><argument_list pos:line="125" pos:column="36">(<argument><expr><name><name pos:line="125" pos:column="37">r<pos:position pos:line="125" pos:column="38"/></name><operator pos:line="125" pos:column="38">-&gt;<pos:position pos:line="125" pos:column="43"/></operator><name pos:line="125" pos:column="40">pool<pos:position pos:line="125" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="46">HTTP_BAD_REQUEST<pos:position pos:line="125" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="64">0<pos:position pos:line="125" pos:column="65"/></literal></expr></argument>,
                                    <argument><expr><literal type="string" pos:line="126" pos:column="37">"An error occurred while reading the "<pos:position pos:line="126" pos:column="75"/></literal>
                                    <literal type="string" pos:line="127" pos:column="37">"request body."<pos:position pos:line="127" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="128" pos:column="14"/></block></then></if>
        }<pos:position pos:line="129" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="131" pos:column="9">err2<pos:position pos:line="131" pos:column="13"/></name> <operator pos:line="131" pos:column="14">=<pos:position pos:line="131" pos:column="15"/></operator> <call pos:line="131" pos:column="16">(<modifier pos:line="131" pos:column="17">*<pos:position pos:line="131" pos:column="18"/></modifier><name><name pos:line="131" pos:column="18">resource<pos:position pos:line="131" pos:column="26"/></name><operator pos:line="131" pos:column="26">-&gt;<pos:position pos:line="131" pos:column="31"/></operator><name pos:line="131" pos:column="28">hooks<pos:position pos:line="131" pos:column="33"/></name><operator pos:line="131" pos:column="33">-&gt;<pos:position pos:line="131" pos:column="38"/></operator><name pos:line="131" pos:column="35">close_stream<pos:position pos:line="131" pos:column="47"/></name></name>)<argument_list pos:line="131" pos:column="48">(<argument><expr><name pos:line="131" pos:column="49">stream<pos:position pos:line="131" pos:column="55"/></name></expr></argument>,
                                                <argument><expr><name pos:line="132" pos:column="49">err<pos:position pos:line="132" pos:column="52"/></name> <operator pos:line="132" pos:column="53">==<pos:position pos:line="132" pos:column="55"/></operator> <name pos:line="132" pos:column="56">NULL<pos:position pos:line="132" pos:column="60"/></name></expr></argument> <comment type="block" pos:line="132" pos:column="61">/* commit */</comment>)<pos:position pos:line="132" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="75"/></expr_stmt>
        <if pos:line="133" pos:column="9">if <condition pos:line="133" pos:column="12">(<expr><name pos:line="133" pos:column="13">err2<pos:position pos:line="133" pos:column="17"/></name> <operator pos:line="133" pos:column="18">!=<pos:position pos:line="133" pos:column="20"/></operator> <name pos:line="133" pos:column="21">NULL<pos:position pos:line="133" pos:column="25"/></name> <operator pos:line="133" pos:column="26">&amp;&amp;<pos:position pos:line="133" pos:column="36"/></operator> <name pos:line="133" pos:column="29">err<pos:position pos:line="133" pos:column="32"/></name> <operator pos:line="133" pos:column="33">==<pos:position pos:line="133" pos:column="35"/></operator> <name pos:line="133" pos:column="36">NULL<pos:position pos:line="133" pos:column="40"/></name></expr>)<pos:position pos:line="133" pos:column="41"/></condition><then pos:line="133" pos:column="41"> <block pos:line="133" pos:column="42">{
            <comment type="block" pos:line="134" pos:column="13">/* no error during the write, but we hit one at close. use it. */</comment>
            <expr_stmt><expr><name pos:line="135" pos:column="13">err<pos:position pos:line="135" pos:column="16"/></name> <operator pos:line="135" pos:column="17">=<pos:position pos:line="135" pos:column="18"/></operator> <name pos:line="135" pos:column="19">err2<pos:position pos:line="135" pos:column="23"/></name></expr>;<pos:position pos:line="135" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="136" pos:column="10"/></block></then></if>
    }<pos:position pos:line="137" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="139" pos:column="5">/*
     * Ensure that we think the resource exists now.
     * ### eek. if an error occurred during the write and we did not commit,
     * ### then the resource might NOT exist (e.g. dav_fs_repos.c)
     */</comment>
    <if pos:line="144" pos:column="5">if <condition pos:line="144" pos:column="8">(<expr><name pos:line="144" pos:column="9">err<pos:position pos:line="144" pos:column="12"/></name> <operator pos:line="144" pos:column="13">==<pos:position pos:line="144" pos:column="15"/></operator> <name pos:line="144" pos:column="16">NULL<pos:position pos:line="144" pos:column="20"/></name></expr>)<pos:position pos:line="144" pos:column="21"/></condition><then pos:line="144" pos:column="21"> <block pos:line="144" pos:column="22">{
        <expr_stmt><expr><name><name pos:line="145" pos:column="9">resource<pos:position pos:line="145" pos:column="17"/></name><operator pos:line="145" pos:column="17">-&gt;<pos:position pos:line="145" pos:column="22"/></operator><name pos:line="145" pos:column="19">exists<pos:position pos:line="145" pos:column="25"/></name></name> <operator pos:line="145" pos:column="26">=<pos:position pos:line="145" pos:column="27"/></operator> <literal type="number" pos:line="145" pos:column="28">1<pos:position pos:line="145" pos:column="29"/></literal></expr>;<pos:position pos:line="145" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="146" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="148" pos:column="5">/* restore modifiability of resources back to what they were */</comment>
    <expr_stmt><expr><name pos:line="149" pos:column="5">err2<pos:position pos:line="149" pos:column="9"/></name> <operator pos:line="149" pos:column="10">=<pos:position pos:line="149" pos:column="11"/></operator> <call><name pos:line="149" pos:column="12">dav_auto_checkin<pos:position pos:line="149" pos:column="28"/></name><argument_list pos:line="149" pos:column="28">(<argument><expr><name pos:line="149" pos:column="29">r<pos:position pos:line="149" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="32">resource<pos:position pos:line="149" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="42">err<pos:position pos:line="149" pos:column="45"/></name> <operator pos:line="149" pos:column="46">!=<pos:position pos:line="149" pos:column="48"/></operator> <name pos:line="149" pos:column="49">NULL<pos:position pos:line="149" pos:column="53"/></name></expr></argument> <comment type="block" pos:line="149" pos:column="54">/* undo if error */</comment>,
                            <argument><expr><literal type="number" pos:line="150" pos:column="29">0<pos:position pos:line="150" pos:column="30"/></literal></expr></argument> <comment type="block" pos:line="150" pos:column="31">/*unlock*/</comment>, <argument><expr><operator pos:line="150" pos:column="43">&amp;<pos:position pos:line="150" pos:column="48"/></operator><name pos:line="150" pos:column="44">av_info<pos:position pos:line="150" pos:column="51"/></name></expr></argument>)<pos:position pos:line="150" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="152" pos:column="5">/* check for errors now */</comment>
    <if pos:line="153" pos:column="5">if <condition pos:line="153" pos:column="8">(<expr><name pos:line="153" pos:column="9">err<pos:position pos:line="153" pos:column="12"/></name> <operator pos:line="153" pos:column="13">!=<pos:position pos:line="153" pos:column="15"/></operator> <name pos:line="153" pos:column="16">NULL<pos:position pos:line="153" pos:column="20"/></name></expr>)<pos:position pos:line="153" pos:column="21"/></condition><then pos:line="153" pos:column="21"> <block pos:line="153" pos:column="22">{
        <return pos:line="154" pos:column="9">return <expr><call><name pos:line="154" pos:column="16">dav_handle_err<pos:position pos:line="154" pos:column="30"/></name><argument_list pos:line="154" pos:column="30">(<argument><expr><name pos:line="154" pos:column="31">r<pos:position pos:line="154" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="34">err<pos:position pos:line="154" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="39">NULL<pos:position pos:line="154" pos:column="43"/></name></expr></argument>)<pos:position pos:line="154" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="45"/></return>
    }<pos:position pos:line="155" pos:column="6"/></block></then></if>

    <if pos:line="157" pos:column="5">if <condition pos:line="157" pos:column="8">(<expr><name pos:line="157" pos:column="9">err2<pos:position pos:line="157" pos:column="13"/></name> <operator pos:line="157" pos:column="14">!=<pos:position pos:line="157" pos:column="16"/></operator> <name pos:line="157" pos:column="17">NULL<pos:position pos:line="157" pos:column="21"/></name></expr>)<pos:position pos:line="157" pos:column="22"/></condition><then pos:line="157" pos:column="22"> <block pos:line="157" pos:column="23">{
        <comment type="block" pos:line="158" pos:column="9">/* just log a warning */</comment>
        <expr_stmt><expr><name pos:line="159" pos:column="9">err2<pos:position pos:line="159" pos:column="13"/></name> <operator pos:line="159" pos:column="14">=<pos:position pos:line="159" pos:column="15"/></operator> <call><name pos:line="159" pos:column="16">dav_push_error<pos:position pos:line="159" pos:column="30"/></name><argument_list pos:line="159" pos:column="30">(<argument><expr><name><name pos:line="159" pos:column="31">r<pos:position pos:line="159" pos:column="32"/></name><operator pos:line="159" pos:column="32">-&gt;<pos:position pos:line="159" pos:column="37"/></operator><name pos:line="159" pos:column="34">pool<pos:position pos:line="159" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="159" pos:column="40">err<pos:position pos:line="159" pos:column="43"/></name><operator pos:line="159" pos:column="43">-&gt;<pos:position pos:line="159" pos:column="48"/></operator><name pos:line="159" pos:column="45">status<pos:position pos:line="159" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="159" pos:column="53">0<pos:position pos:line="159" pos:column="54"/></literal></expr></argument>,
                              <argument><expr><literal type="string" pos:line="160" pos:column="31">"The PUT was successful, but there "<pos:position pos:line="160" pos:column="67"/></literal>
                              <literal type="string" pos:line="161" pos:column="31">"was a problem automatically checking in "<pos:position pos:line="161" pos:column="73"/></literal>
                              <literal type="string" pos:line="162" pos:column="31">"the resource or its parent collection."<pos:position pos:line="162" pos:column="71"/></literal></expr></argument>,
                              <argument><expr><name pos:line="163" pos:column="31">err2<pos:position pos:line="163" pos:column="35"/></name></expr></argument>)<pos:position pos:line="163" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="164" pos:column="9">dav_log_err<pos:position pos:line="164" pos:column="20"/></name><argument_list pos:line="164" pos:column="20">(<argument><expr><name pos:line="164" pos:column="21">r<pos:position pos:line="164" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="24">err2<pos:position pos:line="164" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="30">APLOG_WARNING<pos:position pos:line="164" pos:column="43"/></name></expr></argument>)<pos:position pos:line="164" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="165" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="167" pos:column="5">/* ### place the Content-Type and Content-Language into the propdb */</comment>

    <if pos:line="169" pos:column="5">if <condition pos:line="169" pos:column="8">(<expr><name pos:line="169" pos:column="9">locks_hooks<pos:position pos:line="169" pos:column="20"/></name> <operator pos:line="169" pos:column="21">!=<pos:position pos:line="169" pos:column="23"/></operator> <name pos:line="169" pos:column="24">NULL<pos:position pos:line="169" pos:column="28"/></name></expr>)<pos:position pos:line="169" pos:column="29"/></condition><then pos:line="169" pos:column="29"> <block pos:line="169" pos:column="30">{
        <decl_stmt><decl><type><name pos:line="170" pos:column="9">dav_lockdb<pos:position pos:line="170" pos:column="19"/></name> <modifier pos:line="170" pos:column="20">*<pos:position pos:line="170" pos:column="21"/></modifier></type><name pos:line="170" pos:column="21">lockdb<pos:position pos:line="170" pos:column="27"/></name></decl>;<pos:position pos:line="170" pos:column="28"/></decl_stmt>

        <if pos:line="172" pos:column="9">if <condition pos:line="172" pos:column="12">(<expr><operator pos:line="172" pos:column="13">(<pos:position pos:line="172" pos:column="14"/></operator><name pos:line="172" pos:column="14">err<pos:position pos:line="172" pos:column="17"/></name> <operator pos:line="172" pos:column="18">=<pos:position pos:line="172" pos:column="19"/></operator> <call pos:line="172" pos:column="20">(<modifier pos:line="172" pos:column="21">*<pos:position pos:line="172" pos:column="22"/></modifier><name><name pos:line="172" pos:column="22">locks_hooks<pos:position pos:line="172" pos:column="33"/></name><operator pos:line="172" pos:column="33">-&gt;<pos:position pos:line="172" pos:column="38"/></operator><name pos:line="172" pos:column="35">open_lockdb<pos:position pos:line="172" pos:column="46"/></name></name>)<argument_list pos:line="172" pos:column="47">(<argument><expr><name pos:line="172" pos:column="48">r<pos:position pos:line="172" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="172" pos:column="51">0<pos:position pos:line="172" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="172" pos:column="54">0<pos:position pos:line="172" pos:column="55"/></literal></expr></argument>, <argument><expr><operator pos:line="172" pos:column="57">&amp;<pos:position pos:line="172" pos:column="62"/></operator><name pos:line="172" pos:column="58">lockdb<pos:position pos:line="172" pos:column="64"/></name></expr></argument>)<pos:position pos:line="172" pos:column="65"/></argument_list></call><operator pos:line="172" pos:column="65">)<pos:position pos:line="172" pos:column="66"/></operator> <operator pos:line="172" pos:column="67">!=<pos:position pos:line="172" pos:column="69"/></operator> <name pos:line="172" pos:column="70">NULL<pos:position pos:line="172" pos:column="74"/></name></expr>)<pos:position pos:line="172" pos:column="75"/></condition><then pos:line="172" pos:column="75"> <block pos:line="172" pos:column="76">{
            <comment type="block" pos:line="173" pos:column="13">/* The file creation was successful, but the locking failed. */</comment>
            <expr_stmt><expr><name pos:line="174" pos:column="13">err<pos:position pos:line="174" pos:column="16"/></name> <operator pos:line="174" pos:column="17">=<pos:position pos:line="174" pos:column="18"/></operator> <call><name pos:line="174" pos:column="19">dav_push_error<pos:position pos:line="174" pos:column="33"/></name><argument_list pos:line="174" pos:column="33">(<argument><expr><name><name pos:line="174" pos:column="34">r<pos:position pos:line="174" pos:column="35"/></name><operator pos:line="174" pos:column="35">-&gt;<pos:position pos:line="174" pos:column="40"/></operator><name pos:line="174" pos:column="37">pool<pos:position pos:line="174" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="174" pos:column="43">err<pos:position pos:line="174" pos:column="46"/></name><operator pos:line="174" pos:column="46">-&gt;<pos:position pos:line="174" pos:column="51"/></operator><name pos:line="174" pos:column="48">status<pos:position pos:line="174" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="174" pos:column="56">0<pos:position pos:line="174" pos:column="57"/></literal></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="175" pos:column="34">"The file was PUT successfully, but there "<pos:position pos:line="175" pos:column="77"/></literal>
                                 <literal type="string" pos:line="176" pos:column="34">"was a problem opening the lock database "<pos:position pos:line="176" pos:column="76"/></literal>
                                 <literal type="string" pos:line="177" pos:column="34">"which prevents inheriting locks from the "<pos:position pos:line="177" pos:column="77"/></literal>
                                 <literal type="string" pos:line="178" pos:column="34">"parent resources."<pos:position pos:line="178" pos:column="53"/></literal></expr></argument>,
                                 <argument><expr><name pos:line="179" pos:column="34">err<pos:position pos:line="179" pos:column="37"/></name></expr></argument>)<pos:position pos:line="179" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="39"/></expr_stmt>
            <return pos:line="180" pos:column="13">return <expr><call><name pos:line="180" pos:column="20">dav_handle_err<pos:position pos:line="180" pos:column="34"/></name><argument_list pos:line="180" pos:column="34">(<argument><expr><name pos:line="180" pos:column="35">r<pos:position pos:line="180" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="38">err<pos:position pos:line="180" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="43">NULL<pos:position pos:line="180" pos:column="47"/></name></expr></argument>)<pos:position pos:line="180" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="49"/></return>
        }<pos:position pos:line="181" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="183" pos:column="9">/* notify lock system that we have created/replaced a resource */</comment>
        <expr_stmt><expr><name pos:line="184" pos:column="9">err<pos:position pos:line="184" pos:column="12"/></name> <operator pos:line="184" pos:column="13">=<pos:position pos:line="184" pos:column="14"/></operator> <call><name pos:line="184" pos:column="15">dav_notify_created<pos:position pos:line="184" pos:column="33"/></name><argument_list pos:line="184" pos:column="33">(<argument><expr><name pos:line="184" pos:column="34">r<pos:position pos:line="184" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="37">lockdb<pos:position pos:line="184" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="45">resource<pos:position pos:line="184" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="55">resource_state<pos:position pos:line="184" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="184" pos:column="71">0<pos:position pos:line="184" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="74"/></expr_stmt>

        <expr_stmt><expr><call pos:line="186" pos:column="9">(<modifier pos:line="186" pos:column="10">*<pos:position pos:line="186" pos:column="11"/></modifier><name><name pos:line="186" pos:column="11">locks_hooks<pos:position pos:line="186" pos:column="22"/></name><operator pos:line="186" pos:column="22">-&gt;<pos:position pos:line="186" pos:column="27"/></operator><name pos:line="186" pos:column="24">close_lockdb<pos:position pos:line="186" pos:column="36"/></name></name>)<argument_list pos:line="186" pos:column="37">(<argument><expr><name pos:line="186" pos:column="38">lockdb<pos:position pos:line="186" pos:column="44"/></name></expr></argument>)<pos:position pos:line="186" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="46"/></expr_stmt>

        <if pos:line="188" pos:column="9">if <condition pos:line="188" pos:column="12">(<expr><name pos:line="188" pos:column="13">err<pos:position pos:line="188" pos:column="16"/></name> <operator pos:line="188" pos:column="17">!=<pos:position pos:line="188" pos:column="19"/></operator> <name pos:line="188" pos:column="20">NULL<pos:position pos:line="188" pos:column="24"/></name></expr>)<pos:position pos:line="188" pos:column="25"/></condition><then pos:line="188" pos:column="25"> <block pos:line="188" pos:column="26">{
            <comment type="block" pos:line="189" pos:column="13">/* The file creation was successful, but the locking failed. */</comment>
            <expr_stmt><expr><name pos:line="190" pos:column="13">err<pos:position pos:line="190" pos:column="16"/></name> <operator pos:line="190" pos:column="17">=<pos:position pos:line="190" pos:column="18"/></operator> <call><name pos:line="190" pos:column="19">dav_push_error<pos:position pos:line="190" pos:column="33"/></name><argument_list pos:line="190" pos:column="33">(<argument><expr><name><name pos:line="190" pos:column="34">r<pos:position pos:line="190" pos:column="35"/></name><operator pos:line="190" pos:column="35">-&gt;<pos:position pos:line="190" pos:column="40"/></operator><name pos:line="190" pos:column="37">pool<pos:position pos:line="190" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="190" pos:column="43">err<pos:position pos:line="190" pos:column="46"/></name><operator pos:line="190" pos:column="46">-&gt;<pos:position pos:line="190" pos:column="51"/></operator><name pos:line="190" pos:column="48">status<pos:position pos:line="190" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="190" pos:column="56">0<pos:position pos:line="190" pos:column="57"/></literal></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="191" pos:column="34">"The file was PUT successfully, but there "<pos:position pos:line="191" pos:column="77"/></literal>
                                 <literal type="string" pos:line="192" pos:column="34">"was a problem updating its lock "<pos:position pos:line="192" pos:column="68"/></literal>
                                 <literal type="string" pos:line="193" pos:column="34">"information."<pos:position pos:line="193" pos:column="48"/></literal></expr></argument>,
                                 <argument><expr><name pos:line="194" pos:column="34">err<pos:position pos:line="194" pos:column="37"/></name></expr></argument>)<pos:position pos:line="194" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="39"/></expr_stmt>
            <return pos:line="195" pos:column="13">return <expr><call><name pos:line="195" pos:column="20">dav_handle_err<pos:position pos:line="195" pos:column="34"/></name><argument_list pos:line="195" pos:column="34">(<argument><expr><name pos:line="195" pos:column="35">r<pos:position pos:line="195" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="38">err<pos:position pos:line="195" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="43">NULL<pos:position pos:line="195" pos:column="47"/></name></expr></argument>)<pos:position pos:line="195" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="49"/></return>
        }<pos:position pos:line="196" pos:column="10"/></block></then></if>
    }<pos:position pos:line="197" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="199" pos:column="5">/* NOTE: WebDAV spec, S8.7.1 states properties should be unaffected */</comment>

    <comment type="block" pos:line="201" pos:column="5">/* return an appropriate response (HTTP_CREATED or HTTP_NO_CONTENT) */</comment>
    <return pos:line="202" pos:column="5">return <expr><call><name pos:line="202" pos:column="12">dav_created<pos:position pos:line="202" pos:column="23"/></name><argument_list pos:line="202" pos:column="23">(<argument><expr><name pos:line="202" pos:column="24">r<pos:position pos:line="202" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="27">NULL<pos:position pos:line="202" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="202" pos:column="33">"Resource"<pos:position pos:line="202" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="202" pos:column="45">resource_state<pos:position pos:line="202" pos:column="59"/></name> <operator pos:line="202" pos:column="60">==<pos:position pos:line="202" pos:column="62"/></operator> <name pos:line="202" pos:column="63">DAV_RESOURCE_EXISTS<pos:position pos:line="202" pos:column="82"/></name></expr></argument>)<pos:position pos:line="202" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="84"/></return>
}<pos:position pos:line="203" pos:column="2"/></block></function></unit>

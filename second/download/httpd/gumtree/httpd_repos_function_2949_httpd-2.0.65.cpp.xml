<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2949_httpd-2.0.65.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_filepath_list_merge_impl<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier><modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">liststr<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="2" pos:column="43">apr_array_header_t<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">pathelts<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="3" pos:column="43">char<pos:position pos:line="3" pos:column="47"/></name></type> <name pos:line="3" pos:column="48">separator<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="4" pos:column="43">apr_pool_t<pos:position pos:line="4" pos:column="53"/></name> <modifier pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></modifier></type><name pos:line="4" pos:column="55">p<pos:position pos:line="4" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="57"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">path_size<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><literal type="number" pos:line="6" pos:column="28">0<pos:position pos:line="6" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">path<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* This test isn't 100% certain, but it'll catch at least some
       invalid uses... */</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">pathelts<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">elt_size<pos:position pos:line="12" pos:column="27"/></name></name> <operator pos:line="12" pos:column="28">!=<pos:position pos:line="12" pos:column="30"/></operator> <sizeof pos:line="12" pos:column="31">sizeof<argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">char<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">*<pos:position pos:line="12" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></sizeof></expr>)<pos:position pos:line="12" pos:column="45"/></condition><then pos:line="12" pos:column="45">
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">APR_EINVAL<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></return></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* Calculate the size of the merged path */</comment>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">i<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <literal type="number" pos:line="16" pos:column="14">0<pos:position pos:line="16" pos:column="15"/></literal></expr>;<pos:position pos:line="16" pos:column="16"/></init> <condition><expr><name pos:line="16" pos:column="17">i<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">&lt;<pos:position pos:line="16" pos:column="23"/></operator> <name><name pos:line="16" pos:column="21">pathelts<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">nelts<pos:position pos:line="16" pos:column="36"/></name></name></expr>;<pos:position pos:line="16" pos:column="37"/></condition> <incr><expr><operator pos:line="16" pos:column="38">++<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="40">i<pos:position pos:line="16" pos:column="41"/></name></expr></incr>)<pos:position pos:line="16" pos:column="42"/></control>
        <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="9">path_size<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">+=<pos:position pos:line="17" pos:column="21"/></operator> <call><name pos:line="17" pos:column="22">strlen<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><operator pos:line="17" pos:column="29">(<pos:position pos:line="17" pos:column="30"/></operator><operator pos:line="17" pos:column="30">(<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">char<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">*<pos:position pos:line="17" pos:column="36"/></operator><operator pos:line="17" pos:column="36">*<pos:position pos:line="17" pos:column="37"/></operator><operator pos:line="17" pos:column="37">)<pos:position pos:line="17" pos:column="38"/></operator><name><name pos:line="17" pos:column="38">pathelts<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">elts<pos:position pos:line="17" pos:column="52"/></name></name><operator pos:line="17" pos:column="52">)<pos:position pos:line="17" pos:column="53"/></operator><index pos:line="17" pos:column="53">[<expr><name pos:line="17" pos:column="54">i<pos:position pos:line="17" pos:column="55"/></name></expr>]<pos:position pos:line="17" pos:column="56"/></index></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt></block></for>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">path_size<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">==<pos:position pos:line="19" pos:column="21"/></operator> <literal type="number" pos:line="19" pos:column="22">0<pos:position pos:line="19" pos:column="23"/></literal></expr>)<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24">
    <block pos:line="20" pos:column="5">{
        <expr_stmt><expr><operator pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">liststr<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">NULL<pos:position pos:line="21" pos:column="24"/></name></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">APR_SUCCESS<pos:position pos:line="22" pos:column="27"/></name></expr>;<pos:position pos:line="22" pos:column="28"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">i<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">&gt;<pos:position pos:line="25" pos:column="15"/></operator> <literal type="number" pos:line="25" pos:column="13">0<pos:position pos:line="25" pos:column="14"/></literal></expr>)<pos:position pos:line="25" pos:column="15"/></condition><then pos:line="25" pos:column="15">                  <comment type="block" pos:line="25" pos:column="33">/* Add space for the separators */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="9">path_size<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">+=<pos:position pos:line="26" pos:column="21"/></operator> <operator pos:line="26" pos:column="22">(<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">i<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">-<pos:position pos:line="26" pos:column="26"/></operator> <literal type="number" pos:line="26" pos:column="27">1<pos:position pos:line="26" pos:column="28"/></literal><operator pos:line="26" pos:column="28">)<pos:position pos:line="26" pos:column="29"/></operator></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="28" pos:column="5">/* Merge the path components */</comment>
    <expr_stmt><expr><name pos:line="29" pos:column="5">path<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <operator pos:line="29" pos:column="12">*<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">liststr<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <call><name pos:line="29" pos:column="23">apr_palloc<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">p<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="37">path_size<pos:position pos:line="29" pos:column="46"/></name> <operator pos:line="29" pos:column="47">+<pos:position pos:line="29" pos:column="48"/></operator> <literal type="number" pos:line="29" pos:column="49">1<pos:position pos:line="29" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
    <for pos:line="30" pos:column="5">for <control pos:line="30" pos:column="9">(<init><expr><name pos:line="30" pos:column="10">i<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <literal type="number" pos:line="30" pos:column="14">0<pos:position pos:line="30" pos:column="15"/></literal></expr>;<pos:position pos:line="30" pos:column="16"/></init> <condition><expr><name pos:line="30" pos:column="17">i<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">&lt;<pos:position pos:line="30" pos:column="23"/></operator> <name><name pos:line="30" pos:column="21">pathelts<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">nelts<pos:position pos:line="30" pos:column="36"/></name></name></expr>;<pos:position pos:line="30" pos:column="37"/></condition> <incr><expr><operator pos:line="30" pos:column="38">++<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="40">i<pos:position pos:line="30" pos:column="41"/></name></expr></incr>)<pos:position pos:line="30" pos:column="42"/></control>
    <block pos:line="31" pos:column="5">{
        <comment type="block" pos:line="32" pos:column="9">/* ### Hmmmm. Calling strlen twice on the same string. Yuck.
               But is is better than reallocation in apr_pstrcat? */</comment>
        <decl_stmt><decl><type><specifier pos:line="34" pos:column="9">const<pos:position pos:line="34" pos:column="14"/></specifier> <name pos:line="34" pos:column="15">char<pos:position pos:line="34" pos:column="19"/></name> <modifier pos:line="34" pos:column="20">*<pos:position pos:line="34" pos:column="21"/></modifier></type><name pos:line="34" pos:column="21">part<pos:position pos:line="34" pos:column="25"/></name> <init pos:line="34" pos:column="26">= <expr><operator pos:line="34" pos:column="28">(<pos:position pos:line="34" pos:column="29"/></operator><operator pos:line="34" pos:column="29">(<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="30">char<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">*<pos:position pos:line="34" pos:column="35"/></operator><operator pos:line="34" pos:column="35">*<pos:position pos:line="34" pos:column="36"/></operator><operator pos:line="34" pos:column="36">)<pos:position pos:line="34" pos:column="37"/></operator><name><name pos:line="34" pos:column="37">pathelts<pos:position pos:line="34" pos:column="45"/></name><operator pos:line="34" pos:column="45">-&gt;<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="47">elts<pos:position pos:line="34" pos:column="51"/></name></name><operator pos:line="34" pos:column="51">)<pos:position pos:line="34" pos:column="52"/></operator><index pos:line="34" pos:column="52">[<expr><name pos:line="34" pos:column="53">i<pos:position pos:line="34" pos:column="54"/></name></expr>]<pos:position pos:line="34" pos:column="55"/></index></expr></init></decl>;<pos:position pos:line="34" pos:column="56"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="35" pos:column="9">apr_size_t<pos:position pos:line="35" pos:column="19"/></name></type> <name pos:line="35" pos:column="20">part_size<pos:position pos:line="35" pos:column="29"/></name> <init pos:line="35" pos:column="30">= <expr><call><name pos:line="35" pos:column="32">strlen<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name pos:line="35" pos:column="39">part<pos:position pos:line="35" pos:column="43"/></name></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="45"/></decl_stmt>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">part_size<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">==<pos:position pos:line="36" pos:column="25"/></operator> <literal type="number" pos:line="36" pos:column="26">0<pos:position pos:line="36" pos:column="27"/></literal></expr>)<pos:position pos:line="36" pos:column="28"/></condition><then pos:line="36" pos:column="28">     <comment type="block" pos:line="36" pos:column="33">/* Ignore empty path components. */</comment>
            <block type="pseudo"><continue pos:line="37" pos:column="13">continue;<pos:position pos:line="37" pos:column="22"/></continue></block></then></if>

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">i<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">&gt;<pos:position pos:line="39" pos:column="19"/></operator> <literal type="number" pos:line="39" pos:column="17">0<pos:position pos:line="39" pos:column="18"/></literal></expr>)<pos:position pos:line="39" pos:column="19"/></condition><then pos:line="39" pos:column="19">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="40" pos:column="13">*<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">path<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">++<pos:position pos:line="40" pos:column="20"/></operator> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <name pos:line="40" pos:column="23">separator<pos:position pos:line="40" pos:column="32"/></name></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">memcpy<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><name pos:line="41" pos:column="16">path<pos:position pos:line="41" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="22">part<pos:position pos:line="41" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="28">part_size<pos:position pos:line="41" pos:column="37"/></name></expr></argument>)<pos:position pos:line="41" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="42" pos:column="9">path<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">+=<pos:position pos:line="42" pos:column="16"/></operator> <name pos:line="42" pos:column="17">part_size<pos:position pos:line="42" pos:column="26"/></name></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></for>
    <expr_stmt><expr><operator pos:line="44" pos:column="5">*<pos:position pos:line="44" pos:column="6"/></operator><name pos:line="44" pos:column="6">path<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <literal type="char" pos:line="44" pos:column="13">'\0'<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></expr_stmt>
    <return pos:line="45" pos:column="5">return <expr><name pos:line="45" pos:column="12">APR_SUCCESS<pos:position pos:line="45" pos:column="23"/></name></expr>;<pos:position pos:line="45" pos:column="24"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

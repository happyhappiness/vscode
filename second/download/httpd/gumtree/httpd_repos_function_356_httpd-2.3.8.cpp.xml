<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_356_httpd-2.3.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_text<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type> <name pos:line="1" pos:column="19">dav_success_proppatch<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">apr_pool_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">p<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">apr_array_header_t<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">prop_ctx<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_text_header<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">hdr<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><block pos:line="3" pos:column="27">{ <expr><literal type="number" pos:line="3" pos:column="29">0<pos:position pos:line="3" pos:column="30"/></literal></expr> }<pos:position pos:line="3" pos:column="32"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><name><name pos:line="4" pos:column="13">prop_ctx<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">-&gt;<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="23">nelts<pos:position pos:line="4" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dav_prop_ctx<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">ctx<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><operator pos:line="5" pos:column="25">(<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">dav_prop_ctx<pos:position pos:line="5" pos:column="38"/></name> <operator pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></operator><operator pos:line="5" pos:column="40">)<pos:position pos:line="5" pos:column="41"/></operator><name><name pos:line="5" pos:column="41">prop_ctx<pos:position pos:line="5" pos:column="49"/></name><operator pos:line="5" pos:column="49">-&gt;<pos:position pos:line="5" pos:column="54"/></operator><name pos:line="5" pos:column="51">elts<pos:position pos:line="5" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/*
     * ### we probably need to revise the way we assemble the response...
     * ### this code assumes everything will return status==200.
     */</comment>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">apr_text_append<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">p<pos:position pos:line="12" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="24">&amp;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="25">hdr<pos:position pos:line="12" pos:column="28"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="13" pos:column="21">"&lt;D:propstat&gt;"<pos:position pos:line="13" pos:column="41"/></literal> <name pos:line="13" pos:column="36">DEBUG_CR<pos:position pos:line="13" pos:column="44"/></name>
                    <literal type="string" pos:line="14" pos:column="21">"&lt;D:prop&gt;"<pos:position pos:line="14" pos:column="37"/></literal> <name pos:line="14" pos:column="32">DEBUG_CR<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>

    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">( <init pos:line="16" pos:column="11">;<pos:position pos:line="16" pos:column="12"/></init> <condition><expr><name pos:line="16" pos:column="13">i<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">--<pos:position pos:line="16" pos:column="16"/></operator> <operator pos:line="16" pos:column="17">&gt;<pos:position pos:line="16" pos:column="21"/></operator> <literal type="number" pos:line="16" pos:column="19">0<pos:position pos:line="16" pos:column="20"/></literal></expr>;<pos:position pos:line="16" pos:column="21"/></condition> <incr><expr><operator pos:line="16" pos:column="22">++<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">ctx<pos:position pos:line="16" pos:column="27"/></name></expr></incr> )<pos:position pos:line="16" pos:column="29"/></control> <block pos:line="16" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">apr_text_append<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">p<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="28">&amp;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="29">hdr<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="34">apr_xml_empty_elem<pos:position pos:line="17" pos:column="52"/></name><argument_list pos:line="17" pos:column="52">(<argument><expr><name pos:line="17" pos:column="53">p<pos:position pos:line="17" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="56">ctx<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">-&gt;<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="61">prop<pos:position pos:line="17" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">apr_text_append<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><name pos:line="20" pos:column="21">p<pos:position pos:line="20" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="24">&amp;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="25">hdr<pos:position pos:line="20" pos:column="28"/></name></expr></argument>,
                   <argument><expr><literal type="string" pos:line="21" pos:column="20">"&lt;/D:prop&gt;"<pos:position pos:line="21" pos:column="37"/></literal> <name pos:line="21" pos:column="32">DEBUG_CR<pos:position pos:line="21" pos:column="40"/></name>
                   <literal type="string" pos:line="22" pos:column="20">"&lt;D:status&gt;HTTP/1.1 200 OK&lt;/D:status&gt;"<pos:position pos:line="22" pos:column="70"/></literal> <name pos:line="22" pos:column="59">DEBUG_CR<pos:position pos:line="22" pos:column="67"/></name>
                   <literal type="string" pos:line="23" pos:column="20">"&lt;/D:propstat&gt;"<pos:position pos:line="23" pos:column="41"/></literal> <name pos:line="23" pos:column="36">DEBUG_CR<pos:position pos:line="23" pos:column="44"/></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>

    <return pos:line="25" pos:column="5">return <expr><name><name pos:line="25" pos:column="12">hdr<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">.<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">first<pos:position pos:line="25" pos:column="21"/></name></name></expr>;<pos:position pos:line="25" pos:column="22"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

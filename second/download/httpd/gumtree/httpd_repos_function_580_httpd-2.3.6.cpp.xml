<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_580_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">process_regexp<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">header_entry<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">hdr<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">value<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">apr_pool_t<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">pool<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">nmatch<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><literal type="number" pos:line="4" pos:column="27">10<pos:position pos:line="4" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ap_regmatch_t<pos:position pos:line="5" pos:column="18"/></name></type> <name><name pos:line="5" pos:column="19">pmatch<pos:position pos:line="5" pos:column="25"/></name><index pos:line="5" pos:column="25">[<expr><literal type="number" pos:line="5" pos:column="26">10<pos:position pos:line="5" pos:column="28"/></literal></expr>]<pos:position pos:line="5" pos:column="29"/></index></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">subs<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">remainder<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">ret<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">diffsz<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">ap_regexec<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name><name pos:line="10" pos:column="20">hdr<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">regex<pos:position pos:line="10" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="32">value<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">nmatch<pos:position pos:line="10" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="47">pmatch<pos:position pos:line="10" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="55">0<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="58"/></condition><then pos:line="10" pos:column="58"> <block pos:line="10" pos:column="59">{
        <comment type="block" pos:line="11" pos:column="9">/* no match, nothing to do */</comment>
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">value<pos:position pos:line="12" pos:column="21"/></name></expr>;<pos:position pos:line="12" pos:column="22"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="14" pos:column="5">subs<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">ap_pregsub<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">pool<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="29">hdr<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">subs<pos:position pos:line="14" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">value<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">nmatch<pos:position pos:line="14" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="55">pmatch<pos:position pos:line="14" pos:column="61"/></name></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">diffsz<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <call><name pos:line="15" pos:column="14">strlen<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">subs<pos:position pos:line="15" pos:column="25"/></name></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call> <operator pos:line="15" pos:column="27">-<pos:position pos:line="15" pos:column="28"/></operator> <operator pos:line="15" pos:column="29">(<pos:position pos:line="15" pos:column="30"/></operator><name><name pos:line="15" pos:column="30">pmatch<pos:position pos:line="15" pos:column="36"/></name><index pos:line="15" pos:column="36">[<expr><literal type="number" pos:line="15" pos:column="37">0<pos:position pos:line="15" pos:column="38"/></literal></expr>]<pos:position pos:line="15" pos:column="39"/></index></name><operator pos:line="15" pos:column="39">.<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="40">rm_eo<pos:position pos:line="15" pos:column="45"/></name> <operator pos:line="15" pos:column="46">-<pos:position pos:line="15" pos:column="47"/></operator> <name><name pos:line="15" pos:column="48">pmatch<pos:position pos:line="15" pos:column="54"/></name><index pos:line="15" pos:column="54">[<expr><literal type="number" pos:line="15" pos:column="55">0<pos:position pos:line="15" pos:column="56"/></literal></expr>]<pos:position pos:line="15" pos:column="57"/></index></name><operator pos:line="15" pos:column="57">.<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="58">rm_so<pos:position pos:line="15" pos:column="63"/></name><operator pos:line="15" pos:column="63">)<pos:position pos:line="15" pos:column="64"/></operator></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">hdr<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">action<pos:position pos:line="16" pos:column="20"/></name></name> <operator pos:line="16" pos:column="21">==<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">hdr_edit<pos:position pos:line="16" pos:column="32"/></name></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33"> <block pos:line="16" pos:column="34">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">remainder<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">value<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">+<pos:position pos:line="17" pos:column="28"/></operator> <name><name pos:line="17" pos:column="29">pmatch<pos:position pos:line="17" pos:column="35"/></name><index pos:line="17" pos:column="35">[<expr><literal type="number" pos:line="17" pos:column="36">0<pos:position pos:line="17" pos:column="37"/></literal></expr>]<pos:position pos:line="17" pos:column="38"/></index></name><operator pos:line="17" pos:column="38">.<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="39">rm_eo<pos:position pos:line="17" pos:column="44"/></name></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then>
    <else pos:line="19" pos:column="5">else <block pos:line="19" pos:column="10">{ <comment type="block" pos:line="19" pos:column="12">/* recurse to edit multiple matches if applicable */</comment>
        <expr_stmt><expr><name pos:line="20" pos:column="9">remainder<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <call><name pos:line="20" pos:column="21">process_regexp<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">hdr<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">value<pos:position pos:line="20" pos:column="46"/></name> <operator pos:line="20" pos:column="47">+<pos:position pos:line="20" pos:column="48"/></operator> <name><name pos:line="20" pos:column="49">pmatch<pos:position pos:line="20" pos:column="55"/></name><index pos:line="20" pos:column="55">[<expr><literal type="number" pos:line="20" pos:column="56">0<pos:position pos:line="20" pos:column="57"/></literal></expr>]<pos:position pos:line="20" pos:column="58"/></index></name><operator pos:line="20" pos:column="58">.<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="59">rm_eo<pos:position pos:line="20" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="66">pool<pos:position pos:line="20" pos:column="70"/></name></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">diffsz<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">+=<pos:position pos:line="21" pos:column="18"/></operator> <call><name pos:line="21" pos:column="19">strlen<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">remainder<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call> <operator pos:line="21" pos:column="37">-<pos:position pos:line="21" pos:column="38"/></operator> <call><name pos:line="21" pos:column="39">strlen<pos:position pos:line="21" pos:column="45"/></name><argument_list pos:line="21" pos:column="45">(<argument><expr><name pos:line="21" pos:column="46">value<pos:position pos:line="21" pos:column="51"/></name> <operator pos:line="21" pos:column="52">+<pos:position pos:line="21" pos:column="53"/></operator> <name><name pos:line="21" pos:column="54">pmatch<pos:position pos:line="21" pos:column="60"/></name><index pos:line="21" pos:column="60">[<expr><literal type="number" pos:line="21" pos:column="61">0<pos:position pos:line="21" pos:column="62"/></literal></expr>]<pos:position pos:line="21" pos:column="63"/></index></name><operator pos:line="21" pos:column="63">.<pos:position pos:line="21" pos:column="64"/></operator><name pos:line="21" pos:column="64">rm_eo<pos:position pos:line="21" pos:column="69"/></name></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="23" pos:column="5">ret<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <call><name pos:line="23" pos:column="11">apr_palloc<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">pool<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="28">strlen<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><name pos:line="23" pos:column="35">value<pos:position pos:line="23" pos:column="40"/></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call> <operator pos:line="23" pos:column="42">+<pos:position pos:line="23" pos:column="43"/></operator> <literal type="number" pos:line="23" pos:column="44">1<pos:position pos:line="23" pos:column="45"/></literal> <operator pos:line="23" pos:column="46">+<pos:position pos:line="23" pos:column="47"/></operator> <name pos:line="23" pos:column="48">diffsz<pos:position pos:line="23" pos:column="54"/></name></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">memcpy<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">ret<pos:position pos:line="24" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="17">value<pos:position pos:line="24" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="24">pmatch<pos:position pos:line="24" pos:column="30"/></name><index pos:line="24" pos:column="30">[<expr><literal type="number" pos:line="24" pos:column="31">0<pos:position pos:line="24" pos:column="32"/></literal></expr>]<pos:position pos:line="24" pos:column="33"/></index></name><operator pos:line="24" pos:column="33">.<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="34">rm_so<pos:position pos:line="24" pos:column="39"/></name></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">strcpy<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">ret<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">+<pos:position pos:line="25" pos:column="17"/></operator> <name><name pos:line="25" pos:column="18">pmatch<pos:position pos:line="25" pos:column="24"/></name><index pos:line="25" pos:column="24">[<expr><literal type="number" pos:line="25" pos:column="25">0<pos:position pos:line="25" pos:column="26"/></literal></expr>]<pos:position pos:line="25" pos:column="27"/></index></name><operator pos:line="25" pos:column="27">.<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">rm_so<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">subs<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">strcat<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name pos:line="26" pos:column="12">ret<pos:position pos:line="26" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="17">value<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">+<pos:position pos:line="26" pos:column="24"/></operator> <name><name pos:line="26" pos:column="25">pmatch<pos:position pos:line="26" pos:column="31"/></name><index pos:line="26" pos:column="31">[<expr><literal type="number" pos:line="26" pos:column="32">0<pos:position pos:line="26" pos:column="33"/></literal></expr>]<pos:position pos:line="26" pos:column="34"/></index></name><operator pos:line="26" pos:column="34">.<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">rm_eo<pos:position pos:line="26" pos:column="40"/></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">ret<pos:position pos:line="27" pos:column="15"/></name></expr>;<pos:position pos:line="27" pos:column="16"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_324_httpd-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_process_if_header<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">request_rec<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">r<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">dav_if_header<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier><modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">p_ih<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_error<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">err<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">str<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">list<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">state_token<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">uri<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">NULL<pos:position pos:line="7" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>        <comment type="block" pos:line="7" pos:column="36">/* scope of current production; NULL=no-tag */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">uri_len<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">rv<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">dav_if_header<pos:position pos:line="10" pos:column="18"/></name> <modifier pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></modifier></type><name pos:line="10" pos:column="20">ih<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><name pos:line="10" pos:column="25">NULL<pos:position pos:line="10" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_uri_t<pos:position pos:line="11" pos:column="14"/></name></type> <name pos:line="11" pos:column="15">parsed_uri<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">dav_hooks_locks<pos:position pos:line="12" pos:column="26"/></name> <modifier pos:line="12" pos:column="27">*<pos:position pos:line="12" pos:column="28"/></modifier></type><name pos:line="12" pos:column="28">locks_hooks<pos:position pos:line="12" pos:column="39"/></name> <init pos:line="12" pos:column="40">= <expr><call><name pos:line="12" pos:column="42">DAV_GET_HOOKS_LOCKS<pos:position pos:line="12" pos:column="61"/></name><argument_list pos:line="12" pos:column="61">(<argument><expr><name pos:line="12" pos:column="62">r<pos:position pos:line="12" pos:column="63"/></name></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="65"/></decl_stmt>
    <enum pos:line="13" pos:column="5">enum <block pos:line="13" pos:column="10">{<decl><name pos:line="13" pos:column="11">no_tagged<pos:position pos:line="13" pos:column="20"/></name></decl>, <decl><name pos:line="13" pos:column="22">tagged<pos:position pos:line="13" pos:column="28"/></name></decl>, <decl><name pos:line="13" pos:column="30">unknown<pos:position pos:line="13" pos:column="37"/></name></decl>}<pos:position pos:line="13" pos:column="38"/></block> <decl><name pos:line="13" pos:column="39">list_type<pos:position pos:line="13" pos:column="48"/></name> <init pos:line="13" pos:column="49">= <expr><name pos:line="13" pos:column="51">unknown<pos:position pos:line="13" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="59"/></enum>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">condition<pos:position pos:line="14" pos:column="18"/></name></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="16" pos:column="5">*<pos:position pos:line="16" pos:column="6"/></operator><name pos:line="16" pos:column="6">p_ih<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">NULL<pos:position pos:line="16" pos:column="17"/></name></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">str<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <call><name pos:line="18" pos:column="16">apr_pstrdup<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name><name pos:line="18" pos:column="28">r<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">pool<pos:position pos:line="18" pos:column="35"/></name></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="37">apr_table_get<pos:position pos:line="18" pos:column="50"/></name><argument_list pos:line="18" pos:column="50">(<argument><expr><name><name pos:line="18" pos:column="51">r<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">-&gt;<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="54">headers_in<pos:position pos:line="18" pos:column="64"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="66">"If"<pos:position pos:line="18" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="72"/></argument_list></call><operator pos:line="18" pos:column="72">)<pos:position pos:line="18" pos:column="73"/></operator> <operator pos:line="18" pos:column="74">==<pos:position pos:line="18" pos:column="76"/></operator> <name pos:line="18" pos:column="77">NULL<pos:position pos:line="18" pos:column="81"/></name></expr>)<pos:position pos:line="18" pos:column="82"/></condition><then pos:line="18" pos:column="82">
        <block type="pseudo"><return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">NULL<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></return></block></then></if>

    <while pos:line="21" pos:column="5">while <condition pos:line="21" pos:column="11">(<expr><operator pos:line="21" pos:column="12">*<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">str<pos:position pos:line="21" pos:column="16"/></name></expr>)<pos:position pos:line="21" pos:column="17"/></condition> <block pos:line="21" pos:column="18">{
        <switch pos:line="22" pos:column="9">switch<condition pos:line="22" pos:column="15">(<expr><operator pos:line="22" pos:column="16">*<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">str<pos:position pos:line="22" pos:column="20"/></name></expr>)<pos:position pos:line="22" pos:column="21"/></condition> <block pos:line="22" pos:column="22">{
        <case pos:line="23" pos:column="9">case <expr><literal type="char" pos:line="23" pos:column="14">'&lt;'<pos:position pos:line="23" pos:column="20"/></literal></expr>:<pos:position pos:line="23" pos:column="18"/></case>
            <comment type="block" pos:line="24" pos:column="13">/* Tagged-list production - following states apply to this uri */</comment>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name pos:line="25" pos:column="17">list_type<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">==<pos:position pos:line="25" pos:column="29"/></operator> <name pos:line="25" pos:column="30">no_tagged<pos:position pos:line="25" pos:column="39"/></name>
                <operator pos:line="26" pos:column="17">||<pos:position pos:line="26" pos:column="19"/></operator> <operator pos:line="26" pos:column="20">(<pos:position pos:line="26" pos:column="21"/></operator><operator pos:line="26" pos:column="21">(<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">uri<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <call><name pos:line="26" pos:column="28">dav_fetch_next_token<pos:position pos:line="26" pos:column="48"/></name><argument_list pos:line="26" pos:column="48">(<argument><expr><operator pos:line="26" pos:column="49">&amp;<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="50">str<pos:position pos:line="26" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="26" pos:column="55">'&gt;'<pos:position pos:line="26" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call><operator pos:line="26" pos:column="59">)<pos:position pos:line="26" pos:column="60"/></operator> <operator pos:line="26" pos:column="61">==<pos:position pos:line="26" pos:column="63"/></operator> <name pos:line="26" pos:column="64">NULL<pos:position pos:line="26" pos:column="68"/></name><operator pos:line="26" pos:column="68">)<pos:position pos:line="26" pos:column="69"/></operator></expr>)<pos:position pos:line="26" pos:column="70"/></condition><then pos:line="26" pos:column="70"> <block pos:line="26" pos:column="71">{
                <return pos:line="27" pos:column="17">return <expr><call><name pos:line="27" pos:column="24">dav_new_error<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name><name pos:line="27" pos:column="38">r<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">-&gt;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="41">pool<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="47">HTTP_BAD_REQUEST<pos:position pos:line="27" pos:column="63"/></name></expr></argument>,
                                     <argument><expr><name pos:line="28" pos:column="38">DAV_ERR_IF_TAGGED<pos:position pos:line="28" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="57">0<pos:position pos:line="28" pos:column="58"/></literal></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="29" pos:column="38">"Invalid If-header: unclosed \"&lt;\" or "<pos:position pos:line="29" pos:column="80"/></literal>
                                     <literal type="string" pos:line="30" pos:column="38">"unexpected tagged-list production."<pos:position pos:line="30" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="76"/></return>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="33" pos:column="13">/* 2518 specifies this must be an absolute URI; just take the
             * relative part for later comparison against r-&gt;uri */</comment>
            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><operator pos:line="35" pos:column="17">(<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">rv<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <call><name pos:line="35" pos:column="23">apr_uri_parse<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><name><name pos:line="35" pos:column="37">r<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">-&gt;<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="40">pool<pos:position pos:line="35" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="46">uri<pos:position pos:line="35" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="51">&amp;<pos:position pos:line="35" pos:column="56"/></operator><name pos:line="35" pos:column="52">parsed_uri<pos:position pos:line="35" pos:column="62"/></name></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></call><operator pos:line="35" pos:column="63">)<pos:position pos:line="35" pos:column="64"/></operator> <operator pos:line="35" pos:column="65">!=<pos:position pos:line="35" pos:column="67"/></operator> <name pos:line="35" pos:column="68">APR_SUCCESS<pos:position pos:line="35" pos:column="79"/></name>
                <operator pos:line="36" pos:column="17">||<pos:position pos:line="36" pos:column="19"/></operator> <operator pos:line="36" pos:column="20">!<pos:position pos:line="36" pos:column="21"/></operator><name><name pos:line="36" pos:column="21">parsed_uri<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">.<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="32">path<pos:position pos:line="36" pos:column="36"/></name></name></expr>)<pos:position pos:line="36" pos:column="37"/></condition><then pos:line="36" pos:column="37"> <block pos:line="36" pos:column="38">{
                <return pos:line="37" pos:column="17">return <expr><call><name pos:line="37" pos:column="24">dav_new_error<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name><name pos:line="37" pos:column="38">r<pos:position pos:line="37" pos:column="39"/></name><operator pos:line="37" pos:column="39">-&gt;<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="41">pool<pos:position pos:line="37" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="47">HTTP_BAD_REQUEST<pos:position pos:line="37" pos:column="63"/></name></expr></argument>,
                                     <argument><expr><name pos:line="38" pos:column="38">DAV_ERR_IF_TAGGED<pos:position pos:line="38" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="57">rv<pos:position pos:line="38" pos:column="59"/></name></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="39" pos:column="38">"Invalid URI in tagged If-header."<pos:position pos:line="39" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="74"/></return>
            }<pos:position pos:line="40" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="41" pos:column="13">/* note that parsed_uri.path is allocated; we can trash it */</comment>

            <comment type="block" pos:line="43" pos:column="13">/* clean up the URI a bit */</comment>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">ap_getparents<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name><name pos:line="44" pos:column="27">parsed_uri<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">.<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="38">path<pos:position pos:line="44" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="44"/></expr_stmt>

            <comment type="block" pos:line="46" pos:column="13">/* the resources we will compare to have unencoded paths */</comment>
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><call><name pos:line="47" pos:column="17">ap_unescape_url<pos:position pos:line="47" pos:column="32"/></name><argument_list pos:line="47" pos:column="32">(<argument><expr><name><name pos:line="47" pos:column="33">parsed_uri<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">.<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="44">path<pos:position pos:line="47" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="49"/></argument_list></call> <operator pos:line="47" pos:column="50">!=<pos:position pos:line="47" pos:column="52"/></operator> <name pos:line="47" pos:column="53">OK<pos:position pos:line="47" pos:column="55"/></name></expr>)<pos:position pos:line="47" pos:column="56"/></condition><then pos:line="47" pos:column="56"> <block pos:line="47" pos:column="57">{
                <return pos:line="48" pos:column="17">return <expr><call><name pos:line="48" pos:column="24">dav_new_error<pos:position pos:line="48" pos:column="37"/></name><argument_list pos:line="48" pos:column="37">(<argument><expr><name><name pos:line="48" pos:column="38">r<pos:position pos:line="48" pos:column="39"/></name><operator pos:line="48" pos:column="39">-&gt;<pos:position pos:line="48" pos:column="44"/></operator><name pos:line="48" pos:column="41">pool<pos:position pos:line="48" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="47">HTTP_BAD_REQUEST<pos:position pos:line="48" pos:column="63"/></name></expr></argument>,
                                     <argument><expr><name pos:line="49" pos:column="38">DAV_ERR_IF_TAGGED<pos:position pos:line="49" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="57">rv<pos:position pos:line="49" pos:column="59"/></name></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="50" pos:column="38">"Invalid percent encoded URI in "<pos:position pos:line="50" pos:column="71"/></literal>
                                     <literal type="string" pos:line="51" pos:column="38">"tagged If-header."<pos:position pos:line="51" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="59"/></return>
            }<pos:position pos:line="52" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="54" pos:column="13">uri_len<pos:position pos:line="54" pos:column="20"/></name> <operator pos:line="54" pos:column="21">=<pos:position pos:line="54" pos:column="22"/></operator> <call><name pos:line="54" pos:column="23">strlen<pos:position pos:line="54" pos:column="29"/></name><argument_list pos:line="54" pos:column="29">(<argument><expr><name><name pos:line="54" pos:column="30">parsed_uri<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">.<pos:position pos:line="54" pos:column="41"/></operator><name pos:line="54" pos:column="41">path<pos:position pos:line="54" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="47"/></expr_stmt>
            <if pos:line="55" pos:column="13">if <condition pos:line="55" pos:column="16">(<expr><name pos:line="55" pos:column="17">uri_len<pos:position pos:line="55" pos:column="24"/></name> <operator pos:line="55" pos:column="25">&gt;<pos:position pos:line="55" pos:column="29"/></operator> <literal type="number" pos:line="55" pos:column="27">1<pos:position pos:line="55" pos:column="28"/></literal> <operator pos:line="55" pos:column="29">&amp;&amp;<pos:position pos:line="55" pos:column="39"/></operator> <name><name pos:line="55" pos:column="32">parsed_uri<pos:position pos:line="55" pos:column="42"/></name><operator pos:line="55" pos:column="42">.<pos:position pos:line="55" pos:column="43"/></operator><name pos:line="55" pos:column="43">path<pos:position pos:line="55" pos:column="47"/></name><index pos:line="55" pos:column="47">[<expr><name pos:line="55" pos:column="48">uri_len<pos:position pos:line="55" pos:column="55"/></name> <operator pos:line="55" pos:column="56">-<pos:position pos:line="55" pos:column="57"/></operator> <literal type="number" pos:line="55" pos:column="58">1<pos:position pos:line="55" pos:column="59"/></literal></expr>]<pos:position pos:line="55" pos:column="60"/></index></name> <operator pos:line="55" pos:column="61">==<pos:position pos:line="55" pos:column="63"/></operator> <literal type="char" pos:line="55" pos:column="64">'/'<pos:position pos:line="55" pos:column="67"/></literal></expr>)<pos:position pos:line="55" pos:column="68"/></condition><then pos:line="55" pos:column="68"> <block pos:line="55" pos:column="69">{
                <expr_stmt><expr><name><name pos:line="56" pos:column="17">parsed_uri<pos:position pos:line="56" pos:column="27"/></name><operator pos:line="56" pos:column="27">.<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="28">path<pos:position pos:line="56" pos:column="32"/></name><index pos:line="56" pos:column="32">[<expr><operator pos:line="56" pos:column="33">--<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="35">uri_len<pos:position pos:line="56" pos:column="42"/></name></expr>]<pos:position pos:line="56" pos:column="43"/></index></name> <operator pos:line="56" pos:column="44">=<pos:position pos:line="56" pos:column="45"/></operator> <literal type="char" pos:line="56" pos:column="46">'\0'<pos:position pos:line="56" pos:column="50"/></literal></expr>;<pos:position pos:line="56" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="57" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="59" pos:column="13">uri<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">=<pos:position pos:line="59" pos:column="18"/></operator> <name><name pos:line="59" pos:column="19">parsed_uri<pos:position pos:line="59" pos:column="29"/></name><operator pos:line="59" pos:column="29">.<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="30">path<pos:position pos:line="59" pos:column="34"/></name></name></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="60" pos:column="13">list_type<pos:position pos:line="60" pos:column="22"/></name> <operator pos:line="60" pos:column="23">=<pos:position pos:line="60" pos:column="24"/></operator> <name pos:line="60" pos:column="25">tagged<pos:position pos:line="60" pos:column="31"/></name></expr>;<pos:position pos:line="60" pos:column="32"/></expr_stmt>
            <break pos:line="61" pos:column="13">break;<pos:position pos:line="61" pos:column="19"/></break>

        <case pos:line="63" pos:column="9">case <expr><literal type="char" pos:line="63" pos:column="14">'('<pos:position pos:line="63" pos:column="17"/></literal></expr>:<pos:position pos:line="63" pos:column="18"/></case>
            <comment type="block" pos:line="64" pos:column="13">/* List production */</comment>

            <comment type="block" pos:line="66" pos:column="13">/* If a uri has not been encountered, this is a No-Tagged-List */</comment>
            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">(<expr><name pos:line="67" pos:column="17">list_type<pos:position pos:line="67" pos:column="26"/></name> <operator pos:line="67" pos:column="27">==<pos:position pos:line="67" pos:column="29"/></operator> <name pos:line="67" pos:column="30">unknown<pos:position pos:line="67" pos:column="37"/></name></expr>)<pos:position pos:line="67" pos:column="38"/></condition><then pos:line="67" pos:column="38">
                <block type="pseudo"><expr_stmt><expr><name pos:line="68" pos:column="17">list_type<pos:position pos:line="68" pos:column="26"/></name> <operator pos:line="68" pos:column="27">=<pos:position pos:line="68" pos:column="28"/></operator> <name pos:line="68" pos:column="29">no_tagged<pos:position pos:line="68" pos:column="38"/></name></expr>;<pos:position pos:line="68" pos:column="39"/></expr_stmt></block></then></if>

            <if pos:line="70" pos:column="13">if <condition pos:line="70" pos:column="16">(<expr><operator pos:line="70" pos:column="17">(<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="18">list<pos:position pos:line="70" pos:column="22"/></name> <operator pos:line="70" pos:column="23">=<pos:position pos:line="70" pos:column="24"/></operator> <call><name pos:line="70" pos:column="25">dav_fetch_next_token<pos:position pos:line="70" pos:column="45"/></name><argument_list pos:line="70" pos:column="45">(<argument><expr><operator pos:line="70" pos:column="46">&amp;<pos:position pos:line="70" pos:column="51"/></operator><name pos:line="70" pos:column="47">str<pos:position pos:line="70" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="70" pos:column="52">')'<pos:position pos:line="70" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="56"/></argument_list></call><operator pos:line="70" pos:column="56">)<pos:position pos:line="70" pos:column="57"/></operator> <operator pos:line="70" pos:column="58">==<pos:position pos:line="70" pos:column="60"/></operator> <name pos:line="70" pos:column="61">NULL<pos:position pos:line="70" pos:column="65"/></name></expr>)<pos:position pos:line="70" pos:column="66"/></condition><then pos:line="70" pos:column="66"> <block pos:line="70" pos:column="67">{
                <return pos:line="71" pos:column="17">return <expr><call><name pos:line="71" pos:column="24">dav_new_error<pos:position pos:line="71" pos:column="37"/></name><argument_list pos:line="71" pos:column="37">(<argument><expr><name><name pos:line="71" pos:column="38">r<pos:position pos:line="71" pos:column="39"/></name><operator pos:line="71" pos:column="39">-&gt;<pos:position pos:line="71" pos:column="44"/></operator><name pos:line="71" pos:column="41">pool<pos:position pos:line="71" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="47">HTTP_BAD_REQUEST<pos:position pos:line="71" pos:column="63"/></name></expr></argument>,
                                     <argument><expr><name pos:line="72" pos:column="38">DAV_ERR_IF_UNCLOSED_PAREN<pos:position pos:line="72" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="65">0<pos:position pos:line="72" pos:column="66"/></literal></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="73" pos:column="38">"Invalid If-header: unclosed \"(\"."<pos:position pos:line="73" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="76"/></return>
            }<pos:position pos:line="74" pos:column="14"/></block></then></if>

            <if pos:line="76" pos:column="13">if <condition pos:line="76" pos:column="16">(<expr><operator pos:line="76" pos:column="17">(<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="18">ih<pos:position pos:line="76" pos:column="20"/></name> <operator pos:line="76" pos:column="21">=<pos:position pos:line="76" pos:column="22"/></operator> <call><name pos:line="76" pos:column="23">dav_add_if_resource<pos:position pos:line="76" pos:column="42"/></name><argument_list pos:line="76" pos:column="42">(<argument><expr><name><name pos:line="76" pos:column="43">r<pos:position pos:line="76" pos:column="44"/></name><operator pos:line="76" pos:column="44">-&gt;<pos:position pos:line="76" pos:column="49"/></operator><name pos:line="76" pos:column="46">pool<pos:position pos:line="76" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="52">ih<pos:position pos:line="76" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="56">uri<pos:position pos:line="76" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="61">uri_len<pos:position pos:line="76" pos:column="68"/></name></expr></argument>)<pos:position pos:line="76" pos:column="69"/></argument_list></call><operator pos:line="76" pos:column="69">)<pos:position pos:line="76" pos:column="70"/></operator> <operator pos:line="76" pos:column="71">==<pos:position pos:line="76" pos:column="73"/></operator> <name pos:line="76" pos:column="74">NULL<pos:position pos:line="76" pos:column="78"/></name></expr>)<pos:position pos:line="76" pos:column="79"/></condition><then pos:line="76" pos:column="79"> <block pos:line="76" pos:column="80">{
                <comment type="block" pos:line="77" pos:column="17">/* ### dav_add_if_resource() should return an error for us! */</comment>
                <return pos:line="78" pos:column="17">return <expr><call><name pos:line="78" pos:column="24">dav_new_error<pos:position pos:line="78" pos:column="37"/></name><argument_list pos:line="78" pos:column="37">(<argument><expr><name><name pos:line="78" pos:column="38">r<pos:position pos:line="78" pos:column="39"/></name><operator pos:line="78" pos:column="39">-&gt;<pos:position pos:line="78" pos:column="44"/></operator><name pos:line="78" pos:column="41">pool<pos:position pos:line="78" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="47">HTTP_BAD_REQUEST<pos:position pos:line="78" pos:column="63"/></name></expr></argument>,
                                     <argument><expr><name pos:line="79" pos:column="38">DAV_ERR_IF_PARSE<pos:position pos:line="79" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="56">0<pos:position pos:line="79" pos:column="57"/></literal></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="80" pos:column="38">"Internal server error parsing \"If:\" "<pos:position pos:line="80" pos:column="78"/></literal>
                                     <literal type="string" pos:line="81" pos:column="38">"header."<pos:position pos:line="81" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="49"/></return>
            }<pos:position pos:line="82" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="84" pos:column="13">condition<pos:position pos:line="84" pos:column="22"/></name> <operator pos:line="84" pos:column="23">=<pos:position pos:line="84" pos:column="24"/></operator> <name pos:line="84" pos:column="25">DAV_IF_COND_NORMAL<pos:position pos:line="84" pos:column="43"/></name></expr>;<pos:position pos:line="84" pos:column="44"/></expr_stmt>

            <while pos:line="86" pos:column="13">while <condition pos:line="86" pos:column="19">(<expr><operator pos:line="86" pos:column="20">*<pos:position pos:line="86" pos:column="21"/></operator><name pos:line="86" pos:column="21">list<pos:position pos:line="86" pos:column="25"/></name></expr>)<pos:position pos:line="86" pos:column="26"/></condition> <block pos:line="86" pos:column="27">{
                <comment type="block" pos:line="87" pos:column="17">/* List is the entire production (in a uri scope) */</comment>

                <switch pos:line="89" pos:column="17">switch <condition pos:line="89" pos:column="24">(<expr><operator pos:line="89" pos:column="25">*<pos:position pos:line="89" pos:column="26"/></operator><name pos:line="89" pos:column="26">list<pos:position pos:line="89" pos:column="30"/></name></expr>)<pos:position pos:line="89" pos:column="31"/></condition> <block pos:line="89" pos:column="32">{
                <case pos:line="90" pos:column="17">case <expr><literal type="char" pos:line="90" pos:column="22">'&lt;'<pos:position pos:line="90" pos:column="28"/></literal></expr>:<pos:position pos:line="90" pos:column="26"/></case>
                    <if pos:line="91" pos:column="21">if <condition pos:line="91" pos:column="24">(<expr><operator pos:line="91" pos:column="25">(<pos:position pos:line="91" pos:column="26"/></operator><name pos:line="91" pos:column="26">state_token<pos:position pos:line="91" pos:column="37"/></name> <operator pos:line="91" pos:column="38">=<pos:position pos:line="91" pos:column="39"/></operator> <call><name pos:line="91" pos:column="40">dav_fetch_next_token<pos:position pos:line="91" pos:column="60"/></name><argument_list pos:line="91" pos:column="60">(<argument><expr><operator pos:line="91" pos:column="61">&amp;<pos:position pos:line="91" pos:column="66"/></operator><name pos:line="91" pos:column="62">list<pos:position pos:line="91" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="91" pos:column="68">'&gt;'<pos:position pos:line="91" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="72"/></argument_list></call><operator pos:line="91" pos:column="72">)<pos:position pos:line="91" pos:column="73"/></operator> <operator pos:line="91" pos:column="74">==<pos:position pos:line="91" pos:column="76"/></operator> <name pos:line="91" pos:column="77">NULL<pos:position pos:line="91" pos:column="81"/></name></expr>)<pos:position pos:line="91" pos:column="82"/></condition><then pos:line="91" pos:column="82"> <block pos:line="91" pos:column="83">{
                        <comment type="block" pos:line="92" pos:column="25">/* ### add a description to this error */</comment>
                        <return pos:line="93" pos:column="25">return <expr><call><name pos:line="93" pos:column="32">dav_new_error<pos:position pos:line="93" pos:column="45"/></name><argument_list pos:line="93" pos:column="45">(<argument><expr><name><name pos:line="93" pos:column="46">r<pos:position pos:line="93" pos:column="47"/></name><operator pos:line="93" pos:column="47">-&gt;<pos:position pos:line="93" pos:column="52"/></operator><name pos:line="93" pos:column="49">pool<pos:position pos:line="93" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="55">HTTP_BAD_REQUEST<pos:position pos:line="93" pos:column="71"/></name></expr></argument>,
                                             <argument><expr><name pos:line="94" pos:column="46">DAV_ERR_IF_PARSE<pos:position pos:line="94" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="64">0<pos:position pos:line="94" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="67">NULL<pos:position pos:line="94" pos:column="71"/></name></expr></argument>)<pos:position pos:line="94" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="73"/></return>
                    }<pos:position pos:line="95" pos:column="22"/></block></then></if>

                    <if pos:line="97" pos:column="21">if <condition pos:line="97" pos:column="24">(<expr><operator pos:line="97" pos:column="25">(<pos:position pos:line="97" pos:column="26"/></operator><name pos:line="97" pos:column="26">err<pos:position pos:line="97" pos:column="29"/></name> <operator pos:line="97" pos:column="30">=<pos:position pos:line="97" pos:column="31"/></operator> <call><name pos:line="97" pos:column="32">dav_add_if_state<pos:position pos:line="97" pos:column="48"/></name><argument_list pos:line="97" pos:column="48">(<argument><expr><name><name pos:line="97" pos:column="49">r<pos:position pos:line="97" pos:column="50"/></name><operator pos:line="97" pos:column="50">-&gt;<pos:position pos:line="97" pos:column="55"/></operator><name pos:line="97" pos:column="52">pool<pos:position pos:line="97" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="58">ih<pos:position pos:line="97" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="62">state_token<pos:position pos:line="97" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="75">dav_if_opaquelock<pos:position pos:line="97" pos:column="92"/></name></expr></argument>,
                                                <argument><expr><name pos:line="98" pos:column="49">condition<pos:position pos:line="98" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="60">locks_hooks<pos:position pos:line="98" pos:column="71"/></name></expr></argument>)<pos:position pos:line="98" pos:column="72"/></argument_list></call><operator pos:line="98" pos:column="72">)<pos:position pos:line="98" pos:column="73"/></operator> <operator pos:line="98" pos:column="74">!=<pos:position pos:line="98" pos:column="76"/></operator> <name pos:line="98" pos:column="77">NULL<pos:position pos:line="98" pos:column="81"/></name></expr>)<pos:position pos:line="98" pos:column="82"/></condition><then pos:line="98" pos:column="82"> <block pos:line="98" pos:column="83">{<pos:position pos:line="98" pos:column="84"/></block></then></if></block></switch></block></while></block></switch></block></while></block></function>
                   </unit>

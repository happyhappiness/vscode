<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6782.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_mplx_release_and_join<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">h2_mplx<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">m<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">apr_thread_cond_t<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">wait<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">acquired<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* How to shut down a h2 connection:
     * 1. tell the workers that no more tasks will come from us */</comment>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">h2_workers_unregister<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name><name pos:line="8" pos:column="27">m<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">workers<pos:position pos:line="8" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="39">m<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
    
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">status<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <call><name pos:line="10" pos:column="19">enter_mutex<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">m<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="34">&amp;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="35">acquired<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call><operator pos:line="10" pos:column="44">)<pos:position pos:line="10" pos:column="45"/></operator> <operator pos:line="10" pos:column="46">==<pos:position pos:line="10" pos:column="48"/></operator> <name pos:line="10" pos:column="49">APR_SUCCESS<pos:position pos:line="10" pos:column="60"/></name></expr>)<pos:position pos:line="10" pos:column="61"/></condition><then pos:line="10" pos:column="61"> <block pos:line="10" pos:column="62">{
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">i<pos:position pos:line="11" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="16">wait_secs<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><literal type="number" pos:line="11" pos:column="28">60<pos:position pos:line="11" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>

        <comment type="block" pos:line="13" pos:column="9">/* 2. disable WINDOW_UPDATEs and set the mplx to aborted, clear
         *    our TODO list and purge any streams we have collected */</comment>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">h2_mplx_set_consumed_cb<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">m<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">NULL<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">NULL<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">h2_mplx_abort<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">m<pos:position pos:line="16" pos:column="24"/></name></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">h2_iq_clear<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name><name pos:line="17" pos:column="21">m<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">-&gt;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="24">q<pos:position pos:line="17" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">purge_streams<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">m<pos:position pos:line="18" pos:column="24"/></name></expr></argument>)<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>

        <comment type="block" pos:line="20" pos:column="9">/* 3. wakeup all sleeping tasks. Mark all still active streams as 'done'. 
         *    m-&gt;streams has to be empty afterwards with streams either in
         *    a) m-&gt;shold because a task is still active
         *    b) m-&gt;spurge because task is done, or was not started */</comment>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">h2_ihash_iter<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name><name pos:line="24" pos:column="23">m<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">tasks<pos:position pos:line="24" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="33">task_abort_connection<pos:position pos:line="24" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="56">m<pos:position pos:line="24" pos:column="57"/></name></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">apr_thread_cond_broadcast<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name><name pos:line="25" pos:column="35">m<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">task_thawed<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt>
        <while pos:line="26" pos:column="9">while <condition pos:line="26" pos:column="15">(<expr><operator pos:line="26" pos:column="16">!<pos:position pos:line="26" pos:column="17"/></operator><call><name pos:line="26" pos:column="17">h2_ihash_iter<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name><name pos:line="26" pos:column="31">m<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">-&gt;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="34">streams<pos:position pos:line="26" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">stream_done_iter<pos:position pos:line="26" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="61">m<pos:position pos:line="26" pos:column="62"/></name></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="64"/></condition> <block pos:line="26" pos:column="65">{
            <comment type="block" pos:line="27" pos:column="13">/* iterate until all streams have been removed */</comment>
        }<pos:position pos:line="28" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">ap_assert<pos:position pos:line="29" pos:column="18"/></name><argument_list pos:line="29" pos:column="18">(<argument><expr><call><name pos:line="29" pos:column="19">h2_ihash_empty<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><name><name pos:line="29" pos:column="34">m<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">-&gt;<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="37">streams<pos:position pos:line="29" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>

        <comment type="block" pos:line="31" pos:column="9">/* 4. purge all streams we collected by marking them 'done' */</comment>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">purge_streams<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">m<pos:position pos:line="32" pos:column="24"/></name></expr></argument>)<pos:position pos:line="32" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
        
        <comment type="block" pos:line="34" pos:column="9">/* 5. while workers are busy on this connection, meaning they
         *    are processing tasks from this connection, wait on them finishing
         *    to wake us and check again. Eventually, this has to succeed. */</comment>    
        <expr_stmt><expr><name><name pos:line="37" pos:column="9">m<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">join_wait<pos:position pos:line="37" pos:column="21"/></name></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">wait<pos:position pos:line="37" pos:column="28"/></name></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt>
        <for pos:line="38" pos:column="9">for <control pos:line="38" pos:column="13">(<init><expr><name pos:line="38" pos:column="14">i<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <literal type="number" pos:line="38" pos:column="18">0<pos:position pos:line="38" pos:column="19"/></literal></expr>;<pos:position pos:line="38" pos:column="20"/></init> <condition><expr><name><name pos:line="38" pos:column="21">m<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">workers_busy<pos:position pos:line="38" pos:column="36"/></name></name> <operator pos:line="38" pos:column="37">&gt;<pos:position pos:line="38" pos:column="41"/></operator> <literal type="number" pos:line="38" pos:column="39">0<pos:position pos:line="38" pos:column="40"/></literal></expr>;<pos:position pos:line="38" pos:column="41"/></condition> <incr><expr><operator pos:line="38" pos:column="42">++<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="44">i<pos:position pos:line="38" pos:column="45"/></name></expr></incr>)<pos:position pos:line="38" pos:column="46"/></control> <block pos:line="38" pos:column="47">{
            <expr_stmt><expr><name pos:line="39" pos:column="13">status<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <call><name pos:line="39" pos:column="22">apr_thread_cond_timedwait<pos:position pos:line="39" pos:column="47"/></name><argument_list pos:line="39" pos:column="47">(<argument><expr><name pos:line="39" pos:column="48">wait<pos:position pos:line="39" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="54">m<pos:position pos:line="39" pos:column="55"/></name><operator pos:line="39" pos:column="55">-&gt;<pos:position pos:line="39" pos:column="60"/></operator><name pos:line="39" pos:column="57">lock<pos:position pos:line="39" pos:column="61"/></name></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="63">apr_time_from_sec<pos:position pos:line="39" pos:column="80"/></name><argument_list pos:line="39" pos:column="80">(<argument><expr><name pos:line="39" pos:column="81">wait_secs<pos:position pos:line="39" pos:column="90"/></name></expr></argument>)<pos:position pos:line="39" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="93"/></expr_stmt>
            
            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><call><name pos:line="41" pos:column="17">APR_STATUS_IS_TIMEUP<pos:position pos:line="41" pos:column="37"/></name><argument_list pos:line="41" pos:column="37">(<argument><expr><name pos:line="41" pos:column="38">status<pos:position pos:line="41" pos:column="44"/></name></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="46"/></condition><then pos:line="41" pos:column="46"> <block pos:line="41" pos:column="47">{
                <comment type="block" pos:line="42" pos:column="17">/* This can happen if we have very long running requests
                 * that do not time out on IO. */</comment>
                <expr_stmt><expr><call><name pos:line="44" pos:column="17">ap_log_cerror<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">APLOG_MARK<pos:position pos:line="44" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="43">APLOG_DEBUG<pos:position pos:line="44" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="56">0<pos:position pos:line="44" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="59">m<pos:position pos:line="44" pos:column="60"/></name><operator pos:line="44" pos:column="60">-&gt;<pos:position pos:line="44" pos:column="65"/></operator><name pos:line="44" pos:column="62">c<pos:position pos:line="44" pos:column="63"/></name></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="65">APLOGNO<pos:position pos:line="44" pos:column="72"/></name><argument_list pos:line="44" pos:column="72">(<argument><expr><literal type="number" pos:line="44" pos:column="73">03198<pos:position pos:line="44" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="79"/></argument_list></call>
                              <literal type="string" pos:line="45" pos:column="31">"h2_mplx(%ld): release, waiting for %d seconds now for "<pos:position pos:line="45" pos:column="87"/></literal>
                              <literal type="string" pos:line="46" pos:column="31">"%d h2_workers to return, have still %d tasks outstanding"<pos:position pos:line="46" pos:column="89"/></literal></expr></argument>, 
                              <argument><expr><name><name pos:line="47" pos:column="31">m<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">id<pos:position pos:line="47" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="38">i<pos:position pos:line="47" pos:column="39"/></name><operator pos:line="47" pos:column="39">*<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="40">wait_secs<pos:position pos:line="47" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="51">m<pos:position pos:line="47" pos:column="52"/></name><operator pos:line="47" pos:column="52">-&gt;<pos:position pos:line="47" pos:column="57"/></operator><name pos:line="47" pos:column="54">workers_busy<pos:position pos:line="47" pos:column="66"/></name></name></expr></argument>,
                              <argument><expr><operator pos:line="48" pos:column="31">(<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="32">int<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">)<pos:position pos:line="48" pos:column="36"/></operator><call><name pos:line="48" pos:column="36">h2_ihash_count<pos:position pos:line="48" pos:column="50"/></name><argument_list pos:line="48" pos:column="50">(<argument><expr><name><name pos:line="48" pos:column="51">m<pos:position pos:line="48" pos:column="52"/></name><operator pos:line="48" pos:column="52">-&gt;<pos:position pos:line="48" pos:column="57"/></operator><name pos:line="48" pos:column="54">tasks<pos:position pos:line="48" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="49" pos:column="17">h2_ihash_iter<pos:position pos:line="49" pos:column="30"/></name><argument_list pos:line="49" pos:column="30">(<argument><expr><name><name pos:line="49" pos:column="31">m<pos:position pos:line="49" pos:column="32"/></name><operator pos:line="49" pos:column="32">-&gt;<pos:position pos:line="49" pos:column="37"/></operator><name pos:line="49" pos:column="34">shold<pos:position pos:line="49" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="41">report_stream_iter<pos:position pos:line="49" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="61">m<pos:position pos:line="49" pos:column="62"/></name></expr></argument>)<pos:position pos:line="49" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="50" pos:column="17">h2_ihash_iter<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name><name pos:line="50" pos:column="31">m<pos:position pos:line="50" pos:column="32"/></name><operator pos:line="50" pos:column="32">-&gt;<pos:position pos:line="50" pos:column="37"/></operator><name pos:line="50" pos:column="34">tasks<pos:position pos:line="50" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="41">task_print<pos:position pos:line="50" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="53">m<pos:position pos:line="50" pos:column="54"/></name></expr></argument>)<pos:position pos:line="50" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="51" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">purge_streams<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">(<argument><expr><name pos:line="52" pos:column="27">m<pos:position pos:line="52" pos:column="28"/></name></expr></argument>)<pos:position pos:line="52" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="53" pos:column="10"/></block></for>
        <expr_stmt><expr><name><name pos:line="54" pos:column="9">m<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">-&gt;<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="12">join_wait<pos:position pos:line="54" pos:column="21"/></name></name> <operator pos:line="54" pos:column="22">=<pos:position pos:line="54" pos:column="23"/></operator> <name pos:line="54" pos:column="24">NULL<pos:position pos:line="54" pos:column="28"/></name></expr>;<pos:position pos:line="54" pos:column="29"/></expr_stmt>
        
        <comment type="block" pos:line="56" pos:column="9">/* 6. All workers for this connection are done, we are in 
         * single-threaded processing now effectively. */</comment>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">leave_mutex<pos:position pos:line="58" pos:column="20"/></name><argument_list pos:line="58" pos:column="20">(<argument><expr><name pos:line="58" pos:column="21">m<pos:position pos:line="58" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="24">acquired<pos:position pos:line="58" pos:column="32"/></name></expr></argument>)<pos:position pos:line="58" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="34"/></expr_stmt>

        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><operator pos:line="60" pos:column="13">!<pos:position pos:line="60" pos:column="14"/></operator><call><name pos:line="60" pos:column="14">h2_ihash_empty<pos:position pos:line="60" pos:column="28"/></name><argument_list pos:line="60" pos:column="28">(<argument><expr><name><name pos:line="60" pos:column="29">m<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">-&gt;<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="32">tasks<pos:position pos:line="60" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="39"/></condition><then pos:line="60" pos:column="39"> <block pos:line="60" pos:column="40">{
            <comment type="block" pos:line="61" pos:column="13">/* when we are here, we lost track of the tasks still present.
             * this currently happens with mod_proxy_http2 when we shut
             * down a h2_req_engine with tasks assigned. Since no parallel
             * processing is going on any more, we just clean them up. */</comment> 
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">ap_log_cerror<pos:position pos:line="65" pos:column="26"/></name><argument_list pos:line="65" pos:column="26">(<argument><expr><name pos:line="65" pos:column="27">APLOG_MARK<pos:position pos:line="65" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="39">APLOG_DEBUG<pos:position pos:line="65" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="52">0<pos:position pos:line="65" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="55">m<pos:position pos:line="65" pos:column="56"/></name><operator pos:line="65" pos:column="56">-&gt;<pos:position pos:line="65" pos:column="61"/></operator><name pos:line="65" pos:column="58">c<pos:position pos:line="65" pos:column="59"/></name></name></expr></argument>,  <argument><expr><call><name pos:line="65" pos:column="62">APLOGNO<pos:position pos:line="65" pos:column="69"/></name><argument_list pos:line="65" pos:column="69">(<argument><expr><literal type="number" pos:line="65" pos:column="70">03056<pos:position pos:line="65" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="76"/></argument_list></call>
                          <literal type="string" pos:line="66" pos:column="27">"h2_mplx(%ld): 3. release_join with %d tasks"<pos:position pos:line="66" pos:column="72"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="67" pos:column="27">m<pos:position pos:line="67" pos:column="28"/></name><operator pos:line="67" pos:column="28">-&gt;<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="30">id<pos:position pos:line="67" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="34">(<pos:position pos:line="67" pos:column="35"/></operator><name pos:line="67" pos:column="35">int<pos:position pos:line="67" pos:column="38"/></name><operator pos:line="67" pos:column="38">)<pos:position pos:line="67" pos:column="39"/></operator><call><name pos:line="67" pos:column="39">h2_ihash_count<pos:position pos:line="67" pos:column="53"/></name><argument_list pos:line="67" pos:column="53">(<argument><expr><name><name pos:line="67" pos:column="54">m<pos:position pos:line="67" pos:column="55"/></name><operator pos:line="67" pos:column="55">-&gt;<pos:position pos:line="67" pos:column="60"/></operator><name pos:line="67" pos:column="57">tasks<pos:position pos:line="67" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">h2_ihash_iter<pos:position pos:line="68" pos:column="26"/></name><argument_list pos:line="68" pos:column="26">(<argument><expr><name><name pos:line="68" pos:column="27">m<pos:position pos:line="68" pos:column="28"/></name><operator pos:line="68" pos:column="28">-&gt;<pos:position pos:line="68" pos:column="33"/></operator><name pos:line="68" pos:column="30">tasks<pos:position pos:line="68" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="37">task_print<pos:position pos:line="68" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="49">m<pos:position pos:line="68" pos:column="50"/></name></expr></argument>)<pos:position pos:line="68" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="52"/></expr_stmt>
            
            <while pos:line="70" pos:column="13">while <condition pos:line="70" pos:column="19">(<expr><operator pos:line="70" pos:column="20">!<pos:position pos:line="70" pos:column="21"/></operator><call><name pos:line="70" pos:column="21">h2_ihash_iter<pos:position pos:line="70" pos:column="34"/></name><argument_list pos:line="70" pos:column="34">(<argument><expr><name><name pos:line="70" pos:column="35">m<pos:position pos:line="70" pos:column="36"/></name><operator pos:line="70" pos:column="36">-&gt;<pos:position pos:line="70" pos:column="41"/></operator><name pos:line="70" pos:column="38">tasks<pos:position pos:line="70" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="45">task_done_iter<pos:position pos:line="70" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="61">m<pos:position pos:line="70" pos:column="62"/></name></expr></argument>)<pos:position pos:line="70" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="64"/></condition> <block pos:line="70" pos:column="65">{
                <comment type="block" pos:line="71" pos:column="17">/* iterate until all tasks have been removed */</comment>
            }<pos:position pos:line="72" pos:column="14"/></block></while>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="75" pos:column="9">/* 7. With all tasks done, the stream hold should be empty and all
         *    remaining streams are ready for purging */</comment>
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">ap_assert<pos:position pos:line="77" pos:column="18"/></name><argument_list pos:line="77" pos:column="18">(<argument><expr><call><name pos:line="77" pos:column="19">h2_ihash_empty<pos:position pos:line="77" pos:column="33"/></name><argument_list pos:line="77" pos:column="33">(<argument><expr><name><name pos:line="77" pos:column="34">m<pos:position pos:line="77" pos:column="35"/></name><operator pos:line="77" pos:column="35">-&gt;<pos:position pos:line="77" pos:column="40"/></operator><name pos:line="77" pos:column="37">shold<pos:position pos:line="77" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">purge_streams<pos:position pos:line="78" pos:column="22"/></name><argument_list pos:line="78" pos:column="22">(<argument><expr><name pos:line="78" pos:column="23">m<pos:position pos:line="78" pos:column="24"/></name></expr></argument>)<pos:position pos:line="78" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="26"/></expr_stmt>
        
        <comment type="block" pos:line="80" pos:column="9">/* 8. close the h2_req_enginge shed and self destruct */</comment>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">h2_ngn_shed_destroy<pos:position pos:line="81" pos:column="28"/></name><argument_list pos:line="81" pos:column="28">(<argument><expr><name><name pos:line="81" pos:column="29">m<pos:position pos:line="81" pos:column="30"/></name><operator pos:line="81" pos:column="30">-&gt;<pos:position pos:line="81" pos:column="35"/></operator><name pos:line="81" pos:column="32">ngn_shed<pos:position pos:line="81" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="82" pos:column="9">m<pos:position pos:line="82" pos:column="10"/></name><operator pos:line="82" pos:column="10">-&gt;<pos:position pos:line="82" pos:column="15"/></operator><name pos:line="82" pos:column="12">ngn_shed<pos:position pos:line="82" pos:column="20"/></name></name> <operator pos:line="82" pos:column="21">=<pos:position pos:line="82" pos:column="22"/></operator> <name pos:line="82" pos:column="23">NULL<pos:position pos:line="82" pos:column="27"/></name></expr>;<pos:position pos:line="82" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">h2_mplx_destroy<pos:position pos:line="83" pos:column="24"/></name><argument_list pos:line="83" pos:column="24">(<argument><expr><name pos:line="83" pos:column="25">m<pos:position pos:line="83" pos:column="26"/></name></expr></argument>)<pos:position pos:line="83" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>
    <return pos:line="85" pos:column="5">return <expr><name pos:line="85" pos:column="12">status<pos:position pos:line="85" pos:column="18"/></name></expr>;<pos:position pos:line="85" pos:column="19"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

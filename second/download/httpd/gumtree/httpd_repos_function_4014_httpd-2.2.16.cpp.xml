<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_4014_httpd-2.2.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">find_fixedlength<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">uschar<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">code<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">options<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
<decl_stmt><decl><type><name pos:line="4" pos:column="1">int<pos:position pos:line="4" pos:column="4"/></name></type> <name pos:line="4" pos:column="5">length<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><operator pos:line="4" pos:column="14">-<pos:position pos:line="4" pos:column="15"/></operator><literal type="number" pos:line="4" pos:column="15">1<pos:position pos:line="4" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

<decl_stmt><decl><type><specifier pos:line="6" pos:column="1">register<pos:position pos:line="6" pos:column="9"/></specifier> <name pos:line="6" pos:column="10">int<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">branchlength<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><literal type="number" pos:line="6" pos:column="29">0<pos:position pos:line="6" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="7" pos:column="1">register<pos:position pos:line="7" pos:column="9"/></specifier> <name pos:line="7" pos:column="10">uschar<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">cc<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">code<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">+<pos:position pos:line="7" pos:column="29"/></operator> <literal type="number" pos:line="7" pos:column="30">1<pos:position pos:line="7" pos:column="31"/></literal> <operator pos:line="7" pos:column="32">+<pos:position pos:line="7" pos:column="33"/></operator> <name pos:line="7" pos:column="34">LINK_SIZE<pos:position pos:line="7" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>

<comment type="block" pos:line="9" pos:column="1">/* Scan along the opcodes for this branch. If we get to the end of the
branch, check the length against that of the other branches. */</comment>

<for pos:line="12" pos:column="1">for <control pos:line="12" pos:column="5">(<init pos:line="12" pos:column="6">;<pos:position pos:line="12" pos:column="7"/></init><condition pos:line="12" pos:column="7">;<pos:position pos:line="12" pos:column="8"/></condition><incr/>)<pos:position pos:line="12" pos:column="9"/></control>
  <block pos:line="13" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">d<pos:position pos:line="14" pos:column="8"/></name></decl>;<pos:position pos:line="14" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="15" pos:column="3">register<pos:position pos:line="15" pos:column="11"/></specifier> <name pos:line="15" pos:column="12">int<pos:position pos:line="15" pos:column="15"/></name></type> <name pos:line="15" pos:column="16">op<pos:position pos:line="15" pos:column="18"/></name> <init pos:line="15" pos:column="19">= <expr><operator pos:line="15" pos:column="21">*<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">cc<pos:position pos:line="15" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="25"/></decl_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">op<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">&gt;=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="13">OP_BRA<pos:position pos:line="16" pos:column="19"/></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20"> <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="21">op<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">OP_BRA<pos:position pos:line="16" pos:column="32"/></name></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt></block></then></if>

  <switch pos:line="18" pos:column="3">switch <condition pos:line="18" pos:column="10">(<expr><name pos:line="18" pos:column="11">op<pos:position pos:line="18" pos:column="13"/></name></expr>)<pos:position pos:line="18" pos:column="14"/></condition>
    <block pos:line="19" pos:column="5">{
    <case pos:line="20" pos:column="5">case <expr><name pos:line="20" pos:column="10">OP_BRA<pos:position pos:line="20" pos:column="16"/></name></expr>:<pos:position pos:line="20" pos:column="17"/></case>
    <case pos:line="21" pos:column="5">case <expr><name pos:line="21" pos:column="10">OP_ONCE<pos:position pos:line="21" pos:column="17"/></name></expr>:<pos:position pos:line="21" pos:column="18"/></case>
    <case pos:line="22" pos:column="5">case <expr><name pos:line="22" pos:column="10">OP_COND<pos:position pos:line="22" pos:column="17"/></name></expr>:<pos:position pos:line="22" pos:column="18"/></case>
    <expr_stmt><expr><name pos:line="23" pos:column="5">d<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <call><name pos:line="23" pos:column="9">find_fixedlength<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">cc<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="30">options<pos:position pos:line="23" pos:column="37"/></name></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">d<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">&lt;<pos:position pos:line="24" pos:column="15"/></operator> <literal type="number" pos:line="24" pos:column="13">0<pos:position pos:line="24" pos:column="14"/></literal></expr>)<pos:position pos:line="24" pos:column="15"/></condition><then pos:line="24" pos:column="15"> <block type="pseudo"><return pos:line="24" pos:column="16">return <expr><name pos:line="24" pos:column="23">d<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="25" pos:column="5">branchlength<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">+=<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">d<pos:position pos:line="25" pos:column="22"/></name></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
    <do pos:line="26" pos:column="5">do <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="8">cc<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">+=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">GET<pos:position pos:line="26" pos:column="17"/></name><argument_list pos:line="26" pos:column="17">(<argument><expr><name pos:line="26" pos:column="18">cc<pos:position pos:line="26" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="22">1<pos:position pos:line="26" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt></block> while <condition pos:line="26" pos:column="32">(<expr><operator pos:line="26" pos:column="33">*<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="34">cc<pos:position pos:line="26" pos:column="36"/></name> <operator pos:line="26" pos:column="37">==<pos:position pos:line="26" pos:column="39"/></operator> <name pos:line="26" pos:column="40">OP_ALT<pos:position pos:line="26" pos:column="46"/></name></expr>)<pos:position pos:line="26" pos:column="47"/></condition>;<pos:position pos:line="26" pos:column="48"/></do>
    <expr_stmt><expr><name pos:line="27" pos:column="5">cc<pos:position pos:line="27" pos:column="7"/></name> <operator pos:line="27" pos:column="8">+=<pos:position pos:line="27" pos:column="10"/></operator> <literal type="number" pos:line="27" pos:column="11">1<pos:position pos:line="27" pos:column="12"/></literal> <operator pos:line="27" pos:column="13">+<pos:position pos:line="27" pos:column="14"/></operator> <name pos:line="27" pos:column="15">LINK_SIZE<pos:position pos:line="27" pos:column="24"/></name></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
    <break pos:line="28" pos:column="5">break;<pos:position pos:line="28" pos:column="11"/></break>

    <comment type="block" pos:line="30" pos:column="5">/* Reached end of a branch; if it's a ket it is the end of a nested
    call. If it's ALT it is an alternation in a nested call. If it is
    END it's the end of the outer call. All can be handled by the same code. */</comment>

    <case pos:line="34" pos:column="5">case <expr><name pos:line="34" pos:column="10">OP_ALT<pos:position pos:line="34" pos:column="16"/></name></expr>:<pos:position pos:line="34" pos:column="17"/></case>
    <case pos:line="35" pos:column="5">case <expr><name pos:line="35" pos:column="10">OP_KET<pos:position pos:line="35" pos:column="16"/></name></expr>:<pos:position pos:line="35" pos:column="17"/></case>
    <case pos:line="36" pos:column="5">case <expr><name pos:line="36" pos:column="10">OP_KETRMAX<pos:position pos:line="36" pos:column="20"/></name></expr>:<pos:position pos:line="36" pos:column="21"/></case>
    <case pos:line="37" pos:column="5">case <expr><name pos:line="37" pos:column="10">OP_KETRMIN<pos:position pos:line="37" pos:column="20"/></name></expr>:<pos:position pos:line="37" pos:column="21"/></case>
    <case pos:line="38" pos:column="5">case <expr><name pos:line="38" pos:column="10">OP_END<pos:position pos:line="38" pos:column="16"/></name></expr>:<pos:position pos:line="38" pos:column="17"/></case>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">length<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">&lt;<pos:position pos:line="39" pos:column="20"/></operator> <literal type="number" pos:line="39" pos:column="18">0<pos:position pos:line="39" pos:column="19"/></literal></expr>)<pos:position pos:line="39" pos:column="20"/></condition><then pos:line="39" pos:column="20"> <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="21">length<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <name pos:line="39" pos:column="30">branchlength<pos:position pos:line="39" pos:column="42"/></name></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt></block></then>
      <elseif pos:line="40" pos:column="7">else <if pos:line="40" pos:column="12">if <condition pos:line="40" pos:column="15">(<expr><name pos:line="40" pos:column="16">length<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">!=<pos:position pos:line="40" pos:column="25"/></operator> <name pos:line="40" pos:column="26">branchlength<pos:position pos:line="40" pos:column="38"/></name></expr>)<pos:position pos:line="40" pos:column="39"/></condition><then pos:line="40" pos:column="39"> <block type="pseudo"><return pos:line="40" pos:column="40">return <expr><operator pos:line="40" pos:column="47">-<pos:position pos:line="40" pos:column="48"/></operator><literal type="number" pos:line="40" pos:column="48">1<pos:position pos:line="40" pos:column="49"/></literal></expr>;<pos:position pos:line="40" pos:column="50"/></return></block></then></if></elseif></if>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">*<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">cc<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">!=<pos:position pos:line="41" pos:column="15"/></operator> <name pos:line="41" pos:column="16">OP_ALT<pos:position pos:line="41" pos:column="22"/></name></expr>)<pos:position pos:line="41" pos:column="23"/></condition><then pos:line="41" pos:column="23"> <block type="pseudo"><return pos:line="41" pos:column="24">return <expr><name pos:line="41" pos:column="31">length<pos:position pos:line="41" pos:column="37"/></name></expr>;<pos:position pos:line="41" pos:column="38"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="42" pos:column="5">cc<pos:position pos:line="42" pos:column="7"/></name> <operator pos:line="42" pos:column="8">+=<pos:position pos:line="42" pos:column="10"/></operator> <literal type="number" pos:line="42" pos:column="11">1<pos:position pos:line="42" pos:column="12"/></literal> <operator pos:line="42" pos:column="13">+<pos:position pos:line="42" pos:column="14"/></operator> <name pos:line="42" pos:column="15">LINK_SIZE<pos:position pos:line="42" pos:column="24"/></name></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">branchlength<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <literal type="number" pos:line="43" pos:column="20">0<pos:position pos:line="43" pos:column="21"/></literal></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>
    <break pos:line="44" pos:column="5">break;<pos:position pos:line="44" pos:column="11"/></break>

    <comment type="block" pos:line="46" pos:column="5">/* Skip over assertive subpatterns */</comment>

    <case pos:line="48" pos:column="5">case <expr><name pos:line="48" pos:column="10">OP_ASSERT<pos:position pos:line="48" pos:column="19"/></name></expr>:<pos:position pos:line="48" pos:column="20"/></case>
    <case pos:line="49" pos:column="5">case <expr><name pos:line="49" pos:column="10">OP_ASSERT_NOT<pos:position pos:line="49" pos:column="23"/></name></expr>:<pos:position pos:line="49" pos:column="24"/></case>
    <case pos:line="50" pos:column="5">case <expr><name pos:line="50" pos:column="10">OP_ASSERTBACK<pos:position pos:line="50" pos:column="23"/></name></expr>:<pos:position pos:line="50" pos:column="24"/></case>
    <case pos:line="51" pos:column="5">case <expr><name pos:line="51" pos:column="10">OP_ASSERTBACK_NOT<pos:position pos:line="51" pos:column="27"/></name></expr>:<pos:position pos:line="51" pos:column="28"/></case>
    <do pos:line="52" pos:column="5">do <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="8">cc<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">+=<pos:position pos:line="52" pos:column="13"/></operator> <call><name pos:line="52" pos:column="14">GET<pos:position pos:line="52" pos:column="17"/></name><argument_list pos:line="52" pos:column="17">(<argument><expr><name pos:line="52" pos:column="18">cc<pos:position pos:line="52" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="22">1<pos:position pos:line="52" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="25"/></expr_stmt></block> while <condition pos:line="52" pos:column="32">(<expr><operator pos:line="52" pos:column="33">*<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="34">cc<pos:position pos:line="52" pos:column="36"/></name> <operator pos:line="52" pos:column="37">==<pos:position pos:line="52" pos:column="39"/></operator> <name pos:line="52" pos:column="40">OP_ALT<pos:position pos:line="52" pos:column="46"/></name></expr>)<pos:position pos:line="52" pos:column="47"/></condition>;<pos:position pos:line="52" pos:column="48"/></do>
    <comment type="block" pos:line="53" pos:column="5">/* Fall through */</comment>

    <comment type="block" pos:line="55" pos:column="5">/* Skip over things that don't match chars */</comment>

    <case pos:line="57" pos:column="5">case <expr><name pos:line="57" pos:column="10">OP_REVERSE<pos:position pos:line="57" pos:column="20"/></name></expr>:<pos:position pos:line="57" pos:column="21"/></case>
    <case pos:line="58" pos:column="5">case <expr><name pos:line="58" pos:column="10">OP_BRANUMBER<pos:position pos:line="58" pos:column="22"/></name></expr>:<pos:position pos:line="58" pos:column="23"/></case>
    <case pos:line="59" pos:column="5">case <expr><name pos:line="59" pos:column="10">OP_CREF<pos:position pos:line="59" pos:column="17"/></name></expr>:<pos:position pos:line="59" pos:column="18"/></case>
    <case pos:line="60" pos:column="5">case <expr><name pos:line="60" pos:column="10">OP_OPT<pos:position pos:line="60" pos:column="16"/></name></expr>:<pos:position pos:line="60" pos:column="17"/></case>
    <case pos:line="61" pos:column="5">case <expr><name pos:line="61" pos:column="10">OP_CALLOUT<pos:position pos:line="61" pos:column="20"/></name></expr>:<pos:position pos:line="61" pos:column="21"/></case>
    <case pos:line="62" pos:column="5">case <expr><name pos:line="62" pos:column="10">OP_SOD<pos:position pos:line="62" pos:column="16"/></name></expr>:<pos:position pos:line="62" pos:column="17"/></case>
    <case pos:line="63" pos:column="5">case <expr><name pos:line="63" pos:column="10">OP_SOM<pos:position pos:line="63" pos:column="16"/></name></expr>:<pos:position pos:line="63" pos:column="17"/></case>
    <case pos:line="64" pos:column="5">case <expr><name pos:line="64" pos:column="10">OP_EOD<pos:position pos:line="64" pos:column="16"/></name></expr>:<pos:position pos:line="64" pos:column="17"/></case>
    <case pos:line="65" pos:column="5">case <expr><name pos:line="65" pos:column="10">OP_EODN<pos:position pos:line="65" pos:column="17"/></name></expr>:<pos:position pos:line="65" pos:column="18"/></case>
    <case pos:line="66" pos:column="5">case <expr><name pos:line="66" pos:column="10">OP_CIRC<pos:position pos:line="66" pos:column="17"/></name></expr>:<pos:position pos:line="66" pos:column="18"/></case>
    <case pos:line="67" pos:column="5">case <expr><name pos:line="67" pos:column="10">OP_DOLL<pos:position pos:line="67" pos:column="17"/></name></expr>:<pos:position pos:line="67" pos:column="18"/></case>
    <case pos:line="68" pos:column="5">case <expr><name pos:line="68" pos:column="10">OP_NOT_WORD_BOUNDARY<pos:position pos:line="68" pos:column="30"/></name></expr>:<pos:position pos:line="68" pos:column="31"/></case>
    <case pos:line="69" pos:column="5">case <expr><name pos:line="69" pos:column="10">OP_WORD_BOUNDARY<pos:position pos:line="69" pos:column="26"/></name></expr>:<pos:position pos:line="69" pos:column="27"/></case>
    <expr_stmt><expr><name pos:line="70" pos:column="5">cc<pos:position pos:line="70" pos:column="7"/></name> <operator pos:line="70" pos:column="8">+=<pos:position pos:line="70" pos:column="10"/></operator> <name><name pos:line="70" pos:column="11">OP_lengths<pos:position pos:line="70" pos:column="21"/></name><index pos:line="70" pos:column="21">[<expr><operator pos:line="70" pos:column="22">*<pos:position pos:line="70" pos:column="23"/></operator><name pos:line="70" pos:column="23">cc<pos:position pos:line="70" pos:column="25"/></name></expr>]<pos:position pos:line="70" pos:column="26"/></index></name></expr>;<pos:position pos:line="70" pos:column="27"/></expr_stmt>
    <break pos:line="71" pos:column="5">break;<pos:position pos:line="71" pos:column="11"/></break>

    <comment type="block" pos:line="73" pos:column="5">/* Handle literal characters */</comment>

    <case pos:line="75" pos:column="5">case <expr><name pos:line="75" pos:column="10">OP_CHAR<pos:position pos:line="75" pos:column="17"/></name></expr>:<pos:position pos:line="75" pos:column="18"/></case>
    <case pos:line="76" pos:column="5">case <expr><name pos:line="76" pos:column="10">OP_CHARNC<pos:position pos:line="76" pos:column="19"/></name></expr>:<pos:position pos:line="76" pos:column="20"/></case>
    <expr_stmt><expr><name pos:line="77" pos:column="5">branchlength<pos:position pos:line="77" pos:column="17"/></name><operator pos:line="77" pos:column="17">++<pos:position pos:line="77" pos:column="19"/></operator></expr>;<pos:position pos:line="77" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="78" pos:column="5">cc<pos:position pos:line="78" pos:column="7"/></name> <operator pos:line="78" pos:column="8">+=<pos:position pos:line="78" pos:column="10"/></operator> <literal type="number" pos:line="78" pos:column="11">2<pos:position pos:line="78" pos:column="12"/></literal></expr>;<pos:position pos:line="78" pos:column="13"/></expr_stmt>
<cpp:ifdef pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">ifdef<pos:position pos:line="79" pos:column="7"/></cpp:directive> <name pos:line="79" pos:column="8">SUPPORT_UTF8<pos:position pos:line="79" pos:column="20"/></name></cpp:ifdef>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><operator pos:line="80" pos:column="9">(<pos:position pos:line="80" pos:column="10"/></operator><name pos:line="80" pos:column="10">options<pos:position pos:line="80" pos:column="17"/></name> <operator pos:line="80" pos:column="18">&amp;<pos:position pos:line="80" pos:column="23"/></operator> <name pos:line="80" pos:column="20">PCRE_UTF8<pos:position pos:line="80" pos:column="29"/></name><operator pos:line="80" pos:column="29">)<pos:position pos:line="80" pos:column="30"/></operator> <operator pos:line="80" pos:column="31">!=<pos:position pos:line="80" pos:column="33"/></operator> <literal type="number" pos:line="80" pos:column="34">0<pos:position pos:line="80" pos:column="35"/></literal></expr>)<pos:position pos:line="80" pos:column="36"/></condition><then pos:line="80" pos:column="36">
      <block pos:line="81" pos:column="7">{
      <while pos:line="82" pos:column="7">while <condition pos:line="82" pos:column="13">(<expr><operator pos:line="82" pos:column="14">(<pos:position pos:line="82" pos:column="15"/></operator><operator pos:line="82" pos:column="15">*<pos:position pos:line="82" pos:column="16"/></operator><name pos:line="82" pos:column="16">cc<pos:position pos:line="82" pos:column="18"/></name> <operator pos:line="82" pos:column="19">&amp;<pos:position pos:line="82" pos:column="24"/></operator> <literal type="number" pos:line="82" pos:column="21">0xc0<pos:position pos:line="82" pos:column="25"/></literal><operator pos:line="82" pos:column="25">)<pos:position pos:line="82" pos:column="26"/></operator> <operator pos:line="82" pos:column="27">==<pos:position pos:line="82" pos:column="29"/></operator> <literal type="number" pos:line="82" pos:column="30">0x80<pos:position pos:line="82" pos:column="34"/></literal></expr>)<pos:position pos:line="82" pos:column="35"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="36">cc<pos:position pos:line="82" pos:column="38"/></name><operator pos:line="82" pos:column="38">++<pos:position pos:line="82" pos:column="40"/></operator></expr>;<pos:position pos:line="82" pos:column="41"/></expr_stmt></block></while>
      }<pos:position pos:line="83" pos:column="8"/></block></then></if>
<cpp:endif pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">endif<pos:position pos:line="84" pos:column="7"/></cpp:directive></cpp:endif>
    <break pos:line="85" pos:column="5">break;<pos:position pos:line="85" pos:column="11"/></break>

    <comment type="block" pos:line="87" pos:column="5">/* Handle exact repetitions. The count is already in characters, but we
    need to skip over a multibyte character in UTF8 mode.  */</comment>

    <case pos:line="90" pos:column="5">case <expr><name pos:line="90" pos:column="10">OP_EXACT<pos:position pos:line="90" pos:column="18"/></name></expr>:<pos:position pos:line="90" pos:column="19"/></case>
    <expr_stmt><expr><name pos:line="91" pos:column="5">branchlength<pos:position pos:line="91" pos:column="17"/></name> <operator pos:line="91" pos:column="18">+=<pos:position pos:line="91" pos:column="20"/></operator> <call><name pos:line="91" pos:column="21">GET2<pos:position pos:line="91" pos:column="25"/></name><argument_list pos:line="91" pos:column="25">(<argument><expr><name pos:line="91" pos:column="26">cc<pos:position pos:line="91" pos:column="28"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="91" pos:column="29">1<pos:position pos:line="91" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="92" pos:column="5">cc<pos:position pos:line="92" pos:column="7"/></name> <operator pos:line="92" pos:column="8">+=<pos:position pos:line="92" pos:column="10"/></operator> <literal type="number" pos:line="92" pos:column="11">4<pos:position pos:line="92" pos:column="12"/></literal></expr>;<pos:position pos:line="92" pos:column="13"/></expr_stmt>
<cpp:ifdef pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">ifdef<pos:position pos:line="93" pos:column="7"/></cpp:directive> <name pos:line="93" pos:column="8">SUPPORT_UTF8<pos:position pos:line="93" pos:column="20"/></name></cpp:ifdef>
    <if pos:line="94" pos:column="5">if <condition pos:line="94" pos:column="8">(<expr><operator pos:line="94" pos:column="9">(<pos:position pos:line="94" pos:column="10"/></operator><name pos:line="94" pos:column="10">options<pos:position pos:line="94" pos:column="17"/></name> <operator pos:line="94" pos:column="18">&amp;<pos:position pos:line="94" pos:column="23"/></operator> <name pos:line="94" pos:column="20">PCRE_UTF8<pos:position pos:line="94" pos:column="29"/></name><operator pos:line="94" pos:column="29">)<pos:position pos:line="94" pos:column="30"/></operator> <operator pos:line="94" pos:column="31">!=<pos:position pos:line="94" pos:column="33"/></operator> <literal type="number" pos:line="94" pos:column="34">0<pos:position pos:line="94" pos:column="35"/></literal></expr>)<pos:position pos:line="94" pos:column="36"/></condition><then pos:line="94" pos:column="36">
      <block pos:line="95" pos:column="7">{
      <while pos:line="96" pos:column="7">while<condition pos:line="96" pos:column="12">(<expr><operator pos:line="96" pos:column="13">(<pos:position pos:line="96" pos:column="14"/></operator><operator pos:line="96" pos:column="14">*<pos:position pos:line="96" pos:column="15"/></operator><name pos:line="96" pos:column="15">cc<pos:position pos:line="96" pos:column="17"/></name> <operator pos:line="96" pos:column="18">&amp;<pos:position pos:line="96" pos:column="23"/></operator> <literal type="number" pos:line="96" pos:column="20">0x80<pos:position pos:line="96" pos:column="24"/></literal><operator pos:line="96" pos:column="24">)<pos:position pos:line="96" pos:column="25"/></operator> <operator pos:line="96" pos:column="26">==<pos:position pos:line="96" pos:column="28"/></operator> <literal type="number" pos:line="96" pos:column="29">0x80<pos:position pos:line="96" pos:column="33"/></literal></expr>)<pos:position pos:line="96" pos:column="34"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="35">cc<pos:position pos:line="96" pos:column="37"/></name><operator pos:line="96" pos:column="37">++<pos:position pos:line="96" pos:column="39"/></operator></expr>;<pos:position pos:line="96" pos:column="40"/></expr_stmt></block></while>
      }<pos:position pos:line="97" pos:column="8"/></block></then></if>
<cpp:endif pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">endif<pos:position pos:line="98" pos:column="7"/></cpp:directive></cpp:endif>
    <break pos:line="99" pos:column="5">break;<pos:position pos:line="99" pos:column="11"/></break>

    <case pos:line="101" pos:column="5">case <expr><name pos:line="101" pos:column="10">OP_TYPEEXACT<pos:position pos:line="101" pos:column="22"/></name></expr>:<pos:position pos:line="101" pos:column="23"/></case>
    <expr_stmt><expr><name pos:line="102" pos:column="5">branchlength<pos:position pos:line="102" pos:column="17"/></name> <operator pos:line="102" pos:column="18">+=<pos:position pos:line="102" pos:column="20"/></operator> <call><name pos:line="102" pos:column="21">GET2<pos:position pos:line="102" pos:column="25"/></name><argument_list pos:line="102" pos:column="25">(<argument><expr><name pos:line="102" pos:column="26">cc<pos:position pos:line="102" pos:column="28"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="102" pos:column="29">1<pos:position pos:line="102" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="103" pos:column="5">cc<pos:position pos:line="103" pos:column="7"/></name> <operator pos:line="103" pos:column="8">+=<pos:position pos:line="103" pos:column="10"/></operator> <literal type="number" pos:line="103" pos:column="11">4<pos:position pos:line="103" pos:column="12"/></literal></expr>;<pos:position pos:line="103" pos:column="13"/></expr_stmt>
    <break pos:line="104" pos:column="5">break;<pos:position pos:line="104" pos:column="11"/></break>

    <comment type="block" pos:line="106" pos:column="5">/* Handle single-char matchers */</comment>

    <case pos:line="108" pos:column="5">case <expr><name pos:line="108" pos:column="10">OP_PROP<pos:position pos:line="108" pos:column="17"/></name></expr>:<pos:position pos:line="108" pos:column="18"/></case>
    <case pos:line="109" pos:column="5">case <expr><name pos:line="109" pos:column="10">OP_NOTPROP<pos:position pos:line="109" pos:column="20"/></name></expr>:<pos:position pos:line="109" pos:column="21"/></case>
    <expr_stmt><expr><name pos:line="110" pos:column="5">cc<pos:position pos:line="110" pos:column="7"/></name><operator pos:line="110" pos:column="7">++<pos:position pos:line="110" pos:column="9"/></operator></expr>;<pos:position pos:line="110" pos:column="10"/></expr_stmt>
    <comment type="block" pos:line="111" pos:column="5">/* Fall through */</comment>

    <case pos:line="113" pos:column="5">case <expr><name pos:line="113" pos:column="10">OP_NOT_DIGIT<pos:position pos:line="113" pos:column="22"/></name></expr>:<pos:position pos:line="113" pos:column="23"/></case>
    <case pos:line="114" pos:column="5">case <expr><name pos:line="114" pos:column="10">OP_DIGIT<pos:position pos:line="114" pos:column="18"/></name></expr>:<pos:position pos:line="114" pos:column="19"/></case>
    <case pos:line="115" pos:column="5">case <expr><name pos:line="115" pos:column="10">OP_NOT_WHITESPACE<pos:position pos:line="115" pos:column="27"/></name></expr>:<pos:position pos:line="115" pos:column="28"/></case>
    <case pos:line="116" pos:column="5">case <expr><name pos:line="116" pos:column="10">OP_WHITESPACE<pos:position pos:line="116" pos:column="23"/></name></expr>:<pos:position pos:line="116" pos:column="24"/></case>
    <case pos:line="117" pos:column="5">case <expr><name pos:line="117" pos:column="10">OP_NOT_WORDCHAR<pos:position pos:line="117" pos:column="25"/></name></expr>:<pos:position pos:line="117" pos:column="26"/></case>
    <case pos:line="118" pos:column="5">case <expr><name pos:line="118" pos:column="10">OP_WORDCHAR<pos:position pos:line="118" pos:column="21"/></name></expr>:<pos:position pos:line="118" pos:column="22"/></case>
    <case pos:line="119" pos:column="5">case <expr><name pos:line="119" pos:column="10">OP_ANY<pos:position pos:line="119" pos:column="16"/></name></expr>:<pos:position pos:line="119" pos:column="17"/></case>
    <expr_stmt><expr><name pos:line="120" pos:column="5">branchlength<pos:position pos:line="120" pos:column="17"/></name><operator pos:line="120" pos:column="17">++<pos:position pos:line="120" pos:column="19"/></operator></expr>;<pos:position pos:line="120" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="121" pos:column="5">cc<pos:position pos:line="121" pos:column="7"/></name><operator pos:line="121" pos:column="7">++<pos:position pos:line="121" pos:column="9"/></operator></expr>;<pos:position pos:line="121" pos:column="10"/></expr_stmt>
    <break pos:line="122" pos:column="5">break;<pos:position pos:line="122" pos:column="11"/></break>

    <comment type="block" pos:line="124" pos:column="5">/* The single-byte matcher isn't allowed */</comment>

    <case pos:line="126" pos:column="5">case <expr><name pos:line="126" pos:column="10">OP_ANYBYTE<pos:position pos:line="126" pos:column="20"/></name></expr>:<pos:position pos:line="126" pos:column="21"/></case>
    <return pos:line="127" pos:column="5">return <expr><operator pos:line="127" pos:column="12">-<pos:position pos:line="127" pos:column="13"/></operator><literal type="number" pos:line="127" pos:column="13">2<pos:position pos:line="127" pos:column="14"/></literal></expr>;<pos:position pos:line="127" pos:column="15"/></return>

    <comment type="block" pos:line="129" pos:column="5">/* Check a class for variable quantification */</comment>

<cpp:ifdef pos:line="131" pos:column="1">#<cpp:directive pos:line="131" pos:column="2">ifdef<pos:position pos:line="131" pos:column="7"/></cpp:directive> <name pos:line="131" pos:column="8">SUPPORT_UTF8<pos:position pos:line="131" pos:column="20"/></name></cpp:ifdef>
    <case pos:line="132" pos:column="5">case <expr><name pos:line="132" pos:column="10">OP_XCLASS<pos:position pos:line="132" pos:column="19"/></name></expr>:<pos:position pos:line="132" pos:column="20"/></case>
    <expr_stmt><expr><name pos:line="133" pos:column="5">cc<pos:position pos:line="133" pos:column="7"/></name> <operator pos:line="133" pos:column="8">+=<pos:position pos:line="133" pos:column="10"/></operator> <call><name pos:line="133" pos:column="11">GET<pos:position pos:line="133" pos:column="14"/></name><argument_list pos:line="133" pos:column="14">(<argument><expr><name pos:line="133" pos:column="15">cc<pos:position pos:line="133" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="133" pos:column="19">1<pos:position pos:line="133" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="21"/></argument_list></call> <operator pos:line="133" pos:column="22">-<pos:position pos:line="133" pos:column="23"/></operator> <literal type="number" pos:line="133" pos:column="24">33<pos:position pos:line="133" pos:column="26"/></literal></expr>;<pos:position pos:line="133" pos:column="27"/></expr_stmt>
    <comment type="block" pos:line="134" pos:column="5">/* Fall through */</comment>
<cpp:endif pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">endif<pos:position pos:line="135" pos:column="7"/></cpp:directive></cpp:endif>

    <case pos:line="137" pos:column="5">case <expr><name pos:line="137" pos:column="10">OP_CLASS<pos:position pos:line="137" pos:column="18"/></name></expr>:<pos:position pos:line="137" pos:column="19"/></case>
    <case pos:line="138" pos:column="5">case <expr><name pos:line="138" pos:column="10">OP_NCLASS<pos:position pos:line="138" pos:column="19"/></name></expr>:<pos:position pos:line="138" pos:column="20"/></case>
    <expr_stmt><expr><name pos:line="139" pos:column="5">cc<pos:position pos:line="139" pos:column="7"/></name> <operator pos:line="139" pos:column="8">+=<pos:position pos:line="139" pos:column="10"/></operator> <literal type="number" pos:line="139" pos:column="11">33<pos:position pos:line="139" pos:column="13"/></literal></expr>;<pos:position pos:line="139" pos:column="14"/></expr_stmt>

    <switch pos:line="141" pos:column="5">switch <condition pos:line="141" pos:column="12">(<expr><operator pos:line="141" pos:column="13">*<pos:position pos:line="141" pos:column="14"/></operator><name pos:line="141" pos:column="14">cc<pos:position pos:line="141" pos:column="16"/></name></expr>)<pos:position pos:line="141" pos:column="17"/></condition>
      <block pos:line="142" pos:column="7">{
      <case pos:line="143" pos:column="7">case <expr><name pos:line="143" pos:column="12">OP_CRSTAR<pos:position pos:line="143" pos:column="21"/></name></expr>:<pos:position pos:line="143" pos:column="22"/></case>
      <case pos:line="144" pos:column="7">case <expr><name pos:line="144" pos:column="12">OP_CRMINSTAR<pos:position pos:line="144" pos:column="24"/></name></expr>:<pos:position pos:line="144" pos:column="25"/></case>
      <case pos:line="145" pos:column="7">case <expr><name pos:line="145" pos:column="12">OP_CRQUERY<pos:position pos:line="145" pos:column="22"/></name></expr>:<pos:position pos:line="145" pos:column="23"/></case>
      <case pos:line="146" pos:column="7">case <expr><name pos:line="146" pos:column="12">OP_CRMINQUERY<pos:position pos:line="146" pos:column="25"/></name></expr>:<pos:position pos:line="146" pos:column="26"/></case>
      <return pos:line="147" pos:column="7">return <expr><operator pos:line="147" pos:column="14">-<pos:position pos:line="147" pos:column="15"/></operator><literal type="number" pos:line="147" pos:column="15">1<pos:position pos:line="147" pos:column="16"/></literal></expr>;<pos:position pos:line="147" pos:column="17"/></return>

      <case pos:line="149" pos:column="7">case <expr><name pos:line="149" pos:column="12">OP_CRRANGE<pos:position pos:line="149" pos:column="22"/></name></expr>:<pos:position pos:line="149" pos:column="23"/></case>
      <case pos:line="150" pos:column="7">case <expr><name pos:line="150" pos:column="12">OP_CRMINRANGE<pos:position pos:line="150" pos:column="25"/></name></expr>:<pos:position pos:line="150" pos:column="26"/></case>
      <if pos:line="151" pos:column="7">if <condition pos:line="151" pos:column="10">(<expr><call><name pos:line="151" pos:column="11">GET2<pos:position pos:line="151" pos:column="15"/></name><argument_list pos:line="151" pos:column="15">(<argument><expr><name pos:line="151" pos:column="16">cc<pos:position pos:line="151" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="151" pos:column="19">1<pos:position pos:line="151" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="21"/></argument_list></call> <operator pos:line="151" pos:column="22">!=<pos:position pos:line="151" pos:column="24"/></operator> <call><name pos:line="151" pos:column="25">GET2<pos:position pos:line="151" pos:column="29"/></name><argument_list pos:line="151" pos:column="29">(<argument><expr><name pos:line="151" pos:column="30">cc<pos:position pos:line="151" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="151" pos:column="33">3<pos:position pos:line="151" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="151" pos:column="36"/></condition><then pos:line="151" pos:column="36"> <block type="pseudo"><return pos:line="151" pos:column="37">return <expr><operator pos:line="151" pos:column="44">-<pos:position pos:line="151" pos:column="45"/></operator><literal type="number" pos:line="151" pos:column="45">1<pos:position pos:line="151" pos:column="46"/></literal></expr>;<pos:position pos:line="151" pos:column="47"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="152" pos:column="7">branchlength<pos:position pos:line="152" pos:column="19"/></name> <operator pos:line="152" pos:column="20">+=<pos:position pos:line="152" pos:column="22"/></operator> <call><name pos:line="152" pos:column="23">GET2<pos:position pos:line="152" pos:column="27"/></name><argument_list pos:line="152" pos:column="27">(<argument><expr><name pos:line="152" pos:column="28">cc<pos:position pos:line="152" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="152" pos:column="31">1<pos:position pos:line="152" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name pos:line="153" pos:column="7">cc<pos:position pos:line="153" pos:column="9"/></name> <operator pos:line="153" pos:column="10">+=<pos:position pos:line="153" pos:column="12"/></operator> <literal type="number" pos:line="153" pos:column="13">5<pos:position pos:line="153" pos:column="14"/></literal></expr>;<pos:position pos:line="153" pos:column="15"/></expr_stmt>
      <break pos:line="154" pos:column="7">break;<pos:position pos:line="154" pos:column="13"/></break>

      <default pos:line="156" pos:column="7">default:<pos:position pos:line="156" pos:column="15"/></default>
      <expr_stmt><expr><name pos:line="157" pos:column="7">branchlength<pos:position pos:line="157" pos:column="19"/></name><operator pos:line="157" pos:column="19">++<pos:position pos:line="157" pos:column="21"/></operator></expr>;<pos:position pos:line="157" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="158" pos:column="8"/></block></switch>
    <break pos:line="159" pos:column="5">break;<pos:position pos:line="159" pos:column="11"/></break>

    <comment type="block" pos:line="161" pos:column="5">/* Anything else is variable length */</comment>

    <default pos:line="163" pos:column="5">default:<pos:position pos:line="163" pos:column="13"/></default>
    <return pos:line="164" pos:column="5">return <expr><operator pos:line="164" pos:column="12">-<pos:position pos:line="164" pos:column="13"/></operator><literal type="number" pos:line="164" pos:column="13">1<pos:position pos:line="164" pos:column="14"/></literal></expr>;<pos:position pos:line="164" pos:column="15"/></return>
    }<pos:position pos:line="165" pos:column="6"/></block></switch>
  }<pos:position pos:line="166" pos:column="4"/></block></for>
<comment type="block" pos:line="167" pos:column="1">/* Control never gets here */</comment>
}<pos:position pos:line="168" pos:column="2"/></block></function></unit>

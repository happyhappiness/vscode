<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_973_httpd-2.0.63.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">cmd_rewriterule_setflag<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">apr_pool_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">p<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="2" pos:column="44">rewriterule_entry<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">cfg<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="3" pos:column="44">char<pos:position pos:line="3" pos:column="48"/></name> <modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier></type><name pos:line="3" pos:column="50">key<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="55">char<pos:position pos:line="3" pos:column="59"/></name> <modifier pos:line="3" pos:column="60">*<pos:position pos:line="3" pos:column="61"/></modifier></type><name pos:line="3" pos:column="61">val<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="65"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">status<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(   <expr><call><name pos:line="8" pos:column="12">strcasecmp<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">key<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="28">"redirect"<pos:position pos:line="8" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call> <operator pos:line="8" pos:column="40">==<pos:position pos:line="8" pos:column="42"/></operator> <literal type="number" pos:line="8" pos:column="43">0<pos:position pos:line="8" pos:column="44"/></literal>
        <operator pos:line="9" pos:column="9">||<pos:position pos:line="9" pos:column="11"/></operator> <call><name pos:line="9" pos:column="12">strcasecmp<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">key<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="28">"R"<pos:position pos:line="9" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></call> <operator pos:line="9" pos:column="33">==<pos:position pos:line="9" pos:column="35"/></operator> <literal type="number" pos:line="9" pos:column="36">0<pos:position pos:line="9" pos:column="37"/></literal></expr>       )<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45"> <block pos:line="9" pos:column="46">{
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">cfg<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">flags<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">|=<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">RULEFLAG_FORCEREDIRECT<pos:position pos:line="10" pos:column="45"/></name></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">strlen<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">val<pos:position pos:line="11" pos:column="23"/></name></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call> <operator pos:line="11" pos:column="25">&gt;<pos:position pos:line="11" pos:column="29"/></operator> <literal type="number" pos:line="11" pos:column="27">0<pos:position pos:line="11" pos:column="28"/></literal></expr>)<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29"> <block pos:line="11" pos:column="30">{
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><call><name pos:line="12" pos:column="17">strcasecmp<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">val<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="33">"permanent"<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call> <operator pos:line="12" pos:column="46">==<pos:position pos:line="12" pos:column="48"/></operator> <literal type="number" pos:line="12" pos:column="49">0<pos:position pos:line="12" pos:column="50"/></literal></expr>)<pos:position pos:line="12" pos:column="51"/></condition><then pos:line="12" pos:column="51"> <block pos:line="12" pos:column="52">{
                <expr_stmt><expr><name pos:line="13" pos:column="17">status<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <name pos:line="13" pos:column="26">HTTP_MOVED_PERMANENTLY<pos:position pos:line="13" pos:column="48"/></name></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="14" pos:column="14"/></block></then>
            <elseif pos:line="15" pos:column="13">else <if pos:line="15" pos:column="18">if <condition pos:line="15" pos:column="21">(<expr><call><name pos:line="15" pos:column="22">strcasecmp<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">val<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="38">"temp"<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call> <operator pos:line="15" pos:column="46">==<pos:position pos:line="15" pos:column="48"/></operator> <literal type="number" pos:line="15" pos:column="49">0<pos:position pos:line="15" pos:column="50"/></literal></expr>)<pos:position pos:line="15" pos:column="51"/></condition><then pos:line="15" pos:column="51"> <block pos:line="15" pos:column="52">{
                <expr_stmt><expr><name pos:line="16" pos:column="17">status<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">HTTP_MOVED_TEMPORARILY<pos:position pos:line="16" pos:column="48"/></name></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="17" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="18" pos:column="13">else <if pos:line="18" pos:column="18">if <condition pos:line="18" pos:column="21">(<expr><call><name pos:line="18" pos:column="22">strcasecmp<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">val<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="38">"seeother"<pos:position pos:line="18" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call> <operator pos:line="18" pos:column="50">==<pos:position pos:line="18" pos:column="52"/></operator> <literal type="number" pos:line="18" pos:column="53">0<pos:position pos:line="18" pos:column="54"/></literal></expr>)<pos:position pos:line="18" pos:column="55"/></condition><then pos:line="18" pos:column="55"> <block pos:line="18" pos:column="56">{
                <expr_stmt><expr><name pos:line="19" pos:column="17">status<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">HTTP_SEE_OTHER<pos:position pos:line="19" pos:column="40"/></name></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="20" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="21" pos:column="13">else <if pos:line="21" pos:column="18">if <condition pos:line="21" pos:column="21">(<expr><call><name pos:line="21" pos:column="22">apr_isdigit<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><operator pos:line="21" pos:column="34">*<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="35">val<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="40"/></condition><then pos:line="21" pos:column="40"> <block pos:line="21" pos:column="41">{
                <expr_stmt><expr><name pos:line="22" pos:column="17">status<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <call><name pos:line="22" pos:column="26">atoi<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">val<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="23" pos:column="14"/></block></then></if></elseif></if>
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><operator pos:line="24" pos:column="17">!<pos:position pos:line="24" pos:column="18"/></operator><call><name pos:line="24" pos:column="18">ap_is_HTTP_REDIRECT<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">status<pos:position pos:line="24" pos:column="44"/></name></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="46"/></condition><then pos:line="24" pos:column="46"> <block pos:line="24" pos:column="47">{
                <return pos:line="25" pos:column="17">return <expr><literal type="string" pos:line="25" pos:column="24">"RewriteRule: invalid HTTP response code "<pos:position pos:line="25" pos:column="66"/></literal>
                       <literal type="string" pos:line="26" pos:column="24">"for flag 'R'"<pos:position pos:line="26" pos:column="38"/></literal></expr>;<pos:position pos:line="26" pos:column="39"/></return>
            }<pos:position pos:line="27" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">cfg<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">forced_responsecode<pos:position pos:line="28" pos:column="37"/></name></name> <operator pos:line="28" pos:column="38">=<pos:position pos:line="28" pos:column="39"/></operator> <name pos:line="28" pos:column="40">status<pos:position pos:line="28" pos:column="46"/></name></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(   <expr><call><name pos:line="31" pos:column="17">strcasecmp<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">key<pos:position pos:line="31" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="33">"noescape"<pos:position pos:line="31" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call> <operator pos:line="31" pos:column="45">==<pos:position pos:line="31" pos:column="47"/></operator> <literal type="number" pos:line="31" pos:column="48">0<pos:position pos:line="31" pos:column="49"/></literal>
        <operator pos:line="32" pos:column="9">||<pos:position pos:line="32" pos:column="11"/></operator> <call><name pos:line="32" pos:column="12">strcasecmp<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">key<pos:position pos:line="32" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="28">"NE"<pos:position pos:line="32" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="33"/></argument_list></call> <operator pos:line="32" pos:column="34">==<pos:position pos:line="32" pos:column="36"/></operator> <literal type="number" pos:line="32" pos:column="37">0<pos:position pos:line="32" pos:column="38"/></literal></expr>       )<pos:position pos:line="32" pos:column="46"/></condition><then pos:line="32" pos:column="46"> <block pos:line="32" pos:column="47">{
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">cfg<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">flags<pos:position pos:line="33" pos:column="19"/></name></name> <operator pos:line="33" pos:column="20">|=<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">RULEFLAG_NOESCAPE<pos:position pos:line="33" pos:column="40"/></name></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="35" pos:column="5">else <if pos:line="35" pos:column="10">if <condition pos:line="35" pos:column="13">(   <expr><call><name pos:line="35" pos:column="17">strcasecmp<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">key<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="33">"last"<pos:position pos:line="35" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="40"/></argument_list></call> <operator pos:line="35" pos:column="41">==<pos:position pos:line="35" pos:column="43"/></operator> <literal type="number" pos:line="35" pos:column="44">0<pos:position pos:line="35" pos:column="45"/></literal>
             <operator pos:line="36" pos:column="14">||<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">strcasecmp<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><name pos:line="36" pos:column="28">key<pos:position pos:line="36" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="33">"L"<pos:position pos:line="36" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call> <operator pos:line="36" pos:column="38">==<pos:position pos:line="36" pos:column="40"/></operator> <literal type="number" pos:line="36" pos:column="41">0<pos:position pos:line="36" pos:column="42"/></literal></expr>   )<pos:position pos:line="36" pos:column="46"/></condition><then pos:line="36" pos:column="46"> <block pos:line="36" pos:column="47">{
        <expr_stmt><expr><name><name pos:line="37" pos:column="9">cfg<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">flags<pos:position pos:line="37" pos:column="19"/></name></name> <operator pos:line="37" pos:column="20">|=<pos:position pos:line="37" pos:column="22"/></operator> <name pos:line="37" pos:column="23">RULEFLAG_LASTRULE<pos:position pos:line="37" pos:column="40"/></name></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(   <expr><call><name pos:line="39" pos:column="17">strcasecmp<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">key<pos:position pos:line="39" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="33">"next"<pos:position pos:line="39" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></call> <operator pos:line="39" pos:column="41">==<pos:position pos:line="39" pos:column="43"/></operator> <literal type="number" pos:line="39" pos:column="44">0<pos:position pos:line="39" pos:column="45"/></literal>
             <operator pos:line="40" pos:column="14">||<pos:position pos:line="40" pos:column="16"/></operator> <call><name pos:line="40" pos:column="17">strcasecmp<pos:position pos:line="40" pos:column="27"/></name><argument_list pos:line="40" pos:column="27">(<argument><expr><name pos:line="40" pos:column="28">key<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="33">"N"<pos:position pos:line="40" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="37"/></argument_list></call> <operator pos:line="40" pos:column="38">==<pos:position pos:line="40" pos:column="40"/></operator> <literal type="number" pos:line="40" pos:column="41">0<pos:position pos:line="40" pos:column="42"/></literal></expr>   )<pos:position pos:line="40" pos:column="46"/></condition><then pos:line="40" pos:column="46"> <block pos:line="40" pos:column="47">{
        <expr_stmt><expr><name><name pos:line="41" pos:column="9">cfg<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">-&gt;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="14">flags<pos:position pos:line="41" pos:column="19"/></name></name> <operator pos:line="41" pos:column="20">|=<pos:position pos:line="41" pos:column="22"/></operator> <name pos:line="41" pos:column="23">RULEFLAG_NEWROUND<pos:position pos:line="41" pos:column="40"/></name></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="43" pos:column="5">else <if pos:line="43" pos:column="10">if <condition pos:line="43" pos:column="13">(   <expr><call><name pos:line="43" pos:column="17">strcasecmp<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><name pos:line="43" pos:column="28">key<pos:position pos:line="43" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="33">"chain"<pos:position pos:line="43" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call> <operator pos:line="43" pos:column="42">==<pos:position pos:line="43" pos:column="44"/></operator> <literal type="number" pos:line="43" pos:column="45">0<pos:position pos:line="43" pos:column="46"/></literal>
             <operator pos:line="44" pos:column="14">||<pos:position pos:line="44" pos:column="16"/></operator> <call><name pos:line="44" pos:column="17">strcasecmp<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><name pos:line="44" pos:column="28">key<pos:position pos:line="44" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="33">"C"<pos:position pos:line="44" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="37"/></argument_list></call> <operator pos:line="44" pos:column="38">==<pos:position pos:line="44" pos:column="40"/></operator> <literal type="number" pos:line="44" pos:column="41">0<pos:position pos:line="44" pos:column="42"/></literal></expr>    )<pos:position pos:line="44" pos:column="47"/></condition><then pos:line="44" pos:column="47"> <block pos:line="44" pos:column="48">{
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">cfg<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">-&gt;<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="14">flags<pos:position pos:line="45" pos:column="19"/></name></name> <operator pos:line="45" pos:column="20">|=<pos:position pos:line="45" pos:column="22"/></operator> <name pos:line="45" pos:column="23">RULEFLAG_CHAIN<pos:position pos:line="45" pos:column="37"/></name></expr>;<pos:position pos:line="45" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="47" pos:column="5">else <if pos:line="47" pos:column="10">if <condition pos:line="47" pos:column="13">(   <expr><call><name pos:line="47" pos:column="17">strcasecmp<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">key<pos:position pos:line="47" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="33">"type"<pos:position pos:line="47" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call> <operator pos:line="47" pos:column="41">==<pos:position pos:line="47" pos:column="43"/></operator> <literal type="number" pos:line="47" pos:column="44">0<pos:position pos:line="47" pos:column="45"/></literal>
             <operator pos:line="48" pos:column="14">||<pos:position pos:line="48" pos:column="16"/></operator> <call><name pos:line="48" pos:column="17">strcasecmp<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">(<argument><expr><name pos:line="48" pos:column="28">key<pos:position pos:line="48" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="33">"T"<pos:position pos:line="48" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call> <operator pos:line="48" pos:column="38">==<pos:position pos:line="48" pos:column="40"/></operator> <literal type="number" pos:line="48" pos:column="41">0<pos:position pos:line="48" pos:column="42"/></literal></expr>   )<pos:position pos:line="48" pos:column="46"/></condition><then pos:line="48" pos:column="46"> <block pos:line="48" pos:column="47">{
        <expr_stmt><expr><name><name pos:line="49" pos:column="9">cfg<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">-&gt;<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="14">forced_mimetype<pos:position pos:line="49" pos:column="29"/></name></name> <operator pos:line="49" pos:column="30">=<pos:position pos:line="49" pos:column="31"/></operator> <call><name pos:line="49" pos:column="32">apr_pstrdup<pos:position pos:line="49" pos:column="43"/></name><argument_list pos:line="49" pos:column="43">(<argument><expr><name pos:line="49" pos:column="44">p<pos:position pos:line="49" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="47">val<pos:position pos:line="49" pos:column="50"/></name></expr></argument>)<pos:position pos:line="49" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">ap_str_tolower<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><name><name pos:line="50" pos:column="24">cfg<pos:position pos:line="50" pos:column="27"/></name><operator pos:line="50" pos:column="27">-&gt;<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="29">forced_mimetype<pos:position pos:line="50" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="52" pos:column="5">else <if pos:line="52" pos:column="10">if <condition pos:line="52" pos:column="13">(   <expr><call><name pos:line="52" pos:column="17">strcasecmp<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name pos:line="52" pos:column="28">key<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="33">"env"<pos:position pos:line="52" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="39"/></argument_list></call> <operator pos:line="52" pos:column="40">==<pos:position pos:line="52" pos:column="42"/></operator> <literal type="number" pos:line="52" pos:column="43">0<pos:position pos:line="52" pos:column="44"/></literal>
             <operator pos:line="53" pos:column="14">||<pos:position pos:line="53" pos:column="16"/></operator> <call><name pos:line="53" pos:column="17">strcasecmp<pos:position pos:line="53" pos:column="27"/></name><argument_list pos:line="53" pos:column="27">(<argument><expr><name pos:line="53" pos:column="28">key<pos:position pos:line="53" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="33">"E"<pos:position pos:line="53" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="37"/></argument_list></call> <operator pos:line="53" pos:column="38">==<pos:position pos:line="53" pos:column="40"/></operator> <literal type="number" pos:line="53" pos:column="41">0<pos:position pos:line="53" pos:column="42"/></literal></expr>   )<pos:position pos:line="53" pos:column="46"/></condition><then pos:line="53" pos:column="46"> <block pos:line="53" pos:column="47">{
        <for pos:line="54" pos:column="9">for <control pos:line="54" pos:column="13">(<init><expr><name pos:line="54" pos:column="14">i<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <literal type="number" pos:line="54" pos:column="18">0<pos:position pos:line="54" pos:column="19"/></literal></expr>;<pos:position pos:line="54" pos:column="20"/></init> <condition><expr><operator pos:line="54" pos:column="21">(<pos:position pos:line="54" pos:column="22"/></operator><name><name pos:line="54" pos:column="22">cfg<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">-&gt;<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="27">env<pos:position pos:line="54" pos:column="30"/></name><index pos:line="54" pos:column="30">[<expr><name pos:line="54" pos:column="31">i<pos:position pos:line="54" pos:column="32"/></name></expr>]<pos:position pos:line="54" pos:column="33"/></index></name> <operator pos:line="54" pos:column="34">!=<pos:position pos:line="54" pos:column="36"/></operator> <name pos:line="54" pos:column="37">NULL<pos:position pos:line="54" pos:column="41"/></name><operator pos:line="54" pos:column="41">)<pos:position pos:line="54" pos:column="42"/></operator> <operator pos:line="54" pos:column="43">&amp;&amp;<pos:position pos:line="54" pos:column="53"/></operator> <operator pos:line="54" pos:column="46">(<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="47">i<pos:position pos:line="54" pos:column="48"/></name> <operator pos:line="54" pos:column="49">&lt;<pos:position pos:line="54" pos:column="53"/></operator> <name pos:line="54" pos:column="51">MAX_ENV_FLAGS<pos:position pos:line="54" pos:column="64"/></name><operator pos:line="54" pos:column="64">)<pos:position pos:line="54" pos:column="65"/></operator></expr>;<pos:position pos:line="54" pos:column="66"/></condition> <incr><expr><name pos:line="54" pos:column="67">i<pos:position pos:line="54" pos:column="68"/></name><operator pos:line="54" pos:column="68">++<pos:position pos:line="54" pos:column="70"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="71"/></control>
            <block type="pseudo"><empty_stmt pos:line="55" pos:column="13">;<pos:position pos:line="55" pos:column="14"/></empty_stmt></block></for>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">i<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">&lt;<pos:position pos:line="56" pos:column="19"/></operator> <name pos:line="56" pos:column="17">MAX_ENV_FLAGS<pos:position pos:line="56" pos:column="30"/></name></expr>)<pos:position pos:line="56" pos:column="31"/></condition><then pos:line="56" pos:column="31"> <block pos:line="56" pos:column="32">{
            <expr_stmt><expr><name><name pos:line="57" pos:column="13">cfg<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">-&gt;<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="18">env<pos:position pos:line="57" pos:column="21"/></name><index pos:line="57" pos:column="21">[<expr><name pos:line="57" pos:column="22">i<pos:position pos:line="57" pos:column="23"/></name></expr>]<pos:position pos:line="57" pos:column="24"/></index></name> <operator pos:line="57" pos:column="25">=<pos:position pos:line="57" pos:column="26"/></operator> <call><name pos:line="57" pos:column="27">apr_pstrdup<pos:position pos:line="57" pos:column="38"/></name><argument_list pos:line="57" pos:column="38">(<argument><expr><name pos:line="57" pos:column="39">p<pos:position pos:line="57" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="42">val<pos:position pos:line="57" pos:column="45"/></name></expr></argument>)<pos:position pos:line="57" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="58" pos:column="13">cfg<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">-&gt;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="18">env<pos:position pos:line="58" pos:column="21"/></name><index pos:line="58" pos:column="21">[<expr><name pos:line="58" pos:column="22">i<pos:position pos:line="58" pos:column="23"/></name><operator pos:line="58" pos:column="23">+<pos:position pos:line="58" pos:column="24"/></operator><literal type="number" pos:line="58" pos:column="24">1<pos:position pos:line="58" pos:column="25"/></literal></expr>]<pos:position pos:line="58" pos:column="26"/></index></name> <operator pos:line="58" pos:column="27">=<pos:position pos:line="58" pos:column="28"/></operator> <name pos:line="58" pos:column="29">NULL<pos:position pos:line="58" pos:column="33"/></name></expr>;<pos:position pos:line="58" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></then>
        <else pos:line="60" pos:column="9">else <block pos:line="60" pos:column="14">{
            <return pos:line="61" pos:column="13">return <expr><literal type="string" pos:line="61" pos:column="20">"RewriteRule: too many environment flags 'E'"<pos:position pos:line="61" pos:column="65"/></literal></expr>;<pos:position pos:line="61" pos:column="66"/></return>
        }<pos:position pos:line="62" pos:column="10"/></block></else></if>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="64" pos:column="5">else  <if pos:line="64" pos:column="11">if <condition pos:line="64" pos:column="14">( <expr><call><name pos:line="64" pos:column="16">strcasecmp<pos:position pos:line="64" pos:column="26"/></name><argument_list pos:line="64" pos:column="26">(<argument><expr><name pos:line="64" pos:column="27">key<pos:position pos:line="64" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="32">"cookie"<pos:position pos:line="64" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="41"/></argument_list></call> <operator pos:line="64" pos:column="42">==<pos:position pos:line="64" pos:column="44"/></operator> <literal type="number" pos:line="64" pos:column="45">0<pos:position pos:line="64" pos:column="46"/></literal> <operator pos:line="64" pos:column="47">||<pos:position pos:line="64" pos:column="49"/></operator> <call><name pos:line="64" pos:column="50">strcasecmp<pos:position pos:line="64" pos:column="60"/></name><argument_list pos:line="64" pos:column="60">(<argument><expr><name pos:line="64" pos:column="61">key<pos:position pos:line="64" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="66">"CO"<pos:position pos:line="64" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="71"/></argument_list></call> <operator pos:line="64" pos:column="72">==<pos:position pos:line="64" pos:column="74"/></operator> <literal type="number" pos:line="64" pos:column="75">0<pos:position pos:line="64" pos:column="76"/></literal></expr>)<pos:position pos:line="64" pos:column="77"/></condition><then pos:line="64" pos:column="77"> <block pos:line="64" pos:column="78">{
        <for pos:line="65" pos:column="9">for <control pos:line="65" pos:column="13">(<init><expr><name pos:line="65" pos:column="14">i<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">=<pos:position pos:line="65" pos:column="17"/></operator> <literal type="number" pos:line="65" pos:column="18">0<pos:position pos:line="65" pos:column="19"/></literal></expr>;<pos:position pos:line="65" pos:column="20"/></init> <condition><expr><operator pos:line="65" pos:column="21">(<pos:position pos:line="65" pos:column="22"/></operator><name><name pos:line="65" pos:column="22">cfg<pos:position pos:line="65" pos:column="25"/></name><operator pos:line="65" pos:column="25">-&gt;<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="27">cookie<pos:position pos:line="65" pos:column="33"/></name><index pos:line="65" pos:column="33">[<expr><name pos:line="65" pos:column="34">i<pos:position pos:line="65" pos:column="35"/></name></expr>]<pos:position pos:line="65" pos:column="36"/></index></name> <operator pos:line="65" pos:column="37">!=<pos:position pos:line="65" pos:column="39"/></operator> <name pos:line="65" pos:column="40">NULL<pos:position pos:line="65" pos:column="44"/></name><operator pos:line="65" pos:column="44">)<pos:position pos:line="65" pos:column="45"/></operator> <operator pos:line="65" pos:column="46">&amp;&amp;<pos:position pos:line="65" pos:column="56"/></operator> <operator pos:line="65" pos:column="49">(<pos:position pos:line="65" pos:column="50"/></operator><name pos:line="65" pos:column="50">i<pos:position pos:line="65" pos:column="51"/></name> <operator pos:line="65" pos:column="52">&lt;<pos:position pos:line="65" pos:column="56"/></operator> <name pos:line="65" pos:column="54">MAX_COOKIE_FLAGS<pos:position pos:line="65" pos:column="70"/></name><operator pos:line="65" pos:column="70">)<pos:position pos:line="65" pos:column="71"/></operator></expr>;<pos:position pos:line="65" pos:column="72"/></condition> <incr><expr><name pos:line="65" pos:column="73">i<pos:position pos:line="65" pos:column="74"/></name><operator pos:line="65" pos:column="74">++<pos:position pos:line="65" pos:column="76"/></operator></expr></incr>)<pos:position pos:line="65" pos:column="77"/></control>
            <block type="pseudo"><empty_stmt pos:line="66" pos:column="13">;<pos:position pos:line="66" pos:column="14"/></empty_stmt></block></for>
        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">i<pos:position pos:line="67" pos:column="14"/></name> <operator pos:line="67" pos:column="15">&lt;<pos:position pos:line="67" pos:column="19"/></operator> <name pos:line="67" pos:column="17">MAX_COOKIE_FLAGS<pos:position pos:line="67" pos:column="33"/></name></expr>)<pos:position pos:line="67" pos:column="34"/></condition><then pos:line="67" pos:column="34"> <block pos:line="67" pos:column="35">{
            <expr_stmt><expr><name><name pos:line="68" pos:column="13">cfg<pos:position pos:line="68" pos:column="16"/></name><operator pos:line="68" pos:column="16">-&gt;<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="18">cookie<pos:position pos:line="68" pos:column="24"/></name><index pos:line="68" pos:column="24">[<expr><name pos:line="68" pos:column="25">i<pos:position pos:line="68" pos:column="26"/></name></expr>]<pos:position pos:line="68" pos:column="27"/></index></name> <operator pos:line="68" pos:column="28">=<pos:position pos:line="68" pos:column="29"/></operator> <call><name pos:line="68" pos:column="30">apr_pstrdup<pos:position pos:line="68" pos:column="41"/></name><argument_list pos:line="68" pos:column="41">(<argument><expr><name pos:line="68" pos:column="42">p<pos:position pos:line="68" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="45">val<pos:position pos:line="68" pos:column="48"/></name></expr></argument>)<pos:position pos:line="68" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="69" pos:column="13">cfg<pos:position pos:line="69" pos:column="16"/></name><operator pos:line="69" pos:column="16">-&gt;<pos:position pos:line="69" pos:column="21"/></operator><name pos:line="69" pos:column="18">cookie<pos:position pos:line="69" pos:column="24"/></name><index pos:line="69" pos:column="24">[<expr><name pos:line="69" pos:column="25">i<pos:position pos:line="69" pos:column="26"/></name><operator pos:line="69" pos:column="26">+<pos:position pos:line="69" pos:column="27"/></operator><literal type="number" pos:line="69" pos:column="27">1<pos:position pos:line="69" pos:column="28"/></literal></expr>]<pos:position pos:line="69" pos:column="29"/></index></name> <operator pos:line="69" pos:column="30">=<pos:position pos:line="69" pos:column="31"/></operator> <name pos:line="69" pos:column="32">NULL<pos:position pos:line="69" pos:column="36"/></name></expr>;<pos:position pos:line="69" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="70" pos:column="10"/></block></then>
        <else pos:line="71" pos:column="9">else <block pos:line="71" pos:column="14">{
            <return pos:line="72" pos:column="13">return <expr><literal type="string" pos:line="72" pos:column="20">"RewriteRule: too many cookie flags 'CO'"<pos:position pos:line="72" pos:column="61"/></literal></expr>;<pos:position pos:line="72" pos:column="62"/></return>
        }<pos:position pos:line="73" pos:column="10"/></block></else></if>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="75" pos:column="5">else <if pos:line="75" pos:column="10">if <condition pos:line="75" pos:column="13">(   <expr><call><name pos:line="75" pos:column="17">strcasecmp<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><name pos:line="75" pos:column="28">key<pos:position pos:line="75" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="33">"nosubreq"<pos:position pos:line="75" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="44"/></argument_list></call> <operator pos:line="75" pos:column="45">==<pos:position pos:line="75" pos:column="47"/></operator> <literal type="number" pos:line="75" pos:column="48">0<pos:position pos:line="75" pos:column="49"/></literal>
             <operator pos:line="76" pos:column="14">||<pos:position pos:line="76" pos:column="16"/></operator> <call><name pos:line="76" pos:column="17">strcasecmp<pos:position pos:line="76" pos:column="27"/></name><argument_list pos:line="76" pos:column="27">(<argument><expr><name pos:line="76" pos:column="28">key<pos:position pos:line="76" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="33">"NS"<pos:position pos:line="76" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="38"/></argument_list></call> <operator pos:line="76" pos:column="39">==<pos:position pos:line="76" pos:column="41"/></operator> <literal type="number" pos:line="76" pos:column="42">0<pos:position pos:line="76" pos:column="43"/></literal></expr>      )<pos:position pos:line="76" pos:column="50"/></condition><then pos:line="76" pos:column="50"> <block pos:line="76" pos:column="51">{
        <expr_stmt><expr><name><name pos:line="77" pos:column="9">cfg<pos:position pos:line="77" pos:column="12"/></name><operator pos:line="77" pos:column="12">-&gt;<pos:position pos:line="77" pos:column="17"/></operator><name pos:line="77" pos:column="14">flags<pos:position pos:line="77" pos:column="19"/></name></name> <operator pos:line="77" pos:column="20">|=<pos:position pos:line="77" pos:column="22"/></operator> <name pos:line="77" pos:column="23">RULEFLAG_IGNOREONSUBREQ<pos:position pos:line="77" pos:column="46"/></name></expr>;<pos:position pos:line="77" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="79" pos:column="5">else <if pos:line="79" pos:column="10">if <condition pos:line="79" pos:column="13">(   <expr><call><name pos:line="79" pos:column="17">strcasecmp<pos:position pos:line="79" pos:column="27"/></name><argument_list pos:line="79" pos:column="27">(<argument><expr><name pos:line="79" pos:column="28">key<pos:position pos:line="79" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="33">"proxy"<pos:position pos:line="79" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="41"/></argument_list></call> <operator pos:line="79" pos:column="42">==<pos:position pos:line="79" pos:column="44"/></operator> <literal type="number" pos:line="79" pos:column="45">0<pos:position pos:line="79" pos:column="46"/></literal>
             <operator pos:line="80" pos:column="14">||<pos:position pos:line="80" pos:column="16"/></operator> <call><name pos:line="80" pos:column="17">strcasecmp<pos:position pos:line="80" pos:column="27"/></name><argument_list pos:line="80" pos:column="27">(<argument><expr><name pos:line="80" pos:column="28">key<pos:position pos:line="80" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="33">"P"<pos:position pos:line="80" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="37"/></argument_list></call> <operator pos:line="80" pos:column="38">==<pos:position pos:line="80" pos:column="40"/></operator> <literal type="number" pos:line="80" pos:column="41">0<pos:position pos:line="80" pos:column="42"/></literal></expr>      )<pos:position pos:line="80" pos:column="49"/></condition><then pos:line="80" pos:column="49"> <block pos:line="80" pos:column="50">{
        <expr_stmt><expr><name><name pos:line="81" pos:column="9">cfg<pos:position pos:line="81" pos:column="12"/></name><operator pos:line="81" pos:column="12">-&gt;<pos:position pos:line="81" pos:column="17"/></operator><name pos:line="81" pos:column="14">flags<pos:position pos:line="81" pos:column="19"/></name></name> <operator pos:line="81" pos:column="20">|=<pos:position pos:line="81" pos:column="22"/></operator> <name pos:line="81" pos:column="23">RULEFLAG_PROXY<pos:position pos:line="81" pos:column="37"/></name></expr>;<pos:position pos:line="81" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="83" pos:column="5">else <if pos:line="83" pos:column="10">if <condition pos:line="83" pos:column="13">(   <expr><call><name pos:line="83" pos:column="17">strcasecmp<pos:position pos:line="83" pos:column="27"/></name><argument_list pos:line="83" pos:column="27">(<argument><expr><name pos:line="83" pos:column="28">key<pos:position pos:line="83" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="33">"passthrough"<pos:position pos:line="83" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="47"/></argument_list></call> <operator pos:line="83" pos:column="48">==<pos:position pos:line="83" pos:column="50"/></operator> <literal type="number" pos:line="83" pos:column="51">0<pos:position pos:line="83" pos:column="52"/></literal>
             <operator pos:line="84" pos:column="14">||<pos:position pos:line="84" pos:column="16"/></operator> <call><name pos:line="84" pos:column="17">strcasecmp<pos:position pos:line="84" pos:column="27"/></name><argument_list pos:line="84" pos:column="27">(<argument><expr><name pos:line="84" pos:column="28">key<pos:position pos:line="84" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="33">"PT"<pos:position pos:line="84" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="38"/></argument_list></call> <operator pos:line="84" pos:column="39">==<pos:position pos:line="84" pos:column="41"/></operator> <literal type="number" pos:line="84" pos:column="42">0<pos:position pos:line="84" pos:column="43"/></literal></expr>      )<pos:position pos:line="84" pos:column="50"/></condition><then pos:line="84" pos:column="50"> <block pos:line="84" pos:column="51">{
        <expr_stmt><expr><name><name pos:line="85" pos:column="9">cfg<pos:position pos:line="85" pos:column="12"/></name><operator pos:line="85" pos:column="12">-&gt;<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="14">flags<pos:position pos:line="85" pos:column="19"/></name></name> <operator pos:line="85" pos:column="20">|=<pos:position pos:line="85" pos:column="22"/></operator> <name pos:line="85" pos:column="23">RULEFLAG_PASSTHROUGH<pos:position pos:line="85" pos:column="43"/></name></expr>;<pos:position pos:line="85" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="87" pos:column="5">else <if pos:line="87" pos:column="10">if <condition pos:line="87" pos:column="13">(   <expr><call><name pos:line="87" pos:column="17">strcasecmp<pos:position pos:line="87" pos:column="27"/></name><argument_list pos:line="87" pos:column="27">(<argument><expr><name pos:line="87" pos:column="28">key<pos:position pos:line="87" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="33">"skip"<pos:position pos:line="87" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="40"/></argument_list></call> <operator pos:line="87" pos:column="41">==<pos:position pos:line="87" pos:column="43"/></operator> <literal type="number" pos:line="87" pos:column="44">0<pos:position pos:line="87" pos:column="45"/></literal>
             <operator pos:line="88" pos:column="14">||<pos:position pos:line="88" pos:column="16"/></operator> <call><name pos:line="88" pos:column="17">strcasecmp<pos:position pos:line="88" pos:column="27"/></name><argument_list pos:line="88" pos:column="27">(<argument><expr><name pos:line="88" pos:column="28">key<pos:position pos:line="88" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="33">"S"<pos:position pos:line="88" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="37"/></argument_list></call> <operator pos:line="88" pos:column="38">==<pos:position pos:line="88" pos:column="40"/></operator> <literal type="number" pos:line="88" pos:column="41">0<pos:position pos:line="88" pos:column="42"/></literal></expr>   )<pos:position pos:line="88" pos:column="46"/></condition><then pos:line="88" pos:column="46"> <block pos:line="88" pos:column="47">{
        <expr_stmt><expr><name><name pos:line="89" pos:column="9">cfg<pos:position pos:line="89" pos:column="12"/></name><operator pos:line="89" pos:column="12">-&gt;<pos:position pos:line="89" pos:column="17"/></operator><name pos:line="89" pos:column="14">skip<pos:position pos:line="89" pos:column="18"/></name></name> <operator pos:line="89" pos:column="19">=<pos:position pos:line="89" pos:column="20"/></operator> <call><name pos:line="89" pos:column="21">atoi<pos:position pos:line="89" pos:column="25"/></name><argument_list pos:line="89" pos:column="25">(<argument><expr><name pos:line="89" pos:column="26">val<pos:position pos:line="89" pos:column="29"/></name></expr></argument>)<pos:position pos:line="89" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="91" pos:column="5">else <if pos:line="91" pos:column="10">if <condition pos:line="91" pos:column="13">(   <expr><call><name pos:line="91" pos:column="17">strcasecmp<pos:position pos:line="91" pos:column="27"/></name><argument_list pos:line="91" pos:column="27">(<argument><expr><name pos:line="91" pos:column="28">key<pos:position pos:line="91" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="33">"forbidden"<pos:position pos:line="91" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="45"/></argument_list></call> <operator pos:line="91" pos:column="46">==<pos:position pos:line="91" pos:column="48"/></operator> <literal type="number" pos:line="91" pos:column="49">0<pos:position pos:line="91" pos:column="50"/></literal>
             <operator pos:line="92" pos:column="14">||<pos:position pos:line="92" pos:column="16"/></operator> <call><name pos:line="92" pos:column="17">strcasecmp<pos:position pos:line="92" pos:column="27"/></name><argument_list pos:line="92" pos:column="27">(<argument><expr><name pos:line="92" pos:column="28">key<pos:position pos:line="92" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="33">"F"<pos:position pos:line="92" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="37"/></argument_list></call> <operator pos:line="92" pos:column="38">==<pos:position pos:line="92" pos:column="40"/></operator> <literal type="number" pos:line="92" pos:column="41">0<pos:position pos:line="92" pos:column="42"/></literal></expr>   )<pos:position pos:line="92" pos:column="46"/></condition><then pos:line="92" pos:column="46"> <block pos:line="92" pos:column="47">{
        <expr_stmt><expr><name><name pos:line="93" pos:column="9">cfg<pos:position pos:line="93" pos:column="12"/></name><operator pos:line="93" pos:column="12">-&gt;<pos:position pos:line="93" pos:column="17"/></operator><name pos:line="93" pos:column="14">flags<pos:position pos:line="93" pos:column="19"/></name></name> <operator pos:line="93" pos:column="20">|=<pos:position pos:line="93" pos:column="22"/></operator> <name pos:line="93" pos:column="23">RULEFLAG_FORBIDDEN<pos:position pos:line="93" pos:column="41"/></name></expr>;<pos:position pos:line="93" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="95" pos:column="5">else <if pos:line="95" pos:column="10">if <condition pos:line="95" pos:column="13">(   <expr><call><name pos:line="95" pos:column="17">strcasecmp<pos:position pos:line="95" pos:column="27"/></name><argument_list pos:line="95" pos:column="27">(<argument><expr><name pos:line="95" pos:column="28">key<pos:position pos:line="95" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="33">"gone"<pos:position pos:line="95" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="40"/></argument_list></call> <operator pos:line="95" pos:column="41">==<pos:position pos:line="95" pos:column="43"/></operator> <literal type="number" pos:line="95" pos:column="44">0<pos:position pos:line="95" pos:column="45"/></literal>
             <operator pos:line="96" pos:column="14">||<pos:position pos:line="96" pos:column="16"/></operator> <call><name pos:line="96" pos:column="17">strcasecmp<pos:position pos:line="96" pos:column="27"/></name><argument_list pos:line="96" pos:column="27">(<argument><expr><name pos:line="96" pos:column="28">key<pos:position pos:line="96" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="33">"G"<pos:position pos:line="96" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="37"/></argument_list></call> <operator pos:line="96" pos:column="38">==<pos:position pos:line="96" pos:column="40"/></operator> <literal type="number" pos:line="96" pos:column="41">0<pos:position pos:line="96" pos:column="42"/></literal></expr>   )<pos:position pos:line="96" pos:column="46"/></condition><then pos:line="96" pos:column="46"> <block pos:line="96" pos:column="47">{
        <expr_stmt><expr><name><name pos:line="97" pos:column="9">cfg<pos:position pos:line="97" pos:column="12"/></name><operator pos:line="97" pos:column="12">-&gt;<pos:position pos:line="97" pos:column="17"/></operator><name pos:line="97" pos:column="14">flags<pos:position pos:line="97" pos:column="19"/></name></name> <operator pos:line="97" pos:column="20">|=<pos:position pos:line="97" pos:column="22"/></operator> <name pos:line="97" pos:column="23">RULEFLAG_GONE<pos:position pos:line="97" pos:column="36"/></name></expr>;<pos:position pos:line="97" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="98" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="99" pos:column="5">else <if pos:line="99" pos:column="10">if <condition pos:line="99" pos:column="13">(   <expr><call><name pos:line="99" pos:column="17">strcasecmp<pos:position pos:line="99" pos:column="27"/></name><argument_list pos:line="99" pos:column="27">(<argument><expr><name pos:line="99" pos:column="28">key<pos:position pos:line="99" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="33">"qsappend"<pos:position pos:line="99" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="44"/></argument_list></call> <operator pos:line="99" pos:column="45">==<pos:position pos:line="99" pos:column="47"/></operator> <literal type="number" pos:line="99" pos:column="48">0<pos:position pos:line="99" pos:column="49"/></literal>
             <operator pos:line="100" pos:column="14">||<pos:position pos:line="100" pos:column="16"/></operator> <call><name pos:line="100" pos:column="17">strcasecmp<pos:position pos:line="100" pos:column="27"/></name><argument_list pos:line="100" pos:column="27">(<argument><expr><name pos:line="100" pos:column="28">key<pos:position pos:line="100" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="33">"QSA"<pos:position pos:line="100" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="39"/></argument_list></call> <operator pos:line="100" pos:column="40">==<pos:position pos:line="100" pos:column="42"/></operator> <literal type="number" pos:line="100" pos:column="43">0<pos:position pos:line="100" pos:column="44"/></literal></expr>   )<pos:position pos:line="100" pos:column="48"/></condition><then pos:line="100" pos:column="48"> <block pos:line="100" pos:column="49">{
        <expr_stmt><expr><name><name pos:line="101" pos:column="9">cfg<pos:position pos:line="101" pos:column="12"/></name><operator pos:line="101" pos:column="12">-&gt;<pos:position pos:line="101" pos:column="17"/></operator><name pos:line="101" pos:column="14">flags<pos:position pos:line="101" pos:column="19"/></name></name> <operator pos:line="101" pos:column="20">|=<pos:position pos:line="101" pos:column="22"/></operator> <name pos:line="101" pos:column="23">RULEFLAG_QSAPPEND<pos:position pos:line="101" pos:column="40"/></name></expr>;<pos:position pos:line="101" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="102" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="103" pos:column="5">else <if pos:line="103" pos:column="10">if <condition pos:line="103" pos:column="13">(   <expr><call><name pos:line="103" pos:column="17">strcasecmp<pos:position pos:line="103" pos:column="27"/></name><argument_list pos:line="103" pos:column="27">(<argument><expr><name pos:line="103" pos:column="28">key<pos:position pos:line="103" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="33">"nocase"<pos:position pos:line="103" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="42"/></argument_list></call> <operator pos:line="103" pos:column="43">==<pos:position pos:line="103" pos:column="45"/></operator> <literal type="number" pos:line="103" pos:column="46">0<pos:position pos:line="103" pos:column="47"/></literal>
             <operator pos:line="104" pos:column="14">||<pos:position pos:line="104" pos:column="16"/></operator> <call><name pos:line="104" pos:column="17">strcasecmp<pos:position pos:line="104" pos:column="27"/></name><argument_list pos:line="104" pos:column="27">(<argument><expr><name pos:line="104" pos:column="28">key<pos:position pos:line="104" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="33">"NC"<pos:position pos:line="104" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="38"/></argument_list></call> <operator pos:line="104" pos:column="39">==<pos:position pos:line="104" pos:column="41"/></operator> <literal type="number" pos:line="104" pos:column="42">0<pos:position pos:line="104" pos:column="43"/></literal></expr>    )<pos:position pos:line="104" pos:column="48"/></condition><then pos:line="104" pos:column="48"> <block pos:line="104" pos:column="49">{
        <expr_stmt><expr><name><name pos:line="105" pos:column="9">cfg<pos:position pos:line="105" pos:column="12"/></name><operator pos:line="105" pos:column="12">-&gt;<pos:position pos:line="105" pos:column="17"/></operator><name pos:line="105" pos:column="14">flags<pos:position pos:line="105" pos:column="19"/></name></name> <operator pos:line="105" pos:column="20">|=<pos:position pos:line="105" pos:column="22"/></operator> <name pos:line="105" pos:column="23">RULEFLAG_NOCASE<pos:position pos:line="105" pos:column="38"/></name></expr>;<pos:position pos:line="105" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="106" pos:column="6"/></block></then></if></elseif>
    <else pos:line="107" pos:column="5">else <block pos:line="107" pos:column="10">{
        <return pos:line="108" pos:column="9">return <expr><call><name pos:line="108" pos:column="16">apr_pstrcat<pos:position pos:line="108" pos:column="27"/></name><argument_list pos:line="108" pos:column="27">(<argument><expr><name pos:line="108" pos:column="28">p<pos:position pos:line="108" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="31">"RewriteRule: unknown flag '"<pos:position pos:line="108" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="108" pos:column="62">key<pos:position pos:line="108" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="67">"'"<pos:position pos:line="108" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="108" pos:column="72">NULL<pos:position pos:line="108" pos:column="76"/></name></expr></argument>)<pos:position pos:line="108" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="78"/></return>
    }<pos:position pos:line="109" pos:column="6"/></block></else></if>
    <return pos:line="110" pos:column="5">return <expr><name pos:line="110" pos:column="12">NULL<pos:position pos:line="110" pos:column="16"/></name></expr>;<pos:position pos:line="110" pos:column="17"/></return>
}<pos:position pos:line="111" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2765_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">fake_basic_authentication<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">request_rec<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">r<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">auth_form_config_rec<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">conf<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>,
                                      <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">user<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="57">const<pos:position pos:line="2" pos:column="62"/></specifier> <name pos:line="2" pos:column="63">char<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">pw<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">conf<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">-&gt;<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="15">fakebasicauth<pos:position pos:line="4" pos:column="28"/></name></name></expr>)<pos:position pos:line="4" pos:column="29"/></condition><then pos:line="4" pos:column="29"> <block pos:line="4" pos:column="30">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">basic<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><call><name pos:line="5" pos:column="23">apr_pstrcat<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><name><name pos:line="5" pos:column="35">r<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">pool<pos:position pos:line="5" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="44">user<pos:position pos:line="5" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="50">":"<pos:position pos:line="5" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="55">pw<pos:position pos:line="5" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="59">NULL<pos:position pos:line="5" pos:column="63"/></name></expr></argument>)<pos:position pos:line="5" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="65"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">apr_size_t<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">size<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><operator pos:line="6" pos:column="27">(<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">apr_size_t<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">)<pos:position pos:line="6" pos:column="39"/></operator> <call><name pos:line="6" pos:column="40">strlen<pos:position pos:line="6" pos:column="46"/></name><argument_list pos:line="6" pos:column="46">(<argument><expr><name pos:line="6" pos:column="47">basic<pos:position pos:line="6" pos:column="52"/></name></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="54"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">base64<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><call><name pos:line="7" pos:column="24">apr_palloc<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><name><name pos:line="7" pos:column="35">r<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">pool<pos:position pos:line="7" pos:column="42"/></name></name></expr></argument>,
                                  <argument><expr><call><name pos:line="8" pos:column="35">apr_base64_encode_len<pos:position pos:line="8" pos:column="56"/></name><argument_list pos:line="8" pos:column="56">(<argument><expr><name pos:line="8" pos:column="57">size<pos:position pos:line="8" pos:column="61"/></name> <operator pos:line="8" pos:column="62">+<pos:position pos:line="8" pos:column="63"/></operator> <literal type="number" pos:line="8" pos:column="64">1<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call> <operator pos:line="8" pos:column="67">*<pos:position pos:line="8" pos:column="68"/></operator> <sizeof pos:line="8" pos:column="69">sizeof<argument_list pos:line="8" pos:column="75">(<argument><expr><name pos:line="8" pos:column="76">char<pos:position pos:line="8" pos:column="80"/></name></expr></argument>)<pos:position pos:line="8" pos:column="81"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="83"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">apr_base64_encode<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">base64<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="35">basic<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">size<pos:position pos:line="9" pos:column="46"/></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">apr_table_setn<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name><name pos:line="10" pos:column="24">r<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">headers_in<pos:position pos:line="10" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="39">"Authorization"<pos:position pos:line="10" pos:column="54"/></literal></expr></argument>,
                       <argument><expr><call><name pos:line="11" pos:column="24">apr_pstrcat<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name><name pos:line="11" pos:column="36">r<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">pool<pos:position pos:line="11" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="45">"Basic "<pos:position pos:line="11" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="55">base64<pos:position pos:line="11" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="63">NULL<pos:position pos:line="11" pos:column="67"/></name></expr></argument>)<pos:position pos:line="11" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1048_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">req_parsebody<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">lua_State<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">L<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_array_header_t<pos:position pos:line="3" pos:column="23"/></name>          <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">pairs<pos:position pos:line="3" pos:column="39"/></name></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_off_t<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">len<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">res<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">size<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">max_post_size<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">buffer<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">request_rec<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">r<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><call><name pos:line="9" pos:column="22">ap_lua_check_request_rec<pos:position pos:line="9" pos:column="46"/></name><argument_list pos:line="9" pos:column="46">(<argument><expr><name pos:line="9" pos:column="47">L<pos:position pos:line="9" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="50">1<pos:position pos:line="9" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="53"/></decl_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">max_post_size<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <operator pos:line="10" pos:column="21">(<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">apr_size_t<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">)<pos:position pos:line="10" pos:column="33"/></operator> <call><name pos:line="10" pos:column="34">luaL_optint<pos:position pos:line="10" pos:column="45"/></name><argument_list pos:line="10" pos:column="45">(<argument><expr><name pos:line="10" pos:column="46">L<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="49">2<pos:position pos:line="10" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">MAX_STRING_LEN<pos:position pos:line="10" pos:column="66"/></name></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">lua_newtable<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">L<pos:position pos:line="11" pos:column="19"/></name></expr></argument>)<pos:position pos:line="11" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">lua_newtable<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">L<pos:position pos:line="12" pos:column="19"/></name></expr></argument>)<pos:position pos:line="12" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>            <comment type="block" pos:line="12" pos:column="33">/* [table, table] */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">res<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <call><name pos:line="13" pos:column="11">ap_parse_form_data<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">r<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">NULL<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="39">&amp;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="40">pairs<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="47">-<pos:position pos:line="13" pos:column="48"/></operator><literal type="number" pos:line="13" pos:column="48">1<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">max_post_size<pos:position pos:line="13" pos:column="64"/></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">res<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">==<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">OK<pos:position pos:line="14" pos:column="18"/></name></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19"> <block pos:line="14" pos:column="20">{
        <while pos:line="15" pos:column="9">while<condition pos:line="15" pos:column="14">(<expr><name pos:line="15" pos:column="15">pairs<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">&amp;&amp;<pos:position pos:line="15" pos:column="31"/></operator> <operator pos:line="15" pos:column="24">!<pos:position pos:line="15" pos:column="25"/></operator><call><name pos:line="15" pos:column="25">apr_is_empty_array<pos:position pos:line="15" pos:column="43"/></name><argument_list pos:line="15" pos:column="43">(<argument><expr><name pos:line="15" pos:column="44">pairs<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="51"/></condition> <block pos:line="15" pos:column="52">{
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">ap_form_pair_t<pos:position pos:line="16" pos:column="27"/></name> <modifier pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></modifier></type><name pos:line="16" pos:column="29">pair<pos:position pos:line="16" pos:column="33"/></name> <init pos:line="16" pos:column="34">= <expr><operator pos:line="16" pos:column="36">(<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="37">ap_form_pair_t<pos:position pos:line="16" pos:column="51"/></name> <operator pos:line="16" pos:column="52">*<pos:position pos:line="16" pos:column="53"/></operator><operator pos:line="16" pos:column="53">)<pos:position pos:line="16" pos:column="54"/></operator> <call><name pos:line="16" pos:column="55">apr_array_pop<pos:position pos:line="16" pos:column="68"/></name><argument_list pos:line="16" pos:column="68">(<argument><expr><name pos:line="16" pos:column="69">pairs<pos:position pos:line="16" pos:column="74"/></name></expr></argument>)<pos:position pos:line="16" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="76"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">apr_brigade_length<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name><name pos:line="17" pos:column="32">pair<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">value<pos:position pos:line="17" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="45">1<pos:position pos:line="17" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="48">&amp;<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="49">len<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="18" pos:column="13">size<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <operator pos:line="18" pos:column="20">(<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">apr_size_t<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">)<pos:position pos:line="18" pos:column="32"/></operator> <name pos:line="18" pos:column="33">len<pos:position pos:line="18" pos:column="36"/></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name pos:line="19" pos:column="13">buffer<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <call><name pos:line="19" pos:column="22">apr_palloc<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name><name pos:line="19" pos:column="33">r<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">pool<pos:position pos:line="19" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">size<pos:position pos:line="19" pos:column="46"/></name> <operator pos:line="19" pos:column="47">+<pos:position pos:line="19" pos:column="48"/></operator> <literal type="number" pos:line="19" pos:column="49">1<pos:position pos:line="19" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">apr_brigade_flatten<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name><name pos:line="20" pos:column="33">pair<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">value<pos:position pos:line="20" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="46">buffer<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="54">&amp;<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="55">size<pos:position pos:line="20" pos:column="59"/></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="21" pos:column="13">buffer<pos:position pos:line="21" pos:column="19"/></name><index pos:line="21" pos:column="19">[<expr><name pos:line="21" pos:column="20">len<pos:position pos:line="21" pos:column="23"/></name></expr>]<pos:position pos:line="21" pos:column="24"/></index></name> <operator pos:line="21" pos:column="25">=<pos:position pos:line="21" pos:column="26"/></operator> <literal type="number" pos:line="21" pos:column="27">0<pos:position pos:line="21" pos:column="28"/></literal></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">req_aprtable2luatable_cb<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">L<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="41">pair<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">-&gt;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="47">name<pos:position pos:line="22" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="53">buffer<pos:position pos:line="22" pos:column="59"/></name></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></while>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <return pos:line="25" pos:column="5">return <expr><literal type="number" pos:line="25" pos:column="12">2<pos:position pos:line="25" pos:column="13"/></literal></expr>;<pos:position pos:line="25" pos:column="14"/></return>                   <comment type="block" pos:line="25" pos:column="33">/* [table&lt;string, string&gt;, table&lt;string, array&lt;string&gt;&gt;] */</comment>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3126_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">set_start_bits<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name pos:line="2" pos:column="22">uschar<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">code<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">uschar<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">start_bits<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">BOOL<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">caseless<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="3" pos:column="3">compile_data<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">cd<pos:position pos:line="3" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="20"/></parameter_list>
<block pos:line="4" pos:column="1">{
<decl_stmt><decl><type><specifier pos:line="5" pos:column="1">register<pos:position pos:line="5" pos:column="9"/></specifier> <name pos:line="5" pos:column="10">int<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">c<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

<comment type="block" pos:line="7" pos:column="1">/* This next statement and the later reference to dummy are here in order to
trick the optimizer of the IBM C compiler for OS/2 into generating correct
code. Apparently IBM isn't going to fix the problem, and we would rather not
disable optimization (in this module it actually makes a big difference, and
the pcre module can use all the optimization it can get). */</comment>

<decl_stmt><decl><type><specifier pos:line="13" pos:column="1">volatile<pos:position pos:line="13" pos:column="9"/></specifier> <name pos:line="13" pos:column="10">int<pos:position pos:line="13" pos:column="13"/></name></type> <name pos:line="13" pos:column="14">dummy<pos:position pos:line="13" pos:column="19"/></name></decl>;<pos:position pos:line="13" pos:column="20"/></decl_stmt>

<do pos:line="15" pos:column="1">do
  <block pos:line="16" pos:column="3">{
  <decl_stmt><decl><type><specifier pos:line="17" pos:column="3">const<pos:position pos:line="17" pos:column="8"/></specifier> <name pos:line="17" pos:column="9">uschar<pos:position pos:line="17" pos:column="15"/></name> <modifier pos:line="17" pos:column="16">*<pos:position pos:line="17" pos:column="17"/></modifier></type><name pos:line="17" pos:column="17">tcode<pos:position pos:line="17" pos:column="22"/></name> <init pos:line="17" pos:column="23">= <expr><name pos:line="17" pos:column="25">code<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">+<pos:position pos:line="17" pos:column="31"/></operator> <literal type="number" pos:line="17" pos:column="32">3<pos:position pos:line="17" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">BOOL<pos:position pos:line="18" pos:column="7"/></name></type> <name pos:line="18" pos:column="8">try_next<pos:position pos:line="18" pos:column="16"/></name> <init pos:line="18" pos:column="17">= <expr><name pos:line="18" pos:column="19">TRUE<pos:position pos:line="18" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="24"/></decl_stmt>

  <while pos:line="20" pos:column="3">while <condition pos:line="20" pos:column="9">(<expr><name pos:line="20" pos:column="10">try_next<pos:position pos:line="20" pos:column="18"/></name></expr>)<pos:position pos:line="20" pos:column="19"/></condition>
    <block pos:line="21" pos:column="5">{
    <comment type="block" pos:line="22" pos:column="5">/* If a branch starts with a bracket or a positive lookahead assertion,
    recurse to set bits from within them. That's all for this branch. */</comment>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">int<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">)<pos:position pos:line="25" pos:column="14"/></operator><operator pos:line="25" pos:column="14">*<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">tcode<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">&gt;=<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="24">OP_BRA<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">||<pos:position pos:line="25" pos:column="33"/></operator> <operator pos:line="25" pos:column="34">*<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="35">tcode<pos:position pos:line="25" pos:column="40"/></name> <operator pos:line="25" pos:column="41">==<pos:position pos:line="25" pos:column="43"/></operator> <name pos:line="25" pos:column="44">OP_ASSERT<pos:position pos:line="25" pos:column="53"/></name></expr>)<pos:position pos:line="25" pos:column="54"/></condition><then pos:line="25" pos:column="54">
      <block pos:line="26" pos:column="7">{
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><operator pos:line="27" pos:column="11">!<pos:position pos:line="27" pos:column="12"/></operator><call><name pos:line="27" pos:column="12">set_start_bits<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">tcode<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="34">start_bits<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="46">caseless<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="56">cd<pos:position pos:line="27" pos:column="58"/></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="60"/></condition><then pos:line="27" pos:column="60">
        <block type="pseudo"><return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">FALSE<pos:position pos:line="28" pos:column="21"/></name></expr>;<pos:position pos:line="28" pos:column="22"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="29" pos:column="7">try_next<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">FALSE<pos:position pos:line="29" pos:column="23"/></name></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="30" pos:column="8"/></block></then>

    <else pos:line="32" pos:column="5">else <block type="pseudo"><switch pos:line="32" pos:column="10">switch<condition pos:line="32" pos:column="16">(<expr><operator pos:line="32" pos:column="17">*<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">tcode<pos:position pos:line="32" pos:column="23"/></name></expr>)<pos:position pos:line="32" pos:column="24"/></condition>
      <block pos:line="33" pos:column="7">{
      <default pos:line="34" pos:column="7">default:<pos:position pos:line="34" pos:column="15"/></default>
      <return pos:line="35" pos:column="7">return <expr><name pos:line="35" pos:column="14">FALSE<pos:position pos:line="35" pos:column="19"/></name></expr>;<pos:position pos:line="35" pos:column="20"/></return>

      <comment type="block" pos:line="37" pos:column="7">/* Skip over extended extraction bracket number */</comment>

      <case pos:line="39" pos:column="7">case <expr><name pos:line="39" pos:column="12">OP_BRANUMBER<pos:position pos:line="39" pos:column="24"/></name></expr>:<pos:position pos:line="39" pos:column="25"/></case>
      <expr_stmt><expr><name pos:line="40" pos:column="7">tcode<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">+=<pos:position pos:line="40" pos:column="15"/></operator> <literal type="number" pos:line="40" pos:column="16">3<pos:position pos:line="40" pos:column="17"/></literal></expr>;<pos:position pos:line="40" pos:column="18"/></expr_stmt>
      <break pos:line="41" pos:column="7">break;<pos:position pos:line="41" pos:column="13"/></break>

      <comment type="block" pos:line="43" pos:column="7">/* Skip over lookbehind and negative lookahead assertions */</comment>

      <case pos:line="45" pos:column="7">case <expr><name pos:line="45" pos:column="12">OP_ASSERT_NOT<pos:position pos:line="45" pos:column="25"/></name></expr>:<pos:position pos:line="45" pos:column="26"/></case>
      <case pos:line="46" pos:column="7">case <expr><name pos:line="46" pos:column="12">OP_ASSERTBACK<pos:position pos:line="46" pos:column="25"/></name></expr>:<pos:position pos:line="46" pos:column="26"/></case>
      <case pos:line="47" pos:column="7">case <expr><name pos:line="47" pos:column="12">OP_ASSERTBACK_NOT<pos:position pos:line="47" pos:column="29"/></name></expr>:<pos:position pos:line="47" pos:column="30"/></case>
      <do pos:line="48" pos:column="7">do <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="10">tcode<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">+=<pos:position pos:line="48" pos:column="18"/></operator> <operator pos:line="48" pos:column="19">(<pos:position pos:line="48" pos:column="20"/></operator><name><name pos:line="48" pos:column="20">tcode<pos:position pos:line="48" pos:column="25"/></name><index pos:line="48" pos:column="25">[<expr><literal type="number" pos:line="48" pos:column="26">1<pos:position pos:line="48" pos:column="27"/></literal></expr>]<pos:position pos:line="48" pos:column="28"/></index></name> <operator pos:line="48" pos:column="29">&lt;&lt;<pos:position pos:line="48" pos:column="37"/></operator> <literal type="number" pos:line="48" pos:column="32">8<pos:position pos:line="48" pos:column="33"/></literal><operator pos:line="48" pos:column="33">)<pos:position pos:line="48" pos:column="34"/></operator> <operator pos:line="48" pos:column="35">+<pos:position pos:line="48" pos:column="36"/></operator> <name><name pos:line="48" pos:column="37">tcode<pos:position pos:line="48" pos:column="42"/></name><index pos:line="48" pos:column="42">[<expr><literal type="number" pos:line="48" pos:column="43">2<pos:position pos:line="48" pos:column="44"/></literal></expr>]<pos:position pos:line="48" pos:column="45"/></index></name></expr>;<pos:position pos:line="48" pos:column="46"/></expr_stmt></block> while <condition pos:line="48" pos:column="53">(<expr><operator pos:line="48" pos:column="54">*<pos:position pos:line="48" pos:column="55"/></operator><name pos:line="48" pos:column="55">tcode<pos:position pos:line="48" pos:column="60"/></name> <operator pos:line="48" pos:column="61">==<pos:position pos:line="48" pos:column="63"/></operator> <name pos:line="48" pos:column="64">OP_ALT<pos:position pos:line="48" pos:column="70"/></name></expr>)<pos:position pos:line="48" pos:column="71"/></condition>;<pos:position pos:line="48" pos:column="72"/></do>
      <expr_stmt><expr><name pos:line="49" pos:column="7">tcode<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">+=<pos:position pos:line="49" pos:column="15"/></operator> <literal type="number" pos:line="49" pos:column="16">3<pos:position pos:line="49" pos:column="17"/></literal></expr>;<pos:position pos:line="49" pos:column="18"/></expr_stmt>
      <break pos:line="50" pos:column="7">break;<pos:position pos:line="50" pos:column="13"/></break>

      <comment type="block" pos:line="52" pos:column="7">/* Skip over an option setting, changing the caseless flag */</comment>

      <case pos:line="54" pos:column="7">case <expr><name pos:line="54" pos:column="12">OP_OPT<pos:position pos:line="54" pos:column="18"/></name></expr>:<pos:position pos:line="54" pos:column="19"/></case>
      <expr_stmt><expr><name pos:line="55" pos:column="7">caseless<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <operator pos:line="55" pos:column="18">(<pos:position pos:line="55" pos:column="19"/></operator><name><name pos:line="55" pos:column="19">tcode<pos:position pos:line="55" pos:column="24"/></name><index pos:line="55" pos:column="24">[<expr><literal type="number" pos:line="55" pos:column="25">1<pos:position pos:line="55" pos:column="26"/></literal></expr>]<pos:position pos:line="55" pos:column="27"/></index></name> <operator pos:line="55" pos:column="28">&amp;<pos:position pos:line="55" pos:column="33"/></operator> <name pos:line="55" pos:column="30">PCRE_CASELESS<pos:position pos:line="55" pos:column="43"/></name><operator pos:line="55" pos:column="43">)<pos:position pos:line="55" pos:column="44"/></operator> <operator pos:line="55" pos:column="45">!=<pos:position pos:line="55" pos:column="47"/></operator> <literal type="number" pos:line="55" pos:column="48">0<pos:position pos:line="55" pos:column="49"/></literal></expr>;<pos:position pos:line="55" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><name pos:line="56" pos:column="7">tcode<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">+=<pos:position pos:line="56" pos:column="15"/></operator> <literal type="number" pos:line="56" pos:column="16">2<pos:position pos:line="56" pos:column="17"/></literal></expr>;<pos:position pos:line="56" pos:column="18"/></expr_stmt>
      <break pos:line="57" pos:column="7">break;<pos:position pos:line="57" pos:column="13"/></break>

      <comment type="block" pos:line="59" pos:column="7">/* BRAZERO does the bracket, but carries on. */</comment>

      <case pos:line="61" pos:column="7">case <expr><name pos:line="61" pos:column="12">OP_BRAZERO<pos:position pos:line="61" pos:column="22"/></name></expr>:<pos:position pos:line="61" pos:column="23"/></case>
      <case pos:line="62" pos:column="7">case <expr><name pos:line="62" pos:column="12">OP_BRAMINZERO<pos:position pos:line="62" pos:column="25"/></name></expr>:<pos:position pos:line="62" pos:column="26"/></case>
      <if pos:line="63" pos:column="7">if <condition pos:line="63" pos:column="10">(<expr><operator pos:line="63" pos:column="11">!<pos:position pos:line="63" pos:column="12"/></operator><call><name pos:line="63" pos:column="12">set_start_bits<pos:position pos:line="63" pos:column="26"/></name><argument_list pos:line="63" pos:column="26">(<argument><expr><operator pos:line="63" pos:column="27">++<pos:position pos:line="63" pos:column="29"/></operator><name pos:line="63" pos:column="29">tcode<pos:position pos:line="63" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="36">start_bits<pos:position pos:line="63" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="48">caseless<pos:position pos:line="63" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="58">cd<pos:position pos:line="63" pos:column="60"/></name></expr></argument>)<pos:position pos:line="63" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="62"/></condition><then pos:line="63" pos:column="62">
        <block type="pseudo"><return pos:line="64" pos:column="9">return <expr><name pos:line="64" pos:column="16">FALSE<pos:position pos:line="64" pos:column="21"/></name></expr>;<pos:position pos:line="64" pos:column="22"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="65" pos:column="7">dummy<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">=<pos:position pos:line="65" pos:column="14"/></operator> <literal type="number" pos:line="65" pos:column="15">1<pos:position pos:line="65" pos:column="16"/></literal></expr>;<pos:position pos:line="65" pos:column="17"/></expr_stmt>
      <do pos:line="66" pos:column="7">do <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="10">tcode<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">+=<pos:position pos:line="66" pos:column="18"/></operator> <operator pos:line="66" pos:column="19">(<pos:position pos:line="66" pos:column="20"/></operator><name><name pos:line="66" pos:column="20">tcode<pos:position pos:line="66" pos:column="25"/></name><index pos:line="66" pos:column="25">[<expr><literal type="number" pos:line="66" pos:column="26">1<pos:position pos:line="66" pos:column="27"/></literal></expr>]<pos:position pos:line="66" pos:column="28"/></index></name> <operator pos:line="66" pos:column="29">&lt;&lt;<pos:position pos:line="66" pos:column="37"/></operator> <literal type="number" pos:line="66" pos:column="32">8<pos:position pos:line="66" pos:column="33"/></literal><operator pos:line="66" pos:column="33">)<pos:position pos:line="66" pos:column="34"/></operator> <operator pos:line="66" pos:column="35">+<pos:position pos:line="66" pos:column="36"/></operator> <name><name pos:line="66" pos:column="37">tcode<pos:position pos:line="66" pos:column="42"/></name><index pos:line="66" pos:column="42">[<expr><literal type="number" pos:line="66" pos:column="43">2<pos:position pos:line="66" pos:column="44"/></literal></expr>]<pos:position pos:line="66" pos:column="45"/></index></name></expr>;<pos:position pos:line="66" pos:column="46"/></expr_stmt></block> while <condition pos:line="66" pos:column="53">(<expr><operator pos:line="66" pos:column="54">*<pos:position pos:line="66" pos:column="55"/></operator><name pos:line="66" pos:column="55">tcode<pos:position pos:line="66" pos:column="60"/></name> <operator pos:line="66" pos:column="61">==<pos:position pos:line="66" pos:column="63"/></operator> <name pos:line="66" pos:column="64">OP_ALT<pos:position pos:line="66" pos:column="70"/></name></expr>)<pos:position pos:line="66" pos:column="71"/></condition>;<pos:position pos:line="66" pos:column="72"/></do>
      <expr_stmt><expr><name pos:line="67" pos:column="7">tcode<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">+=<pos:position pos:line="67" pos:column="15"/></operator> <literal type="number" pos:line="67" pos:column="16">3<pos:position pos:line="67" pos:column="17"/></literal></expr>;<pos:position pos:line="67" pos:column="18"/></expr_stmt>
      <break pos:line="68" pos:column="7">break;<pos:position pos:line="68" pos:column="13"/></break>

      <comment type="block" pos:line="70" pos:column="7">/* Single-char * or ? sets the bit and tries the next item */</comment>

      <case pos:line="72" pos:column="7">case <expr><name pos:line="72" pos:column="12">OP_STAR<pos:position pos:line="72" pos:column="19"/></name></expr>:<pos:position pos:line="72" pos:column="20"/></case>
      <case pos:line="73" pos:column="7">case <expr><name pos:line="73" pos:column="12">OP_MINSTAR<pos:position pos:line="73" pos:column="22"/></name></expr>:<pos:position pos:line="73" pos:column="23"/></case>
      <case pos:line="74" pos:column="7">case <expr><name pos:line="74" pos:column="12">OP_QUERY<pos:position pos:line="74" pos:column="20"/></name></expr>:<pos:position pos:line="74" pos:column="21"/></case>
      <case pos:line="75" pos:column="7">case <expr><name pos:line="75" pos:column="12">OP_MINQUERY<pos:position pos:line="75" pos:column="23"/></name></expr>:<pos:position pos:line="75" pos:column="24"/></case>
      <expr_stmt><expr><call><name pos:line="76" pos:column="7">set_bit<pos:position pos:line="76" pos:column="14"/></name><argument_list pos:line="76" pos:column="14">(<argument><expr><name pos:line="76" pos:column="15">start_bits<pos:position pos:line="76" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="27">tcode<pos:position pos:line="76" pos:column="32"/></name><index pos:line="76" pos:column="32">[<expr><literal type="number" pos:line="76" pos:column="33">1<pos:position pos:line="76" pos:column="34"/></literal></expr>]<pos:position pos:line="76" pos:column="35"/></index></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="37">caseless<pos:position pos:line="76" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="47">cd<pos:position pos:line="76" pos:column="49"/></name></expr></argument>)<pos:position pos:line="76" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name pos:line="77" pos:column="7">tcode<pos:position pos:line="77" pos:column="12"/></name> <operator pos:line="77" pos:column="13">+=<pos:position pos:line="77" pos:column="15"/></operator> <literal type="number" pos:line="77" pos:column="16">2<pos:position pos:line="77" pos:column="17"/></literal></expr>;<pos:position pos:line="77" pos:column="18"/></expr_stmt>
      <break pos:line="78" pos:column="7">break;<pos:position pos:line="78" pos:column="13"/></break>

      <comment type="block" pos:line="80" pos:column="7">/* Single-char upto sets the bit and tries the next */</comment>

      <case pos:line="82" pos:column="7">case <expr><name pos:line="82" pos:column="12">OP_UPTO<pos:position pos:line="82" pos:column="19"/></name></expr>:<pos:position pos:line="82" pos:column="20"/></case>
      <case pos:line="83" pos:column="7">case <expr><name pos:line="83" pos:column="12">OP_MINUPTO<pos:position pos:line="83" pos:column="22"/></name></expr>:<pos:position pos:line="83" pos:column="23"/></case>
      <expr_stmt><expr><call><name pos:line="84" pos:column="7">set_bit<pos:position pos:line="84" pos:column="14"/></name><argument_list pos:line="84" pos:column="14">(<argument><expr><name pos:line="84" pos:column="15">start_bits<pos:position pos:line="84" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="27">tcode<pos:position pos:line="84" pos:column="32"/></name><index pos:line="84" pos:column="32">[<expr><literal type="number" pos:line="84" pos:column="33">3<pos:position pos:line="84" pos:column="34"/></literal></expr>]<pos:position pos:line="84" pos:column="35"/></index></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="37">caseless<pos:position pos:line="84" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="47">cd<pos:position pos:line="84" pos:column="49"/></name></expr></argument>)<pos:position pos:line="84" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name pos:line="85" pos:column="7">tcode<pos:position pos:line="85" pos:column="12"/></name> <operator pos:line="85" pos:column="13">+=<pos:position pos:line="85" pos:column="15"/></operator> <literal type="number" pos:line="85" pos:column="16">4<pos:position pos:line="85" pos:column="17"/></literal></expr>;<pos:position pos:line="85" pos:column="18"/></expr_stmt>
      <break pos:line="86" pos:column="7">break;<pos:position pos:line="86" pos:column="13"/></break>

      <comment type="block" pos:line="88" pos:column="7">/* At least one single char sets the bit and stops */</comment>

      <case pos:line="90" pos:column="7">case <expr><name pos:line="90" pos:column="12">OP_EXACT<pos:position pos:line="90" pos:column="20"/></name></expr>:<pos:position pos:line="90" pos:column="21"/></case>       <comment type="block" pos:line="90" pos:column="28">/* Fall through */</comment>
      <expr_stmt><expr><name pos:line="91" pos:column="7">tcode<pos:position pos:line="91" pos:column="12"/></name><operator pos:line="91" pos:column="12">++<pos:position pos:line="91" pos:column="14"/></operator></expr>;<pos:position pos:line="91" pos:column="15"/></expr_stmt>

      <case pos:line="93" pos:column="7">case <expr><name pos:line="93" pos:column="12">OP_CHARS<pos:position pos:line="93" pos:column="20"/></name></expr>:<pos:position pos:line="93" pos:column="21"/></case>       <comment type="block" pos:line="93" pos:column="28">/* Fall through */</comment>
      <expr_stmt><expr><name pos:line="94" pos:column="7">tcode<pos:position pos:line="94" pos:column="12"/></name><operator pos:line="94" pos:column="12">++<pos:position pos:line="94" pos:column="14"/></operator></expr>;<pos:position pos:line="94" pos:column="15"/></expr_stmt>

      <case pos:line="96" pos:column="7">case <expr><name pos:line="96" pos:column="12">OP_PLUS<pos:position pos:line="96" pos:column="19"/></name></expr>:<pos:position pos:line="96" pos:column="20"/></case>
      <case pos:line="97" pos:column="7">case <expr><name pos:line="97" pos:column="12">OP_MINPLUS<pos:position pos:line="97" pos:column="22"/></name></expr>:<pos:position pos:line="97" pos:column="23"/></case>
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">set_bit<pos:position pos:line="98" pos:column="14"/></name><argument_list pos:line="98" pos:column="14">(<argument><expr><name pos:line="98" pos:column="15">start_bits<pos:position pos:line="98" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="27">tcode<pos:position pos:line="98" pos:column="32"/></name><index pos:line="98" pos:column="32">[<expr><literal type="number" pos:line="98" pos:column="33">1<pos:position pos:line="98" pos:column="34"/></literal></expr>]<pos:position pos:line="98" pos:column="35"/></index></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="37">caseless<pos:position pos:line="98" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="47">cd<pos:position pos:line="98" pos:column="49"/></name></expr></argument>)<pos:position pos:line="98" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name pos:line="99" pos:column="7">try_next<pos:position pos:line="99" pos:column="15"/></name> <operator pos:line="99" pos:column="16">=<pos:position pos:line="99" pos:column="17"/></operator> <name pos:line="99" pos:column="18">FALSE<pos:position pos:line="99" pos:column="23"/></name></expr>;<pos:position pos:line="99" pos:column="24"/></expr_stmt>
      <break pos:line="100" pos:column="7">break;<pos:position pos:line="100" pos:column="13"/></break>

      <comment type="block" pos:line="102" pos:column="7">/* Single character type sets the bits and stops */</comment>

      <case pos:line="104" pos:column="7">case <expr><name pos:line="104" pos:column="12">OP_NOT_DIGIT<pos:position pos:line="104" pos:column="24"/></name></expr>:<pos:position pos:line="104" pos:column="25"/></case>
      <for pos:line="105" pos:column="7">for <control pos:line="105" pos:column="11">(<init><expr><name pos:line="105" pos:column="12">c<pos:position pos:line="105" pos:column="13"/></name> <operator pos:line="105" pos:column="14">=<pos:position pos:line="105" pos:column="15"/></operator> <literal type="number" pos:line="105" pos:column="16">0<pos:position pos:line="105" pos:column="17"/></literal></expr>;<pos:position pos:line="105" pos:column="18"/></init> <condition><expr><name pos:line="105" pos:column="19">c<pos:position pos:line="105" pos:column="20"/></name> <operator pos:line="105" pos:column="21">&lt;<pos:position pos:line="105" pos:column="25"/></operator> <literal type="number" pos:line="105" pos:column="23">32<pos:position pos:line="105" pos:column="25"/></literal></expr>;<pos:position pos:line="105" pos:column="26"/></condition> <incr><expr><name pos:line="105" pos:column="27">c<pos:position pos:line="105" pos:column="28"/></name><operator pos:line="105" pos:column="28">++<pos:position pos:line="105" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="105" pos:column="31"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="106" pos:column="9">start_bits<pos:position pos:line="106" pos:column="19"/></name><index pos:line="106" pos:column="19">[<expr><name pos:line="106" pos:column="20">c<pos:position pos:line="106" pos:column="21"/></name></expr>]<pos:position pos:line="106" pos:column="22"/></index></name> <operator pos:line="106" pos:column="23">|=<pos:position pos:line="106" pos:column="25"/></operator> <operator pos:line="106" pos:column="26">~<pos:position pos:line="106" pos:column="27"/></operator><name><name pos:line="106" pos:column="27">cd<pos:position pos:line="106" pos:column="29"/></name><operator pos:line="106" pos:column="29">-&gt;<pos:position pos:line="106" pos:column="34"/></operator><name pos:line="106" pos:column="31">cbits<pos:position pos:line="106" pos:column="36"/></name><index pos:line="106" pos:column="36">[<expr><name pos:line="106" pos:column="37">c<pos:position pos:line="106" pos:column="38"/></name><operator pos:line="106" pos:column="38">+<pos:position pos:line="106" pos:column="39"/></operator><name pos:line="106" pos:column="39">cbit_digit<pos:position pos:line="106" pos:column="49"/></name></expr>]<pos:position pos:line="106" pos:column="50"/></index></name></expr>;<pos:position pos:line="106" pos:column="51"/></expr_stmt></block></for>
      <expr_stmt><expr><name pos:line="107" pos:column="7">try_next<pos:position pos:line="107" pos:column="15"/></name> <operator pos:line="107" pos:column="16">=<pos:position pos:line="107" pos:column="17"/></operator> <name pos:line="107" pos:column="18">FALSE<pos:position pos:line="107" pos:column="23"/></name></expr>;<pos:position pos:line="107" pos:column="24"/></expr_stmt>
      <break pos:line="108" pos:column="7">break;<pos:position pos:line="108" pos:column="13"/></break>

      <case pos:line="110" pos:column="7">case <expr><name pos:line="110" pos:column="12">OP_DIGIT<pos:position pos:line="110" pos:column="20"/></name></expr>:<pos:position pos:line="110" pos:column="21"/></case>
      <for pos:line="111" pos:column="7">for <control pos:line="111" pos:column="11">(<init><expr><name pos:line="111" pos:column="12">c<pos:position pos:line="111" pos:column="13"/></name> <operator pos:line="111" pos:column="14">=<pos:position pos:line="111" pos:column="15"/></operator> <literal type="number" pos:line="111" pos:column="16">0<pos:position pos:line="111" pos:column="17"/></literal></expr>;<pos:position pos:line="111" pos:column="18"/></init> <condition><expr><name pos:line="111" pos:column="19">c<pos:position pos:line="111" pos:column="20"/></name> <operator pos:line="111" pos:column="21">&lt;<pos:position pos:line="111" pos:column="25"/></operator> <literal type="number" pos:line="111" pos:column="23">32<pos:position pos:line="111" pos:column="25"/></literal></expr>;<pos:position pos:line="111" pos:column="26"/></condition> <incr><expr><name pos:line="111" pos:column="27">c<pos:position pos:line="111" pos:column="28"/></name><operator pos:line="111" pos:column="28">++<pos:position pos:line="111" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="111" pos:column="31"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="112" pos:column="9">start_bits<pos:position pos:line="112" pos:column="19"/></name><index pos:line="112" pos:column="19">[<expr><name pos:line="112" pos:column="20">c<pos:position pos:line="112" pos:column="21"/></name></expr>]<pos:position pos:line="112" pos:column="22"/></index></name> <operator pos:line="112" pos:column="23">|=<pos:position pos:line="112" pos:column="25"/></operator> <name><name pos:line="112" pos:column="26">cd<pos:position pos:line="112" pos:column="28"/></name><operator pos:line="112" pos:column="28">-&gt;<pos:position pos:line="112" pos:column="33"/></operator><name pos:line="112" pos:column="30">cbits<pos:position pos:line="112" pos:column="35"/></name><index pos:line="112" pos:column="35">[<expr><name pos:line="112" pos:column="36">c<pos:position pos:line="112" pos:column="37"/></name><operator pos:line="112" pos:column="37">+<pos:position pos:line="112" pos:column="38"/></operator><name pos:line="112" pos:column="38">cbit_digit<pos:position pos:line="112" pos:column="48"/></name></expr>]<pos:position pos:line="112" pos:column="49"/></index></name></expr>;<pos:position pos:line="112" pos:column="50"/></expr_stmt></block></for>
      <expr_stmt><expr><name pos:line="113" pos:column="7">try_next<pos:position pos:line="113" pos:column="15"/></name> <operator pos:line="113" pos:column="16">=<pos:position pos:line="113" pos:column="17"/></operator> <name pos:line="113" pos:column="18">FALSE<pos:position pos:line="113" pos:column="23"/></name></expr>;<pos:position pos:line="113" pos:column="24"/></expr_stmt>
      <break pos:line="114" pos:column="7">break;<pos:position pos:line="114" pos:column="13"/></break>

      <case pos:line="116" pos:column="7">case <expr><name pos:line="116" pos:column="12">OP_NOT_WHITESPACE<pos:position pos:line="116" pos:column="29"/></name></expr>:<pos:position pos:line="116" pos:column="30"/></case>
      <for pos:line="117" pos:column="7">for <control pos:line="117" pos:column="11">(<init><expr><name pos:line="117" pos:column="12">c<pos:position pos:line="117" pos:column="13"/></name> <operator pos:line="117" pos:column="14">=<pos:position pos:line="117" pos:column="15"/></operator> <literal type="number" pos:line="117" pos:column="16">0<pos:position pos:line="117" pos:column="17"/></literal></expr>;<pos:position pos:line="117" pos:column="18"/></init> <condition><expr><name pos:line="117" pos:column="19">c<pos:position pos:line="117" pos:column="20"/></name> <operator pos:line="117" pos:column="21">&lt;<pos:position pos:line="117" pos:column="25"/></operator> <literal type="number" pos:line="117" pos:column="23">32<pos:position pos:line="117" pos:column="25"/></literal></expr>;<pos:position pos:line="117" pos:column="26"/></condition> <incr><expr><name pos:line="117" pos:column="27">c<pos:position pos:line="117" pos:column="28"/></name><operator pos:line="117" pos:column="28">++<pos:position pos:line="117" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="117" pos:column="31"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="118" pos:column="9">start_bits<pos:position pos:line="118" pos:column="19"/></name><index pos:line="118" pos:column="19">[<expr><name pos:line="118" pos:column="20">c<pos:position pos:line="118" pos:column="21"/></name></expr>]<pos:position pos:line="118" pos:column="22"/></index></name> <operator pos:line="118" pos:column="23">|=<pos:position pos:line="118" pos:column="25"/></operator> <operator pos:line="118" pos:column="26">~<pos:position pos:line="118" pos:column="27"/></operator><name><name pos:line="118" pos:column="27">cd<pos:position pos:line="118" pos:column="29"/></name><operator pos:line="118" pos:column="29">-&gt;<pos:position pos:line="118" pos:column="34"/></operator><name pos:line="118" pos:column="31">cbits<pos:position pos:line="118" pos:column="36"/></name><index pos:line="118" pos:column="36">[<expr><name pos:line="118" pos:column="37">c<pos:position pos:line="118" pos:column="38"/></name><operator pos:line="118" pos:column="38">+<pos:position pos:line="118" pos:column="39"/></operator><name pos:line="118" pos:column="39">cbit_space<pos:position pos:line="118" pos:column="49"/></name></expr>]<pos:position pos:line="118" pos:column="50"/></index></name></expr>;<pos:position pos:line="118" pos:column="51"/></expr_stmt></block></for>
      <expr_stmt><expr><name pos:line="119" pos:column="7">try_next<pos:position pos:line="119" pos:column="15"/></name> <operator pos:line="119" pos:column="16">=<pos:position pos:line="119" pos:column="17"/></operator> <name pos:line="119" pos:column="18">FALSE<pos:position pos:line="119" pos:column="23"/></name></expr>;<pos:position pos:line="119" pos:column="24"/></expr_stmt>
      <break pos:line="120" pos:column="7">break;<pos:position pos:line="120" pos:column="13"/></break>

      <case pos:line="122" pos:column="7">case <expr><name pos:line="122" pos:column="12">OP_WHITESPACE<pos:position pos:line="122" pos:column="25"/></name></expr>:<pos:position pos:line="122" pos:column="26"/></case>
      <for pos:line="123" pos:column="7">for <control pos:line="123" pos:column="11">(<init><expr><name pos:line="123" pos:column="12">c<pos:position pos:line="123" pos:column="13"/></name> <operator pos:line="123" pos:column="14">=<pos:position pos:line="123" pos:column="15"/></operator> <literal type="number" pos:line="123" pos:column="16">0<pos:position pos:line="123" pos:column="17"/></literal></expr>;<pos:position pos:line="123" pos:column="18"/></init> <condition><expr><name pos:line="123" pos:column="19">c<pos:position pos:line="123" pos:column="20"/></name> <operator pos:line="123" pos:column="21">&lt;<pos:position pos:line="123" pos:column="25"/></operator> <literal type="number" pos:line="123" pos:column="23">32<pos:position pos:line="123" pos:column="25"/></literal></expr>;<pos:position pos:line="123" pos:column="26"/></condition> <incr><expr><name pos:line="123" pos:column="27">c<pos:position pos:line="123" pos:column="28"/></name><operator pos:line="123" pos:column="28">++<pos:position pos:line="123" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="123" pos:column="31"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="124" pos:column="9">start_bits<pos:position pos:line="124" pos:column="19"/></name><index pos:line="124" pos:column="19">[<expr><name pos:line="124" pos:column="20">c<pos:position pos:line="124" pos:column="21"/></name></expr>]<pos:position pos:line="124" pos:column="22"/></index></name> <operator pos:line="124" pos:column="23">|=<pos:position pos:line="124" pos:column="25"/></operator> <name><name pos:line="124" pos:column="26">cd<pos:position pos:line="124" pos:column="28"/></name><operator pos:line="124" pos:column="28">-&gt;<pos:position pos:line="124" pos:column="33"/></operator><name pos:line="124" pos:column="30">cbits<pos:position pos:line="124" pos:column="35"/></name><index pos:line="124" pos:column="35">[<expr><name pos:line="124" pos:column="36">c<pos:position pos:line="124" pos:column="37"/></name><operator pos:line="124" pos:column="37">+<pos:position pos:line="124" pos:column="38"/></operator><name pos:line="124" pos:column="38">cbit_space<pos:position pos:line="124" pos:column="48"/></name></expr>]<pos:position pos:line="124" pos:column="49"/></index></name></expr>;<pos:position pos:line="124" pos:column="50"/></expr_stmt></block></for>
      <expr_stmt><expr><name pos:line="125" pos:column="7">try_next<pos:position pos:line="125" pos:column="15"/></name> <operator pos:line="125" pos:column="16">=<pos:position pos:line="125" pos:column="17"/></operator> <name pos:line="125" pos:column="18">FALSE<pos:position pos:line="125" pos:column="23"/></name></expr>;<pos:position pos:line="125" pos:column="24"/></expr_stmt>
      <break pos:line="126" pos:column="7">break;<pos:position pos:line="126" pos:column="13"/></break>

      <case pos:line="128" pos:column="7">case <expr><name pos:line="128" pos:column="12">OP_NOT_WORDCHAR<pos:position pos:line="128" pos:column="27"/></name></expr>:<pos:position pos:line="128" pos:column="28"/></case>
      <for pos:line="129" pos:column="7">for <control pos:line="129" pos:column="11">(<init><expr><name pos:line="129" pos:column="12">c<pos:position pos:line="129" pos:column="13"/></name> <operator pos:line="129" pos:column="14">=<pos:position pos:line="129" pos:column="15"/></operator> <literal type="number" pos:line="129" pos:column="16">0<pos:position pos:line="129" pos:column="17"/></literal></expr>;<pos:position pos:line="129" pos:column="18"/></init> <condition><expr><name pos:line="129" pos:column="19">c<pos:position pos:line="129" pos:column="20"/></name> <operator pos:line="129" pos:column="21">&lt;<pos:position pos:line="129" pos:column="25"/></operator> <literal type="number" pos:line="129" pos:column="23">32<pos:position pos:line="129" pos:column="25"/></literal></expr>;<pos:position pos:line="129" pos:column="26"/></condition> <incr><expr><name pos:line="129" pos:column="27">c<pos:position pos:line="129" pos:column="28"/></name><operator pos:line="129" pos:column="28">++<pos:position pos:line="129" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="129" pos:column="31"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="130" pos:column="9">start_bits<pos:position pos:line="130" pos:column="19"/></name><index pos:line="130" pos:column="19">[<expr><name pos:line="130" pos:column="20">c<pos:position pos:line="130" pos:column="21"/></name></expr>]<pos:position pos:line="130" pos:column="22"/></index></name> <operator pos:line="130" pos:column="23">|=<pos:position pos:line="130" pos:column="25"/></operator> <operator pos:line="130" pos:column="26">~<pos:position pos:line="130" pos:column="27"/></operator><name><name pos:line="130" pos:column="27">cd<pos:position pos:line="130" pos:column="29"/></name><operator pos:line="130" pos:column="29">-&gt;<pos:position pos:line="130" pos:column="34"/></operator><name pos:line="130" pos:column="31">cbits<pos:position pos:line="130" pos:column="36"/></name><index pos:line="130" pos:column="36">[<expr><name pos:line="130" pos:column="37">c<pos:position pos:line="130" pos:column="38"/></name><operator pos:line="130" pos:column="38">+<pos:position pos:line="130" pos:column="39"/></operator><name pos:line="130" pos:column="39">cbit_word<pos:position pos:line="130" pos:column="48"/></name></expr>]<pos:position pos:line="130" pos:column="49"/></index></name></expr>;<pos:position pos:line="130" pos:column="50"/></expr_stmt></block></for>
      <expr_stmt><expr><name pos:line="131" pos:column="7">try_next<pos:position pos:line="131" pos:column="15"/></name> <operator pos:line="131" pos:column="16">=<pos:position pos:line="131" pos:column="17"/></operator> <name pos:line="131" pos:column="18">FALSE<pos:position pos:line="131" pos:column="23"/></name></expr>;<pos:position pos:line="131" pos:column="24"/></expr_stmt>
      <break pos:line="132" pos:column="7">break;<pos:position pos:line="132" pos:column="13"/></break>

      <case pos:line="134" pos:column="7">case <expr><name pos:line="134" pos:column="12">OP_WORDCHAR<pos:position pos:line="134" pos:column="23"/></name></expr>:<pos:position pos:line="134" pos:column="24"/></case>
      <for pos:line="135" pos:column="7">for <control pos:line="135" pos:column="11">(<init><expr><name pos:line="135" pos:column="12">c<pos:position pos:line="135" pos:column="13"/></name> <operator pos:line="135" pos:column="14">=<pos:position pos:line="135" pos:column="15"/></operator> <literal type="number" pos:line="135" pos:column="16">0<pos:position pos:line="135" pos:column="17"/></literal></expr>;<pos:position pos:line="135" pos:column="18"/></init> <condition><expr><name pos:line="135" pos:column="19">c<pos:position pos:line="135" pos:column="20"/></name> <operator pos:line="135" pos:column="21">&lt;<pos:position pos:line="135" pos:column="25"/></operator> <literal type="number" pos:line="135" pos:column="23">32<pos:position pos:line="135" pos:column="25"/></literal></expr>;<pos:position pos:line="135" pos:column="26"/></condition> <incr><expr><name pos:line="135" pos:column="27">c<pos:position pos:line="135" pos:column="28"/></name><operator pos:line="135" pos:column="28">++<pos:position pos:line="135" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="135" pos:column="31"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="136" pos:column="9">start_bits<pos:position pos:line="136" pos:column="19"/></name><index pos:line="136" pos:column="19">[<expr><name pos:line="136" pos:column="20">c<pos:position pos:line="136" pos:column="21"/></name></expr>]<pos:position pos:line="136" pos:column="22"/></index></name> <operator pos:line="136" pos:column="23">|=<pos:position pos:line="136" pos:column="25"/></operator> <name><name pos:line="136" pos:column="26">cd<pos:position pos:line="136" pos:column="28"/></name><operator pos:line="136" pos:column="28">-&gt;<pos:position pos:line="136" pos:column="33"/></operator><name pos:line="136" pos:column="30">cbits<pos:position pos:line="136" pos:column="35"/></name><index pos:line="136" pos:column="35">[<expr><name pos:line="136" pos:column="36">c<pos:position pos:line="136" pos:column="37"/></name><operator pos:line="136" pos:column="37">+<pos:position pos:line="136" pos:column="38"/></operator><name pos:line="136" pos:column="38">cbit_word<pos:position pos:line="136" pos:column="47"/></name></expr>]<pos:position pos:line="136" pos:column="48"/></index></name></expr>;<pos:position pos:line="136" pos:column="49"/></expr_stmt></block></for>
      <expr_stmt><expr><name pos:line="137" pos:column="7">try_next<pos:position pos:line="137" pos:column="15"/></name> <operator pos:line="137" pos:column="16">=<pos:position pos:line="137" pos:column="17"/></operator> <name pos:line="137" pos:column="18">FALSE<pos:position pos:line="137" pos:column="23"/></name></expr>;<pos:position pos:line="137" pos:column="24"/></expr_stmt>
      <break pos:line="138" pos:column="7">break;<pos:position pos:line="138" pos:column="13"/></break>

      <comment type="block" pos:line="140" pos:column="7">/* One or more character type fudges the pointer and restarts, knowing
      it will hit a single character type and stop there. */</comment>

      <case pos:line="143" pos:column="7">case <expr><name pos:line="143" pos:column="12">OP_TYPEPLUS<pos:position pos:line="143" pos:column="23"/></name></expr>:<pos:position pos:line="143" pos:column="24"/></case>
      <case pos:line="144" pos:column="7">case <expr><name pos:line="144" pos:column="12">OP_TYPEMINPLUS<pos:position pos:line="144" pos:column="26"/></name></expr>:<pos:position pos:line="144" pos:column="27"/></case>
      <expr_stmt><expr><name pos:line="145" pos:column="7">tcode<pos:position pos:line="145" pos:column="12"/></name><operator pos:line="145" pos:column="12">++<pos:position pos:line="145" pos:column="14"/></operator></expr>;<pos:position pos:line="145" pos:column="15"/></expr_stmt>
      <break pos:line="146" pos:column="7">break;<pos:position pos:line="146" pos:column="13"/></break>

      <case pos:line="148" pos:column="7">case <expr><name pos:line="148" pos:column="12">OP_TYPEEXACT<pos:position pos:line="148" pos:column="24"/></name></expr>:<pos:position pos:line="148" pos:column="25"/></case>
      <expr_stmt><expr><name pos:line="149" pos:column="7">tcode<pos:position pos:line="149" pos:column="12"/></name> <operator pos:line="149" pos:column="13">+=<pos:position pos:line="149" pos:column="15"/></operator> <literal type="number" pos:line="149" pos:column="16">3<pos:position pos:line="149" pos:column="17"/></literal></expr>;<pos:position pos:line="149" pos:column="18"/></expr_stmt>
      <break pos:line="150" pos:column="7">break;<pos:position pos:line="150" pos:column="13"/></break>

      <comment type="block" pos:line="152" pos:column="7">/* Zero or more repeats of character types set the bits and then
      try again. */</comment>

      <case pos:line="155" pos:column="7">case <expr><name pos:line="155" pos:column="12">OP_TYPEUPTO<pos:position pos:line="155" pos:column="23"/></name></expr>:<pos:position pos:line="155" pos:column="24"/></case>
      <case pos:line="156" pos:column="7">case <expr><name pos:line="156" pos:column="12">OP_TYPEMINUPTO<pos:position pos:line="156" pos:column="26"/></name></expr>:<pos:position pos:line="156" pos:column="27"/></case>
      <expr_stmt><expr><name pos:line="157" pos:column="7">tcode<pos:position pos:line="157" pos:column="12"/></name> <operator pos:line="157" pos:column="13">+=<pos:position pos:line="157" pos:column="15"/></operator> <literal type="number" pos:line="157" pos:column="16">2<pos:position pos:line="157" pos:column="17"/></literal></expr>;<pos:position pos:line="157" pos:column="18"/></expr_stmt>               <comment type="block" pos:line="157" pos:column="33">/* Fall through */</comment>

      <case pos:line="159" pos:column="7">case <expr><name pos:line="159" pos:column="12">OP_TYPESTAR<pos:position pos:line="159" pos:column="23"/></name></expr>:<pos:position pos:line="159" pos:column="24"/></case>
      <case pos:line="160" pos:column="7">case <expr><name pos:line="160" pos:column="12">OP_TYPEMINSTAR<pos:position pos:line="160" pos:column="26"/></name></expr>:<pos:position pos:line="160" pos:column="27"/></case>
      <case pos:line="161" pos:column="7">case <expr><name pos:line="161" pos:column="12">OP_TYPEQUERY<pos:position pos:line="161" pos:column="24"/></name></expr>:<pos:position pos:line="161" pos:column="25"/></case>
      <case pos:line="162" pos:column="7">case <expr><name pos:line="162" pos:column="12">OP_TYPEMINQUERY<pos:position pos:line="162" pos:column="27"/></name></expr>:<pos:position pos:line="162" pos:column="28"/></case></block></switch></block></else></if></block></while></block></do></block></function>
    </unit>

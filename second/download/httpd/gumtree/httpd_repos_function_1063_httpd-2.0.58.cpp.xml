<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1063_httpd-2.0.58.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">set_encoding_quality<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">negotiation_state<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">neg<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">var_rec<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">variant<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">accept_rec<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">accept_recs<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">enc<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name><name pos:line="4" pos:column="23">variant<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">-&gt;<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="32">content_encoding<pos:position pos:line="4" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">accept_rec<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">star<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">NULL<pos:position pos:line="5" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">float<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">value_if_not_found<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><literal type="number" pos:line="6" pos:column="32">0.0f<pos:position pos:line="6" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name><name pos:line="9" pos:column="10">neg<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">accept_encodings<pos:position pos:line="9" pos:column="31"/></name></name></expr>)<pos:position pos:line="9" pos:column="32"/></condition><then pos:line="9" pos:column="32"> <block pos:line="9" pos:column="33">{
        <comment type="block" pos:line="10" pos:column="9">/* We had no Accept-Encoding header, assume that all
         * encodings are acceptable with a low quality,
         * but we prefer no encoding if available.
         */</comment>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">enc<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">||<pos:position pos:line="14" pos:column="20"/></operator> <call><name pos:line="14" pos:column="21">is_identity_encoding<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">(<argument><expr><name pos:line="14" pos:column="42">enc<pos:position pos:line="14" pos:column="45"/></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="47"/></condition><then pos:line="14" pos:column="47">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="13">variant<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">encoding_quality<pos:position pos:line="15" pos:column="38"/></name></name> <operator pos:line="15" pos:column="39">=<pos:position pos:line="15" pos:column="40"/></operator> <literal type="number" pos:line="15" pos:column="41">1.0f<pos:position pos:line="15" pos:column="45"/></literal></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt></block></then>
        <else pos:line="16" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="13">variant<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">encoding_quality<pos:position pos:line="17" pos:column="38"/></name></name> <operator pos:line="17" pos:column="39">=<pos:position pos:line="17" pos:column="40"/></operator> <literal type="number" pos:line="17" pos:column="41">0.5f<pos:position pos:line="17" pos:column="45"/></literal></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt></block></else></if>

        <return pos:line="19" pos:column="9">return;<pos:position pos:line="19" pos:column="16"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">enc<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">||<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">is_identity_encoding<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">enc<pos:position pos:line="22" pos:column="41"/></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="43"/></condition><then pos:line="22" pos:column="43"> <block pos:line="22" pos:column="44">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">enc<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <literal type="string" pos:line="23" pos:column="15">"identity"<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="24" pos:column="9">value_if_not_found<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <literal type="number" pos:line="24" pos:column="30">0.0001f<pos:position pos:line="24" pos:column="37"/></literal></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="27" pos:column="5">accept_recs<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <operator pos:line="27" pos:column="19">(<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="20">accept_rec<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">*<pos:position pos:line="27" pos:column="32"/></operator><operator pos:line="27" pos:column="32">)<pos:position pos:line="27" pos:column="33"/></operator> <name><name pos:line="27" pos:column="34">neg<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">accept_encodings<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">-&gt;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="57">elts<pos:position pos:line="27" pos:column="61"/></name></name></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>

    <comment type="block" pos:line="29" pos:column="5">/* Go through each of the encodings on the Accept-Encoding: header,
     * looking for a match with our encoding. x- prefixes are ignored.
     */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">enc<pos:position pos:line="32" pos:column="12"/></name><index pos:line="32" pos:column="12">[<expr><literal type="number" pos:line="32" pos:column="13">0<pos:position pos:line="32" pos:column="14"/></literal></expr>]<pos:position pos:line="32" pos:column="15"/></index></name> <operator pos:line="32" pos:column="16">==<pos:position pos:line="32" pos:column="18"/></operator> <literal type="char" pos:line="32" pos:column="19">'x'<pos:position pos:line="32" pos:column="22"/></literal> <operator pos:line="32" pos:column="23">&amp;&amp;<pos:position pos:line="32" pos:column="33"/></operator> <name><name pos:line="32" pos:column="26">enc<pos:position pos:line="32" pos:column="29"/></name><index pos:line="32" pos:column="29">[<expr><literal type="number" pos:line="32" pos:column="30">1<pos:position pos:line="32" pos:column="31"/></literal></expr>]<pos:position pos:line="32" pos:column="32"/></index></name> <operator pos:line="32" pos:column="33">==<pos:position pos:line="32" pos:column="35"/></operator> <literal type="char" pos:line="32" pos:column="36">'-'<pos:position pos:line="32" pos:column="39"/></literal></expr>)<pos:position pos:line="32" pos:column="40"/></condition><then pos:line="32" pos:column="40"> <block pos:line="32" pos:column="41">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">enc<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">+=<pos:position pos:line="33" pos:column="15"/></operator> <literal type="number" pos:line="33" pos:column="16">2<pos:position pos:line="33" pos:column="17"/></literal></expr>;<pos:position pos:line="33" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <for pos:line="35" pos:column="5">for <control pos:line="35" pos:column="9">(<init><expr><name pos:line="35" pos:column="10">i<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <literal type="number" pos:line="35" pos:column="14">0<pos:position pos:line="35" pos:column="15"/></literal></expr>;<pos:position pos:line="35" pos:column="16"/></init> <condition><expr><name pos:line="35" pos:column="17">i<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">&lt;<pos:position pos:line="35" pos:column="23"/></operator> <name><name pos:line="35" pos:column="21">neg<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">-&gt;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="26">accept_encodings<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">-&gt;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="44">nelts<pos:position pos:line="35" pos:column="49"/></name></name></expr>;<pos:position pos:line="35" pos:column="50"/></condition> <incr><expr><operator pos:line="35" pos:column="51">++<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="53">i<pos:position pos:line="35" pos:column="54"/></name></expr></incr>)<pos:position pos:line="35" pos:column="55"/></control> <block pos:line="35" pos:column="56">{

        <decl_stmt><decl><type><name pos:line="37" pos:column="9">char<pos:position pos:line="37" pos:column="13"/></name> <modifier pos:line="37" pos:column="14">*<pos:position pos:line="37" pos:column="15"/></modifier></type><name pos:line="37" pos:column="15">name<pos:position pos:line="37" pos:column="19"/></name> <init pos:line="37" pos:column="20">= <expr><name><name pos:line="37" pos:column="22">accept_recs<pos:position pos:line="37" pos:column="33"/></name><index pos:line="37" pos:column="33">[<expr><name pos:line="37" pos:column="34">i<pos:position pos:line="37" pos:column="35"/></name></expr>]<pos:position pos:line="37" pos:column="36"/></index></name><operator pos:line="37" pos:column="36">.<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="37">name<pos:position pos:line="37" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="37" pos:column="42"/></decl_stmt>

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name><name pos:line="39" pos:column="13">name<pos:position pos:line="39" pos:column="17"/></name><index pos:line="39" pos:column="17">[<expr><literal type="number" pos:line="39" pos:column="18">0<pos:position pos:line="39" pos:column="19"/></literal></expr>]<pos:position pos:line="39" pos:column="20"/></index></name> <operator pos:line="39" pos:column="21">==<pos:position pos:line="39" pos:column="23"/></operator> <literal type="char" pos:line="39" pos:column="24">'x'<pos:position pos:line="39" pos:column="27"/></literal> <operator pos:line="39" pos:column="28">&amp;&amp;<pos:position pos:line="39" pos:column="38"/></operator> <name><name pos:line="39" pos:column="31">name<pos:position pos:line="39" pos:column="35"/></name><index pos:line="39" pos:column="35">[<expr><literal type="number" pos:line="39" pos:column="36">1<pos:position pos:line="39" pos:column="37"/></literal></expr>]<pos:position pos:line="39" pos:column="38"/></index></name> <operator pos:line="39" pos:column="39">==<pos:position pos:line="39" pos:column="41"/></operator> <literal type="char" pos:line="39" pos:column="42">'-'<pos:position pos:line="39" pos:column="45"/></literal></expr>)<pos:position pos:line="39" pos:column="46"/></condition><then pos:line="39" pos:column="46"> <block pos:line="39" pos:column="47">{
            <expr_stmt><expr><name pos:line="40" pos:column="13">name<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">+=<pos:position pos:line="40" pos:column="20"/></operator> <literal type="number" pos:line="40" pos:column="21">2<pos:position pos:line="40" pos:column="22"/></literal></expr>;<pos:position pos:line="40" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>

        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><call><name pos:line="43" pos:column="14">strcmp<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><name pos:line="43" pos:column="21">name<pos:position pos:line="43" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="27">enc<pos:position pos:line="43" pos:column="30"/></name></expr></argument>)<pos:position pos:line="43" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="32"/></condition><then pos:line="43" pos:column="32"> <block pos:line="43" pos:column="33">{
            <expr_stmt><expr><name><name pos:line="44" pos:column="13">variant<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">-&gt;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="22">encoding_quality<pos:position pos:line="44" pos:column="38"/></name></name> <operator pos:line="44" pos:column="39">=<pos:position pos:line="44" pos:column="40"/></operator> <name><name pos:line="44" pos:column="41">accept_recs<pos:position pos:line="44" pos:column="52"/></name><index pos:line="44" pos:column="52">[<expr><name pos:line="44" pos:column="53">i<pos:position pos:line="44" pos:column="54"/></name></expr>]<pos:position pos:line="44" pos:column="55"/></index></name><operator pos:line="44" pos:column="55">.<pos:position pos:line="44" pos:column="56"/></operator><name pos:line="44" pos:column="56">quality<pos:position pos:line="44" pos:column="63"/></name></expr>;<pos:position pos:line="44" pos:column="64"/></expr_stmt>
            <return pos:line="45" pos:column="13">return;<pos:position pos:line="45" pos:column="20"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>

        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><call><name pos:line="48" pos:column="13">strcmp<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><name pos:line="48" pos:column="20">name<pos:position pos:line="48" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="26">"*"<pos:position pos:line="48" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="30"/></argument_list></call> <operator pos:line="48" pos:column="31">==<pos:position pos:line="48" pos:column="33"/></operator> <literal type="number" pos:line="48" pos:column="34">0<pos:position pos:line="48" pos:column="35"/></literal></expr>)<pos:position pos:line="48" pos:column="36"/></condition><then pos:line="48" pos:column="36"> <block pos:line="48" pos:column="37">{
            <expr_stmt><expr><name pos:line="49" pos:column="13">star<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">=<pos:position pos:line="49" pos:column="19"/></operator> <operator pos:line="49" pos:column="20">&amp;<pos:position pos:line="49" pos:column="25"/></operator><name><name pos:line="49" pos:column="21">accept_recs<pos:position pos:line="49" pos:column="32"/></name><index pos:line="49" pos:column="32">[<expr><name pos:line="49" pos:column="33">i<pos:position pos:line="49" pos:column="34"/></name></expr>]<pos:position pos:line="49" pos:column="35"/></index></name></expr>;<pos:position pos:line="49" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>

    }<pos:position pos:line="52" pos:column="6"/></block></for>
    <comment type="block" pos:line="53" pos:column="5">/* No explicit match */</comment>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">star<pos:position pos:line="54" pos:column="13"/></name></expr>)<pos:position pos:line="54" pos:column="14"/></condition><then pos:line="54" pos:column="14"> <block pos:line="54" pos:column="15">{
        <expr_stmt><expr><name><name pos:line="55" pos:column="9">variant<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">-&gt;<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="18">encoding_quality<pos:position pos:line="55" pos:column="34"/></name></name> <operator pos:line="55" pos:column="35">=<pos:position pos:line="55" pos:column="36"/></operator> <name><name pos:line="55" pos:column="37">star<pos:position pos:line="55" pos:column="41"/></name><operator pos:line="55" pos:column="41">-&gt;<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="43">quality<pos:position pos:line="55" pos:column="50"/></name></name></expr>;<pos:position pos:line="55" pos:column="51"/></expr_stmt>
        <return pos:line="56" pos:column="9">return;<pos:position pos:line="56" pos:column="16"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="59" pos:column="5">/* Encoding not found on Accept-Encoding: header, so it is
     * _not_ acceptable unless it is the identity (no encoding)
     */</comment>
    <expr_stmt><expr><name><name pos:line="62" pos:column="5">variant<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">encoding_quality<pos:position pos:line="62" pos:column="30"/></name></name> <operator pos:line="62" pos:column="31">=<pos:position pos:line="62" pos:column="32"/></operator> <name pos:line="62" pos:column="33">value_if_not_found<pos:position pos:line="62" pos:column="51"/></name></expr>;<pos:position pos:line="62" pos:column="52"/></expr_stmt>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

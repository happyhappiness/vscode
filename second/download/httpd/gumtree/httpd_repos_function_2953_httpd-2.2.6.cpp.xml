<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2953_httpd-2.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_array_header_t<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">sort_hook<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">apr_array_header_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">pHooks<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
				     <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">szName<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_pool_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">p<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">TSort<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">pSort<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_array_header_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">pNew<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">n<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">apr_pool_create<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><operator pos:line="9" pos:column="21">&amp;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="22">p<pos:position pos:line="9" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="25">apr_hook_global_pool<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">pSort<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator><call><name pos:line="10" pos:column="11">prepare<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">p<pos:position pos:line="10" pos:column="20"/></name></expr></argument>,<argument><expr><operator pos:line="10" pos:column="21">(<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">TSortData<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">*<pos:position pos:line="10" pos:column="33"/></operator><operator pos:line="10" pos:column="33">)<pos:position pos:line="10" pos:column="34"/></operator><name><name pos:line="10" pos:column="34">pHooks<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">-&gt;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="42">elts<pos:position pos:line="10" pos:column="46"/></name></name></expr></argument>,<argument><expr><name><name pos:line="10" pos:column="47">pHooks<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">-&gt;<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="55">nelts<pos:position pos:line="10" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">pSort<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator><call><name pos:line="11" pos:column="11">tsort<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">pSort<pos:position pos:line="11" pos:column="22"/></name></expr></argument>,<argument><expr><name><name pos:line="11" pos:column="23">pHooks<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">-&gt;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="31">nelts<pos:position pos:line="11" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">pNew<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator><call><name pos:line="12" pos:column="10">apr_array_make<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">apr_hook_global_pool<pos:position pos:line="12" pos:column="45"/></name></expr></argument>,<argument><expr><name><name pos:line="12" pos:column="46">pHooks<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">-&gt;<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="54">nelts<pos:position pos:line="12" pos:column="59"/></name></name></expr></argument>,<argument><expr><sizeof pos:line="12" pos:column="60">sizeof<argument_list pos:line="12" pos:column="66">(<argument><expr><name pos:line="12" pos:column="67">TSortData<pos:position pos:line="12" pos:column="76"/></name></expr></argument>)<pos:position pos:line="12" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="79"/></expr_stmt>
    <if pos:line="13" pos:column="5">if<condition pos:line="13" pos:column="7">(<expr><name pos:line="13" pos:column="8">apr_hook_debug_enabled<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="9">printf<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="string" pos:line="14" pos:column="16">"Sorting %s:"<pos:position pos:line="14" pos:column="29"/></literal></expr></argument>,<argument><expr><name pos:line="14" pos:column="30">szName<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt></block></then></if>
    <for pos:line="15" pos:column="5">for<control pos:line="15" pos:column="8">(<init><expr><name pos:line="15" pos:column="9">n<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator><literal type="number" pos:line="15" pos:column="11">0<pos:position pos:line="15" pos:column="12"/></literal></expr> ;<pos:position pos:line="15" pos:column="14"/></init> <condition><expr><name pos:line="15" pos:column="15">pSort<pos:position pos:line="15" pos:column="20"/></name></expr> ;<pos:position pos:line="15" pos:column="22"/></condition> <incr><expr><name pos:line="15" pos:column="23">pSort<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">=<pos:position pos:line="15" pos:column="29"/></operator><name><name pos:line="15" pos:column="29">pSort<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">pNext<pos:position pos:line="15" pos:column="41"/></name></name></expr><operator pos:line="15" pos:column="41">,<pos:position pos:line="15" pos:column="42"/></operator><expr><operator pos:line="15" pos:column="42">++<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="44">n<pos:position pos:line="15" pos:column="45"/></name></expr></incr>)<pos:position pos:line="15" pos:column="46"/></control> <block pos:line="15" pos:column="47">{
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">TSortData<pos:position pos:line="16" pos:column="18"/></name> <modifier pos:line="16" pos:column="19">*<pos:position pos:line="16" pos:column="20"/></modifier></type><name pos:line="16" pos:column="20">pHook<pos:position pos:line="16" pos:column="25"/></name></decl>;<pos:position pos:line="16" pos:column="26"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">assert<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">n<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">&lt;<pos:position pos:line="17" pos:column="22"/></operator> <name><name pos:line="17" pos:column="20">pHooks<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">-&gt;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="28">nelts<pos:position pos:line="17" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">pHook<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator><call><name pos:line="18" pos:column="15">apr_array_push<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">pNew<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">memcpy<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">pHook<pos:position pos:line="19" pos:column="21"/></name></expr></argument>,<argument><expr><name><name pos:line="19" pos:column="22">pSort<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">pData<pos:position pos:line="19" pos:column="34"/></name></name></expr></argument>,<argument><expr><sizeof pos:line="19" pos:column="35">sizeof <name><pos:position pos:line="19" pos:column="42"/></name></sizeof>*<name pos:line="19" pos:column="43">pHook<pos:position pos:line="19" pos:column="48"/></name></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
	<if pos:line="20" pos:column="9">if<condition pos:line="20" pos:column="11">(<expr><name pos:line="20" pos:column="12">apr_hook_debug_enabled<pos:position pos:line="20" pos:column="34"/></name></expr>)<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="13">printf<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><literal type="string" pos:line="21" pos:column="20">" %s"<pos:position pos:line="21" pos:column="25"/></literal></expr></argument>,<argument><expr><name><name pos:line="21" pos:column="26">pHook<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">szName<pos:position pos:line="21" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></for>
    <if pos:line="23" pos:column="5">if<condition pos:line="23" pos:column="7">(<expr><name pos:line="23" pos:column="8">apr_hook_debug_enabled<pos:position pos:line="23" pos:column="30"/></name></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="9">fputc<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><literal type="char" pos:line="24" pos:column="15">'\n'<pos:position pos:line="24" pos:column="19"/></literal></expr></argument>,<argument><expr><name pos:line="24" pos:column="20">stdout<pos:position pos:line="24" pos:column="26"/></name></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt></block></then></if>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">pNew<pos:position pos:line="25" pos:column="16"/></name></expr>;<pos:position pos:line="25" pos:column="17"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3886_httpd-2.4.20.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ap_expr_yylex_init<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">yyscan_t<pos:position pos:line="1" pos:column="32"/></name><modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type> <name pos:line="1" pos:column="34">ptr_yy_globals<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>

<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">ptr_yy_globals<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">==<pos:position pos:line="4" pos:column="26"/></operator> <name pos:line="4" pos:column="27">NULL<pos:position pos:line="4" pos:column="31"/></name></expr>)<pos:position pos:line="4" pos:column="32"/></condition><then><block pos:line="4" pos:column="32">{
        <expr_stmt><expr><name pos:line="5" pos:column="9">errno<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">=<pos:position pos:line="5" pos:column="16"/></operator> <name pos:line="5" pos:column="17">EINVAL<pos:position pos:line="5" pos:column="23"/></name></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>
        <return pos:line="6" pos:column="9">return <expr><literal type="number" pos:line="6" pos:column="16">1<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="9" pos:column="5">*<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">ptr_yy_globals<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <operator pos:line="9" pos:column="23">(<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">yyscan_t<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">)<pos:position pos:line="9" pos:column="33"/></operator> <call><name pos:line="9" pos:column="34">ap_expr_yyalloc<pos:position pos:line="9" pos:column="49"/></name> <argument_list pos:line="9" pos:column="50">( <argument><expr><sizeof pos:line="9" pos:column="52">sizeof<argument_list pos:line="9" pos:column="58">( <argument><expr pos:line="9" pos:column="60">struct <name pos:line="9" pos:column="67">yyguts_t<pos:position pos:line="9" pos:column="75"/></name></expr></argument> )<pos:position pos:line="9" pos:column="77"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="9" pos:column="79">NULL<pos:position pos:line="9" pos:column="83"/></name></expr></argument> )<pos:position pos:line="9" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="86"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">ptr_yy_globals<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">==<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="28">NULL<pos:position pos:line="11" pos:column="32"/></name></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then><block pos:line="11" pos:column="33">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">errno<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">ENOMEM<pos:position pos:line="12" pos:column="23"/></name></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="16" pos:column="5">/* By setting to 0xAA, we expose bugs in yy_init_globals. Leave at 0x00 for releases. */</comment>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">memset<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><operator pos:line="17" pos:column="12">*<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">ptr_yy_globals<pos:position pos:line="17" pos:column="27"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="17" pos:column="28">0x00<pos:position pos:line="17" pos:column="32"/></literal></expr></argument>,<argument><expr><sizeof pos:line="17" pos:column="33">sizeof<argument_list pos:line="17" pos:column="39">(<argument><expr pos:line="17" pos:column="40">struct <name pos:line="17" pos:column="47">yyguts_t<pos:position pos:line="17" pos:column="55"/></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>

    <return pos:line="19" pos:column="5">return <expr><call><name pos:line="19" pos:column="12">yy_init_globals<pos:position pos:line="19" pos:column="27"/></name> <argument_list pos:line="19" pos:column="28">( <argument><expr><operator pos:line="19" pos:column="30">*<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="31">ptr_yy_globals<pos:position pos:line="19" pos:column="45"/></name></expr></argument> )<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="48"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

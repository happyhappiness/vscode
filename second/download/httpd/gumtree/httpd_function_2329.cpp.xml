<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2329.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">mpm_service_uninstall<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">void<pos:position pos:line="1" pos:column="40"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">key_name<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><name pos:line="3" pos:column="19">MAX_PATH<pos:position pos:line="3" pos:column="27"/></name></expr>]<pos:position pos:line="3" pos:column="28"/></index></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">osver<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">.<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">dwPlatformId<pos:position pos:line="6" pos:column="27"/></name></name> <operator pos:line="6" pos:column="28">==<pos:position pos:line="6" pos:column="30"/></operator> <name pos:line="6" pos:column="31">VER_PLATFORM_WIN32_NT<pos:position pos:line="6" pos:column="52"/></name></expr>)<pos:position pos:line="6" pos:column="53"/></condition><then pos:line="6" pos:column="53">
    <block pos:line="7" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">SC_HANDLE<pos:position pos:line="8" pos:column="18"/></name></type> <name pos:line="8" pos:column="19">schService<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">SC_HANDLE<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">schSCManager<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="11" pos:column="9">fprintf<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">stderr<pos:position pos:line="11" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="11" pos:column="24">"Removing the %s service\n"<pos:position pos:line="11" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="53">mpm_display_name<pos:position pos:line="11" pos:column="69"/></name></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="71"/></expr_stmt>

        <expr_stmt><expr><name pos:line="13" pos:column="9">schSCManager<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <call><name pos:line="13" pos:column="24">OpenSCManager<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">NULL<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="44">NULL<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <comment type="block" pos:line="13" pos:column="50">/* local, default database */</comment>
                                     <argument><expr><name pos:line="14" pos:column="38">SC_MANAGER_CONNECT<pos:position pos:line="14" pos:column="56"/></name></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="58"/></expr_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">schSCManager<pos:position pos:line="15" pos:column="26"/></name></expr>)<pos:position pos:line="15" pos:column="27"/></condition><then pos:line="15" pos:column="27"> <block pos:line="15" pos:column="28">{
            <expr_stmt><expr><name pos:line="16" pos:column="13">rv<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">apr_get_os_error<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">()<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">ap_log_error<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">APLOG_MARK<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">APLOG_ERR<pos:position pos:line="17" pos:column="47"/></name> <operator pos:line="17" pos:column="48">|<pos:position pos:line="17" pos:column="49"/></operator> <name pos:line="17" pos:column="50">APLOG_STARTUP<pos:position pos:line="17" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="65">rv<pos:position pos:line="17" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="69">NULL<pos:position pos:line="17" pos:column="73"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="18" pos:column="26">"Failed to open the WinNT service manager."<pos:position pos:line="18" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="71"/></expr_stmt>
            <return pos:line="19" pos:column="13">return <expr><operator pos:line="19" pos:column="20">(<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">rv<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">)<pos:position pos:line="19" pos:column="24"/></operator></expr>;<pos:position pos:line="19" pos:column="25"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>

<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><name pos:line="22" pos:column="5">APR_HAS_UNICODE_FS<pos:position pos:line="22" pos:column="23"/></name></expr></cpp:if>
        <macro><name pos:line="23" pos:column="9">IF_WIN_OS_IS_UNICODE<pos:position pos:line="23" pos:column="29"/></name></macro>
        <block pos:line="24" pos:column="9">{
            <expr_stmt><expr><name pos:line="25" pos:column="13">schService<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <call><name pos:line="25" pos:column="26">OpenServiceW<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">(<argument><expr><name pos:line="25" pos:column="39">schSCManager<pos:position pos:line="25" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="53">mpm_service_name_w<pos:position pos:line="25" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="73">DELETE<pos:position pos:line="25" pos:column="79"/></name></expr></argument>)<pos:position pos:line="25" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="81"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="27" pos:column="8">/* APR_HAS_UNICODE_FS */</comment>
<cpp:if pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">if<pos:position pos:line="28" pos:column="4"/></cpp:directive> <expr><name pos:line="28" pos:column="5">APR_HAS_ANSI_FS<pos:position pos:line="28" pos:column="20"/></name></expr></cpp:if>
        <macro><name pos:line="29" pos:column="9">ELSE_WIN_OS_IS_ANSI<pos:position pos:line="29" pos:column="28"/></name></macro>
        <block pos:line="30" pos:column="9">{
            <expr_stmt><expr><name pos:line="31" pos:column="13">schService<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <call><name pos:line="31" pos:column="26">OpenService<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">schSCManager<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="52">mpm_service_name<pos:position pos:line="31" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="70">DELETE<pos:position pos:line="31" pos:column="76"/></name></expr></argument>)<pos:position pos:line="31" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">schService<pos:position pos:line="34" pos:column="24"/></name></expr>)<pos:position pos:line="34" pos:column="25"/></condition><then pos:line="34" pos:column="25"> <block pos:line="34" pos:column="26">{
           <expr_stmt><expr><name pos:line="35" pos:column="12">rv<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <call><name pos:line="35" pos:column="17">apr_get_os_error<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">()<pos:position pos:line="35" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>
           <expr_stmt><expr><call><name pos:line="36" pos:column="12">ap_log_error<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">APLOG_MARK<pos:position pos:line="36" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="37">APLOG_ERR<pos:position pos:line="36" pos:column="46"/></name> <operator pos:line="36" pos:column="47">|<pos:position pos:line="36" pos:column="48"/></operator> <name pos:line="36" pos:column="49">APLOG_STARTUP<pos:position pos:line="36" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="64">rv<pos:position pos:line="36" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="68">NULL<pos:position pos:line="36" pos:column="72"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="37" pos:column="25">"%s: OpenService failed"<pos:position pos:line="37" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="51">mpm_display_name<pos:position pos:line="37" pos:column="67"/></name></expr></argument>)<pos:position pos:line="37" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="69"/></expr_stmt>
           <return pos:line="38" pos:column="12">return <expr><operator pos:line="38" pos:column="19">(<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">rv<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">)<pos:position pos:line="38" pos:column="23"/></operator></expr>;<pos:position pos:line="38" pos:column="24"/></return>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="41" pos:column="9">/* assure the service is stopped before continuing
         *
         * This may be out of order... we might not be able to be
         * granted all access if the service is running anyway.
         *
         * And do we want to make it *this easy* for them
         * to uninstall their service unintentionally?
         */</comment>
        <comment type="line" pos:line="49" pos:column="9">// ap_stop_service(schService);</comment>

        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><call><name pos:line="51" pos:column="13">DeleteService<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">schService<pos:position pos:line="51" pos:column="37"/></name></expr></argument>)<pos:position pos:line="51" pos:column="38"/></argument_list></call> <operator pos:line="51" pos:column="39">==<pos:position pos:line="51" pos:column="41"/></operator> <literal type="number" pos:line="51" pos:column="42">0<pos:position pos:line="51" pos:column="43"/></literal></expr>)<pos:position pos:line="51" pos:column="44"/></condition><then pos:line="51" pos:column="44"> <block pos:line="51" pos:column="45">{
            <expr_stmt><expr><name pos:line="52" pos:column="13">rv<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <call><name pos:line="52" pos:column="18">apr_get_os_error<pos:position pos:line="52" pos:column="34"/></name><argument_list pos:line="52" pos:column="34">()<pos:position pos:line="52" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">ap_log_error<pos:position pos:line="53" pos:column="25"/></name><argument_list pos:line="53" pos:column="25">(<argument><expr><name pos:line="53" pos:column="26">APLOG_MARK<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="38">APLOG_ERR<pos:position pos:line="53" pos:column="47"/></name> <operator pos:line="53" pos:column="48">|<pos:position pos:line="53" pos:column="49"/></operator> <name pos:line="53" pos:column="50">APLOG_STARTUP<pos:position pos:line="53" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="65">rv<pos:position pos:line="53" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="69">NULL<pos:position pos:line="53" pos:column="73"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="54" pos:column="26">"%s: Failed to delete the service."<pos:position pos:line="54" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="63">mpm_display_name<pos:position pos:line="54" pos:column="79"/></name></expr></argument>)<pos:position pos:line="54" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="81"/></expr_stmt>
            <return pos:line="55" pos:column="13">return <expr><operator pos:line="55" pos:column="20">(<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="21">rv<pos:position pos:line="55" pos:column="23"/></name><operator pos:line="55" pos:column="23">)<pos:position pos:line="55" pos:column="24"/></operator></expr>;<pos:position pos:line="55" pos:column="25"/></return>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="58" pos:column="9">CloseServiceHandle<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><name pos:line="58" pos:column="28">schService<pos:position pos:line="58" pos:column="38"/></name></expr></argument>)<pos:position pos:line="58" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">CloseServiceHandle<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><name pos:line="59" pos:column="28">schSCManager<pos:position pos:line="59" pos:column="40"/></name></expr></argument>)<pos:position pos:line="59" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then>
    <else pos:line="61" pos:column="5">else <comment type="block" pos:line="61" pos:column="10">/* osver.dwPlatformId != VER_PLATFORM_WIN32_NT */</comment>
    <block pos:line="62" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="63" pos:column="9">apr_status_t<pos:position pos:line="63" pos:column="21"/></name></type> <name pos:line="63" pos:column="22">rv2<pos:position pos:line="63" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="63" pos:column="27">rv3<pos:position pos:line="63" pos:column="30"/></name></decl>;<pos:position pos:line="63" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="64" pos:column="9">ap_regkey_t<pos:position pos:line="64" pos:column="20"/></name> <modifier pos:line="64" pos:column="21">*<pos:position pos:line="64" pos:column="22"/></modifier></type><name pos:line="64" pos:column="22">key<pos:position pos:line="64" pos:column="25"/></name></decl>;<pos:position pos:line="64" pos:column="26"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">fprintf<pos:position pos:line="65" pos:column="16"/></name><argument_list pos:line="65" pos:column="16">(<argument><expr><name pos:line="65" pos:column="17">stderr<pos:position pos:line="65" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="65" pos:column="24">"Removing the %s service\n"<pos:position pos:line="65" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="53">mpm_display_name<pos:position pos:line="65" pos:column="69"/></name></expr></argument>)<pos:position pos:line="65" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="71"/></expr_stmt>

        <comment type="block" pos:line="67" pos:column="9">/* TODO: assure the service is stopped before continuing */</comment>

        <expr_stmt><expr><name pos:line="69" pos:column="9">rv<pos:position pos:line="69" pos:column="11"/></name> <operator pos:line="69" pos:column="12">=<pos:position pos:line="69" pos:column="13"/></operator> <call><name pos:line="69" pos:column="14">ap_regkey_open<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><operator pos:line="69" pos:column="29">&amp;<pos:position pos:line="69" pos:column="34"/></operator><name pos:line="69" pos:column="30">key<pos:position pos:line="69" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="35">AP_REGKEY_LOCAL_MACHINE<pos:position pos:line="69" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="60">SERVICECONFIG9X<pos:position pos:line="69" pos:column="75"/></name></expr></argument>,
                            <argument><expr><name pos:line="70" pos:column="29">APR_READ<pos:position pos:line="70" pos:column="37"/></name> <operator pos:line="70" pos:column="38">|<pos:position pos:line="70" pos:column="39"/></operator> <name pos:line="70" pos:column="40">APR_WRITE<pos:position pos:line="70" pos:column="49"/></name> <operator pos:line="70" pos:column="50">|<pos:position pos:line="70" pos:column="51"/></operator> <name pos:line="70" pos:column="52">APR_CREATE<pos:position pos:line="70" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="64">pconf<pos:position pos:line="70" pos:column="69"/></name></expr></argument>)<pos:position pos:line="70" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="71"/></expr_stmt>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">rv<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">==<pos:position pos:line="71" pos:column="18"/></operator> <name pos:line="71" pos:column="19">APR_SUCCESS<pos:position pos:line="71" pos:column="30"/></name></expr>)<pos:position pos:line="71" pos:column="31"/></condition><then pos:line="71" pos:column="31"> <block pos:line="71" pos:column="32">{
            <expr_stmt><expr><name pos:line="72" pos:column="13">rv<pos:position pos:line="72" pos:column="15"/></name> <operator pos:line="72" pos:column="16">=<pos:position pos:line="72" pos:column="17"/></operator> <call><name pos:line="72" pos:column="18">ap_regkey_value_remove<pos:position pos:line="72" pos:column="40"/></name><argument_list pos:line="72" pos:column="40">(<argument><expr><name pos:line="72" pos:column="41">key<pos:position pos:line="72" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="46">mpm_service_name<pos:position pos:line="72" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="64">pconf<pos:position pos:line="72" pos:column="69"/></name></expr></argument>)<pos:position pos:line="72" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">ap_regkey_close<pos:position pos:line="73" pos:column="28"/></name><argument_list pos:line="73" pos:column="28">(<argument><expr><name pos:line="73" pos:column="29">key<pos:position pos:line="73" pos:column="32"/></name></expr></argument>)<pos:position pos:line="73" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if>
        <if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">rv<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">!=<pos:position pos:line="75" pos:column="18"/></operator> <name pos:line="75" pos:column="19">APR_SUCCESS<pos:position pos:line="75" pos:column="30"/></name></expr>)<pos:position pos:line="75" pos:column="31"/></condition><then pos:line="75" pos:column="31"> <block pos:line="75" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">ap_log_error<pos:position pos:line="76" pos:column="25"/></name><argument_list pos:line="76" pos:column="25">(<argument><expr><name pos:line="76" pos:column="26">APLOG_MARK<pos:position pos:line="76" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="38">APLOG_ERR<pos:position pos:line="76" pos:column="47"/></name> <operator pos:line="76" pos:column="48">|<pos:position pos:line="76" pos:column="49"/></operator> <name pos:line="76" pos:column="50">APLOG_STARTUP<pos:position pos:line="76" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="65">rv<pos:position pos:line="76" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="69">NULL<pos:position pos:line="76" pos:column="73"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="77" pos:column="26">"%s: Failed to remove the RunServices registry "<pos:position pos:line="77" pos:column="74"/></literal>
                         <literal type="string" pos:line="78" pos:column="26">"entry."<pos:position pos:line="78" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="36">mpm_display_name<pos:position pos:line="78" pos:column="52"/></name></expr></argument>)<pos:position pos:line="78" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="81" pos:column="9">/* we blast Services/us, not just the Services/us/Parameters branch */</comment>
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">apr_snprintf<pos:position pos:line="82" pos:column="21"/></name><argument_list pos:line="82" pos:column="21">(<argument><expr><name pos:line="82" pos:column="22">key_name<pos:position pos:line="82" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="82" pos:column="32">sizeof<argument_list pos:line="82" pos:column="38">(<argument><expr><name pos:line="82" pos:column="39">key_name<pos:position pos:line="82" pos:column="47"/></name></expr></argument>)<pos:position pos:line="82" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="82" pos:column="50">SERVICEPARAMS<pos:position pos:line="82" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="65">mpm_service_name<pos:position pos:line="82" pos:column="81"/></name></expr></argument>)<pos:position pos:line="82" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="83"/></expr_stmt>
        <expr_stmt><expr><name pos:line="83" pos:column="9">rv2<pos:position pos:line="83" pos:column="12"/></name> <operator pos:line="83" pos:column="13">=<pos:position pos:line="83" pos:column="14"/></operator> <call><name pos:line="83" pos:column="15">ap_regkey_remove<pos:position pos:line="83" pos:column="31"/></name><argument_list pos:line="83" pos:column="31">(<argument><expr><name pos:line="83" pos:column="32">AP_REGKEY_LOCAL_MACHINE<pos:position pos:line="83" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="57">key_name<pos:position pos:line="83" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="67">pconf<pos:position pos:line="83" pos:column="72"/></name></expr></argument>)<pos:position pos:line="83" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">apr_snprintf<pos:position pos:line="84" pos:column="21"/></name><argument_list pos:line="84" pos:column="21">(<argument><expr><name pos:line="84" pos:column="22">key_name<pos:position pos:line="84" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="32">sizeof<argument_list pos:line="84" pos:column="38">(<argument><expr><name pos:line="84" pos:column="39">key_name<pos:position pos:line="84" pos:column="47"/></name></expr></argument>)<pos:position pos:line="84" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="84" pos:column="50">SERVICECONFIG<pos:position pos:line="84" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="65">mpm_service_name<pos:position pos:line="84" pos:column="81"/></name></expr></argument>)<pos:position pos:line="84" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="83"/></expr_stmt>
        <expr_stmt><expr><name pos:line="85" pos:column="9">rv3<pos:position pos:line="85" pos:column="12"/></name> <operator pos:line="85" pos:column="13">=<pos:position pos:line="85" pos:column="14"/></operator> <call><name pos:line="85" pos:column="15">ap_regkey_remove<pos:position pos:line="85" pos:column="31"/></name><argument_list pos:line="85" pos:column="31">(<argument><expr><name pos:line="85" pos:column="32">AP_REGKEY_LOCAL_MACHINE<pos:position pos:line="85" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="57">key_name<pos:position pos:line="85" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="67">pconf<pos:position pos:line="85" pos:column="72"/></name></expr></argument>)<pos:position pos:line="85" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><name pos:line="86" pos:column="9">rv2<pos:position pos:line="86" pos:column="12"/></name> <operator pos:line="86" pos:column="13">=<pos:position pos:line="86" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="86" pos:column="15">(<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="16">rv2<pos:position pos:line="86" pos:column="19"/></name> <operator pos:line="86" pos:column="20">!=<pos:position pos:line="86" pos:column="22"/></operator> <name pos:line="86" pos:column="23">APR_SUCCESS<pos:position pos:line="86" pos:column="34"/></name><operator pos:line="86" pos:column="34">)<pos:position pos:line="86" pos:column="35"/></operator></expr> ?<pos:position pos:line="86" pos:column="37"/></condition><then pos:line="86" pos:column="37"> <expr><name pos:line="86" pos:column="38">rv2<pos:position pos:line="86" pos:column="41"/></name></expr> <pos:position pos:line="86" pos:column="42"/></then><else pos:line="86" pos:column="42">: <expr><name pos:line="86" pos:column="44">rv3<pos:position pos:line="86" pos:column="47"/></name></expr></else></ternary></expr>;<pos:position pos:line="86" pos:column="48"/></expr_stmt>
        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name pos:line="87" pos:column="13">rv2<pos:position pos:line="87" pos:column="16"/></name> <operator pos:line="87" pos:column="17">!=<pos:position pos:line="87" pos:column="19"/></operator> <name pos:line="87" pos:column="20">APR_SUCCESS<pos:position pos:line="87" pos:column="31"/></name></expr>)<pos:position pos:line="87" pos:column="32"/></condition><then pos:line="87" pos:column="32"> <block pos:line="87" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="88" pos:column="13">ap_log_error<pos:position pos:line="88" pos:column="25"/></name><argument_list pos:line="88" pos:column="25">(<argument><expr><name pos:line="88" pos:column="26">APLOG_MARK<pos:position pos:line="88" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="38">APLOG_ERR<pos:position pos:line="88" pos:column="47"/></name> <operator pos:line="88" pos:column="48">|<pos:position pos:line="88" pos:column="49"/></operator> <name pos:line="88" pos:column="50">APLOG_STARTUP<pos:position pos:line="88" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="65">rv2<pos:position pos:line="88" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="70">NULL<pos:position pos:line="88" pos:column="74"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="89" pos:column="26">"%s: Failed to remove the service config from the "<pos:position pos:line="89" pos:column="77"/></literal>
                         <literal type="string" pos:line="90" pos:column="26">"registry."<pos:position pos:line="90" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="39">mpm_display_name<pos:position pos:line="90" pos:column="55"/></name></expr></argument>)<pos:position pos:line="90" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="91" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="92" pos:column="9">rv<pos:position pos:line="92" pos:column="11"/></name> <operator pos:line="92" pos:column="12">=<pos:position pos:line="92" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="92" pos:column="14">(<pos:position pos:line="92" pos:column="15"/></operator><name pos:line="92" pos:column="15">rv<pos:position pos:line="92" pos:column="17"/></name> <operator pos:line="92" pos:column="18">!=<pos:position pos:line="92" pos:column="20"/></operator> <name pos:line="92" pos:column="21">APR_SUCCESS<pos:position pos:line="92" pos:column="32"/></name><operator pos:line="92" pos:column="32">)<pos:position pos:line="92" pos:column="33"/></operator></expr> ?<pos:position pos:line="92" pos:column="35"/></condition><then pos:line="92" pos:column="35"> <expr><name pos:line="92" pos:column="36">rv<pos:position pos:line="92" pos:column="38"/></name></expr> <pos:position pos:line="92" pos:column="39"/></then><else pos:line="92" pos:column="39">: <expr><name pos:line="92" pos:column="41">rv2<pos:position pos:line="92" pos:column="44"/></name></expr></else></ternary></expr>;<pos:position pos:line="92" pos:column="45"/></expr_stmt>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">rv<pos:position pos:line="93" pos:column="15"/></name> <operator pos:line="93" pos:column="16">!=<pos:position pos:line="93" pos:column="18"/></operator> <name pos:line="93" pos:column="19">APR_SUCCESS<pos:position pos:line="93" pos:column="30"/></name></expr>)<pos:position pos:line="93" pos:column="31"/></condition><then pos:line="93" pos:column="31">
            <block type="pseudo"><return pos:line="94" pos:column="13">return <expr><name pos:line="94" pos:column="20">rv<pos:position pos:line="94" pos:column="22"/></name></expr>;<pos:position pos:line="94" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="95" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="96" pos:column="5">fprintf<pos:position pos:line="96" pos:column="12"/></name><argument_list pos:line="96" pos:column="12">(<argument><expr><name pos:line="96" pos:column="13">stderr<pos:position pos:line="96" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="96" pos:column="20">"The %s service has been removed successfully.\n"<pos:position pos:line="96" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="71">mpm_display_name<pos:position pos:line="96" pos:column="87"/></name></expr></argument>)<pos:position pos:line="96" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="89"/></expr_stmt>
    <return pos:line="97" pos:column="5">return <expr><name pos:line="97" pos:column="12">APR_SUCCESS<pos:position pos:line="97" pos:column="23"/></name></expr>;<pos:position pos:line="97" pos:column="24"/></return>
}<pos:position pos:line="98" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1930_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">merge_reflector_dir_config<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">apr_pool_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type> <name pos:line="1" pos:column="54">p<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">void<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">basev<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">void<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">addv<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><name pos:line="3" pos:column="5">reflector_cfg<pos:position pos:line="3" pos:column="18"/></name> <operator pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></operator><operator pos:line="3" pos:column="20">new<pos:position pos:line="3" pos:column="23"/></operator> <operator pos:line="3" pos:column="24">=<pos:position pos:line="3" pos:column="25"/></operator> <operator pos:line="3" pos:column="26">(<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="27">reflector_cfg<pos:position pos:line="3" pos:column="40"/></name> <operator pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></operator><operator pos:line="3" pos:column="42">)<pos:position pos:line="3" pos:column="43"/></operator> <call><name pos:line="3" pos:column="44">apr_pcalloc<pos:position pos:line="3" pos:column="55"/></name><argument_list pos:line="3" pos:column="55">(<argument><expr><name pos:line="3" pos:column="56">p<pos:position pos:line="3" pos:column="57"/></name></expr></argument>,
            <argument><expr><sizeof pos:line="4" pos:column="13">sizeof<argument_list pos:line="4" pos:column="19">(<argument><expr><name pos:line="4" pos:column="20">reflector_cfg<pos:position pos:line="4" pos:column="33"/></name></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="36"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">reflector_cfg<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">add<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><operator pos:line="5" pos:column="26">(<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="27">reflector_cfg<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">*<pos:position pos:line="5" pos:column="42"/></operator><operator pos:line="5" pos:column="42">)<pos:position pos:line="5" pos:column="43"/></operator> <name pos:line="5" pos:column="44">addv<pos:position pos:line="5" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">reflector_cfg<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">base<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><operator pos:line="6" pos:column="27">(<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">reflector_cfg<pos:position pos:line="6" pos:column="41"/></name> <operator pos:line="6" pos:column="42">*<pos:position pos:line="6" pos:column="43"/></operator><operator pos:line="6" pos:column="43">)<pos:position pos:line="6" pos:column="44"/></operator> <name pos:line="6" pos:column="45">basev<pos:position pos:line="6" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="51"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="8" pos:column="5">new<pos:position pos:line="8" pos:column="8"/></operator><operator pos:line="8" pos:column="8">-&gt;<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="10">headers<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <call><name pos:line="8" pos:column="20">apr_table_overlay<pos:position pos:line="8" pos:column="37"/></name><argument_list pos:line="8" pos:column="37">(<argument><expr><name pos:line="8" pos:column="38">p<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="41">add<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">-&gt;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="46">headers<pos:position pos:line="8" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="55">base<pos:position pos:line="8" pos:column="59"/></name><operator pos:line="8" pos:column="59">-&gt;<pos:position pos:line="8" pos:column="64"/></operator><name pos:line="8" pos:column="61">headers<pos:position pos:line="8" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="70"/></expr_stmt>

    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">new<pos:position pos:line="10" pos:column="15"/></operator></expr>;<pos:position pos:line="10" pos:column="16"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2140_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">strict_hostname_check<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">request_rec<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">r<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">host<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">ch<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">is_dotted_decimal<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><literal type="number" pos:line="4" pos:column="29">1<pos:position pos:line="4" pos:column="30"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="32">leading_zeroes<pos:position pos:line="4" pos:column="46"/></name> <init pos:line="4" pos:column="47">= <expr><literal type="number" pos:line="4" pos:column="49">0<pos:position pos:line="4" pos:column="50"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="52">dots<pos:position pos:line="4" pos:column="56"/></name> <init pos:line="4" pos:column="57">= <expr><literal type="number" pos:line="4" pos:column="59">0<pos:position pos:line="4" pos:column="60"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="61"/></decl_stmt>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><expr><name pos:line="6" pos:column="10">ch<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">host<pos:position pos:line="6" pos:column="19"/></name></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><operator pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">ch<pos:position pos:line="6" pos:column="24"/></name></expr>;<pos:position pos:line="6" pos:column="25"/></condition> <incr><expr><name pos:line="6" pos:column="26">ch<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">++<pos:position pos:line="6" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="31"/></control> <block pos:line="6" pos:column="32">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">apr_isalpha<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><operator pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">ch<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call> <operator pos:line="7" pos:column="30">||<pos:position pos:line="7" pos:column="32"/></operator> <operator pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">ch<pos:position pos:line="7" pos:column="36"/></name> <operator pos:line="7" pos:column="37">==<pos:position pos:line="7" pos:column="39"/></operator> <literal type="char" pos:line="7" pos:column="40">'-'<pos:position pos:line="7" pos:column="43"/></literal></expr>)<pos:position pos:line="7" pos:column="44"/></condition><then pos:line="7" pos:column="44"> <block pos:line="7" pos:column="45">{
            <expr_stmt><expr><name pos:line="8" pos:column="13">is_dotted_decimal<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">=<pos:position pos:line="8" pos:column="32"/></operator> <literal type="number" pos:line="8" pos:column="33">0<pos:position pos:line="8" pos:column="34"/></literal></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="9" pos:column="10"/></block></then>
        <elseif pos:line="10" pos:column="9">else <if pos:line="10" pos:column="14">if <condition pos:line="10" pos:column="17">(<expr><name><name pos:line="10" pos:column="18">ch<pos:position pos:line="10" pos:column="20"/></name><index pos:line="10" pos:column="20">[<expr><literal type="number" pos:line="10" pos:column="21">0<pos:position pos:line="10" pos:column="22"/></literal></expr>]<pos:position pos:line="10" pos:column="23"/></index></name> <operator pos:line="10" pos:column="24">==<pos:position pos:line="10" pos:column="26"/></operator> <literal type="char" pos:line="10" pos:column="27">'.'<pos:position pos:line="10" pos:column="30"/></literal></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31"> <block pos:line="10" pos:column="32">{
            <expr_stmt><expr><name pos:line="11" pos:column="13">dots<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">++<pos:position pos:line="11" pos:column="19"/></operator></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><name><name pos:line="12" pos:column="17">ch<pos:position pos:line="12" pos:column="19"/></name><index pos:line="12" pos:column="19">[<expr><literal type="number" pos:line="12" pos:column="20">1<pos:position pos:line="12" pos:column="21"/></literal></expr>]<pos:position pos:line="12" pos:column="22"/></index></name> <operator pos:line="12" pos:column="23">==<pos:position pos:line="12" pos:column="25"/></operator> <literal type="char" pos:line="12" pos:column="26">'0'<pos:position pos:line="12" pos:column="29"/></literal> <operator pos:line="12" pos:column="30">&amp;&amp;<pos:position pos:line="12" pos:column="40"/></operator> <call><name pos:line="12" pos:column="33">apr_isdigit<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">(<argument><expr><name><name pos:line="12" pos:column="45">ch<pos:position pos:line="12" pos:column="47"/></name><index pos:line="12" pos:column="47">[<expr><literal type="number" pos:line="12" pos:column="48">2<pos:position pos:line="12" pos:column="49"/></literal></expr>]<pos:position pos:line="12" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="52"/></condition><then pos:line="12" pos:column="52">
                <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">leading_zeroes<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">=<pos:position pos:line="13" pos:column="33"/></operator> <literal type="number" pos:line="13" pos:column="34">1<pos:position pos:line="13" pos:column="35"/></literal></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt></block></then></if>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="15" pos:column="9">else <if pos:line="15" pos:column="14">if <condition pos:line="15" pos:column="17">(<expr><operator pos:line="15" pos:column="18">!<pos:position pos:line="15" pos:column="19"/></operator><call><name pos:line="15" pos:column="19">apr_isdigit<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><operator pos:line="15" pos:column="31">*<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">ch<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="36"/></condition><then pos:line="15" pos:column="36"> <block pos:line="15" pos:column="37">{
           <comment type="block" pos:line="16" pos:column="12">/* also takes care of multiple Host headers by denying commas */</comment>
            <goto pos:line="17" pos:column="13">goto <name pos:line="17" pos:column="18">bad<pos:position pos:line="17" pos:column="21"/></name>;<pos:position pos:line="17" pos:column="22"/></goto>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="19" pos:column="6"/></block></for>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">is_dotted_decimal<pos:position pos:line="20" pos:column="26"/></name></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27"> <block pos:line="20" pos:column="28">{
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">host<pos:position pos:line="21" pos:column="17"/></name><index pos:line="21" pos:column="17">[<expr><literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>]<pos:position pos:line="21" pos:column="20"/></index></name> <operator pos:line="21" pos:column="21">==<pos:position pos:line="21" pos:column="23"/></operator> <literal type="char" pos:line="21" pos:column="24">'.'<pos:position pos:line="21" pos:column="27"/></literal> <operator pos:line="21" pos:column="28">||<pos:position pos:line="21" pos:column="30"/></operator> <operator pos:line="21" pos:column="31">(<pos:position pos:line="21" pos:column="32"/></operator><name><name pos:line="21" pos:column="32">host<pos:position pos:line="21" pos:column="36"/></name><index pos:line="21" pos:column="36">[<expr><literal type="number" pos:line="21" pos:column="37">0<pos:position pos:line="21" pos:column="38"/></literal></expr>]<pos:position pos:line="21" pos:column="39"/></index></name> <operator pos:line="21" pos:column="40">==<pos:position pos:line="21" pos:column="42"/></operator> <literal type="char" pos:line="21" pos:column="43">'0'<pos:position pos:line="21" pos:column="46"/></literal> <operator pos:line="21" pos:column="47">&amp;&amp;<pos:position pos:line="21" pos:column="57"/></operator> <call><name pos:line="21" pos:column="50">apr_isdigit<pos:position pos:line="21" pos:column="61"/></name><argument_list pos:line="21" pos:column="61">(<argument><expr><name><name pos:line="21" pos:column="62">host<pos:position pos:line="21" pos:column="66"/></name><index pos:line="21" pos:column="66">[<expr><literal type="number" pos:line="21" pos:column="67">1<pos:position pos:line="21" pos:column="68"/></literal></expr>]<pos:position pos:line="21" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call><operator pos:line="21" pos:column="70">)<pos:position pos:line="21" pos:column="71"/></operator></expr>)<pos:position pos:line="21" pos:column="72"/></condition><then pos:line="21" pos:column="72">
            <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="13">leading_zeroes<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <literal type="number" pos:line="22" pos:column="30">1<pos:position pos:line="22" pos:column="31"/></literal></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt></block></then></if>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">leading_zeroes<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">||<pos:position pos:line="23" pos:column="30"/></operator> <name pos:line="23" pos:column="31">dots<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">!=<pos:position pos:line="23" pos:column="38"/></operator> <literal type="number" pos:line="23" pos:column="39">3<pos:position pos:line="23" pos:column="40"/></literal></expr>)<pos:position pos:line="23" pos:column="41"/></condition><then pos:line="23" pos:column="41"> <block pos:line="23" pos:column="42">{
            <comment type="block" pos:line="24" pos:column="13">/* RFC 3986 7.4 */</comment>
            <goto pos:line="25" pos:column="13">goto <name pos:line="25" pos:column="18">bad<pos:position pos:line="25" pos:column="21"/></name>;<pos:position pos:line="25" pos:column="22"/></goto>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
    }<pos:position pos:line="27" pos:column="6"/></block></then>
    <else pos:line="28" pos:column="5">else <block pos:line="28" pos:column="10">{
        <comment type="block" pos:line="29" pos:column="9">/* The top-level domain must start with a letter (RFC 1123 2.1) */</comment>
        <while pos:line="30" pos:column="9">while <condition pos:line="30" pos:column="15">(<expr><name pos:line="30" pos:column="16">ch<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">&gt;<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="21">host<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">&amp;&amp;<pos:position pos:line="30" pos:column="36"/></operator> <operator pos:line="30" pos:column="29">*<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="30">ch<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">!=<pos:position pos:line="30" pos:column="35"/></operator> <literal type="char" pos:line="30" pos:column="36">'.'<pos:position pos:line="30" pos:column="39"/></literal></expr>)<pos:position pos:line="30" pos:column="40"/></condition>
            <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="13">ch<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">--<pos:position pos:line="31" pos:column="17"/></operator></expr>;<pos:position pos:line="31" pos:column="18"/></expr_stmt></block></while>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">ch<pos:position pos:line="32" pos:column="15"/></name><index pos:line="32" pos:column="15">[<expr><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>]<pos:position pos:line="32" pos:column="18"/></index></name> <operator pos:line="32" pos:column="19">==<pos:position pos:line="32" pos:column="21"/></operator> <literal type="char" pos:line="32" pos:column="22">'.'<pos:position pos:line="32" pos:column="25"/></literal> <operator pos:line="32" pos:column="26">&amp;&amp;<pos:position pos:line="32" pos:column="36"/></operator> <name><name pos:line="32" pos:column="29">ch<pos:position pos:line="32" pos:column="31"/></name><index pos:line="32" pos:column="31">[<expr><literal type="number" pos:line="32" pos:column="32">1<pos:position pos:line="32" pos:column="33"/></literal></expr>]<pos:position pos:line="32" pos:column="34"/></index></name> <operator pos:line="32" pos:column="35">!=<pos:position pos:line="32" pos:column="37"/></operator> <literal type="char" pos:line="32" pos:column="38">'\0'<pos:position pos:line="32" pos:column="42"/></literal> <operator pos:line="32" pos:column="43">&amp;&amp;<pos:position pos:line="32" pos:column="53"/></operator> <operator pos:line="32" pos:column="46">!<pos:position pos:line="32" pos:column="47"/></operator><call><name pos:line="32" pos:column="47">apr_isalpha<pos:position pos:line="32" pos:column="58"/></name><argument_list pos:line="32" pos:column="58">(<argument><expr><name><name pos:line="32" pos:column="59">ch<pos:position pos:line="32" pos:column="61"/></name><index pos:line="32" pos:column="61">[<expr><literal type="number" pos:line="32" pos:column="62">1<pos:position pos:line="32" pos:column="63"/></literal></expr>]<pos:position pos:line="32" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="66"/></condition><then pos:line="32" pos:column="66">
            <block type="pseudo"><goto pos:line="33" pos:column="13">goto <name pos:line="33" pos:column="18">bad<pos:position pos:line="33" pos:column="21"/></name>;<pos:position pos:line="33" pos:column="22"/></goto></block></then></if>
    }<pos:position pos:line="34" pos:column="6"/></block></else></if>
    <return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">APR_SUCCESS<pos:position pos:line="35" pos:column="23"/></name></expr>;<pos:position pos:line="35" pos:column="24"/></return>

<label><name pos:line="37" pos:column="1">bad<pos:position pos:line="37" pos:column="4"/></name>:<pos:position pos:line="37" pos:column="5"/></label>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">ap_log_rerror<pos:position pos:line="38" pos:column="18"/></name><argument_list pos:line="38" pos:column="18">(<argument><expr><name pos:line="38" pos:column="19">APLOG_MARK<pos:position pos:line="38" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="31">APLOG_DEBUG<pos:position pos:line="38" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="44">0<pos:position pos:line="38" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="47">r<pos:position pos:line="38" pos:column="48"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="39" pos:column="19">"[strict] Invalid host name '%s'%s%.6s"<pos:position pos:line="39" pos:column="58"/></literal></expr></argument>,
                  <argument><expr><name pos:line="40" pos:column="19">host<pos:position pos:line="40" pos:column="23"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="40" pos:column="25">*<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="26">ch<pos:position pos:line="40" pos:column="28"/></name></expr> ?<pos:position pos:line="40" pos:column="30"/></condition><then pos:line="40" pos:column="30"> <expr><literal type="string" pos:line="40" pos:column="31">", problem near: "<pos:position pos:line="40" pos:column="49"/></literal></expr> <pos:position pos:line="40" pos:column="50"/></then><else pos:line="40" pos:column="50">: <expr><literal type="string" pos:line="40" pos:column="52">""<pos:position pos:line="40" pos:column="54"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="40" pos:column="56">ch<pos:position pos:line="40" pos:column="58"/></name></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="60"/></expr_stmt>
    <return pos:line="41" pos:column="5">return <expr><name pos:line="41" pos:column="12">APR_EINVAL<pos:position pos:line="41" pos:column="22"/></name></expr>;<pos:position pos:line="41" pos:column="23"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

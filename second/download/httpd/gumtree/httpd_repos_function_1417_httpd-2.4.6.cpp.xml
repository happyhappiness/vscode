<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1417_httpd-2.4.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">dbd_construct<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">data_ptr<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">void<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">params<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">apr_pool_t<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">pool<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">dbd_group_t<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">group<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">params<pos:position pos:line="4" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dbd_cfg_t<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">cfg<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name><name pos:line="5" pos:column="22">group<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">cfg<pos:position pos:line="5" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_pool_t<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">rec_pool<pos:position pos:line="6" pos:column="25"/></name></decl>, <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="28">prepared_pool<pos:position pos:line="6" pos:column="41"/></name></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ap_dbd_t<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">rec<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">err<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><literal type="string" pos:line="9" pos:column="23">""<pos:position pos:line="9" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">rv<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">apr_pool_create<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><operator pos:line="11" pos:column="26">&amp;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="27">rec_pool<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="37">pool<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">rv<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">!=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">APR_SUCCESS<pos:position pos:line="12" pos:column="26"/></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27"> <block pos:line="12" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_log_error<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">APLOG_MARK<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">APLOG_CRIT<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">rv<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="50">cfg<pos:position pos:line="13" pos:column="53"/></name><operator pos:line="13" pos:column="53">-&gt;<pos:position pos:line="13" pos:column="58"/></operator><name pos:line="13" pos:column="55">server<pos:position pos:line="13" pos:column="61"/></name></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="63">APLOGNO<pos:position pos:line="13" pos:column="70"/></name><argument_list pos:line="13" pos:column="70">(<argument><expr><literal type="number" pos:line="13" pos:column="71">00624<pos:position pos:line="13" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="77"/></argument_list></call>
                     <literal type="string" pos:line="14" pos:column="22">"Failed to create memory pool"<pos:position pos:line="14" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="54"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">rv<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">rec<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name pos:line="18" pos:column="11">apr_pcalloc<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">rec_pool<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="33">sizeof<argument_list pos:line="18" pos:column="39">(<argument><expr><name pos:line="18" pos:column="40">ap_dbd_t<pos:position pos:line="18" pos:column="48"/></name></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="20" pos:column="5">rec<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">-&gt;<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="10">pool<pos:position pos:line="20" pos:column="14"/></name></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">rec_pool<pos:position pos:line="20" pos:column="25"/></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* The driver is loaded at config time now, so this just checks a hash.
     * If that changes, the driver DSO could be registered to unload against
     * our pool, which is probably not what we want.  Error checking isn't
     * necessary now, but in case that changes in the future ...
     */</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">rv<pos:position pos:line="27" pos:column="7"/></name> <operator pos:line="27" pos:column="8">=<pos:position pos:line="27" pos:column="9"/></operator> <call><name pos:line="27" pos:column="10">apr_dbd_get_driver<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name><name pos:line="27" pos:column="29">rec<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">pool<pos:position pos:line="27" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="40">cfg<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">-&gt;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="45">name<pos:position pos:line="27" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="51">&amp;<pos:position pos:line="27" pos:column="56"/></operator><name><name pos:line="27" pos:column="52">rec<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">-&gt;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="57">driver<pos:position pos:line="27" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="65"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">rv<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">!=<pos:position pos:line="28" pos:column="14"/></operator> <name pos:line="28" pos:column="15">APR_SUCCESS<pos:position pos:line="28" pos:column="26"/></name></expr>)<pos:position pos:line="28" pos:column="27"/></condition><then pos:line="28" pos:column="27"> <block pos:line="28" pos:column="28">{
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><call><name pos:line="29" pos:column="13">APR_STATUS_IS_ENOTIMPL<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">rv<pos:position pos:line="29" pos:column="38"/></name></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="40"/></condition><then pos:line="29" pos:column="40"> <block pos:line="29" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">ap_log_error<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">APLOG_MARK<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">APLOG_ERR<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">rv<pos:position pos:line="30" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="53">cfg<pos:position pos:line="30" pos:column="56"/></name><operator pos:line="30" pos:column="56">-&gt;<pos:position pos:line="30" pos:column="61"/></operator><name pos:line="30" pos:column="58">server<pos:position pos:line="30" pos:column="64"/></name></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="66">APLOGNO<pos:position pos:line="30" pos:column="73"/></name><argument_list pos:line="30" pos:column="73">(<argument><expr><literal type="number" pos:line="30" pos:column="74">00625<pos:position pos:line="30" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="80"/></argument_list></call>
                         <literal type="string" pos:line="31" pos:column="26">"driver for %s not available"<pos:position pos:line="31" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="57">cfg<pos:position pos:line="31" pos:column="60"/></name><operator pos:line="31" pos:column="60">-&gt;<pos:position pos:line="31" pos:column="65"/></operator><name pos:line="31" pos:column="62">name<pos:position pos:line="31" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then>
        <elseif pos:line="33" pos:column="9">else <if pos:line="33" pos:column="14">if <condition pos:line="33" pos:column="17">(<expr><call><name pos:line="33" pos:column="18">APR_STATUS_IS_EDSOOPEN<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><name pos:line="33" pos:column="41">rv<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="45"/></condition><then pos:line="33" pos:column="45"> <block pos:line="33" pos:column="46">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">ap_log_error<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">APLOG_MARK<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="38">APLOG_ERR<pos:position pos:line="34" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">rv<pos:position pos:line="34" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="53">cfg<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">-&gt;<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="58">server<pos:position pos:line="34" pos:column="64"/></name></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="66">APLOGNO<pos:position pos:line="34" pos:column="73"/></name><argument_list pos:line="34" pos:column="73">(<argument><expr><literal type="number" pos:line="34" pos:column="74">00626<pos:position pos:line="34" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="80"/></argument_list></call>
                         <literal type="string" pos:line="35" pos:column="26">"can't find driver for %s"<pos:position pos:line="35" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="54">cfg<pos:position pos:line="35" pos:column="57"/></name><operator pos:line="35" pos:column="57">-&gt;<pos:position pos:line="35" pos:column="62"/></operator><name pos:line="35" pos:column="59">name<pos:position pos:line="35" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="37" pos:column="9">else <if pos:line="37" pos:column="14">if <condition pos:line="37" pos:column="17">(<expr><call><name pos:line="37" pos:column="18">APR_STATUS_IS_ESYMNOTFOUND<pos:position pos:line="37" pos:column="44"/></name><argument_list pos:line="37" pos:column="44">(<argument><expr><name pos:line="37" pos:column="45">rv<pos:position pos:line="37" pos:column="47"/></name></expr></argument>)<pos:position pos:line="37" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="49"/></condition><then pos:line="37" pos:column="49"> <block pos:line="37" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">ap_log_error<pos:position pos:line="38" pos:column="25"/></name><argument_list pos:line="38" pos:column="25">(<argument><expr><name pos:line="38" pos:column="26">APLOG_MARK<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="38">APLOG_ERR<pos:position pos:line="38" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="49">rv<pos:position pos:line="38" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="53">cfg<pos:position pos:line="38" pos:column="56"/></name><operator pos:line="38" pos:column="56">-&gt;<pos:position pos:line="38" pos:column="61"/></operator><name pos:line="38" pos:column="58">server<pos:position pos:line="38" pos:column="64"/></name></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="66">APLOGNO<pos:position pos:line="38" pos:column="73"/></name><argument_list pos:line="38" pos:column="73">(<argument><expr><literal type="number" pos:line="38" pos:column="74">00627<pos:position pos:line="38" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="80"/></argument_list></call>
                         <literal type="string" pos:line="39" pos:column="26">"driver for %s is invalid or corrupted"<pos:position pos:line="39" pos:column="65"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="40" pos:column="26">cfg<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">-&gt;<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="31">name<pos:position pos:line="40" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if></elseif>
        <else pos:line="42" pos:column="9">else <block pos:line="42" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">ap_log_error<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">APLOG_MARK<pos:position pos:line="43" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="38">APLOG_ERR<pos:position pos:line="43" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="49">rv<pos:position pos:line="43" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="53">cfg<pos:position pos:line="43" pos:column="56"/></name><operator pos:line="43" pos:column="56">-&gt;<pos:position pos:line="43" pos:column="61"/></operator><name pos:line="43" pos:column="58">server<pos:position pos:line="43" pos:column="64"/></name></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="66">APLOGNO<pos:position pos:line="43" pos:column="73"/></name><argument_list pos:line="43" pos:column="73">(<argument><expr><literal type="number" pos:line="43" pos:column="74">00628<pos:position pos:line="43" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="80"/></argument_list></call>
                         <literal type="string" pos:line="44" pos:column="26">"mod_dbd not compatible with APR in get_driver"<pos:position pos:line="44" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="75"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">apr_pool_destroy<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><name><name pos:line="46" pos:column="26">rec<pos:position pos:line="46" pos:column="29"/></name><operator pos:line="46" pos:column="29">-&gt;<pos:position pos:line="46" pos:column="34"/></operator><name pos:line="46" pos:column="31">pool<pos:position pos:line="46" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="37"/></expr_stmt>
        <return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">rv<pos:position pos:line="47" pos:column="18"/></name></expr>;<pos:position pos:line="47" pos:column="19"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="50" pos:column="5">rv<pos:position pos:line="50" pos:column="7"/></name> <operator pos:line="50" pos:column="8">=<pos:position pos:line="50" pos:column="9"/></operator> <call><name pos:line="50" pos:column="10">apr_dbd_open_ex<pos:position pos:line="50" pos:column="25"/></name><argument_list pos:line="50" pos:column="25">(<argument><expr><name><name pos:line="50" pos:column="26">rec<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">-&gt;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="31">driver<pos:position pos:line="50" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="39">rec<pos:position pos:line="50" pos:column="42"/></name><operator pos:line="50" pos:column="42">-&gt;<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="44">pool<pos:position pos:line="50" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="50">cfg<pos:position pos:line="50" pos:column="53"/></name><operator pos:line="50" pos:column="53">-&gt;<pos:position pos:line="50" pos:column="58"/></operator><name pos:line="50" pos:column="55">params<pos:position pos:line="50" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="63">&amp;<pos:position pos:line="50" pos:column="68"/></operator><name><name pos:line="50" pos:column="64">rec<pos:position pos:line="50" pos:column="67"/></name><operator pos:line="50" pos:column="67">-&gt;<pos:position pos:line="50" pos:column="72"/></operator><name pos:line="50" pos:column="69">handle<pos:position pos:line="50" pos:column="75"/></name></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="77">&amp;<pos:position pos:line="50" pos:column="82"/></operator><name pos:line="50" pos:column="78">err<pos:position pos:line="50" pos:column="81"/></name></expr></argument>)<pos:position pos:line="50" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="83"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">rv<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">!=<pos:position pos:line="51" pos:column="14"/></operator> <name pos:line="51" pos:column="15">APR_SUCCESS<pos:position pos:line="51" pos:column="26"/></name></expr>)<pos:position pos:line="51" pos:column="27"/></condition><then pos:line="51" pos:column="27"> <block pos:line="51" pos:column="28">{
        <switch pos:line="52" pos:column="9">switch <condition pos:line="52" pos:column="16">(<expr><name pos:line="52" pos:column="17">rv<pos:position pos:line="52" pos:column="19"/></name></expr>)<pos:position pos:line="52" pos:column="20"/></condition> <block pos:line="52" pos:column="21">{
        <case pos:line="53" pos:column="9">case <expr><name pos:line="53" pos:column="14">APR_EGENERAL<pos:position pos:line="53" pos:column="26"/></name></expr>:<pos:position pos:line="53" pos:column="27"/></case>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">ap_log_error<pos:position pos:line="54" pos:column="25"/></name><argument_list pos:line="54" pos:column="25">(<argument><expr><name pos:line="54" pos:column="26">APLOG_MARK<pos:position pos:line="54" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="38">APLOG_ERR<pos:position pos:line="54" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="49">rv<pos:position pos:line="54" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="53">cfg<pos:position pos:line="54" pos:column="56"/></name><operator pos:line="54" pos:column="56">-&gt;<pos:position pos:line="54" pos:column="61"/></operator><name pos:line="54" pos:column="58">server<pos:position pos:line="54" pos:column="64"/></name></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="66">APLOGNO<pos:position pos:line="54" pos:column="73"/></name><argument_list pos:line="54" pos:column="73">(<argument><expr><literal type="number" pos:line="54" pos:column="74">00629<pos:position pos:line="54" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="80"/></argument_list></call>
                         <literal type="string" pos:line="55" pos:column="26">"Can't connect to %s: %s"<pos:position pos:line="55" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="53">cfg<pos:position pos:line="55" pos:column="56"/></name><operator pos:line="55" pos:column="56">-&gt;<pos:position pos:line="55" pos:column="61"/></operator><name pos:line="55" pos:column="58">name<pos:position pos:line="55" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="64">err<pos:position pos:line="55" pos:column="67"/></name></expr></argument>)<pos:position pos:line="55" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="69"/></expr_stmt>
            <break pos:line="56" pos:column="13">break;<pos:position pos:line="56" pos:column="19"/></break>
        <default pos:line="57" pos:column="9">default:<pos:position pos:line="57" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">ap_log_error<pos:position pos:line="58" pos:column="25"/></name><argument_list pos:line="58" pos:column="25">(<argument><expr><name pos:line="58" pos:column="26">APLOG_MARK<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="38">APLOG_ERR<pos:position pos:line="58" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="49">rv<pos:position pos:line="58" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="53">cfg<pos:position pos:line="58" pos:column="56"/></name><operator pos:line="58" pos:column="56">-&gt;<pos:position pos:line="58" pos:column="61"/></operator><name pos:line="58" pos:column="58">server<pos:position pos:line="58" pos:column="64"/></name></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="66">APLOGNO<pos:position pos:line="58" pos:column="73"/></name><argument_list pos:line="58" pos:column="73">(<argument><expr><literal type="number" pos:line="58" pos:column="74">00630<pos:position pos:line="58" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="80"/></argument_list></call>
                         <literal type="string" pos:line="59" pos:column="26">"mod_dbd not compatible with APR in open"<pos:position pos:line="59" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="69"/></expr_stmt>
            <break pos:line="60" pos:column="13">break;<pos:position pos:line="60" pos:column="19"/></break>
        }<pos:position pos:line="61" pos:column="10"/></block></switch>

        <expr_stmt><expr><call><name pos:line="63" pos:column="9">apr_pool_destroy<pos:position pos:line="63" pos:column="25"/></name><argument_list pos:line="63" pos:column="25">(<argument><expr><name><name pos:line="63" pos:column="26">rec<pos:position pos:line="63" pos:column="29"/></name><operator pos:line="63" pos:column="29">-&gt;<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="31">pool<pos:position pos:line="63" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt>
        <return pos:line="64" pos:column="9">return <expr><name pos:line="64" pos:column="16">rv<pos:position pos:line="64" pos:column="18"/></name></expr>;<pos:position pos:line="64" pos:column="19"/></return>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="67" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="67" pos:column="30"/></name><argument_list pos:line="67" pos:column="30">(<argument><expr><name><name pos:line="67" pos:column="31">rec<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">-&gt;<pos:position pos:line="67" pos:column="39"/></operator><name pos:line="67" pos:column="36">pool<pos:position pos:line="67" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="42">rec<pos:position pos:line="67" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="47">dbd_close<pos:position pos:line="67" pos:column="56"/></name></expr></argument>,
                              <argument><expr><name pos:line="68" pos:column="31">apr_pool_cleanup_null<pos:position pos:line="68" pos:column="52"/></name></expr></argument>)<pos:position pos:line="68" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="54"/></expr_stmt>

    <comment type="block" pos:line="70" pos:column="5">/* we use a sub-pool for the prepared statements for each connection so
     * that they will be cleaned up first, before the connection is closed
     */</comment>
    <expr_stmt><expr><name pos:line="73" pos:column="5">rv<pos:position pos:line="73" pos:column="7"/></name> <operator pos:line="73" pos:column="8">=<pos:position pos:line="73" pos:column="9"/></operator> <call><name pos:line="73" pos:column="10">apr_pool_create<pos:position pos:line="73" pos:column="25"/></name><argument_list pos:line="73" pos:column="25">(<argument><expr><operator pos:line="73" pos:column="26">&amp;<pos:position pos:line="73" pos:column="31"/></operator><name pos:line="73" pos:column="27">prepared_pool<pos:position pos:line="73" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="42">rec<pos:position pos:line="73" pos:column="45"/></name><operator pos:line="73" pos:column="45">-&gt;<pos:position pos:line="73" pos:column="50"/></operator><name pos:line="73" pos:column="47">pool<pos:position pos:line="73" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="53"/></expr_stmt>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name pos:line="74" pos:column="9">rv<pos:position pos:line="74" pos:column="11"/></name> <operator pos:line="74" pos:column="12">!=<pos:position pos:line="74" pos:column="14"/></operator> <name pos:line="74" pos:column="15">APR_SUCCESS<pos:position pos:line="74" pos:column="26"/></name></expr>)<pos:position pos:line="74" pos:column="27"/></condition><then pos:line="74" pos:column="27"> <block pos:line="74" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">ap_log_error<pos:position pos:line="75" pos:column="21"/></name><argument_list pos:line="75" pos:column="21">(<argument><expr><name pos:line="75" pos:column="22">APLOG_MARK<pos:position pos:line="75" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="34">APLOG_CRIT<pos:position pos:line="75" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="46">rv<pos:position pos:line="75" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="50">cfg<pos:position pos:line="75" pos:column="53"/></name><operator pos:line="75" pos:column="53">-&gt;<pos:position pos:line="75" pos:column="58"/></operator><name pos:line="75" pos:column="55">server<pos:position pos:line="75" pos:column="61"/></name></name></expr></argument>, <argument><expr><call><name pos:line="75" pos:column="63">APLOGNO<pos:position pos:line="75" pos:column="70"/></name><argument_list pos:line="75" pos:column="70">(<argument><expr><literal type="number" pos:line="75" pos:column="71">00631<pos:position pos:line="75" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="77"/></argument_list></call>
                     <literal type="string" pos:line="76" pos:column="22">"Failed to create memory pool"<pos:position pos:line="76" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="54"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="78" pos:column="9">apr_pool_destroy<pos:position pos:line="78" pos:column="25"/></name><argument_list pos:line="78" pos:column="25">(<argument><expr><name><name pos:line="78" pos:column="26">rec<pos:position pos:line="78" pos:column="29"/></name><operator pos:line="78" pos:column="29">-&gt;<pos:position pos:line="78" pos:column="34"/></operator><name pos:line="78" pos:column="31">pool<pos:position pos:line="78" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="37"/></expr_stmt>
        <return pos:line="79" pos:column="9">return <expr><name pos:line="79" pos:column="16">rv<pos:position pos:line="79" pos:column="18"/></name></expr>;<pos:position pos:line="79" pos:column="19"/></return>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="82" pos:column="5">rv<pos:position pos:line="82" pos:column="7"/></name> <operator pos:line="82" pos:column="8">=<pos:position pos:line="82" pos:column="9"/></operator> <call><name pos:line="82" pos:column="10">dbd_prepared_init<pos:position pos:line="82" pos:column="27"/></name><argument_list pos:line="82" pos:column="27">(<argument><expr><name pos:line="82" pos:column="28">prepared_pool<pos:position pos:line="82" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="43">cfg<pos:position pos:line="82" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="48">rec<pos:position pos:line="82" pos:column="51"/></name></expr></argument>)<pos:position pos:line="82" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="53"/></expr_stmt>
    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name pos:line="83" pos:column="9">rv<pos:position pos:line="83" pos:column="11"/></name> <operator pos:line="83" pos:column="12">!=<pos:position pos:line="83" pos:column="14"/></operator> <name pos:line="83" pos:column="15">APR_SUCCESS<pos:position pos:line="83" pos:column="26"/></name></expr>)<pos:position pos:line="83" pos:column="27"/></condition><then pos:line="83" pos:column="27"> <block pos:line="83" pos:column="28">{
        <decl_stmt><decl><type><specifier pos:line="84" pos:column="9">const<pos:position pos:line="84" pos:column="14"/></specifier> <name pos:line="84" pos:column="15">char<pos:position pos:line="84" pos:column="19"/></name> <modifier pos:line="84" pos:column="20">*<pos:position pos:line="84" pos:column="21"/></modifier></type><name pos:line="84" pos:column="21">errmsg<pos:position pos:line="84" pos:column="27"/></name> <init pos:line="84" pos:column="28">= <expr><call><name pos:line="84" pos:column="30">apr_dbd_error<pos:position pos:line="84" pos:column="43"/></name><argument_list pos:line="84" pos:column="43">(<argument><expr><name><name pos:line="84" pos:column="44">rec<pos:position pos:line="84" pos:column="47"/></name><operator pos:line="84" pos:column="47">-&gt;<pos:position pos:line="84" pos:column="52"/></operator><name pos:line="84" pos:column="49">driver<pos:position pos:line="84" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="57">rec<pos:position pos:line="84" pos:column="60"/></name><operator pos:line="84" pos:column="60">-&gt;<pos:position pos:line="84" pos:column="65"/></operator><name pos:line="84" pos:column="62">handle<pos:position pos:line="84" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="70">rv<pos:position pos:line="84" pos:column="72"/></name></expr></argument>)<pos:position pos:line="84" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="84" pos:column="74"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="85" pos:column="9">ap_log_error<pos:position pos:line="85" pos:column="21"/></name><argument_list pos:line="85" pos:column="21">(<argument><expr><name pos:line="85" pos:column="22">APLOG_MARK<pos:position pos:line="85" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="34">APLOG_ERR<pos:position pos:line="85" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="45">rv<pos:position pos:line="85" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="49">cfg<pos:position pos:line="85" pos:column="52"/></name><operator pos:line="85" pos:column="52">-&gt;<pos:position pos:line="85" pos:column="57"/></operator><name pos:line="85" pos:column="54">server<pos:position pos:line="85" pos:column="60"/></name></name></expr></argument>, <argument><expr><call><name pos:line="85" pos:column="62">APLOGNO<pos:position pos:line="85" pos:column="69"/></name><argument_list pos:line="85" pos:column="69">(<argument><expr><literal type="number" pos:line="85" pos:column="70">00632<pos:position pos:line="85" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="76"/></argument_list></call>
                     <literal type="string" pos:line="86" pos:column="22">"failed to prepare SQL statements: %s"<pos:position pos:line="86" pos:column="60"/></literal></expr></argument>,
                     <argument><expr><operator pos:line="87" pos:column="22">(<pos:position pos:line="87" pos:column="23"/></operator><ternary><condition><expr><name pos:line="87" pos:column="23">errmsg<pos:position pos:line="87" pos:column="29"/></name></expr> ?<pos:position pos:line="87" pos:column="31"/></condition><then pos:line="87" pos:column="31"> <expr><name pos:line="87" pos:column="32">errmsg<pos:position pos:line="87" pos:column="38"/></name></expr> <pos:position pos:line="87" pos:column="39"/></then><else pos:line="87" pos:column="39">: <expr><literal type="string" pos:line="87" pos:column="41">"[???]"<pos:position pos:line="87" pos:column="48"/></literal></expr></else></ternary><operator pos:line="87" pos:column="48">)<pos:position pos:line="87" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="87" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="51"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="89" pos:column="9">apr_pool_destroy<pos:position pos:line="89" pos:column="25"/></name><argument_list pos:line="89" pos:column="25">(<argument><expr><name><name pos:line="89" pos:column="26">rec<pos:position pos:line="89" pos:column="29"/></name><operator pos:line="89" pos:column="29">-&gt;<pos:position pos:line="89" pos:column="34"/></operator><name pos:line="89" pos:column="31">pool<pos:position pos:line="89" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="37"/></expr_stmt>
        <return pos:line="90" pos:column="9">return <expr><name pos:line="90" pos:column="16">rv<pos:position pos:line="90" pos:column="18"/></name></expr>;<pos:position pos:line="90" pos:column="19"/></return>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="93" pos:column="5">dbd_run_post_connect<pos:position pos:line="93" pos:column="25"/></name><argument_list pos:line="93" pos:column="25">(<argument><expr><name pos:line="93" pos:column="26">prepared_pool<pos:position pos:line="93" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="41">cfg<pos:position pos:line="93" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="46">rec<pos:position pos:line="93" pos:column="49"/></name></expr></argument>)<pos:position pos:line="93" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="51"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="95" pos:column="5">*<pos:position pos:line="95" pos:column="6"/></operator><name pos:line="95" pos:column="6">data_ptr<pos:position pos:line="95" pos:column="14"/></name> <operator pos:line="95" pos:column="15">=<pos:position pos:line="95" pos:column="16"/></operator> <name pos:line="95" pos:column="17">rec<pos:position pos:line="95" pos:column="20"/></name></expr>;<pos:position pos:line="95" pos:column="21"/></expr_stmt>

    <return pos:line="97" pos:column="5">return <expr><name pos:line="97" pos:column="12">APR_SUCCESS<pos:position pos:line="97" pos:column="23"/></name></expr>;<pos:position pos:line="97" pos:column="24"/></return>
}<pos:position pos:line="98" pos:column="2"/></block></function></unit>

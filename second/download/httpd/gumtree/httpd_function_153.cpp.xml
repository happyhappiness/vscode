<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_153.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dav_send_multistatus<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">request_rec<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">r<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">status<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">dav_response<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">first<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="3" pos:column="34">apr_array_header_t<pos:position pos:line="3" pos:column="52"/></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">namespaces<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="65"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <comment type="block" pos:line="5" pos:column="5">/* Set the correct status and Content-Type */</comment>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">r<pos:position pos:line="6" pos:column="6"/></name><operator pos:line="6" pos:column="6">-&gt;<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="8">status<pos:position pos:line="6" pos:column="14"/></name></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">status<pos:position pos:line="6" pos:column="23"/></name></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">ap_set_content_type<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">r<pos:position pos:line="7" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="28">DAV_XML_CONTENT_TYPE<pos:position pos:line="7" pos:column="48"/></name></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* Send the headers and actual multistatus response now... */</comment>
    <macro><name pos:line="10" pos:column="5">ap_rputs<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument pos:line="10" pos:column="14">DAV_XML_HEADER DEBUG_CR
             <literal type="string" pos:line="11" pos:column="14">"&lt;D:multistatus xmlns:D=\"DAV:\""<pos:position pos:line="11" pos:column="50"/></literal></argument>, <argument pos:line="11" pos:column="49">r<pos:position pos:line="11" pos:column="50"/></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></macro><empty_stmt pos:line="11" pos:column="51">;<pos:position pos:line="11" pos:column="52"/></empty_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">namespaces<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">!=<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">NULL<pos:position pos:line="13" pos:column="27"/></name></expr>)<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28"> <block pos:line="13" pos:column="29">{
       <decl_stmt><decl><type><name pos:line="14" pos:column="8">int<pos:position pos:line="14" pos:column="11"/></name></type> <name pos:line="14" pos:column="12">i<pos:position pos:line="14" pos:column="13"/></name></decl>;<pos:position pos:line="14" pos:column="14"/></decl_stmt>

       <for pos:line="16" pos:column="8">for <control pos:line="16" pos:column="12">(<init><expr><name pos:line="16" pos:column="13">i<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name><name pos:line="16" pos:column="17">namespaces<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">nelts<pos:position pos:line="16" pos:column="34"/></name></name></expr>;<pos:position pos:line="16" pos:column="35"/></init> <condition><expr><name pos:line="16" pos:column="36">i<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">--<pos:position pos:line="16" pos:column="39"/></operator></expr>;<pos:position pos:line="16" pos:column="40"/></condition> <incr/>)<pos:position pos:line="16" pos:column="42"/></control> <block pos:line="16" pos:column="43">{
           <expr_stmt><expr><call><name pos:line="17" pos:column="12">ap_rprintf<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">r<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="26">" xmlns:ns%d=\"%s\""<pos:position pos:line="17" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">i<pos:position pos:line="17" pos:column="49"/></name></expr></argument>,
                      <argument><expr><call><name pos:line="18" pos:column="23">APR_XML_GET_URI_ITEM<pos:position pos:line="18" pos:column="43"/></name><argument_list pos:line="18" pos:column="43">(<argument><expr><name pos:line="18" pos:column="44">namespaces<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="56">i<pos:position pos:line="18" pos:column="57"/></name></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt>
       }<pos:position pos:line="19" pos:column="9"/></block></for>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="22" pos:column="5">/* ap_rputc('&gt;', r); */</comment>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ap_rputs<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><literal type="string" pos:line="23" pos:column="14">"&gt;"<pos:position pos:line="23" pos:column="20"/></literal> <name pos:line="23" pos:column="18">DEBUG_CR<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="28">r<pos:position pos:line="23" pos:column="29"/></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>

    <for pos:line="25" pos:column="5">for <control pos:line="25" pos:column="9">(<init pos:line="25" pos:column="10">;<pos:position pos:line="25" pos:column="11"/></init> <condition><expr><name pos:line="25" pos:column="12">first<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">!=<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">NULL<pos:position pos:line="25" pos:column="25"/></name></expr>;<pos:position pos:line="25" pos:column="26"/></condition> <incr><expr><name pos:line="25" pos:column="27">first<pos:position pos:line="25" pos:column="32"/></name> <operator pos:line="25" pos:column="33">=<pos:position pos:line="25" pos:column="34"/></operator> <name><name pos:line="25" pos:column="35">first<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">next<pos:position pos:line="25" pos:column="46"/></name></name></expr></incr>)<pos:position pos:line="25" pos:column="47"/></control> <block pos:line="25" pos:column="48">{
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">apr_text<pos:position pos:line="26" pos:column="17"/></name> <modifier pos:line="26" pos:column="18">*<pos:position pos:line="26" pos:column="19"/></modifier></type><name pos:line="26" pos:column="19">t<pos:position pos:line="26" pos:column="20"/></name></decl>;<pos:position pos:line="26" pos:column="21"/></decl_stmt>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">first<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">propresult<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">.<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="31">xmlns<pos:position pos:line="28" pos:column="36"/></name></name> <operator pos:line="28" pos:column="37">==<pos:position pos:line="28" pos:column="39"/></operator> <name pos:line="28" pos:column="40">NULL<pos:position pos:line="28" pos:column="44"/></name></expr>)<pos:position pos:line="28" pos:column="45"/></condition><then pos:line="28" pos:column="45"> <block pos:line="28" pos:column="46">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">ap_rputs<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><literal type="string" pos:line="29" pos:column="22">"&lt;D:response&gt;"<pos:position pos:line="29" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">r<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then>
        <else pos:line="31" pos:column="9">else <block pos:line="31" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">ap_rputs<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><literal type="string" pos:line="32" pos:column="22">"&lt;D:response"<pos:position pos:line="32" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="37">r<pos:position pos:line="32" pos:column="38"/></name></expr></argument>)<pos:position pos:line="32" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
            <for pos:line="33" pos:column="13">for <control pos:line="33" pos:column="17">(<init><expr><name pos:line="33" pos:column="18">t<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <name><name pos:line="33" pos:column="22">first<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">-&gt;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="29">propresult<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">.<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="40">xmlns<pos:position pos:line="33" pos:column="45"/></name></name></expr>;<pos:position pos:line="33" pos:column="46"/></init> <condition><expr><name pos:line="33" pos:column="47">t<pos:position pos:line="33" pos:column="48"/></name></expr>;<pos:position pos:line="33" pos:column="49"/></condition> <incr><expr><name pos:line="33" pos:column="50">t<pos:position pos:line="33" pos:column="51"/></name> <operator pos:line="33" pos:column="52">=<pos:position pos:line="33" pos:column="53"/></operator> <name><name pos:line="33" pos:column="54">t<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">-&gt;<pos:position pos:line="33" pos:column="60"/></operator><name pos:line="33" pos:column="57">next<pos:position pos:line="33" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="33" pos:column="62"/></control> <block pos:line="33" pos:column="63">{
                <expr_stmt><expr><call><name pos:line="34" pos:column="17">ap_rputs<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name><name pos:line="34" pos:column="26">t<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">-&gt;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="29">text<pos:position pos:line="34" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="35">r<pos:position pos:line="34" pos:column="36"/></name></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="35" pos:column="14"/></block></for>
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">ap_rputc<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><literal type="char" pos:line="36" pos:column="22">'&gt;'<pos:position pos:line="36" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="27">r<pos:position pos:line="36" pos:column="28"/></name></expr></argument>)<pos:position pos:line="36" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="39" pos:column="9">ap_rputs<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name pos:line="39" pos:column="18">DEBUG_CR<pos:position pos:line="39" pos:column="26"/></name> <literal type="string" pos:line="39" pos:column="27">"&lt;D:href&gt;"<pos:position pos:line="39" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="39">r<pos:position pos:line="39" pos:column="40"/></name></expr></argument>)<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">ap_rputs<pos:position pos:line="40" pos:column="17"/></name><argument_list pos:line="40" pos:column="17">(<argument><expr><call><name pos:line="40" pos:column="18">dav_xml_escape_uri<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><name><name pos:line="40" pos:column="37">r<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">-&gt;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="40">pool<pos:position pos:line="40" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="46">first<pos:position pos:line="40" pos:column="51"/></name><operator pos:line="40" pos:column="51">-&gt;<pos:position pos:line="40" pos:column="56"/></operator><name pos:line="40" pos:column="53">href<pos:position pos:line="40" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="60">r<pos:position pos:line="40" pos:column="61"/></name></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">ap_rputs<pos:position pos:line="41" pos:column="17"/></name><argument_list pos:line="41" pos:column="17">(<argument><expr><literal type="string" pos:line="41" pos:column="18">"&lt;/D:href&gt;"<pos:position pos:line="41" pos:column="35"/></literal> <name pos:line="41" pos:column="30">DEBUG_CR<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="40">r<pos:position pos:line="41" pos:column="41"/></name></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>

        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name><name pos:line="43" pos:column="13">first<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">propresult<pos:position pos:line="43" pos:column="30"/></name><operator pos:line="43" pos:column="30">.<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="31">propstats<pos:position pos:line="43" pos:column="40"/></name></name> <operator pos:line="43" pos:column="41">==<pos:position pos:line="43" pos:column="43"/></operator> <name pos:line="43" pos:column="44">NULL<pos:position pos:line="43" pos:column="48"/></name></expr>)<pos:position pos:line="43" pos:column="49"/></condition><then pos:line="43" pos:column="49"> <block pos:line="43" pos:column="50">{
            <comment type="block" pos:line="44" pos:column="13">/* use the Status-Line text from Apache.  Note, this will
             * default to 500 Internal Server Error if first-&gt;status
             * is not a known (or valid) status code.
             */</comment>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">ap_rprintf<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><name pos:line="48" pos:column="24">r<pos:position pos:line="48" pos:column="25"/></name></expr></argument>,
                       <argument><expr><literal type="string" pos:line="49" pos:column="24">"&lt;D:status&gt;HTTP/1.1 %s&lt;/D:status&gt;"<pos:position pos:line="49" pos:column="70"/></literal> <name pos:line="49" pos:column="59">DEBUG_CR<pos:position pos:line="49" pos:column="67"/></name></expr></argument>,
                       <argument><expr><call><name pos:line="50" pos:column="24">ap_get_status_line<pos:position pos:line="50" pos:column="42"/></name><argument_list pos:line="50" pos:column="42">(<argument><expr><name><name pos:line="50" pos:column="43">first<pos:position pos:line="50" pos:column="48"/></name><operator pos:line="50" pos:column="48">-&gt;<pos:position pos:line="50" pos:column="53"/></operator><name pos:line="50" pos:column="50">status<pos:position pos:line="50" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then>
        <else pos:line="52" pos:column="9">else <block pos:line="52" pos:column="14">{
            <comment type="block" pos:line="53" pos:column="13">/* assume this includes &lt;propstat&gt; and is quoted properly */</comment>
            <for pos:line="54" pos:column="13">for <control pos:line="54" pos:column="17">(<init><expr><name pos:line="54" pos:column="18">t<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <name><name pos:line="54" pos:column="22">first<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">-&gt;<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="29">propresult<pos:position pos:line="54" pos:column="39"/></name><operator pos:line="54" pos:column="39">.<pos:position pos:line="54" pos:column="40"/></operator><name pos:line="54" pos:column="40">propstats<pos:position pos:line="54" pos:column="49"/></name></name></expr>;<pos:position pos:line="54" pos:column="50"/></init> <condition><expr><name pos:line="54" pos:column="51">t<pos:position pos:line="54" pos:column="52"/></name></expr>;<pos:position pos:line="54" pos:column="53"/></condition> <incr><expr><name pos:line="54" pos:column="54">t<pos:position pos:line="54" pos:column="55"/></name> <operator pos:line="54" pos:column="56">=<pos:position pos:line="54" pos:column="57"/></operator> <name><name pos:line="54" pos:column="58">t<pos:position pos:line="54" pos:column="59"/></name><operator pos:line="54" pos:column="59">-&gt;<pos:position pos:line="54" pos:column="64"/></operator><name pos:line="54" pos:column="61">next<pos:position pos:line="54" pos:column="65"/></name></name></expr></incr>)<pos:position pos:line="54" pos:column="66"/></control> <block pos:line="54" pos:column="67">{
                <expr_stmt><expr><call><name pos:line="55" pos:column="17">ap_rputs<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><name><name pos:line="55" pos:column="26">t<pos:position pos:line="55" pos:column="27"/></name><operator pos:line="55" pos:column="27">-&gt;<pos:position pos:line="55" pos:column="32"/></operator><name pos:line="55" pos:column="29">text<pos:position pos:line="55" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="35">r<pos:position pos:line="55" pos:column="36"/></name></expr></argument>)<pos:position pos:line="55" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="56" pos:column="14"/></block></for>
        }<pos:position pos:line="57" pos:column="10"/></block></else></if>

        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name><name pos:line="59" pos:column="13">first<pos:position pos:line="59" pos:column="18"/></name><operator pos:line="59" pos:column="18">-&gt;<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="20">desc<pos:position pos:line="59" pos:column="24"/></name></name> <operator pos:line="59" pos:column="25">!=<pos:position pos:line="59" pos:column="27"/></operator> <name pos:line="59" pos:column="28">NULL<pos:position pos:line="59" pos:column="32"/></name></expr>)<pos:position pos:line="59" pos:column="33"/></condition><then pos:line="59" pos:column="33"> <block pos:line="59" pos:column="34">{
            <comment type="block" pos:line="60" pos:column="13">/*
             * We supply the description, so we know it doesn't have to
             * have any escaping/encoding applied to it.
             */</comment>
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">ap_rputs<pos:position pos:line="64" pos:column="21"/></name><argument_list pos:line="64" pos:column="21">(<argument><expr><literal type="string" pos:line="64" pos:column="22">"&lt;D:responsedescription&gt;"<pos:position pos:line="64" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="49">r<pos:position pos:line="64" pos:column="50"/></name></expr></argument>)<pos:position pos:line="64" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">ap_rputs<pos:position pos:line="65" pos:column="21"/></name><argument_list pos:line="65" pos:column="21">(<argument><expr><name><name pos:line="65" pos:column="22">first<pos:position pos:line="65" pos:column="27"/></name><operator pos:line="65" pos:column="27">-&gt;<pos:position pos:line="65" pos:column="32"/></operator><name pos:line="65" pos:column="29">desc<pos:position pos:line="65" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="35">r<pos:position pos:line="65" pos:column="36"/></name></expr></argument>)<pos:position pos:line="65" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">ap_rputs<pos:position pos:line="66" pos:column="21"/></name><argument_list pos:line="66" pos:column="21">(<argument><expr><literal type="string" pos:line="66" pos:column="22">"&lt;/D:responsedescription&gt;"<pos:position pos:line="66" pos:column="54"/></literal> <name pos:line="66" pos:column="49">DEBUG_CR<pos:position pos:line="66" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="59">r<pos:position pos:line="66" pos:column="60"/></name></expr></argument>)<pos:position pos:line="66" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="69" pos:column="9">ap_rputs<pos:position pos:line="69" pos:column="17"/></name><argument_list pos:line="69" pos:column="17">(<argument><expr><literal type="string" pos:line="69" pos:column="18">"&lt;/D:response&gt;"<pos:position pos:line="69" pos:column="39"/></literal> <name pos:line="69" pos:column="34">DEBUG_CR<pos:position pos:line="69" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="44">r<pos:position pos:line="69" pos:column="45"/></name></expr></argument>)<pos:position pos:line="69" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="72" pos:column="5">ap_rputs<pos:position pos:line="72" pos:column="13"/></name><argument_list pos:line="72" pos:column="13">(<argument><expr><literal type="string" pos:line="72" pos:column="14">"&lt;/D:multistatus&gt;"<pos:position pos:line="72" pos:column="38"/></literal> <name pos:line="72" pos:column="33">DEBUG_CR<pos:position pos:line="72" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="43">r<pos:position pos:line="72" pos:column="44"/></name></expr></argument>)<pos:position pos:line="72" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="46"/></expr_stmt>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

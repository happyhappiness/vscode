<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_122_httpd-2.2.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name><modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier><modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type> <name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">str<pos:position pos:line="3" pos:column="13"/></name><index pos:line="3" pos:column="13">[<expr><literal type="number" pos:line="3" pos:column="14">1024<pos:position pos:line="3" pos:column="18"/></literal></expr>]<pos:position pos:line="3" pos:column="19"/></index></name></decl>, <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="22">contitle<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><name pos:line="3" pos:column="33">NULL<pos:position pos:line="3" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HANDLE<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">hproc<pos:position pos:line="4" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="19">thread<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HANDLE<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">hwinsta<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">NULL<pos:position pos:line="5" pos:column="26"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="28">hsavewinsta<pos:position pos:line="5" pos:column="39"/></name></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">HANDLE<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">hdesk<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="26">hsavedesk<pos:position pos:line="6" pos:column="35"/></name> <init pos:line="6" pos:column="36">= <expr><name pos:line="6" pos:column="38">NULL<pos:position pos:line="6" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">HANDLE<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">conin<pos:position pos:line="7" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="19">conout<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">HANDLE<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">hstdin<pos:position pos:line="8" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="20">hstdout<pos:position pos:line="8" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="29">hstderr<pos:position pos:line="8" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="38">hdup<pos:position pos:line="8" pos:column="42"/></name></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">feedback_args_t<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">feed<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">DWORD<pos:position pos:line="10" pos:column="10"/></name></type> <name pos:line="10" pos:column="11">conmode<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">DWORD<pos:position pos:line="11" pos:column="10"/></name></type> <name pos:line="11" pos:column="11">newinmode<pos:position pos:line="11" pos:column="20"/></name> <init pos:line="11" pos:column="21">= <expr><literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="26">notinmode<pos:position pos:line="11" pos:column="35"/></name> <init pos:line="11" pos:column="36">= <expr><literal type="number" pos:line="11" pos:column="38">0<pos:position pos:line="11" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">DWORD<pos:position pos:line="12" pos:column="10"/></name></type> <name pos:line="12" pos:column="11">newoutmode<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="27">notoutmode<pos:position pos:line="12" pos:column="37"/></name> <init pos:line="12" pos:column="38">= <expr><literal type="number" pos:line="12" pos:column="40">0<pos:position pos:line="12" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">DWORD<pos:position pos:line="13" pos:column="10"/></name></type> <name pos:line="13" pos:column="11">tid<pos:position pos:line="13" pos:column="14"/></name></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">DWORD<pos:position pos:line="14" pos:column="10"/></name></type> <name pos:line="14" pos:column="11">len<pos:position pos:line="14" pos:column="14"/></name></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">DWORD<pos:position pos:line="15" pos:column="10"/></name></type> <name pos:line="15" pos:column="11">timeout<pos:position pos:line="15" pos:column="18"/></name> <init pos:line="15" pos:column="19">= <expr><name pos:line="15" pos:column="21">INFINITE<pos:position pos:line="15" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">BOOL<pos:position pos:line="16" pos:column="9"/></name></type> <name pos:line="16" pos:column="10">isservice<pos:position pos:line="16" pos:column="19"/></name> <init pos:line="16" pos:column="20">= <expr><name pos:line="16" pos:column="22">FALSE<pos:position pos:line="16" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name> <modifier pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></modifier></type><name pos:line="17" pos:column="11">arg0<pos:position pos:line="17" pos:column="15"/></name> <init pos:line="17" pos:column="16">= <expr><name><name pos:line="17" pos:column="18">argv<pos:position pos:line="17" pos:column="22"/></name><index pos:line="17" pos:column="22">[<expr><literal type="number" pos:line="17" pos:column="23">0<pos:position pos:line="17" pos:column="24"/></literal></expr>]<pos:position pos:line="17" pos:column="25"/></index></name></expr></init></decl>;<pos:position pos:line="17" pos:column="26"/></decl_stmt>

    <while pos:line="19" pos:column="5">while <condition pos:line="19" pos:column="11">(<expr><operator pos:line="19" pos:column="12">--<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">argc<pos:position pos:line="19" pos:column="18"/></name></expr>)<pos:position pos:line="19" pos:column="19"/></condition> <block pos:line="19" pos:column="20">{
        <expr_stmt><expr><operator pos:line="20" pos:column="9">++<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">argv<pos:position pos:line="20" pos:column="15"/></name></expr>;<pos:position pos:line="20" pos:column="16"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">*<pos:position pos:line="21" pos:column="14"/></operator><operator pos:line="21" pos:column="14">*<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">argv<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">==<pos:position pos:line="21" pos:column="22"/></operator> <literal type="char" pos:line="21" pos:column="23">'/'<pos:position pos:line="21" pos:column="26"/></literal> <operator pos:line="21" pos:column="27">||<pos:position pos:line="21" pos:column="29"/></operator> <operator pos:line="21" pos:column="30">*<pos:position pos:line="21" pos:column="31"/></operator><operator pos:line="21" pos:column="31">*<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="32">argv<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">==<pos:position pos:line="21" pos:column="39"/></operator> <literal type="char" pos:line="21" pos:column="40">'-'<pos:position pos:line="21" pos:column="43"/></literal></expr>)<pos:position pos:line="21" pos:column="44"/></condition><then pos:line="21" pos:column="44"> <block pos:line="21" pos:column="45">{
            <switch pos:line="22" pos:column="13">switch <condition pos:line="22" pos:column="20">(<expr><call><name pos:line="22" pos:column="21">tolower<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><operator pos:line="22" pos:column="29">(<pos:position pos:line="22" pos:column="30"/></operator><operator pos:line="22" pos:column="30">*<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="31">argv<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">)<pos:position pos:line="22" pos:column="36"/></operator><index pos:line="22" pos:column="36">[<expr><literal type="number" pos:line="22" pos:column="37">1<pos:position pos:line="22" pos:column="38"/></literal></expr>]<pos:position pos:line="22" pos:column="39"/></index></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="41"/></condition> <block pos:line="22" pos:column="42">{
                <case pos:line="23" pos:column="17">case <expr><literal type="char" pos:line="23" pos:column="22">'c'<pos:position pos:line="23" pos:column="25"/></literal></expr>:<pos:position pos:line="23" pos:column="26"/></case>
                    <expr_stmt><expr><name pos:line="24" pos:column="21">notinmode<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">|=<pos:position pos:line="24" pos:column="33"/></operator> <name pos:line="24" pos:column="34">ENABLE_LINE_INPUT<pos:position pos:line="24" pos:column="51"/></name></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>          <break pos:line="24" pos:column="62">break;<pos:position pos:line="24" pos:column="68"/></break>
                <case pos:line="25" pos:column="17">case <expr><literal type="char" pos:line="25" pos:column="22">'l'<pos:position pos:line="25" pos:column="25"/></literal></expr>:<pos:position pos:line="25" pos:column="26"/></case>
                    <expr_stmt><expr><name pos:line="26" pos:column="21">newinmode<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">|=<pos:position pos:line="26" pos:column="33"/></operator> <name pos:line="26" pos:column="34">ENABLE_LINE_INPUT<pos:position pos:line="26" pos:column="51"/></name></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt>          <break pos:line="26" pos:column="62">break;<pos:position pos:line="26" pos:column="68"/></break>
                <case pos:line="27" pos:column="17">case <expr><literal type="char" pos:line="27" pos:column="22">'q'<pos:position pos:line="27" pos:column="25"/></literal></expr>:<pos:position pos:line="27" pos:column="26"/></case>
                    <expr_stmt><expr><name pos:line="28" pos:column="21">notinmode<pos:position pos:line="28" pos:column="30"/></name> <operator pos:line="28" pos:column="31">|=<pos:position pos:line="28" pos:column="33"/></operator> <name pos:line="28" pos:column="34">ENABLE_ECHO_INPUT<pos:position pos:line="28" pos:column="51"/></name></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>          <break pos:line="28" pos:column="62">break;<pos:position pos:line="28" pos:column="68"/></break>
                <case pos:line="29" pos:column="17">case <expr><literal type="char" pos:line="29" pos:column="22">'e'<pos:position pos:line="29" pos:column="25"/></literal></expr>:<pos:position pos:line="29" pos:column="26"/></case>
                    <expr_stmt><expr><name pos:line="30" pos:column="21">newinmode<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">|=<pos:position pos:line="30" pos:column="33"/></operator> <name pos:line="30" pos:column="34">ENABLE_ECHO_INPUT<pos:position pos:line="30" pos:column="51"/></name></expr>;<pos:position pos:line="30" pos:column="52"/></expr_stmt>          <break pos:line="30" pos:column="62">break;<pos:position pos:line="30" pos:column="68"/></break>
                <case pos:line="31" pos:column="17">case <expr><literal type="char" pos:line="31" pos:column="22">'u'<pos:position pos:line="31" pos:column="25"/></literal></expr>:<pos:position pos:line="31" pos:column="26"/></case>
                    <expr_stmt><expr><name pos:line="32" pos:column="21">notinmode<pos:position pos:line="32" pos:column="30"/></name> <operator pos:line="32" pos:column="31">|=<pos:position pos:line="32" pos:column="33"/></operator> <name pos:line="32" pos:column="34">ENABLE_PROCESSED_INPUT<pos:position pos:line="32" pos:column="56"/></name></expr>;<pos:position pos:line="32" pos:column="57"/></expr_stmt>     <break pos:line="32" pos:column="62">break;<pos:position pos:line="32" pos:column="68"/></break>
                <case pos:line="33" pos:column="17">case <expr><literal type="char" pos:line="33" pos:column="22">'p'<pos:position pos:line="33" pos:column="25"/></literal></expr>:<pos:position pos:line="33" pos:column="26"/></case>
                    <expr_stmt><expr><name pos:line="34" pos:column="21">newinmode<pos:position pos:line="34" pos:column="30"/></name> <operator pos:line="34" pos:column="31">|=<pos:position pos:line="34" pos:column="33"/></operator> <name pos:line="34" pos:column="34">ENABLE_PROCESSED_INPUT<pos:position pos:line="34" pos:column="56"/></name></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>     <break pos:line="34" pos:column="62">break;<pos:position pos:line="34" pos:column="68"/></break>
                <case pos:line="35" pos:column="17">case <expr><literal type="char" pos:line="35" pos:column="22">'n'<pos:position pos:line="35" pos:column="25"/></literal></expr>:<pos:position pos:line="35" pos:column="26"/></case>
                    <expr_stmt><expr><name pos:line="36" pos:column="21">notoutmode<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">|=<pos:position pos:line="36" pos:column="34"/></operator> <name pos:line="36" pos:column="35">ENABLE_WRAP_AT_EOL_OUTPUT<pos:position pos:line="36" pos:column="60"/></name></expr>;<pos:position pos:line="36" pos:column="61"/></expr_stmt> <break pos:line="36" pos:column="62">break;<pos:position pos:line="36" pos:column="68"/></break>
                <case pos:line="37" pos:column="17">case <expr><literal type="char" pos:line="37" pos:column="22">'w'<pos:position pos:line="37" pos:column="25"/></literal></expr>:<pos:position pos:line="37" pos:column="26"/></case>
                    <expr_stmt><expr><name pos:line="38" pos:column="21">newoutmode<pos:position pos:line="38" pos:column="31"/></name> <operator pos:line="38" pos:column="32">|=<pos:position pos:line="38" pos:column="34"/></operator> <name pos:line="38" pos:column="35">ENABLE_WRAP_AT_EOL_OUTPUT<pos:position pos:line="38" pos:column="60"/></name></expr>;<pos:position pos:line="38" pos:column="61"/></expr_stmt> <break pos:line="38" pos:column="62">break;<pos:position pos:line="38" pos:column="68"/></break>
                <case pos:line="39" pos:column="17">case <expr><literal type="char" pos:line="39" pos:column="22">'r'<pos:position pos:line="39" pos:column="25"/></literal></expr>:<pos:position pos:line="39" pos:column="26"/></case>
                    <expr_stmt><expr><name pos:line="40" pos:column="21">notoutmode<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">|=<pos:position pos:line="40" pos:column="34"/></operator> <name pos:line="40" pos:column="35">ENABLE_PROCESSED_OUTPUT<pos:position pos:line="40" pos:column="58"/></name></expr>;<pos:position pos:line="40" pos:column="59"/></expr_stmt>   <break pos:line="40" pos:column="62">break;<pos:position pos:line="40" pos:column="68"/></break>
                <case pos:line="41" pos:column="17">case <expr><literal type="char" pos:line="41" pos:column="22">'f'<pos:position pos:line="41" pos:column="25"/></literal></expr>:<pos:position pos:line="41" pos:column="26"/></case>
                    <expr_stmt><expr><name pos:line="42" pos:column="21">newoutmode<pos:position pos:line="42" pos:column="31"/></name> <operator pos:line="42" pos:column="32">|=<pos:position pos:line="42" pos:column="34"/></operator> <name pos:line="42" pos:column="35">ENABLE_PROCESSED_OUTPUT<pos:position pos:line="42" pos:column="58"/></name></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>   <break pos:line="42" pos:column="62">break;<pos:position pos:line="42" pos:column="68"/></break>
                <case pos:line="43" pos:column="17">case <expr><literal type="char" pos:line="43" pos:column="22">'o'<pos:position pos:line="43" pos:column="25"/></literal></expr>:<pos:position pos:line="43" pos:column="26"/></case>
                    <if pos:line="44" pos:column="21">if <condition pos:line="44" pos:column="24">(<expr><operator pos:line="44" pos:column="25">*<pos:position pos:line="44" pos:column="26"/></operator><operator pos:line="44" pos:column="26">(<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="27">argv<pos:position pos:line="44" pos:column="31"/></name> <operator pos:line="44" pos:column="32">+<pos:position pos:line="44" pos:column="33"/></operator> <literal type="number" pos:line="44" pos:column="34">1<pos:position pos:line="44" pos:column="35"/></literal><operator pos:line="44" pos:column="35">)<pos:position pos:line="44" pos:column="36"/></operator> <operator pos:line="44" pos:column="37">&amp;&amp;<pos:position pos:line="44" pos:column="47"/></operator> <operator pos:line="44" pos:column="40">*<pos:position pos:line="44" pos:column="41"/></operator><operator pos:line="44" pos:column="41">(<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="42">argv<pos:position pos:line="44" pos:column="46"/></name> <operator pos:line="44" pos:column="47">+<pos:position pos:line="44" pos:column="48"/></operator> <literal type="number" pos:line="44" pos:column="49">1<pos:position pos:line="44" pos:column="50"/></literal><operator pos:line="44" pos:column="50">)<pos:position pos:line="44" pos:column="51"/></operator><index pos:line="44" pos:column="51">[<expr><literal type="number" pos:line="44" pos:column="52">0<pos:position pos:line="44" pos:column="53"/></literal></expr>]<pos:position pos:line="44" pos:column="54"/></index> <operator pos:line="44" pos:column="55">!=<pos:position pos:line="44" pos:column="57"/></operator> <literal type="char" pos:line="44" pos:column="58">'-'<pos:position pos:line="44" pos:column="61"/></literal></expr>)<pos:position pos:line="44" pos:column="62"/></condition><then pos:line="44" pos:column="62"> <block pos:line="44" pos:column="63">{
                        <expr_stmt><expr><operator pos:line="45" pos:column="25">*<pos:position pos:line="45" pos:column="26"/></operator><operator pos:line="45" pos:column="26">(<pos:position pos:line="45" pos:column="27"/></operator><operator pos:line="45" pos:column="27">++<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="29">argv<pos:position pos:line="45" pos:column="33"/></name><operator pos:line="45" pos:column="33">)<pos:position pos:line="45" pos:column="34"/></operator></expr>;<pos:position pos:line="45" pos:column="35"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="46" pos:column="25">timeout<pos:position pos:line="46" pos:column="32"/></name> <operator pos:line="46" pos:column="33">=<pos:position pos:line="46" pos:column="34"/></operator> <call><name pos:line="46" pos:column="35">atoi<pos:position pos:line="46" pos:column="39"/></name><argument_list pos:line="46" pos:column="39">(<argument><expr><operator pos:line="46" pos:column="40">*<pos:position pos:line="46" pos:column="41"/></operator><name pos:line="46" pos:column="41">argv<pos:position pos:line="46" pos:column="45"/></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call> <operator pos:line="46" pos:column="47">/<pos:position pos:line="46" pos:column="48"/></operator> <literal type="number" pos:line="46" pos:column="49">1000<pos:position pos:line="46" pos:column="53"/></literal></expr>;<pos:position pos:line="46" pos:column="54"/></expr_stmt>
                        <expr_stmt><expr><operator pos:line="47" pos:column="25">--<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="27">argc<pos:position pos:line="47" pos:column="31"/></name></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt>
                    }<pos:position pos:line="48" pos:column="22"/></block></then>
                    <else pos:line="49" pos:column="21">else <block pos:line="49" pos:column="26">{
                        <expr_stmt><expr><name pos:line="50" pos:column="25">timeout<pos:position pos:line="50" pos:column="32"/></name> <operator pos:line="50" pos:column="33">=<pos:position pos:line="50" pos:column="34"/></operator> <literal type="number" pos:line="50" pos:column="35">0<pos:position pos:line="50" pos:column="36"/></literal></expr>;<pos:position pos:line="50" pos:column="37"/></expr_stmt>
                    }<pos:position pos:line="51" pos:column="22"/></block></else></if>
                    <break pos:line="52" pos:column="21">break;<pos:position pos:line="52" pos:column="27"/></break>
                <case pos:line="53" pos:column="17">case <expr><literal type="char" pos:line="53" pos:column="22">'v'<pos:position pos:line="53" pos:column="25"/></literal></expr>:<pos:position pos:line="53" pos:column="26"/></case>
                    <expr_stmt><expr><name pos:line="54" pos:column="21">verbose<pos:position pos:line="54" pos:column="28"/></name> <operator pos:line="54" pos:column="29">=<pos:position pos:line="54" pos:column="30"/></operator> <name pos:line="54" pos:column="31">TRUE<pos:position pos:line="54" pos:column="35"/></name></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt>
                    <break pos:line="55" pos:column="21">break;<pos:position pos:line="55" pos:column="27"/></break>
                <case pos:line="56" pos:column="17">case <expr><literal type="char" pos:line="56" pos:column="22">'t'<pos:position pos:line="56" pos:column="25"/></literal></expr>:<pos:position pos:line="56" pos:column="26"/></case>
                    <expr_stmt><expr><name pos:line="57" pos:column="21">contitle<pos:position pos:line="57" pos:column="29"/></name> <operator pos:line="57" pos:column="30">=<pos:position pos:line="57" pos:column="31"/></operator> <operator pos:line="57" pos:column="32">*<pos:position pos:line="57" pos:column="33"/></operator><operator pos:line="57" pos:column="33">(<pos:position pos:line="57" pos:column="34"/></operator><operator pos:line="57" pos:column="34">++<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="36">argv<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">)<pos:position pos:line="57" pos:column="41"/></operator></expr>;<pos:position pos:line="57" pos:column="42"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="58" pos:column="21">--<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="23">argc<pos:position pos:line="58" pos:column="27"/></name></expr>;<pos:position pos:line="58" pos:column="28"/></expr_stmt>
                    <break pos:line="59" pos:column="21">break;<pos:position pos:line="59" pos:column="27"/></break>
                <case pos:line="60" pos:column="17">case <expr><literal type="char" pos:line="60" pos:column="22">'?'<pos:position pos:line="60" pos:column="25"/></literal></expr>:<pos:position pos:line="60" pos:column="26"/></case>
                    <expr_stmt><expr><call><name pos:line="61" pos:column="21">printf<pos:position pos:line="61" pos:column="27"/></name><argument_list pos:line="61" pos:column="27">(<argument><expr><name pos:line="61" pos:column="28">options<pos:position pos:line="61" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="37">arg0<pos:position pos:line="61" pos:column="41"/></name></expr></argument>)<pos:position pos:line="61" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="43"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="62" pos:column="21">exit<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><literal type="number" pos:line="62" pos:column="26">1<pos:position pos:line="62" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="29"/></expr_stmt>
                <default pos:line="63" pos:column="17">default:<pos:position pos:line="63" pos:column="25"/></default>
                    <expr_stmt><expr><call><name pos:line="64" pos:column="21">printf<pos:position pos:line="64" pos:column="27"/></name><argument_list pos:line="64" pos:column="27">(<argument><expr><literal type="string" pos:line="64" pos:column="28">"wintty option %s not recognized, use -? for help.\n\n"<pos:position pos:line="64" pos:column="83"/></literal></expr></argument>, <argument><expr><operator pos:line="64" pos:column="85">*<pos:position pos:line="64" pos:column="86"/></operator><name pos:line="64" pos:column="86">argv<pos:position pos:line="64" pos:column="90"/></name></expr></argument>)<pos:position pos:line="64" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="92"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="65" pos:column="21">exit<pos:position pos:line="65" pos:column="25"/></name><argument_list pos:line="65" pos:column="25">(<argument><expr><literal type="number" pos:line="65" pos:column="26">1<pos:position pos:line="65" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="66" pos:column="14"/></block></switch>
        }<pos:position pos:line="67" pos:column="10"/></block></then>
        <else pos:line="68" pos:column="9">else <block pos:line="68" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">printf<pos:position pos:line="69" pos:column="19"/></name><argument_list pos:line="69" pos:column="19">(<argument><expr><literal type="string" pos:line="69" pos:column="20">"wintty argument %s not understood, use -? for help.\n\n"<pos:position pos:line="69" pos:column="77"/></literal></expr></argument>, <argument><expr><operator pos:line="69" pos:column="79">*<pos:position pos:line="69" pos:column="80"/></operator><name pos:line="69" pos:column="80">argv<pos:position pos:line="69" pos:column="84"/></name></expr></argument>)<pos:position pos:line="69" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="86"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">exit<pos:position pos:line="70" pos:column="17"/></name><argument_list pos:line="70" pos:column="17">(<argument><expr><literal type="number" pos:line="70" pos:column="18">1<pos:position pos:line="70" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="71" pos:column="10"/></block></else></if>
    }<pos:position pos:line="72" pos:column="6"/></block></while>

    <expr_stmt><expr><name pos:line="74" pos:column="5">hproc<pos:position pos:line="74" pos:column="10"/></name> <operator pos:line="74" pos:column="11">=<pos:position pos:line="74" pos:column="12"/></operator> <call><name pos:line="74" pos:column="13">GetCurrentProcess<pos:position pos:line="74" pos:column="30"/></name><argument_list pos:line="74" pos:column="30">()<pos:position pos:line="74" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="75" pos:column="5">hsavewinsta<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">=<pos:position pos:line="75" pos:column="18"/></operator> <call><name pos:line="75" pos:column="19">GetProcessWindowStation<pos:position pos:line="75" pos:column="42"/></name><argument_list pos:line="75" pos:column="42">()<pos:position pos:line="75" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="45"/></expr_stmt>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><operator pos:line="76" pos:column="9">!<pos:position pos:line="76" pos:column="10"/></operator><name pos:line="76" pos:column="10">hsavewinsta<pos:position pos:line="76" pos:column="21"/></name> <operator pos:line="76" pos:column="22">||<pos:position pos:line="76" pos:column="24"/></operator> <name pos:line="76" pos:column="25">hsavewinsta<pos:position pos:line="76" pos:column="36"/></name> <operator pos:line="76" pos:column="37">==<pos:position pos:line="76" pos:column="39"/></operator> <name pos:line="76" pos:column="40">INVALID_HANDLE_VALUE<pos:position pos:line="76" pos:column="60"/></name></expr>)<pos:position pos:line="76" pos:column="61"/></condition><then pos:line="76" pos:column="61"> <block pos:line="76" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">printerr<pos:position pos:line="77" pos:column="17"/></name><argument_list pos:line="77" pos:column="17">(<argument><expr><literal type="string" pos:line="77" pos:column="18">"GetProcessWindowStation() failed (%d)\n"<pos:position pos:line="77" pos:column="59"/></literal></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="61">GetLastError<pos:position pos:line="77" pos:column="73"/></name><argument_list pos:line="77" pos:column="73">()<pos:position pos:line="77" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></then>
    <elseif pos:line="79" pos:column="5">else <if pos:line="79" pos:column="10">if <condition pos:line="79" pos:column="13">(<expr><operator pos:line="79" pos:column="14">!<pos:position pos:line="79" pos:column="15"/></operator><call><name pos:line="79" pos:column="15">GetUserObjectInformation<pos:position pos:line="79" pos:column="39"/></name><argument_list pos:line="79" pos:column="39">(<argument><expr><name pos:line="79" pos:column="40">hsavewinsta<pos:position pos:line="79" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="53">UOI_NAME<pos:position pos:line="79" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="63">str<pos:position pos:line="79" pos:column="66"/></name></expr></argument>, <argument><expr><sizeof pos:line="79" pos:column="68">sizeof<argument_list pos:line="79" pos:column="74">(<argument><expr><name pos:line="79" pos:column="75">str<pos:position pos:line="79" pos:column="78"/></name></expr></argument>)<pos:position pos:line="79" pos:column="79"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="79" pos:column="81">&amp;<pos:position pos:line="79" pos:column="86"/></operator><name pos:line="79" pos:column="82">len<pos:position pos:line="79" pos:column="85"/></name></expr></argument>)<pos:position pos:line="79" pos:column="86"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="87"/></condition><then pos:line="79" pos:column="87"> <block pos:line="79" pos:column="88">{
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">printerr<pos:position pos:line="80" pos:column="17"/></name><argument_list pos:line="80" pos:column="17">(<argument><expr><literal type="string" pos:line="80" pos:column="18">"GetUserObjectInfoformation(hWinSta) failed (%d)\n"<pos:position pos:line="80" pos:column="69"/></literal></expr></argument>, <argument><expr><call><name pos:line="80" pos:column="71">GetLastError<pos:position pos:line="80" pos:column="83"/></name><argument_list pos:line="80" pos:column="83">()<pos:position pos:line="80" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="80" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="87"/></expr_stmt>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="82" pos:column="5">else <if pos:line="82" pos:column="10">if <condition pos:line="82" pos:column="13">(<expr><call><name pos:line="82" pos:column="14">strnicmp<pos:position pos:line="82" pos:column="22"/></name><argument_list pos:line="82" pos:column="22">(<argument><expr><name pos:line="82" pos:column="23">str<pos:position pos:line="82" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="28">"Service-"<pos:position pos:line="82" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="40">8<pos:position pos:line="82" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="42"/></argument_list></call> <operator pos:line="82" pos:column="43">==<pos:position pos:line="82" pos:column="45"/></operator> <literal type="number" pos:line="82" pos:column="46">0<pos:position pos:line="82" pos:column="47"/></literal></expr>)<pos:position pos:line="82" pos:column="48"/></condition><then pos:line="82" pos:column="48"> <block pos:line="82" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">printerr<pos:position pos:line="83" pos:column="17"/></name><argument_list pos:line="83" pos:column="17">(<argument><expr><literal type="string" pos:line="83" pos:column="18">"WindowStation Name %s is a service\n"<pos:position pos:line="83" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="58">str<pos:position pos:line="83" pos:column="61"/></name></expr></argument>)<pos:position pos:line="83" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><name pos:line="84" pos:column="9">isservice<pos:position pos:line="84" pos:column="18"/></name> <operator pos:line="84" pos:column="19">=<pos:position pos:line="84" pos:column="20"/></operator> <name pos:line="84" pos:column="21">TRUE<pos:position pos:line="84" pos:column="25"/></name></expr>;<pos:position pos:line="84" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if></elseif></if>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">SetLastError<pos:position pos:line="86" pos:column="17"/></name><argument_list pos:line="86" pos:column="17">(<argument><expr><literal type="number" pos:line="86" pos:column="18">0<pos:position pos:line="86" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="88" pos:column="5">hstdin<pos:position pos:line="88" pos:column="11"/></name> <operator pos:line="88" pos:column="12">=<pos:position pos:line="88" pos:column="13"/></operator> <call><name pos:line="88" pos:column="14">GetStdHandle<pos:position pos:line="88" pos:column="26"/></name><argument_list pos:line="88" pos:column="26">(<argument><expr><name pos:line="88" pos:column="27">STD_INPUT_HANDLE<pos:position pos:line="88" pos:column="43"/></name></expr></argument>)<pos:position pos:line="88" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="45"/></expr_stmt>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><operator pos:line="89" pos:column="9">!<pos:position pos:line="89" pos:column="10"/></operator><name pos:line="89" pos:column="10">hstdin<pos:position pos:line="89" pos:column="16"/></name> <operator pos:line="89" pos:column="17">||<pos:position pos:line="89" pos:column="19"/></operator> <name pos:line="89" pos:column="20">hstdin<pos:position pos:line="89" pos:column="26"/></name> <operator pos:line="89" pos:column="27">==<pos:position pos:line="89" pos:column="29"/></operator> <name pos:line="89" pos:column="30">INVALID_HANDLE_VALUE<pos:position pos:line="89" pos:column="50"/></name></expr>)<pos:position pos:line="89" pos:column="51"/></condition><then pos:line="89" pos:column="51"> <block pos:line="89" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">printerr<pos:position pos:line="90" pos:column="17"/></name><argument_list pos:line="90" pos:column="17">(<argument><expr><literal type="string" pos:line="90" pos:column="18">"GetStdHandle(STD_INPUT_HANDLE) failed (%d)\n"<pos:position pos:line="90" pos:column="64"/></literal></expr></argument>,
                 <argument><expr><call><name pos:line="91" pos:column="18">GetLastError<pos:position pos:line="91" pos:column="30"/></name><argument_list pos:line="91" pos:column="30">()<pos:position pos:line="91" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></then>
    <elseif pos:line="93" pos:column="5">else <if pos:line="93" pos:column="10">if <condition pos:line="93" pos:column="13">(<expr><call><name pos:line="93" pos:column="14">DuplicateHandle<pos:position pos:line="93" pos:column="29"/></name><argument_list pos:line="93" pos:column="29">(<argument><expr><name pos:line="93" pos:column="30">hproc<pos:position pos:line="93" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="37">hstdin<pos:position pos:line="93" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="45">hproc<pos:position pos:line="93" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="52">&amp;<pos:position pos:line="93" pos:column="57"/></operator><name pos:line="93" pos:column="53">hdup<pos:position pos:line="93" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="59">0<pos:position pos:line="93" pos:column="60"/></literal></expr></argument>,
                             <argument><expr><name pos:line="94" pos:column="30">isservice<pos:position pos:line="94" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="41">DUPLICATE_SAME_ACCESS<pos:position pos:line="94" pos:column="62"/></name></expr></argument>)<pos:position pos:line="94" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="64"/></condition><then pos:line="94" pos:column="64"> <block pos:line="94" pos:column="65">{
        <expr_stmt><expr><call><name pos:line="95" pos:column="9">CloseHandle<pos:position pos:line="95" pos:column="20"/></name><argument_list pos:line="95" pos:column="20">(<argument><expr><name pos:line="95" pos:column="21">hstdin<pos:position pos:line="95" pos:column="27"/></name></expr></argument>)<pos:position pos:line="95" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="96" pos:column="9">hstdin<pos:position pos:line="96" pos:column="15"/></name> <operator pos:line="96" pos:column="16">=<pos:position pos:line="96" pos:column="17"/></operator> <name pos:line="96" pos:column="18">hdup<pos:position pos:line="96" pos:column="22"/></name></expr>;<pos:position pos:line="96" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="97" pos:column="6"/></block></then></if></elseif>
    <else pos:line="98" pos:column="5">else <block pos:line="98" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="99" pos:column="9">printerr<pos:position pos:line="99" pos:column="17"/></name><argument_list pos:line="99" pos:column="17">(<argument><expr><literal type="string" pos:line="99" pos:column="18">"DupHandle(stdin [%x]) failed (%d)\n"<pos:position pos:line="99" pos:column="55"/></literal></expr></argument>,
                 <argument><expr><name pos:line="100" pos:column="18">hstdin<pos:position pos:line="100" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="100" pos:column="26">GetLastError<pos:position pos:line="100" pos:column="38"/></name><argument_list pos:line="100" pos:column="38">()<pos:position pos:line="100" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="100" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="103" pos:column="5">hstdout<pos:position pos:line="103" pos:column="12"/></name> <operator pos:line="103" pos:column="13">=<pos:position pos:line="103" pos:column="14"/></operator> <call><name pos:line="103" pos:column="15">GetStdHandle<pos:position pos:line="103" pos:column="27"/></name><argument_list pos:line="103" pos:column="27">(<argument><expr><name pos:line="103" pos:column="28">STD_OUTPUT_HANDLE<pos:position pos:line="103" pos:column="45"/></name></expr></argument>)<pos:position pos:line="103" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="47"/></expr_stmt>
    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><operator pos:line="104" pos:column="9">!<pos:position pos:line="104" pos:column="10"/></operator><name pos:line="104" pos:column="10">hstdout<pos:position pos:line="104" pos:column="17"/></name> <operator pos:line="104" pos:column="18">||<pos:position pos:line="104" pos:column="20"/></operator> <name pos:line="104" pos:column="21">hstdout<pos:position pos:line="104" pos:column="28"/></name> <operator pos:line="104" pos:column="29">==<pos:position pos:line="104" pos:column="31"/></operator> <name pos:line="104" pos:column="32">INVALID_HANDLE_VALUE<pos:position pos:line="104" pos:column="52"/></name></expr>)<pos:position pos:line="104" pos:column="53"/></condition><then pos:line="104" pos:column="53"> <block pos:line="104" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="105" pos:column="9">printerr<pos:position pos:line="105" pos:column="17"/></name><argument_list pos:line="105" pos:column="17">(<argument><expr><literal type="string" pos:line="105" pos:column="18">"GetStdHandle(STD_OUTPUT_HANDLE) failed (%d)\n"<pos:position pos:line="105" pos:column="65"/></literal></expr></argument>,
                 <argument><expr><call><name pos:line="106" pos:column="18">GetLastError<pos:position pos:line="106" pos:column="30"/></name><argument_list pos:line="106" pos:column="30">()<pos:position pos:line="106" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="106" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="107" pos:column="6"/></block></then>
    <elseif pos:line="108" pos:column="5">else <if pos:line="108" pos:column="10">if <condition pos:line="108" pos:column="13">(<expr><call><name pos:line="108" pos:column="14">DuplicateHandle<pos:position pos:line="108" pos:column="29"/></name><argument_list pos:line="108" pos:column="29">(<argument><expr><name pos:line="108" pos:column="30">hproc<pos:position pos:line="108" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="37">hstdout<pos:position pos:line="108" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="46">hproc<pos:position pos:line="108" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="108" pos:column="53">&amp;<pos:position pos:line="108" pos:column="58"/></operator><name pos:line="108" pos:column="54">hdup<pos:position pos:line="108" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="60">0<pos:position pos:line="108" pos:column="61"/></literal></expr></argument>,
                             <argument><expr><name pos:line="109" pos:column="30">isservice<pos:position pos:line="109" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="41">DUPLICATE_SAME_ACCESS<pos:position pos:line="109" pos:column="62"/></name></expr></argument>)<pos:position pos:line="109" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="64"/></condition><then pos:line="109" pos:column="64"> <block pos:line="109" pos:column="65">{
        <expr_stmt><expr><call><name pos:line="110" pos:column="9">CloseHandle<pos:position pos:line="110" pos:column="20"/></name><argument_list pos:line="110" pos:column="20">(<argument><expr><name pos:line="110" pos:column="21">hstdout<pos:position pos:line="110" pos:column="28"/></name></expr></argument>)<pos:position pos:line="110" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="111" pos:column="9">hstdout<pos:position pos:line="111" pos:column="16"/></name> <operator pos:line="111" pos:column="17">=<pos:position pos:line="111" pos:column="18"/></operator> <name pos:line="111" pos:column="19">hdup<pos:position pos:line="111" pos:column="23"/></name></expr>;<pos:position pos:line="111" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if></elseif>
    <else pos:line="113" pos:column="5">else <block pos:line="113" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="114" pos:column="9">printerr<pos:position pos:line="114" pos:column="17"/></name><argument_list pos:line="114" pos:column="17">(<argument><expr><literal type="string" pos:line="114" pos:column="18">"DupHandle(stdout [%x]) failed (%d)\n"<pos:position pos:line="114" pos:column="56"/></literal></expr></argument>,
                 <argument><expr><name pos:line="115" pos:column="18">hstdout<pos:position pos:line="115" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="115" pos:column="27">GetLastError<pos:position pos:line="115" pos:column="39"/></name><argument_list pos:line="115" pos:column="39">()<pos:position pos:line="115" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="115" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="116" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="118" pos:column="5">hstderr<pos:position pos:line="118" pos:column="12"/></name> <operator pos:line="118" pos:column="13">=<pos:position pos:line="118" pos:column="14"/></operator> <call><name pos:line="118" pos:column="15">GetStdHandle<pos:position pos:line="118" pos:column="27"/></name><argument_list pos:line="118" pos:column="27">(<argument><expr><name pos:line="118" pos:column="28">STD_ERROR_HANDLE<pos:position pos:line="118" pos:column="44"/></name></expr></argument>)<pos:position pos:line="118" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="46"/></expr_stmt>
    <if pos:line="119" pos:column="5">if <condition pos:line="119" pos:column="8">(<expr><operator pos:line="119" pos:column="9">!<pos:position pos:line="119" pos:column="10"/></operator><name pos:line="119" pos:column="10">hstderr<pos:position pos:line="119" pos:column="17"/></name> <operator pos:line="119" pos:column="18">||<pos:position pos:line="119" pos:column="20"/></operator> <name pos:line="119" pos:column="21">hstderr<pos:position pos:line="119" pos:column="28"/></name> <operator pos:line="119" pos:column="29">==<pos:position pos:line="119" pos:column="31"/></operator> <name pos:line="119" pos:column="32">INVALID_HANDLE_VALUE<pos:position pos:line="119" pos:column="52"/></name></expr>)<pos:position pos:line="119" pos:column="53"/></condition><then pos:line="119" pos:column="53"> <block pos:line="119" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="120" pos:column="9">printerr<pos:position pos:line="120" pos:column="17"/></name><argument_list pos:line="120" pos:column="17">(<argument><expr><literal type="string" pos:line="120" pos:column="18">"GetStdHandle(STD_ERROR_HANDLE) failed (%d)\n"<pos:position pos:line="120" pos:column="64"/></literal></expr></argument>,
                 <argument><expr><call><name pos:line="121" pos:column="18">GetLastError<pos:position pos:line="121" pos:column="30"/></name><argument_list pos:line="121" pos:column="30">()<pos:position pos:line="121" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="122" pos:column="6"/></block></then>
    <elseif pos:line="123" pos:column="5">else <if pos:line="123" pos:column="10">if <condition pos:line="123" pos:column="13">(<expr><call><name pos:line="123" pos:column="14">DuplicateHandle<pos:position pos:line="123" pos:column="29"/></name><argument_list pos:line="123" pos:column="29">(<argument><expr><name pos:line="123" pos:column="30">hproc<pos:position pos:line="123" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="37">hstderr<pos:position pos:line="123" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="46">hproc<pos:position pos:line="123" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="123" pos:column="53">&amp;<pos:position pos:line="123" pos:column="58"/></operator><name pos:line="123" pos:column="54">hdup<pos:position pos:line="123" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="123" pos:column="60">0<pos:position pos:line="123" pos:column="61"/></literal></expr></argument>,
                             <argument><expr><name pos:line="124" pos:column="30">isservice<pos:position pos:line="124" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="41">DUPLICATE_SAME_ACCESS<pos:position pos:line="124" pos:column="62"/></name></expr></argument>)<pos:position pos:line="124" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="124" pos:column="64"/></condition><then pos:line="124" pos:column="64"> <block pos:line="124" pos:column="65">{
        <expr_stmt><expr><call><name pos:line="125" pos:column="9">CloseHandle<pos:position pos:line="125" pos:column="20"/></name><argument_list pos:line="125" pos:column="20">(<argument><expr><name pos:line="125" pos:column="21">hstderr<pos:position pos:line="125" pos:column="28"/></name></expr></argument>)<pos:position pos:line="125" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="126" pos:column="9">hstderr<pos:position pos:line="126" pos:column="16"/></name> <operator pos:line="126" pos:column="17">=<pos:position pos:line="126" pos:column="18"/></operator> <name pos:line="126" pos:column="19">hdup<pos:position pos:line="126" pos:column="23"/></name></expr>;<pos:position pos:line="126" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="127" pos:column="6"/></block></then></if></elseif>
    <else pos:line="128" pos:column="5">else <block pos:line="128" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="129" pos:column="9">printerr<pos:position pos:line="129" pos:column="17"/></name><argument_list pos:line="129" pos:column="17">(<argument><expr><literal type="string" pos:line="129" pos:column="18">"DupHandle(stderr [%x]) failed (%d)\n"<pos:position pos:line="129" pos:column="56"/></literal></expr></argument>,
                 <argument><expr><name pos:line="130" pos:column="18">hstderr<pos:position pos:line="130" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="130" pos:column="27">GetLastError<pos:position pos:line="130" pos:column="39"/></name><argument_list pos:line="130" pos:column="39">()<pos:position pos:line="130" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="130" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="131" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="133" pos:column="5">/* You can't close the console till all the handles above were
     * rescued by DuplicateHandle()
     */</comment>
    <if pos:line="136" pos:column="5">if <condition pos:line="136" pos:column="8">(<expr><operator pos:line="136" pos:column="9">!<pos:position pos:line="136" pos:column="10"/></operator><call><name pos:line="136" pos:column="10">FreeConsole<pos:position pos:line="136" pos:column="21"/></name><argument_list pos:line="136" pos:column="21">()<pos:position pos:line="136" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="136" pos:column="24"/></condition><then pos:line="136" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="137" pos:column="9">printerr<pos:position pos:line="137" pos:column="17"/></name><argument_list pos:line="137" pos:column="17">(<argument><expr><literal type="string" pos:line="137" pos:column="18">"FreeConsole() failed (%d)\n"<pos:position pos:line="137" pos:column="47"/></literal></expr></argument>, <argument><expr><call><name pos:line="137" pos:column="49">GetLastError<pos:position pos:line="137" pos:column="61"/></name><argument_list pos:line="137" pos:column="61">()<pos:position pos:line="137" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="137" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="65"/></expr_stmt></block></then></if>

    <if pos:line="139" pos:column="5">if <condition pos:line="139" pos:column="8">(<expr><name pos:line="139" pos:column="9">isservice<pos:position pos:line="139" pos:column="18"/></name></expr>)<pos:position pos:line="139" pos:column="19"/></condition><then pos:line="139" pos:column="19"> <block pos:line="139" pos:column="20">{
<cpp:ifdef pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">ifdef<pos:position pos:line="140" pos:column="7"/></cpp:directive> <name pos:line="140" pos:column="8">WE_EVER_FIGURE_OUT_WHY_THIS_DOESNT_WORK<pos:position pos:line="140" pos:column="47"/></name></cpp:ifdef>
        <expr_stmt><expr><name pos:line="141" pos:column="9">hsavedesk<pos:position pos:line="141" pos:column="18"/></name> <operator pos:line="141" pos:column="19">=<pos:position pos:line="141" pos:column="20"/></operator> <call><name pos:line="141" pos:column="21">GetThreadDesktop<pos:position pos:line="141" pos:column="37"/></name><argument_list pos:line="141" pos:column="37">(<argument><expr><call><name pos:line="141" pos:column="38">GetCurrentThreadId<pos:position pos:line="141" pos:column="56"/></name><argument_list pos:line="141" pos:column="56">()<pos:position pos:line="141" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="141" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="60"/></expr_stmt>
        <if pos:line="142" pos:column="9">if <condition pos:line="142" pos:column="12">(<expr><operator pos:line="142" pos:column="13">!<pos:position pos:line="142" pos:column="14"/></operator><name pos:line="142" pos:column="14">hsavedesk<pos:position pos:line="142" pos:column="23"/></name> <operator pos:line="142" pos:column="24">||<pos:position pos:line="142" pos:column="26"/></operator> <name pos:line="142" pos:column="27">hsavedesk<pos:position pos:line="142" pos:column="36"/></name> <operator pos:line="142" pos:column="37">==<pos:position pos:line="142" pos:column="39"/></operator> <name pos:line="142" pos:column="40">INVALID_HANDLE_VALUE<pos:position pos:line="142" pos:column="60"/></name></expr>)<pos:position pos:line="142" pos:column="61"/></condition><then pos:line="142" pos:column="61"> <block pos:line="142" pos:column="62">{
            <expr_stmt><expr><call><name pos:line="143" pos:column="13">printerr<pos:position pos:line="143" pos:column="21"/></name><argument_list pos:line="143" pos:column="21">(<argument><expr><literal type="string" pos:line="143" pos:column="22">"GetThreadDesktop(GetTID()) failed (%d)\n"<pos:position pos:line="143" pos:column="64"/></literal></expr></argument>, <argument><expr><call><name pos:line="143" pos:column="66">GetLastError<pos:position pos:line="143" pos:column="78"/></name><argument_list pos:line="143" pos:column="78">()<pos:position pos:line="143" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="143" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="82"/></expr_stmt>
        }<pos:position pos:line="144" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="145" pos:column="9">CloseWindowStation<pos:position pos:line="145" pos:column="27"/></name><argument_list pos:line="145" pos:column="27">(<argument><expr><name pos:line="145" pos:column="28">hwinsta<pos:position pos:line="145" pos:column="35"/></name></expr></argument>)<pos:position pos:line="145" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="146" pos:column="9">hwinsta<pos:position pos:line="146" pos:column="16"/></name> <operator pos:line="146" pos:column="17">=<pos:position pos:line="146" pos:column="18"/></operator> <call><name pos:line="146" pos:column="19">OpenWindowStation<pos:position pos:line="146" pos:column="36"/></name><argument_list pos:line="146" pos:column="36">(<argument><expr><literal type="string" pos:line="146" pos:column="37">"WinSta0"<pos:position pos:line="146" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="146" pos:column="48">TRUE<pos:position pos:line="146" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="54">MAXIMUM_ALLOWED<pos:position pos:line="146" pos:column="69"/></name></expr></argument>)<pos:position pos:line="146" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="71"/></expr_stmt>
        <if pos:line="147" pos:column="9">if <condition pos:line="147" pos:column="12">(<expr><operator pos:line="147" pos:column="13">!<pos:position pos:line="147" pos:column="14"/></operator><name pos:line="147" pos:column="14">hwinsta<pos:position pos:line="147" pos:column="21"/></name> <operator pos:line="147" pos:column="22">||<pos:position pos:line="147" pos:column="24"/></operator> <name pos:line="147" pos:column="25">hwinsta<pos:position pos:line="147" pos:column="32"/></name> <operator pos:line="147" pos:column="33">==<pos:position pos:line="147" pos:column="35"/></operator> <name pos:line="147" pos:column="36">INVALID_HANDLE_VALUE<pos:position pos:line="147" pos:column="56"/></name></expr>)<pos:position pos:line="147" pos:column="57"/></condition><then pos:line="147" pos:column="57"> <block pos:line="147" pos:column="58">{
            <expr_stmt><expr><call><name pos:line="148" pos:column="13">printerr<pos:position pos:line="148" pos:column="21"/></name><argument_list pos:line="148" pos:column="21">(<argument><expr><literal type="string" pos:line="148" pos:column="22">"OpenWinSta(WinSta0) failed (%d)\n"<pos:position pos:line="148" pos:column="57"/></literal></expr></argument>, <argument><expr><call><name pos:line="148" pos:column="59">GetLastError<pos:position pos:line="148" pos:column="71"/></name><argument_list pos:line="148" pos:column="71">()<pos:position pos:line="148" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="148" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="75"/></expr_stmt>
        }<pos:position pos:line="149" pos:column="10"/></block></then>
        <elseif pos:line="150" pos:column="9">else <if pos:line="150" pos:column="14">if <condition pos:line="150" pos:column="17">(<expr><operator pos:line="150" pos:column="18">!<pos:position pos:line="150" pos:column="19"/></operator><call><name pos:line="150" pos:column="19">SetProcessWindowStation<pos:position pos:line="150" pos:column="42"/></name><argument_list pos:line="150" pos:column="42">(<argument><expr><name pos:line="150" pos:column="43">hwinsta<pos:position pos:line="150" pos:column="50"/></name></expr></argument>)<pos:position pos:line="150" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="150" pos:column="52"/></condition><then pos:line="150" pos:column="52"> <block pos:line="150" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="151" pos:column="13">printerr<pos:position pos:line="151" pos:column="21"/></name><argument_list pos:line="151" pos:column="21">(<argument><expr><literal type="string" pos:line="151" pos:column="22">"SetProcWinSta(WinSta0) failed (%d)\n"<pos:position pos:line="151" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name pos:line="151" pos:column="62">GetLastError<pos:position pos:line="151" pos:column="74"/></name><argument_list pos:line="151" pos:column="74">()<pos:position pos:line="151" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="151" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="152" pos:column="10"/></block></then></if></elseif></if>
        <expr_stmt><expr><name pos:line="153" pos:column="9">hdesk<pos:position pos:line="153" pos:column="14"/></name> <operator pos:line="153" pos:column="15">=<pos:position pos:line="153" pos:column="16"/></operator> <call><name pos:line="153" pos:column="17">OpenDesktop<pos:position pos:line="153" pos:column="28"/></name><argument_list pos:line="153" pos:column="28">(<argument><expr><literal type="string" pos:line="153" pos:column="29">"Default"<pos:position pos:line="153" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="153" pos:column="40">0<pos:position pos:line="153" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="43">TRUE<pos:position pos:line="153" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="49">MAXIMUM_ALLOWED<pos:position pos:line="153" pos:column="64"/></name></expr></argument>)<pos:position pos:line="153" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="66"/></expr_stmt>
        <if pos:line="154" pos:column="9">if <condition pos:line="154" pos:column="12">(<expr><operator pos:line="154" pos:column="13">!<pos:position pos:line="154" pos:column="14"/></operator><name pos:line="154" pos:column="14">hdesk<pos:position pos:line="154" pos:column="19"/></name> <operator pos:line="154" pos:column="20">||<pos:position pos:line="154" pos:column="22"/></operator> <name pos:line="154" pos:column="23">hdesk<pos:position pos:line="154" pos:column="28"/></name> <operator pos:line="154" pos:column="29">==<pos:position pos:line="154" pos:column="31"/></operator> <name pos:line="154" pos:column="32">INVALID_HANDLE_VALUE<pos:position pos:line="154" pos:column="52"/></name></expr>)<pos:position pos:line="154" pos:column="53"/></condition><then pos:line="154" pos:column="53"> <block pos:line="154" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="155" pos:column="13">printerr<pos:position pos:line="155" pos:column="21"/></name><argument_list pos:line="155" pos:column="21">(<argument><expr><literal type="string" pos:line="155" pos:column="22">"OpenDesktop(Default) failed (%d)\n"<pos:position pos:line="155" pos:column="58"/></literal></expr></argument>, <argument><expr><call><name pos:line="155" pos:column="60">GetLastError<pos:position pos:line="155" pos:column="72"/></name><argument_list pos:line="155" pos:column="72">()<pos:position pos:line="155" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="155" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="156" pos:column="10"/></block></then>
        <elseif pos:line="157" pos:column="9">else <if pos:line="157" pos:column="14">if <condition pos:line="157" pos:column="17">(<expr><operator pos:line="157" pos:column="18">!<pos:position pos:line="157" pos:column="19"/></operator><call><name pos:line="157" pos:column="19">SetThreadDesktop<pos:position pos:line="157" pos:column="35"/></name><argument_list pos:line="157" pos:column="35">(<argument><expr><name pos:line="157" pos:column="36">hdesk<pos:position pos:line="157" pos:column="41"/></name></expr></argument>)<pos:position pos:line="157" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="157" pos:column="43"/></condition><then pos:line="157" pos:column="43"> <block pos:line="157" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="158" pos:column="13">printerr<pos:position pos:line="158" pos:column="21"/></name><argument_list pos:line="158" pos:column="21">(<argument><expr><literal type="string" pos:line="158" pos:column="22">"SetThreadDesktop(Default) failed (%d)\n"<pos:position pos:line="158" pos:column="63"/></literal></expr></argument>, <argument><expr><call><name pos:line="158" pos:column="65">GetLastError<pos:position pos:line="158" pos:column="77"/></name><argument_list pos:line="158" pos:column="77">()<pos:position pos:line="158" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="158" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="81"/></expr_stmt>
        }<pos:position pos:line="159" pos:column="10"/></block></then></if></elseif></if>
<cpp:else pos:line="160" pos:column="1">#<cpp:directive pos:line="160" pos:column="2">else<pos:position pos:line="160" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><type><name pos:line="161" pos:column="9">PROCESS_INFORMATION<pos:position pos:line="161" pos:column="28"/></name></type> <name pos:line="161" pos:column="29">pi<pos:position pos:line="161" pos:column="31"/></name></decl>;<pos:position pos:line="161" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="162" pos:column="9">STARTUPINFO<pos:position pos:line="162" pos:column="20"/></name></type> <name pos:line="162" pos:column="21">si<pos:position pos:line="162" pos:column="23"/></name></decl>;<pos:position pos:line="162" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="163" pos:column="9">DWORD<pos:position pos:line="163" pos:column="14"/></name></type> <name pos:line="163" pos:column="15">exitcode<pos:position pos:line="163" pos:column="23"/></name> <init pos:line="163" pos:column="24">= <expr><literal type="number" pos:line="163" pos:column="26">1<pos:position pos:line="163" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="163" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="164" pos:column="9">char<pos:position pos:line="164" pos:column="13"/></name></type> <name><name pos:line="164" pos:column="14">appbuff<pos:position pos:line="164" pos:column="21"/></name><index pos:line="164" pos:column="21">[<expr><name pos:line="164" pos:column="22">MAX_PATH<pos:position pos:line="164" pos:column="30"/></name></expr>]<pos:position pos:line="164" pos:column="31"/></index></name></decl>;<pos:position pos:line="164" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="165" pos:column="9">char<pos:position pos:line="165" pos:column="13"/></name> <modifier pos:line="165" pos:column="14">*<pos:position pos:line="165" pos:column="15"/></modifier></type><name pos:line="165" pos:column="15">appname<pos:position pos:line="165" pos:column="22"/></name> <init pos:line="165" pos:column="23">= <expr><name pos:line="165" pos:column="25">NULL<pos:position pos:line="165" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="165" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="166" pos:column="9">char<pos:position pos:line="166" pos:column="13"/></name> <modifier pos:line="166" pos:column="14">*<pos:position pos:line="166" pos:column="15"/></modifier></type><name pos:line="166" pos:column="15">cmdline<pos:position pos:line="166" pos:column="22"/></name> <init pos:line="166" pos:column="23">= <expr><call><name pos:line="166" pos:column="25">GetCommandLine<pos:position pos:line="166" pos:column="39"/></name><argument_list pos:line="166" pos:column="39">()<pos:position pos:line="166" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="166" pos:column="42"/></decl_stmt>

        <if pos:line="168" pos:column="9">if <condition pos:line="168" pos:column="12">(<expr><operator pos:line="168" pos:column="13">!<pos:position pos:line="168" pos:column="14"/></operator><call><name pos:line="168" pos:column="14">GetModuleFileName<pos:position pos:line="168" pos:column="31"/></name><argument_list pos:line="168" pos:column="31">(<argument><expr><name pos:line="168" pos:column="32">NULL<pos:position pos:line="168" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="38">appbuff<pos:position pos:line="168" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="168" pos:column="47">sizeof<argument_list pos:line="168" pos:column="53">(<argument><expr><name pos:line="168" pos:column="54">appbuff<pos:position pos:line="168" pos:column="61"/></name></expr></argument>)<pos:position pos:line="168" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="168" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="168" pos:column="64"/></condition><then pos:line="168" pos:column="64"> <block pos:line="168" pos:column="65">{
            <expr_stmt><expr><name pos:line="169" pos:column="13">appname<pos:position pos:line="169" pos:column="20"/></name> <operator pos:line="169" pos:column="21">=<pos:position pos:line="169" pos:column="22"/></operator> <name pos:line="169" pos:column="23">appbuff<pos:position pos:line="169" pos:column="30"/></name></expr>;<pos:position pos:line="169" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="170" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="172" pos:column="9">memset<pos:position pos:line="172" pos:column="15"/></name><argument_list pos:line="172" pos:column="15">(<argument><expr><operator pos:line="172" pos:column="16">&amp;<pos:position pos:line="172" pos:column="21"/></operator><name pos:line="172" pos:column="17">si<pos:position pos:line="172" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="172" pos:column="21">0<pos:position pos:line="172" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="172" pos:column="24">sizeof<argument_list pos:line="172" pos:column="30">(<argument><expr><name pos:line="172" pos:column="31">si<pos:position pos:line="172" pos:column="33"/></name></expr></argument>)<pos:position pos:line="172" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="172" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="173" pos:column="9">si<pos:position pos:line="173" pos:column="11"/></name><operator pos:line="173" pos:column="11">.<pos:position pos:line="173" pos:column="12"/></operator><name pos:line="173" pos:column="12">cb<pos:position pos:line="173" pos:column="14"/></name></name> <operator pos:line="173" pos:column="15">=<pos:position pos:line="173" pos:column="16"/></operator> <sizeof pos:line="173" pos:column="17">sizeof<argument_list pos:line="173" pos:column="23">(<argument><expr><name pos:line="173" pos:column="24">si<pos:position pos:line="173" pos:column="26"/></name></expr></argument>)<pos:position pos:line="173" pos:column="27"/></argument_list></sizeof></expr>;<pos:position pos:line="173" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="174" pos:column="9">si<pos:position pos:line="174" pos:column="11"/></name><operator pos:line="174" pos:column="11">.<pos:position pos:line="174" pos:column="12"/></operator><name pos:line="174" pos:column="12">dwFlags<pos:position pos:line="174" pos:column="19"/></name></name>     <operator pos:line="174" pos:column="24">=<pos:position pos:line="174" pos:column="25"/></operator> <name pos:line="174" pos:column="26">STARTF_USESHOWWINDOW<pos:position pos:line="174" pos:column="46"/></name>
                       <operator pos:line="175" pos:column="24">|<pos:position pos:line="175" pos:column="25"/></operator> <name pos:line="175" pos:column="26">STARTF_USESTDHANDLES<pos:position pos:line="175" pos:column="46"/></name></expr>;<pos:position pos:line="175" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="176" pos:column="9">si<pos:position pos:line="176" pos:column="11"/></name><operator pos:line="176" pos:column="11">.<pos:position pos:line="176" pos:column="12"/></operator><name pos:line="176" pos:column="12">lpDesktop<pos:position pos:line="176" pos:column="21"/></name></name>   <operator pos:line="176" pos:column="24">=<pos:position pos:line="176" pos:column="25"/></operator> <literal type="string" pos:line="176" pos:column="26">"WinSta0\\Default"<pos:position pos:line="176" pos:column="44"/></literal></expr>;<pos:position pos:line="176" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="177" pos:column="9">si<pos:position pos:line="177" pos:column="11"/></name><operator pos:line="177" pos:column="11">.<pos:position pos:line="177" pos:column="12"/></operator><name pos:line="177" pos:column="12">wShowWindow<pos:position pos:line="177" pos:column="23"/></name></name> <operator pos:line="177" pos:column="24">=<pos:position pos:line="177" pos:column="25"/></operator> <literal type="number" pos:line="177" pos:column="26">1<pos:position pos:line="177" pos:column="27"/></literal></expr>;<pos:position pos:line="177" pos:column="28"/></expr_stmt>  <comment type="block" pos:line="177" pos:column="30">/* SW_SHOWNORMAL */</comment>
        <expr_stmt><expr><name><name pos:line="178" pos:column="9">si<pos:position pos:line="178" pos:column="11"/></name><operator pos:line="178" pos:column="11">.<pos:position pos:line="178" pos:column="12"/></operator><name pos:line="178" pos:column="12">hStdInput<pos:position pos:line="178" pos:column="21"/></name></name>   <operator pos:line="178" pos:column="24">=<pos:position pos:line="178" pos:column="25"/></operator> <name pos:line="178" pos:column="26">hstdin<pos:position pos:line="178" pos:column="32"/></name></expr>;<pos:position pos:line="178" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="179" pos:column="9">si<pos:position pos:line="179" pos:column="11"/></name><operator pos:line="179" pos:column="11">.<pos:position pos:line="179" pos:column="12"/></operator><name pos:line="179" pos:column="12">hStdOutput<pos:position pos:line="179" pos:column="22"/></name></name>  <operator pos:line="179" pos:column="24">=<pos:position pos:line="179" pos:column="25"/></operator> <name pos:line="179" pos:column="26">hstdout<pos:position pos:line="179" pos:column="33"/></name></expr>;<pos:position pos:line="179" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="180" pos:column="9">si<pos:position pos:line="180" pos:column="11"/></name><operator pos:line="180" pos:column="11">.<pos:position pos:line="180" pos:column="12"/></operator><name pos:line="180" pos:column="12">hStdError<pos:position pos:line="180" pos:column="21"/></name></name>   <operator pos:line="180" pos:column="24">=<pos:position pos:line="180" pos:column="25"/></operator> <name pos:line="180" pos:column="26">hstderr<pos:position pos:line="180" pos:column="33"/></name></expr>;<pos:position pos:line="180" pos:column="34"/></expr_stmt>

        <comment type="block" pos:line="182" pos:column="9">/* Instantly, upon creating the new process, we will close our
         * copies of the handles so our parent isn't confused when the
         * child closes their copy of the handle.  Without this action,
         * we would hold a copy of the handle, and the parent would not
         * receive their EOF notification.
         */</comment>
        <if pos:line="188" pos:column="9">if <condition pos:line="188" pos:column="12">(<expr><call><name pos:line="188" pos:column="13">CreateProcess<pos:position pos:line="188" pos:column="26"/></name><argument_list pos:line="188" pos:column="26">(<argument><expr><name pos:line="188" pos:column="27">appname<pos:position pos:line="188" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="36">cmdline<pos:position pos:line="188" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="45">NULL<pos:position pos:line="188" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="51">NULL<pos:position pos:line="188" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="57">TRUE<pos:position pos:line="188" pos:column="61"/></name></expr></argument>,
                          <argument><expr><name pos:line="189" pos:column="27">CREATE_SUSPENDED<pos:position pos:line="189" pos:column="43"/></name> <operator pos:line="189" pos:column="44">|<pos:position pos:line="189" pos:column="45"/></operator> <name pos:line="189" pos:column="46">CREATE_NEW_CONSOLE<pos:position pos:line="189" pos:column="64"/></name></expr></argument>,
                          <argument><expr><name pos:line="190" pos:column="27">NULL<pos:position pos:line="190" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="33">NULL<pos:position pos:line="190" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="190" pos:column="39">&amp;<pos:position pos:line="190" pos:column="44"/></operator><name pos:line="190" pos:column="40">si<pos:position pos:line="190" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="190" pos:column="44">&amp;<pos:position pos:line="190" pos:column="49"/></operator><name pos:line="190" pos:column="45">pi<pos:position pos:line="190" pos:column="47"/></name></expr></argument>)<pos:position pos:line="190" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="190" pos:column="49"/></condition><then pos:line="190" pos:column="49"> <block pos:line="190" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="191" pos:column="13">CloseHandle<pos:position pos:line="191" pos:column="24"/></name><argument_list pos:line="191" pos:column="24">(<argument><expr><name><name pos:line="191" pos:column="25">si<pos:position pos:line="191" pos:column="27"/></name><operator pos:line="191" pos:column="27">.<pos:position pos:line="191" pos:column="28"/></operator><name pos:line="191" pos:column="28">hStdInput<pos:position pos:line="191" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="191" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="192" pos:column="13">CloseHandle<pos:position pos:line="192" pos:column="24"/></name><argument_list pos:line="192" pos:column="24">(<argument><expr><name><name pos:line="192" pos:column="25">si<pos:position pos:line="192" pos:column="27"/></name><operator pos:line="192" pos:column="27">.<pos:position pos:line="192" pos:column="28"/></operator><name pos:line="192" pos:column="28">hStdOutput<pos:position pos:line="192" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="192" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="193" pos:column="13">CloseHandle<pos:position pos:line="193" pos:column="24"/></name><argument_list pos:line="193" pos:column="24">(<argument><expr><name><name pos:line="193" pos:column="25">si<pos:position pos:line="193" pos:column="27"/></name><operator pos:line="193" pos:column="27">.<pos:position pos:line="193" pos:column="28"/></operator><name pos:line="193" pos:column="28">hStdError<pos:position pos:line="193" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="193" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="194" pos:column="13">ResumeThread<pos:position pos:line="194" pos:column="25"/></name><argument_list pos:line="194" pos:column="25">(<argument><expr><name><name pos:line="194" pos:column="26">pi<pos:position pos:line="194" pos:column="28"/></name><operator pos:line="194" pos:column="28">.<pos:position pos:line="194" pos:column="29"/></operator><name pos:line="194" pos:column="29">hThread<pos:position pos:line="194" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="194" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="195" pos:column="13">CloseHandle<pos:position pos:line="195" pos:column="24"/></name><argument_list pos:line="195" pos:column="24">(<argument><expr><name><name pos:line="195" pos:column="25">pi<pos:position pos:line="195" pos:column="27"/></name><operator pos:line="195" pos:column="27">.<pos:position pos:line="195" pos:column="28"/></operator><name pos:line="195" pos:column="28">hThread<pos:position pos:line="195" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="195" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="196" pos:column="13">WaitForSingleObject<pos:position pos:line="196" pos:column="32"/></name><argument_list pos:line="196" pos:column="32">(<argument><expr><name><name pos:line="196" pos:column="33">pi<pos:position pos:line="196" pos:column="35"/></name><operator pos:line="196" pos:column="35">.<pos:position pos:line="196" pos:column="36"/></operator><name pos:line="196" pos:column="36">hProcess<pos:position pos:line="196" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="196" pos:column="46">INFINITE<pos:position pos:line="196" pos:column="54"/></name></expr></argument>)<pos:position pos:line="196" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="197" pos:column="13">GetExitCodeProcess<pos:position pos:line="197" pos:column="31"/></name><argument_list pos:line="197" pos:column="31">(<argument><expr><name><name pos:line="197" pos:column="32">pi<pos:position pos:line="197" pos:column="34"/></name><operator pos:line="197" pos:column="34">.<pos:position pos:line="197" pos:column="35"/></operator><name pos:line="197" pos:column="35">hProcess<pos:position pos:line="197" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="197" pos:column="45">&amp;<pos:position pos:line="197" pos:column="50"/></operator><name pos:line="197" pos:column="46">exitcode<pos:position pos:line="197" pos:column="54"/></name></expr></argument>)<pos:position pos:line="197" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="198" pos:column="13">CloseHandle<pos:position pos:line="198" pos:column="24"/></name><argument_list pos:line="198" pos:column="24">(<argument><expr><name><name pos:line="198" pos:column="25">pi<pos:position pos:line="198" pos:column="27"/></name><operator pos:line="198" pos:column="27">.<pos:position pos:line="198" pos:column="28"/></operator><name pos:line="198" pos:column="28">hProcess<pos:position pos:line="198" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="198" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="38"/></expr_stmt>
            <return pos:line="199" pos:column="13">return <expr><name pos:line="199" pos:column="20">exitcode<pos:position pos:line="199" pos:column="28"/></name></expr>;<pos:position pos:line="199" pos:column="29"/></return>
        }<pos:position pos:line="200" pos:column="10"/></block></then></if>
        <return pos:line="201" pos:column="9">return <expr><literal type="number" pos:line="201" pos:column="16">1<pos:position pos:line="201" pos:column="17"/></literal></expr>;<pos:position pos:line="201" pos:column="18"/></return>
<cpp:endif pos:line="202" pos:column="1">#<cpp:directive pos:line="202" pos:column="2">endif<pos:position pos:line="202" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="203" pos:column="6"/></block></then></if>

    <if pos:line="205" pos:column="5">if <condition pos:line="205" pos:column="8">(<expr><operator pos:line="205" pos:column="9">!<pos:position pos:line="205" pos:column="10"/></operator><call><name pos:line="205" pos:column="10">AllocConsole<pos:position pos:line="205" pos:column="22"/></name><argument_list pos:line="205" pos:column="22">()<pos:position pos:line="205" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="205" pos:column="25"/></condition><then pos:line="205" pos:column="25"> <block pos:line="205" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="206" pos:column="9">printerr<pos:position pos:line="206" pos:column="17"/></name><argument_list pos:line="206" pos:column="17">(<argument><expr><literal type="string" pos:line="206" pos:column="18">"AllocConsole(Default) failed (%d)\n"<pos:position pos:line="206" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="206" pos:column="57">GetLastError<pos:position pos:line="206" pos:column="69"/></name><argument_list pos:line="206" pos:column="69">()<pos:position pos:line="206" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="206" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="207" pos:column="6"/></block></then></if>

    <if pos:line="209" pos:column="5">if <condition pos:line="209" pos:column="8">(<expr><name pos:line="209" pos:column="9">contitle<pos:position pos:line="209" pos:column="17"/></name> <operator pos:line="209" pos:column="18">&amp;&amp;<pos:position pos:line="209" pos:column="28"/></operator> <operator pos:line="209" pos:column="21">!<pos:position pos:line="209" pos:column="22"/></operator><call><name pos:line="209" pos:column="22">SetConsoleTitle<pos:position pos:line="209" pos:column="37"/></name><argument_list pos:line="209" pos:column="37">(<argument><expr><name pos:line="209" pos:column="38">contitle<pos:position pos:line="209" pos:column="46"/></name></expr></argument>)<pos:position pos:line="209" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="209" pos:column="48"/></condition><then pos:line="209" pos:column="48"> <block pos:line="209" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="210" pos:column="9">printerr<pos:position pos:line="210" pos:column="17"/></name><argument_list pos:line="210" pos:column="17">(<argument><expr><literal type="string" pos:line="210" pos:column="18">"SetConsoleTitle() failed (%d)\n"<pos:position pos:line="210" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name pos:line="210" pos:column="53">GetLastError<pos:position pos:line="210" pos:column="65"/></name><argument_list pos:line="210" pos:column="65">()<pos:position pos:line="210" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="210" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="211" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="213" pos:column="5">conout<pos:position pos:line="213" pos:column="11"/></name> <operator pos:line="213" pos:column="12">=<pos:position pos:line="213" pos:column="13"/></operator> <call><name pos:line="213" pos:column="14">CreateFile<pos:position pos:line="213" pos:column="24"/></name><argument_list pos:line="213" pos:column="24">(<argument><expr><literal type="string" pos:line="213" pos:column="25">"CONOUT$"<pos:position pos:line="213" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="213" pos:column="36">GENERIC_READ<pos:position pos:line="213" pos:column="48"/></name> <operator pos:line="213" pos:column="49">|<pos:position pos:line="213" pos:column="50"/></operator> <name pos:line="213" pos:column="51">GENERIC_WRITE<pos:position pos:line="213" pos:column="64"/></name></expr></argument>,
                        <argument><expr><name pos:line="214" pos:column="25">FILE_SHARE_READ<pos:position pos:line="214" pos:column="40"/></name> <operator pos:line="214" pos:column="41">|<pos:position pos:line="214" pos:column="42"/></operator> <name pos:line="214" pos:column="43">FILE_SHARE_WRITE<pos:position pos:line="214" pos:column="59"/></name></expr></argument>,
                        <argument><expr><name pos:line="215" pos:column="25">FALSE<pos:position pos:line="215" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="32">OPEN_EXISTING<pos:position pos:line="215" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="215" pos:column="47">0<pos:position pos:line="215" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="215" pos:column="50">NULL<pos:position pos:line="215" pos:column="54"/></name></expr></argument>)<pos:position pos:line="215" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="56"/></expr_stmt>
    <if pos:line="216" pos:column="5">if <condition pos:line="216" pos:column="8">(<expr><operator pos:line="216" pos:column="9">!<pos:position pos:line="216" pos:column="10"/></operator><name pos:line="216" pos:column="10">conout<pos:position pos:line="216" pos:column="16"/></name> <operator pos:line="216" pos:column="17">||<pos:position pos:line="216" pos:column="19"/></operator> <name pos:line="216" pos:column="20">conout<pos:position pos:line="216" pos:column="26"/></name> <operator pos:line="216" pos:column="27">==<pos:position pos:line="216" pos:column="29"/></operator> <name pos:line="216" pos:column="30">INVALID_HANDLE_VALUE<pos:position pos:line="216" pos:column="50"/></name></expr>)<pos:position pos:line="216" pos:column="51"/></condition><then pos:line="216" pos:column="51"> <block pos:line="216" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="217" pos:column="9">printerr<pos:position pos:line="217" pos:column="17"/></name><argument_list pos:line="217" pos:column="17">(<argument><expr><literal type="string" pos:line="217" pos:column="18">"CreateFile(CONOUT$) failed (%d)\n"<pos:position pos:line="217" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="217" pos:column="55">GetLastError<pos:position pos:line="217" pos:column="67"/></name><argument_list pos:line="217" pos:column="67">()<pos:position pos:line="217" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="217" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="218" pos:column="6"/></block></then>
    <elseif pos:line="219" pos:column="5">else <if pos:line="219" pos:column="10">if <condition pos:line="219" pos:column="13">(<expr><operator pos:line="219" pos:column="14">!<pos:position pos:line="219" pos:column="15"/></operator><call><name pos:line="219" pos:column="15">GetConsoleMode<pos:position pos:line="219" pos:column="29"/></name><argument_list pos:line="219" pos:column="29">(<argument><expr><name pos:line="219" pos:column="30">conout<pos:position pos:line="219" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="219" pos:column="38">&amp;<pos:position pos:line="219" pos:column="43"/></operator><name pos:line="219" pos:column="39">conmode<pos:position pos:line="219" pos:column="46"/></name></expr></argument>)<pos:position pos:line="219" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="219" pos:column="48"/></condition><then pos:line="219" pos:column="48"> <block pos:line="219" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="220" pos:column="9">printerr<pos:position pos:line="220" pos:column="17"/></name><argument_list pos:line="220" pos:column="17">(<argument><expr><literal type="string" pos:line="220" pos:column="18">"GetConsoleMode(CONOUT) failed (%d)\n"<pos:position pos:line="220" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="220" pos:column="58">GetLastError<pos:position pos:line="220" pos:column="70"/></name><argument_list pos:line="220" pos:column="70">()<pos:position pos:line="220" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="220" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="221" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="222" pos:column="5">else <if pos:line="222" pos:column="10">if <condition pos:line="222" pos:column="13">(<expr><operator pos:line="222" pos:column="14">!<pos:position pos:line="222" pos:column="15"/></operator><call><name pos:line="222" pos:column="15">SetConsoleMode<pos:position pos:line="222" pos:column="29"/></name><argument_list pos:line="222" pos:column="29">(<argument><expr><name pos:line="222" pos:column="30">conout<pos:position pos:line="222" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="222" pos:column="38">conmode<pos:position pos:line="222" pos:column="45"/></name> <operator pos:line="222" pos:column="46">=<pos:position pos:line="222" pos:column="47"/></operator> <operator pos:line="222" pos:column="48">(<pos:position pos:line="222" pos:column="49"/></operator><operator pos:line="222" pos:column="49">(<pos:position pos:line="222" pos:column="50"/></operator><name pos:line="222" pos:column="50">conmode<pos:position pos:line="222" pos:column="57"/></name> <operator pos:line="222" pos:column="58">|<pos:position pos:line="222" pos:column="59"/></operator> <name pos:line="222" pos:column="60">newoutmode<pos:position pos:line="222" pos:column="70"/></name><operator pos:line="222" pos:column="70">)<pos:position pos:line="222" pos:column="71"/></operator>
                                                         <operator pos:line="223" pos:column="58">&amp;<pos:position pos:line="223" pos:column="63"/></operator> <operator pos:line="223" pos:column="60">~<pos:position pos:line="223" pos:column="61"/></operator><name pos:line="223" pos:column="61">notoutmode<pos:position pos:line="223" pos:column="71"/></name><operator pos:line="223" pos:column="71">)<pos:position pos:line="223" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="223" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="223" pos:column="74"/></condition><then pos:line="223" pos:column="74"> <block pos:line="223" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="224" pos:column="9">printerr<pos:position pos:line="224" pos:column="17"/></name><argument_list pos:line="224" pos:column="17">(<argument><expr><literal type="string" pos:line="224" pos:column="18">"SetConsoleMode(CONOUT, 0x%x) failed (%d)\n"<pos:position pos:line="224" pos:column="62"/></literal></expr></argument>,
                 <argument><expr><name pos:line="225" pos:column="18">conmode<pos:position pos:line="225" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="225" pos:column="27">GetLastError<pos:position pos:line="225" pos:column="39"/></name><argument_list pos:line="225" pos:column="39">()<pos:position pos:line="225" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="225" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="226" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="228" pos:column="5">conin<pos:position pos:line="228" pos:column="10"/></name> <operator pos:line="228" pos:column="11">=<pos:position pos:line="228" pos:column="12"/></operator> <call><name pos:line="228" pos:column="13">CreateFile<pos:position pos:line="228" pos:column="23"/></name><argument_list pos:line="228" pos:column="23">(<argument><expr><literal type="string" pos:line="228" pos:column="24">"CONIN$"<pos:position pos:line="228" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="228" pos:column="34">GENERIC_READ<pos:position pos:line="228" pos:column="46"/></name> <operator pos:line="228" pos:column="47">|<pos:position pos:line="228" pos:column="48"/></operator> <name pos:line="228" pos:column="49">GENERIC_WRITE<pos:position pos:line="228" pos:column="62"/></name></expr></argument>,
                       <argument><expr><name pos:line="229" pos:column="24">FILE_SHARE_READ<pos:position pos:line="229" pos:column="39"/></name> <operator pos:line="229" pos:column="40">|<pos:position pos:line="229" pos:column="41"/></operator> <name pos:line="229" pos:column="42">FILE_SHARE_WRITE<pos:position pos:line="229" pos:column="58"/></name></expr></argument>,
                       <argument><expr><name pos:line="230" pos:column="24">FALSE<pos:position pos:line="230" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="31">OPEN_EXISTING<pos:position pos:line="230" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="230" pos:column="46">0<pos:position pos:line="230" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="230" pos:column="49">NULL<pos:position pos:line="230" pos:column="53"/></name></expr></argument>)<pos:position pos:line="230" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="55"/></expr_stmt>
    <if pos:line="231" pos:column="5">if <condition pos:line="231" pos:column="8">(<expr><operator pos:line="231" pos:column="9">!<pos:position pos:line="231" pos:column="10"/></operator><name pos:line="231" pos:column="10">conin<pos:position pos:line="231" pos:column="15"/></name> <operator pos:line="231" pos:column="16">||<pos:position pos:line="231" pos:column="18"/></operator> <name pos:line="231" pos:column="19">conin<pos:position pos:line="231" pos:column="24"/></name> <operator pos:line="231" pos:column="25">==<pos:position pos:line="231" pos:column="27"/></operator> <name pos:line="231" pos:column="28">INVALID_HANDLE_VALUE<pos:position pos:line="231" pos:column="48"/></name></expr>)<pos:position pos:line="231" pos:column="49"/></condition><then pos:line="231" pos:column="49"> <block pos:line="231" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="232" pos:column="9">printerr<pos:position pos:line="232" pos:column="17"/></name><argument_list pos:line="232" pos:column="17">(<argument><expr><literal type="string" pos:line="232" pos:column="18">"CreateFile(CONIN$) failed (%d)\n"<pos:position pos:line="232" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="232" pos:column="54">GetLastError<pos:position pos:line="232" pos:column="66"/></name><argument_list pos:line="232" pos:column="66">()<pos:position pos:line="232" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="232" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="233" pos:column="6"/></block></then>
    <elseif pos:line="234" pos:column="5">else <if pos:line="234" pos:column="10">if <condition pos:line="234" pos:column="13">(<expr><operator pos:line="234" pos:column="14">!<pos:position pos:line="234" pos:column="15"/></operator><call><name pos:line="234" pos:column="15">GetConsoleMode<pos:position pos:line="234" pos:column="29"/></name><argument_list pos:line="234" pos:column="29">(<argument><expr><name pos:line="234" pos:column="30">conin<pos:position pos:line="234" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="234" pos:column="37">&amp;<pos:position pos:line="234" pos:column="42"/></operator><name pos:line="234" pos:column="38">conmode<pos:position pos:line="234" pos:column="45"/></name></expr></argument>)<pos:position pos:line="234" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="234" pos:column="47"/></condition><then pos:line="234" pos:column="47"> <block pos:line="234" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="235" pos:column="9">printerr<pos:position pos:line="235" pos:column="17"/></name><argument_list pos:line="235" pos:column="17">(<argument><expr><literal type="string" pos:line="235" pos:column="18">"GetConsoleMode(CONIN) failed (%d)\n"<pos:position pos:line="235" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="235" pos:column="57">GetLastError<pos:position pos:line="235" pos:column="69"/></name><argument_list pos:line="235" pos:column="69">()<pos:position pos:line="235" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="235" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="236" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="237" pos:column="5">else <if pos:line="237" pos:column="10">if <condition pos:line="237" pos:column="13">(<expr><operator pos:line="237" pos:column="14">!<pos:position pos:line="237" pos:column="15"/></operator><call><name pos:line="237" pos:column="15">SetConsoleMode<pos:position pos:line="237" pos:column="29"/></name><argument_list pos:line="237" pos:column="29">(<argument><expr><name pos:line="237" pos:column="30">conin<pos:position pos:line="237" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="37">conmode<pos:position pos:line="237" pos:column="44"/></name> <operator pos:line="237" pos:column="45">=<pos:position pos:line="237" pos:column="46"/></operator> <operator pos:line="237" pos:column="47">(<pos:position pos:line="237" pos:column="48"/></operator><operator pos:line="237" pos:column="48">(<pos:position pos:line="237" pos:column="49"/></operator><name pos:line="237" pos:column="49">conmode<pos:position pos:line="237" pos:column="56"/></name> <operator pos:line="237" pos:column="57">|<pos:position pos:line="237" pos:column="58"/></operator> <name pos:line="237" pos:column="59">newinmode<pos:position pos:line="237" pos:column="68"/></name><operator pos:line="237" pos:column="68">)<pos:position pos:line="237" pos:column="69"/></operator>
                                                        <operator pos:line="238" pos:column="57">&amp;<pos:position pos:line="238" pos:column="62"/></operator> <operator pos:line="238" pos:column="59">~<pos:position pos:line="238" pos:column="60"/></operator><name pos:line="238" pos:column="60">notinmode<pos:position pos:line="238" pos:column="69"/></name><operator pos:line="238" pos:column="69">)<pos:position pos:line="238" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="238" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="238" pos:column="72"/></condition><then pos:line="238" pos:column="72"> <block pos:line="238" pos:column="73">{
        <expr_stmt><expr><call><name pos:line="239" pos:column="9">printerr<pos:position pos:line="239" pos:column="17"/></name><argument_list pos:line="239" pos:column="17">(<argument><expr><literal type="string" pos:line="239" pos:column="18">"SetConsoleMode(CONIN, 0x%x) failed (%d)\n"<pos:position pos:line="239" pos:column="61"/></literal></expr></argument>,
                 <argument><expr><name pos:line="240" pos:column="18">conmode<pos:position pos:line="240" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="240" pos:column="27">GetLastError<pos:position pos:line="240" pos:column="39"/></name><argument_list pos:line="240" pos:column="39">()<pos:position pos:line="240" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="240" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="241" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><name><name pos:line="243" pos:column="5">feed<pos:position pos:line="243" pos:column="9"/></name><operator pos:line="243" pos:column="9">.<pos:position pos:line="243" pos:column="10"/></operator><name pos:line="243" pos:column="10">in<pos:position pos:line="243" pos:column="12"/></name></name> <operator pos:line="243" pos:column="13">=<pos:position pos:line="243" pos:column="14"/></operator> <name pos:line="243" pos:column="15">conin<pos:position pos:line="243" pos:column="20"/></name></expr>;<pos:position pos:line="243" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="244" pos:column="5">feed<pos:position pos:line="244" pos:column="9"/></name><operator pos:line="244" pos:column="9">.<pos:position pos:line="244" pos:column="10"/></operator><name pos:line="244" pos:column="10">out<pos:position pos:line="244" pos:column="13"/></name></name> <operator pos:line="244" pos:column="14">=<pos:position pos:line="244" pos:column="15"/></operator> <name pos:line="244" pos:column="16">hstdout<pos:position pos:line="244" pos:column="23"/></name></expr>;<pos:position pos:line="244" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="245" pos:column="5">thread<pos:position pos:line="245" pos:column="11"/></name> <operator pos:line="245" pos:column="12">=<pos:position pos:line="245" pos:column="13"/></operator> <call><name pos:line="245" pos:column="14">CreateThread<pos:position pos:line="245" pos:column="26"/></name><argument_list pos:line="245" pos:column="26">(<argument><expr><name pos:line="245" pos:column="27">NULL<pos:position pos:line="245" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="245" pos:column="33">0<pos:position pos:line="245" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="245" pos:column="36">feedback<pos:position pos:line="245" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="245" pos:column="46">(<pos:position pos:line="245" pos:column="47"/></operator><name pos:line="245" pos:column="47">LPVOID<pos:position pos:line="245" pos:column="53"/></name><operator pos:line="245" pos:column="53">)<pos:position pos:line="245" pos:column="54"/></operator><operator pos:line="245" pos:column="54">&amp;<pos:position pos:line="245" pos:column="59"/></operator><name pos:line="245" pos:column="55">feed<pos:position pos:line="245" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="245" pos:column="61">0<pos:position pos:line="245" pos:column="62"/></literal></expr></argument>, <argument><expr><operator pos:line="245" pos:column="64">&amp;<pos:position pos:line="245" pos:column="69"/></operator><name pos:line="245" pos:column="65">tid<pos:position pos:line="245" pos:column="68"/></name></expr></argument>)<pos:position pos:line="245" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="70"/></expr_stmt>

    <while pos:line="247" pos:column="5">while <condition pos:line="247" pos:column="11">(<expr><call><name pos:line="247" pos:column="12">ReadFile<pos:position pos:line="247" pos:column="20"/></name><argument_list pos:line="247" pos:column="20">(<argument><expr><name pos:line="247" pos:column="21">hstdin<pos:position pos:line="247" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="29">str<pos:position pos:line="247" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="247" pos:column="34">sizeof<argument_list pos:line="247" pos:column="40">(<argument><expr><name pos:line="247" pos:column="41">str<pos:position pos:line="247" pos:column="44"/></name></expr></argument>)<pos:position pos:line="247" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="247" pos:column="47">&amp;<pos:position pos:line="247" pos:column="52"/></operator><name pos:line="247" pos:column="48">len<pos:position pos:line="247" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="53">NULL<pos:position pos:line="247" pos:column="57"/></name></expr></argument>)<pos:position pos:line="247" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="247" pos:column="59"/></condition>
        <block type="pseudo"><if pos:line="248" pos:column="9">if <condition pos:line="248" pos:column="12">(<expr><operator pos:line="248" pos:column="13">!<pos:position pos:line="248" pos:column="14"/></operator><name pos:line="248" pos:column="14">len<pos:position pos:line="248" pos:column="17"/></name> <operator pos:line="248" pos:column="18">||<pos:position pos:line="248" pos:column="20"/></operator> <operator pos:line="248" pos:column="21">!<pos:position pos:line="248" pos:column="22"/></operator><call><name pos:line="248" pos:column="22">WriteFile<pos:position pos:line="248" pos:column="31"/></name><argument_list pos:line="248" pos:column="31">(<argument><expr><name pos:line="248" pos:column="32">conout<pos:position pos:line="248" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="40">str<pos:position pos:line="248" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="45">len<pos:position pos:line="248" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="248" pos:column="50">&amp;<pos:position pos:line="248" pos:column="55"/></operator><name pos:line="248" pos:column="51">len<pos:position pos:line="248" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="56">NULL<pos:position pos:line="248" pos:column="60"/></name></expr></argument>)<pos:position pos:line="248" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="248" pos:column="62"/></condition><then pos:line="248" pos:column="62">
           <block type="pseudo"><break pos:line="249" pos:column="12">break;<pos:position pos:line="249" pos:column="18"/></break></block></then></if></block></while>

    <expr_stmt><expr><call><name pos:line="251" pos:column="5">printerr<pos:position pos:line="251" pos:column="13"/></name><argument_list pos:line="251" pos:column="13">(<argument><expr><literal type="string" pos:line="251" pos:column="14">"[EOF] from stdin (%d)\n"<pos:position pos:line="251" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="251" pos:column="41">GetLastError<pos:position pos:line="251" pos:column="53"/></name><argument_list pos:line="251" pos:column="53">()<pos:position pos:line="251" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="251" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="253" pos:column="5">CloseHandle<pos:position pos:line="253" pos:column="16"/></name><argument_list pos:line="253" pos:column="16">(<argument><expr><name pos:line="253" pos:column="17">stdout<pos:position pos:line="253" pos:column="23"/></name></expr></argument>)<pos:position pos:line="253" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="25"/></expr_stmt>
    <if pos:line="254" pos:column="5">if <condition pos:line="254" pos:column="8">(<expr><operator pos:line="254" pos:column="9">!<pos:position pos:line="254" pos:column="10"/></operator><call><name pos:line="254" pos:column="10">GetConsoleTitle<pos:position pos:line="254" pos:column="25"/></name><argument_list pos:line="254" pos:column="25">(<argument><expr><name pos:line="254" pos:column="26">str<pos:position pos:line="254" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="254" pos:column="31">sizeof<argument_list pos:line="254" pos:column="37">(<argument><expr><name pos:line="254" pos:column="38">str<pos:position pos:line="254" pos:column="41"/></name></expr></argument>)<pos:position pos:line="254" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="254" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="254" pos:column="44"/></condition><then pos:line="254" pos:column="44"> <block pos:line="254" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="255" pos:column="9">printerr<pos:position pos:line="255" pos:column="17"/></name><argument_list pos:line="255" pos:column="17">(<argument><expr><literal type="string" pos:line="255" pos:column="18">"SetConsoleTitle() failed (%d)\n"<pos:position pos:line="255" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name pos:line="255" pos:column="53">GetLastError<pos:position pos:line="255" pos:column="65"/></name><argument_list pos:line="255" pos:column="65">()<pos:position pos:line="255" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="255" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="256" pos:column="6"/></block></then>
    <else pos:line="257" pos:column="5">else <block pos:line="257" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="258" pos:column="9">strcat<pos:position pos:line="258" pos:column="15"/></name><argument_list pos:line="258" pos:column="15">(<argument><expr><name pos:line="258" pos:column="16">str<pos:position pos:line="258" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="258" pos:column="21">" - [Finished]"<pos:position pos:line="258" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="258" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="38"/></expr_stmt>
        <if pos:line="259" pos:column="9">if <condition pos:line="259" pos:column="12">(<expr><operator pos:line="259" pos:column="13">!<pos:position pos:line="259" pos:column="14"/></operator><call><name pos:line="259" pos:column="14">SetConsoleTitle<pos:position pos:line="259" pos:column="29"/></name><argument_list pos:line="259" pos:column="29">(<argument><expr><name pos:line="259" pos:column="30">str<pos:position pos:line="259" pos:column="33"/></name></expr></argument>)<pos:position pos:line="259" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="259" pos:column="35"/></condition><then pos:line="259" pos:column="35"> <block pos:line="259" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="260" pos:column="13">printerr<pos:position pos:line="260" pos:column="21"/></name><argument_list pos:line="260" pos:column="21">(<argument><expr><literal type="string" pos:line="260" pos:column="22">"SetConsoleTitle() failed (%d)\n"<pos:position pos:line="260" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="260" pos:column="57">GetLastError<pos:position pos:line="260" pos:column="69"/></name><argument_list pos:line="260" pos:column="69">()<pos:position pos:line="260" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="260" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="261" pos:column="10"/></block></then></if>
    }<pos:position pos:line="262" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="264" pos:column="5">WaitForSingleObject<pos:position pos:line="264" pos:column="24"/></name><argument_list pos:line="264" pos:column="24">(<argument><expr><name pos:line="264" pos:column="25">thread<pos:position pos:line="264" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="264" pos:column="33">timeout<pos:position pos:line="264" pos:column="40"/></name></expr></argument>)<pos:position pos:line="264" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="265" pos:column="5">FreeConsole<pos:position pos:line="265" pos:column="16"/></name><argument_list pos:line="265" pos:column="16">()<pos:position pos:line="265" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="19"/></expr_stmt>
    <if pos:line="266" pos:column="5">if <condition pos:line="266" pos:column="8">(<expr><name pos:line="266" pos:column="9">isservice<pos:position pos:line="266" pos:column="18"/></name></expr>)<pos:position pos:line="266" pos:column="19"/></condition><then pos:line="266" pos:column="19"> <block pos:line="266" pos:column="20">{
        <if pos:line="267" pos:column="9">if <condition pos:line="267" pos:column="12">(<expr><operator pos:line="267" pos:column="13">!<pos:position pos:line="267" pos:column="14"/></operator><call><name pos:line="267" pos:column="14">SetProcessWindowStation<pos:position pos:line="267" pos:column="37"/></name><argument_list pos:line="267" pos:column="37">(<argument><expr><name pos:line="267" pos:column="38">hsavewinsta<pos:position pos:line="267" pos:column="49"/></name></expr></argument>)<pos:position pos:line="267" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="267" pos:column="51"/></condition><then pos:line="267" pos:column="51"> <block pos:line="267" pos:column="52">{
            <expr_stmt><expr><name pos:line="268" pos:column="13">len<pos:position pos:line="268" pos:column="16"/></name> <operator pos:line="268" pos:column="17">=<pos:position pos:line="268" pos:column="18"/></operator> <call><name pos:line="268" pos:column="19">GetLastError<pos:position pos:line="268" pos:column="31"/></name><argument_list pos:line="268" pos:column="31">()<pos:position pos:line="268" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="269" pos:column="10"/></block></then></if>
        <if pos:line="270" pos:column="9">if <condition pos:line="270" pos:column="12">(<expr><operator pos:line="270" pos:column="13">!<pos:position pos:line="270" pos:column="14"/></operator><call><name pos:line="270" pos:column="14">SetThreadDesktop<pos:position pos:line="270" pos:column="30"/></name><argument_list pos:line="270" pos:column="30">(<argument><expr><name pos:line="270" pos:column="31">hsavedesk<pos:position pos:line="270" pos:column="40"/></name></expr></argument>)<pos:position pos:line="270" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="270" pos:column="42"/></condition><then pos:line="270" pos:column="42"> <block pos:line="270" pos:column="43">{
            <expr_stmt><expr><name pos:line="271" pos:column="13">len<pos:position pos:line="271" pos:column="16"/></name> <operator pos:line="271" pos:column="17">=<pos:position pos:line="271" pos:column="18"/></operator> <call><name pos:line="271" pos:column="19">GetLastError<pos:position pos:line="271" pos:column="31"/></name><argument_list pos:line="271" pos:column="31">()<pos:position pos:line="271" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="272" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="273" pos:column="9">CloseDesktop<pos:position pos:line="273" pos:column="21"/></name><argument_list pos:line="273" pos:column="21">(<argument><expr><name pos:line="273" pos:column="22">hdesk<pos:position pos:line="273" pos:column="27"/></name></expr></argument>)<pos:position pos:line="273" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="274" pos:column="9">CloseWindowStation<pos:position pos:line="274" pos:column="27"/></name><argument_list pos:line="274" pos:column="27">(<argument><expr><name pos:line="274" pos:column="28">hwinsta<pos:position pos:line="274" pos:column="35"/></name></expr></argument>)<pos:position pos:line="274" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="275" pos:column="6"/></block></then></if>
    <return pos:line="276" pos:column="5">return <expr><literal type="number" pos:line="276" pos:column="12">0<pos:position pos:line="276" pos:column="13"/></literal></expr>;<pos:position pos:line="276" pos:column="14"/></return>
}<pos:position pos:line="277" pos:column="2"/></block></function></unit>

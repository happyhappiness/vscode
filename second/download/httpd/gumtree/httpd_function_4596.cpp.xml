<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4596.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">encrypt_string<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">request_rec<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type> <name pos:line="1" pos:column="50">r<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">apr_crypto_t<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">f<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2" pos:column="9">session_crypto_dir_conf<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">dconf<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">in<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier><modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">out<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">res<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_crypto_key_t<pos:position pos:line="5" pos:column="21"/></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">key<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">NULL<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">ivSize<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_crypto_block_t<pos:position pos:line="7" pos:column="23"/></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">block<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><name pos:line="7" pos:column="33">NULL<pos:position pos:line="7" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">char<pos:position pos:line="8" pos:column="18"/></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">encrypt<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><name pos:line="8" pos:column="30">NULL<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">unsigned<pos:position pos:line="9" pos:column="13"/></name> <name pos:line="9" pos:column="14">char<pos:position pos:line="9" pos:column="18"/></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">combined<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><name pos:line="9" pos:column="31">NULL<pos:position pos:line="9" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">encryptlen<pos:position pos:line="10" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="28">tlen<pos:position pos:line="10" pos:column="32"/></name></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">base64<pos:position pos:line="11" pos:column="17"/></name></decl>;<pos:position pos:line="11" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_size_t<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">blockSize<pos:position pos:line="12" pos:column="25"/></name> <init pos:line="12" pos:column="26">= <expr><literal type="number" pos:line="12" pos:column="28">0<pos:position pos:line="12" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">unsigned<pos:position pos:line="13" pos:column="19"/></name> <name pos:line="13" pos:column="20">char<pos:position pos:line="13" pos:column="24"/></name> <modifier pos:line="13" pos:column="25">*<pos:position pos:line="13" pos:column="26"/></modifier></type><name pos:line="13" pos:column="26">iv<pos:position pos:line="13" pos:column="28"/></name> <init pos:line="13" pos:column="29">= <expr><name pos:line="13" pos:column="31">NULL<pos:position pos:line="13" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_uuid_t<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">salt<pos:position pos:line="14" pos:column="20"/></name></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_crypto_block_key_type_e<pos:position pos:line="15" pos:column="32"/></name> <modifier pos:line="15" pos:column="33">*<pos:position pos:line="15" pos:column="34"/></modifier></type><name pos:line="15" pos:column="34">cipher<pos:position pos:line="15" pos:column="40"/></name></decl>;<pos:position pos:line="15" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="16" pos:column="5">const<pos:position pos:line="16" pos:column="10"/></specifier> <name pos:line="16" pos:column="11">char<pos:position pos:line="16" pos:column="15"/></name> <modifier pos:line="16" pos:column="16">*<pos:position pos:line="16" pos:column="17"/></modifier></type><name pos:line="16" pos:column="17">passphrase<pos:position pos:line="16" pos:column="27"/></name></decl>;<pos:position pos:line="16" pos:column="28"/></decl_stmt>

    <comment type="block" pos:line="18" pos:column="5">/* by default, return an empty string */</comment>
    <expr_stmt><expr><operator pos:line="19" pos:column="5">*<pos:position pos:line="19" pos:column="6"/></operator><name pos:line="19" pos:column="6">out<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <literal type="string" pos:line="19" pos:column="12">""<pos:position pos:line="19" pos:column="14"/></literal></expr>;<pos:position pos:line="19" pos:column="15"/></expr_stmt>

    <comment type="block" pos:line="21" pos:column="5">/* don't attempt to encrypt an empty string, trying to do so causes a segfault */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">in<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">||<pos:position pos:line="22" pos:column="15"/></operator> <operator pos:line="22" pos:column="16">!<pos:position pos:line="22" pos:column="17"/></operator><operator pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">in<pos:position pos:line="22" pos:column="20"/></name></expr>)<pos:position pos:line="22" pos:column="21"/></condition><then pos:line="22" pos:column="21"> <block pos:line="22" pos:column="22">{
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">APR_SUCCESS<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/* use a uuid as a salt value, and prepend it to our result */</comment>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">apr_uuid_get<pos:position pos:line="27" pos:column="17"/></name><argument_list pos:line="27" pos:column="17">(<argument><expr><operator pos:line="27" pos:column="18">&amp;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="19">salt<pos:position pos:line="27" pos:column="23"/></name></expr></argument>)<pos:position pos:line="27" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">res<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <call><name pos:line="28" pos:column="11">crypt_init<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">r<pos:position pos:line="28" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="25">f<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="28">&amp;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="29">cipher<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="37">dconf<pos:position pos:line="28" pos:column="42"/></name></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">res<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">!=<pos:position pos:line="29" pos:column="15"/></operator> <name pos:line="29" pos:column="16">APR_SUCCESS<pos:position pos:line="29" pos:column="27"/></name></expr>)<pos:position pos:line="29" pos:column="28"/></condition><then pos:line="29" pos:column="28"> <block pos:line="29" pos:column="29">{
        <return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">res<pos:position pos:line="30" pos:column="19"/></name></expr>;<pos:position pos:line="30" pos:column="20"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="33" pos:column="5">/* encrypt using the first passphrase in the list */</comment>
    <expr_stmt><expr><name pos:line="34" pos:column="5">passphrase<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">APR_ARRAY_IDX<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name><name pos:line="34" pos:column="32">dconf<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">-&gt;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="39">passphrases<pos:position pos:line="34" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="52">0<pos:position pos:line="34" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="55">char<pos:position pos:line="34" pos:column="59"/></name> <operator pos:line="34" pos:column="60">*<pos:position pos:line="34" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">res<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">=<pos:position pos:line="35" pos:column="10"/></operator> <call><name pos:line="35" pos:column="11">apr_crypto_passphrase<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><operator pos:line="35" pos:column="33">&amp;<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="34">key<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="39">&amp;<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="40">ivSize<pos:position pos:line="35" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="48">passphrase<pos:position pos:line="35" pos:column="58"/></name></expr></argument>,
            <argument><expr><call><name pos:line="36" pos:column="13">strlen<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><name pos:line="36" pos:column="20">passphrase<pos:position pos:line="36" pos:column="30"/></name></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr></argument>,
            <argument><expr><operator pos:line="37" pos:column="13">(<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">unsigned<pos:position pos:line="37" pos:column="22"/></name> <name pos:line="37" pos:column="23">char<pos:position pos:line="37" pos:column="27"/></name> <operator pos:line="37" pos:column="28">*<pos:position pos:line="37" pos:column="29"/></operator><operator pos:line="37" pos:column="29">)<pos:position pos:line="37" pos:column="30"/></operator> <operator pos:line="37" pos:column="31">(<pos:position pos:line="37" pos:column="32"/></operator><operator pos:line="37" pos:column="32">&amp;<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="33">salt<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">)<pos:position pos:line="37" pos:column="38"/></operator></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="40">sizeof<argument_list pos:line="37" pos:column="46">(<argument><expr><name pos:line="37" pos:column="47">apr_uuid_t<pos:position pos:line="37" pos:column="57"/></name></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></sizeof></expr></argument>,
            <argument><expr><operator pos:line="38" pos:column="13">*<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">cipher<pos:position pos:line="38" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="22">APR_MODE_CBC<pos:position pos:line="38" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="36">1<pos:position pos:line="38" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="39">4096<pos:position pos:line="38" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="45">f<pos:position pos:line="38" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="48">r<pos:position pos:line="38" pos:column="49"/></name><operator pos:line="38" pos:column="49">-&gt;<pos:position pos:line="38" pos:column="54"/></operator><name pos:line="38" pos:column="51">pool<pos:position pos:line="38" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="57"/></expr_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><call><name pos:line="39" pos:column="9">APR_STATUS_IS_ENOKEY<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">res<pos:position pos:line="39" pos:column="33"/></name></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="35"/></condition><then pos:line="39" pos:column="35"> <block pos:line="39" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">ap_log_rerror<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">APLOG_MARK<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="35">APLOG_ERR<pos:position pos:line="40" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="46">res<pos:position pos:line="40" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="51">r<pos:position pos:line="40" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="54">APLOGNO<pos:position pos:line="40" pos:column="61"/></name><argument_list pos:line="40" pos:column="61">(<argument><expr><literal type="number" pos:line="40" pos:column="62">01825<pos:position pos:line="40" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="68"/></argument_list></call>
                <literal type="string" pos:line="41" pos:column="17">"the passphrase '%s' was empty"<pos:position pos:line="41" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">passphrase<pos:position pos:line="41" pos:column="60"/></name></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><call><name pos:line="43" pos:column="9">APR_STATUS_IS_EPADDING<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><name pos:line="43" pos:column="32">res<pos:position pos:line="43" pos:column="35"/></name></expr></argument>)<pos:position pos:line="43" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="37"/></condition><then pos:line="43" pos:column="37"> <block pos:line="43" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">ap_log_rerror<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">APLOG_MARK<pos:position pos:line="44" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="35">APLOG_ERR<pos:position pos:line="44" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="46">res<pos:position pos:line="44" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="51">r<pos:position pos:line="44" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="54">APLOGNO<pos:position pos:line="44" pos:column="61"/></name><argument_list pos:line="44" pos:column="61">(<argument><expr><literal type="number" pos:line="44" pos:column="62">01826<pos:position pos:line="44" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="68"/></argument_list></call>
                <literal type="string" pos:line="45" pos:column="17">"padding is not supported for cipher"<pos:position pos:line="45" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><call><name pos:line="47" pos:column="9">APR_STATUS_IS_EKEYTYPE<pos:position pos:line="47" pos:column="31"/></name><argument_list pos:line="47" pos:column="31">(<argument><expr><name pos:line="47" pos:column="32">res<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="37"/></condition><then pos:line="47" pos:column="37"> <block pos:line="47" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">ap_log_rerror<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><name pos:line="48" pos:column="23">APLOG_MARK<pos:position pos:line="48" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="35">APLOG_ERR<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="46">res<pos:position pos:line="48" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="51">r<pos:position pos:line="48" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="54">APLOGNO<pos:position pos:line="48" pos:column="61"/></name><argument_list pos:line="48" pos:column="61">(<argument><expr><literal type="number" pos:line="48" pos:column="62">01827<pos:position pos:line="48" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="68"/></argument_list></call>
                <literal type="string" pos:line="49" pos:column="17">"the key type is not known"<pos:position pos:line="49" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">APR_SUCCESS<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">!=<pos:position pos:line="51" pos:column="23"/></operator> <name pos:line="51" pos:column="24">res<pos:position pos:line="51" pos:column="27"/></name></expr>)<pos:position pos:line="51" pos:column="28"/></condition><then pos:line="51" pos:column="28"> <block pos:line="51" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">ap_log_rerror<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><name pos:line="52" pos:column="23">APLOG_MARK<pos:position pos:line="52" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="35">APLOG_ERR<pos:position pos:line="52" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="46">res<pos:position pos:line="52" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="51">r<pos:position pos:line="52" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="54">APLOGNO<pos:position pos:line="52" pos:column="61"/></name><argument_list pos:line="52" pos:column="61">(<argument><expr><literal type="number" pos:line="52" pos:column="62">01828<pos:position pos:line="52" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="68"/></argument_list></call>
                <literal type="string" pos:line="53" pos:column="17">"encryption could not be configured."<pos:position pos:line="53" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="56"/></expr_stmt>
        <return pos:line="54" pos:column="9">return <expr><name pos:line="54" pos:column="16">res<pos:position pos:line="54" pos:column="19"/></name></expr>;<pos:position pos:line="54" pos:column="20"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="57" pos:column="5">res<pos:position pos:line="57" pos:column="8"/></name> <operator pos:line="57" pos:column="9">=<pos:position pos:line="57" pos:column="10"/></operator> <call><name pos:line="57" pos:column="11">apr_crypto_block_encrypt_init<pos:position pos:line="57" pos:column="40"/></name><argument_list pos:line="57" pos:column="40">(<argument><expr><operator pos:line="57" pos:column="41">&amp;<pos:position pos:line="57" pos:column="46"/></operator><name pos:line="57" pos:column="42">block<pos:position pos:line="57" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="49">&amp;<pos:position pos:line="57" pos:column="54"/></operator><name pos:line="57" pos:column="50">iv<pos:position pos:line="57" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="54">key<pos:position pos:line="57" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="59">&amp;<pos:position pos:line="57" pos:column="64"/></operator><name pos:line="57" pos:column="60">blockSize<pos:position pos:line="57" pos:column="69"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="71">r<pos:position pos:line="57" pos:column="72"/></name><operator pos:line="57" pos:column="72">-&gt;<pos:position pos:line="57" pos:column="77"/></operator><name pos:line="57" pos:column="74">pool<pos:position pos:line="57" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="80"/></expr_stmt>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">APR_SUCCESS<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">!=<pos:position pos:line="58" pos:column="23"/></operator> <name pos:line="58" pos:column="24">res<pos:position pos:line="58" pos:column="27"/></name></expr>)<pos:position pos:line="58" pos:column="28"/></condition><then pos:line="58" pos:column="28"> <block pos:line="58" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">ap_log_rerror<pos:position pos:line="59" pos:column="22"/></name><argument_list pos:line="59" pos:column="22">(<argument><expr><name pos:line="59" pos:column="23">APLOG_MARK<pos:position pos:line="59" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="35">APLOG_ERR<pos:position pos:line="59" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="46">res<pos:position pos:line="59" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="51">r<pos:position pos:line="59" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="54">APLOGNO<pos:position pos:line="59" pos:column="61"/></name><argument_list pos:line="59" pos:column="61">(<argument><expr><literal type="number" pos:line="59" pos:column="62">01829<pos:position pos:line="59" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="68"/></argument_list></call>
                <literal type="string" pos:line="60" pos:column="17">"apr_crypto_block_encrypt_init failed"<pos:position pos:line="60" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="57"/></expr_stmt>
        <return pos:line="61" pos:column="9">return <expr><name pos:line="61" pos:column="16">res<pos:position pos:line="61" pos:column="19"/></name></expr>;<pos:position pos:line="61" pos:column="20"/></return>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="64" pos:column="5">/* encrypt the given string */</comment>
    <expr_stmt><expr><name pos:line="65" pos:column="5">res<pos:position pos:line="65" pos:column="8"/></name> <operator pos:line="65" pos:column="9">=<pos:position pos:line="65" pos:column="10"/></operator> <call><name pos:line="65" pos:column="11">apr_crypto_block_encrypt<pos:position pos:line="65" pos:column="35"/></name><argument_list pos:line="65" pos:column="35">(<argument><expr><operator pos:line="65" pos:column="36">&amp;<pos:position pos:line="65" pos:column="41"/></operator><name pos:line="65" pos:column="37">encrypt<pos:position pos:line="65" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="46">&amp;<pos:position pos:line="65" pos:column="51"/></operator><name pos:line="65" pos:column="47">encryptlen<pos:position pos:line="65" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="59">(<pos:position pos:line="65" pos:column="60"/></operator><name pos:line="65" pos:column="60">unsigned<pos:position pos:line="65" pos:column="68"/></name> <name pos:line="65" pos:column="69">char<pos:position pos:line="65" pos:column="73"/></name> <operator pos:line="65" pos:column="74">*<pos:position pos:line="65" pos:column="75"/></operator><operator pos:line="65" pos:column="75">)<pos:position pos:line="65" pos:column="76"/></operator><name pos:line="65" pos:column="76">in<pos:position pos:line="65" pos:column="78"/></name></expr></argument>,
            <argument><expr><call><name pos:line="66" pos:column="13">strlen<pos:position pos:line="66" pos:column="19"/></name><argument_list pos:line="66" pos:column="19">(<argument><expr><name pos:line="66" pos:column="20">in<pos:position pos:line="66" pos:column="22"/></name></expr></argument>)<pos:position pos:line="66" pos:column="23"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="66" pos:column="25">block<pos:position pos:line="66" pos:column="30"/></name></expr></argument>)<pos:position pos:line="66" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="32"/></expr_stmt>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">APR_SUCCESS<pos:position pos:line="67" pos:column="20"/></name> <operator pos:line="67" pos:column="21">!=<pos:position pos:line="67" pos:column="23"/></operator> <name pos:line="67" pos:column="24">res<pos:position pos:line="67" pos:column="27"/></name></expr>)<pos:position pos:line="67" pos:column="28"/></condition><then pos:line="67" pos:column="28"> <block pos:line="67" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">ap_log_rerror<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name pos:line="68" pos:column="23">APLOG_MARK<pos:position pos:line="68" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="35">APLOG_ERR<pos:position pos:line="68" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="46">res<pos:position pos:line="68" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="51">r<pos:position pos:line="68" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="54">APLOGNO<pos:position pos:line="68" pos:column="61"/></name><argument_list pos:line="68" pos:column="61">(<argument><expr><literal type="number" pos:line="68" pos:column="62">01830<pos:position pos:line="68" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="68"/></argument_list></call>
                <literal type="string" pos:line="69" pos:column="17">"apr_crypto_block_encrypt failed"<pos:position pos:line="69" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="52"/></expr_stmt>
        <return pos:line="70" pos:column="9">return <expr><name pos:line="70" pos:column="16">res<pos:position pos:line="70" pos:column="19"/></name></expr>;<pos:position pos:line="70" pos:column="20"/></return>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="72" pos:column="5">res<pos:position pos:line="72" pos:column="8"/></name> <operator pos:line="72" pos:column="9">=<pos:position pos:line="72" pos:column="10"/></operator> <call><name pos:line="72" pos:column="11">apr_crypto_block_encrypt_finish<pos:position pos:line="72" pos:column="42"/></name><argument_list pos:line="72" pos:column="42">(<argument><expr><name pos:line="72" pos:column="43">encrypt<pos:position pos:line="72" pos:column="50"/></name> <operator pos:line="72" pos:column="51">+<pos:position pos:line="72" pos:column="52"/></operator> <name pos:line="72" pos:column="53">encryptlen<pos:position pos:line="72" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="65">&amp;<pos:position pos:line="72" pos:column="70"/></operator><name pos:line="72" pos:column="66">tlen<pos:position pos:line="72" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="72">block<pos:position pos:line="72" pos:column="77"/></name></expr></argument>)<pos:position pos:line="72" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="79"/></expr_stmt>
    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><name pos:line="73" pos:column="9">APR_SUCCESS<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">!=<pos:position pos:line="73" pos:column="23"/></operator> <name pos:line="73" pos:column="24">res<pos:position pos:line="73" pos:column="27"/></name></expr>)<pos:position pos:line="73" pos:column="28"/></condition><then pos:line="73" pos:column="28"> <block pos:line="73" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="74" pos:column="9">ap_log_rerror<pos:position pos:line="74" pos:column="22"/></name><argument_list pos:line="74" pos:column="22">(<argument><expr><name pos:line="74" pos:column="23">APLOG_MARK<pos:position pos:line="74" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="35">APLOG_ERR<pos:position pos:line="74" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="46">res<pos:position pos:line="74" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="51">r<pos:position pos:line="74" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="74" pos:column="54">APLOGNO<pos:position pos:line="74" pos:column="61"/></name><argument_list pos:line="74" pos:column="61">(<argument><expr><literal type="number" pos:line="74" pos:column="62">01831<pos:position pos:line="74" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="68"/></argument_list></call>
                <literal type="string" pos:line="75" pos:column="17">"apr_crypto_block_encrypt_finish failed"<pos:position pos:line="75" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="59"/></expr_stmt>
        <return pos:line="76" pos:column="9">return <expr><name pos:line="76" pos:column="16">res<pos:position pos:line="76" pos:column="19"/></name></expr>;<pos:position pos:line="76" pos:column="20"/></return>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="78" pos:column="5">encryptlen<pos:position pos:line="78" pos:column="15"/></name> <operator pos:line="78" pos:column="16">+=<pos:position pos:line="78" pos:column="18"/></operator> <name pos:line="78" pos:column="19">tlen<pos:position pos:line="78" pos:column="23"/></name></expr>;<pos:position pos:line="78" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="80" pos:column="5">/* prepend the salt and the iv to the result */</comment>
    <expr_stmt><expr><name pos:line="81" pos:column="5">combined<pos:position pos:line="81" pos:column="13"/></name> <operator pos:line="81" pos:column="14">=<pos:position pos:line="81" pos:column="15"/></operator> <call><name pos:line="81" pos:column="16">apr_palloc<pos:position pos:line="81" pos:column="26"/></name><argument_list pos:line="81" pos:column="26">(<argument><expr><name><name pos:line="81" pos:column="27">r<pos:position pos:line="81" pos:column="28"/></name><operator pos:line="81" pos:column="28">-&gt;<pos:position pos:line="81" pos:column="33"/></operator><name pos:line="81" pos:column="30">pool<pos:position pos:line="81" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="36">ivSize<pos:position pos:line="81" pos:column="42"/></name> <operator pos:line="81" pos:column="43">+<pos:position pos:line="81" pos:column="44"/></operator> <name pos:line="81" pos:column="45">encryptlen<pos:position pos:line="81" pos:column="55"/></name> <operator pos:line="81" pos:column="56">+<pos:position pos:line="81" pos:column="57"/></operator> <sizeof pos:line="81" pos:column="58">sizeof<argument_list pos:line="81" pos:column="64">(<argument><expr><name pos:line="81" pos:column="65">apr_uuid_t<pos:position pos:line="81" pos:column="75"/></name></expr></argument>)<pos:position pos:line="81" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="81" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">memcpy<pos:position pos:line="82" pos:column="11"/></name><argument_list pos:line="82" pos:column="11">(<argument><expr><name pos:line="82" pos:column="12">combined<pos:position pos:line="82" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="22">&amp;<pos:position pos:line="82" pos:column="27"/></operator><name pos:line="82" pos:column="23">salt<pos:position pos:line="82" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="82" pos:column="29">sizeof<argument_list pos:line="82" pos:column="35">(<argument><expr><name pos:line="82" pos:column="36">apr_uuid_t<pos:position pos:line="82" pos:column="46"/></name></expr></argument>)<pos:position pos:line="82" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="82" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">memcpy<pos:position pos:line="83" pos:column="11"/></name><argument_list pos:line="83" pos:column="11">(<argument><expr><name pos:line="83" pos:column="12">combined<pos:position pos:line="83" pos:column="20"/></name> <operator pos:line="83" pos:column="21">+<pos:position pos:line="83" pos:column="22"/></operator> <sizeof pos:line="83" pos:column="23">sizeof<argument_list pos:line="83" pos:column="29">(<argument><expr><name pos:line="83" pos:column="30">apr_uuid_t<pos:position pos:line="83" pos:column="40"/></name></expr></argument>)<pos:position pos:line="83" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="83" pos:column="43">iv<pos:position pos:line="83" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="47">ivSize<pos:position pos:line="83" pos:column="53"/></name></expr></argument>)<pos:position pos:line="83" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">memcpy<pos:position pos:line="84" pos:column="11"/></name><argument_list pos:line="84" pos:column="11">(<argument><expr><name pos:line="84" pos:column="12">combined<pos:position pos:line="84" pos:column="20"/></name> <operator pos:line="84" pos:column="21">+<pos:position pos:line="84" pos:column="22"/></operator> <sizeof pos:line="84" pos:column="23">sizeof<argument_list pos:line="84" pos:column="29">(<argument><expr><name pos:line="84" pos:column="30">apr_uuid_t<pos:position pos:line="84" pos:column="40"/></name></expr></argument>)<pos:position pos:line="84" pos:column="41"/></argument_list></sizeof> <operator pos:line="84" pos:column="42">+<pos:position pos:line="84" pos:column="43"/></operator> <name pos:line="84" pos:column="44">ivSize<pos:position pos:line="84" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="52">encrypt<pos:position pos:line="84" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="61">encryptlen<pos:position pos:line="84" pos:column="71"/></name></expr></argument>)<pos:position pos:line="84" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="73"/></expr_stmt>

    <comment type="block" pos:line="86" pos:column="5">/* base64 encode the result */</comment>
    <expr_stmt><expr><name pos:line="87" pos:column="5">base64<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">=<pos:position pos:line="87" pos:column="13"/></operator> <call><name pos:line="87" pos:column="14">apr_palloc<pos:position pos:line="87" pos:column="24"/></name><argument_list pos:line="87" pos:column="24">(<argument><expr><name><name pos:line="87" pos:column="25">r<pos:position pos:line="87" pos:column="26"/></name><operator pos:line="87" pos:column="26">-&gt;<pos:position pos:line="87" pos:column="31"/></operator><name pos:line="87" pos:column="28">pool<pos:position pos:line="87" pos:column="32"/></name></name></expr></argument>, <argument><expr><call><name pos:line="87" pos:column="34">apr_base64_encode_len<pos:position pos:line="87" pos:column="55"/></name><argument_list pos:line="87" pos:column="55">(<argument><expr><name pos:line="87" pos:column="56">ivSize<pos:position pos:line="87" pos:column="62"/></name> <operator pos:line="87" pos:column="63">+<pos:position pos:line="87" pos:column="64"/></operator> <name pos:line="87" pos:column="65">encryptlen<pos:position pos:line="87" pos:column="75"/></name> <operator pos:line="87" pos:column="76">+<pos:position pos:line="87" pos:column="77"/></operator>
                    <sizeof pos:line="88" pos:column="21">sizeof<argument_list pos:line="88" pos:column="27">(<argument><expr><name pos:line="88" pos:column="28">apr_uuid_t<pos:position pos:line="88" pos:column="38"/></name></expr></argument>)<pos:position pos:line="88" pos:column="39"/></argument_list></sizeof> <operator pos:line="88" pos:column="40">+<pos:position pos:line="88" pos:column="41"/></operator> <literal type="number" pos:line="88" pos:column="42">1<pos:position pos:line="88" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="44"/></argument_list></call>
            <operator pos:line="89" pos:column="13">*<pos:position pos:line="89" pos:column="14"/></operator> <sizeof pos:line="89" pos:column="15">sizeof<argument_list pos:line="89" pos:column="21">(<argument><expr><name pos:line="89" pos:column="22">char<pos:position pos:line="89" pos:column="26"/></name></expr></argument>)<pos:position pos:line="89" pos:column="27"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="89" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">apr_base64_encode<pos:position pos:line="90" pos:column="22"/></name><argument_list pos:line="90" pos:column="22">(<argument><expr><name pos:line="90" pos:column="23">base64<pos:position pos:line="90" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="31">(<pos:position pos:line="90" pos:column="32"/></operator><specifier pos:line="90" pos:column="32">const<pos:position pos:line="90" pos:column="37"/></specifier> <name pos:line="90" pos:column="38">char<pos:position pos:line="90" pos:column="42"/></name> <operator pos:line="90" pos:column="43">*<pos:position pos:line="90" pos:column="44"/></operator><operator pos:line="90" pos:column="44">)<pos:position pos:line="90" pos:column="45"/></operator> <name pos:line="90" pos:column="46">combined<pos:position pos:line="90" pos:column="54"/></name></expr></argument>,
            <argument><expr><name pos:line="91" pos:column="13">ivSize<pos:position pos:line="91" pos:column="19"/></name> <operator pos:line="91" pos:column="20">+<pos:position pos:line="91" pos:column="21"/></operator> <name pos:line="91" pos:column="22">encryptlen<pos:position pos:line="91" pos:column="32"/></name> <operator pos:line="91" pos:column="33">+<pos:position pos:line="91" pos:column="34"/></operator> <sizeof pos:line="91" pos:column="35">sizeof<argument_list pos:line="91" pos:column="41">(<argument><expr><name pos:line="91" pos:column="42">apr_uuid_t<pos:position pos:line="91" pos:column="52"/></name></expr></argument>)<pos:position pos:line="91" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="91" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="92" pos:column="5">*<pos:position pos:line="92" pos:column="6"/></operator><name pos:line="92" pos:column="6">out<pos:position pos:line="92" pos:column="9"/></name> <operator pos:line="92" pos:column="10">=<pos:position pos:line="92" pos:column="11"/></operator> <name pos:line="92" pos:column="12">base64<pos:position pos:line="92" pos:column="18"/></name></expr>;<pos:position pos:line="92" pos:column="19"/></expr_stmt>

    <return pos:line="94" pos:column="5">return <expr><name pos:line="94" pos:column="12">res<pos:position pos:line="94" pos:column="15"/></name></expr>;<pos:position pos:line="94" pos:column="16"/></return>

}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5725.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">copyright<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">!<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">use_html<pos:position pos:line="3" pos:column="18"/></name></expr>)<pos:position pos:line="3" pos:column="19"/></condition><then pos:line="3" pos:column="19"> <block pos:line="3" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="4" pos:column="9">printf<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><literal type="string" pos:line="4" pos:column="16">"This is ApacheBench, Version %s\n"<pos:position pos:line="4" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="53">AP_AB_BASEREVISION<pos:position pos:line="4" pos:column="71"/></name> <literal type="string" pos:line="4" pos:column="72">" &lt;$Revision: 1638069 $&gt;"<pos:position pos:line="4" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="99"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">printf<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="string" pos:line="5" pos:column="16">"Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\n"<pos:position pos:line="5" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="94"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">printf<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="string" pos:line="6" pos:column="16">"Licensed to The Apache Software Foundation, http://www.apache.org/\n"<pos:position pos:line="6" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="88"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">printf<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="string" pos:line="7" pos:column="16">"\n"<pos:position pos:line="7" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then>
    <else pos:line="9" pos:column="5">else <block pos:line="9" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">printf<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="string" pos:line="10" pos:column="16">"&lt;p&gt;\n"<pos:position pos:line="10" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">printf<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="string" pos:line="11" pos:column="16">" This is ApacheBench, Version %s &lt;i&gt;&amp;lt;%s&amp;gt;&lt;/i&gt;&lt;br&gt;\n"<pos:position pos:line="11" pos:column="100"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="76">AP_AB_BASEREVISION<pos:position pos:line="11" pos:column="94"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="96">"$Revision: 1638069 $"<pos:position pos:line="11" pos:column="118"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="120"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">printf<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="string" pos:line="12" pos:column="16">" Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/&lt;br&gt;\n"<pos:position pos:line="12" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="99"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">printf<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="string" pos:line="13" pos:column="16">" Licensed to The Apache Software Foundation, http://www.apache.org/&lt;br&gt;\n"<pos:position pos:line="13" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">printf<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="string" pos:line="14" pos:column="16">"&lt;/p&gt;\n&lt;p&gt;\n"<pos:position pos:line="14" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></else></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

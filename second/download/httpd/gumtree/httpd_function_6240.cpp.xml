<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6240.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier> <specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier></type> <name><name pos:line="1" pos:column="39">argv<pos:position pos:line="1" pos:column="43"/></name><index pos:line="1" pos:column="43">[]<pos:position pos:line="1" pos:column="45"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">c<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">showcompile<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="26">showdirectives<pos:position pos:line="4" pos:column="40"/></name> <init pos:line="4" pos:column="41">= <expr><literal type="number" pos:line="4" pos:column="43">0<pos:position pos:line="4" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">confname<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">SERVER_CONFIG_FILE<pos:position pos:line="5" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">def_server_root<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><name pos:line="6" pos:column="35">HTTPD_ROOT<pos:position pos:line="6" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">temp_error_log<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><name pos:line="7" pos:column="34">NULL<pos:position pos:line="7" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">error<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">process_rec<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">process<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_pool_t<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">pconf<pos:position pos:line="10" pos:column="22"/></name></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_pool_t<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">plog<pos:position pos:line="11" pos:column="21"/></name></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt> <comment type="block" pos:line="11" pos:column="23">/* Pool of log streams, reset _after_ each read of conf */</comment>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_pool_t<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">ptemp<pos:position pos:line="12" pos:column="22"/></name></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt> <comment type="block" pos:line="12" pos:column="24">/* Pool for temporary config stuff, reset often */</comment>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_pool_t<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">pcommands<pos:position pos:line="13" pos:column="26"/></name></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt> <comment type="block" pos:line="13" pos:column="28">/* Pool for -D, -C and -c switches */</comment>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_getopt_t<pos:position pos:line="14" pos:column="17"/></name> <modifier pos:line="14" pos:column="18">*<pos:position pos:line="14" pos:column="19"/></modifier></type><name pos:line="14" pos:column="19">opt<pos:position pos:line="14" pos:column="22"/></name></decl>;<pos:position pos:line="14" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_status_t<pos:position pos:line="15" pos:column="17"/></name></type> <name pos:line="15" pos:column="18">rv<pos:position pos:line="15" pos:column="20"/></name></decl>;<pos:position pos:line="15" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">module<pos:position pos:line="16" pos:column="11"/></name> <modifier pos:line="16" pos:column="12">*<pos:position pos:line="16" pos:column="13"/></modifier><modifier pos:line="16" pos:column="13">*<pos:position pos:line="16" pos:column="14"/></modifier></type><name pos:line="16" pos:column="14">mod<pos:position pos:line="16" pos:column="17"/></name></decl>;<pos:position pos:line="16" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="17" pos:column="5">const<pos:position pos:line="17" pos:column="10"/></specifier> <name pos:line="17" pos:column="11">char<pos:position pos:line="17" pos:column="15"/></name> <modifier pos:line="17" pos:column="16">*<pos:position pos:line="17" pos:column="17"/></modifier></type><name pos:line="17" pos:column="17">opt_arg<pos:position pos:line="17" pos:column="24"/></name></decl>;<pos:position pos:line="17" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">APR_OPTIONAL_FN_TYPE<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">ap_signal_server<pos:position pos:line="18" pos:column="42"/></name></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call> <operator pos:line="18" pos:column="44">*<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="45">signal_server<pos:position pos:line="18" pos:column="58"/></name></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">rc<pos:position pos:line="19" pos:column="11"/></name> <init pos:line="19" pos:column="12">= <expr><name pos:line="19" pos:column="14">OK<pos:position pos:line="19" pos:column="16"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">AP_MONCONTROL<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><literal type="number" pos:line="21" pos:column="19">0<pos:position pos:line="21" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt> <comment type="block" pos:line="21" pos:column="23">/* turn off profiling of startup */</comment>

    <expr_stmt><expr><name pos:line="23" pos:column="5">process<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">init_process<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><operator pos:line="23" pos:column="28">&amp;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="29">argc<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="35">&amp;<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="36">argv<pos:position pos:line="23" pos:column="40"/></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">ap_pglobal<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name><name pos:line="24" pos:column="18">process<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">pool<pos:position pos:line="24" pos:column="31"/></name></name></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">pconf<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <name><name pos:line="25" pos:column="13">process<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">pconf<pos:position pos:line="25" pos:column="27"/></name></name></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">ap_server_argv0<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <name><name pos:line="26" pos:column="23">process<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">short_name<pos:position pos:line="26" pos:column="42"/></name></name></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">ap_init_rng<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><name pos:line="27" pos:column="17">ap_pglobal<pos:position pos:line="27" pos:column="27"/></name></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="29" pos:column="5">/* Set up the OOM callback in the global pool, so all pools should
     * by default inherit it. */</comment>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">apr_pool_abort_set<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><name pos:line="31" pos:column="24">abort_on_oom<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="38">apr_pool_parent_get<pos:position pos:line="31" pos:column="57"/></name><argument_list pos:line="31" pos:column="57">(<argument><expr><name><name pos:line="31" pos:column="58">process<pos:position pos:line="31" pos:column="65"/></name><operator pos:line="31" pos:column="65">-&gt;<pos:position pos:line="31" pos:column="70"/></operator><name pos:line="31" pos:column="67">pool<pos:position pos:line="31" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="74"/></expr_stmt>

<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><name pos:line="33" pos:column="5">APR_CHARSET_EBCDIC<pos:position pos:line="33" pos:column="23"/></name></expr></cpp:if>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><call><name pos:line="34" pos:column="9">ap_init_ebcdic<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">ap_pglobal<pos:position pos:line="34" pos:column="34"/></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call> <operator pos:line="34" pos:column="36">!=<pos:position pos:line="34" pos:column="38"/></operator> <name pos:line="34" pos:column="39">APR_SUCCESS<pos:position pos:line="34" pos:column="50"/></name></expr>)<pos:position pos:line="34" pos:column="51"/></condition><then pos:line="34" pos:column="51"> <block pos:line="34" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">destroy_and_exit_process<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">process<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="43">1<pos:position pos:line="35" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">apr_pool_create<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><operator pos:line="39" pos:column="21">&amp;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="22">pcommands<pos:position pos:line="39" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="33">ap_pglobal<pos:position pos:line="39" pos:column="43"/></name></expr></argument>)<pos:position pos:line="39" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">apr_pool_tag<pos:position pos:line="40" pos:column="17"/></name><argument_list pos:line="40" pos:column="17">(<argument><expr><name pos:line="40" pos:column="18">pcommands<pos:position pos:line="40" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="29">"pcommands"<pos:position pos:line="40" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">ap_server_pre_read_config<pos:position pos:line="41" pos:column="30"/></name>  <operator pos:line="41" pos:column="32">=<pos:position pos:line="41" pos:column="33"/></operator> <call><name pos:line="41" pos:column="34">apr_array_make<pos:position pos:line="41" pos:column="48"/></name><argument_list pos:line="41" pos:column="48">(<argument><expr><name pos:line="41" pos:column="49">pcommands<pos:position pos:line="41" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="60">1<pos:position pos:line="41" pos:column="61"/></literal></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="63">sizeof<argument_list pos:line="41" pos:column="69">(<argument><expr><name pos:line="41" pos:column="70">char<pos:position pos:line="41" pos:column="74"/></name> <operator pos:line="41" pos:column="75">*<pos:position pos:line="41" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="41" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">ap_server_post_read_config<pos:position pos:line="42" pos:column="31"/></name> <operator pos:line="42" pos:column="32">=<pos:position pos:line="42" pos:column="33"/></operator> <call><name pos:line="42" pos:column="34">apr_array_make<pos:position pos:line="42" pos:column="48"/></name><argument_list pos:line="42" pos:column="48">(<argument><expr><name pos:line="42" pos:column="49">pcommands<pos:position pos:line="42" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="60">1<pos:position pos:line="42" pos:column="61"/></literal></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="63">sizeof<argument_list pos:line="42" pos:column="69">(<argument><expr><name pos:line="42" pos:column="70">char<pos:position pos:line="42" pos:column="74"/></name> <operator pos:line="42" pos:column="75">*<pos:position pos:line="42" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="42" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">ap_server_config_defines<pos:position pos:line="43" pos:column="29"/></name>   <operator pos:line="43" pos:column="32">=<pos:position pos:line="43" pos:column="33"/></operator> <call><name pos:line="43" pos:column="34">apr_array_make<pos:position pos:line="43" pos:column="48"/></name><argument_list pos:line="43" pos:column="48">(<argument><expr><name pos:line="43" pos:column="49">pcommands<pos:position pos:line="43" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="60">1<pos:position pos:line="43" pos:column="61"/></literal></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="63">sizeof<argument_list pos:line="43" pos:column="69">(<argument><expr><name pos:line="43" pos:column="70">char<pos:position pos:line="43" pos:column="74"/></name> <operator pos:line="43" pos:column="75">*<pos:position pos:line="43" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="43" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="79"/></expr_stmt>

    <expr_stmt><expr><name pos:line="45" pos:column="5">error<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">=<pos:position pos:line="45" pos:column="12"/></operator> <call><name pos:line="45" pos:column="13">ap_setup_prelinked_modules<pos:position pos:line="45" pos:column="39"/></name><argument_list pos:line="45" pos:column="39">(<argument><expr><name pos:line="45" pos:column="40">process<pos:position pos:line="45" pos:column="47"/></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="49"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">error<pos:position pos:line="46" pos:column="14"/></name></expr>)<pos:position pos:line="46" pos:column="15"/></condition><then pos:line="46" pos:column="15"> <block pos:line="46" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">ap_log_error<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">APLOG_MARK<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">APLOG_STARTUP<pos:position pos:line="47" pos:column="47"/></name><operator pos:line="47" pos:column="47">|<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="48">APLOG_EMERG<pos:position pos:line="47" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="61">0<pos:position pos:line="47" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="64">NULL<pos:position pos:line="47" pos:column="68"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="70">APLOGNO<pos:position pos:line="47" pos:column="77"/></name><argument_list pos:line="47" pos:column="77">(<argument><expr><literal type="number" pos:line="47" pos:column="78">00012<pos:position pos:line="47" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="84"/></argument_list></call>
                     <literal type="string" pos:line="48" pos:column="22">"%s: %s"<pos:position pos:line="48" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="32">ap_server_argv0<pos:position pos:line="48" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="49">error<pos:position pos:line="48" pos:column="54"/></name></expr></argument>)<pos:position pos:line="48" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">destroy_and_exit_process<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><name pos:line="49" pos:column="34">process<pos:position pos:line="49" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="43">1<pos:position pos:line="49" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="52" pos:column="5">ap_run_rewrite_args<pos:position pos:line="52" pos:column="24"/></name><argument_list pos:line="52" pos:column="24">(<argument><expr><name pos:line="52" pos:column="25">process<pos:position pos:line="52" pos:column="32"/></name></expr></argument>)<pos:position pos:line="52" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="54" pos:column="5">/* Maintain AP_SERVER_BASEARGS list in http_main.h to allow the MPM
     * to safely pass on our args from its rewrite_args() handler.
     */</comment>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">apr_getopt_init<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><operator pos:line="57" pos:column="21">&amp;<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="22">opt<pos:position pos:line="57" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="27">pcommands<pos:position pos:line="57" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="38">process<pos:position pos:line="57" pos:column="45"/></name><operator pos:line="57" pos:column="45">-&gt;<pos:position pos:line="57" pos:column="50"/></operator><name pos:line="57" pos:column="47">argc<pos:position pos:line="57" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="53">process<pos:position pos:line="57" pos:column="60"/></name><operator pos:line="57" pos:column="60">-&gt;<pos:position pos:line="57" pos:column="65"/></operator><name pos:line="57" pos:column="62">argv<pos:position pos:line="57" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="68"/></expr_stmt>

    <while pos:line="59" pos:column="5">while <condition pos:line="59" pos:column="11">(<expr><operator pos:line="59" pos:column="12">(<pos:position pos:line="59" pos:column="13"/></operator><name pos:line="59" pos:column="13">rv<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <call><name pos:line="59" pos:column="18">apr_getopt<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><name pos:line="59" pos:column="29">opt<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">AP_SERVER_BASEARGS<pos:position pos:line="59" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="54">&amp;<pos:position pos:line="59" pos:column="59"/></operator><name pos:line="59" pos:column="55">c<pos:position pos:line="59" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="58">&amp;<pos:position pos:line="59" pos:column="63"/></operator><name pos:line="59" pos:column="59">opt_arg<pos:position pos:line="59" pos:column="66"/></name></expr></argument>)<pos:position pos:line="59" pos:column="67"/></argument_list></call><operator pos:line="59" pos:column="67">)<pos:position pos:line="59" pos:column="68"/></operator>
            <operator pos:line="60" pos:column="13">==<pos:position pos:line="60" pos:column="15"/></operator> <name pos:line="60" pos:column="16">APR_SUCCESS<pos:position pos:line="60" pos:column="27"/></name></expr>)<pos:position pos:line="60" pos:column="28"/></condition> <block pos:line="60" pos:column="29">{
        <expr_stmt><expr><name pos:line="61" pos:column="9">char<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">*<pos:position pos:line="61" pos:column="15"/></operator><operator pos:line="61" pos:column="15">*<pos:position pos:line="61" pos:column="16"/></operator><operator pos:line="61" pos:column="16">new<pos:position pos:line="61" pos:column="19"/></operator></expr>;<pos:position pos:line="61" pos:column="20"/></expr_stmt>

        <switch pos:line="63" pos:column="9">switch <condition pos:line="63" pos:column="16">(<expr><name pos:line="63" pos:column="17">c<pos:position pos:line="63" pos:column="18"/></name></expr>)<pos:position pos:line="63" pos:column="19"/></condition> <block pos:line="63" pos:column="20">{
        <case pos:line="64" pos:column="9">case <expr><literal type="char" pos:line="64" pos:column="14">'c'<pos:position pos:line="64" pos:column="17"/></literal></expr>:<pos:position pos:line="64" pos:column="18"/></case>
            <expr_stmt><expr><operator pos:line="65" pos:column="13">new<pos:position pos:line="65" pos:column="16"/></operator> <operator pos:line="65" pos:column="17">=<pos:position pos:line="65" pos:column="18"/></operator> <operator pos:line="65" pos:column="19">(<pos:position pos:line="65" pos:column="20"/></operator><name pos:line="65" pos:column="20">char<pos:position pos:line="65" pos:column="24"/></name> <operator pos:line="65" pos:column="25">*<pos:position pos:line="65" pos:column="26"/></operator><operator pos:line="65" pos:column="26">*<pos:position pos:line="65" pos:column="27"/></operator><operator pos:line="65" pos:column="27">)<pos:position pos:line="65" pos:column="28"/></operator><call><name pos:line="65" pos:column="28">apr_array_push<pos:position pos:line="65" pos:column="42"/></name><argument_list pos:line="65" pos:column="42">(<argument><expr><name pos:line="65" pos:column="43">ap_server_post_read_config<pos:position pos:line="65" pos:column="69"/></name></expr></argument>)<pos:position pos:line="65" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="66" pos:column="13">*<pos:position pos:line="66" pos:column="14"/></operator><operator pos:line="66" pos:column="14">new<pos:position pos:line="66" pos:column="17"/></operator> <operator pos:line="66" pos:column="18">=<pos:position pos:line="66" pos:column="19"/></operator> <call><name pos:line="66" pos:column="20">apr_pstrdup<pos:position pos:line="66" pos:column="31"/></name><argument_list pos:line="66" pos:column="31">(<argument><expr><name pos:line="66" pos:column="32">pcommands<pos:position pos:line="66" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="43">opt_arg<pos:position pos:line="66" pos:column="50"/></name></expr></argument>)<pos:position pos:line="66" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="52"/></expr_stmt>
            <break pos:line="67" pos:column="13">break;<pos:position pos:line="67" pos:column="19"/></break>

        <case pos:line="69" pos:column="9">case <expr><literal type="char" pos:line="69" pos:column="14">'C'<pos:position pos:line="69" pos:column="17"/></literal></expr>:<pos:position pos:line="69" pos:column="18"/></case>
            <expr_stmt><expr><operator pos:line="70" pos:column="13">new<pos:position pos:line="70" pos:column="16"/></operator> <operator pos:line="70" pos:column="17">=<pos:position pos:line="70" pos:column="18"/></operator> <operator pos:line="70" pos:column="19">(<pos:position pos:line="70" pos:column="20"/></operator><name pos:line="70" pos:column="20">char<pos:position pos:line="70" pos:column="24"/></name> <operator pos:line="70" pos:column="25">*<pos:position pos:line="70" pos:column="26"/></operator><operator pos:line="70" pos:column="26">*<pos:position pos:line="70" pos:column="27"/></operator><operator pos:line="70" pos:column="27">)<pos:position pos:line="70" pos:column="28"/></operator><call><name pos:line="70" pos:column="28">apr_array_push<pos:position pos:line="70" pos:column="42"/></name><argument_list pos:line="70" pos:column="42">(<argument><expr><name pos:line="70" pos:column="43">ap_server_pre_read_config<pos:position pos:line="70" pos:column="68"/></name></expr></argument>)<pos:position pos:line="70" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="71" pos:column="13">*<pos:position pos:line="71" pos:column="14"/></operator><operator pos:line="71" pos:column="14">new<pos:position pos:line="71" pos:column="17"/></operator> <operator pos:line="71" pos:column="18">=<pos:position pos:line="71" pos:column="19"/></operator> <call><name pos:line="71" pos:column="20">apr_pstrdup<pos:position pos:line="71" pos:column="31"/></name><argument_list pos:line="71" pos:column="31">(<argument><expr><name pos:line="71" pos:column="32">pcommands<pos:position pos:line="71" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="43">opt_arg<pos:position pos:line="71" pos:column="50"/></name></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="52"/></expr_stmt>
            <break pos:line="72" pos:column="13">break;<pos:position pos:line="72" pos:column="19"/></break>

        <case pos:line="74" pos:column="9">case <expr><literal type="char" pos:line="74" pos:column="14">'d'<pos:position pos:line="74" pos:column="17"/></literal></expr>:<pos:position pos:line="74" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="75" pos:column="13">def_server_root<pos:position pos:line="75" pos:column="28"/></name> <operator pos:line="75" pos:column="29">=<pos:position pos:line="75" pos:column="30"/></operator> <name pos:line="75" pos:column="31">opt_arg<pos:position pos:line="75" pos:column="38"/></name></expr>;<pos:position pos:line="75" pos:column="39"/></expr_stmt>
            <break pos:line="76" pos:column="13">break;<pos:position pos:line="76" pos:column="19"/></break>

        <case pos:line="78" pos:column="9">case <expr><literal type="char" pos:line="78" pos:column="14">'D'<pos:position pos:line="78" pos:column="17"/></literal></expr>:<pos:position pos:line="78" pos:column="18"/></case>
            <expr_stmt><expr><operator pos:line="79" pos:column="13">new<pos:position pos:line="79" pos:column="16"/></operator> <operator pos:line="79" pos:column="17">=<pos:position pos:line="79" pos:column="18"/></operator> <operator pos:line="79" pos:column="19">(<pos:position pos:line="79" pos:column="20"/></operator><name pos:line="79" pos:column="20">char<pos:position pos:line="79" pos:column="24"/></name> <operator pos:line="79" pos:column="25">*<pos:position pos:line="79" pos:column="26"/></operator><operator pos:line="79" pos:column="26">*<pos:position pos:line="79" pos:column="27"/></operator><operator pos:line="79" pos:column="27">)<pos:position pos:line="79" pos:column="28"/></operator><call><name pos:line="79" pos:column="28">apr_array_push<pos:position pos:line="79" pos:column="42"/></name><argument_list pos:line="79" pos:column="42">(<argument><expr><name pos:line="79" pos:column="43">ap_server_config_defines<pos:position pos:line="79" pos:column="67"/></name></expr></argument>)<pos:position pos:line="79" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="80" pos:column="13">*<pos:position pos:line="80" pos:column="14"/></operator><operator pos:line="80" pos:column="14">new<pos:position pos:line="80" pos:column="17"/></operator> <operator pos:line="80" pos:column="18">=<pos:position pos:line="80" pos:column="19"/></operator> <call><name pos:line="80" pos:column="20">apr_pstrdup<pos:position pos:line="80" pos:column="31"/></name><argument_list pos:line="80" pos:column="31">(<argument><expr><name pos:line="80" pos:column="32">pcommands<pos:position pos:line="80" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="43">opt_arg<pos:position pos:line="80" pos:column="50"/></name></expr></argument>)<pos:position pos:line="80" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="52"/></expr_stmt>
            <comment type="block" pos:line="81" pos:column="13">/* Setting -D DUMP_VHOSTS should work like setting -S */</comment>
            <if pos:line="82" pos:column="13">if <condition pos:line="82" pos:column="16">(<expr><call><name pos:line="82" pos:column="17">strcmp<pos:position pos:line="82" pos:column="23"/></name><argument_list pos:line="82" pos:column="23">(<argument><expr><name pos:line="82" pos:column="24">opt_arg<pos:position pos:line="82" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="33">"DUMP_VHOSTS"<pos:position pos:line="82" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="47"/></argument_list></call> <operator pos:line="82" pos:column="48">==<pos:position pos:line="82" pos:column="50"/></operator> <literal type="number" pos:line="82" pos:column="51">0<pos:position pos:line="82" pos:column="52"/></literal></expr>)<pos:position pos:line="82" pos:column="53"/></condition><then pos:line="82" pos:column="53">
                <block type="pseudo"><expr_stmt><expr><name pos:line="83" pos:column="17">ap_run_mode<pos:position pos:line="83" pos:column="28"/></name> <operator pos:line="83" pos:column="29">=<pos:position pos:line="83" pos:column="30"/></operator> <name pos:line="83" pos:column="31">AP_SQ_RM_CONFIG_DUMP<pos:position pos:line="83" pos:column="51"/></name></expr>;<pos:position pos:line="83" pos:column="52"/></expr_stmt></block></then>
            <comment type="block" pos:line="84" pos:column="13">/* Setting -D DUMP_RUN_CFG should work like setting -S */</comment>
            <elseif pos:line="85" pos:column="13">else <if pos:line="85" pos:column="18">if <condition pos:line="85" pos:column="21">(<expr><call><name pos:line="85" pos:column="22">strcmp<pos:position pos:line="85" pos:column="28"/></name><argument_list pos:line="85" pos:column="28">(<argument><expr><name pos:line="85" pos:column="29">opt_arg<pos:position pos:line="85" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="38">"DUMP_RUN_CFG"<pos:position pos:line="85" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="53"/></argument_list></call> <operator pos:line="85" pos:column="54">==<pos:position pos:line="85" pos:column="56"/></operator> <literal type="number" pos:line="85" pos:column="57">0<pos:position pos:line="85" pos:column="58"/></literal></expr>)<pos:position pos:line="85" pos:column="59"/></condition><then pos:line="85" pos:column="59">
                <block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="17">ap_run_mode<pos:position pos:line="86" pos:column="28"/></name> <operator pos:line="86" pos:column="29">=<pos:position pos:line="86" pos:column="30"/></operator> <name pos:line="86" pos:column="31">AP_SQ_RM_CONFIG_DUMP<pos:position pos:line="86" pos:column="51"/></name></expr>;<pos:position pos:line="86" pos:column="52"/></expr_stmt></block></then></if></elseif>
            <comment type="block" pos:line="87" pos:column="13">/* Setting -D DUMP_MODULES is equivalent to setting -M */</comment>
            <elseif pos:line="88" pos:column="13">else <if pos:line="88" pos:column="18">if <condition pos:line="88" pos:column="21">(<expr><call><name pos:line="88" pos:column="22">strcmp<pos:position pos:line="88" pos:column="28"/></name><argument_list pos:line="88" pos:column="28">(<argument><expr><name pos:line="88" pos:column="29">opt_arg<pos:position pos:line="88" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="38">"DUMP_MODULES"<pos:position pos:line="88" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="53"/></argument_list></call> <operator pos:line="88" pos:column="54">==<pos:position pos:line="88" pos:column="56"/></operator> <literal type="number" pos:line="88" pos:column="57">0<pos:position pos:line="88" pos:column="58"/></literal></expr>)<pos:position pos:line="88" pos:column="59"/></condition><then pos:line="88" pos:column="59">
                <block type="pseudo"><expr_stmt><expr><name pos:line="89" pos:column="17">ap_run_mode<pos:position pos:line="89" pos:column="28"/></name> <operator pos:line="89" pos:column="29">=<pos:position pos:line="89" pos:column="30"/></operator> <name pos:line="89" pos:column="31">AP_SQ_RM_CONFIG_DUMP<pos:position pos:line="89" pos:column="51"/></name></expr>;<pos:position pos:line="89" pos:column="52"/></expr_stmt></block></then></if></elseif></if>
            <break pos:line="90" pos:column="13">break;<pos:position pos:line="90" pos:column="19"/></break>

        <case pos:line="92" pos:column="9">case <expr><literal type="char" pos:line="92" pos:column="14">'e'<pos:position pos:line="92" pos:column="17"/></literal></expr>:<pos:position pos:line="92" pos:column="18"/></case>
            <if pos:line="93" pos:column="13">if <condition pos:line="93" pos:column="16">(<expr><call><name pos:line="93" pos:column="17">ap_parse_log_level<pos:position pos:line="93" pos:column="35"/></name><argument_list pos:line="93" pos:column="35">(<argument><expr><name pos:line="93" pos:column="36">opt_arg<pos:position pos:line="93" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="45">&amp;<pos:position pos:line="93" pos:column="50"/></operator><name pos:line="93" pos:column="46">ap_default_loglevel<pos:position pos:line="93" pos:column="65"/></name></expr></argument>)<pos:position pos:line="93" pos:column="66"/></argument_list></call> <operator pos:line="93" pos:column="67">!=<pos:position pos:line="93" pos:column="69"/></operator> <name pos:line="93" pos:column="70">NULL<pos:position pos:line="93" pos:column="74"/></name></expr>)<pos:position pos:line="93" pos:column="75"/></condition><then pos:line="93" pos:column="75">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="17">usage<pos:position pos:line="94" pos:column="22"/></name><argument_list pos:line="94" pos:column="22">(<argument><expr><name pos:line="94" pos:column="23">process<pos:position pos:line="94" pos:column="30"/></name></expr></argument>)<pos:position pos:line="94" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="32"/></expr_stmt></block></then></if>
            <break pos:line="95" pos:column="13">break;<pos:position pos:line="95" pos:column="19"/></break>

        <case pos:line="97" pos:column="9">case <expr><literal type="char" pos:line="97" pos:column="14">'E'<pos:position pos:line="97" pos:column="17"/></literal></expr>:<pos:position pos:line="97" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="98" pos:column="13">temp_error_log<pos:position pos:line="98" pos:column="27"/></name> <operator pos:line="98" pos:column="28">=<pos:position pos:line="98" pos:column="29"/></operator> <call><name pos:line="98" pos:column="30">apr_pstrdup<pos:position pos:line="98" pos:column="41"/></name><argument_list pos:line="98" pos:column="41">(<argument><expr><name><name pos:line="98" pos:column="42">process<pos:position pos:line="98" pos:column="49"/></name><operator pos:line="98" pos:column="49">-&gt;<pos:position pos:line="98" pos:column="54"/></operator><name pos:line="98" pos:column="51">pool<pos:position pos:line="98" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="57">opt_arg<pos:position pos:line="98" pos:column="64"/></name></expr></argument>)<pos:position pos:line="98" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="66"/></expr_stmt>
            <break pos:line="99" pos:column="13">break;<pos:position pos:line="99" pos:column="19"/></break>

        <case pos:line="101" pos:column="9">case <expr><literal type="char" pos:line="101" pos:column="14">'X'<pos:position pos:line="101" pos:column="17"/></literal></expr>:<pos:position pos:line="101" pos:column="18"/></case>
            <expr_stmt><expr><operator pos:line="102" pos:column="13">new<pos:position pos:line="102" pos:column="16"/></operator> <operator pos:line="102" pos:column="17">=<pos:position pos:line="102" pos:column="18"/></operator> <operator pos:line="102" pos:column="19">(<pos:position pos:line="102" pos:column="20"/></operator><name pos:line="102" pos:column="20">char<pos:position pos:line="102" pos:column="24"/></name> <operator pos:line="102" pos:column="25">*<pos:position pos:line="102" pos:column="26"/></operator><operator pos:line="102" pos:column="26">*<pos:position pos:line="102" pos:column="27"/></operator><operator pos:line="102" pos:column="27">)<pos:position pos:line="102" pos:column="28"/></operator><call><name pos:line="102" pos:column="28">apr_array_push<pos:position pos:line="102" pos:column="42"/></name><argument_list pos:line="102" pos:column="42">(<argument><expr><name pos:line="102" pos:column="43">ap_server_config_defines<pos:position pos:line="102" pos:column="67"/></name></expr></argument>)<pos:position pos:line="102" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="103" pos:column="13">*<pos:position pos:line="103" pos:column="14"/></operator><operator pos:line="103" pos:column="14">new<pos:position pos:line="103" pos:column="17"/></operator> <operator pos:line="103" pos:column="18">=<pos:position pos:line="103" pos:column="19"/></operator> <literal type="string" pos:line="103" pos:column="20">"DEBUG"<pos:position pos:line="103" pos:column="27"/></literal></expr>;<pos:position pos:line="103" pos:column="28"/></expr_stmt>
            <break pos:line="104" pos:column="13">break;<pos:position pos:line="104" pos:column="19"/></break>

        <case pos:line="106" pos:column="9">case <expr><literal type="char" pos:line="106" pos:column="14">'f'<pos:position pos:line="106" pos:column="17"/></literal></expr>:<pos:position pos:line="106" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="107" pos:column="13">confname<pos:position pos:line="107" pos:column="21"/></name> <operator pos:line="107" pos:column="22">=<pos:position pos:line="107" pos:column="23"/></operator> <name pos:line="107" pos:column="24">opt_arg<pos:position pos:line="107" pos:column="31"/></name></expr>;<pos:position pos:line="107" pos:column="32"/></expr_stmt>
            <break pos:line="108" pos:column="13">break;<pos:position pos:line="108" pos:column="19"/></break>

        <case pos:line="110" pos:column="9">case <expr><literal type="char" pos:line="110" pos:column="14">'v'<pos:position pos:line="110" pos:column="17"/></literal></expr>:<pos:position pos:line="110" pos:column="18"/></case>
            <expr_stmt><expr><call><name pos:line="111" pos:column="13">printf<pos:position pos:line="111" pos:column="19"/></name><argument_list pos:line="111" pos:column="19">(<argument><expr><literal type="string" pos:line="111" pos:column="20">"Server version: %s\n"<pos:position pos:line="111" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="111" pos:column="44">ap_get_server_description<pos:position pos:line="111" pos:column="69"/></name><argument_list pos:line="111" pos:column="69">()<pos:position pos:line="111" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="112" pos:column="13">printf<pos:position pos:line="112" pos:column="19"/></name><argument_list pos:line="112" pos:column="19">(<argument><expr><literal type="string" pos:line="112" pos:column="20">"Server built:   %s\n"<pos:position pos:line="112" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="112" pos:column="44">ap_get_server_built<pos:position pos:line="112" pos:column="63"/></name><argument_list pos:line="112" pos:column="63">()<pos:position pos:line="112" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="113" pos:column="13">destroy_and_exit_process<pos:position pos:line="113" pos:column="37"/></name><argument_list pos:line="113" pos:column="37">(<argument><expr><name pos:line="113" pos:column="38">process<pos:position pos:line="113" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="47">0<pos:position pos:line="113" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="50"/></expr_stmt>

        <case pos:line="115" pos:column="9">case <expr><literal type="char" pos:line="115" pos:column="14">'l'<pos:position pos:line="115" pos:column="17"/></literal></expr>:<pos:position pos:line="115" pos:column="18"/></case>
            <expr_stmt><expr><call><name pos:line="116" pos:column="13">ap_show_modules<pos:position pos:line="116" pos:column="28"/></name><argument_list pos:line="116" pos:column="28">()<pos:position pos:line="116" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="117" pos:column="13">destroy_and_exit_process<pos:position pos:line="117" pos:column="37"/></name><argument_list pos:line="117" pos:column="37">(<argument><expr><name pos:line="117" pos:column="38">process<pos:position pos:line="117" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="47">0<pos:position pos:line="117" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="50"/></expr_stmt>

        <case pos:line="119" pos:column="9">case <expr><literal type="char" pos:line="119" pos:column="14">'L'<pos:position pos:line="119" pos:column="17"/></literal></expr>:<pos:position pos:line="119" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="120" pos:column="13">ap_run_mode<pos:position pos:line="120" pos:column="24"/></name> <operator pos:line="120" pos:column="25">=<pos:position pos:line="120" pos:column="26"/></operator> <name pos:line="120" pos:column="27">AP_SQ_RM_CONFIG_DUMP<pos:position pos:line="120" pos:column="47"/></name></expr>;<pos:position pos:line="120" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name pos:line="121" pos:column="13">showdirectives<pos:position pos:line="121" pos:column="27"/></name> <operator pos:line="121" pos:column="28">=<pos:position pos:line="121" pos:column="29"/></operator> <literal type="number" pos:line="121" pos:column="30">1<pos:position pos:line="121" pos:column="31"/></literal></expr>;<pos:position pos:line="121" pos:column="32"/></expr_stmt>
            <break pos:line="122" pos:column="13">break;<pos:position pos:line="122" pos:column="19"/></break>

        <case pos:line="124" pos:column="9">case <expr><literal type="char" pos:line="124" pos:column="14">'t'<pos:position pos:line="124" pos:column="17"/></literal></expr>:<pos:position pos:line="124" pos:column="18"/></case>
            <if pos:line="125" pos:column="13">if <condition pos:line="125" pos:column="16">(<expr><name pos:line="125" pos:column="17">ap_run_mode<pos:position pos:line="125" pos:column="28"/></name> <operator pos:line="125" pos:column="29">==<pos:position pos:line="125" pos:column="31"/></operator> <name pos:line="125" pos:column="32">AP_SQ_RM_UNKNOWN<pos:position pos:line="125" pos:column="48"/></name></expr>)<pos:position pos:line="125" pos:column="49"/></condition><then pos:line="125" pos:column="49">
                <block type="pseudo"><expr_stmt><expr><name pos:line="126" pos:column="17">ap_run_mode<pos:position pos:line="126" pos:column="28"/></name> <operator pos:line="126" pos:column="29">=<pos:position pos:line="126" pos:column="30"/></operator> <name pos:line="126" pos:column="31">AP_SQ_RM_CONFIG_TEST<pos:position pos:line="126" pos:column="51"/></name></expr>;<pos:position pos:line="126" pos:column="52"/></expr_stmt></block></then></if>
            <break pos:line="127" pos:column="13">break;<pos:position pos:line="127" pos:column="19"/></break>

       <case pos:line="129" pos:column="8">case <expr><literal type="char" pos:line="129" pos:column="13">'T'<pos:position pos:line="129" pos:column="16"/></literal></expr>:<pos:position pos:line="129" pos:column="17"/></case>
           <expr_stmt><expr><name pos:line="130" pos:column="12">ap_document_root_check<pos:position pos:line="130" pos:column="34"/></name> <operator pos:line="130" pos:column="35">=<pos:position pos:line="130" pos:column="36"/></operator> <literal type="number" pos:line="130" pos:column="37">0<pos:position pos:line="130" pos:column="38"/></literal></expr>;<pos:position pos:line="130" pos:column="39"/></expr_stmt>
           <break pos:line="131" pos:column="12">break;<pos:position pos:line="131" pos:column="18"/></break>

        <case pos:line="133" pos:column="9">case <expr><literal type="char" pos:line="133" pos:column="14">'S'<pos:position pos:line="133" pos:column="17"/></literal></expr>:<pos:position pos:line="133" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="134" pos:column="13">ap_run_mode<pos:position pos:line="134" pos:column="24"/></name> <operator pos:line="134" pos:column="25">=<pos:position pos:line="134" pos:column="26"/></operator> <name pos:line="134" pos:column="27">AP_SQ_RM_CONFIG_DUMP<pos:position pos:line="134" pos:column="47"/></name></expr>;<pos:position pos:line="134" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="135" pos:column="13">new<pos:position pos:line="135" pos:column="16"/></operator> <operator pos:line="135" pos:column="17">=<pos:position pos:line="135" pos:column="18"/></operator> <operator pos:line="135" pos:column="19">(<pos:position pos:line="135" pos:column="20"/></operator><name pos:line="135" pos:column="20">char<pos:position pos:line="135" pos:column="24"/></name> <operator pos:line="135" pos:column="25">*<pos:position pos:line="135" pos:column="26"/></operator><operator pos:line="135" pos:column="26">*<pos:position pos:line="135" pos:column="27"/></operator><operator pos:line="135" pos:column="27">)<pos:position pos:line="135" pos:column="28"/></operator><call><name pos:line="135" pos:column="28">apr_array_push<pos:position pos:line="135" pos:column="42"/></name><argument_list pos:line="135" pos:column="42">(<argument><expr><name pos:line="135" pos:column="43">ap_server_config_defines<pos:position pos:line="135" pos:column="67"/></name></expr></argument>)<pos:position pos:line="135" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="136" pos:column="13">*<pos:position pos:line="136" pos:column="14"/></operator><operator pos:line="136" pos:column="14">new<pos:position pos:line="136" pos:column="17"/></operator> <operator pos:line="136" pos:column="18">=<pos:position pos:line="136" pos:column="19"/></operator> <literal type="string" pos:line="136" pos:column="20">"DUMP_VHOSTS"<pos:position pos:line="136" pos:column="33"/></literal></expr>;<pos:position pos:line="136" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="137" pos:column="13">new<pos:position pos:line="137" pos:column="16"/></operator> <operator pos:line="137" pos:column="17">=<pos:position pos:line="137" pos:column="18"/></operator> <operator pos:line="137" pos:column="19">(<pos:position pos:line="137" pos:column="20"/></operator><name pos:line="137" pos:column="20">char<pos:position pos:line="137" pos:column="24"/></name> <operator pos:line="137" pos:column="25">*<pos:position pos:line="137" pos:column="26"/></operator><operator pos:line="137" pos:column="26">*<pos:position pos:line="137" pos:column="27"/></operator><operator pos:line="137" pos:column="27">)<pos:position pos:line="137" pos:column="28"/></operator><call><name pos:line="137" pos:column="28">apr_array_push<pos:position pos:line="137" pos:column="42"/></name><argument_list pos:line="137" pos:column="42">(<argument><expr><name pos:line="137" pos:column="43">ap_server_config_defines<pos:position pos:line="137" pos:column="67"/></name></expr></argument>)<pos:position pos:line="137" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="138" pos:column="13">*<pos:position pos:line="138" pos:column="14"/></operator><operator pos:line="138" pos:column="14">new<pos:position pos:line="138" pos:column="17"/></operator> <operator pos:line="138" pos:column="18">=<pos:position pos:line="138" pos:column="19"/></operator> <literal type="string" pos:line="138" pos:column="20">"DUMP_RUN_CFG"<pos:position pos:line="138" pos:column="34"/></literal></expr>;<pos:position pos:line="138" pos:column="35"/></expr_stmt>
            <break pos:line="139" pos:column="13">break;<pos:position pos:line="139" pos:column="19"/></break>

        <case pos:line="141" pos:column="9">case <expr><literal type="char" pos:line="141" pos:column="14">'M'<pos:position pos:line="141" pos:column="17"/></literal></expr>:<pos:position pos:line="141" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="142" pos:column="13">ap_run_mode<pos:position pos:line="142" pos:column="24"/></name> <operator pos:line="142" pos:column="25">=<pos:position pos:line="142" pos:column="26"/></operator> <name pos:line="142" pos:column="27">AP_SQ_RM_CONFIG_DUMP<pos:position pos:line="142" pos:column="47"/></name></expr>;<pos:position pos:line="142" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="143" pos:column="13">new<pos:position pos:line="143" pos:column="16"/></operator> <operator pos:line="143" pos:column="17">=<pos:position pos:line="143" pos:column="18"/></operator> <operator pos:line="143" pos:column="19">(<pos:position pos:line="143" pos:column="20"/></operator><name pos:line="143" pos:column="20">char<pos:position pos:line="143" pos:column="24"/></name> <operator pos:line="143" pos:column="25">*<pos:position pos:line="143" pos:column="26"/></operator><operator pos:line="143" pos:column="26">*<pos:position pos:line="143" pos:column="27"/></operator><operator pos:line="143" pos:column="27">)<pos:position pos:line="143" pos:column="28"/></operator><call><name pos:line="143" pos:column="28">apr_array_push<pos:position pos:line="143" pos:column="42"/></name><argument_list pos:line="143" pos:column="42">(<argument><expr><name pos:line="143" pos:column="43">ap_server_config_defines<pos:position pos:line="143" pos:column="67"/></name></expr></argument>)<pos:position pos:line="143" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="144" pos:column="13">*<pos:position pos:line="144" pos:column="14"/></operator><operator pos:line="144" pos:column="14">new<pos:position pos:line="144" pos:column="17"/></operator> <operator pos:line="144" pos:column="18">=<pos:position pos:line="144" pos:column="19"/></operator> <literal type="string" pos:line="144" pos:column="20">"DUMP_MODULES"<pos:position pos:line="144" pos:column="34"/></literal></expr>;<pos:position pos:line="144" pos:column="35"/></expr_stmt>
            <break pos:line="145" pos:column="13">break;<pos:position pos:line="145" pos:column="19"/></break>

        <case pos:line="147" pos:column="9">case <expr><literal type="char" pos:line="147" pos:column="14">'V'<pos:position pos:line="147" pos:column="17"/></literal></expr>:<pos:position pos:line="147" pos:column="18"/></case>
            <if pos:line="148" pos:column="13">if <condition pos:line="148" pos:column="16">(<expr><call><name pos:line="148" pos:column="17">strcmp<pos:position pos:line="148" pos:column="23"/></name><argument_list pos:line="148" pos:column="23">(<argument><expr><call><name pos:line="148" pos:column="24">ap_show_mpm<pos:position pos:line="148" pos:column="35"/></name><argument_list pos:line="148" pos:column="35">()<pos:position pos:line="148" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="39">""<pos:position pos:line="148" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="148" pos:column="43"/></condition><then pos:line="148" pos:column="43"> <block pos:line="148" pos:column="44">{ <comment type="block" pos:line="148" pos:column="46">/* MPM built-in? */</comment>
                <expr_stmt><expr><call><name pos:line="149" pos:column="17">show_compile_settings<pos:position pos:line="149" pos:column="38"/></name><argument_list pos:line="149" pos:column="38">()<pos:position pos:line="149" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="150" pos:column="17">destroy_and_exit_process<pos:position pos:line="150" pos:column="41"/></name><argument_list pos:line="150" pos:column="41">(<argument><expr><name pos:line="150" pos:column="42">process<pos:position pos:line="150" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="150" pos:column="51">0<pos:position pos:line="150" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="151" pos:column="14"/></block></then>
            <else pos:line="152" pos:column="13">else <block pos:line="152" pos:column="18">{
                <expr_stmt><expr><name pos:line="153" pos:column="17">showcompile<pos:position pos:line="153" pos:column="28"/></name> <operator pos:line="153" pos:column="29">=<pos:position pos:line="153" pos:column="30"/></operator> <literal type="number" pos:line="153" pos:column="31">1<pos:position pos:line="153" pos:column="32"/></literal></expr>;<pos:position pos:line="153" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name pos:line="154" pos:column="17">ap_run_mode<pos:position pos:line="154" pos:column="28"/></name> <operator pos:line="154" pos:column="29">=<pos:position pos:line="154" pos:column="30"/></operator> <name pos:line="154" pos:column="31">AP_SQ_RM_CONFIG_DUMP<pos:position pos:line="154" pos:column="51"/></name></expr>;<pos:position pos:line="154" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="155" pos:column="14"/></block></else></if>
            <break pos:line="156" pos:column="13">break;<pos:position pos:line="156" pos:column="19"/></break>

        <case pos:line="158" pos:column="9">case <expr><literal type="char" pos:line="158" pos:column="14">'h'<pos:position pos:line="158" pos:column="17"/></literal></expr>:<pos:position pos:line="158" pos:column="18"/></case>
        <case pos:line="159" pos:column="9">case <expr><literal type="char" pos:line="159" pos:column="14">'?'<pos:position pos:line="159" pos:column="17"/></literal></expr>:<pos:position pos:line="159" pos:column="18"/></case>
            <expr_stmt><expr><call><name pos:line="160" pos:column="13">usage<pos:position pos:line="160" pos:column="18"/></name><argument_list pos:line="160" pos:column="18">(<argument><expr><name pos:line="160" pos:column="19">process<pos:position pos:line="160" pos:column="26"/></name></expr></argument>)<pos:position pos:line="160" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="161" pos:column="10"/></block></switch>
    }<pos:position pos:line="162" pos:column="6"/></block></while>

    <if pos:line="164" pos:column="5">if <condition pos:line="164" pos:column="8">(<expr><name pos:line="164" pos:column="9">ap_run_mode<pos:position pos:line="164" pos:column="20"/></name> <operator pos:line="164" pos:column="21">==<pos:position pos:line="164" pos:column="23"/></operator> <name pos:line="164" pos:column="24">AP_SQ_RM_UNKNOWN<pos:position pos:line="164" pos:column="40"/></name></expr>)<pos:position pos:line="164" pos:column="41"/></condition><then pos:line="164" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><name pos:line="165" pos:column="9">ap_run_mode<pos:position pos:line="165" pos:column="20"/></name> <operator pos:line="165" pos:column="21">=<pos:position pos:line="165" pos:column="22"/></operator> <name pos:line="165" pos:column="23">AP_SQ_RM_NORMAL<pos:position pos:line="165" pos:column="38"/></name></expr>;<pos:position pos:line="165" pos:column="39"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="167" pos:column="5">/* bad cmdline option?  then we die */</comment>
    <if pos:line="168" pos:column="5">if <condition pos:line="168" pos:column="8">(<expr><name pos:line="168" pos:column="9">rv<pos:position pos:line="168" pos:column="11"/></name> <operator pos:line="168" pos:column="12">!=<pos:position pos:line="168" pos:column="14"/></operator> <name pos:line="168" pos:column="15">APR_EOF<pos:position pos:line="168" pos:column="22"/></name> <operator pos:line="168" pos:column="23">||<pos:position pos:line="168" pos:column="25"/></operator> <name><name pos:line="168" pos:column="26">opt<pos:position pos:line="168" pos:column="29"/></name><operator pos:line="168" pos:column="29">-&gt;<pos:position pos:line="168" pos:column="34"/></operator><name pos:line="168" pos:column="31">ind<pos:position pos:line="168" pos:column="34"/></name></name> <operator pos:line="168" pos:column="35">&lt;<pos:position pos:line="168" pos:column="39"/></operator> <name><name pos:line="168" pos:column="37">opt<pos:position pos:line="168" pos:column="40"/></name><operator pos:line="168" pos:column="40">-&gt;<pos:position pos:line="168" pos:column="45"/></operator><name pos:line="168" pos:column="42">argc<pos:position pos:line="168" pos:column="46"/></name></name></expr>)<pos:position pos:line="168" pos:column="47"/></condition><then pos:line="168" pos:column="47"> <block pos:line="168" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="169" pos:column="9">usage<pos:position pos:line="169" pos:column="14"/></name><argument_list pos:line="169" pos:column="14">(<argument><expr><name pos:line="169" pos:column="15">process<pos:position pos:line="169" pos:column="22"/></name></expr></argument>)<pos:position pos:line="169" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="170" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="172" pos:column="5">ap_main_state<pos:position pos:line="172" pos:column="18"/></name> <operator pos:line="172" pos:column="19">=<pos:position pos:line="172" pos:column="20"/></operator> <name pos:line="172" pos:column="21">AP_SQ_MS_CREATE_PRE_CONFIG<pos:position pos:line="172" pos:column="47"/></name></expr>;<pos:position pos:line="172" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="173" pos:column="5">apr_pool_create<pos:position pos:line="173" pos:column="20"/></name><argument_list pos:line="173" pos:column="20">(<argument><expr><operator pos:line="173" pos:column="21">&amp;<pos:position pos:line="173" pos:column="26"/></operator><name pos:line="173" pos:column="22">plog<pos:position pos:line="173" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="28">ap_pglobal<pos:position pos:line="173" pos:column="38"/></name></expr></argument>)<pos:position pos:line="173" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="174" pos:column="5">apr_pool_tag<pos:position pos:line="174" pos:column="17"/></name><argument_list pos:line="174" pos:column="17">(<argument><expr><name pos:line="174" pos:column="18">plog<pos:position pos:line="174" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="24">"plog"<pos:position pos:line="174" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="174" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="175" pos:column="5">apr_pool_create<pos:position pos:line="175" pos:column="20"/></name><argument_list pos:line="175" pos:column="20">(<argument><expr><operator pos:line="175" pos:column="21">&amp;<pos:position pos:line="175" pos:column="26"/></operator><name pos:line="175" pos:column="22">ptemp<pos:position pos:line="175" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="29">pconf<pos:position pos:line="175" pos:column="34"/></name></expr></argument>)<pos:position pos:line="175" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="176" pos:column="5">apr_pool_tag<pos:position pos:line="176" pos:column="17"/></name><argument_list pos:line="176" pos:column="17">(<argument><expr><name pos:line="176" pos:column="18">ptemp<pos:position pos:line="176" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="25">"ptemp"<pos:position pos:line="176" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="178" pos:column="5">/* Note that we preflight the config file once
     * before reading it _again_ in the main loop.
     * This allows things, log files configuration
     * for example, to settle down.
     */</comment>

    <expr_stmt><expr><name pos:line="184" pos:column="5">ap_server_root<pos:position pos:line="184" pos:column="19"/></name> <operator pos:line="184" pos:column="20">=<pos:position pos:line="184" pos:column="21"/></operator> <name pos:line="184" pos:column="22">def_server_root<pos:position pos:line="184" pos:column="37"/></name></expr>;<pos:position pos:line="184" pos:column="38"/></expr_stmt>
    <if pos:line="185" pos:column="5">if <condition pos:line="185" pos:column="8">(<expr><name pos:line="185" pos:column="9">temp_error_log<pos:position pos:line="185" pos:column="23"/></name></expr>)<pos:position pos:line="185" pos:column="24"/></condition><then pos:line="185" pos:column="24"> <block pos:line="185" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="186" pos:column="9">ap_replace_stderr_log<pos:position pos:line="186" pos:column="30"/></name><argument_list pos:line="186" pos:column="30">(<argument><expr><name><name pos:line="186" pos:column="31">process<pos:position pos:line="186" pos:column="38"/></name><operator pos:line="186" pos:column="38">-&gt;<pos:position pos:line="186" pos:column="43"/></operator><name pos:line="186" pos:column="40">pool<pos:position pos:line="186" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="46">temp_error_log<pos:position pos:line="186" pos:column="60"/></name></expr></argument>)<pos:position pos:line="186" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="187" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="188" pos:column="5">ap_server_conf<pos:position pos:line="188" pos:column="19"/></name> <operator pos:line="188" pos:column="20">=<pos:position pos:line="188" pos:column="21"/></operator> <call><name pos:line="188" pos:column="22">ap_read_config<pos:position pos:line="188" pos:column="36"/></name><argument_list pos:line="188" pos:column="36">(<argument><expr><name pos:line="188" pos:column="37">process<pos:position pos:line="188" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="46">ptemp<pos:position pos:line="188" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="53">confname<pos:position pos:line="188" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="188" pos:column="63">&amp;<pos:position pos:line="188" pos:column="68"/></operator><name pos:line="188" pos:column="64">ap_conftree<pos:position pos:line="188" pos:column="75"/></name></expr></argument>)<pos:position pos:line="188" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="77"/></expr_stmt>
    <if pos:line="189" pos:column="5">if <condition pos:line="189" pos:column="8">(<expr><operator pos:line="189" pos:column="9">!<pos:position pos:line="189" pos:column="10"/></operator><name pos:line="189" pos:column="10">ap_server_conf<pos:position pos:line="189" pos:column="24"/></name></expr>)<pos:position pos:line="189" pos:column="25"/></condition><then pos:line="189" pos:column="25"> <block pos:line="189" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="190" pos:column="9">destroy_and_exit_process<pos:position pos:line="190" pos:column="33"/></name><argument_list pos:line="190" pos:column="33">(<argument><expr><name pos:line="190" pos:column="34">process<pos:position pos:line="190" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="190" pos:column="43">1<pos:position pos:line="190" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="191" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="192" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="192" pos:column="30"/></name><argument_list pos:line="192" pos:column="30">(<argument><expr><name pos:line="192" pos:column="31">pconf<pos:position pos:line="192" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="192" pos:column="38">&amp;<pos:position pos:line="192" pos:column="43"/></operator><name pos:line="192" pos:column="39">ap_server_conf<pos:position pos:line="192" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="55">ap_pool_cleanup_set_null<pos:position pos:line="192" pos:column="79"/></name></expr></argument>,
                              <argument><expr><name pos:line="193" pos:column="31">apr_pool_cleanup_null<pos:position pos:line="193" pos:column="52"/></name></expr></argument>)<pos:position pos:line="193" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="54"/></expr_stmt>
    <comment type="block" pos:line="194" pos:column="5">/* sort hooks here to make sure pre_config hooks are sorted properly */</comment>
    <expr_stmt><expr><call><name pos:line="195" pos:column="5">apr_hook_sort_all<pos:position pos:line="195" pos:column="22"/></name><argument_list pos:line="195" pos:column="22">()<pos:position pos:line="195" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="25"/></expr_stmt>

    <if pos:line="197" pos:column="5">if <condition pos:line="197" pos:column="8">(<expr><call><name pos:line="197" pos:column="9">ap_run_pre_config<pos:position pos:line="197" pos:column="26"/></name><argument_list pos:line="197" pos:column="26">(<argument><expr><name pos:line="197" pos:column="27">pconf<pos:position pos:line="197" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="34">plog<pos:position pos:line="197" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="40">ptemp<pos:position pos:line="197" pos:column="45"/></name></expr></argument>)<pos:position pos:line="197" pos:column="46"/></argument_list></call> <operator pos:line="197" pos:column="47">!=<pos:position pos:line="197" pos:column="49"/></operator> <name pos:line="197" pos:column="50">OK<pos:position pos:line="197" pos:column="52"/></name></expr>)<pos:position pos:line="197" pos:column="53"/></condition><then pos:line="197" pos:column="53"> <block pos:line="197" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="198" pos:column="9">ap_log_error<pos:position pos:line="198" pos:column="21"/></name><argument_list pos:line="198" pos:column="21">(<argument><expr><name pos:line="198" pos:column="22">APLOG_MARK<pos:position pos:line="198" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="34">APLOG_STARTUP<pos:position pos:line="198" pos:column="47"/></name> <operator pos:line="198" pos:column="48">|<pos:position pos:line="198" pos:column="49"/></operator><name pos:line="198" pos:column="49">APLOG_ERR<pos:position pos:line="198" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="198" pos:column="60">0<pos:position pos:line="198" pos:column="61"/></literal></expr></argument>,
                     <argument><expr><name pos:line="199" pos:column="22">NULL<pos:position pos:line="199" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="199" pos:column="28">APLOGNO<pos:position pos:line="199" pos:column="35"/></name><argument_list pos:line="199" pos:column="35">(<argument><expr><literal type="number" pos:line="199" pos:column="36">00013<pos:position pos:line="199" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="42"/></argument_list></call> <literal type="string" pos:line="199" pos:column="43">"Pre-configuration failed"<pos:position pos:line="199" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="200" pos:column="9">destroy_and_exit_process<pos:position pos:line="200" pos:column="33"/></name><argument_list pos:line="200" pos:column="33">(<argument><expr><name pos:line="200" pos:column="34">process<pos:position pos:line="200" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="200" pos:column="43">1<pos:position pos:line="200" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="200" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="201" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="203" pos:column="5">rv<pos:position pos:line="203" pos:column="7"/></name> <operator pos:line="203" pos:column="8">=<pos:position pos:line="203" pos:column="9"/></operator> <call><name pos:line="203" pos:column="10">ap_process_config_tree<pos:position pos:line="203" pos:column="32"/></name><argument_list pos:line="203" pos:column="32">(<argument><expr><name pos:line="203" pos:column="33">ap_server_conf<pos:position pos:line="203" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="203" pos:column="49">ap_conftree<pos:position pos:line="203" pos:column="60"/></name></expr></argument>,
                                <argument><expr><name><name pos:line="204" pos:column="33">process<pos:position pos:line="204" pos:column="40"/></name><operator pos:line="204" pos:column="40">-&gt;<pos:position pos:line="204" pos:column="45"/></operator><name pos:line="204" pos:column="42">pconf<pos:position pos:line="204" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="49">ptemp<pos:position pos:line="204" pos:column="54"/></name></expr></argument>)<pos:position pos:line="204" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="56"/></expr_stmt>
    <if pos:line="205" pos:column="5">if <condition pos:line="205" pos:column="8">(<expr><name pos:line="205" pos:column="9">rv<pos:position pos:line="205" pos:column="11"/></name> <operator pos:line="205" pos:column="12">==<pos:position pos:line="205" pos:column="14"/></operator> <name pos:line="205" pos:column="15">OK<pos:position pos:line="205" pos:column="17"/></name></expr>)<pos:position pos:line="205" pos:column="18"/></condition><then pos:line="205" pos:column="18"> <block pos:line="205" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="206" pos:column="9">ap_fixup_virtual_hosts<pos:position pos:line="206" pos:column="31"/></name><argument_list pos:line="206" pos:column="31">(<argument><expr><name pos:line="206" pos:column="32">pconf<pos:position pos:line="206" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="39">ap_server_conf<pos:position pos:line="206" pos:column="53"/></name></expr></argument>)<pos:position pos:line="206" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="207" pos:column="9">ap_fini_vhost_config<pos:position pos:line="207" pos:column="29"/></name><argument_list pos:line="207" pos:column="29">(<argument><expr><name pos:line="207" pos:column="30">pconf<pos:position pos:line="207" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="37">ap_server_conf<pos:position pos:line="207" pos:column="51"/></name></expr></argument>)<pos:position pos:line="207" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="53"/></expr_stmt>
        <comment type="block" pos:line="208" pos:column="9">/*
         * Sort hooks again because ap_process_config_tree may have add modules
         * and hence hooks. This happens with mod_perl and modules written in
         * perl.
         */</comment>
        <expr_stmt><expr><call><name pos:line="213" pos:column="9">apr_hook_sort_all<pos:position pos:line="213" pos:column="26"/></name><argument_list pos:line="213" pos:column="26">()<pos:position pos:line="213" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="29"/></expr_stmt>

        <if pos:line="215" pos:column="9">if <condition pos:line="215" pos:column="12">(<expr><call><name pos:line="215" pos:column="13">ap_run_check_config<pos:position pos:line="215" pos:column="32"/></name><argument_list pos:line="215" pos:column="32">(<argument><expr><name pos:line="215" pos:column="33">pconf<pos:position pos:line="215" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="40">plog<pos:position pos:line="215" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="46">ptemp<pos:position pos:line="215" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="53">ap_server_conf<pos:position pos:line="215" pos:column="67"/></name></expr></argument>)<pos:position pos:line="215" pos:column="68"/></argument_list></call> <operator pos:line="215" pos:column="69">!=<pos:position pos:line="215" pos:column="71"/></operator> <name pos:line="215" pos:column="72">OK<pos:position pos:line="215" pos:column="74"/></name></expr>)<pos:position pos:line="215" pos:column="75"/></condition><then pos:line="215" pos:column="75"> <block pos:line="215" pos:column="76">{
            <expr_stmt><expr><call><name pos:line="216" pos:column="13">ap_log_error<pos:position pos:line="216" pos:column="25"/></name><argument_list pos:line="216" pos:column="25">(<argument><expr><name pos:line="216" pos:column="26">APLOG_MARK<pos:position pos:line="216" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="38">APLOG_STARTUP<pos:position pos:line="216" pos:column="51"/></name> <operator pos:line="216" pos:column="52">|<pos:position pos:line="216" pos:column="53"/></operator><name pos:line="216" pos:column="53">APLOG_ERR<pos:position pos:line="216" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="216" pos:column="64">0<pos:position pos:line="216" pos:column="65"/></literal></expr></argument>,
                         <argument><expr><name pos:line="217" pos:column="26">NULL<pos:position pos:line="217" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="217" pos:column="32">APLOGNO<pos:position pos:line="217" pos:column="39"/></name><argument_list pos:line="217" pos:column="39">(<argument><expr><literal type="number" pos:line="217" pos:column="40">00014<pos:position pos:line="217" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="46"/></argument_list></call> <literal type="string" pos:line="217" pos:column="47">"Configuration check failed"<pos:position pos:line="217" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="218" pos:column="13">destroy_and_exit_process<pos:position pos:line="218" pos:column="37"/></name><argument_list pos:line="218" pos:column="37">(<argument><expr><name pos:line="218" pos:column="38">process<pos:position pos:line="218" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="218" pos:column="47">1<pos:position pos:line="218" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="218" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="219" pos:column="10"/></block></then></if>

        <if pos:line="221" pos:column="9">if <condition pos:line="221" pos:column="12">(<expr><name pos:line="221" pos:column="13">ap_run_mode<pos:position pos:line="221" pos:column="24"/></name> <operator pos:line="221" pos:column="25">!=<pos:position pos:line="221" pos:column="27"/></operator> <name pos:line="221" pos:column="28">AP_SQ_RM_NORMAL<pos:position pos:line="221" pos:column="43"/></name></expr>)<pos:position pos:line="221" pos:column="44"/></condition><then pos:line="221" pos:column="44"> <block pos:line="221" pos:column="45">{
            <if pos:line="222" pos:column="13">if <condition pos:line="222" pos:column="16">(<expr><name pos:line="222" pos:column="17">showcompile<pos:position pos:line="222" pos:column="28"/></name></expr>)<pos:position pos:line="222" pos:column="29"/></condition><then pos:line="222" pos:column="29"> <block pos:line="222" pos:column="30">{ <comment type="block" pos:line="222" pos:column="32">/* deferred due to dynamically loaded MPM */</comment>
                <expr_stmt><expr><call><name pos:line="223" pos:column="17">show_compile_settings<pos:position pos:line="223" pos:column="38"/></name><argument_list pos:line="223" pos:column="38">()<pos:position pos:line="223" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="224" pos:column="14"/></block></then>
            <elseif pos:line="225" pos:column="13">else <if pos:line="225" pos:column="18">if <condition pos:line="225" pos:column="21">(<expr><name pos:line="225" pos:column="22">showdirectives<pos:position pos:line="225" pos:column="36"/></name></expr>)<pos:position pos:line="225" pos:column="37"/></condition><then pos:line="225" pos:column="37"> <block pos:line="225" pos:column="38">{ <comment type="block" pos:line="225" pos:column="40">/* deferred in case of DSOs */</comment>
                <expr_stmt><expr><call><name pos:line="226" pos:column="17">ap_show_directives<pos:position pos:line="226" pos:column="35"/></name><argument_list pos:line="226" pos:column="35">()<pos:position pos:line="226" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="227" pos:column="17">destroy_and_exit_process<pos:position pos:line="227" pos:column="41"/></name><argument_list pos:line="227" pos:column="41">(<argument><expr><name pos:line="227" pos:column="42">process<pos:position pos:line="227" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="227" pos:column="51">0<pos:position pos:line="227" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="227" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="228" pos:column="14"/></block></then></if></elseif>
            <else pos:line="229" pos:column="13">else <block pos:line="229" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="230" pos:column="17">ap_run_test_config<pos:position pos:line="230" pos:column="35"/></name><argument_list pos:line="230" pos:column="35">(<argument><expr><name pos:line="230" pos:column="36">pconf<pos:position pos:line="230" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="43">ap_server_conf<pos:position pos:line="230" pos:column="57"/></name></expr></argument>)<pos:position pos:line="230" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="59"/></expr_stmt>
                <if pos:line="231" pos:column="17">if <condition pos:line="231" pos:column="20">(<expr><name pos:line="231" pos:column="21">ap_run_mode<pos:position pos:line="231" pos:column="32"/></name> <operator pos:line="231" pos:column="33">==<pos:position pos:line="231" pos:column="35"/></operator> <name pos:line="231" pos:column="36">AP_SQ_RM_CONFIG_TEST<pos:position pos:line="231" pos:column="56"/></name></expr>)<pos:position pos:line="231" pos:column="57"/></condition><then pos:line="231" pos:column="57">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="232" pos:column="21">ap_log_error<pos:position pos:line="232" pos:column="33"/></name><argument_list pos:line="232" pos:column="33">(<argument><expr><name pos:line="232" pos:column="34">APLOG_MARK<pos:position pos:line="232" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="232" pos:column="46">APLOG_STARTUP<pos:position pos:line="232" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="232" pos:column="61">0<pos:position pos:line="232" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="232" pos:column="64">NULL<pos:position pos:line="232" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="232" pos:column="70">"Syntax OK"<pos:position pos:line="232" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="232" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="83"/></expr_stmt></block></then></if>
            }<pos:position pos:line="233" pos:column="14"/></block></else></if>
            <expr_stmt><expr><call><name pos:line="234" pos:column="13">destroy_and_exit_process<pos:position pos:line="234" pos:column="37"/></name><argument_list pos:line="234" pos:column="37">(<argument><expr><name pos:line="234" pos:column="38">process<pos:position pos:line="234" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="234" pos:column="47">0<pos:position pos:line="234" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="234" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="235" pos:column="10"/></block></then></if>
    }<pos:position pos:line="236" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="238" pos:column="5">/* If our config failed, deal with that here. */</comment>
    <if pos:line="239" pos:column="5">if <condition pos:line="239" pos:column="8">(<expr><name pos:line="239" pos:column="9">rv<pos:position pos:line="239" pos:column="11"/></name> <operator pos:line="239" pos:column="12">!=<pos:position pos:line="239" pos:column="14"/></operator> <name pos:line="239" pos:column="15">OK<pos:position pos:line="239" pos:column="17"/></name></expr>)<pos:position pos:line="239" pos:column="18"/></condition><then pos:line="239" pos:column="18"> <block pos:line="239" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="240" pos:column="9">destroy_and_exit_process<pos:position pos:line="240" pos:column="33"/></name><argument_list pos:line="240" pos:column="33">(<argument><expr><name pos:line="240" pos:column="34">process<pos:position pos:line="240" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="240" pos:column="43">1<pos:position pos:line="240" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="240" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="241" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="243" pos:column="5">signal_server<pos:position pos:line="243" pos:column="18"/></name> <operator pos:line="243" pos:column="19">=<pos:position pos:line="243" pos:column="20"/></operator> <call><name pos:line="243" pos:column="21">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="243" pos:column="45"/></name><argument_list pos:line="243" pos:column="45">(<argument><expr><name pos:line="243" pos:column="46">ap_signal_server<pos:position pos:line="243" pos:column="62"/></name></expr></argument>)<pos:position pos:line="243" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="64"/></expr_stmt>
    <if pos:line="244" pos:column="5">if <condition pos:line="244" pos:column="8">(<expr><name pos:line="244" pos:column="9">signal_server<pos:position pos:line="244" pos:column="22"/></name></expr>)<pos:position pos:line="244" pos:column="23"/></condition><then pos:line="244" pos:column="23"> <block pos:line="244" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="245" pos:column="9">int<pos:position pos:line="245" pos:column="12"/></name></type> <name pos:line="245" pos:column="13">exit_status<pos:position pos:line="245" pos:column="24"/></name></decl>;<pos:position pos:line="245" pos:column="25"/></decl_stmt>

        <if pos:line="247" pos:column="9">if <condition pos:line="247" pos:column="12">(<expr><call><name pos:line="247" pos:column="13">signal_server<pos:position pos:line="247" pos:column="26"/></name><argument_list pos:line="247" pos:column="26">(<argument><expr><operator pos:line="247" pos:column="27">&amp;<pos:position pos:line="247" pos:column="32"/></operator><name pos:line="247" pos:column="28">exit_status<pos:position pos:line="247" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="41">pconf<pos:position pos:line="247" pos:column="46"/></name></expr></argument>)<pos:position pos:line="247" pos:column="47"/></argument_list></call> <operator pos:line="247" pos:column="48">!=<pos:position pos:line="247" pos:column="50"/></operator> <literal type="number" pos:line="247" pos:column="51">0<pos:position pos:line="247" pos:column="52"/></literal></expr>)<pos:position pos:line="247" pos:column="53"/></condition><then pos:line="247" pos:column="53"> <block pos:line="247" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="248" pos:column="13">destroy_and_exit_process<pos:position pos:line="248" pos:column="37"/></name><argument_list pos:line="248" pos:column="37">(<argument><expr><name pos:line="248" pos:column="38">process<pos:position pos:line="248" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="47">exit_status<pos:position pos:line="248" pos:column="58"/></name></expr></argument>)<pos:position pos:line="248" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="249" pos:column="10"/></block></then></if>
    }<pos:position pos:line="250" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="252" pos:column="5">apr_pool_clear<pos:position pos:line="252" pos:column="19"/></name><argument_list pos:line="252" pos:column="19">(<argument><expr><name pos:line="252" pos:column="20">plog<pos:position pos:line="252" pos:column="24"/></name></expr></argument>)<pos:position pos:line="252" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="26"/></expr_stmt>

    <if pos:line="254" pos:column="5">if <condition pos:line="254" pos:column="8">( <expr><call><name pos:line="254" pos:column="10">ap_run_open_logs<pos:position pos:line="254" pos:column="26"/></name><argument_list pos:line="254" pos:column="26">(<argument><expr><name pos:line="254" pos:column="27">pconf<pos:position pos:line="254" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="254" pos:column="34">plog<pos:position pos:line="254" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="254" pos:column="40">ptemp<pos:position pos:line="254" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="254" pos:column="47">ap_server_conf<pos:position pos:line="254" pos:column="61"/></name></expr></argument>)<pos:position pos:line="254" pos:column="62"/></argument_list></call> <operator pos:line="254" pos:column="63">!=<pos:position pos:line="254" pos:column="65"/></operator> <name pos:line="254" pos:column="66">OK<pos:position pos:line="254" pos:column="68"/></name></expr>)<pos:position pos:line="254" pos:column="69"/></condition><then pos:line="254" pos:column="69"> <block pos:line="254" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="255" pos:column="9">ap_log_error<pos:position pos:line="255" pos:column="21"/></name><argument_list pos:line="255" pos:column="21">(<argument><expr><name pos:line="255" pos:column="22">APLOG_MARK<pos:position pos:line="255" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="34">APLOG_STARTUP<pos:position pos:line="255" pos:column="47"/></name> <operator pos:line="255" pos:column="48">|<pos:position pos:line="255" pos:column="49"/></operator><name pos:line="255" pos:column="49">APLOG_ERR<pos:position pos:line="255" pos:column="58"/></name></expr></argument>,
                     <argument><expr><literal type="number" pos:line="256" pos:column="22">0<pos:position pos:line="256" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="256" pos:column="25">NULL<pos:position pos:line="256" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="256" pos:column="31">APLOGNO<pos:position pos:line="256" pos:column="38"/></name><argument_list pos:line="256" pos:column="38">(<argument><expr><literal type="number" pos:line="256" pos:column="39">00015<pos:position pos:line="256" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="256" pos:column="45"/></argument_list></call> <literal type="string" pos:line="256" pos:column="46">"Unable to open logs"<pos:position pos:line="256" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="256" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="257" pos:column="9">destroy_and_exit_process<pos:position pos:line="257" pos:column="33"/></name><argument_list pos:line="257" pos:column="33">(<argument><expr><name pos:line="257" pos:column="34">process<pos:position pos:line="257" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="257" pos:column="43">1<pos:position pos:line="257" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="257" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="258" pos:column="6"/></block></then></if>

    <if pos:line="260" pos:column="5">if <condition pos:line="260" pos:column="8">( <expr><call><name pos:line="260" pos:column="10">ap_run_post_config<pos:position pos:line="260" pos:column="28"/></name><argument_list pos:line="260" pos:column="28">(<argument><expr><name pos:line="260" pos:column="29">pconf<pos:position pos:line="260" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="36">plog<pos:position pos:line="260" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="42">ptemp<pos:position pos:line="260" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="49">ap_server_conf<pos:position pos:line="260" pos:column="63"/></name></expr></argument>)<pos:position pos:line="260" pos:column="64"/></argument_list></call> <operator pos:line="260" pos:column="65">!=<pos:position pos:line="260" pos:column="67"/></operator> <name pos:line="260" pos:column="68">OK<pos:position pos:line="260" pos:column="70"/></name></expr>)<pos:position pos:line="260" pos:column="71"/></condition><then pos:line="260" pos:column="71"> <block pos:line="260" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="261" pos:column="9">ap_log_error<pos:position pos:line="261" pos:column="21"/></name><argument_list pos:line="261" pos:column="21">(<argument><expr><name pos:line="261" pos:column="22">APLOG_MARK<pos:position pos:line="261" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="34">APLOG_STARTUP<pos:position pos:line="261" pos:column="47"/></name> <operator pos:line="261" pos:column="48">|<pos:position pos:line="261" pos:column="49"/></operator><name pos:line="261" pos:column="49">APLOG_ERR<pos:position pos:line="261" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="261" pos:column="60">0<pos:position pos:line="261" pos:column="61"/></literal></expr></argument>,
                     <argument><expr><name pos:line="262" pos:column="22">NULL<pos:position pos:line="262" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="262" pos:column="28">APLOGNO<pos:position pos:line="262" pos:column="35"/></name><argument_list pos:line="262" pos:column="35">(<argument><expr><literal type="number" pos:line="262" pos:column="36">00016<pos:position pos:line="262" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="262" pos:column="42"/></argument_list></call> <literal type="string" pos:line="262" pos:column="43">"Configuration Failed"<pos:position pos:line="262" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="262" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="263" pos:column="9">destroy_and_exit_process<pos:position pos:line="263" pos:column="33"/></name><argument_list pos:line="263" pos:column="33">(<argument><expr><name pos:line="263" pos:column="34">process<pos:position pos:line="263" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="263" pos:column="43">1<pos:position pos:line="263" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="263" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="264" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="266" pos:column="5">apr_pool_destroy<pos:position pos:line="266" pos:column="21"/></name><argument_list pos:line="266" pos:column="21">(<argument><expr><name pos:line="266" pos:column="22">ptemp<pos:position pos:line="266" pos:column="27"/></name></expr></argument>)<pos:position pos:line="266" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="29"/></expr_stmt>

    <do pos:line="268" pos:column="5">do <block pos:line="268" pos:column="8">{
        <expr_stmt><expr><name pos:line="269" pos:column="9">ap_main_state<pos:position pos:line="269" pos:column="22"/></name> <operator pos:line="269" pos:column="23">=<pos:position pos:line="269" pos:column="24"/></operator> <name pos:line="269" pos:column="25">AP_SQ_MS_DESTROY_CONFIG<pos:position pos:line="269" pos:column="48"/></name></expr>;<pos:position pos:line="269" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="270" pos:column="9">apr_hook_deregister_all<pos:position pos:line="270" pos:column="32"/></name><argument_list pos:line="270" pos:column="32">()<pos:position pos:line="270" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="271" pos:column="9">apr_pool_clear<pos:position pos:line="271" pos:column="23"/></name><argument_list pos:line="271" pos:column="23">(<argument><expr><name pos:line="271" pos:column="24">pconf<pos:position pos:line="271" pos:column="29"/></name></expr></argument>)<pos:position pos:line="271" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="272" pos:column="9">ap_clear_auth_internal<pos:position pos:line="272" pos:column="31"/></name><argument_list pos:line="272" pos:column="31">()<pos:position pos:line="272" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="34"/></expr_stmt>

        <expr_stmt><expr><name pos:line="274" pos:column="9">ap_main_state<pos:position pos:line="274" pos:column="22"/></name> <operator pos:line="274" pos:column="23">=<pos:position pos:line="274" pos:column="24"/></operator> <name pos:line="274" pos:column="25">AP_SQ_MS_CREATE_CONFIG<pos:position pos:line="274" pos:column="47"/></name></expr>;<pos:position pos:line="274" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="275" pos:column="9">ap_config_generation<pos:position pos:line="275" pos:column="29"/></name><operator pos:line="275" pos:column="29">++<pos:position pos:line="275" pos:column="31"/></operator></expr>;<pos:position pos:line="275" pos:column="32"/></expr_stmt>
        <for pos:line="276" pos:column="9">for <control pos:line="276" pos:column="13">(<init><expr><name pos:line="276" pos:column="14">mod<pos:position pos:line="276" pos:column="17"/></name> <operator pos:line="276" pos:column="18">=<pos:position pos:line="276" pos:column="19"/></operator> <name pos:line="276" pos:column="20">ap_prelinked_modules<pos:position pos:line="276" pos:column="40"/></name></expr>;<pos:position pos:line="276" pos:column="41"/></init> <condition><expr><operator pos:line="276" pos:column="42">*<pos:position pos:line="276" pos:column="43"/></operator><name pos:line="276" pos:column="43">mod<pos:position pos:line="276" pos:column="46"/></name> <operator pos:line="276" pos:column="47">!=<pos:position pos:line="276" pos:column="49"/></operator> <name pos:line="276" pos:column="50">NULL<pos:position pos:line="276" pos:column="54"/></name></expr>;<pos:position pos:line="276" pos:column="55"/></condition> <incr><expr><name pos:line="276" pos:column="56">mod<pos:position pos:line="276" pos:column="59"/></name><operator pos:line="276" pos:column="59">++<pos:position pos:line="276" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="276" pos:column="62"/></control> <block pos:line="276" pos:column="63">{
            <expr_stmt><expr><call><name pos:line="277" pos:column="13">ap_register_hooks<pos:position pos:line="277" pos:column="30"/></name><argument_list pos:line="277" pos:column="30">(<argument><expr><operator pos:line="277" pos:column="31">*<pos:position pos:line="277" pos:column="32"/></operator><name pos:line="277" pos:column="32">mod<pos:position pos:line="277" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="277" pos:column="37">pconf<pos:position pos:line="277" pos:column="42"/></name></expr></argument>)<pos:position pos:line="277" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="278" pos:column="10"/></block></for>

        <comment type="block" pos:line="280" pos:column="9">/* This is a hack until we finish the code so that it only reads
         * the config file once and just operates on the tree already in
         * memory.  rbb
         */</comment>
        <expr_stmt><expr><name pos:line="284" pos:column="9">ap_conftree<pos:position pos:line="284" pos:column="20"/></name> <operator pos:line="284" pos:column="21">=<pos:position pos:line="284" pos:column="22"/></operator> <name pos:line="284" pos:column="23">NULL<pos:position pos:line="284" pos:column="27"/></name></expr>;<pos:position pos:line="284" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="285" pos:column="9">apr_pool_create<pos:position pos:line="285" pos:column="24"/></name><argument_list pos:line="285" pos:column="24">(<argument><expr><operator pos:line="285" pos:column="25">&amp;<pos:position pos:line="285" pos:column="30"/></operator><name pos:line="285" pos:column="26">ptemp<pos:position pos:line="285" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="33">pconf<pos:position pos:line="285" pos:column="38"/></name></expr></argument>)<pos:position pos:line="285" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="286" pos:column="9">apr_pool_tag<pos:position pos:line="286" pos:column="21"/></name><argument_list pos:line="286" pos:column="21">(<argument><expr><name pos:line="286" pos:column="22">ptemp<pos:position pos:line="286" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="286" pos:column="29">"ptemp"<pos:position pos:line="286" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="286" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="287" pos:column="9">ap_server_root<pos:position pos:line="287" pos:column="23"/></name> <operator pos:line="287" pos:column="24">=<pos:position pos:line="287" pos:column="25"/></operator> <name pos:line="287" pos:column="26">def_server_root<pos:position pos:line="287" pos:column="41"/></name></expr>;<pos:position pos:line="287" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="288" pos:column="9">ap_server_conf<pos:position pos:line="288" pos:column="23"/></name> <operator pos:line="288" pos:column="24">=<pos:position pos:line="288" pos:column="25"/></operator> <call><name pos:line="288" pos:column="26">ap_read_config<pos:position pos:line="288" pos:column="40"/></name><argument_list pos:line="288" pos:column="40">(<argument><expr><name pos:line="288" pos:column="41">process<pos:position pos:line="288" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="288" pos:column="50">ptemp<pos:position pos:line="288" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="288" pos:column="57">confname<pos:position pos:line="288" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="288" pos:column="67">&amp;<pos:position pos:line="288" pos:column="72"/></operator><name pos:line="288" pos:column="68">ap_conftree<pos:position pos:line="288" pos:column="79"/></name></expr></argument>)<pos:position pos:line="288" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="81"/></expr_stmt>
        <if pos:line="289" pos:column="9">if <condition pos:line="289" pos:column="12">(<expr><operator pos:line="289" pos:column="13">!<pos:position pos:line="289" pos:column="14"/></operator><name pos:line="289" pos:column="14">ap_server_conf<pos:position pos:line="289" pos:column="28"/></name></expr>)<pos:position pos:line="289" pos:column="29"/></condition><then pos:line="289" pos:column="29"> <block pos:line="289" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="290" pos:column="13">destroy_and_exit_process<pos:position pos:line="290" pos:column="37"/></name><argument_list pos:line="290" pos:column="37">(<argument><expr><name pos:line="290" pos:column="38">process<pos:position pos:line="290" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="290" pos:column="47">1<pos:position pos:line="290" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="290" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="291" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="292" pos:column="9">apr_pool_cleanup_register<pos:position pos:line="292" pos:column="34"/></name><argument_list pos:line="292" pos:column="34">(<argument><expr><name pos:line="292" pos:column="35">pconf<pos:position pos:line="292" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="292" pos:column="42">&amp;<pos:position pos:line="292" pos:column="47"/></operator><name pos:line="292" pos:column="43">ap_server_conf<pos:position pos:line="292" pos:column="57"/></name></expr></argument>,
                                  <argument><expr><name pos:line="293" pos:column="35">ap_pool_cleanup_set_null<pos:position pos:line="293" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="293" pos:column="61">apr_pool_cleanup_null<pos:position pos:line="293" pos:column="82"/></name></expr></argument>)<pos:position pos:line="293" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="84"/></expr_stmt>
        <comment type="block" pos:line="294" pos:column="9">/* sort hooks here to make sure pre_config hooks are sorted properly */</comment>
        <expr_stmt><expr><call><name pos:line="295" pos:column="9">apr_hook_sort_all<pos:position pos:line="295" pos:column="26"/></name><argument_list pos:line="295" pos:column="26">()<pos:position pos:line="295" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="29"/></expr_stmt>

        <if pos:line="297" pos:column="9">if <condition pos:line="297" pos:column="12">(<expr><call><name pos:line="297" pos:column="13">ap_run_pre_config<pos:position pos:line="297" pos:column="30"/></name><argument_list pos:line="297" pos:column="30">(<argument><expr><name pos:line="297" pos:column="31">pconf<pos:position pos:line="297" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="38">plog<pos:position pos:line="297" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="44">ptemp<pos:position pos:line="297" pos:column="49"/></name></expr></argument>)<pos:position pos:line="297" pos:column="50"/></argument_list></call> <operator pos:line="297" pos:column="51">!=<pos:position pos:line="297" pos:column="53"/></operator> <name pos:line="297" pos:column="54">OK<pos:position pos:line="297" pos:column="56"/></name></expr>)<pos:position pos:line="297" pos:column="57"/></condition><then pos:line="297" pos:column="57"> <block pos:line="297" pos:column="58">{
            <expr_stmt><expr><call><name pos:line="298" pos:column="13">ap_log_error<pos:position pos:line="298" pos:column="25"/></name><argument_list pos:line="298" pos:column="25">(<argument><expr><name pos:line="298" pos:column="26">APLOG_MARK<pos:position pos:line="298" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="298" pos:column="38">APLOG_EMERG<pos:position pos:line="298" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="298" pos:column="51">0<pos:position pos:line="298" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="298" pos:column="54">NULL<pos:position pos:line="298" pos:column="58"/></name></expr></argument>,
                         <argument><expr><call><name pos:line="299" pos:column="26">APLOGNO<pos:position pos:line="299" pos:column="33"/></name><argument_list pos:line="299" pos:column="33">(<argument><expr><literal type="number" pos:line="299" pos:column="34">00017<pos:position pos:line="299" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="299" pos:column="40"/></argument_list></call> <literal type="string" pos:line="299" pos:column="41">"Pre-configuration failed, exiting"<pos:position pos:line="299" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="299" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="300" pos:column="13">destroy_and_exit_process<pos:position pos:line="300" pos:column="37"/></name><argument_list pos:line="300" pos:column="37">(<argument><expr><name pos:line="300" pos:column="38">process<pos:position pos:line="300" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="300" pos:column="47">1<pos:position pos:line="300" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="300" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="301" pos:column="10"/></block></then></if>

        <if pos:line="303" pos:column="9">if <condition pos:line="303" pos:column="12">(<expr><call><name pos:line="303" pos:column="13">ap_process_config_tree<pos:position pos:line="303" pos:column="35"/></name><argument_list pos:line="303" pos:column="35">(<argument><expr><name pos:line="303" pos:column="36">ap_server_conf<pos:position pos:line="303" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="303" pos:column="52">ap_conftree<pos:position pos:line="303" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="303" pos:column="65">process<pos:position pos:line="303" pos:column="72"/></name><operator pos:line="303" pos:column="72">-&gt;<pos:position pos:line="303" pos:column="77"/></operator><name pos:line="303" pos:column="74">pconf<pos:position pos:line="303" pos:column="79"/></name></name></expr></argument>,
                                   <argument><expr><name pos:line="304" pos:column="36">ptemp<pos:position pos:line="304" pos:column="41"/></name></expr></argument>)<pos:position pos:line="304" pos:column="42"/></argument_list></call> <operator pos:line="304" pos:column="43">!=<pos:position pos:line="304" pos:column="45"/></operator> <name pos:line="304" pos:column="46">OK<pos:position pos:line="304" pos:column="48"/></name></expr>)<pos:position pos:line="304" pos:column="49"/></condition><then pos:line="304" pos:column="49"> <block pos:line="304" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="305" pos:column="13">destroy_and_exit_process<pos:position pos:line="305" pos:column="37"/></name><argument_list pos:line="305" pos:column="37">(<argument><expr><name pos:line="305" pos:column="38">process<pos:position pos:line="305" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="305" pos:column="47">1<pos:position pos:line="305" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="305" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="306" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="307" pos:column="9">ap_fixup_virtual_hosts<pos:position pos:line="307" pos:column="31"/></name><argument_list pos:line="307" pos:column="31">(<argument><expr><name pos:line="307" pos:column="32">pconf<pos:position pos:line="307" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="307" pos:column="39">ap_server_conf<pos:position pos:line="307" pos:column="53"/></name></expr></argument>)<pos:position pos:line="307" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="308" pos:column="9">ap_fini_vhost_config<pos:position pos:line="308" pos:column="29"/></name><argument_list pos:line="308" pos:column="29">(<argument><expr><name pos:line="308" pos:column="30">pconf<pos:position pos:line="308" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="308" pos:column="37">ap_server_conf<pos:position pos:line="308" pos:column="51"/></name></expr></argument>)<pos:position pos:line="308" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="53"/></expr_stmt>
        <comment type="block" pos:line="309" pos:column="9">/*
         * Sort hooks again because ap_process_config_tree may have add modules
         * and hence hooks. This happens with mod_perl and modules written in
         * perl.
         */</comment>
        <expr_stmt><expr><call><name pos:line="314" pos:column="9">apr_hook_sort_all<pos:position pos:line="314" pos:column="26"/></name><argument_list pos:line="314" pos:column="26">()<pos:position pos:line="314" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="29"/></expr_stmt>

        <if pos:line="316" pos:column="9">if <condition pos:line="316" pos:column="12">(<expr><call><name pos:line="316" pos:column="13">ap_run_check_config<pos:position pos:line="316" pos:column="32"/></name><argument_list pos:line="316" pos:column="32">(<argument><expr><name pos:line="316" pos:column="33">pconf<pos:position pos:line="316" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="40">plog<pos:position pos:line="316" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="46">ptemp<pos:position pos:line="316" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="53">ap_server_conf<pos:position pos:line="316" pos:column="67"/></name></expr></argument>)<pos:position pos:line="316" pos:column="68"/></argument_list></call> <operator pos:line="316" pos:column="69">!=<pos:position pos:line="316" pos:column="71"/></operator> <name pos:line="316" pos:column="72">OK<pos:position pos:line="316" pos:column="74"/></name></expr>)<pos:position pos:line="316" pos:column="75"/></condition><then pos:line="316" pos:column="75"> <block pos:line="316" pos:column="76">{
            <expr_stmt><expr><call><name pos:line="317" pos:column="13">ap_log_error<pos:position pos:line="317" pos:column="25"/></name><argument_list pos:line="317" pos:column="25">(<argument><expr><name pos:line="317" pos:column="26">APLOG_MARK<pos:position pos:line="317" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="317" pos:column="38">APLOG_EMERG<pos:position pos:line="317" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="317" pos:column="51">0<pos:position pos:line="317" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="317" pos:column="54">NULL<pos:position pos:line="317" pos:column="58"/></name></expr></argument>,
                         <argument><expr><call><name pos:line="318" pos:column="26">APLOGNO<pos:position pos:line="318" pos:column="33"/></name><argument_list pos:line="318" pos:column="33">(<argument><expr><literal type="number" pos:line="318" pos:column="34">00018<pos:position pos:line="318" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="318" pos:column="40"/></argument_list></call> <literal type="string" pos:line="318" pos:column="41">"Configuration check failed, exiting"<pos:position pos:line="318" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="318" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="318" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="319" pos:column="13">destroy_and_exit_process<pos:position pos:line="319" pos:column="37"/></name><argument_list pos:line="319" pos:column="37">(<argument><expr><name pos:line="319" pos:column="38">process<pos:position pos:line="319" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="319" pos:column="47">1<pos:position pos:line="319" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="319" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="319" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="320" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="322" pos:column="9">apr_pool_clear<pos:position pos:line="322" pos:column="23"/></name><argument_list pos:line="322" pos:column="23">(<argument><expr><name pos:line="322" pos:column="24">plog<pos:position pos:line="322" pos:column="28"/></name></expr></argument>)<pos:position pos:line="322" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="30"/></expr_stmt>
        <if pos:line="323" pos:column="9">if <condition pos:line="323" pos:column="12">(<expr><call><name pos:line="323" pos:column="13">ap_run_open_logs<pos:position pos:line="323" pos:column="29"/></name><argument_list pos:line="323" pos:column="29">(<argument><expr><name pos:line="323" pos:column="30">pconf<pos:position pos:line="323" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="323" pos:column="37">plog<pos:position pos:line="323" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="323" pos:column="43">ptemp<pos:position pos:line="323" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="323" pos:column="50">ap_server_conf<pos:position pos:line="323" pos:column="64"/></name></expr></argument>)<pos:position pos:line="323" pos:column="65"/></argument_list></call> <operator pos:line="323" pos:column="66">!=<pos:position pos:line="323" pos:column="68"/></operator> <name pos:line="323" pos:column="69">OK<pos:position pos:line="323" pos:column="71"/></name></expr>)<pos:position pos:line="323" pos:column="72"/></condition><then pos:line="323" pos:column="72"> <block pos:line="323" pos:column="73">{
            <expr_stmt><expr><call><name pos:line="324" pos:column="13">ap_log_error<pos:position pos:line="324" pos:column="25"/></name><argument_list pos:line="324" pos:column="25">(<argument><expr><name pos:line="324" pos:column="26">APLOG_MARK<pos:position pos:line="324" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="324" pos:column="38">APLOG_EMERG<pos:position pos:line="324" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="324" pos:column="51">0<pos:position pos:line="324" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="324" pos:column="54">NULL<pos:position pos:line="324" pos:column="58"/></name></expr></argument>,
                         <argument><expr><call><name pos:line="325" pos:column="26">APLOGNO<pos:position pos:line="325" pos:column="33"/></name><argument_list pos:line="325" pos:column="33">(<argument><expr><literal type="number" pos:line="325" pos:column="34">00019<pos:position pos:line="325" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="325" pos:column="40"/></argument_list></call> <literal type="string" pos:line="325" pos:column="41">"Unable to open logs, exiting"<pos:position pos:line="325" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="325" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="325" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="326" pos:column="13">destroy_and_exit_process<pos:position pos:line="326" pos:column="37"/></name><argument_list pos:line="326" pos:column="37">(<argument><expr><name pos:line="326" pos:column="38">process<pos:position pos:line="326" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="326" pos:column="47">1<pos:position pos:line="326" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="326" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="327" pos:column="10"/></block></then></if>

        <if pos:line="329" pos:column="9">if <condition pos:line="329" pos:column="12">(<expr><call><name pos:line="329" pos:column="13">ap_run_post_config<pos:position pos:line="329" pos:column="31"/></name><argument_list pos:line="329" pos:column="31">(<argument><expr><name pos:line="329" pos:column="32">pconf<pos:position pos:line="329" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="329" pos:column="39">plog<pos:position pos:line="329" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="329" pos:column="45">ptemp<pos:position pos:line="329" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="329" pos:column="52">ap_server_conf<pos:position pos:line="329" pos:column="66"/></name></expr></argument>)<pos:position pos:line="329" pos:column="67"/></argument_list></call> <operator pos:line="329" pos:column="68">!=<pos:position pos:line="329" pos:column="70"/></operator> <name pos:line="329" pos:column="71">OK<pos:position pos:line="329" pos:column="73"/></name></expr>)<pos:position pos:line="329" pos:column="74"/></condition><then pos:line="329" pos:column="74"> <block pos:line="329" pos:column="75">{
            <expr_stmt><expr><call><name pos:line="330" pos:column="13">ap_log_error<pos:position pos:line="330" pos:column="25"/></name><argument_list pos:line="330" pos:column="25">(<argument><expr><name pos:line="330" pos:column="26">APLOG_MARK<pos:position pos:line="330" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="330" pos:column="38">APLOG_EMERG<pos:position pos:line="330" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="330" pos:column="51">0<pos:position pos:line="330" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="330" pos:column="54">NULL<pos:position pos:line="330" pos:column="58"/></name></expr></argument>,
                         <argument><expr><call><name pos:line="331" pos:column="26">APLOGNO<pos:position pos:line="331" pos:column="33"/></name><argument_list pos:line="331" pos:column="33">(<argument><expr><literal type="number" pos:line="331" pos:column="34">00020<pos:position pos:line="331" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="331" pos:column="40"/></argument_list></call> <literal type="string" pos:line="331" pos:column="41">"Configuration Failed, exiting"<pos:position pos:line="331" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="331" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="332" pos:column="13">destroy_and_exit_process<pos:position pos:line="332" pos:column="37"/></name><argument_list pos:line="332" pos:column="37">(<argument><expr><name pos:line="332" pos:column="38">process<pos:position pos:line="332" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="332" pos:column="47">1<pos:position pos:line="332" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="332" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="333" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="335" pos:column="9">apr_pool_destroy<pos:position pos:line="335" pos:column="25"/></name><argument_list pos:line="335" pos:column="25">(<argument><expr><name pos:line="335" pos:column="26">ptemp<pos:position pos:line="335" pos:column="31"/></name></expr></argument>)<pos:position pos:line="335" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="336" pos:column="9">apr_pool_lock<pos:position pos:line="336" pos:column="22"/></name><argument_list pos:line="336" pos:column="22">(<argument><expr><name pos:line="336" pos:column="23">pconf<pos:position pos:line="336" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="336" pos:column="30">1<pos:position pos:line="336" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="336" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="336" pos:column="33"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="338" pos:column="9">ap_run_optional_fn_retrieve<pos:position pos:line="338" pos:column="36"/></name><argument_list pos:line="338" pos:column="36">()<pos:position pos:line="338" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="338" pos:column="39"/></expr_stmt>

        <expr_stmt><expr><name pos:line="340" pos:column="9">ap_main_state<pos:position pos:line="340" pos:column="22"/></name> <operator pos:line="340" pos:column="23">=<pos:position pos:line="340" pos:column="24"/></operator> <name pos:line="340" pos:column="25">AP_SQ_MS_RUN_MPM<pos:position pos:line="340" pos:column="41"/></name></expr>;<pos:position pos:line="340" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="341" pos:column="9">rc<pos:position pos:line="341" pos:column="11"/></name> <operator pos:line="341" pos:column="12">=<pos:position pos:line="341" pos:column="13"/></operator> <call><name pos:line="341" pos:column="14">ap_run_mpm<pos:position pos:line="341" pos:column="24"/></name><argument_list pos:line="341" pos:column="24">(<argument><expr><name pos:line="341" pos:column="25">pconf<pos:position pos:line="341" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="32">plog<pos:position pos:line="341" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="38">ap_server_conf<pos:position pos:line="341" pos:column="52"/></name></expr></argument>)<pos:position pos:line="341" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="54"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="343" pos:column="9">apr_pool_lock<pos:position pos:line="343" pos:column="22"/></name><argument_list pos:line="343" pos:column="22">(<argument><expr><name pos:line="343" pos:column="23">pconf<pos:position pos:line="343" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="343" pos:column="30">0<pos:position pos:line="343" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="343" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="33"/></expr_stmt>

    }<pos:position pos:line="345" pos:column="6"/></block> while <condition pos:line="345" pos:column="13">(<expr><name pos:line="345" pos:column="14">rc<pos:position pos:line="345" pos:column="16"/></name> <operator pos:line="345" pos:column="17">==<pos:position pos:line="345" pos:column="19"/></operator> <name pos:line="345" pos:column="20">OK<pos:position pos:line="345" pos:column="22"/></name></expr>)<pos:position pos:line="345" pos:column="23"/></condition>;<pos:position pos:line="345" pos:column="24"/></do>

    <if pos:line="347" pos:column="5">if <condition pos:line="347" pos:column="8">(<expr><name pos:line="347" pos:column="9">rc<pos:position pos:line="347" pos:column="11"/></name> <operator pos:line="347" pos:column="12">==<pos:position pos:line="347" pos:column="14"/></operator> <name pos:line="347" pos:column="15">DONE<pos:position pos:line="347" pos:column="19"/></name></expr>)<pos:position pos:line="347" pos:column="20"/></condition><then pos:line="347" pos:column="20"> <block pos:line="347" pos:column="21">{
        <expr_stmt><expr><name pos:line="348" pos:column="9">rc<pos:position pos:line="348" pos:column="11"/></name> <operator pos:line="348" pos:column="12">=<pos:position pos:line="348" pos:column="13"/></operator> <name pos:line="348" pos:column="14">OK<pos:position pos:line="348" pos:column="16"/></name></expr>;<pos:position pos:line="348" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="349" pos:column="6"/></block></then>
    <elseif pos:line="350" pos:column="5">else <if pos:line="350" pos:column="10">if <condition pos:line="350" pos:column="13">(<expr><name pos:line="350" pos:column="14">rc<pos:position pos:line="350" pos:column="16"/></name> <operator pos:line="350" pos:column="17">!=<pos:position pos:line="350" pos:column="19"/></operator> <name pos:line="350" pos:column="20">OK<pos:position pos:line="350" pos:column="22"/></name></expr>)<pos:position pos:line="350" pos:column="23"/></condition><then pos:line="350" pos:column="23"> <block pos:line="350" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="351" pos:column="9">ap_log_error<pos:position pos:line="351" pos:column="21"/></name><argument_list pos:line="351" pos:column="21">(<argument><expr><name pos:line="351" pos:column="22">APLOG_MARK<pos:position pos:line="351" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="351" pos:column="34">APLOG_EMERG<pos:position pos:line="351" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="351" pos:column="47">0<pos:position pos:line="351" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="351" pos:column="50">NULL<pos:position pos:line="351" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="351" pos:column="56">APLOGNO<pos:position pos:line="351" pos:column="63"/></name><argument_list pos:line="351" pos:column="63">(<argument><expr><literal type="number" pos:line="351" pos:column="64">02818<pos:position pos:line="351" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="351" pos:column="70"/></argument_list></call>
                     <literal type="string" pos:line="352" pos:column="22">"MPM run failed, exiting"<pos:position pos:line="352" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="352" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="352" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="353" pos:column="6"/></block></then></if></elseif></if>
    <expr_stmt><expr><call><name pos:line="354" pos:column="5">destroy_and_exit_process<pos:position pos:line="354" pos:column="29"/></name><argument_list pos:line="354" pos:column="29">(<argument><expr><name pos:line="354" pos:column="30">process<pos:position pos:line="354" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="354" pos:column="39">rc<pos:position pos:line="354" pos:column="41"/></name></expr></argument>)<pos:position pos:line="354" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="43"/></expr_stmt>

    <comment type="block" pos:line="356" pos:column="5">/* NOTREACHED */</comment>
    <return pos:line="357" pos:column="5">return <expr><operator pos:line="357" pos:column="12">!<pos:position pos:line="357" pos:column="13"/></operator><name pos:line="357" pos:column="13">OK<pos:position pos:line="357" pos:column="15"/></name></expr>;<pos:position pos:line="357" pos:column="16"/></return>
}<pos:position pos:line="358" pos:column="2"/></block></function></unit>

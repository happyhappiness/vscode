<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2475_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">normalizeLines<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">XML_Char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">s<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">XML_Char<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">p<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
  <for pos:line="5" pos:column="3">for <control pos:line="5" pos:column="7">(<init pos:line="5" pos:column="8">;<pos:position pos:line="5" pos:column="9"/></init><condition pos:line="5" pos:column="9">;<pos:position pos:line="5" pos:column="10"/></condition> <incr><expr><name pos:line="5" pos:column="11">s<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">++<pos:position pos:line="5" pos:column="14"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="15"/></control> <block pos:line="5" pos:column="16">{
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">s<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">==<pos:position pos:line="6" pos:column="14"/></operator> <call><name pos:line="6" pos:column="15">XML_T<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="char" pos:line="6" pos:column="21">'\0'<pos:position pos:line="6" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27">
      <block type="pseudo"><return pos:line="7" pos:column="7">return;<pos:position pos:line="7" pos:column="14"/></return></block></then></if>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">s<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">==<pos:position pos:line="8" pos:column="14"/></operator> <literal type="number" pos:line="8" pos:column="15">0xD<pos:position pos:line="8" pos:column="18"/></literal></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19">
      <block type="pseudo"><break pos:line="9" pos:column="7">break;<pos:position pos:line="9" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="10" pos:column="4"/></block></for>
  <expr_stmt><expr><name pos:line="11" pos:column="3">p<pos:position pos:line="11" pos:column="4"/></name> <operator pos:line="11" pos:column="5">=<pos:position pos:line="11" pos:column="6"/></operator> <name pos:line="11" pos:column="7">s<pos:position pos:line="11" pos:column="8"/></name></expr>;<pos:position pos:line="11" pos:column="9"/></expr_stmt>
  <do pos:line="12" pos:column="3">do <block pos:line="12" pos:column="6">{
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">s<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">==<pos:position pos:line="13" pos:column="14"/></operator> <literal type="number" pos:line="13" pos:column="15">0xD<pos:position pos:line="13" pos:column="18"/></literal></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19"> <block pos:line="13" pos:column="20">{
      <expr_stmt><expr><operator pos:line="14" pos:column="7">*<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">p<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">++<pos:position pos:line="14" pos:column="11"/></operator> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <literal type="number" pos:line="14" pos:column="14">0xA<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><operator pos:line="15" pos:column="11">*<pos:position pos:line="15" pos:column="12"/></operator><operator pos:line="15" pos:column="12">++<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">s<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <literal type="number" pos:line="15" pos:column="19">0xA<pos:position pos:line="15" pos:column="22"/></literal></expr>)<pos:position pos:line="15" pos:column="23"/></condition><then pos:line="15" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="9">s<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">++<pos:position pos:line="16" pos:column="12"/></operator></expr>;<pos:position pos:line="16" pos:column="13"/></expr_stmt></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></then>
    <else pos:line="18" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><operator pos:line="19" pos:column="7">*<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">p<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">++<pos:position pos:line="19" pos:column="11"/></operator> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <operator pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">s<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">++<pos:position pos:line="19" pos:column="18"/></operator></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt></block></else></if>
  }<pos:position pos:line="20" pos:column="4"/></block> while <condition pos:line="20" pos:column="11">(<expr><operator pos:line="20" pos:column="12">*<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">s<pos:position pos:line="20" pos:column="14"/></name></expr>)<pos:position pos:line="20" pos:column="15"/></condition>;<pos:position pos:line="20" pos:column="16"/></do>
  <expr_stmt><expr><operator pos:line="21" pos:column="3">*<pos:position pos:line="21" pos:column="4"/></operator><name pos:line="21" pos:column="4">p<pos:position pos:line="21" pos:column="5"/></name> <operator pos:line="21" pos:column="6">=<pos:position pos:line="21" pos:column="7"/></operator> <call><name pos:line="21" pos:column="8">XML_T<pos:position pos:line="21" pos:column="13"/></name><argument_list pos:line="21" pos:column="13">(<argument><expr><literal type="char" pos:line="21" pos:column="14">'\0'<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

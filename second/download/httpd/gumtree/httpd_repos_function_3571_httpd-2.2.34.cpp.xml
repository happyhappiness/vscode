<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3571_httpd-2.2.34.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">post_parse_fixup<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">command_t<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">cmd_data<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <switch pos:line="3" pos:column="5">switch <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">cmd_data<pos:position pos:line="3" pos:column="21"/></name><operator pos:line="3" pos:column="21">-&gt;<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="23">mode<pos:position pos:line="3" pos:column="27"/></name></name></expr>)<pos:position pos:line="3" pos:column="28"/></condition>
    <block pos:line="4" pos:column="5">{
    <case pos:line="5" pos:column="5">case <expr><name pos:line="5" pos:column="10">mCompile<pos:position pos:line="5" pos:column="18"/></name></expr>:<pos:position pos:line="5" pos:column="19"/></case>
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">PIC_FLAG<pos:position pos:line="6" pos:column="16"/></name></cpp:ifdef>
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">cmd_data<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">-&gt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">options<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">.<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">pic_mode<pos:position pos:line="7" pos:column="39"/></name></name> <operator pos:line="7" pos:column="40">!=<pos:position pos:line="7" pos:column="42"/></operator> <name pos:line="7" pos:column="43">pic_AVOID<pos:position pos:line="7" pos:column="52"/></name></expr>)<pos:position pos:line="7" pos:column="53"/></condition><then pos:line="7" pos:column="53"> <block pos:line="7" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="8" pos:column="13">push_count_chars<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name><name pos:line="8" pos:column="30">cmd_data<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">arglist<pos:position pos:line="8" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="49">PIC_FLAG<pos:position pos:line="8" pos:column="57"/></name></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="9" pos:column="10"/></block></then></if>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">cmd_data<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">output_name<pos:position pos:line="11" pos:column="34"/></name></name></expr>)<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35"> <block pos:line="11" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">push_count_chars<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name><name pos:line="12" pos:column="30">cmd_data<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">arglist<pos:position pos:line="12" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="49">"-o"<pos:position pos:line="12" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">push_count_chars<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name><name pos:line="13" pos:column="30">cmd_data<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">-&gt;<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="40">arglist<pos:position pos:line="13" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="49">cmd_data<pos:position pos:line="13" pos:column="57"/></name><operator pos:line="13" pos:column="57">-&gt;<pos:position pos:line="13" pos:column="62"/></operator><name pos:line="13" pos:column="59">output_name<pos:position pos:line="13" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>
        <break pos:line="15" pos:column="9">break;<pos:position pos:line="15" pos:column="15"/></break>
    <case pos:line="16" pos:column="5">case <expr><name pos:line="16" pos:column="10">mLink<pos:position pos:line="16" pos:column="15"/></name></expr>:<pos:position pos:line="16" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">link_fixup<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">cmd_data<pos:position pos:line="17" pos:column="28"/></name></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
        <break pos:line="18" pos:column="9">break;<pos:position pos:line="18" pos:column="15"/></break>
    <case pos:line="19" pos:column="5">case <expr><name pos:line="19" pos:column="10">mInstall<pos:position pos:line="19" pos:column="18"/></name></expr>:<pos:position pos:line="19" pos:column="19"/></case>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">cmd_data<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">output<pos:position pos:line="20" pos:column="29"/></name></name> <operator pos:line="20" pos:column="30">==<pos:position pos:line="20" pos:column="32"/></operator> <name pos:line="20" pos:column="33">otLibrary<pos:position pos:line="20" pos:column="42"/></name></expr>)<pos:position pos:line="20" pos:column="43"/></condition><then pos:line="20" pos:column="43"> <block pos:line="20" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">link_fixup<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><name pos:line="21" pos:column="24">cmd_data<pos:position pos:line="21" pos:column="32"/></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
    <default pos:line="23" pos:column="5">default:<pos:position pos:line="23" pos:column="13"/></default>
        <break pos:line="24" pos:column="9">break;<pos:position pos:line="24" pos:column="15"/></break>
    }<pos:position pos:line="25" pos:column="6"/></block></switch>

<cpp:if pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">if<pos:position pos:line="27" pos:column="4"/></cpp:directive> <expr><name pos:line="27" pos:column="5">USE_OMF<pos:position pos:line="27" pos:column="12"/></name></expr></cpp:if>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">cmd_data<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">output<pos:position pos:line="28" pos:column="25"/></name></name> <operator pos:line="28" pos:column="26">==<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="29">otObject<pos:position pos:line="28" pos:column="37"/></name> <operator pos:line="28" pos:column="38">||<pos:position pos:line="28" pos:column="40"/></operator>
        <name><name pos:line="29" pos:column="9">cmd_data<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">output<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">==<pos:position pos:line="29" pos:column="28"/></operator> <name pos:line="29" pos:column="29">otProgram<pos:position pos:line="29" pos:column="38"/></name> <operator pos:line="29" pos:column="39">||<pos:position pos:line="29" pos:column="41"/></operator>
        <name><name pos:line="30" pos:column="9">cmd_data<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">output<pos:position pos:line="30" pos:column="25"/></name></name> <operator pos:line="30" pos:column="26">==<pos:position pos:line="30" pos:column="28"/></operator> <name pos:line="30" pos:column="29">otLibrary<pos:position pos:line="30" pos:column="38"/></name> <operator pos:line="30" pos:column="39">||<pos:position pos:line="30" pos:column="41"/></operator>
        <name><name pos:line="31" pos:column="9">cmd_data<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">output<pos:position pos:line="31" pos:column="25"/></name></name> <operator pos:line="31" pos:column="26">==<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="29">otDynamicLibraryOnly<pos:position pos:line="31" pos:column="49"/></name></expr>)<pos:position pos:line="31" pos:column="50"/></condition><then pos:line="31" pos:column="50"> <block pos:line="31" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">push_count_chars<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name><name pos:line="32" pos:column="26">cmd_data<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">-&gt;<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="36">arglist<pos:position pos:line="32" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="45">"-Zomf"<pos:position pos:line="32" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">cmd_data<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">options<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">.<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">shared<pos:position pos:line="36" pos:column="33"/></name></name> <operator pos:line="36" pos:column="34">&amp;&amp;<pos:position pos:line="36" pos:column="44"/></operator>
            <operator pos:line="37" pos:column="13">(<pos:position pos:line="37" pos:column="14"/></operator><name><name pos:line="37" pos:column="14">cmd_data<pos:position pos:line="37" pos:column="22"/></name><operator pos:line="37" pos:column="22">-&gt;<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="24">output<pos:position pos:line="37" pos:column="30"/></name></name> <operator pos:line="37" pos:column="31">==<pos:position pos:line="37" pos:column="33"/></operator> <name pos:line="37" pos:column="34">otObject<pos:position pos:line="37" pos:column="42"/></name> <operator pos:line="37" pos:column="43">||<pos:position pos:line="37" pos:column="45"/></operator>
             <name><name pos:line="38" pos:column="14">cmd_data<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">output<pos:position pos:line="38" pos:column="30"/></name></name> <operator pos:line="38" pos:column="31">==<pos:position pos:line="38" pos:column="33"/></operator> <name pos:line="38" pos:column="34">otLibrary<pos:position pos:line="38" pos:column="43"/></name> <operator pos:line="38" pos:column="44">||<pos:position pos:line="38" pos:column="46"/></operator>
             <name><name pos:line="39" pos:column="14">cmd_data<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">output<pos:position pos:line="39" pos:column="30"/></name></name> <operator pos:line="39" pos:column="31">==<pos:position pos:line="39" pos:column="33"/></operator> <name pos:line="39" pos:column="34">otDynamicLibraryOnly<pos:position pos:line="39" pos:column="54"/></name><operator pos:line="39" pos:column="54">)<pos:position pos:line="39" pos:column="55"/></operator></expr>)<pos:position pos:line="39" pos:column="56"/></condition><then pos:line="39" pos:column="56"> <block pos:line="39" pos:column="57">{
<cpp:ifdef pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">ifdef<pos:position pos:line="40" pos:column="7"/></cpp:directive> <name pos:line="40" pos:column="8">SHARE_SW<pos:position pos:line="40" pos:column="16"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">push_count_chars<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name><name pos:line="41" pos:column="26">cmd_data<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">-&gt;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="36">arglist<pos:position pos:line="41" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="45">SHARE_SW<pos:position pos:line="41" pos:column="53"/></name></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

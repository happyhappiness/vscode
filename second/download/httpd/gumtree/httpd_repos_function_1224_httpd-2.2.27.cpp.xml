<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1224_httpd-2.2.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_negotiate_header<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">request_rec<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">r<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">negotiation_state<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">neg<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">negotiate<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><call><name pos:line="3" pos:column="29">apr_table_get<pos:position pos:line="3" pos:column="42"/></name><argument_list pos:line="3" pos:column="42">(<argument><expr><name><name pos:line="3" pos:column="43">r<pos:position pos:line="3" pos:column="44"/></name><operator pos:line="3" pos:column="44">-&gt;<pos:position pos:line="3" pos:column="49"/></operator><name pos:line="3" pos:column="46">headers_in<pos:position pos:line="3" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="58">"Negotiate"<pos:position pos:line="3" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">tok<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* First, default to no TCN, no Alternates, and the original Apache
     * negotiation algorithm with fiddles for broken browser configs.
     *
     * To save network bandwidth, we do not configure to send an
     * Alternates header to the user agent by default.  User
     * agents that want an Alternates header for agent-driven
     * negotiation will have to request it by sending an
     * appropriate Negotiate header.
     */</comment>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">neg<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">ua_supports_trans<pos:position pos:line="15" pos:column="27"/></name></name>   <operator pos:line="15" pos:column="30">=<pos:position pos:line="15" pos:column="31"/></operator> <literal type="number" pos:line="15" pos:column="32">0<pos:position pos:line="15" pos:column="33"/></literal></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">neg<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">send_alternates<pos:position pos:line="16" pos:column="25"/></name></name>     <operator pos:line="16" pos:column="30">=<pos:position pos:line="16" pos:column="31"/></operator> <literal type="number" pos:line="16" pos:column="32">0<pos:position pos:line="16" pos:column="33"/></literal></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">neg<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">-&gt;<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="10">may_choose<pos:position pos:line="17" pos:column="20"/></name></name>          <operator pos:line="17" pos:column="30">=<pos:position pos:line="17" pos:column="31"/></operator> <literal type="number" pos:line="17" pos:column="32">1<pos:position pos:line="17" pos:column="33"/></literal></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">neg<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">-&gt;<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="10">use_rvsa<pos:position pos:line="18" pos:column="18"/></name></name>            <operator pos:line="18" pos:column="30">=<pos:position pos:line="18" pos:column="31"/></operator> <literal type="number" pos:line="18" pos:column="32">0<pos:position pos:line="18" pos:column="33"/></literal></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">neg<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">-&gt;<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="10">dont_fiddle_headers<pos:position pos:line="19" pos:column="29"/></name></name> <operator pos:line="19" pos:column="30">=<pos:position pos:line="19" pos:column="31"/></operator> <literal type="number" pos:line="19" pos:column="32">0<pos:position pos:line="19" pos:column="33"/></literal></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">negotiate<pos:position pos:line="21" pos:column="19"/></name></expr>)<pos:position pos:line="21" pos:column="20"/></condition><then pos:line="21" pos:column="20">
        <block type="pseudo"><return pos:line="22" pos:column="9">return;<pos:position pos:line="22" pos:column="16"/></return></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">strcmp<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">negotiate<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="27">"trans"<pos:position pos:line="24" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="35"/></argument_list></call> <operator pos:line="24" pos:column="36">==<pos:position pos:line="24" pos:column="38"/></operator> <literal type="number" pos:line="24" pos:column="39">0<pos:position pos:line="24" pos:column="40"/></literal></expr>)<pos:position pos:line="24" pos:column="41"/></condition><then pos:line="24" pos:column="41"> <block pos:line="24" pos:column="42">{
        <comment type="block" pos:line="25" pos:column="9">/* Lynx 2.7 and 2.8 send 'negotiate: trans' even though they
         * do not support transparent content negotiation, so for Lynx we
         * ignore the negotiate header when its contents are exactly "trans".
         * If future versions of Lynx ever need to say 'negotiate: trans',
         * they can send the equivalent 'negotiate: trans, trans' instead
         * to avoid triggering the workaround below.
         */</comment>
        <decl_stmt><decl><type><specifier pos:line="32" pos:column="9">const<pos:position pos:line="32" pos:column="14"/></specifier> <name pos:line="32" pos:column="15">char<pos:position pos:line="32" pos:column="19"/></name> <modifier pos:line="32" pos:column="20">*<pos:position pos:line="32" pos:column="21"/></modifier></type><name pos:line="32" pos:column="21">ua<pos:position pos:line="32" pos:column="23"/></name> <init pos:line="32" pos:column="24">= <expr><call><name pos:line="32" pos:column="26">apr_table_get<pos:position pos:line="32" pos:column="39"/></name><argument_list pos:line="32" pos:column="39">(<argument><expr><name><name pos:line="32" pos:column="40">r<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">-&gt;<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="43">headers_in<pos:position pos:line="32" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="55">"User-Agent"<pos:position pos:line="32" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="69"/></decl_stmt>

        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">ua<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">&amp;&amp;<pos:position pos:line="34" pos:column="26"/></operator> <operator pos:line="34" pos:column="19">(<pos:position pos:line="34" pos:column="20"/></operator><call><name pos:line="34" pos:column="20">strncmp<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">ua<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="32">"Lynx"<pos:position pos:line="34" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="40">4<pos:position pos:line="34" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></call> <operator pos:line="34" pos:column="43">==<pos:position pos:line="34" pos:column="45"/></operator> <literal type="number" pos:line="34" pos:column="46">0<pos:position pos:line="34" pos:column="47"/></literal><operator pos:line="34" pos:column="47">)<pos:position pos:line="34" pos:column="48"/></operator></expr>)<pos:position pos:line="34" pos:column="49"/></condition><then pos:line="34" pos:column="49">
            <block type="pseudo"><return pos:line="35" pos:column="13">return;<pos:position pos:line="35" pos:column="20"/></return></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="38" pos:column="5">neg<pos:position pos:line="38" pos:column="8"/></name><operator pos:line="38" pos:column="8">-&gt;<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="10">may_choose<pos:position pos:line="38" pos:column="20"/></name></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <literal type="number" pos:line="38" pos:column="23">0<pos:position pos:line="38" pos:column="24"/></literal></expr>;<pos:position pos:line="38" pos:column="25"/></expr_stmt>  <comment type="block" pos:line="38" pos:column="27">/* An empty Negotiate would require 300 response */</comment>

    <while pos:line="40" pos:column="5">while <condition pos:line="40" pos:column="11">(<expr><operator pos:line="40" pos:column="12">(<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="13">tok<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <call><name pos:line="40" pos:column="19">ap_get_list_item<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name><name pos:line="40" pos:column="36">neg<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">-&gt;<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="41">pool<pos:position pos:line="40" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="47">&amp;<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="48">negotiate<pos:position pos:line="40" pos:column="57"/></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call><operator pos:line="40" pos:column="58">)<pos:position pos:line="40" pos:column="59"/></operator> <operator pos:line="40" pos:column="60">!=<pos:position pos:line="40" pos:column="62"/></operator> <name pos:line="40" pos:column="63">NULL<pos:position pos:line="40" pos:column="67"/></name></expr>)<pos:position pos:line="40" pos:column="68"/></condition> <block pos:line="40" pos:column="69">{

        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">strcmp<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><name pos:line="42" pos:column="20">tok<pos:position pos:line="42" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="25">"trans"<pos:position pos:line="42" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="33"/></argument_list></call> <operator pos:line="42" pos:column="34">==<pos:position pos:line="42" pos:column="36"/></operator> <literal type="number" pos:line="42" pos:column="37">0<pos:position pos:line="42" pos:column="38"/></literal> <operator pos:line="42" pos:column="39">||<pos:position pos:line="42" pos:column="41"/></operator>
            <call><name pos:line="43" pos:column="13">strcmp<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><name pos:line="43" pos:column="20">tok<pos:position pos:line="43" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="25">"vlist"<pos:position pos:line="43" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="33"/></argument_list></call> <operator pos:line="43" pos:column="34">==<pos:position pos:line="43" pos:column="36"/></operator> <literal type="number" pos:line="43" pos:column="37">0<pos:position pos:line="43" pos:column="38"/></literal> <operator pos:line="43" pos:column="39">||<pos:position pos:line="43" pos:column="41"/></operator>
            <call><name pos:line="44" pos:column="13">strcmp<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">(<argument><expr><name pos:line="44" pos:column="20">tok<pos:position pos:line="44" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="25">"guess-small"<pos:position pos:line="44" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="39"/></argument_list></call> <operator pos:line="44" pos:column="40">==<pos:position pos:line="44" pos:column="42"/></operator> <literal type="number" pos:line="44" pos:column="43">0<pos:position pos:line="44" pos:column="44"/></literal> <operator pos:line="44" pos:column="45">||<pos:position pos:line="44" pos:column="47"/></operator>
            <call><name pos:line="45" pos:column="13">apr_isdigit<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name><name pos:line="45" pos:column="25">tok<pos:position pos:line="45" pos:column="28"/></name><index pos:line="45" pos:column="28">[<expr><literal type="number" pos:line="45" pos:column="29">0<pos:position pos:line="45" pos:column="30"/></literal></expr>]<pos:position pos:line="45" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="45" pos:column="32"/></argument_list></call> <operator pos:line="45" pos:column="33">||<pos:position pos:line="45" pos:column="35"/></operator>
            <call><name pos:line="46" pos:column="13">strcmp<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><name pos:line="46" pos:column="20">tok<pos:position pos:line="46" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="25">"*"<pos:position pos:line="46" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="29"/></argument_list></call> <operator pos:line="46" pos:column="30">==<pos:position pos:line="46" pos:column="32"/></operator> <literal type="number" pos:line="46" pos:column="33">0<pos:position pos:line="46" pos:column="34"/></literal></expr>)<pos:position pos:line="46" pos:column="35"/></condition><then pos:line="46" pos:column="35"> <block pos:line="46" pos:column="36">{

            <comment type="block" pos:line="48" pos:column="13">/* The user agent supports transparent negotiation */</comment>
            <expr_stmt><expr><name><name pos:line="49" pos:column="13">neg<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">ua_supports_trans<pos:position pos:line="49" pos:column="35"/></name></name> <operator pos:line="49" pos:column="36">=<pos:position pos:line="49" pos:column="37"/></operator> <literal type="number" pos:line="49" pos:column="38">1<pos:position pos:line="49" pos:column="39"/></literal></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt>

            <comment type="block" pos:line="51" pos:column="13">/* Send-alternates could be configurable, but note
             * that it must be 1 if we have 'vlist' in the
             * negotiate header.
             */</comment>
            <expr_stmt><expr><name><name pos:line="55" pos:column="13">neg<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">-&gt;<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="18">send_alternates<pos:position pos:line="55" pos:column="33"/></name></name> <operator pos:line="55" pos:column="34">=<pos:position pos:line="55" pos:column="35"/></operator> <literal type="number" pos:line="55" pos:column="36">1<pos:position pos:line="55" pos:column="37"/></literal></expr>;<pos:position pos:line="55" pos:column="38"/></expr_stmt>

            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><call><name pos:line="57" pos:column="17">strcmp<pos:position pos:line="57" pos:column="23"/></name><argument_list pos:line="57" pos:column="23">(<argument><expr><name pos:line="57" pos:column="24">tok<pos:position pos:line="57" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="29">"1.0"<pos:position pos:line="57" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="35"/></argument_list></call> <operator pos:line="57" pos:column="36">==<pos:position pos:line="57" pos:column="38"/></operator> <literal type="number" pos:line="57" pos:column="39">0<pos:position pos:line="57" pos:column="40"/></literal></expr>)<pos:position pos:line="57" pos:column="41"/></condition><then pos:line="57" pos:column="41"> <block pos:line="57" pos:column="42">{
                <comment type="block" pos:line="58" pos:column="17">/* we may use the RVSA/1.0 algorithm, configure for it */</comment>
                <expr_stmt><expr><name><name pos:line="59" pos:column="17">neg<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">-&gt;<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="22">may_choose<pos:position pos:line="59" pos:column="32"/></name></name> <operator pos:line="59" pos:column="33">=<pos:position pos:line="59" pos:column="34"/></operator> <literal type="number" pos:line="59" pos:column="35">1<pos:position pos:line="59" pos:column="36"/></literal></expr>;<pos:position pos:line="59" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="60" pos:column="17">neg<pos:position pos:line="60" pos:column="20"/></name><operator pos:line="60" pos:column="20">-&gt;<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="22">use_rvsa<pos:position pos:line="60" pos:column="30"/></name></name> <operator pos:line="60" pos:column="31">=<pos:position pos:line="60" pos:column="32"/></operator> <literal type="number" pos:line="60" pos:column="33">1<pos:position pos:line="60" pos:column="34"/></literal></expr>;<pos:position pos:line="60" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="61" pos:column="17">neg<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">-&gt;<pos:position pos:line="61" pos:column="25"/></operator><name pos:line="61" pos:column="22">dont_fiddle_headers<pos:position pos:line="61" pos:column="41"/></name></name> <operator pos:line="61" pos:column="42">=<pos:position pos:line="61" pos:column="43"/></operator> <literal type="number" pos:line="61" pos:column="44">1<pos:position pos:line="61" pos:column="45"/></literal></expr>;<pos:position pos:line="61" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="62" pos:column="14"/></block></then>
            <elseif pos:line="63" pos:column="13">else <if pos:line="63" pos:column="18">if <condition pos:line="63" pos:column="21">(<expr><name><name pos:line="63" pos:column="22">tok<pos:position pos:line="63" pos:column="25"/></name><index pos:line="63" pos:column="25">[<expr><literal type="number" pos:line="63" pos:column="26">0<pos:position pos:line="63" pos:column="27"/></literal></expr>]<pos:position pos:line="63" pos:column="28"/></index></name> <operator pos:line="63" pos:column="29">==<pos:position pos:line="63" pos:column="31"/></operator> <literal type="char" pos:line="63" pos:column="32">'*'<pos:position pos:line="63" pos:column="35"/></literal></expr>)<pos:position pos:line="63" pos:column="36"/></condition><then pos:line="63" pos:column="36"> <block pos:line="63" pos:column="37">{
                <comment type="block" pos:line="64" pos:column="17">/* we may use any variant selection algorithm, configure
                 * to use the Apache algorithm
                 */</comment>
                <expr_stmt><expr><name><name pos:line="67" pos:column="17">neg<pos:position pos:line="67" pos:column="20"/></name><operator pos:line="67" pos:column="20">-&gt;<pos:position pos:line="67" pos:column="25"/></operator><name pos:line="67" pos:column="22">may_choose<pos:position pos:line="67" pos:column="32"/></name></name> <operator pos:line="67" pos:column="33">=<pos:position pos:line="67" pos:column="34"/></operator> <literal type="number" pos:line="67" pos:column="35">1<pos:position pos:line="67" pos:column="36"/></literal></expr>;<pos:position pos:line="67" pos:column="37"/></expr_stmt>

                <comment type="block" pos:line="69" pos:column="17">/* We disable header fiddles on the assumption that a
                 * client sending Negotiate knows how to send correct
                 * headers which don't need fiddling.
                 */</comment>
                <expr_stmt><expr><name><name pos:line="73" pos:column="17">neg<pos:position pos:line="73" pos:column="20"/></name><operator pos:line="73" pos:column="20">-&gt;<pos:position pos:line="73" pos:column="25"/></operator><name pos:line="73" pos:column="22">dont_fiddle_headers<pos:position pos:line="73" pos:column="41"/></name></name> <operator pos:line="73" pos:column="42">=<pos:position pos:line="73" pos:column="43"/></operator> <literal type="number" pos:line="73" pos:column="44">1<pos:position pos:line="73" pos:column="45"/></literal></expr>;<pos:position pos:line="73" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="74" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="75" pos:column="10"/></block></then></if>
    }<pos:position pos:line="76" pos:column="6"/></block></while>

<cpp:ifdef pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">ifdef<pos:position pos:line="78" pos:column="7"/></cpp:directive> <name pos:line="78" pos:column="8">NEG_DEBUG<pos:position pos:line="78" pos:column="17"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">ap_log_error<pos:position pos:line="79" pos:column="17"/></name><argument_list pos:line="79" pos:column="17">(<argument><expr><name pos:line="79" pos:column="18">APLOG_MARK<pos:position pos:line="79" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="30">APLOG_STARTUP<pos:position pos:line="79" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="45">0<pos:position pos:line="79" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="48">NULL<pos:position pos:line="79" pos:column="52"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="80" pos:column="13">"dont_fiddle_headers=%d use_rvsa=%d ua_supports_trans=%d "<pos:position pos:line="80" pos:column="71"/></literal>
            <literal type="string" pos:line="81" pos:column="13">"send_alternates=%d, may_choose=%d"<pos:position pos:line="81" pos:column="48"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="82" pos:column="13">neg<pos:position pos:line="82" pos:column="16"/></name><operator pos:line="82" pos:column="16">-&gt;<pos:position pos:line="82" pos:column="21"/></operator><name pos:line="82" pos:column="18">dont_fiddle_headers<pos:position pos:line="82" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="39">neg<pos:position pos:line="82" pos:column="42"/></name><operator pos:line="82" pos:column="42">-&gt;<pos:position pos:line="82" pos:column="47"/></operator><name pos:line="82" pos:column="44">use_rvsa<pos:position pos:line="82" pos:column="52"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="83" pos:column="13">neg<pos:position pos:line="83" pos:column="16"/></name><operator pos:line="83" pos:column="16">-&gt;<pos:position pos:line="83" pos:column="21"/></operator><name pos:line="83" pos:column="18">ua_supports_trans<pos:position pos:line="83" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="37">neg<pos:position pos:line="83" pos:column="40"/></name><operator pos:line="83" pos:column="40">-&gt;<pos:position pos:line="83" pos:column="45"/></operator><name pos:line="83" pos:column="42">send_alternates<pos:position pos:line="83" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="59">neg<pos:position pos:line="83" pos:column="62"/></name><operator pos:line="83" pos:column="62">-&gt;<pos:position pos:line="83" pos:column="67"/></operator><name pos:line="83" pos:column="64">may_choose<pos:position pos:line="83" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="76"/></expr_stmt>
<cpp:endif pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">endif<pos:position pos:line="84" pos:column="7"/></cpp:directive></cpp:endif>

}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_58_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_size_t<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">round_up<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">apr_size_t<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">val<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">apr_off_t<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">round<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list> <block pos:line="1" pos:column="61">{
    <if pos:line="2" pos:column="5">if <condition pos:line="2" pos:column="8">(<expr><name pos:line="2" pos:column="9">round<pos:position pos:line="2" pos:column="14"/></name> <operator pos:line="2" pos:column="15">&gt;<pos:position pos:line="2" pos:column="19"/></operator> <literal type="number" pos:line="2" pos:column="17">1<pos:position pos:line="2" pos:column="18"/></literal></expr>)<pos:position pos:line="2" pos:column="19"/></condition><then pos:line="2" pos:column="19"> <block pos:line="2" pos:column="20">{
        <return pos:line="3" pos:column="9">return <expr><call pos:line="3" pos:column="16">(<name pos:line="3" pos:column="17">apr_size_t<pos:position pos:line="3" pos:column="27"/></name>)<argument_list pos:line="3" pos:column="28">(<argument><expr><operator pos:line="3" pos:column="29">(<pos:position pos:line="3" pos:column="30"/></operator><operator pos:line="3" pos:column="30">(<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="31">val<pos:position pos:line="3" pos:column="34"/></name> <operator pos:line="3" pos:column="35">+<pos:position pos:line="3" pos:column="36"/></operator> <name pos:line="3" pos:column="37">round<pos:position pos:line="3" pos:column="42"/></name> <operator pos:line="3" pos:column="43">-<pos:position pos:line="3" pos:column="44"/></operator> <literal type="number" pos:line="3" pos:column="45">1<pos:position pos:line="3" pos:column="46"/></literal><operator pos:line="3" pos:column="46">)<pos:position pos:line="3" pos:column="47"/></operator> <operator pos:line="3" pos:column="48">/<pos:position pos:line="3" pos:column="49"/></operator> <name pos:line="3" pos:column="50">round<pos:position pos:line="3" pos:column="55"/></name><operator pos:line="3" pos:column="55">)<pos:position pos:line="3" pos:column="56"/></operator> <operator pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></operator> <name pos:line="3" pos:column="59">round<pos:position pos:line="3" pos:column="64"/></name></expr></argument>)<pos:position pos:line="3" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="66"/></return>
    }<pos:position pos:line="4" pos:column="6"/></block></then></if>
    <return pos:line="5" pos:column="5">return <expr><name pos:line="5" pos:column="12">val<pos:position pos:line="5" pos:column="15"/></name></expr>;<pos:position pos:line="5" pos:column="16"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

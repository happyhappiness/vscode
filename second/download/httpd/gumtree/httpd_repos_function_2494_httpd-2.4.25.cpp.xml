<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2494_httpd-2.4.25.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_push<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">apr_bucket_brigade<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">bb<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">h2_session<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">s<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, 
                     <parameter><decl><type><name pos:line="2" pos:column="22">h2_stream<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">stream<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">last<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list> 
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">h2_push_diary<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">diary<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">bbout<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">bb<pos:position pos:line="7" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="15">"    \"push\": {\n"<pos:position pos:line="7" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">diary<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <name><name pos:line="8" pos:column="13">s<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">push_diary<pos:position pos:line="8" pos:column="26"/></name></name></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">diary<pos:position pos:line="9" pos:column="14"/></name></expr>)<pos:position pos:line="9" pos:column="15"/></condition><then pos:line="9" pos:column="15"> <block pos:line="9" pos:column="16">{
        <decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">data<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">char<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">base64_digest<pos:position pos:line="11" pos:column="34"/></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">apr_size_t<pos:position pos:line="12" pos:column="19"/></name></type> <name pos:line="12" pos:column="20">len<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
        
        <expr_stmt><expr><name pos:line="14" pos:column="9">status<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">h2_push_diary_digest_get<pos:position pos:line="14" pos:column="42"/></name><argument_list pos:line="14" pos:column="42">(<argument><expr><name pos:line="14" pos:column="43">diary<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="50">bb<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">-&gt;<pos:position pos:line="14" pos:column="57"/></operator><name pos:line="14" pos:column="54">p<pos:position pos:line="14" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="57">256<pos:position pos:line="14" pos:column="60"/></literal></expr></argument>, 
                                          <argument><expr><name><name pos:line="15" pos:column="43">stream<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">-&gt;<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="51">request<pos:position pos:line="15" pos:column="58"/></name><operator pos:line="15" pos:column="58">-&gt;<pos:position pos:line="15" pos:column="63"/></operator><name pos:line="15" pos:column="60">authority<pos:position pos:line="15" pos:column="69"/></name></name></expr></argument>, 
                                          <argument><expr><operator pos:line="16" pos:column="43">&amp;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="44">data<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="50">&amp;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="51">len<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">status<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">==<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">APR_SUCCESS<pos:position pos:line="17" pos:column="34"/></name></expr>)<pos:position pos:line="17" pos:column="35"/></condition><then pos:line="17" pos:column="35"> <block pos:line="17" pos:column="36">{
            <expr_stmt><expr><name pos:line="18" pos:column="13">base64_digest<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <call><name pos:line="18" pos:column="29">h2_util_base64url_encode<pos:position pos:line="18" pos:column="53"/></name><argument_list pos:line="18" pos:column="53">(<argument><expr><name pos:line="18" pos:column="54">data<pos:position pos:line="18" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="60">len<pos:position pos:line="18" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="65">bb<pos:position pos:line="18" pos:column="67"/></name><operator pos:line="18" pos:column="67">-&gt;<pos:position pos:line="18" pos:column="72"/></operator><name pos:line="18" pos:column="69">p<pos:position pos:line="18" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">bbout<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">bb<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="23">"      \"cacheDigest\": \"%s\",\n"<pos:position pos:line="19" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="59">base64_digest<pos:position pos:line="19" pos:column="72"/></name></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">bbout<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><name pos:line="22" pos:column="11">bb<pos:position pos:line="22" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="15">"      \"promises\": %d,\n"<pos:position pos:line="22" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="44">s<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">-&gt;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="47">pushes_promised<pos:position pos:line="22" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">bbout<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><name pos:line="23" pos:column="11">bb<pos:position pos:line="23" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="15">"      \"submits\": %d,\n"<pos:position pos:line="23" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="43">s<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">-&gt;<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="46">pushes_submitted<pos:position pos:line="23" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">bbout<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><name pos:line="24" pos:column="11">bb<pos:position pos:line="24" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="15">"      \"resets\": %d\n"<pos:position pos:line="24" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="41">s<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">-&gt;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="44">pushes_reset<pos:position pos:line="24" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">bbout<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">bb<pos:position pos:line="25" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="15">"    }%s\n"<pos:position pos:line="25" pos:column="26"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="25" pos:column="28">last<pos:position pos:line="25" pos:column="32"/></name></expr>?<pos:position pos:line="25" pos:column="33"/></condition><then pos:line="25" pos:column="33"> <expr><literal type="string" pos:line="25" pos:column="34">""<pos:position pos:line="25" pos:column="36"/></literal></expr> <pos:position pos:line="25" pos:column="37"/></then><else pos:line="25" pos:column="37">: <expr><literal type="string" pos:line="25" pos:column="39">","<pos:position pos:line="25" pos:column="42"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2515_httpd-2.0.59.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">XML_ParseBuffer<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">XML_Parser<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">parser<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">len<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">isFinal<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">start<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">bufferPtr<pos:position pos:line="3" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
  <expr_stmt><expr><name pos:line="4" pos:column="3">positionPtr<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">=<pos:position pos:line="4" pos:column="16"/></operator> <name pos:line="4" pos:column="17">start<pos:position pos:line="4" pos:column="22"/></name></expr>;<pos:position pos:line="4" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="5" pos:column="3">bufferEnd<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">+=<pos:position pos:line="5" pos:column="15"/></operator> <name pos:line="5" pos:column="16">len<pos:position pos:line="5" pos:column="19"/></name></expr>;<pos:position pos:line="5" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="6" pos:column="3">parseEndByteIndex<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">+=<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="24">len<pos:position pos:line="6" pos:column="27"/></name></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">errorCode<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <call><name pos:line="7" pos:column="15">processor<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">parser<pos:position pos:line="7" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="33">start<pos:position pos:line="7" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="40">parseEndPtr<pos:position pos:line="7" pos:column="51"/></name> <operator pos:line="7" pos:column="52">=<pos:position pos:line="7" pos:column="53"/></operator> <name pos:line="7" pos:column="54">bufferEnd<pos:position pos:line="7" pos:column="63"/></name></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="8" pos:column="25">isFinal<pos:position pos:line="8" pos:column="32"/></name></expr> ?<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34"> <expr><operator pos:line="8" pos:column="35">(<pos:position pos:line="8" pos:column="36"/></operator><specifier pos:line="8" pos:column="36">const<pos:position pos:line="8" pos:column="41"/></specifier> <name pos:line="8" pos:column="42">char<pos:position pos:line="8" pos:column="46"/></name> <operator pos:line="8" pos:column="47">*<pos:position pos:line="8" pos:column="48"/></operator><operator pos:line="8" pos:column="48">*<pos:position pos:line="8" pos:column="49"/></operator><operator pos:line="8" pos:column="49">)<pos:position pos:line="8" pos:column="50"/></operator><literal type="number" pos:line="8" pos:column="50">0<pos:position pos:line="8" pos:column="51"/></literal></expr> <pos:position pos:line="8" pos:column="52"/></then><else pos:line="8" pos:column="52">: <expr><operator pos:line="8" pos:column="54">&amp;<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="55">bufferPtr<pos:position pos:line="8" pos:column="64"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="66"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">errorCode<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">==<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">XML_ERROR_NONE<pos:position pos:line="9" pos:column="34"/></name></expr>)<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35"> <block pos:line="9" pos:column="36">{
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">isFinal<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="7">XmlUpdatePosition<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">encoding<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">positionPtr<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">bufferPtr<pos:position pos:line="11" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="59">&amp;<pos:position pos:line="11" pos:column="64"/></operator><name pos:line="11" pos:column="60">position<pos:position pos:line="11" pos:column="68"/></name></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="70"/></expr_stmt></block></then></if>
    <return pos:line="12" pos:column="5">return <expr><literal type="number" pos:line="12" pos:column="12">1<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then>
  <else pos:line="14" pos:column="3">else <block pos:line="14" pos:column="8">{
    <expr_stmt><expr><name pos:line="15" pos:column="5">eventEndPtr<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">eventPtr<pos:position pos:line="15" pos:column="27"/></name></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">processor<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">errorProcessor<pos:position pos:line="16" pos:column="31"/></name></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><literal type="number" pos:line="17" pos:column="12">0<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></else></if>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

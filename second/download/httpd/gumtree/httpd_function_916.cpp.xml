<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_916.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BOOL<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_scache_dbm_store<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">server_rec<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">s<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">UCHAR<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">id<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">idlen<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">time_t<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">expiry<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="79">SSL_SESSION<pos:position pos:line="1" pos:column="90"/></name> <modifier pos:line="1" pos:column="91">*<pos:position pos:line="1" pos:column="92"/></modifier></type><name pos:line="1" pos:column="92">sess<pos:position pos:line="1" pos:column="96"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="97"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SSLModConfigRec<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">mc<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">myModConfig<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">(<argument><expr><name pos:line="3" pos:column="39">s<pos:position pos:line="3" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_dbm_t<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">dbm<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_datum_t<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">dbmkey<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_datum_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">dbmval<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">UCHAR<pos:position pos:line="7" pos:column="10"/></name></type> <name><name pos:line="7" pos:column="11">ucaData<pos:position pos:line="7" pos:column="18"/></name><index pos:line="7" pos:column="18">[<expr><name pos:line="7" pos:column="19">SSL_SESSION_MAX_DER<pos:position pos:line="7" pos:column="38"/></name></expr>]<pos:position pos:line="7" pos:column="39"/></index></name></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">nData<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">UCHAR<pos:position pos:line="9" pos:column="10"/></name> <modifier pos:line="9" pos:column="11">*<pos:position pos:line="9" pos:column="12"/></modifier></type><name pos:line="9" pos:column="12">ucp<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_status_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">rv<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* streamline session data */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">nData<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">i2d_SSL_SESSION<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">sess<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">NULL<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call><operator pos:line="13" pos:column="45">)<pos:position pos:line="13" pos:column="46"/></operator> <operator pos:line="13" pos:column="47">&gt;<pos:position pos:line="13" pos:column="51"/></operator> <sizeof pos:line="13" pos:column="49">sizeof<argument_list pos:line="13" pos:column="55">(<argument><expr><name pos:line="13" pos:column="56">ucaData<pos:position pos:line="13" pos:column="63"/></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></sizeof></expr>)<pos:position pos:line="13" pos:column="65"/></condition><then pos:line="13" pos:column="65"> <block pos:line="13" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">ap_log_error<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">APLOG_MARK<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">APLOG_DEBUG<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="47">0<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="50">s<pos:position pos:line="14" pos:column="51"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="15" pos:column="18">"streamline session data size too large: %d &gt; %d"<pos:position pos:line="15" pos:column="70"/></literal></expr></argument>,
                 <argument><expr><name pos:line="16" pos:column="18">nData<pos:position pos:line="16" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="25">sizeof<argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">ucaData<pos:position pos:line="16" pos:column="39"/></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">FALSE<pos:position pos:line="17" pos:column="21"/></name></expr>;<pos:position pos:line="17" pos:column="22"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="19" pos:column="5">ucp<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <name pos:line="19" pos:column="11">ucaData<pos:position pos:line="19" pos:column="18"/></name></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">i2d_SSL_SESSION<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><name pos:line="20" pos:column="21">sess<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="27">&amp;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="28">ucp<pos:position pos:line="20" pos:column="31"/></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* be careful: do not try to store too much bytes in a DBM file! */</comment>
<cpp:ifdef pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">ifdef<pos:position pos:line="23" pos:column="7"/></cpp:directive> <name pos:line="23" pos:column="8">PAIRMAX<pos:position pos:line="23" pos:column="15"/></name></cpp:ifdef>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">idlen<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">+<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">nData<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">)<pos:position pos:line="24" pos:column="24"/></operator> <operator pos:line="24" pos:column="25">&gt;=<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="28">PAIRMAX<pos:position pos:line="24" pos:column="35"/></name></expr>)<pos:position pos:line="24" pos:column="36"/></condition><then pos:line="24" pos:column="36"> <block pos:line="24" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">ap_log_error<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">APLOG_MARK<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">APLOG_DEBUG<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="47">0<pos:position pos:line="25" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">s<pos:position pos:line="25" pos:column="51"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="26" pos:column="18">"data size too large for DBM session cache: %d &gt;= %d"<pos:position pos:line="26" pos:column="74"/></literal></expr></argument>,
                 <argument><expr><operator pos:line="27" pos:column="18">(<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">idlen<pos:position pos:line="27" pos:column="24"/></name> <operator pos:line="27" pos:column="25">+<pos:position pos:line="27" pos:column="26"/></operator> <name pos:line="27" pos:column="27">nData<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">)<pos:position pos:line="27" pos:column="33"/></operator></expr></argument>, <argument><expr><name pos:line="27" pos:column="35">PAIRMAX<pos:position pos:line="27" pos:column="42"/></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">FALSE<pos:position pos:line="28" pos:column="21"/></name></expr>;<pos:position pos:line="28" pos:column="22"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
<cpp:else pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">else<pos:position pos:line="30" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">(<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">idlen<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">+<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">nData<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">)<pos:position pos:line="31" pos:column="24"/></operator> <operator pos:line="31" pos:column="25">&gt;=<pos:position pos:line="31" pos:column="30"/></operator> <literal type="number" pos:line="31" pos:column="28">950<pos:position pos:line="31" pos:column="31"/></literal></expr> <comment type="block" pos:line="31" pos:column="32">/* at least less than approx. 1KB */</comment>)<pos:position pos:line="31" pos:column="69"/></condition><then pos:line="31" pos:column="69"> <block pos:line="31" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">ap_log_error<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name pos:line="32" pos:column="22">APLOG_MARK<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="34">APLOG_DEBUG<pos:position pos:line="32" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="47">0<pos:position pos:line="32" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">s<pos:position pos:line="32" pos:column="51"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="33" pos:column="18">"data size too large for DBM session cache: %d &gt;= %d"<pos:position pos:line="33" pos:column="74"/></literal></expr></argument>,
                 <argument><expr><operator pos:line="34" pos:column="18">(<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="19">idlen<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">+<pos:position pos:line="34" pos:column="26"/></operator> <name pos:line="34" pos:column="27">nData<pos:position pos:line="34" pos:column="32"/></name><operator pos:line="34" pos:column="32">)<pos:position pos:line="34" pos:column="33"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="35">950<pos:position pos:line="34" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>
        <return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">FALSE<pos:position pos:line="35" pos:column="21"/></name></expr>;<pos:position pos:line="35" pos:column="22"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="39" pos:column="5">/* create DBM key */</comment>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">dbmkey<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">.<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="12">dptr<pos:position pos:line="40" pos:column="16"/></name></name>  <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <operator pos:line="40" pos:column="20">(<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="21">char<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">*<pos:position pos:line="40" pos:column="27"/></operator><operator pos:line="40" pos:column="27">)<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">id<pos:position pos:line="40" pos:column="30"/></name></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">dbmkey<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">.<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="12">dsize<pos:position pos:line="41" pos:column="17"/></name></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <name pos:line="41" pos:column="20">idlen<pos:position pos:line="41" pos:column="25"/></name></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="43" pos:column="5">/* create DBM value */</comment>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">dbmval<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">.<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="12">dsize<pos:position pos:line="44" pos:column="17"/></name></name> <operator pos:line="44" pos:column="18">=<pos:position pos:line="44" pos:column="19"/></operator> <sizeof pos:line="44" pos:column="20">sizeof<argument_list pos:line="44" pos:column="26">(<argument><expr><name pos:line="44" pos:column="27">time_t<pos:position pos:line="44" pos:column="33"/></name></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></sizeof> <operator pos:line="44" pos:column="35">+<pos:position pos:line="44" pos:column="36"/></operator> <name pos:line="44" pos:column="37">nData<pos:position pos:line="44" pos:column="42"/></name></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">dbmval<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">.<pos:position pos:line="45" pos:column="12"/></operator><name pos:line="45" pos:column="12">dptr<pos:position pos:line="45" pos:column="16"/></name></name>  <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <operator pos:line="45" pos:column="20">(<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="21">char<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">*<pos:position pos:line="45" pos:column="27"/></operator><operator pos:line="45" pos:column="27">)<pos:position pos:line="45" pos:column="28"/></operator><call><name pos:line="45" pos:column="28">malloc<pos:position pos:line="45" pos:column="34"/></name><argument_list pos:line="45" pos:column="34">(<argument><expr><name><name pos:line="45" pos:column="35">dbmval<pos:position pos:line="45" pos:column="41"/></name><operator pos:line="45" pos:column="41">.<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="42">dsize<pos:position pos:line="45" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="49"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name><name pos:line="46" pos:column="9">dbmval<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">.<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="16">dptr<pos:position pos:line="46" pos:column="20"/></name></name> <operator pos:line="46" pos:column="21">==<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="24">NULL<pos:position pos:line="46" pos:column="28"/></name></expr>)<pos:position pos:line="46" pos:column="29"/></condition><then pos:line="46" pos:column="29"> <block pos:line="46" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">ap_log_error<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">APLOG_MARK<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">APLOG_DEBUG<pos:position pos:line="47" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="47">0<pos:position pos:line="47" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="50">s<pos:position pos:line="47" pos:column="51"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="48" pos:column="18">"malloc error creating DBM value"<pos:position pos:line="48" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="53"/></expr_stmt>
        <return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">FALSE<pos:position pos:line="49" pos:column="21"/></name></expr>;<pos:position pos:line="49" pos:column="22"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">memcpy<pos:position pos:line="51" pos:column="11"/></name><argument_list pos:line="51" pos:column="11">(<argument><expr><operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="13">char<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">*<pos:position pos:line="51" pos:column="19"/></operator><operator pos:line="51" pos:column="19">)<pos:position pos:line="51" pos:column="20"/></operator><name><name pos:line="51" pos:column="20">dbmval<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">.<pos:position pos:line="51" pos:column="27"/></operator><name pos:line="51" pos:column="27">dptr<pos:position pos:line="51" pos:column="31"/></name></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="33">&amp;<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="34">expiry<pos:position pos:line="51" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="42">sizeof<argument_list pos:line="51" pos:column="48">(<argument><expr><name pos:line="51" pos:column="49">time_t<pos:position pos:line="51" pos:column="55"/></name></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">memcpy<pos:position pos:line="52" pos:column="11"/></name><argument_list pos:line="52" pos:column="11">(<argument><expr><operator pos:line="52" pos:column="12">(<pos:position pos:line="52" pos:column="13"/></operator><name pos:line="52" pos:column="13">char<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">*<pos:position pos:line="52" pos:column="19"/></operator><operator pos:line="52" pos:column="19">)<pos:position pos:line="52" pos:column="20"/></operator><name><name pos:line="52" pos:column="20">dbmval<pos:position pos:line="52" pos:column="26"/></name><operator pos:line="52" pos:column="26">.<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="27">dptr<pos:position pos:line="52" pos:column="31"/></name></name><operator pos:line="52" pos:column="31">+<pos:position pos:line="52" pos:column="32"/></operator><sizeof pos:line="52" pos:column="32">sizeof<argument_list pos:line="52" pos:column="38">(<argument><expr><name pos:line="52" pos:column="39">time_t<pos:position pos:line="52" pos:column="45"/></name></expr></argument>)<pos:position pos:line="52" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="52" pos:column="48">ucaData<pos:position pos:line="52" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="57">nData<pos:position pos:line="52" pos:column="62"/></name></expr></argument>)<pos:position pos:line="52" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="64"/></expr_stmt>

    <comment type="block" pos:line="54" pos:column="5">/* and store it to the DBM file */</comment>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">ssl_mutex_on<pos:position pos:line="55" pos:column="17"/></name><argument_list pos:line="55" pos:column="17">(<argument><expr><name pos:line="55" pos:column="18">s<pos:position pos:line="55" pos:column="19"/></name></expr></argument>)<pos:position pos:line="55" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="21"/></expr_stmt>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><operator pos:line="56" pos:column="9">(<pos:position pos:line="56" pos:column="10"/></operator><name pos:line="56" pos:column="10">rv<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <call><name pos:line="56" pos:column="15">apr_dbm_open<pos:position pos:line="56" pos:column="27"/></name><argument_list pos:line="56" pos:column="27">(<argument><expr><operator pos:line="56" pos:column="28">&amp;<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="29">dbm<pos:position pos:line="56" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="34">mc<pos:position pos:line="56" pos:column="36"/></name><operator pos:line="56" pos:column="36">-&gt;<pos:position pos:line="56" pos:column="41"/></operator><name pos:line="56" pos:column="38">szSessionCacheDataFile<pos:position pos:line="56" pos:column="60"/></name></name></expr></argument>,
	    <argument><expr><name pos:line="57" pos:column="13">APR_DBM_RWCREATE<pos:position pos:line="57" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="31">SSL_DBM_FILE_MODE<pos:position pos:line="57" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="50">mc<pos:position pos:line="57" pos:column="52"/></name><operator pos:line="57" pos:column="52">-&gt;<pos:position pos:line="57" pos:column="57"/></operator><name pos:line="57" pos:column="54">pPool<pos:position pos:line="57" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="60"/></argument_list></call><operator pos:line="57" pos:column="60">)<pos:position pos:line="57" pos:column="61"/></operator> <operator pos:line="57" pos:column="62">!=<pos:position pos:line="57" pos:column="64"/></operator> <name pos:line="57" pos:column="65">APR_SUCCESS<pos:position pos:line="57" pos:column="76"/></name></expr>)<pos:position pos:line="57" pos:column="77"/></condition><then pos:line="57" pos:column="77"> <block pos:line="57" pos:column="78">{
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">ap_log_error<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><name pos:line="58" pos:column="22">APLOG_MARK<pos:position pos:line="58" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="34">APLOG_ERR<pos:position pos:line="58" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="45">rv<pos:position pos:line="58" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="49">s<pos:position pos:line="58" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="59" pos:column="22">"Cannot open SSLSessionCache DBM file `%s' for writing "<pos:position pos:line="59" pos:column="78"/></literal>
                     <literal type="string" pos:line="60" pos:column="22">"(store)"<pos:position pos:line="60" pos:column="31"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="61" pos:column="22">mc<pos:position pos:line="61" pos:column="24"/></name><operator pos:line="61" pos:column="24">-&gt;<pos:position pos:line="61" pos:column="29"/></operator><name pos:line="61" pos:column="26">szSessionCacheDataFile<pos:position pos:line="61" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">ssl_mutex_off<pos:position pos:line="62" pos:column="22"/></name><argument_list pos:line="62" pos:column="22">(<argument><expr><name pos:line="62" pos:column="23">s<pos:position pos:line="62" pos:column="24"/></name></expr></argument>)<pos:position pos:line="62" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">free<pos:position pos:line="63" pos:column="13"/></name><argument_list pos:line="63" pos:column="13">(<argument><expr><name><name pos:line="63" pos:column="14">dbmval<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">.<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="21">dptr<pos:position pos:line="63" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="27"/></expr_stmt>
        <return pos:line="64" pos:column="9">return <expr><name pos:line="64" pos:column="16">FALSE<pos:position pos:line="64" pos:column="21"/></name></expr>;<pos:position pos:line="64" pos:column="22"/></return>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><operator pos:line="66" pos:column="9">(<pos:position pos:line="66" pos:column="10"/></operator><name pos:line="66" pos:column="10">rv<pos:position pos:line="66" pos:column="12"/></name> <operator pos:line="66" pos:column="13">=<pos:position pos:line="66" pos:column="14"/></operator> <call><name pos:line="66" pos:column="15">apr_dbm_store<pos:position pos:line="66" pos:column="28"/></name><argument_list pos:line="66" pos:column="28">(<argument><expr><name pos:line="66" pos:column="29">dbm<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="34">dbmkey<pos:position pos:line="66" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="42">dbmval<pos:position pos:line="66" pos:column="48"/></name></expr></argument>)<pos:position pos:line="66" pos:column="49"/></argument_list></call><operator pos:line="66" pos:column="49">)<pos:position pos:line="66" pos:column="50"/></operator> <operator pos:line="66" pos:column="51">!=<pos:position pos:line="66" pos:column="53"/></operator> <name pos:line="66" pos:column="54">APR_SUCCESS<pos:position pos:line="66" pos:column="65"/></name></expr>)<pos:position pos:line="66" pos:column="66"/></condition><then pos:line="66" pos:column="66"> <block pos:line="66" pos:column="67">{
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">ap_log_error<pos:position pos:line="67" pos:column="21"/></name><argument_list pos:line="67" pos:column="21">(<argument><expr><name pos:line="67" pos:column="22">APLOG_MARK<pos:position pos:line="67" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="34">APLOG_ERR<pos:position pos:line="67" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="45">rv<pos:position pos:line="67" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="49">s<pos:position pos:line="67" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="68" pos:column="22">"Cannot store SSL session to DBM file `%s'"<pos:position pos:line="68" pos:column="65"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="69" pos:column="22">mc<pos:position pos:line="69" pos:column="24"/></name><operator pos:line="69" pos:column="24">-&gt;<pos:position pos:line="69" pos:column="29"/></operator><name pos:line="69" pos:column="26">szSessionCacheDataFile<pos:position pos:line="69" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">apr_dbm_close<pos:position pos:line="70" pos:column="22"/></name><argument_list pos:line="70" pos:column="22">(<argument><expr><name pos:line="70" pos:column="23">dbm<pos:position pos:line="70" pos:column="26"/></name></expr></argument>)<pos:position pos:line="70" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">ssl_mutex_off<pos:position pos:line="71" pos:column="22"/></name><argument_list pos:line="71" pos:column="22">(<argument><expr><name pos:line="71" pos:column="23">s<pos:position pos:line="71" pos:column="24"/></name></expr></argument>)<pos:position pos:line="71" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">free<pos:position pos:line="72" pos:column="13"/></name><argument_list pos:line="72" pos:column="13">(<argument><expr><name><name pos:line="72" pos:column="14">dbmval<pos:position pos:line="72" pos:column="20"/></name><operator pos:line="72" pos:column="20">.<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="21">dptr<pos:position pos:line="72" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="27"/></expr_stmt>
        <return pos:line="73" pos:column="9">return <expr><name pos:line="73" pos:column="16">FALSE<pos:position pos:line="73" pos:column="21"/></name></expr>;<pos:position pos:line="73" pos:column="22"/></return>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">apr_dbm_close<pos:position pos:line="75" pos:column="18"/></name><argument_list pos:line="75" pos:column="18">(<argument><expr><name pos:line="75" pos:column="19">dbm<pos:position pos:line="75" pos:column="22"/></name></expr></argument>)<pos:position pos:line="75" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">ssl_mutex_off<pos:position pos:line="76" pos:column="18"/></name><argument_list pos:line="76" pos:column="18">(<argument><expr><name pos:line="76" pos:column="19">s<pos:position pos:line="76" pos:column="20"/></name></expr></argument>)<pos:position pos:line="76" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="78" pos:column="5">/* free temporary buffers */</comment>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">free<pos:position pos:line="79" pos:column="9"/></name><argument_list pos:line="79" pos:column="9">(<argument><expr><name><name pos:line="79" pos:column="10">dbmval<pos:position pos:line="79" pos:column="16"/></name><operator pos:line="79" pos:column="16">.<pos:position pos:line="79" pos:column="17"/></operator><name pos:line="79" pos:column="17">dptr<pos:position pos:line="79" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="81" pos:column="5">/* allow the regular expiring to occur */</comment>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">ssl_scache_dbm_expire<pos:position pos:line="82" pos:column="26"/></name><argument_list pos:line="82" pos:column="26">(<argument><expr><name pos:line="82" pos:column="27">s<pos:position pos:line="82" pos:column="28"/></name></expr></argument>)<pos:position pos:line="82" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="30"/></expr_stmt>

    <return pos:line="84" pos:column="5">return <expr><name pos:line="84" pos:column="12">TRUE<pos:position pos:line="84" pos:column="16"/></name></expr>;<pos:position pos:line="84" pos:column="17"/></return>
}<pos:position pos:line="85" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6471.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_task_do<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">h2_task<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">task<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">apr_thread_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">thread<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">task<pos:position pos:line="3" pos:column="25"/></name></expr></argument>)<pos:position pos:line="3" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="27"/></expr_stmt>
    
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">task<pos:position pos:line="5" pos:column="9"/></name><operator pos:line="5" pos:column="9">-&gt;<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="11">input<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">.<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">block<pos:position pos:line="5" pos:column="22"/></name></name> <operator pos:line="5" pos:column="23">=<pos:position pos:line="5" pos:column="24"/></operator> <name pos:line="5" pos:column="25">APR_BLOCK_READ<pos:position pos:line="5" pos:column="39"/></name></expr>;<pos:position pos:line="5" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">task<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">input<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">.<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">chunked<pos:position pos:line="6" pos:column="24"/></name></name> <operator pos:line="6" pos:column="25">=<pos:position pos:line="6" pos:column="26"/></operator> <name><name pos:line="6" pos:column="27">task<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">-&gt;<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="33">request<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">-&gt;<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="42">chunked<pos:position pos:line="6" pos:column="49"/></name></name></expr>;<pos:position pos:line="6" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">task<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">-&gt;<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="11">input<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">.<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">eos<pos:position pos:line="7" pos:column="20"/></name></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <operator pos:line="7" pos:column="23">!<pos:position pos:line="7" pos:column="24"/></operator><name><name pos:line="7" pos:column="24">task<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">request<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">body<pos:position pos:line="7" pos:column="43"/></name></name></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">task<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">input<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">.<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">eos<pos:position pos:line="8" pos:column="24"/></name></name> <operator pos:line="8" pos:column="25">&amp;&amp;<pos:position pos:line="8" pos:column="35"/></operator> <operator pos:line="8" pos:column="28">!<pos:position pos:line="8" pos:column="29"/></operator><name><name pos:line="8" pos:column="29">task<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">-&gt;<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="35">input<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">.<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="41">chunked<pos:position pos:line="8" pos:column="48"/></name></name> <operator pos:line="8" pos:column="49">&amp;&amp;<pos:position pos:line="8" pos:column="59"/></operator> <operator pos:line="8" pos:column="52">!<pos:position pos:line="8" pos:column="53"/></operator><name><name pos:line="8" pos:column="53">task<pos:position pos:line="8" pos:column="57"/></name><operator pos:line="8" pos:column="57">-&gt;<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="59">ser_headers<pos:position pos:line="8" pos:column="70"/></name></name></expr>)<pos:position pos:line="8" pos:column="71"/></condition><then pos:line="8" pos:column="71"> <block pos:line="8" pos:column="72">{
        <comment type="block" pos:line="9" pos:column="9">/* We do not serialize/chunk and have eos already, no need to
         * create a bucket brigade. */</comment>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">task<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">input<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">.<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="21">bb<pos:position pos:line="11" pos:column="23"/></name></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">NULL<pos:position pos:line="11" pos:column="30"/></name></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">task<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">input<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">.<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">eos_written<pos:position pos:line="12" pos:column="32"/></name></name> <operator pos:line="12" pos:column="33">=<pos:position pos:line="12" pos:column="34"/></operator> <literal type="number" pos:line="12" pos:column="35">1<pos:position pos:line="12" pos:column="36"/></literal></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then>
    <else pos:line="14" pos:column="5">else <block pos:line="14" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">task<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">input<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">.<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">bb<pos:position pos:line="15" pos:column="23"/></name></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <call><name pos:line="15" pos:column="26">apr_brigade_create<pos:position pos:line="15" pos:column="44"/></name><argument_list pos:line="15" pos:column="44">(<argument><expr><name><name pos:line="15" pos:column="45">task<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">-&gt;<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="51">pool<pos:position pos:line="15" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="57">task<pos:position pos:line="15" pos:column="61"/></name><operator pos:line="15" pos:column="61">-&gt;<pos:position pos:line="15" pos:column="66"/></operator><name pos:line="15" pos:column="63">c<pos:position pos:line="15" pos:column="64"/></name><operator pos:line="15" pos:column="64">-&gt;<pos:position pos:line="15" pos:column="69"/></operator><name pos:line="15" pos:column="66">bucket_alloc<pos:position pos:line="15" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="80"/></expr_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">task<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">ser_headers<pos:position pos:line="16" pos:column="30"/></name></name></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31"> <block pos:line="16" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">ap_log_cerror<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">APLOG_MARK<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="39">APLOG_TRACE1<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="53">0<pos:position pos:line="17" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="56">task<pos:position pos:line="17" pos:column="60"/></name><operator pos:line="17" pos:column="60">-&gt;<pos:position pos:line="17" pos:column="65"/></operator><name pos:line="17" pos:column="62">c<pos:position pos:line="17" pos:column="63"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="18" pos:column="27">"h2_task(%s): serialize request %s %s"<pos:position pos:line="18" pos:column="65"/></literal></expr></argument>, 
                          <argument><expr><name><name pos:line="19" pos:column="27">task<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">id<pos:position pos:line="19" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="37">task<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">-&gt;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="43">request<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">-&gt;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="52">method<pos:position pos:line="19" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="60">task<pos:position pos:line="19" pos:column="64"/></name><operator pos:line="19" pos:column="64">-&gt;<pos:position pos:line="19" pos:column="69"/></operator><name pos:line="19" pos:column="66">request<pos:position pos:line="19" pos:column="73"/></name><operator pos:line="19" pos:column="73">-&gt;<pos:position pos:line="19" pos:column="78"/></operator><name pos:line="19" pos:column="75">path<pos:position pos:line="19" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">apr_brigade_printf<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name><name pos:line="20" pos:column="32">task<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">-&gt;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="38">input<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">.<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="44">bb<pos:position pos:line="20" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="48">NULL<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, 
                               <argument><expr><name pos:line="21" pos:column="32">NULL<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="38">"%s %s HTTP/1.1\r\n"<pos:position pos:line="21" pos:column="58"/></literal></expr></argument>, 
                               <argument><expr><name><name pos:line="22" pos:column="32">task<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="38">request<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">-&gt;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="47">method<pos:position pos:line="22" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="55">task<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">-&gt;<pos:position pos:line="22" pos:column="64"/></operator><name pos:line="22" pos:column="61">request<pos:position pos:line="22" pos:column="68"/></name><operator pos:line="22" pos:column="68">-&gt;<pos:position pos:line="22" pos:column="73"/></operator><name pos:line="22" pos:column="70">path<pos:position pos:line="22" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">apr_table_do<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">input_ser_header<pos:position pos:line="23" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="44">task<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="50">task<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">-&gt;<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="56">request<pos:position pos:line="23" pos:column="63"/></name><operator pos:line="23" pos:column="63">-&gt;<pos:position pos:line="23" pos:column="68"/></operator><name pos:line="23" pos:column="65">headers<pos:position pos:line="23" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="74">NULL<pos:position pos:line="23" pos:column="78"/></name></expr></argument>)<pos:position pos:line="23" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">apr_brigade_puts<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name><name pos:line="24" pos:column="30">task<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">input<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">.<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="42">bb<pos:position pos:line="24" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="46">NULL<pos:position pos:line="24" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="52">NULL<pos:position pos:line="24" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="58">"\r\n"<pos:position pos:line="24" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">task<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">input<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">.<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">eos<pos:position pos:line="26" pos:column="28"/></name></name></expr>)<pos:position pos:line="26" pos:column="29"/></condition><then pos:line="26" pos:column="29"> <block pos:line="26" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">input_append_eos<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">task<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="36">NULL<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
    }<pos:position pos:line="29" pos:column="6"/></block></else></if>
    
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">task<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">output<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">.<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">from_h1<pos:position pos:line="31" pos:column="25"/></name></name> <operator pos:line="31" pos:column="26">=<pos:position pos:line="31" pos:column="27"/></operator> <call><name pos:line="31" pos:column="28">h2_from_h1_create<pos:position pos:line="31" pos:column="45"/></name><argument_list pos:line="31" pos:column="45">(<argument><expr><name><name pos:line="31" pos:column="46">task<pos:position pos:line="31" pos:column="50"/></name><operator pos:line="31" pos:column="50">-&gt;<pos:position pos:line="31" pos:column="55"/></operator><name pos:line="31" pos:column="52">stream_id<pos:position pos:line="31" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="63">task<pos:position pos:line="31" pos:column="67"/></name><operator pos:line="31" pos:column="67">-&gt;<pos:position pos:line="31" pos:column="72"/></operator><name pos:line="31" pos:column="69">pool<pos:position pos:line="31" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="75"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">ap_log_cerror<pos:position pos:line="33" pos:column="18"/></name><argument_list pos:line="33" pos:column="18">(<argument><expr><name pos:line="33" pos:column="19">APLOG_MARK<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="31">APLOG_TRACE1<pos:position pos:line="33" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="45">0<pos:position pos:line="33" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="48">task<pos:position pos:line="33" pos:column="52"/></name><operator pos:line="33" pos:column="52">-&gt;<pos:position pos:line="33" pos:column="57"/></operator><name pos:line="33" pos:column="54">c<pos:position pos:line="33" pos:column="55"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="34" pos:column="19">"h2_task(%s): process connection"<pos:position pos:line="34" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="54">task<pos:position pos:line="34" pos:column="58"/></name><operator pos:line="34" pos:column="58">-&gt;<pos:position pos:line="34" pos:column="63"/></operator><name pos:line="34" pos:column="60">id<pos:position pos:line="34" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">task<pos:position pos:line="35" pos:column="9"/></name><operator pos:line="35" pos:column="9">-&gt;<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="11">c<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">current_thread<pos:position pos:line="35" pos:column="28"/></name></name> <operator pos:line="35" pos:column="29">=<pos:position pos:line="35" pos:column="30"/></operator> <name pos:line="35" pos:column="31">thread<pos:position pos:line="35" pos:column="37"/></name></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt> 
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">ap_run_process_connection<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><name><name pos:line="36" pos:column="31">task<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">-&gt;<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="37">c<pos:position pos:line="36" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
    
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">task<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">frozen<pos:position pos:line="38" pos:column="21"/></name></name></expr>)<pos:position pos:line="38" pos:column="22"/></condition><then pos:line="38" pos:column="22"> <block pos:line="38" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">ap_log_cerror<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><name pos:line="39" pos:column="23">APLOG_MARK<pos:position pos:line="39" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="35">APLOG_TRACE1<pos:position pos:line="39" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="49">0<pos:position pos:line="39" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="52">task<pos:position pos:line="39" pos:column="56"/></name><operator pos:line="39" pos:column="56">-&gt;<pos:position pos:line="39" pos:column="61"/></operator><name pos:line="39" pos:column="58">c<pos:position pos:line="39" pos:column="59"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="40" pos:column="23">"h2_task(%s): process_conn returned frozen task"<pos:position pos:line="40" pos:column="71"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="41" pos:column="23">task<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">id<pos:position pos:line="41" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>
        <comment type="block" pos:line="42" pos:column="9">/* cleanup delayed */</comment>
        <return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">APR_EAGAIN<pos:position pos:line="43" pos:column="26"/></name></expr>;<pos:position pos:line="43" pos:column="27"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then>
    <else pos:line="45" pos:column="5">else <block pos:line="45" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">ap_log_cerror<pos:position pos:line="46" pos:column="22"/></name><argument_list pos:line="46" pos:column="22">(<argument><expr><name pos:line="46" pos:column="23">APLOG_MARK<pos:position pos:line="46" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="35">APLOG_TRACE1<pos:position pos:line="46" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="49">0<pos:position pos:line="46" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="52">task<pos:position pos:line="46" pos:column="56"/></name><operator pos:line="46" pos:column="56">-&gt;<pos:position pos:line="46" pos:column="61"/></operator><name pos:line="46" pos:column="58">c<pos:position pos:line="46" pos:column="59"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="47" pos:column="23">"h2_task(%s): processing done"<pos:position pos:line="47" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="55">task<pos:position pos:line="47" pos:column="59"/></name><operator pos:line="47" pos:column="59">-&gt;<pos:position pos:line="47" pos:column="64"/></operator><name pos:line="47" pos:column="61">id<pos:position pos:line="47" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="65"/></expr_stmt>
        <return pos:line="48" pos:column="9">return <expr><call><name pos:line="48" pos:column="16">output_finish<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name pos:line="48" pos:column="30">task<pos:position pos:line="48" pos:column="34"/></name></expr></argument>)<pos:position pos:line="48" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="36"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></else></if>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

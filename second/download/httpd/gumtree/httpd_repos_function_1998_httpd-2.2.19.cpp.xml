<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1998_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">gen_nonce_hash<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">hash<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">timestr<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="61">const<pos:position pos:line="1" pos:column="66"/></specifier> <name pos:line="1" pos:column="67">char<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">opaque<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">server_rec<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">server<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="3" pos:column="28">const<pos:position pos:line="3" pos:column="33"/></specifier> <name pos:line="3" pos:column="34">digest_config_rec<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">conf<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="58"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">hex<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="string" pos:line="5" pos:column="23">"0123456789abcdef"<pos:position pos:line="5" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">char<pos:position pos:line="6" pos:column="18"/></name></type> <name><name pos:line="6" pos:column="19">sha1<pos:position pos:line="6" pos:column="23"/></name><index pos:line="6" pos:column="23">[<expr><name pos:line="6" pos:column="24">APR_SHA1_DIGESTSIZE<pos:position pos:line="6" pos:column="43"/></name></expr>]<pos:position pos:line="6" pos:column="44"/></index></name></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_sha1_ctx_t<pos:position pos:line="7" pos:column="19"/></name></type> <name pos:line="7" pos:column="20">ctx<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">idx<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">memcpy<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><operator pos:line="10" pos:column="12">&amp;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="13">ctx<pos:position pos:line="10" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="18">&amp;<pos:position pos:line="10" pos:column="23"/></operator><name><name pos:line="10" pos:column="19">conf<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">nonce_ctx<pos:position pos:line="10" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="36">sizeof<argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">ctx<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt>
    <comment type="block" pos:line="11" pos:column="5">/*
    apr_sha1_update_binary(&amp;ctx, (const unsigned char *) server-&gt;server_hostname,
                         strlen(server-&gt;server_hostname));
    apr_sha1_update_binary(&amp;ctx, (const unsigned char *) &amp;server-&gt;port,
                         sizeof(server-&gt;port));
     */</comment>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">apr_sha1_update_binary<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><operator pos:line="17" pos:column="28">&amp;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="29">ctx<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="34">(<pos:position pos:line="17" pos:column="35"/></operator><specifier pos:line="17" pos:column="35">const<pos:position pos:line="17" pos:column="40"/></specifier> <name pos:line="17" pos:column="41">unsigned<pos:position pos:line="17" pos:column="49"/></name> <name pos:line="17" pos:column="50">char<pos:position pos:line="17" pos:column="54"/></name> <operator pos:line="17" pos:column="55">*<pos:position pos:line="17" pos:column="56"/></operator><operator pos:line="17" pos:column="56">)<pos:position pos:line="17" pos:column="57"/></operator> <name pos:line="17" pos:column="58">timestr<pos:position pos:line="17" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="67">strlen<pos:position pos:line="17" pos:column="73"/></name><argument_list pos:line="17" pos:column="73">(<argument><expr><name pos:line="17" pos:column="74">timestr<pos:position pos:line="17" pos:column="81"/></name></expr></argument>)<pos:position pos:line="17" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="84"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">opaque<pos:position pos:line="18" pos:column="15"/></name></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16"> <block pos:line="18" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">apr_sha1_update_binary<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><operator pos:line="19" pos:column="32">&amp;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="33">ctx<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="38">(<pos:position pos:line="19" pos:column="39"/></operator><specifier pos:line="19" pos:column="39">const<pos:position pos:line="19" pos:column="44"/></specifier> <name pos:line="19" pos:column="45">unsigned<pos:position pos:line="19" pos:column="53"/></name> <name pos:line="19" pos:column="54">char<pos:position pos:line="19" pos:column="58"/></name> <operator pos:line="19" pos:column="59">*<pos:position pos:line="19" pos:column="60"/></operator><operator pos:line="19" pos:column="60">)<pos:position pos:line="19" pos:column="61"/></operator> <name pos:line="19" pos:column="62">opaque<pos:position pos:line="19" pos:column="68"/></name></expr></argument>,
                             <argument><expr><call><name pos:line="20" pos:column="30">strlen<pos:position pos:line="20" pos:column="36"/></name><argument_list pos:line="20" pos:column="36">(<argument><expr><name pos:line="20" pos:column="37">opaque<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">apr_sha1_final<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name pos:line="22" pos:column="20">sha1<pos:position pos:line="22" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="26">&amp;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="27">ctx<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>

    <for pos:line="24" pos:column="5">for <control pos:line="24" pos:column="9">(<init><expr><name pos:line="24" pos:column="10">idx<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator><literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>;<pos:position pos:line="24" pos:column="16"/></init> <condition><expr><name pos:line="24" pos:column="17">idx<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">&lt;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="21">APR_SHA1_DIGESTSIZE<pos:position pos:line="24" pos:column="40"/></name></expr>;<pos:position pos:line="24" pos:column="41"/></condition> <incr><expr><name pos:line="24" pos:column="42">idx<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">++<pos:position pos:line="24" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="48"/></control> <block pos:line="24" pos:column="49">{
        <expr_stmt><expr><operator pos:line="25" pos:column="9">*<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">hash<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">++<pos:position pos:line="25" pos:column="16"/></operator> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <name><name pos:line="25" pos:column="19">hex<pos:position pos:line="25" pos:column="22"/></name><index pos:line="25" pos:column="22">[<expr><name><name pos:line="25" pos:column="23">sha1<pos:position pos:line="25" pos:column="27"/></name><index pos:line="25" pos:column="27">[<expr><name pos:line="25" pos:column="28">idx<pos:position pos:line="25" pos:column="31"/></name></expr>]<pos:position pos:line="25" pos:column="32"/></index></name> <operator pos:line="25" pos:column="33">&gt;&gt;<pos:position pos:line="25" pos:column="38"/></operator> <literal type="number" pos:line="25" pos:column="36">4<pos:position pos:line="25" pos:column="37"/></literal></expr>]<pos:position pos:line="25" pos:column="38"/></index></name></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">hash<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">++<pos:position pos:line="26" pos:column="16"/></operator> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <name><name pos:line="26" pos:column="19">hex<pos:position pos:line="26" pos:column="22"/></name><index pos:line="26" pos:column="22">[<expr><name><name pos:line="26" pos:column="23">sha1<pos:position pos:line="26" pos:column="27"/></name><index pos:line="26" pos:column="27">[<expr><name pos:line="26" pos:column="28">idx<pos:position pos:line="26" pos:column="31"/></name></expr>]<pos:position pos:line="26" pos:column="32"/></index></name> <operator pos:line="26" pos:column="33">&amp;<pos:position pos:line="26" pos:column="38"/></operator> <literal type="number" pos:line="26" pos:column="35">0xF<pos:position pos:line="26" pos:column="38"/></literal></expr>]<pos:position pos:line="26" pos:column="39"/></index></name></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></for>

    <expr_stmt><expr><operator pos:line="29" pos:column="5">*<pos:position pos:line="29" pos:column="6"/></operator><name pos:line="29" pos:column="6">hash<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">++<pos:position pos:line="29" pos:column="12"/></operator> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <literal type="char" pos:line="29" pos:column="15">'\0'<pos:position pos:line="29" pos:column="19"/></literal></expr>;<pos:position pos:line="29" pos:column="20"/></expr_stmt>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

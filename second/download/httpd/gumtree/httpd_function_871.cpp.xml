<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_871.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">RSA<pos:position pos:line="1" pos:column="4"/></name> <modifier pos:line="1" pos:column="5">*<pos:position pos:line="1" pos:column="6"/></modifier></type><name pos:line="1" pos:column="6">ssl_callback_TmpRSA<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">SSL<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">ssl<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">export<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">keylen<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">conn_rec<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">c<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><operator pos:line="3" pos:column="19">(<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="20">conn_rec<pos:position pos:line="3" pos:column="28"/></name> <operator pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></operator><operator pos:line="3" pos:column="30">)<pos:position pos:line="3" pos:column="31"/></operator><call><name pos:line="3" pos:column="31">SSL_get_app_data<pos:position pos:line="3" pos:column="47"/></name><argument_list pos:line="3" pos:column="47">(<argument><expr><name pos:line="3" pos:column="48">ssl<pos:position pos:line="3" pos:column="51"/></name></expr></argument>)<pos:position pos:line="3" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SSLModConfigRec<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">mc<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><call><name pos:line="4" pos:column="27">myModConfig<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name><name pos:line="4" pos:column="39">c<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">-&gt;<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="42">base_server<pos:position pos:line="4" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">idx<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">ap_log_error<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">APLOG_MARK<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="30">APLOG_DEBUG<pos:position pos:line="7" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="43">0<pos:position pos:line="7" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="46">c<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">-&gt;<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="49">base_server<pos:position pos:line="7" pos:column="60"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="8" pos:column="18">"handing out temporary %d bit RSA key"<pos:position pos:line="8" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="58">keylen<pos:position pos:line="8" pos:column="64"/></name></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="66"/></expr_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* doesn't matter if export flag is on,
     * we won't be asked for keylen &gt; 512 in that case.
     * if we are asked for a keylen &gt; 1024, it is too expensive
     * to generate on the fly.
     * XXX: any reason not to generate 2048 bit keys at startup?
     */</comment>

    <switch pos:line="17" pos:column="5">switch <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">keylen<pos:position pos:line="17" pos:column="19"/></name></expr>)<pos:position pos:line="17" pos:column="20"/></condition> <block pos:line="17" pos:column="21">{
      <case pos:line="18" pos:column="7">case <expr><literal type="number" pos:line="18" pos:column="12">512<pos:position pos:line="18" pos:column="15"/></literal></expr>:<pos:position pos:line="18" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="19" pos:column="9">idx<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">SSL_TMP_KEY_RSA_512<pos:position pos:line="19" pos:column="34"/></name></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
        <break pos:line="20" pos:column="9">break;<pos:position pos:line="20" pos:column="15"/></break>

      <case pos:line="22" pos:column="7">case <expr><literal type="number" pos:line="22" pos:column="12">1024<pos:position pos:line="22" pos:column="16"/></literal></expr>:<pos:position pos:line="22" pos:column="17"/></case>
      <default pos:line="23" pos:column="7">default:<pos:position pos:line="23" pos:column="15"/></default>
        <expr_stmt><expr><name pos:line="24" pos:column="9">idx<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">SSL_TMP_KEY_RSA_1024<pos:position pos:line="24" pos:column="35"/></name></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></switch>

    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">RSA<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">*<pos:position pos:line="27" pos:column="18"/></operator><operator pos:line="27" pos:column="18">)<pos:position pos:line="27" pos:column="19"/></operator><name><name pos:line="27" pos:column="19">mc<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">pTmpKeys<pos:position pos:line="27" pos:column="31"/></name><index pos:line="27" pos:column="31">[<expr><name pos:line="27" pos:column="32">idx<pos:position pos:line="27" pos:column="35"/></name></expr>]<pos:position pos:line="27" pos:column="36"/></index></name></expr>;<pos:position pos:line="27" pos:column="37"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7318.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BOOL<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">SSL_X509_match_name<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">apr_pool_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">p<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">X509<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">x509<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">name<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">BOOL<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">allow_wildcard<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">server_rec<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">s<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">BOOL<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">matched<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><name pos:line="4" pos:column="20">FALSE<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_array_header_t<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">ids<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/*
     * At some day in the future, this might be replaced with X509_check_host()
     * (available in OpenSSL 1.0.2 and later), but two points should be noted:
     * 1) wildcard matching in X509_check_host() might yield different
     *    results (by default, it supports a broader set of patterns, e.g.
     *    wildcards in non-initial positions);
     * 2) we lose the option of logging each DNS- and CN-ID (until a match
     *    is found).
     */</comment>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">SSL_X509_getIDs<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">p<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="28">x509<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="34">&amp;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="35">ids<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="40"/></condition><then pos:line="17" pos:column="40"> <block pos:line="17" pos:column="41">{
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">const<pos:position pos:line="18" pos:column="14"/></specifier> <name pos:line="18" pos:column="15">char<pos:position pos:line="18" pos:column="19"/></name> <modifier pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></modifier></type><name pos:line="18" pos:column="21">cp<pos:position pos:line="18" pos:column="23"/></name></decl>;<pos:position pos:line="18" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">int<pos:position pos:line="19" pos:column="12"/></name></type> <name pos:line="19" pos:column="13">i<pos:position pos:line="19" pos:column="14"/></name></decl>;<pos:position pos:line="19" pos:column="15"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">char<pos:position pos:line="20" pos:column="13"/></name> <modifier pos:line="20" pos:column="14">*<pos:position pos:line="20" pos:column="15"/></modifier><modifier pos:line="20" pos:column="15">*<pos:position pos:line="20" pos:column="16"/></modifier></type><name pos:line="20" pos:column="16">id<pos:position pos:line="20" pos:column="18"/></name> <init pos:line="20" pos:column="19">= <expr><operator pos:line="20" pos:column="21">(<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">char<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">*<pos:position pos:line="20" pos:column="28"/></operator><operator pos:line="20" pos:column="28">*<pos:position pos:line="20" pos:column="29"/></operator><operator pos:line="20" pos:column="29">)<pos:position pos:line="20" pos:column="30"/></operator><name><name pos:line="20" pos:column="30">ids<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">elts<pos:position pos:line="20" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="20" pos:column="40"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">BOOL<pos:position pos:line="21" pos:column="13"/></name></type> <name pos:line="21" pos:column="14">is_wildcard<pos:position pos:line="21" pos:column="25"/></name></decl>;<pos:position pos:line="21" pos:column="26"/></decl_stmt>

        <for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">i<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">0<pos:position pos:line="23" pos:column="19"/></literal></expr>;<pos:position pos:line="23" pos:column="20"/></init> <condition><expr><name pos:line="23" pos:column="21">i<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">&lt;<pos:position pos:line="23" pos:column="27"/></operator> <name><name pos:line="23" pos:column="25">ids<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">nelts<pos:position pos:line="23" pos:column="35"/></name></name></expr>;<pos:position pos:line="23" pos:column="36"/></condition> <incr><expr><name pos:line="23" pos:column="37">i<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">++<pos:position pos:line="23" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="41"/></control> <block pos:line="23" pos:column="42">{
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><operator pos:line="24" pos:column="17">!<pos:position pos:line="24" pos:column="18"/></operator><name><name pos:line="24" pos:column="18">id<pos:position pos:line="24" pos:column="20"/></name><index pos:line="24" pos:column="20">[<expr><name pos:line="24" pos:column="21">i<pos:position pos:line="24" pos:column="22"/></name></expr>]<pos:position pos:line="24" pos:column="23"/></index></name></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then pos:line="24" pos:column="24">
                <block type="pseudo"><continue pos:line="25" pos:column="17">continue;<pos:position pos:line="25" pos:column="26"/></continue></block></then></if>

            <comment type="block" pos:line="27" pos:column="13">/*
             * Determine if it is a wildcard ID - we're restrictive
             * in the sense that we require the wildcard character to be
             * THE left-most label (i.e., the ID must start with "*.")
             */</comment>
            <expr_stmt><expr><name pos:line="32" pos:column="13">is_wildcard<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">=<pos:position pos:line="32" pos:column="26"/></operator> <ternary><condition><expr><operator pos:line="32" pos:column="27">(<pos:position pos:line="32" pos:column="28"/></operator><operator pos:line="32" pos:column="28">*<pos:position pos:line="32" pos:column="29"/></operator><name><name pos:line="32" pos:column="29">id<pos:position pos:line="32" pos:column="31"/></name><index pos:line="32" pos:column="31">[<expr><name pos:line="32" pos:column="32">i<pos:position pos:line="32" pos:column="33"/></name></expr>]<pos:position pos:line="32" pos:column="34"/></index></name> <operator pos:line="32" pos:column="35">==<pos:position pos:line="32" pos:column="37"/></operator> <literal type="char" pos:line="32" pos:column="38">'*'<pos:position pos:line="32" pos:column="41"/></literal> <operator pos:line="32" pos:column="42">&amp;&amp;<pos:position pos:line="32" pos:column="52"/></operator> <operator pos:line="32" pos:column="45">*<pos:position pos:line="32" pos:column="46"/></operator><operator pos:line="32" pos:column="46">(<pos:position pos:line="32" pos:column="47"/></operator><name><name pos:line="32" pos:column="47">id<pos:position pos:line="32" pos:column="49"/></name><index pos:line="32" pos:column="49">[<expr><name pos:line="32" pos:column="50">i<pos:position pos:line="32" pos:column="51"/></name></expr>]<pos:position pos:line="32" pos:column="52"/></index></name><operator pos:line="32" pos:column="52">+<pos:position pos:line="32" pos:column="53"/></operator><literal type="number" pos:line="32" pos:column="53">1<pos:position pos:line="32" pos:column="54"/></literal><operator pos:line="32" pos:column="54">)<pos:position pos:line="32" pos:column="55"/></operator> <operator pos:line="32" pos:column="56">==<pos:position pos:line="32" pos:column="58"/></operator> <literal type="char" pos:line="32" pos:column="59">'.'<pos:position pos:line="32" pos:column="62"/></literal><operator pos:line="32" pos:column="62">)<pos:position pos:line="32" pos:column="63"/></operator></expr> ?<pos:position pos:line="32" pos:column="65"/></condition><then pos:line="32" pos:column="65"> <expr><name pos:line="32" pos:column="66">TRUE<pos:position pos:line="32" pos:column="70"/></name></expr> <pos:position pos:line="32" pos:column="71"/></then><else pos:line="32" pos:column="71">: <expr><name pos:line="32" pos:column="73">FALSE<pos:position pos:line="32" pos:column="78"/></name></expr></else></ternary></expr>;<pos:position pos:line="32" pos:column="79"/></expr_stmt>

            <comment type="block" pos:line="34" pos:column="13">/*
             * If the ID includes a wildcard character (and the caller is
             * allowing wildcards), check if it matches for the left-most
             * DNS label - i.e., the wildcard character is not allowed
             * to match a dot. Otherwise, try a simple string compare.
             */</comment>
            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><operator pos:line="40" pos:column="17">(<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="18">allow_wildcard<pos:position pos:line="40" pos:column="32"/></name> <operator pos:line="40" pos:column="33">==<pos:position pos:line="40" pos:column="35"/></operator> <name pos:line="40" pos:column="36">TRUE<pos:position pos:line="40" pos:column="40"/></name> <operator pos:line="40" pos:column="41">&amp;&amp;<pos:position pos:line="40" pos:column="51"/></operator> <name pos:line="40" pos:column="44">is_wildcard<pos:position pos:line="40" pos:column="55"/></name> <operator pos:line="40" pos:column="56">==<pos:position pos:line="40" pos:column="58"/></operator> <name pos:line="40" pos:column="59">TRUE<pos:position pos:line="40" pos:column="63"/></name> <operator pos:line="40" pos:column="64">&amp;&amp;<pos:position pos:line="40" pos:column="74"/></operator>
                 <operator pos:line="41" pos:column="18">(<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">cp<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <call><name pos:line="41" pos:column="24">ap_strchr_c<pos:position pos:line="41" pos:column="35"/></name><argument_list pos:line="41" pos:column="35">(<argument><expr><name pos:line="41" pos:column="36">name<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="41" pos:column="42">'.'<pos:position pos:line="41" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call><operator pos:line="41" pos:column="46">)<pos:position pos:line="41" pos:column="47"/></operator> <operator pos:line="41" pos:column="48">&amp;&amp;<pos:position pos:line="41" pos:column="58"/></operator> <operator pos:line="41" pos:column="51">!<pos:position pos:line="41" pos:column="52"/></operator><call><name pos:line="41" pos:column="52">strcasecmp<pos:position pos:line="41" pos:column="62"/></name><argument_list pos:line="41" pos:column="62">(<argument><expr><name><name pos:line="41" pos:column="63">id<pos:position pos:line="41" pos:column="65"/></name><index pos:line="41" pos:column="65">[<expr><name pos:line="41" pos:column="66">i<pos:position pos:line="41" pos:column="67"/></name></expr>]<pos:position pos:line="41" pos:column="68"/></index></name><operator pos:line="41" pos:column="68">+<pos:position pos:line="41" pos:column="69"/></operator><literal type="number" pos:line="41" pos:column="69">1<pos:position pos:line="41" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="72">cp<pos:position pos:line="41" pos:column="74"/></name></expr></argument>)<pos:position pos:line="41" pos:column="75"/></argument_list></call><operator pos:line="41" pos:column="75">)<pos:position pos:line="41" pos:column="76"/></operator> <operator pos:line="41" pos:column="77">||<pos:position pos:line="41" pos:column="79"/></operator>
                <operator pos:line="42" pos:column="17">!<pos:position pos:line="42" pos:column="18"/></operator><call><name pos:line="42" pos:column="18">strcasecmp<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name><name pos:line="42" pos:column="29">id<pos:position pos:line="42" pos:column="31"/></name><index pos:line="42" pos:column="31">[<expr><name pos:line="42" pos:column="32">i<pos:position pos:line="42" pos:column="33"/></name></expr>]<pos:position pos:line="42" pos:column="34"/></index></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="36">name<pos:position pos:line="42" pos:column="40"/></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="42"/></condition><then pos:line="42" pos:column="42"> <block pos:line="42" pos:column="43">{
                <expr_stmt><expr><name pos:line="43" pos:column="17">matched<pos:position pos:line="43" pos:column="24"/></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <name pos:line="43" pos:column="27">TRUE<pos:position pos:line="43" pos:column="31"/></name></expr>;<pos:position pos:line="43" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="44" pos:column="14"/></block></then></if>

            <if pos:line="46" pos:column="13">if <condition pos:line="46" pos:column="16">(<expr><name pos:line="46" pos:column="17">s<pos:position pos:line="46" pos:column="18"/></name></expr>)<pos:position pos:line="46" pos:column="19"/></condition><then pos:line="46" pos:column="19"> <block pos:line="46" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="47" pos:column="17">ap_log_error<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">APLOG_MARK<pos:position pos:line="47" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="42">APLOG_TRACE3<pos:position pos:line="47" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="56">0<pos:position pos:line="47" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="59">s<pos:position pos:line="47" pos:column="60"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="48" pos:column="30">"[%s] SSL_X509_match_name: expecting name '%s', "<pos:position pos:line="48" pos:column="79"/></literal>
                             <literal type="string" pos:line="49" pos:column="30">"%smatched by ID '%s'"<pos:position pos:line="49" pos:column="52"/></literal></expr></argument>,
                             <argument><expr><operator pos:line="50" pos:column="30">(<pos:position pos:line="50" pos:column="31"/></operator><call><name pos:line="50" pos:column="31">mySrvConfig<pos:position pos:line="50" pos:column="42"/></name><argument_list pos:line="50" pos:column="42">(<argument><expr><name pos:line="50" pos:column="43">s<pos:position pos:line="50" pos:column="44"/></name></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call><operator pos:line="50" pos:column="45">)<pos:position pos:line="50" pos:column="46"/></operator><operator pos:line="50" pos:column="46">-&gt;<pos:position pos:line="50" pos:column="51"/></operator><name pos:line="50" pos:column="48">vhost_id<pos:position pos:line="50" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="58">name<pos:position pos:line="50" pos:column="62"/></name></expr></argument>,
                             <argument><expr><ternary><condition><expr><name pos:line="51" pos:column="30">matched<pos:position pos:line="51" pos:column="37"/></name> <operator pos:line="51" pos:column="38">==<pos:position pos:line="51" pos:column="40"/></operator> <name pos:line="51" pos:column="41">TRUE<pos:position pos:line="51" pos:column="45"/></name></expr> ?<pos:position pos:line="51" pos:column="47"/></condition><then pos:line="51" pos:column="47"> <expr><literal type="string" pos:line="51" pos:column="48">""<pos:position pos:line="51" pos:column="50"/></literal></expr> <pos:position pos:line="51" pos:column="51"/></then><else pos:line="51" pos:column="51">: <expr><literal type="string" pos:line="51" pos:column="53">"NOT "<pos:position pos:line="51" pos:column="59"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="61">id<pos:position pos:line="51" pos:column="63"/></name><index pos:line="51" pos:column="63">[<expr><name pos:line="51" pos:column="64">i<pos:position pos:line="51" pos:column="65"/></name></expr>]<pos:position pos:line="51" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="51" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="52" pos:column="14"/></block></then></if>

            <if pos:line="54" pos:column="13">if <condition pos:line="54" pos:column="16">(<expr><name pos:line="54" pos:column="17">matched<pos:position pos:line="54" pos:column="24"/></name> <operator pos:line="54" pos:column="25">==<pos:position pos:line="54" pos:column="27"/></operator> <name pos:line="54" pos:column="28">TRUE<pos:position pos:line="54" pos:column="32"/></name></expr>)<pos:position pos:line="54" pos:column="33"/></condition><then pos:line="54" pos:column="33"> <block pos:line="54" pos:column="34">{
                <break pos:line="55" pos:column="17">break;<pos:position pos:line="55" pos:column="23"/></break>
            }<pos:position pos:line="56" pos:column="14"/></block></then></if>
        }<pos:position pos:line="57" pos:column="10"/></block></for>

    }<pos:position pos:line="59" pos:column="6"/></block></then></if>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">s<pos:position pos:line="61" pos:column="10"/></name></expr>)<pos:position pos:line="61" pos:column="11"/></condition><then pos:line="61" pos:column="11"> <block pos:line="61" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">ssl_log_xerror<pos:position pos:line="62" pos:column="23"/></name><argument_list pos:line="62" pos:column="23">(<argument><expr><name pos:line="62" pos:column="24">SSLLOG_MARK<pos:position pos:line="62" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="37">APLOG_DEBUG<pos:position pos:line="62" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="50">0<pos:position pos:line="62" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="53">p<pos:position pos:line="62" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="56">s<pos:position pos:line="62" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="59">x509<pos:position pos:line="62" pos:column="63"/></name></expr></argument>,
                       <argument><expr><call><name pos:line="63" pos:column="24">APLOGNO<pos:position pos:line="63" pos:column="31"/></name><argument_list pos:line="63" pos:column="31">(<argument><expr><literal type="number" pos:line="63" pos:column="32">02412<pos:position pos:line="63" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="38"/></argument_list></call> <literal type="string" pos:line="63" pos:column="39">"[%s] Cert %s for name '%s'"<pos:position pos:line="63" pos:column="67"/></literal></expr></argument>,
                       <argument><expr><operator pos:line="64" pos:column="24">(<pos:position pos:line="64" pos:column="25"/></operator><call><name pos:line="64" pos:column="25">mySrvConfig<pos:position pos:line="64" pos:column="36"/></name><argument_list pos:line="64" pos:column="36">(<argument><expr><name pos:line="64" pos:column="37">s<pos:position pos:line="64" pos:column="38"/></name></expr></argument>)<pos:position pos:line="64" pos:column="39"/></argument_list></call><operator pos:line="64" pos:column="39">)<pos:position pos:line="64" pos:column="40"/></operator><operator pos:line="64" pos:column="40">-&gt;<pos:position pos:line="64" pos:column="45"/></operator><name pos:line="64" pos:column="42">vhost_id<pos:position pos:line="64" pos:column="50"/></name></expr></argument>,
                       <argument><expr><ternary><condition><expr><name pos:line="65" pos:column="24">matched<pos:position pos:line="65" pos:column="31"/></name> <operator pos:line="65" pos:column="32">==<pos:position pos:line="65" pos:column="34"/></operator> <name pos:line="65" pos:column="35">TRUE<pos:position pos:line="65" pos:column="39"/></name></expr> ?<pos:position pos:line="65" pos:column="41"/></condition><then pos:line="65" pos:column="41"> <expr><literal type="string" pos:line="65" pos:column="42">"matches"<pos:position pos:line="65" pos:column="51"/></literal></expr> <pos:position pos:line="65" pos:column="52"/></then><else pos:line="65" pos:column="52">: <expr><literal type="string" pos:line="65" pos:column="54">"does not match"<pos:position pos:line="65" pos:column="70"/></literal></expr></else></ternary></expr></argument>,
                       <argument><expr><name pos:line="66" pos:column="24">name<pos:position pos:line="66" pos:column="28"/></name></expr></argument>)<pos:position pos:line="66" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <return pos:line="69" pos:column="5">return <expr><name pos:line="69" pos:column="12">matched<pos:position pos:line="69" pos:column="19"/></name></expr>;<pos:position pos:line="69" pos:column="20"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

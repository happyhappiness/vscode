<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1773_httpd-2.2.15.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_secure_listener<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">cmd_parms<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">cmd<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">void<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">dummy<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                                       <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">ips<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="57">const<pos:position pos:line="2" pos:column="62"/></specifier> <name pos:line="2" pos:column="63">char<pos:position pos:line="2" pos:column="67"/></name><modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type> <name pos:line="2" pos:column="69">key<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
                                       <parameter><decl><type><specifier pos:line="3" pos:column="40">const<pos:position pos:line="3" pos:column="45"/></specifier> <name pos:line="3" pos:column="46">char<pos:position pos:line="3" pos:column="50"/></name><modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type> <name pos:line="3" pos:column="52">mutual<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="59"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">NWSSLSrvConfigRec<pos:position pos:line="5" pos:column="22"/></name><modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type> <name pos:line="5" pos:column="24">sc<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><call><name pos:line="5" pos:column="29">get_nwssl_cfg<pos:position pos:line="5" pos:column="42"/></name><argument_list pos:line="5" pos:column="42">(<argument><expr><name><name pos:line="5" pos:column="43">cmd<pos:position pos:line="5" pos:column="46"/></name><operator pos:line="5" pos:column="46">-&gt;<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="48">server<pos:position pos:line="5" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">err<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><call><name pos:line="6" pos:column="23">ap_check_cmd_context<pos:position pos:line="6" pos:column="43"/></name><argument_list pos:line="6" pos:column="43">(<argument><expr><name pos:line="6" pos:column="44">cmd<pos:position pos:line="6" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="49">GLOBAL_ONLY<pos:position pos:line="6" pos:column="60"/></name></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="62"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">ports<pos:position pos:line="7" pos:column="16"/></name></decl>, <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="19">addr<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">short<pos:position pos:line="8" pos:column="19"/></name></type> <name pos:line="8" pos:column="20">port<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">seclisten_rec<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></operator><operator pos:line="9" pos:column="20">new<pos:position pos:line="9" pos:column="23"/></operator></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">ap_listen_rec<pos:position pos:line="10" pos:column="18"/></name> <modifier pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></modifier><modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">walk<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_sockaddr_t<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">sa<pos:position pos:line="11" pos:column="23"/></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">found_listener<pos:position pos:line="12" pos:column="23"/></name> <init pos:line="12" pos:column="24">= <expr><literal type="number" pos:line="12" pos:column="26">0<pos:position pos:line="12" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>


    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">err<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">!=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">NULL<pos:position pos:line="15" pos:column="20"/></name></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21">
        <block type="pseudo"><return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">err<pos:position pos:line="16" pos:column="19"/></name></expr>;<pos:position pos:line="16" pos:column="20"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">ports<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">strchr<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">ips<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="25">':'<pos:position pos:line="18" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">ports<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">!=<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">NULL<pos:position pos:line="20" pos:column="22"/></name></expr>)<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23"> <block pos:line="20" pos:column="24">{
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">ports<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">==<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">ips<pos:position pos:line="21" pos:column="25"/></name></expr>)<pos:position pos:line="21" pos:column="26"/></condition><then pos:line="21" pos:column="26">
            <block type="pseudo"><return pos:line="22" pos:column="13">return <expr><literal type="string" pos:line="22" pos:column="20">"Missing IP address"<pos:position pos:line="22" pos:column="40"/></literal></expr>;<pos:position pos:line="22" pos:column="41"/></return></block></then>
        <elseif pos:line="23" pos:column="9">else <if pos:line="23" pos:column="14">if <condition pos:line="23" pos:column="17">(<expr><name><name pos:line="23" pos:column="18">ports<pos:position pos:line="23" pos:column="23"/></name><index pos:line="23" pos:column="23">[<expr><literal type="number" pos:line="23" pos:column="24">1<pos:position pos:line="23" pos:column="25"/></literal></expr>]<pos:position pos:line="23" pos:column="26"/></index></name> <operator pos:line="23" pos:column="27">==<pos:position pos:line="23" pos:column="29"/></operator> <literal type="char" pos:line="23" pos:column="30">'\0'<pos:position pos:line="23" pos:column="34"/></literal></expr>)<pos:position pos:line="23" pos:column="35"/></condition><then pos:line="23" pos:column="35">
            <block type="pseudo"><return pos:line="24" pos:column="13">return <expr><literal type="string" pos:line="24" pos:column="20">"Address must end in :&lt;port-number&gt;"<pos:position pos:line="24" pos:column="62"/></literal></expr>;<pos:position pos:line="24" pos:column="57"/></return></block></then></if></elseif></if>

        <expr_stmt><expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><operator pos:line="26" pos:column="10">(<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">ports<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">++<pos:position pos:line="26" pos:column="18"/></operator><operator pos:line="26" pos:column="18">)<pos:position pos:line="26" pos:column="19"/></operator> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <literal type="char" pos:line="26" pos:column="22">'\0'<pos:position pos:line="26" pos:column="26"/></literal></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then>
    <else pos:line="28" pos:column="5">else <block pos:line="28" pos:column="10">{
        <expr_stmt><expr><name pos:line="29" pos:column="9">ports<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <operator pos:line="29" pos:column="17">(<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">char<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">*<pos:position pos:line="29" pos:column="23"/></operator><operator pos:line="29" pos:column="23">)<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">ips<pos:position pos:line="29" pos:column="27"/></name></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></else></if>

    <expr_stmt><expr><operator pos:line="32" pos:column="5">new<pos:position pos:line="32" pos:column="8"/></operator> <operator pos:line="32" pos:column="9">=<pos:position pos:line="32" pos:column="10"/></operator> <call><name pos:line="32" pos:column="11">apr_pcalloc<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name><name pos:line="32" pos:column="23">cmd<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">-&gt;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="28">server<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">-&gt;<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="36">process<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">-&gt;<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="45">pool<pos:position pos:line="32" pos:column="49"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="51">sizeof<argument_list pos:line="32" pos:column="57">(<argument><expr><name pos:line="32" pos:column="58">seclisten_rec<pos:position pos:line="32" pos:column="71"/></name></expr></argument>)<pos:position pos:line="32" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="33" pos:column="5">new<pos:position pos:line="33" pos:column="8"/></operator><operator pos:line="33" pos:column="8">-&gt;<pos:position pos:line="33" pos:column="13"/></operator><name><name pos:line="33" pos:column="10">local_addr<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">.<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="21">sin_family<pos:position pos:line="33" pos:column="31"/></name></name> <operator pos:line="33" pos:column="32">=<pos:position pos:line="33" pos:column="33"/></operator> <name pos:line="33" pos:column="34">AF_INET<pos:position pos:line="33" pos:column="41"/></name></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">ports<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">==<pos:position pos:line="35" pos:column="17"/></operator> <name pos:line="35" pos:column="18">ips<pos:position pos:line="35" pos:column="21"/></name></expr>)<pos:position pos:line="35" pos:column="22"/></condition><then pos:line="35" pos:column="22"> <block pos:line="35" pos:column="23">{
        <expr_stmt><expr><operator pos:line="36" pos:column="9">new<pos:position pos:line="36" pos:column="12"/></operator><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name><name pos:line="36" pos:column="14">local_addr<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">.<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="25">sin_addr<pos:position pos:line="36" pos:column="33"/></name><operator pos:line="36" pos:column="33">.<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="34">s_addr<pos:position pos:line="36" pos:column="40"/></name></name> <operator pos:line="36" pos:column="41">=<pos:position pos:line="36" pos:column="42"/></operator> <call><name pos:line="36" pos:column="43">htonl<pos:position pos:line="36" pos:column="48"/></name><argument_list pos:line="36" pos:column="48">(<argument><expr><name pos:line="36" pos:column="49">INADDR_ANY<pos:position pos:line="36" pos:column="59"/></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">addr<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <call><name pos:line="37" pos:column="16">apr_pstrdup<pos:position pos:line="37" pos:column="27"/></name><argument_list pos:line="37" pos:column="27">(<argument><expr><name><name pos:line="37" pos:column="28">cmd<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">-&gt;<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="33">server<pos:position pos:line="37" pos:column="39"/></name><operator pos:line="37" pos:column="39">-&gt;<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="41">process<pos:position pos:line="37" pos:column="48"/></name><operator pos:line="37" pos:column="48">-&gt;<pos:position pos:line="37" pos:column="53"/></operator><name pos:line="37" pos:column="50">pool<pos:position pos:line="37" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="56">"0.0.0.0"<pos:position pos:line="37" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then>
    <else pos:line="39" pos:column="5">else <block pos:line="39" pos:column="10">{
        <expr_stmt><expr><operator pos:line="40" pos:column="9">new<pos:position pos:line="40" pos:column="12"/></operator><operator pos:line="40" pos:column="12">-&gt;<pos:position pos:line="40" pos:column="17"/></operator><name><name pos:line="40" pos:column="14">local_addr<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">.<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="25">sin_addr<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">.<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="34">s_addr<pos:position pos:line="40" pos:column="40"/></name></name> <operator pos:line="40" pos:column="41">=<pos:position pos:line="40" pos:column="42"/></operator> <call><name pos:line="40" pos:column="43">parse_addr<pos:position pos:line="40" pos:column="53"/></name><argument_list pos:line="40" pos:column="53">(<argument><expr><name pos:line="40" pos:column="54">ips<pos:position pos:line="40" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="59">NULL<pos:position pos:line="40" pos:column="63"/></name></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name pos:line="41" pos:column="9">addr<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">apr_pstrdup<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><name><name pos:line="41" pos:column="28">cmd<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">-&gt;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="33">server<pos:position pos:line="41" pos:column="39"/></name><operator pos:line="41" pos:column="39">-&gt;<pos:position pos:line="41" pos:column="44"/></operator><name pos:line="41" pos:column="41">process<pos:position pos:line="41" pos:column="48"/></name><operator pos:line="41" pos:column="48">-&gt;<pos:position pos:line="41" pos:column="53"/></operator><name pos:line="41" pos:column="50">pool<pos:position pos:line="41" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="56">ips<pos:position pos:line="41" pos:column="59"/></name></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="44" pos:column="5">port<pos:position pos:line="44" pos:column="9"/></name> <operator pos:line="44" pos:column="10">=<pos:position pos:line="44" pos:column="11"/></operator> <call><name pos:line="44" pos:column="12">atoi<pos:position pos:line="44" pos:column="16"/></name><argument_list pos:line="44" pos:column="16">(<argument><expr><name pos:line="44" pos:column="17">ports<pos:position pos:line="44" pos:column="22"/></name></expr></argument>)<pos:position pos:line="44" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">!<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">port<pos:position pos:line="46" pos:column="14"/></name></expr>)<pos:position pos:line="46" pos:column="15"/></condition><then pos:line="46" pos:column="15">
        <block type="pseudo"><return pos:line="47" pos:column="9">return <expr><literal type="string" pos:line="47" pos:column="16">"Port must be numeric"<pos:position pos:line="47" pos:column="38"/></literal></expr>;<pos:position pos:line="47" pos:column="39"/></return></block></then></if>

    <comment type="block" pos:line="49" pos:column="5">/* If the specified addr:port was created previously, put the listen
       socket record back on the ap_listeners list so that the socket
       will be reused rather than recreated */</comment>
    <for pos:line="52" pos:column="5">for <control pos:line="52" pos:column="9">(<init><expr><name pos:line="52" pos:column="10">walk<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <operator pos:line="52" pos:column="17">&amp;<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="18">nw_old_listeners<pos:position pos:line="52" pos:column="34"/></name></expr>;<pos:position pos:line="52" pos:column="35"/></init> <condition><expr><operator pos:line="52" pos:column="36">*<pos:position pos:line="52" pos:column="37"/></operator><name pos:line="52" pos:column="37">walk<pos:position pos:line="52" pos:column="41"/></name></expr>;<pos:position pos:line="52" pos:column="42"/></condition><incr/>)<pos:position pos:line="52" pos:column="43"/></control> <block pos:line="52" pos:column="44">{
        <expr_stmt><expr><name pos:line="53" pos:column="9">sa<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <name><operator pos:line="53" pos:column="14">(<pos:position pos:line="53" pos:column="15"/></operator><operator pos:line="53" pos:column="15">*<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="16">walk<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">)<pos:position pos:line="53" pos:column="21"/></operator><operator pos:line="53" pos:column="21">-&gt;<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="23">bind_addr<pos:position pos:line="53" pos:column="32"/></name></name></expr>;<pos:position pos:line="53" pos:column="33"/></expr_stmt>
        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">sa<pos:position pos:line="54" pos:column="15"/></name></expr>)<pos:position pos:line="54" pos:column="16"/></condition><then pos:line="54" pos:column="16"> <block pos:line="54" pos:column="17">{
            <expr_stmt><expr><name pos:line="55" pos:column="13">ap_listen_rec<pos:position pos:line="55" pos:column="26"/></name> <operator pos:line="55" pos:column="27">*<pos:position pos:line="55" pos:column="28"/></operator><operator pos:line="55" pos:column="28">new<pos:position pos:line="55" pos:column="31"/></operator></expr>;<pos:position pos:line="55" pos:column="32"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="56" pos:column="13">apr_port_t<pos:position pos:line="56" pos:column="23"/></name></type> <name pos:line="56" pos:column="24">oldport<pos:position pos:line="56" pos:column="31"/></name></decl>;<pos:position pos:line="56" pos:column="32"/></decl_stmt>

            <expr_stmt><expr><name pos:line="58" pos:column="13">oldport<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">=<pos:position pos:line="58" pos:column="22"/></operator> <name><name pos:line="58" pos:column="23">sa<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">-&gt;<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="27">port<pos:position pos:line="58" pos:column="31"/></name></name></expr>;<pos:position pos:line="58" pos:column="32"/></expr_stmt>
            <comment type="block" pos:line="59" pos:column="13">/* If both ports are equivalent, then if their names are equivalent,
             * then we will re-use the existing record.
             */</comment>
            <if pos:line="62" pos:column="13">if <condition pos:line="62" pos:column="16">(<expr><name pos:line="62" pos:column="17">port<pos:position pos:line="62" pos:column="21"/></name> <operator pos:line="62" pos:column="22">==<pos:position pos:line="62" pos:column="24"/></operator> <name pos:line="62" pos:column="25">oldport<pos:position pos:line="62" pos:column="32"/></name> <operator pos:line="62" pos:column="33">&amp;&amp;<pos:position pos:line="62" pos:column="43"/></operator>
                <operator pos:line="63" pos:column="17">(<pos:position pos:line="63" pos:column="18"/></operator><operator pos:line="63" pos:column="18">(<pos:position pos:line="63" pos:column="19"/></operator><operator pos:line="63" pos:column="19">!<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="20">addr<pos:position pos:line="63" pos:column="24"/></name> <operator pos:line="63" pos:column="25">&amp;&amp;<pos:position pos:line="63" pos:column="35"/></operator> <operator pos:line="63" pos:column="28">!<pos:position pos:line="63" pos:column="29"/></operator><name><name pos:line="63" pos:column="29">sa<pos:position pos:line="63" pos:column="31"/></name><operator pos:line="63" pos:column="31">-&gt;<pos:position pos:line="63" pos:column="36"/></operator><name pos:line="63" pos:column="33">hostname<pos:position pos:line="63" pos:column="41"/></name></name><operator pos:line="63" pos:column="41">)<pos:position pos:line="63" pos:column="42"/></operator> <operator pos:line="63" pos:column="43">||<pos:position pos:line="63" pos:column="45"/></operator>
                 <operator pos:line="64" pos:column="18">(<pos:position pos:line="64" pos:column="19"/></operator><operator pos:line="64" pos:column="19">(<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="20">addr<pos:position pos:line="64" pos:column="24"/></name> <operator pos:line="64" pos:column="25">&amp;&amp;<pos:position pos:line="64" pos:column="35"/></operator> <name><name pos:line="64" pos:column="28">sa<pos:position pos:line="64" pos:column="30"/></name><operator pos:line="64" pos:column="30">-&gt;<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="32">hostname<pos:position pos:line="64" pos:column="40"/></name></name><operator pos:line="64" pos:column="40">)<pos:position pos:line="64" pos:column="41"/></operator> <operator pos:line="64" pos:column="42">&amp;&amp;<pos:position pos:line="64" pos:column="52"/></operator> <operator pos:line="64" pos:column="45">!<pos:position pos:line="64" pos:column="46"/></operator><call><name pos:line="64" pos:column="46">strcmp<pos:position pos:line="64" pos:column="52"/></name><argument_list pos:line="64" pos:column="52">(<argument><expr><name><name pos:line="64" pos:column="53">sa<pos:position pos:line="64" pos:column="55"/></name><operator pos:line="64" pos:column="55">-&gt;<pos:position pos:line="64" pos:column="60"/></operator><name pos:line="64" pos:column="57">hostname<pos:position pos:line="64" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="67">addr<pos:position pos:line="64" pos:column="71"/></name></expr></argument>)<pos:position pos:line="64" pos:column="72"/></argument_list></call><operator pos:line="64" pos:column="72">)<pos:position pos:line="64" pos:column="73"/></operator><operator pos:line="64" pos:column="73">)<pos:position pos:line="64" pos:column="74"/></operator></expr>)<pos:position pos:line="64" pos:column="75"/></condition><then pos:line="64" pos:column="75"> <block pos:line="64" pos:column="76">{
                <expr_stmt><expr><operator pos:line="65" pos:column="17">new<pos:position pos:line="65" pos:column="20"/></operator> <operator pos:line="65" pos:column="21">=<pos:position pos:line="65" pos:column="22"/></operator> <operator pos:line="65" pos:column="23">*<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="24">walk<pos:position pos:line="65" pos:column="28"/></name></expr>;<pos:position pos:line="65" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="66" pos:column="17">*<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="18">walk<pos:position pos:line="66" pos:column="22"/></name> <operator pos:line="66" pos:column="23">=<pos:position pos:line="66" pos:column="24"/></operator> <operator pos:line="66" pos:column="25">new<pos:position pos:line="66" pos:column="28"/></operator><operator pos:line="66" pos:column="28">-&gt;<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="30">next<pos:position pos:line="66" pos:column="34"/></name></expr>;<pos:position pos:line="66" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="67" pos:column="17">new<pos:position pos:line="67" pos:column="20"/></operator><operator pos:line="67" pos:column="20">-&gt;<pos:position pos:line="67" pos:column="25"/></operator><name pos:line="67" pos:column="22">next<pos:position pos:line="67" pos:column="26"/></name> <operator pos:line="67" pos:column="27">=<pos:position pos:line="67" pos:column="28"/></operator> <name pos:line="67" pos:column="29">ap_listeners<pos:position pos:line="67" pos:column="41"/></name></expr>;<pos:position pos:line="67" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><name pos:line="68" pos:column="17">ap_listeners<pos:position pos:line="68" pos:column="29"/></name> <operator pos:line="68" pos:column="30">=<pos:position pos:line="68" pos:column="31"/></operator> <operator pos:line="68" pos:column="32">new<pos:position pos:line="68" pos:column="35"/></operator></expr>;<pos:position pos:line="68" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><name pos:line="69" pos:column="17">found_listener<pos:position pos:line="69" pos:column="31"/></name> <operator pos:line="69" pos:column="32">=<pos:position pos:line="69" pos:column="33"/></operator> <literal type="number" pos:line="69" pos:column="34">1<pos:position pos:line="69" pos:column="35"/></literal></expr>;<pos:position pos:line="69" pos:column="36"/></expr_stmt>
                <continue pos:line="70" pos:column="17">continue;<pos:position pos:line="70" pos:column="26"/></continue>
            }<pos:position pos:line="71" pos:column="14"/></block></then></if>
        }<pos:position pos:line="72" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="74" pos:column="9">walk<pos:position pos:line="74" pos:column="13"/></name> <operator pos:line="74" pos:column="14">=<pos:position pos:line="74" pos:column="15"/></operator> <operator pos:line="74" pos:column="16">&amp;<pos:position pos:line="74" pos:column="21"/></operator><name><operator pos:line="74" pos:column="17">(<pos:position pos:line="74" pos:column="18"/></operator><operator pos:line="74" pos:column="18">*<pos:position pos:line="74" pos:column="19"/></operator><name pos:line="74" pos:column="19">walk<pos:position pos:line="74" pos:column="23"/></name><operator pos:line="74" pos:column="23">)<pos:position pos:line="74" pos:column="24"/></operator><operator pos:line="74" pos:column="24">-&gt;<pos:position pos:line="74" pos:column="29"/></operator><name pos:line="74" pos:column="26">next<pos:position pos:line="74" pos:column="30"/></name></name></expr>;<pos:position pos:line="74" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="75" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="77" pos:column="5">apr_table_add<pos:position pos:line="77" pos:column="18"/></name><argument_list pos:line="77" pos:column="18">(<argument><expr><name><name pos:line="77" pos:column="19">sc<pos:position pos:line="77" pos:column="21"/></name><operator pos:line="77" pos:column="21">-&gt;<pos:position pos:line="77" pos:column="26"/></operator><name pos:line="77" pos:column="23">sltable<pos:position pos:line="77" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="32">ports<pos:position pos:line="77" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="39">addr<pos:position pos:line="77" pos:column="43"/></name></expr></argument>)<pos:position pos:line="77" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="45"/></expr_stmt>

    <comment type="block" pos:line="79" pos:column="5">/* If we found a pre-existing listen socket record, then there
       is no need to create a new secure listen socket record. */</comment>
    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><name pos:line="81" pos:column="9">found_listener<pos:position pos:line="81" pos:column="23"/></name></expr>)<pos:position pos:line="81" pos:column="24"/></condition><then pos:line="81" pos:column="24"> <block pos:line="81" pos:column="25">{
        <return pos:line="82" pos:column="9">return <expr><name pos:line="82" pos:column="16">NULL<pos:position pos:line="82" pos:column="20"/></name></expr>;<pos:position pos:line="82" pos:column="21"/></return>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="85" pos:column="5">new<pos:position pos:line="85" pos:column="8"/></operator><operator pos:line="85" pos:column="8">-&gt;<pos:position pos:line="85" pos:column="13"/></operator><name><name pos:line="85" pos:column="10">local_addr<pos:position pos:line="85" pos:column="20"/></name><operator pos:line="85" pos:column="20">.<pos:position pos:line="85" pos:column="21"/></operator><name pos:line="85" pos:column="21">sin_port<pos:position pos:line="85" pos:column="29"/></name></name> <operator pos:line="85" pos:column="30">=<pos:position pos:line="85" pos:column="31"/></operator> <call><name pos:line="85" pos:column="32">htons<pos:position pos:line="85" pos:column="37"/></name><argument_list pos:line="85" pos:column="37">(<argument><expr><name pos:line="85" pos:column="38">port<pos:position pos:line="85" pos:column="42"/></name></expr></argument>)<pos:position pos:line="85" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="86" pos:column="5">new<pos:position pos:line="86" pos:column="8"/></operator><operator pos:line="86" pos:column="8">-&gt;<pos:position pos:line="86" pos:column="13"/></operator><name pos:line="86" pos:column="10">fd<pos:position pos:line="86" pos:column="12"/></name> <operator pos:line="86" pos:column="13">=<pos:position pos:line="86" pos:column="14"/></operator> <operator pos:line="86" pos:column="15">-<pos:position pos:line="86" pos:column="16"/></operator><literal type="number" pos:line="86" pos:column="16">1<pos:position pos:line="86" pos:column="17"/></literal></expr>;<pos:position pos:line="86" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="87" pos:column="5">new<pos:position pos:line="87" pos:column="8"/></operator><operator pos:line="87" pos:column="8">-&gt;<pos:position pos:line="87" pos:column="13"/></operator><name pos:line="87" pos:column="10">used<pos:position pos:line="87" pos:column="14"/></name> <operator pos:line="87" pos:column="15">=<pos:position pos:line="87" pos:column="16"/></operator> <literal type="number" pos:line="87" pos:column="17">0<pos:position pos:line="87" pos:column="18"/></literal></expr>;<pos:position pos:line="87" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="88" pos:column="5">new<pos:position pos:line="88" pos:column="8"/></operator><operator pos:line="88" pos:column="8">-&gt;<pos:position pos:line="88" pos:column="13"/></operator><name pos:line="88" pos:column="10">next<pos:position pos:line="88" pos:column="14"/></name> <operator pos:line="88" pos:column="15">=<pos:position pos:line="88" pos:column="16"/></operator> <name pos:line="88" pos:column="17">ap_seclisteners<pos:position pos:line="88" pos:column="32"/></name></expr>;<pos:position pos:line="88" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">strcpy<pos:position pos:line="89" pos:column="11"/></name><argument_list pos:line="89" pos:column="11">(<argument><expr><operator pos:line="89" pos:column="12">new<pos:position pos:line="89" pos:column="15"/></operator><operator pos:line="89" pos:column="15">-&gt;<pos:position pos:line="89" pos:column="20"/></operator><name pos:line="89" pos:column="17">key<pos:position pos:line="89" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="22">key<pos:position pos:line="89" pos:column="25"/></name></expr></argument>)<pos:position pos:line="89" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="90" pos:column="5">new<pos:position pos:line="90" pos:column="8"/></operator><operator pos:line="90" pos:column="8">-&gt;<pos:position pos:line="90" pos:column="13"/></operator><name pos:line="90" pos:column="10">mutual<pos:position pos:line="90" pos:column="16"/></name> <operator pos:line="90" pos:column="17">=<pos:position pos:line="90" pos:column="18"/></operator> <ternary><condition><expr><operator pos:line="90" pos:column="19">(<pos:position pos:line="90" pos:column="20"/></operator><name pos:line="90" pos:column="20">mutual<pos:position pos:line="90" pos:column="26"/></name><operator pos:line="90" pos:column="26">)<pos:position pos:line="90" pos:column="27"/></operator></expr> ?<pos:position pos:line="90" pos:column="29"/></condition><then pos:line="90" pos:column="29"> <expr><literal type="number" pos:line="90" pos:column="30">1<pos:position pos:line="90" pos:column="31"/></literal></expr> <pos:position pos:line="90" pos:column="32"/></then><else pos:line="90" pos:column="32">: <expr><literal type="number" pos:line="90" pos:column="34">0<pos:position pos:line="90" pos:column="35"/></literal></expr></else></ternary></expr>;<pos:position pos:line="90" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="91" pos:column="5">new<pos:position pos:line="91" pos:column="8"/></operator><operator pos:line="91" pos:column="8">-&gt;<pos:position pos:line="91" pos:column="13"/></operator><name pos:line="91" pos:column="10">addr<pos:position pos:line="91" pos:column="14"/></name> <operator pos:line="91" pos:column="15">=<pos:position pos:line="91" pos:column="16"/></operator> <name pos:line="91" pos:column="17">addr<pos:position pos:line="91" pos:column="21"/></name></expr>;<pos:position pos:line="91" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="92" pos:column="5">new<pos:position pos:line="92" pos:column="8"/></operator><operator pos:line="92" pos:column="8">-&gt;<pos:position pos:line="92" pos:column="13"/></operator><name pos:line="92" pos:column="10">port<pos:position pos:line="92" pos:column="14"/></name> <operator pos:line="92" pos:column="15">=<pos:position pos:line="92" pos:column="16"/></operator> <name pos:line="92" pos:column="17">port<pos:position pos:line="92" pos:column="21"/></name></expr>;<pos:position pos:line="92" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="93" pos:column="5">ap_seclisteners<pos:position pos:line="93" pos:column="20"/></name> <operator pos:line="93" pos:column="21">=<pos:position pos:line="93" pos:column="22"/></operator> <operator pos:line="93" pos:column="23">new<pos:position pos:line="93" pos:column="26"/></operator></expr>;<pos:position pos:line="93" pos:column="27"/></expr_stmt>
    <return pos:line="94" pos:column="5">return <expr><name pos:line="94" pos:column="12">NULL<pos:position pos:line="94" pos:column="16"/></name></expr>;<pos:position pos:line="94" pos:column="17"/></return>
}<pos:position pos:line="95" pos:column="2"/></block></function></unit>

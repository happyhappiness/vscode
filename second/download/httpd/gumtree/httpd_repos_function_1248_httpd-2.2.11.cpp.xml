<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1248_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ignore_entry<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">autoindex_config_rec<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">d<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">path<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_array_header_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">list<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name><name pos:line="3" pos:column="32">d<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">-&gt;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="35">ign_list<pos:position pos:line="3" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">item<pos:position pos:line="4" pos:column="16"/></name></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">items<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator>struct <name pos:line="4" pos:column="34">item<pos:position pos:line="4" pos:column="38"/></name> <operator pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></operator><operator pos:line="4" pos:column="40">)<pos:position pos:line="4" pos:column="41"/></operator> <name><name pos:line="4" pos:column="42">list<pos:position pos:line="4" pos:column="46"/></name><operator pos:line="4" pos:column="46">-&gt;<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="48">elts<pos:position pos:line="4" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">tt<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">tt<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">strrchr<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">path<pos:position pos:line="8" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="29">'/'<pos:position pos:line="8" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call><operator pos:line="8" pos:column="33">)<pos:position pos:line="8" pos:column="34"/></operator> <operator pos:line="8" pos:column="35">==<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="38">NULL<pos:position pos:line="8" pos:column="42"/></name></expr>)<pos:position pos:line="8" pos:column="43"/></condition><then pos:line="8" pos:column="43"> <block pos:line="8" pos:column="44">{
        <expr_stmt><expr><name pos:line="9" pos:column="9">tt<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">path<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then>
    <else pos:line="11" pos:column="5">else <block pos:line="11" pos:column="10">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">tt<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">++<pos:position pos:line="12" pos:column="13"/></operator></expr>;<pos:position pos:line="12" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></else></if>

    <for pos:line="15" pos:column="5">for <control pos:line="15" pos:column="9">(<init><expr><name pos:line="15" pos:column="10">i<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <literal type="number" pos:line="15" pos:column="14">0<pos:position pos:line="15" pos:column="15"/></literal></expr>;<pos:position pos:line="15" pos:column="16"/></init> <condition><expr><name pos:line="15" pos:column="17">i<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">&lt;<pos:position pos:line="15" pos:column="23"/></operator> <name><name pos:line="15" pos:column="21">list<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">nelts<pos:position pos:line="15" pos:column="32"/></name></name></expr>;<pos:position pos:line="15" pos:column="33"/></condition> <incr><expr><operator pos:line="15" pos:column="34">++<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">i<pos:position pos:line="15" pos:column="37"/></name></expr></incr>)<pos:position pos:line="15" pos:column="38"/></control> <block pos:line="15" pos:column="39">{
        <decl_stmt><decl><type><name><name pos:line="16" pos:column="9">struct<pos:position pos:line="16" pos:column="15"/></name> <name pos:line="16" pos:column="16">item<pos:position pos:line="16" pos:column="20"/></name></name> <modifier pos:line="16" pos:column="21">*<pos:position pos:line="16" pos:column="22"/></modifier></type><name pos:line="16" pos:column="22">p<pos:position pos:line="16" pos:column="23"/></name> <init pos:line="16" pos:column="24">= <expr><operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator><name><name pos:line="16" pos:column="27">items<pos:position pos:line="16" pos:column="32"/></name><index pos:line="16" pos:column="32">[<expr><name pos:line="16" pos:column="33">i<pos:position pos:line="16" pos:column="34"/></name></expr>]<pos:position pos:line="16" pos:column="35"/></index></name></expr></init></decl>;<pos:position pos:line="16" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name> <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier></type><name pos:line="17" pos:column="15">ap<pos:position pos:line="17" pos:column="17"/></name></decl>;<pos:position pos:line="17" pos:column="18"/></decl_stmt>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">ap<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">strrchr<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name><name pos:line="19" pos:column="27">p<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">apply_to<pos:position pos:line="19" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="40">'/'<pos:position pos:line="19" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call><operator pos:line="19" pos:column="44">)<pos:position pos:line="19" pos:column="45"/></operator> <operator pos:line="19" pos:column="46">==<pos:position pos:line="19" pos:column="48"/></operator> <name pos:line="19" pos:column="49">NULL<pos:position pos:line="19" pos:column="53"/></name></expr>)<pos:position pos:line="19" pos:column="54"/></condition><then pos:line="19" pos:column="54"> <block pos:line="19" pos:column="55">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">ap<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <name><name pos:line="20" pos:column="18">p<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">apply_to<pos:position pos:line="20" pos:column="29"/></name></name></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then>
        <else pos:line="22" pos:column="9">else <block pos:line="22" pos:column="14">{
            <expr_stmt><expr><name pos:line="23" pos:column="13">ap<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">++<pos:position pos:line="23" pos:column="17"/></operator></expr>;<pos:position pos:line="23" pos:column="18"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></else></if>

<cpp:ifndef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifndef<pos:position pos:line="26" pos:column="8"/></cpp:directive> <name pos:line="26" pos:column="9">CASE_BLIND_FILESYSTEM<pos:position pos:line="26" pos:column="30"/></name></cpp:ifndef>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><call><name pos:line="27" pos:column="14">ap_strcmp_match<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">path<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="36">p<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">apply_path<pos:position pos:line="27" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call>
            <operator pos:line="28" pos:column="13">&amp;&amp;<pos:position pos:line="28" pos:column="23"/></operator> <operator pos:line="28" pos:column="16">!<pos:position pos:line="28" pos:column="17"/></operator><call><name pos:line="28" pos:column="17">ap_strcmp_match<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">tt<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="37">ap<pos:position pos:line="28" pos:column="39"/></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="41"/></condition><then pos:line="28" pos:column="41"> <block pos:line="28" pos:column="42">{
            <return pos:line="29" pos:column="13">return <expr><literal type="number" pos:line="29" pos:column="20">1<pos:position pos:line="29" pos:column="21"/></literal></expr>;<pos:position pos:line="29" pos:column="22"/></return>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
<cpp:else pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">else<pos:position pos:line="31" pos:column="6"/></cpp:directive></cpp:else>  <comment type="block" pos:line="31" pos:column="8">/* !CASE_BLIND_FILESYSTEM */</comment>
        <comment type="block" pos:line="32" pos:column="9">/*
         * On some platforms, the match must be case-blind.  This is really
         * a factor of the filesystem involved, but we can't detect that
         * reliably - so we have to granularise at the OS level.
         */</comment>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">!<pos:position pos:line="37" pos:column="14"/></operator><call><name pos:line="37" pos:column="14">ap_strcasecmp_match<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name pos:line="37" pos:column="34">path<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="40">p<pos:position pos:line="37" pos:column="41"/></name><operator pos:line="37" pos:column="41">-&gt;<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="43">apply_path<pos:position pos:line="37" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></call>
            <operator pos:line="38" pos:column="13">&amp;&amp;<pos:position pos:line="38" pos:column="23"/></operator> <operator pos:line="38" pos:column="16">!<pos:position pos:line="38" pos:column="17"/></operator><call><name pos:line="38" pos:column="17">ap_strcasecmp_match<pos:position pos:line="38" pos:column="36"/></name><argument_list pos:line="38" pos:column="36">(<argument><expr><name pos:line="38" pos:column="37">tt<pos:position pos:line="38" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="41">ap<pos:position pos:line="38" pos:column="43"/></name></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="45"/></condition><then pos:line="38" pos:column="45"> <block pos:line="38" pos:column="46">{
            <return pos:line="39" pos:column="13">return <expr><literal type="number" pos:line="39" pos:column="20">1<pos:position pos:line="39" pos:column="21"/></literal></expr>;<pos:position pos:line="39" pos:column="22"/></return>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="41" pos:column="8">/* !CASE_BLIND_FILESYSTEM */</comment>
    }<pos:position pos:line="42" pos:column="6"/></block></for>
    <return pos:line="43" pos:column="5">return <expr><literal type="number" pos:line="43" pos:column="12">0<pos:position pos:line="43" pos:column="13"/></literal></expr>;<pos:position pos:line="43" pos:column="14"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2166_httpd-2.2.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ap_filter_rec_t<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">register_filter<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">name<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">ap_filter_func<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">filter_func<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="3" pos:column="29">ap_init_filter_func<pos:position pos:line="3" pos:column="48"/></name></type> <name pos:line="3" pos:column="49">filter_init<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="4" pos:column="29">ap_filter_type<pos:position pos:line="4" pos:column="43"/></name></type> <name pos:line="4" pos:column="44">ftype<pos:position pos:line="4" pos:column="49"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="5" pos:column="29">filter_trie_node<pos:position pos:line="5" pos:column="45"/></name> <modifier pos:line="5" pos:column="46">*<pos:position pos:line="5" pos:column="47"/></modifier><modifier pos:line="5" pos:column="47">*<pos:position pos:line="5" pos:column="48"/></modifier></type><name pos:line="5" pos:column="48">reg_filter_set<pos:position pos:line="5" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="63"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ap_filter_rec_t<pos:position pos:line="7" pos:column="20"/></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">frec<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">normalized_name<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">n<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">filter_trie_node<pos:position pos:line="10" pos:column="21"/></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name pos:line="10" pos:column="23">node<pos:position pos:line="10" pos:column="27"/></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">reg_filter_set<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26"> <block pos:line="12" pos:column="27">{
        <expr_stmt><expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">reg_filter_set<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <call><name pos:line="13" pos:column="27">trie_node_alloc<pos:position pos:line="13" pos:column="42"/></name><argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">FILTER_POOL<pos:position pos:line="13" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="56">NULL<pos:position pos:line="13" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="62">0<pos:position pos:line="13" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="16" pos:column="5">normalized_name<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <call><name pos:line="16" pos:column="23">apr_pstrdup<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">FILTER_POOL<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">name<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ap_str_tolower<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">normalized_name<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><name pos:line="19" pos:column="5">node<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <operator pos:line="19" pos:column="12">*<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">reg_filter_set<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
    <for pos:line="20" pos:column="5">for <control pos:line="20" pos:column="9">(<init><expr><name pos:line="20" pos:column="10">n<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">normalized_name<pos:position pos:line="20" pos:column="29"/></name></expr>;<pos:position pos:line="20" pos:column="30"/></init> <condition><expr><operator pos:line="20" pos:column="31">*<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="32">n<pos:position pos:line="20" pos:column="33"/></name></expr>;<pos:position pos:line="20" pos:column="34"/></condition> <incr><expr><name pos:line="20" pos:column="35">n<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">++<pos:position pos:line="20" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="39"/></control> <block pos:line="20" pos:column="40">{
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">filter_trie_node<pos:position pos:line="21" pos:column="25"/></name> <modifier pos:line="21" pos:column="26">*<pos:position pos:line="21" pos:column="27"/></modifier></type><name pos:line="21" pos:column="27">child<pos:position pos:line="21" pos:column="32"/></name> <init pos:line="21" pos:column="33">= <expr><call><name pos:line="21" pos:column="35">trie_node_alloc<pos:position pos:line="21" pos:column="50"/></name><argument_list pos:line="21" pos:column="50">(<argument><expr><name pos:line="21" pos:column="51">FILTER_POOL<pos:position pos:line="21" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="64">node<pos:position pos:line="21" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="70">*<pos:position pos:line="21" pos:column="71"/></operator><name pos:line="21" pos:column="71">n<pos:position pos:line="21" pos:column="72"/></name></expr></argument>)<pos:position pos:line="21" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="74"/></decl_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">apr_isalpha<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><operator pos:line="22" pos:column="25">*<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">n<pos:position pos:line="22" pos:column="27"/></name></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="29"/></condition><then pos:line="22" pos:column="29"> <block pos:line="22" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">trie_node_link<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">FILTER_POOL<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">node<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="47">child<pos:position pos:line="23" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="54">apr_toupper<pos:position pos:line="23" pos:column="65"/></name><argument_list pos:line="23" pos:column="65">(<argument><expr><operator pos:line="23" pos:column="66">*<pos:position pos:line="23" pos:column="67"/></operator><name pos:line="23" pos:column="67">n<pos:position pos:line="23" pos:column="68"/></name></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="25" pos:column="9">node<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <name pos:line="25" pos:column="16">child<pos:position pos:line="25" pos:column="21"/></name></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></for>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name><name pos:line="27" pos:column="9">node<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">frec<pos:position pos:line="27" pos:column="19"/></name></name></expr>)<pos:position pos:line="27" pos:column="20"/></condition><then pos:line="27" pos:column="20"> <block pos:line="27" pos:column="21">{
        <expr_stmt><expr><name pos:line="28" pos:column="9">frec<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <name><name pos:line="28" pos:column="16">node<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">-&gt;<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="22">frec<pos:position pos:line="28" pos:column="26"/></name></name></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then>
    <else pos:line="30" pos:column="5">else <block pos:line="30" pos:column="10">{
        <expr_stmt><expr><name pos:line="31" pos:column="9">frec<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">apr_pcalloc<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">FILTER_POOL<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="41">sizeof<argument_list pos:line="31" pos:column="47">(<argument><expr><operator pos:line="31" pos:column="48">*<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="49">frec<pos:position pos:line="31" pos:column="53"/></name></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="32" pos:column="9">node<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">-&gt;<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="15">frec<pos:position pos:line="32" pos:column="19"/></name></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">frec<pos:position pos:line="32" pos:column="26"/></name></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">frec<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">name<pos:position pos:line="33" pos:column="19"/></name></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="22">normalized_name<pos:position pos:line="33" pos:column="37"/></name></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">frec<pos:position pos:line="35" pos:column="9"/></name><operator pos:line="35" pos:column="9">-&gt;<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="11">filter_func<pos:position pos:line="35" pos:column="22"/></name></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <name pos:line="35" pos:column="25">filter_func<pos:position pos:line="35" pos:column="36"/></name></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">frec<pos:position pos:line="36" pos:column="9"/></name><operator pos:line="36" pos:column="9">-&gt;<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="11">filter_init_func<pos:position pos:line="36" pos:column="27"/></name></name> <operator pos:line="36" pos:column="28">=<pos:position pos:line="36" pos:column="29"/></operator> <name pos:line="36" pos:column="30">filter_init<pos:position pos:line="36" pos:column="41"/></name></expr>;<pos:position pos:line="36" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">frec<pos:position pos:line="37" pos:column="9"/></name><operator pos:line="37" pos:column="9">-&gt;<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="11">ftype<pos:position pos:line="37" pos:column="16"/></name></name> <operator pos:line="37" pos:column="17">=<pos:position pos:line="37" pos:column="18"/></operator> <name pos:line="37" pos:column="19">ftype<pos:position pos:line="37" pos:column="24"/></name></expr>;<pos:position pos:line="37" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="39" pos:column="30"/></name><argument_list pos:line="39" pos:column="30">(<argument><expr><name pos:line="39" pos:column="31">FILTER_POOL<pos:position pos:line="39" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="44">NULL<pos:position pos:line="39" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="50">filter_cleanup<pos:position pos:line="39" pos:column="64"/></name></expr></argument>,
                              <argument><expr><name pos:line="40" pos:column="31">apr_pool_cleanup_null<pos:position pos:line="40" pos:column="52"/></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>
    <return pos:line="41" pos:column="5">return <expr><name pos:line="41" pos:column="12">frec<pos:position pos:line="41" pos:column="16"/></name></expr>;<pos:position pos:line="41" pos:column="17"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

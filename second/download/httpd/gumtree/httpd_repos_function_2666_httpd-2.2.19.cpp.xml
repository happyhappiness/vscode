<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2666_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">test_transactions<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">apr_pool_t<pos:position pos:line="1" pos:column="40"/></name><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type> <name pos:line="1" pos:column="42">pool<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">apr_dbd_t<pos:position pos:line="1" pos:column="57"/></name><modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type> <name pos:line="1" pos:column="59">handle<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                             <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">apr_dbd_driver_t<pos:position pos:line="2" pos:column="52"/></name><modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type> <name pos:line="2" pos:column="54">driver<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rv<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><literal type="number" pos:line="4" pos:column="14">0<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">nrows<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_dbd_transaction_t<pos:position pos:line="6" pos:column="26"/></name> <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier></type><name pos:line="6" pos:column="28">trans<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><name pos:line="6" pos:column="36">NULL<pos:position pos:line="6" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name><modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type> <name pos:line="7" pos:column="17">statement<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* trans 1 - error out early */</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">printf<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="string" pos:line="10" pos:column="12">"Transaction 1\n"<pos:position pos:line="10" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">rv<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">apr_dbd_transaction_start<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">driver<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="44">pool<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">handle<pos:position pos:line="11" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="58">&amp;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="59">trans<pos:position pos:line="11" pos:column="64"/></name></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="66"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">rv<pos:position pos:line="12" pos:column="11"/></name></expr>)<pos:position pos:line="12" pos:column="12"/></condition><then pos:line="12" pos:column="12"> <block pos:line="12" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">printf<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="string" pos:line="13" pos:column="16">"Start transaction failed!\n%s\n"<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>,
               <argument><expr><call><name pos:line="14" pos:column="16">apr_dbd_error<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">driver<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="38">handle<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="46">rv<pos:position pos:line="14" pos:column="48"/></name></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">rv<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="17" pos:column="5">statement<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <literal type="string" pos:line="17" pos:column="17">"UPDATE apr_dbd_test SET col2 = 'failed'"<pos:position pos:line="17" pos:column="58"/></literal></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">rv<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">apr_dbd_query<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">driver<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="32">handle<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="40">&amp;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="41">nrows<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="48">statement<pos:position pos:line="18" pos:column="57"/></name></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">rv<pos:position pos:line="19" pos:column="11"/></name></expr>)<pos:position pos:line="19" pos:column="12"/></condition><then pos:line="19" pos:column="12"> <block pos:line="19" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">printf<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="string" pos:line="20" pos:column="16">"Update failed: '%s'\n"<pos:position pos:line="20" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="41">apr_dbd_error<pos:position pos:line="20" pos:column="54"/></name><argument_list pos:line="20" pos:column="54">(<argument><expr><name pos:line="20" pos:column="55">driver<pos:position pos:line="20" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="63">handle<pos:position pos:line="20" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="71">rv<pos:position pos:line="20" pos:column="73"/></name></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">apr_dbd_transaction_end<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">driver<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="41">pool<pos:position pos:line="21" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">trans<pos:position pos:line="21" pos:column="52"/></name></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">rv<pos:position pos:line="22" pos:column="18"/></name></expr>;<pos:position pos:line="22" pos:column="19"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">printf<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="string" pos:line="24" pos:column="12">"%d rows updated\n"<pos:position pos:line="24" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="33">nrows<pos:position pos:line="24" pos:column="38"/></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name pos:line="26" pos:column="5">statement<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <literal type="string" pos:line="26" pos:column="17">"INSERT INTO apr_dbd_test1 (col3) values (3)"<pos:position pos:line="26" pos:column="62"/></literal></expr>;<pos:position pos:line="26" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">rv<pos:position pos:line="27" pos:column="7"/></name> <operator pos:line="27" pos:column="8">=<pos:position pos:line="27" pos:column="9"/></operator> <call><name pos:line="27" pos:column="10">apr_dbd_query<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">driver<pos:position pos:line="27" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="32">handle<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="40">&amp;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="41">nrows<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">statement<pos:position pos:line="27" pos:column="57"/></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">!<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">rv<pos:position pos:line="28" pos:column="12"/></name></expr>)<pos:position pos:line="28" pos:column="13"/></condition><then pos:line="28" pos:column="13"> <block pos:line="28" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">printf<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><literal type="string" pos:line="29" pos:column="16">"Oops, invalid op succeeded but shouldn't!\n"<pos:position pos:line="29" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="31" pos:column="5">statement<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <literal type="string" pos:line="31" pos:column="17">"INSERT INTO apr_dbd_test values ('zzz', 'aaa', 3)"<pos:position pos:line="31" pos:column="68"/></literal></expr>;<pos:position pos:line="31" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">rv<pos:position pos:line="32" pos:column="7"/></name> <operator pos:line="32" pos:column="8">=<pos:position pos:line="32" pos:column="9"/></operator> <call><name pos:line="32" pos:column="10">apr_dbd_query<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><name pos:line="32" pos:column="24">driver<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="32">handle<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="40">&amp;<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="41">nrows<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="48">statement<pos:position pos:line="32" pos:column="57"/></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">printf<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><literal type="string" pos:line="33" pos:column="12">"Valid insert returned %d.  Should be nonzero (fail) because transaction is bad\n"<pos:position pos:line="33" pos:column="94"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="96">rv<pos:position pos:line="33" pos:column="98"/></name></expr></argument>)<pos:position pos:line="33" pos:column="99"/></argument_list></call></expr> ;<pos:position pos:line="33" pos:column="101"/></expr_stmt>

    <expr_stmt><expr><name pos:line="35" pos:column="5">rv<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <call><name pos:line="35" pos:column="10">apr_dbd_transaction_end<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">driver<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">pool<pos:position pos:line="35" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="48">trans<pos:position pos:line="35" pos:column="53"/></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">rv<pos:position pos:line="36" pos:column="11"/></name></expr>)<pos:position pos:line="36" pos:column="12"/></condition><then pos:line="36" pos:column="12"> <block pos:line="36" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">printf<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><literal type="string" pos:line="37" pos:column="16">"End transaction failed!\n%s\n"<pos:position pos:line="37" pos:column="47"/></literal></expr></argument>,
               <argument><expr><call><name pos:line="38" pos:column="16">apr_dbd_error<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">driver<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="38">handle<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="46">rv<pos:position pos:line="38" pos:column="48"/></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="51"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">rv<pos:position pos:line="39" pos:column="18"/></name></expr>;<pos:position pos:line="39" pos:column="19"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">printf<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><literal type="string" pos:line="41" pos:column="12">"Transaction ended (should be rollback) - viewing table\n"<pos:position pos:line="41" pos:column="70"/></literal>
           <literal type="string" pos:line="42" pos:column="12">"A column of \"failed\" indicates transaction failed (no rollback)\n"<pos:position pos:line="42" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="83"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">select_sequential<pos:position pos:line="43" pos:column="22"/></name><argument_list pos:line="43" pos:column="22">(<argument><expr><name pos:line="43" pos:column="23">pool<pos:position pos:line="43" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="29">handle<pos:position pos:line="43" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="37">driver<pos:position pos:line="43" pos:column="43"/></name></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt>

    <comment type="block" pos:line="45" pos:column="5">/* trans 2 - complete successfully */</comment>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">printf<pos:position pos:line="46" pos:column="11"/></name><argument_list pos:line="46" pos:column="11">(<argument><expr><literal type="string" pos:line="46" pos:column="12">"Transaction 2\n"<pos:position pos:line="46" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">rv<pos:position pos:line="47" pos:column="7"/></name> <operator pos:line="47" pos:column="8">=<pos:position pos:line="47" pos:column="9"/></operator> <call><name pos:line="47" pos:column="10">apr_dbd_transaction_start<pos:position pos:line="47" pos:column="35"/></name><argument_list pos:line="47" pos:column="35">(<argument><expr><name pos:line="47" pos:column="36">driver<pos:position pos:line="47" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="44">pool<pos:position pos:line="47" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="50">handle<pos:position pos:line="47" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="58">&amp;<pos:position pos:line="47" pos:column="63"/></operator><name pos:line="47" pos:column="59">trans<pos:position pos:line="47" pos:column="64"/></name></expr></argument>)<pos:position pos:line="47" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="66"/></expr_stmt>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">rv<pos:position pos:line="48" pos:column="11"/></name></expr>)<pos:position pos:line="48" pos:column="12"/></condition><then pos:line="48" pos:column="12"> <block pos:line="48" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">printf<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><literal type="string" pos:line="49" pos:column="16">"Start transaction failed!\n%s\n"<pos:position pos:line="49" pos:column="49"/></literal></expr></argument>,
               <argument><expr><call><name pos:line="50" pos:column="16">apr_dbd_error<pos:position pos:line="50" pos:column="29"/></name><argument_list pos:line="50" pos:column="29">(<argument><expr><name pos:line="50" pos:column="30">driver<pos:position pos:line="50" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="38">handle<pos:position pos:line="50" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="46">rv<pos:position pos:line="50" pos:column="48"/></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="51"/></expr_stmt>
        <return pos:line="51" pos:column="9">return <expr><name pos:line="51" pos:column="16">rv<pos:position pos:line="51" pos:column="18"/></name></expr>;<pos:position pos:line="51" pos:column="19"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="53" pos:column="5">statement<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">=<pos:position pos:line="53" pos:column="16"/></operator> <literal type="string" pos:line="53" pos:column="17">"UPDATE apr_dbd_test SET col2 = 'success'"<pos:position pos:line="53" pos:column="59"/></literal></expr>;<pos:position pos:line="53" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name pos:line="54" pos:column="5">rv<pos:position pos:line="54" pos:column="7"/></name> <operator pos:line="54" pos:column="8">=<pos:position pos:line="54" pos:column="9"/></operator> <call><name pos:line="54" pos:column="10">apr_dbd_query<pos:position pos:line="54" pos:column="23"/></name><argument_list pos:line="54" pos:column="23">(<argument><expr><name pos:line="54" pos:column="24">driver<pos:position pos:line="54" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="32">handle<pos:position pos:line="54" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="40">&amp;<pos:position pos:line="54" pos:column="45"/></operator><name pos:line="54" pos:column="41">nrows<pos:position pos:line="54" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="48">statement<pos:position pos:line="54" pos:column="57"/></name></expr></argument>)<pos:position pos:line="54" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="59"/></expr_stmt>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name pos:line="55" pos:column="9">rv<pos:position pos:line="55" pos:column="11"/></name></expr>)<pos:position pos:line="55" pos:column="12"/></condition><then pos:line="55" pos:column="12"> <block pos:line="55" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">printf<pos:position pos:line="56" pos:column="15"/></name><argument_list pos:line="56" pos:column="15">(<argument><expr><literal type="string" pos:line="56" pos:column="16">"Update failed: '%s'\n"<pos:position pos:line="56" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="41">apr_dbd_error<pos:position pos:line="56" pos:column="54"/></name><argument_list pos:line="56" pos:column="54">(<argument><expr><name pos:line="56" pos:column="55">driver<pos:position pos:line="56" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="63">handle<pos:position pos:line="56" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="71">rv<pos:position pos:line="56" pos:column="73"/></name></expr></argument>)<pos:position pos:line="56" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">apr_dbd_transaction_end<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">driver<pos:position pos:line="57" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="41">pool<pos:position pos:line="57" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="47">trans<pos:position pos:line="57" pos:column="52"/></name></expr></argument>)<pos:position pos:line="57" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="54"/></expr_stmt>
        <return pos:line="58" pos:column="9">return <expr><name pos:line="58" pos:column="16">rv<pos:position pos:line="58" pos:column="18"/></name></expr>;<pos:position pos:line="58" pos:column="19"/></return>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">printf<pos:position pos:line="60" pos:column="11"/></name><argument_list pos:line="60" pos:column="11">(<argument><expr><literal type="string" pos:line="60" pos:column="12">"%d rows updated\n"<pos:position pos:line="60" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="33">nrows<pos:position pos:line="60" pos:column="38"/></name></expr></argument>)<pos:position pos:line="60" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="61" pos:column="5">statement<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">=<pos:position pos:line="61" pos:column="16"/></operator> <literal type="string" pos:line="61" pos:column="17">"INSERT INTO apr_dbd_test values ('aaa', 'zzz', 3)"<pos:position pos:line="61" pos:column="68"/></literal></expr>;<pos:position pos:line="61" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name pos:line="62" pos:column="5">rv<pos:position pos:line="62" pos:column="7"/></name> <operator pos:line="62" pos:column="8">=<pos:position pos:line="62" pos:column="9"/></operator> <call><name pos:line="62" pos:column="10">apr_dbd_query<pos:position pos:line="62" pos:column="23"/></name><argument_list pos:line="62" pos:column="23">(<argument><expr><name pos:line="62" pos:column="24">driver<pos:position pos:line="62" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="32">handle<pos:position pos:line="62" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="40">&amp;<pos:position pos:line="62" pos:column="45"/></operator><name pos:line="62" pos:column="41">nrows<pos:position pos:line="62" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="48">statement<pos:position pos:line="62" pos:column="57"/></name></expr></argument>)<pos:position pos:line="62" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">printf<pos:position pos:line="63" pos:column="11"/></name><argument_list pos:line="63" pos:column="11">(<argument><expr><literal type="string" pos:line="63" pos:column="12">"Valid insert returned %d.  Should be zero (OK)\n"<pos:position pos:line="63" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="64">rv<pos:position pos:line="63" pos:column="66"/></name></expr></argument>)<pos:position pos:line="63" pos:column="67"/></argument_list></call></expr> ;<pos:position pos:line="63" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name pos:line="64" pos:column="5">rv<pos:position pos:line="64" pos:column="7"/></name> <operator pos:line="64" pos:column="8">=<pos:position pos:line="64" pos:column="9"/></operator> <call><name pos:line="64" pos:column="10">apr_dbd_transaction_end<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><name pos:line="64" pos:column="34">driver<pos:position pos:line="64" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="42">pool<pos:position pos:line="64" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="48">trans<pos:position pos:line="64" pos:column="53"/></name></expr></argument>)<pos:position pos:line="64" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="55"/></expr_stmt>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name pos:line="65" pos:column="9">rv<pos:position pos:line="65" pos:column="11"/></name></expr>)<pos:position pos:line="65" pos:column="12"/></condition><then pos:line="65" pos:column="12"> <block pos:line="65" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">printf<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><literal type="string" pos:line="66" pos:column="16">"End transaction failed!\n%s\n"<pos:position pos:line="66" pos:column="47"/></literal></expr></argument>,
               <argument><expr><call><name pos:line="67" pos:column="16">apr_dbd_error<pos:position pos:line="67" pos:column="29"/></name><argument_list pos:line="67" pos:column="29">(<argument><expr><name pos:line="67" pos:column="30">driver<pos:position pos:line="67" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="38">handle<pos:position pos:line="67" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="46">rv<pos:position pos:line="67" pos:column="48"/></name></expr></argument>)<pos:position pos:line="67" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="51"/></expr_stmt>
        <return pos:line="68" pos:column="9">return <expr><name pos:line="68" pos:column="16">rv<pos:position pos:line="68" pos:column="18"/></name></expr>;<pos:position pos:line="68" pos:column="19"/></return>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">printf<pos:position pos:line="70" pos:column="11"/></name><argument_list pos:line="70" pos:column="11">(<argument><expr><literal type="string" pos:line="70" pos:column="12">"Transaction ended (should be commit) - viewing table\n"<pos:position pos:line="70" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">select_sequential<pos:position pos:line="71" pos:column="22"/></name><argument_list pos:line="71" pos:column="22">(<argument><expr><name pos:line="71" pos:column="23">pool<pos:position pos:line="71" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="29">handle<pos:position pos:line="71" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="37">driver<pos:position pos:line="71" pos:column="43"/></name></expr></argument>)<pos:position pos:line="71" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="45"/></expr_stmt>
    <return pos:line="72" pos:column="5">return <expr><name pos:line="72" pos:column="12">rv<pos:position pos:line="72" pos:column="14"/></name></expr>;<pos:position pos:line="72" pos:column="15"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

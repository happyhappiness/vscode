<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_101_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_password<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">user<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">realm<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">apr_file_t<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">f<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">pw<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_md5_ctx_t<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">context<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">char<pos:position pos:line="5" pos:column="18"/></name></type> <name><name pos:line="5" pos:column="19">digest<pos:position pos:line="5" pos:column="25"/></name><index pos:line="5" pos:column="25">[<expr><literal type="number" pos:line="5" pos:column="26">16<pos:position pos:line="5" pos:column="28"/></literal></expr>]<pos:position pos:line="5" pos:column="29"/></index></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">string<pos:position pos:line="6" pos:column="16"/></name><index pos:line="6" pos:column="16">[<expr><literal type="number" pos:line="6" pos:column="17">3<pos:position pos:line="6" pos:column="18"/></literal> <operator pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">MAX_STRING_LEN<pos:position pos:line="6" pos:column="35"/></name></expr>]<pos:position pos:line="6" pos:column="36"/></index></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt> <comment type="block" pos:line="6" pos:column="38">/* this includes room for 2 * ':' + '\0' */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">pwin<pos:position pos:line="7" pos:column="14"/></name><index pos:line="7" pos:column="14">[<expr><name pos:line="7" pos:column="15">MAX_STRING_LEN<pos:position pos:line="7" pos:column="29"/></name></expr>]<pos:position pos:line="7" pos:column="30"/></index></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">pwv<pos:position pos:line="8" pos:column="13"/></name><index pos:line="8" pos:column="13">[<expr><name pos:line="8" pos:column="14">MAX_STRING_LEN<pos:position pos:line="8" pos:column="28"/></name></expr>]<pos:position pos:line="8" pos:column="29"/></index></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">unsigned<pos:position pos:line="9" pos:column="13"/></name> <name pos:line="9" pos:column="14">int<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">i<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">len<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><sizeof pos:line="10" pos:column="22">sizeof<argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">pwin<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">apr_password_get<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><literal type="string" pos:line="12" pos:column="26">"New password: "<pos:position pos:line="12" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="44">pwin<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="50">&amp;<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="51">len<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call> <operator pos:line="12" pos:column="56">!=<pos:position pos:line="12" pos:column="58"/></operator> <name pos:line="12" pos:column="59">APR_SUCCESS<pos:position pos:line="12" pos:column="70"/></name></expr>)<pos:position pos:line="12" pos:column="71"/></condition><then pos:line="12" pos:column="71"> <block pos:line="12" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">apr_file_printf<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">errfile<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="34">"password too long"<pos:position pos:line="13" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">cleanup_tempfile_and_exit<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><literal type="number" pos:line="14" pos:column="35">5<pos:position pos:line="14" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="16" pos:column="5">len<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <sizeof pos:line="16" pos:column="11">sizeof<argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">pwin<pos:position pos:line="16" pos:column="22"/></name></expr></argument>)<pos:position pos:line="16" pos:column="23"/></argument_list></sizeof></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">apr_password_get<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><literal type="string" pos:line="17" pos:column="22">"Re-type new password: "<pos:position pos:line="17" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">pwv<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="53">&amp;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="54">len<pos:position pos:line="17" pos:column="57"/></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">strcmp<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">pwin<pos:position pos:line="18" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="22">pwv<pos:position pos:line="18" pos:column="25"/></name></expr></argument>)<pos:position pos:line="18" pos:column="26"/></argument_list></call> <operator pos:line="18" pos:column="27">!=<pos:position pos:line="18" pos:column="29"/></operator> <literal type="number" pos:line="18" pos:column="30">0<pos:position pos:line="18" pos:column="31"/></literal></expr>)<pos:position pos:line="18" pos:column="32"/></condition><then pos:line="18" pos:column="32"> <block pos:line="18" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">apr_file_printf<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">errfile<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="34">"They don't match, sorry.\n"<pos:position pos:line="19" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">cleanup_tempfile_and_exit<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><literal type="number" pos:line="20" pos:column="35">1<pos:position pos:line="20" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="22" pos:column="5">pw<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <name pos:line="22" pos:column="10">pwin<pos:position pos:line="22" pos:column="14"/></name></expr>;<pos:position pos:line="22" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">apr_file_printf<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">f<pos:position pos:line="23" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="24">"%s:%s:"<pos:position pos:line="23" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">user<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">realm<pos:position pos:line="23" pos:column="45"/></name></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/* Do MD5 stuff */</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">apr_snprintf<pos:position pos:line="26" pos:column="17"/></name><argument_list pos:line="26" pos:column="17">(<argument><expr><name pos:line="26" pos:column="18">string<pos:position pos:line="26" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="26">sizeof<argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">string<pos:position pos:line="26" pos:column="39"/></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="42">"%s:%s:%s"<pos:position pos:line="26" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="54">user<pos:position pos:line="26" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="60">realm<pos:position pos:line="26" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="67">pw<pos:position pos:line="26" pos:column="69"/></name></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="71"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">apr_md5_init<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">(<argument><expr><operator pos:line="28" pos:column="18">&amp;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="19">context<pos:position pos:line="28" pos:column="26"/></name></expr></argument>)<pos:position pos:line="28" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt>
<cpp:if pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">if<pos:position pos:line="29" pos:column="4"/></cpp:directive> <expr><name pos:line="29" pos:column="5">APR_CHARSET_EBCDIC<pos:position pos:line="29" pos:column="23"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">apr_md5_set_xlate<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><operator pos:line="30" pos:column="23">&amp;<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="24">context<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="33">to_ascii<pos:position pos:line="30" pos:column="41"/></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">apr_md5_update<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><operator pos:line="32" pos:column="20">&amp;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="21">context<pos:position pos:line="32" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="30">(<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="31">unsigned<pos:position pos:line="32" pos:column="39"/></name> <name pos:line="32" pos:column="40">char<pos:position pos:line="32" pos:column="44"/></name> <operator pos:line="32" pos:column="45">*<pos:position pos:line="32" pos:column="46"/></operator><operator pos:line="32" pos:column="46">)<pos:position pos:line="32" pos:column="47"/></operator> <name pos:line="32" pos:column="48">string<pos:position pos:line="32" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="56">strlen<pos:position pos:line="32" pos:column="62"/></name><argument_list pos:line="32" pos:column="62">(<argument><expr><name pos:line="32" pos:column="63">string<pos:position pos:line="32" pos:column="69"/></name></expr></argument>)<pos:position pos:line="32" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">apr_md5_final<pos:position pos:line="33" pos:column="18"/></name><argument_list pos:line="33" pos:column="18">(<argument><expr><name pos:line="33" pos:column="19">digest<pos:position pos:line="33" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="27">&amp;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="28">context<pos:position pos:line="33" pos:column="35"/></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>

    <for pos:line="35" pos:column="5">for <control pos:line="35" pos:column="9">(<init><expr><name pos:line="35" pos:column="10">i<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <literal type="number" pos:line="35" pos:column="14">0<pos:position pos:line="35" pos:column="15"/></literal></expr>;<pos:position pos:line="35" pos:column="16"/></init> <condition><expr><name pos:line="35" pos:column="17">i<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">&lt;<pos:position pos:line="35" pos:column="23"/></operator> <literal type="number" pos:line="35" pos:column="21">16<pos:position pos:line="35" pos:column="23"/></literal></expr>;<pos:position pos:line="35" pos:column="24"/></condition> <incr><expr><name pos:line="35" pos:column="25">i<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">++<pos:position pos:line="35" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="29"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="9">apr_file_printf<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">f<pos:position pos:line="36" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="28">"%02x"<pos:position pos:line="36" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="36">digest<pos:position pos:line="36" pos:column="42"/></name><index pos:line="36" pos:column="42">[<expr><name pos:line="36" pos:column="43">i<pos:position pos:line="36" pos:column="44"/></name></expr>]<pos:position pos:line="36" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt></block></for>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">apr_file_printf<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><name pos:line="38" pos:column="21">f<pos:position pos:line="38" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="24">"\n"<pos:position pos:line="38" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1860.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">send_all_header_fields<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">header_struct<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">h<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                           <parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name pos:line="2" pos:column="50">request_rec<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">r<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">apr_array_header_t<pos:position pos:line="4" pos:column="29"/></name> <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="31">elts<pos:position pos:line="4" pos:column="35"/></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">apr_table_entry_t<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">t_elt<pos:position pos:line="5" pos:column="35"/></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">apr_table_entry_t<pos:position pos:line="6" pos:column="28"/></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">t_end<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">iovec<pos:position pos:line="7" pos:column="17"/></name></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">vec<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">iovec<pos:position pos:line="8" pos:column="17"/></name></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">vec_next<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">elts<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">apr_table_elts<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name><name pos:line="10" pos:column="27">r<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">-&gt;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="30">headers_out<pos:position pos:line="10" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">elts<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">nelts<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">==<pos:position pos:line="11" pos:column="23"/></operator> <literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26"> <block pos:line="11" pos:column="27">{
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">APR_SUCCESS<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="14" pos:column="5">t_elt<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <operator pos:line="14" pos:column="13">(<pos:position pos:line="14" pos:column="14"/></operator><specifier pos:line="14" pos:column="14">const<pos:position pos:line="14" pos:column="19"/></specifier> <name pos:line="14" pos:column="20">apr_table_entry_t<pos:position pos:line="14" pos:column="37"/></name> <operator pos:line="14" pos:column="38">*<pos:position pos:line="14" pos:column="39"/></operator><operator pos:line="14" pos:column="39">)<pos:position pos:line="14" pos:column="40"/></operator><operator pos:line="14" pos:column="40">(<pos:position pos:line="14" pos:column="41"/></operator><name><name pos:line="14" pos:column="41">elts<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">-&gt;<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="47">elts<pos:position pos:line="14" pos:column="51"/></name></name><operator pos:line="14" pos:column="51">)<pos:position pos:line="14" pos:column="52"/></operator></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">t_end<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">t_elt<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">+<pos:position pos:line="15" pos:column="20"/></operator> <name><name pos:line="15" pos:column="21">elts<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">nelts<pos:position pos:line="15" pos:column="32"/></name></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">vec<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <operator pos:line="16" pos:column="11">(<pos:position pos:line="16" pos:column="12"/></operator>struct <name pos:line="16" pos:column="19">iovec<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">*<pos:position pos:line="16" pos:column="26"/></operator><operator pos:line="16" pos:column="26">)<pos:position pos:line="16" pos:column="27"/></operator><call><name pos:line="16" pos:column="27">apr_palloc<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><name><name pos:line="16" pos:column="38">h<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">pool<pos:position pos:line="16" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="47">4<pos:position pos:line="16" pos:column="48"/></literal> <operator pos:line="16" pos:column="49">*<pos:position pos:line="16" pos:column="50"/></operator> <name><name pos:line="16" pos:column="51">elts<pos:position pos:line="16" pos:column="55"/></name><operator pos:line="16" pos:column="55">-&gt;<pos:position pos:line="16" pos:column="60"/></operator><name pos:line="16" pos:column="57">nelts<pos:position pos:line="16" pos:column="62"/></name></name> <operator pos:line="16" pos:column="63">*<pos:position pos:line="16" pos:column="64"/></operator>
                                     <sizeof pos:line="17" pos:column="38">sizeof<argument_list pos:line="17" pos:column="44">(<argument><expr pos:line="17" pos:column="45">struct <name pos:line="17" pos:column="52">iovec<pos:position pos:line="17" pos:column="57"/></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">vec_next<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">vec<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>

    <comment type="block" pos:line="20" pos:column="5">/* For each field, generate
     *    name ": " value CRLF
     */</comment>
    <do pos:line="23" pos:column="5">do <block pos:line="23" pos:column="8">{
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">vec_next<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">iov_base<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <operator pos:line="24" pos:column="30">(<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="31">void<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">*<pos:position pos:line="24" pos:column="36"/></operator><operator pos:line="24" pos:column="36">)<pos:position pos:line="24" pos:column="37"/></operator><operator pos:line="24" pos:column="37">(<pos:position pos:line="24" pos:column="38"/></operator><name><name pos:line="24" pos:column="38">t_elt<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">-&gt;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="45">key<pos:position pos:line="24" pos:column="48"/></name></name><operator pos:line="24" pos:column="48">)<pos:position pos:line="24" pos:column="49"/></operator></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">vec_next<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">iov_len<pos:position pos:line="25" pos:column="26"/></name></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <call><name pos:line="25" pos:column="29">strlen<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><name><name pos:line="25" pos:column="36">t_elt<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">key<pos:position pos:line="25" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">vec_next<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">++<pos:position pos:line="26" pos:column="19"/></operator></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">vec_next<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">iov_base<pos:position pos:line="27" pos:column="27"/></name></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <literal type="string" pos:line="27" pos:column="30">": "<pos:position pos:line="27" pos:column="34"/></literal></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">vec_next<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">iov_len<pos:position pos:line="28" pos:column="26"/></name></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <sizeof pos:line="28" pos:column="29">sizeof<argument_list pos:line="28" pos:column="35">(<argument><expr><literal type="string" pos:line="28" pos:column="36">": "<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></sizeof> <operator pos:line="28" pos:column="42">-<pos:position pos:line="28" pos:column="43"/></operator> <literal type="number" pos:line="28" pos:column="44">1<pos:position pos:line="28" pos:column="45"/></literal></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">vec_next<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">++<pos:position pos:line="29" pos:column="19"/></operator></expr>;<pos:position pos:line="29" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">vec_next<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">iov_base<pos:position pos:line="30" pos:column="27"/></name></name> <operator pos:line="30" pos:column="28">=<pos:position pos:line="30" pos:column="29"/></operator> <operator pos:line="30" pos:column="30">(<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="31">void<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">*<pos:position pos:line="30" pos:column="36"/></operator><operator pos:line="30" pos:column="36">)<pos:position pos:line="30" pos:column="37"/></operator><operator pos:line="30" pos:column="37">(<pos:position pos:line="30" pos:column="38"/></operator><name><name pos:line="30" pos:column="38">t_elt<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">-&gt;<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="45">val<pos:position pos:line="30" pos:column="48"/></name></name><operator pos:line="30" pos:column="48">)<pos:position pos:line="30" pos:column="49"/></operator></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">vec_next<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">iov_len<pos:position pos:line="31" pos:column="26"/></name></name> <operator pos:line="31" pos:column="27">=<pos:position pos:line="31" pos:column="28"/></operator> <call><name pos:line="31" pos:column="29">strlen<pos:position pos:line="31" pos:column="35"/></name><argument_list pos:line="31" pos:column="35">(<argument><expr><name><name pos:line="31" pos:column="36">t_elt<pos:position pos:line="31" pos:column="41"/></name><operator pos:line="31" pos:column="41">-&gt;<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="43">val<pos:position pos:line="31" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">vec_next<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">++<pos:position pos:line="32" pos:column="19"/></operator></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">vec_next<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">iov_base<pos:position pos:line="33" pos:column="27"/></name></name> <operator pos:line="33" pos:column="28">=<pos:position pos:line="33" pos:column="29"/></operator> <name pos:line="33" pos:column="30">CRLF<pos:position pos:line="33" pos:column="34"/></name></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">vec_next<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">-&gt;<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="19">iov_len<pos:position pos:line="34" pos:column="26"/></name></name> <operator pos:line="34" pos:column="27">=<pos:position pos:line="34" pos:column="28"/></operator> <sizeof pos:line="34" pos:column="29">sizeof<argument_list pos:line="34" pos:column="35">(<argument><expr><name pos:line="34" pos:column="36">CRLF<pos:position pos:line="34" pos:column="40"/></name></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></sizeof> <operator pos:line="34" pos:column="42">-<pos:position pos:line="34" pos:column="43"/></operator> <literal type="number" pos:line="34" pos:column="44">1<pos:position pos:line="34" pos:column="45"/></literal></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">vec_next<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">++<pos:position pos:line="35" pos:column="19"/></operator></expr>;<pos:position pos:line="35" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="36" pos:column="9">t_elt<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">++<pos:position pos:line="36" pos:column="16"/></operator></expr>;<pos:position pos:line="36" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block> while <condition pos:line="37" pos:column="13">(<expr><name pos:line="37" pos:column="14">t_elt<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">&lt;<pos:position pos:line="37" pos:column="24"/></operator> <name pos:line="37" pos:column="22">t_end<pos:position pos:line="37" pos:column="27"/></name></expr>)<pos:position pos:line="37" pos:column="28"/></condition>;<pos:position pos:line="37" pos:column="29"/></do>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><call><name pos:line="39" pos:column="9">APLOGrtrace4<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name pos:line="39" pos:column="22">r<pos:position pos:line="39" pos:column="23"/></name></expr></argument>)<pos:position pos:line="39" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="25"/></condition><then pos:line="39" pos:column="25"> <block pos:line="39" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">ap_log_rerror<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">APLOG_MARK<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="35">APLOG_TRACE4<pos:position pos:line="40" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="49">0<pos:position pos:line="40" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="52">r<pos:position pos:line="40" pos:column="53"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="41" pos:column="23">"Headers sent to client:"<pos:position pos:line="41" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="42" pos:column="9">t_elt<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <operator pos:line="42" pos:column="17">(<pos:position pos:line="42" pos:column="18"/></operator><specifier pos:line="42" pos:column="18">const<pos:position pos:line="42" pos:column="23"/></specifier> <name pos:line="42" pos:column="24">apr_table_entry_t<pos:position pos:line="42" pos:column="41"/></name> <operator pos:line="42" pos:column="42">*<pos:position pos:line="42" pos:column="43"/></operator><operator pos:line="42" pos:column="43">)<pos:position pos:line="42" pos:column="44"/></operator><operator pos:line="42" pos:column="44">(<pos:position pos:line="42" pos:column="45"/></operator><name><name pos:line="42" pos:column="45">elts<pos:position pos:line="42" pos:column="49"/></name><operator pos:line="42" pos:column="49">-&gt;<pos:position pos:line="42" pos:column="54"/></operator><name pos:line="42" pos:column="51">elts<pos:position pos:line="42" pos:column="55"/></name></name><operator pos:line="42" pos:column="55">)<pos:position pos:line="42" pos:column="56"/></operator></expr>;<pos:position pos:line="42" pos:column="57"/></expr_stmt>
        <do pos:line="43" pos:column="9">do <block pos:line="43" pos:column="12">{
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">ap_log_rerror<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name pos:line="44" pos:column="27">APLOG_MARK<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="39">APLOG_TRACE4<pos:position pos:line="44" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="53">0<pos:position pos:line="44" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="56">r<pos:position pos:line="44" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="59">"%s: %s"<pos:position pos:line="44" pos:column="67"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="45" pos:column="27">ap_escape_logitem<pos:position pos:line="45" pos:column="44"/></name><argument_list pos:line="45" pos:column="44">(<argument><expr><name><name pos:line="45" pos:column="45">r<pos:position pos:line="45" pos:column="46"/></name><operator pos:line="45" pos:column="46">-&gt;<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="48">pool<pos:position pos:line="45" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="54">t_elt<pos:position pos:line="45" pos:column="59"/></name><operator pos:line="45" pos:column="59">-&gt;<pos:position pos:line="45" pos:column="64"/></operator><name pos:line="45" pos:column="61">key<pos:position pos:line="45" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="65"/></argument_list></call></expr></argument>,
                          <argument><expr><call><name pos:line="46" pos:column="27">ap_escape_logitem<pos:position pos:line="46" pos:column="44"/></name><argument_list pos:line="46" pos:column="44">(<argument><expr><name><name pos:line="46" pos:column="45">r<pos:position pos:line="46" pos:column="46"/></name><operator pos:line="46" pos:column="46">-&gt;<pos:position pos:line="46" pos:column="51"/></operator><name pos:line="46" pos:column="48">pool<pos:position pos:line="46" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="54">t_elt<pos:position pos:line="46" pos:column="59"/></name><operator pos:line="46" pos:column="59">-&gt;<pos:position pos:line="46" pos:column="64"/></operator><name pos:line="46" pos:column="61">val<pos:position pos:line="46" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><name pos:line="47" pos:column="13">t_elt<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">++<pos:position pos:line="47" pos:column="20"/></operator></expr>;<pos:position pos:line="47" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block> while <condition pos:line="48" pos:column="17">(<expr><name pos:line="48" pos:column="18">t_elt<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">&lt;<pos:position pos:line="48" pos:column="28"/></operator> <name pos:line="48" pos:column="26">t_end<pos:position pos:line="48" pos:column="31"/></name></expr>)<pos:position pos:line="48" pos:column="32"/></condition>;<pos:position pos:line="48" pos:column="33"/></do>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

<cpp:if pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">if<pos:position pos:line="51" pos:column="4"/></cpp:directive> <expr><name pos:line="51" pos:column="5">APR_CHARSET_EBCDIC<pos:position pos:line="51" pos:column="23"/></name></expr></cpp:if>
    <block pos:line="52" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="53" pos:column="9">apr_size_t<pos:position pos:line="53" pos:column="19"/></name></type> <name pos:line="53" pos:column="20">len<pos:position pos:line="53" pos:column="23"/></name></decl>;<pos:position pos:line="53" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="54" pos:column="9">char<pos:position pos:line="54" pos:column="13"/></name> <modifier pos:line="54" pos:column="14">*<pos:position pos:line="54" pos:column="15"/></modifier></type><name pos:line="54" pos:column="15">tmp<pos:position pos:line="54" pos:column="18"/></name> <init pos:line="54" pos:column="19">= <expr><call><name pos:line="54" pos:column="21">apr_pstrcatv<pos:position pos:line="54" pos:column="33"/></name><argument_list pos:line="54" pos:column="33">(<argument><expr><name><name pos:line="54" pos:column="34">r<pos:position pos:line="54" pos:column="35"/></name><operator pos:line="54" pos:column="35">-&gt;<pos:position pos:line="54" pos:column="40"/></operator><name pos:line="54" pos:column="37">pool<pos:position pos:line="54" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="43">vec<pos:position pos:line="54" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="48">vec_next<pos:position pos:line="54" pos:column="56"/></name> <operator pos:line="54" pos:column="57">-<pos:position pos:line="54" pos:column="58"/></operator> <name pos:line="54" pos:column="59">vec<pos:position pos:line="54" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="64">&amp;<pos:position pos:line="54" pos:column="69"/></operator><name pos:line="54" pos:column="65">len<pos:position pos:line="54" pos:column="68"/></name></expr></argument>)<pos:position pos:line="54" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="54" pos:column="70"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">ap_xlate_proto_to_ascii<pos:position pos:line="55" pos:column="32"/></name><argument_list pos:line="55" pos:column="32">(<argument><expr><name pos:line="55" pos:column="33">tmp<pos:position pos:line="55" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="38">len<pos:position pos:line="55" pos:column="41"/></name></expr></argument>)<pos:position pos:line="55" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="43"/></expr_stmt>
        <return pos:line="56" pos:column="9">return <expr><call><name pos:line="56" pos:column="16">apr_brigade_write<pos:position pos:line="56" pos:column="33"/></name><argument_list pos:line="56" pos:column="33">(<argument><expr><name><name pos:line="56" pos:column="34">h<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">-&gt;<pos:position pos:line="56" pos:column="40"/></operator><name pos:line="56" pos:column="37">bb<pos:position pos:line="56" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="41">NULL<pos:position pos:line="56" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="47">NULL<pos:position pos:line="56" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="53">tmp<pos:position pos:line="56" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="58">len<pos:position pos:line="56" pos:column="61"/></name></expr></argument>)<pos:position pos:line="56" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="63"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block>
<cpp:else pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">else<pos:position pos:line="58" pos:column="6"/></cpp:directive></cpp:else>
    <return pos:line="59" pos:column="5">return <expr><call><name pos:line="59" pos:column="12">apr_brigade_writev<pos:position pos:line="59" pos:column="30"/></name><argument_list pos:line="59" pos:column="30">(<argument><expr><name><name pos:line="59" pos:column="31">h<pos:position pos:line="59" pos:column="32"/></name><operator pos:line="59" pos:column="32">-&gt;<pos:position pos:line="59" pos:column="37"/></operator><name pos:line="59" pos:column="34">bb<pos:position pos:line="59" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="38">NULL<pos:position pos:line="59" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="44">NULL<pos:position pos:line="59" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="50">vec<pos:position pos:line="59" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="55">vec_next<pos:position pos:line="59" pos:column="63"/></name> <operator pos:line="59" pos:column="64">-<pos:position pos:line="59" pos:column="65"/></operator> <name pos:line="59" pos:column="66">vec<pos:position pos:line="59" pos:column="69"/></name></expr></argument>)<pos:position pos:line="59" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="71"/></return>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6972.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">hc_read_headers<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">sctx_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">ctx<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">request_rec<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">r<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">buffer<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><name pos:line="3" pos:column="17">HUGE_STRING_LEN<pos:position pos:line="3" pos:column="32"/></name></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">len<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">len<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">=<pos:position pos:line="6" pos:column="10"/></operator> <call><name pos:line="6" pos:column="11">ap_getline<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">buffer<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="30">sizeof<argument_list pos:line="6" pos:column="36">(<argument><expr><name pos:line="6" pos:column="37">buffer<pos:position pos:line="6" pos:column="43"/></name></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="6" pos:column="46">r<pos:position pos:line="6" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="49">1<pos:position pos:line="6" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="52"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">len<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">&lt;=<pos:position pos:line="7" pos:column="18"/></operator> <literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18"> <block pos:line="7" pos:column="19">{
        <return pos:line="8" pos:column="9">return <expr><operator pos:line="8" pos:column="16">!<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">OK<pos:position pos:line="8" pos:column="19"/></name></expr>;<pos:position pos:line="8" pos:column="20"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ap_log_error<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">APLOG_MARK<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="30">APLOG_DEBUG<pos:position pos:line="10" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="43">0<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="46">ctx<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">-&gt;<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="51">s<pos:position pos:line="10" pos:column="52"/></name></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="54">APLOGNO<pos:position pos:line="10" pos:column="61"/></name><argument_list pos:line="10" pos:column="61">(<argument><expr><literal type="number" pos:line="10" pos:column="62">03254<pos:position pos:line="10" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call>
            <literal type="string" pos:line="11" pos:column="13">"%s"<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="19">buffer<pos:position pos:line="11" pos:column="25"/></name></expr></argument>)<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
    <comment type="block" pos:line="12" pos:column="5">/* for the below, see ap_proxy_http_process_response() */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">apr_date_checkmask<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">buffer<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="36">"HTTP/#.# ###*"<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="53"/></condition><then pos:line="13" pos:column="53"> <block pos:line="13" pos:column="54">{
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">major<pos:position pos:line="14" pos:column="18"/></name></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name></type> <name pos:line="15" pos:column="14">keepchar<pos:position pos:line="15" pos:column="22"/></name></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">int<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">proxy_status<pos:position pos:line="16" pos:column="25"/></name> <init pos:line="16" pos:column="26">= <expr><name pos:line="16" pos:column="28">OK<pos:position pos:line="16" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">const<pos:position pos:line="17" pos:column="14"/></specifier> <name pos:line="17" pos:column="15">char<pos:position pos:line="17" pos:column="19"/></name> <modifier pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></modifier></type><name pos:line="17" pos:column="21">proxy_status_line<pos:position pos:line="17" pos:column="38"/></name> <init pos:line="17" pos:column="39">= <expr><name pos:line="17" pos:column="41">NULL<pos:position pos:line="17" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="46"/></decl_stmt>

        <expr_stmt><expr><name pos:line="19" pos:column="9">major<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <name><name pos:line="19" pos:column="17">buffer<pos:position pos:line="19" pos:column="23"/></name><index pos:line="19" pos:column="23">[<expr><literal type="number" pos:line="19" pos:column="24">5<pos:position pos:line="19" pos:column="25"/></literal></expr>]<pos:position pos:line="19" pos:column="26"/></index></name> <operator pos:line="19" pos:column="27">-<pos:position pos:line="19" pos:column="28"/></operator> <literal type="char" pos:line="19" pos:column="29">'0'<pos:position pos:line="19" pos:column="32"/></literal></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">(<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">major<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">!=<pos:position pos:line="20" pos:column="22"/></operator> <literal type="number" pos:line="20" pos:column="23">1<pos:position pos:line="20" pos:column="24"/></literal><operator pos:line="20" pos:column="24">)<pos:position pos:line="20" pos:column="25"/></operator> <operator pos:line="20" pos:column="26">||<pos:position pos:line="20" pos:column="28"/></operator> <operator pos:line="20" pos:column="29">(<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">len<pos:position pos:line="20" pos:column="33"/></name> <operator pos:line="20" pos:column="34">&gt;=<pos:position pos:line="20" pos:column="39"/></operator> <sizeof pos:line="20" pos:column="37">sizeof<argument_list pos:line="20" pos:column="43">(<argument><expr><name pos:line="20" pos:column="44">buffer<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></sizeof><operator pos:line="20" pos:column="51">-<pos:position pos:line="20" pos:column="52"/></operator><literal type="number" pos:line="20" pos:column="52">1<pos:position pos:line="20" pos:column="53"/></literal><operator pos:line="20" pos:column="53">)<pos:position pos:line="20" pos:column="54"/></operator></expr>)<pos:position pos:line="20" pos:column="55"/></condition><then pos:line="20" pos:column="55"> <block pos:line="20" pos:column="56">{
            <return pos:line="21" pos:column="13">return <expr><operator pos:line="21" pos:column="20">!<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">OK<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="24" pos:column="9">keepchar<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <name><name pos:line="24" pos:column="20">buffer<pos:position pos:line="24" pos:column="26"/></name><index pos:line="24" pos:column="26">[<expr><literal type="number" pos:line="24" pos:column="27">12<pos:position pos:line="24" pos:column="29"/></literal></expr>]<pos:position pos:line="24" pos:column="30"/></index></name></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">buffer<pos:position pos:line="25" pos:column="15"/></name><index pos:line="25" pos:column="15">[<expr><literal type="number" pos:line="25" pos:column="16">12<pos:position pos:line="25" pos:column="18"/></literal></expr>]<pos:position pos:line="25" pos:column="19"/></index></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <literal type="char" pos:line="25" pos:column="22">'\0'<pos:position pos:line="25" pos:column="26"/></literal></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">proxy_status<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <call><name pos:line="26" pos:column="24">atoi<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><operator pos:line="26" pos:column="29">&amp;<pos:position pos:line="26" pos:column="34"/></operator><name><name pos:line="26" pos:column="30">buffer<pos:position pos:line="26" pos:column="36"/></name><index pos:line="26" pos:column="36">[<expr><literal type="number" pos:line="26" pos:column="37">9<pos:position pos:line="26" pos:column="38"/></literal></expr>]<pos:position pos:line="26" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">keepchar<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">!=<pos:position pos:line="27" pos:column="24"/></operator> <literal type="char" pos:line="27" pos:column="25">'\0'<pos:position pos:line="27" pos:column="29"/></literal></expr>)<pos:position pos:line="27" pos:column="30"/></condition><then pos:line="27" pos:column="30"> <block pos:line="27" pos:column="31">{
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">buffer<pos:position pos:line="28" pos:column="19"/></name><index pos:line="28" pos:column="19">[<expr><literal type="number" pos:line="28" pos:column="20">12<pos:position pos:line="28" pos:column="22"/></literal></expr>]<pos:position pos:line="28" pos:column="23"/></index></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <name pos:line="28" pos:column="26">keepchar<pos:position pos:line="28" pos:column="34"/></name></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then> <else pos:line="29" pos:column="11">else <block pos:line="29" pos:column="16">{
            <expr_stmt><expr><name><name pos:line="30" pos:column="13">buffer<pos:position pos:line="30" pos:column="19"/></name><index pos:line="30" pos:column="19">[<expr><literal type="number" pos:line="30" pos:column="20">12<pos:position pos:line="30" pos:column="22"/></literal></expr>]<pos:position pos:line="30" pos:column="23"/></index></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <literal type="char" pos:line="30" pos:column="26">' '<pos:position pos:line="30" pos:column="29"/></literal></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">buffer<pos:position pos:line="31" pos:column="19"/></name><index pos:line="31" pos:column="19">[<expr><literal type="number" pos:line="31" pos:column="20">13<pos:position pos:line="31" pos:column="22"/></literal></expr>]<pos:position pos:line="31" pos:column="23"/></index></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <literal type="char" pos:line="31" pos:column="26">'\0'<pos:position pos:line="31" pos:column="30"/></literal></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="33" pos:column="9">proxy_status_line<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <call><name pos:line="33" pos:column="29">apr_pstrdup<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><name><name pos:line="33" pos:column="41">r<pos:position pos:line="33" pos:column="42"/></name><operator pos:line="33" pos:column="42">-&gt;<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="44">pool<pos:position pos:line="33" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="50">&amp;<pos:position pos:line="33" pos:column="55"/></operator><name><name pos:line="33" pos:column="51">buffer<pos:position pos:line="33" pos:column="57"/></name><index pos:line="33" pos:column="57">[<expr><literal type="number" pos:line="33" pos:column="58">9<pos:position pos:line="33" pos:column="59"/></literal></expr>]<pos:position pos:line="33" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">r<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">status<pos:position pos:line="34" pos:column="18"/></name></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">proxy_status<pos:position pos:line="34" pos:column="33"/></name></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">r<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">status_line<pos:position pos:line="35" pos:column="23"/></name></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <name pos:line="35" pos:column="26">proxy_status_line<pos:position pos:line="35" pos:column="43"/></name></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then> <else pos:line="36" pos:column="7">else <block pos:line="36" pos:column="12">{
        <return pos:line="37" pos:column="9">return <expr><operator pos:line="37" pos:column="16">!<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">OK<pos:position pos:line="37" pos:column="19"/></name></expr>;<pos:position pos:line="37" pos:column="20"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>
    <comment type="block" pos:line="39" pos:column="5">/* OK, 1st line is OK... scarf in the headers */</comment>
    <while pos:line="40" pos:column="5">while <condition pos:line="40" pos:column="11">(<expr><operator pos:line="40" pos:column="12">(<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="13">len<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <call><name pos:line="40" pos:column="19">ap_getline<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">buffer<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="38">sizeof<argument_list pos:line="40" pos:column="44">(<argument><expr><name pos:line="40" pos:column="45">buffer<pos:position pos:line="40" pos:column="51"/></name></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="40" pos:column="54">r<pos:position pos:line="40" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="57">1<pos:position pos:line="40" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call><operator pos:line="40" pos:column="59">)<pos:position pos:line="40" pos:column="60"/></operator> <operator pos:line="40" pos:column="61">&gt;<pos:position pos:line="40" pos:column="65"/></operator> <literal type="number" pos:line="40" pos:column="63">0<pos:position pos:line="40" pos:column="64"/></literal></expr>)<pos:position pos:line="40" pos:column="65"/></condition> <block pos:line="40" pos:column="66">{
        <decl_stmt><decl><type><name pos:line="41" pos:column="9">char<pos:position pos:line="41" pos:column="13"/></name> <modifier pos:line="41" pos:column="14">*<pos:position pos:line="41" pos:column="15"/></modifier></type><name pos:line="41" pos:column="15">value<pos:position pos:line="41" pos:column="20"/></name></decl>, <modifier pos:line="41" pos:column="22">*<pos:position pos:line="41" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="41" pos:column="23">end<pos:position pos:line="41" pos:column="26"/></name></decl>;<pos:position pos:line="41" pos:column="27"/></decl_stmt>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">!<pos:position pos:line="42" pos:column="14"/></operator><operator pos:line="42" pos:column="14">(<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">value<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <call><name pos:line="42" pos:column="23">strchr<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name pos:line="42" pos:column="30">buffer<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="42" pos:column="38">':'<pos:position pos:line="42" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call><operator pos:line="42" pos:column="42">)<pos:position pos:line="42" pos:column="43"/></operator></expr>)<pos:position pos:line="42" pos:column="44"/></condition><then pos:line="42" pos:column="44"> <block pos:line="42" pos:column="45">{
            <return pos:line="43" pos:column="13">return <expr><operator pos:line="43" pos:column="20">!<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="21">OK<pos:position pos:line="43" pos:column="23"/></name></expr>;<pos:position pos:line="43" pos:column="24"/></return>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">ap_log_error<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">APLOG_MARK<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="34">APLOG_TRACE7<pos:position pos:line="45" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="48">0<pos:position pos:line="45" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="51">ctx<pos:position pos:line="45" pos:column="54"/></name><operator pos:line="45" pos:column="54">-&gt;<pos:position pos:line="45" pos:column="59"/></operator><name pos:line="45" pos:column="56">s<pos:position pos:line="45" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="59">"%s"<pos:position pos:line="45" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="65">buffer<pos:position pos:line="45" pos:column="71"/></name></expr></argument>)<pos:position pos:line="45" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="46" pos:column="9">*<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">value<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <literal type="char" pos:line="46" pos:column="18">'\0'<pos:position pos:line="46" pos:column="22"/></literal></expr>;<pos:position pos:line="46" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="47" pos:column="9">++<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="11">value<pos:position pos:line="47" pos:column="16"/></name></expr>;<pos:position pos:line="47" pos:column="17"/></expr_stmt>
        <while pos:line="48" pos:column="9">while <condition pos:line="48" pos:column="15">(<expr><call><name pos:line="48" pos:column="16">apr_isspace<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">(<argument><expr><operator pos:line="48" pos:column="28">*<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="29">value<pos:position pos:line="48" pos:column="34"/></name></expr></argument>)<pos:position pos:line="48" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="36"/></condition>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="49" pos:column="13">++<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="15">value<pos:position pos:line="49" pos:column="20"/></name></expr>;<pos:position pos:line="49" pos:column="21"/></expr_stmt></block></while>            <comment type="block" pos:line="49" pos:column="33">/* Skip to start of value   */</comment>
        <for pos:line="50" pos:column="9">for <control pos:line="50" pos:column="13">(<init><expr><name pos:line="50" pos:column="14">end<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <operator pos:line="50" pos:column="20">&amp;<pos:position pos:line="50" pos:column="25"/></operator><name><name pos:line="50" pos:column="21">value<pos:position pos:line="50" pos:column="26"/></name><index pos:line="50" pos:column="26">[<expr><call><name pos:line="50" pos:column="27">strlen<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><name pos:line="50" pos:column="34">value<pos:position pos:line="50" pos:column="39"/></name></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></call><operator pos:line="50" pos:column="40">-<pos:position pos:line="50" pos:column="41"/></operator><literal type="number" pos:line="50" pos:column="41">1<pos:position pos:line="50" pos:column="42"/></literal></expr>]<pos:position pos:line="50" pos:column="43"/></index></name></expr>;<pos:position pos:line="50" pos:column="44"/></init> <condition><expr><name pos:line="50" pos:column="45">end<pos:position pos:line="50" pos:column="48"/></name> <operator pos:line="50" pos:column="49">&gt;<pos:position pos:line="50" pos:column="53"/></operator> <name pos:line="50" pos:column="51">value<pos:position pos:line="50" pos:column="56"/></name> <operator pos:line="50" pos:column="57">&amp;&amp;<pos:position pos:line="50" pos:column="67"/></operator> <call><name pos:line="50" pos:column="60">apr_isspace<pos:position pos:line="50" pos:column="71"/></name><argument_list pos:line="50" pos:column="71">(<argument><expr><operator pos:line="50" pos:column="72">*<pos:position pos:line="50" pos:column="73"/></operator><name pos:line="50" pos:column="73">end<pos:position pos:line="50" pos:column="76"/></name></expr></argument>)<pos:position pos:line="50" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="78"/></condition> <incr><expr><operator pos:line="50" pos:column="79">--<pos:position pos:line="50" pos:column="81"/></operator><name pos:line="50" pos:column="81">end<pos:position pos:line="50" pos:column="84"/></name></expr></incr>)<pos:position pos:line="50" pos:column="85"/></control>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="51" pos:column="13">*<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">end<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <literal type="char" pos:line="51" pos:column="20">'\0'<pos:position pos:line="51" pos:column="24"/></literal></expr>;<pos:position pos:line="51" pos:column="25"/></expr_stmt></block></for>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">apr_table_add<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><name><name pos:line="52" pos:column="23">r<pos:position pos:line="52" pos:column="24"/></name><operator pos:line="52" pos:column="24">-&gt;<pos:position pos:line="52" pos:column="29"/></operator><name pos:line="52" pos:column="26">headers_out<pos:position pos:line="52" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="39">buffer<pos:position pos:line="52" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="47">value<pos:position pos:line="52" pos:column="52"/></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></while>
    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">OK<pos:position pos:line="54" pos:column="14"/></name></expr>;<pos:position pos:line="54" pos:column="15"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

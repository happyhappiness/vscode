<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3135_httpd-2.0.61.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_socket_sendv<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">apr_socket_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type> <name pos:line="1" pos:column="46">sock<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name><name pos:line="1" pos:column="58">struct<pos:position pos:line="1" pos:column="64"/></name> <name pos:line="1" pos:column="65">iovec<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">vec<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">apr_int32_t<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">nvec<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">apr_size_t<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">len<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_ssize_t<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">rv<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">requested_len<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><literal type="number" pos:line="5" pos:column="32">0<pos:position pos:line="5" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_int32_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">i<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>;<pos:position pos:line="8" pos:column="16"/></init> <condition><expr><name pos:line="8" pos:column="17">i<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="21">nvec<pos:position pos:line="8" pos:column="25"/></name></expr>;<pos:position pos:line="8" pos:column="26"/></condition> <incr><expr><name pos:line="8" pos:column="27">i<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">++<pos:position pos:line="8" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="31"/></control> <block pos:line="8" pos:column="32">{
        <expr_stmt><expr><name pos:line="9" pos:column="9">requested_len<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">+=<pos:position pos:line="9" pos:column="25"/></operator> <name><name pos:line="9" pos:column="26">vec<pos:position pos:line="9" pos:column="29"/></name><index pos:line="9" pos:column="29">[<expr><name pos:line="9" pos:column="30">i<pos:position pos:line="9" pos:column="31"/></name></expr>]<pos:position pos:line="9" pos:column="32"/></index></name><operator pos:line="9" pos:column="32">.<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">iov_len<pos:position pos:line="9" pos:column="40"/></name></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></for>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">sock<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">netmask<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">&amp;<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="25">APR_INCOMPLETE_WRITE<pos:position pos:line="12" pos:column="45"/></name></expr>)<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46"> <block pos:line="12" pos:column="47">{
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">sock<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">netmask<pos:position pos:line="13" pos:column="22"/></name></name> <operator pos:line="13" pos:column="23">&amp;=<pos:position pos:line="13" pos:column="29"/></operator> <operator pos:line="13" pos:column="26">~<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="27">APR_INCOMPLETE_WRITE<pos:position pos:line="13" pos:column="47"/></name></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
        <goto pos:line="14" pos:column="9">goto <name pos:line="14" pos:column="14">do_select<pos:position pos:line="14" pos:column="23"/></name>;<pos:position pos:line="14" pos:column="24"/></goto>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <do pos:line="17" pos:column="5">do <block pos:line="17" pos:column="8">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">rv<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">writev<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name><name pos:line="18" pos:column="21">sock<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">socketdes<pos:position pos:line="18" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">vec<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">nvec<pos:position pos:line="18" pos:column="47"/></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block> while <condition pos:line="19" pos:column="13">(<expr><name pos:line="19" pos:column="14">rv<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">==<pos:position pos:line="19" pos:column="19"/></operator> <operator pos:line="19" pos:column="20">-<pos:position pos:line="19" pos:column="21"/></operator><literal type="number" pos:line="19" pos:column="21">1<pos:position pos:line="19" pos:column="22"/></literal> <operator pos:line="19" pos:column="23">&amp;&amp;<pos:position pos:line="19" pos:column="33"/></operator> <name pos:line="19" pos:column="26">errno<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">==<pos:position pos:line="19" pos:column="34"/></operator> <name pos:line="19" pos:column="35">EINTR<pos:position pos:line="19" pos:column="40"/></name></expr>)<pos:position pos:line="19" pos:column="41"/></condition>;<pos:position pos:line="19" pos:column="42"/></do>

    <while pos:line="21" pos:column="5">while <condition pos:line="21" pos:column="11">(<expr><name pos:line="21" pos:column="12">rv<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">==<pos:position pos:line="21" pos:column="17"/></operator> <operator pos:line="21" pos:column="18">-<pos:position pos:line="21" pos:column="19"/></operator><literal type="number" pos:line="21" pos:column="19">1<pos:position pos:line="21" pos:column="20"/></literal> <operator pos:line="21" pos:column="21">&amp;&amp;<pos:position pos:line="21" pos:column="31"/></operator> <operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">errno<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">==<pos:position pos:line="21" pos:column="33"/></operator> <name pos:line="21" pos:column="34">EAGAIN<pos:position pos:line="21" pos:column="40"/></name> <operator pos:line="21" pos:column="41">||<pos:position pos:line="21" pos:column="43"/></operator> <name pos:line="21" pos:column="44">errno<pos:position pos:line="21" pos:column="49"/></name> <operator pos:line="21" pos:column="50">==<pos:position pos:line="21" pos:column="52"/></operator> <name pos:line="21" pos:column="53">EWOULDBLOCK<pos:position pos:line="21" pos:column="64"/></name><operator pos:line="21" pos:column="64">)<pos:position pos:line="21" pos:column="65"/></operator> <operator pos:line="21" pos:column="66">&amp;&amp;<pos:position pos:line="21" pos:column="76"/></operator> 
        <call><name pos:line="22" pos:column="9">apr_is_option_set<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><name><name pos:line="22" pos:column="27">sock<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">netmask<pos:position pos:line="22" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="42">APR_SO_TIMEOUT<pos:position pos:line="22" pos:column="56"/></name></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="58"/></condition> <block pos:line="22" pos:column="59">{
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">apr_status_t<pos:position pos:line="23" pos:column="21"/></name></type> <name pos:line="23" pos:column="22">arv<pos:position pos:line="23" pos:column="25"/></name></decl>;<pos:position pos:line="23" pos:column="26"/></decl_stmt>
<label><name pos:line="24" pos:column="1">do_select<pos:position pos:line="24" pos:column="10"/></name>:<pos:position pos:line="24" pos:column="11"/></label>
        <expr_stmt><expr><name pos:line="25" pos:column="9">arv<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <call><name pos:line="25" pos:column="15">apr_wait_for_io_or_timeout<pos:position pos:line="25" pos:column="41"/></name><argument_list pos:line="25" pos:column="41">(<argument><expr><name pos:line="25" pos:column="42">NULL<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="48">sock<pos:position pos:line="25" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="54">0<pos:position pos:line="25" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="57"/></expr_stmt>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">arv<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">!=<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="20">APR_SUCCESS<pos:position pos:line="26" pos:column="31"/></name></expr>)<pos:position pos:line="26" pos:column="32"/></condition><then pos:line="26" pos:column="32"> <block pos:line="26" pos:column="33">{
            <expr_stmt><expr><operator pos:line="27" pos:column="13">*<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">len<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <literal type="number" pos:line="27" pos:column="20">0<pos:position pos:line="27" pos:column="21"/></literal></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>
            <return pos:line="28" pos:column="13">return <expr><name pos:line="28" pos:column="20">arv<pos:position pos:line="28" pos:column="23"/></name></expr>;<pos:position pos:line="28" pos:column="24"/></return>
        }<pos:position pos:line="29" pos:column="10"/></block></then>
        <else pos:line="30" pos:column="9">else <block pos:line="30" pos:column="14">{
            <do pos:line="31" pos:column="13">do <block pos:line="31" pos:column="16">{
                <expr_stmt><expr><name pos:line="32" pos:column="17">rv<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <call><name pos:line="32" pos:column="22">writev<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name><name pos:line="32" pos:column="29">sock<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">-&gt;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="35">socketdes<pos:position pos:line="32" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">vec<pos:position pos:line="32" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="51">nvec<pos:position pos:line="32" pos:column="55"/></name></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="57"/></expr_stmt>
            }<pos:position pos:line="33" pos:column="14"/></block> while <condition pos:line="33" pos:column="21">(<expr><name pos:line="33" pos:column="22">rv<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">==<pos:position pos:line="33" pos:column="27"/></operator> <operator pos:line="33" pos:column="28">-<pos:position pos:line="33" pos:column="29"/></operator><literal type="number" pos:line="33" pos:column="29">1<pos:position pos:line="33" pos:column="30"/></literal> <operator pos:line="33" pos:column="31">&amp;&amp;<pos:position pos:line="33" pos:column="41"/></operator> <name pos:line="33" pos:column="34">errno<pos:position pos:line="33" pos:column="39"/></name> <operator pos:line="33" pos:column="40">==<pos:position pos:line="33" pos:column="42"/></operator> <name pos:line="33" pos:column="43">EINTR<pos:position pos:line="33" pos:column="48"/></name></expr>)<pos:position pos:line="33" pos:column="49"/></condition>;<pos:position pos:line="33" pos:column="50"/></do>
        }<pos:position pos:line="34" pos:column="10"/></block></else></if>
    }<pos:position pos:line="35" pos:column="6"/></block></while>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">rv<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">==<pos:position pos:line="36" pos:column="14"/></operator> <operator pos:line="36" pos:column="15">-<pos:position pos:line="36" pos:column="16"/></operator><literal type="number" pos:line="36" pos:column="16">1<pos:position pos:line="36" pos:column="17"/></literal></expr>)<pos:position pos:line="36" pos:column="18"/></condition><then pos:line="36" pos:column="18"> <block pos:line="36" pos:column="19">{
        <expr_stmt><expr><operator pos:line="37" pos:column="9">*<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">len<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></expr_stmt>
        <return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">errno<pos:position pos:line="38" pos:column="21"/></name></expr>;<pos:position pos:line="38" pos:column="22"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><call><name pos:line="40" pos:column="9">apr_is_option_set<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name><name pos:line="40" pos:column="27">sock<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">-&gt;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="33">netmask<pos:position pos:line="40" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="42">APR_SO_TIMEOUT<pos:position pos:line="40" pos:column="56"/></name></expr></argument>)<pos:position pos:line="40" pos:column="57"/></argument_list></call> <operator pos:line="40" pos:column="58">&amp;&amp;<pos:position pos:line="40" pos:column="68"/></operator>
        <name pos:line="41" pos:column="9">rv<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">&lt;<pos:position pos:line="41" pos:column="16"/></operator> <name pos:line="41" pos:column="14">requested_len<pos:position pos:line="41" pos:column="27"/></name></expr>)<pos:position pos:line="41" pos:column="28"/></condition><then pos:line="41" pos:column="28"> <block pos:line="41" pos:column="29">{
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">sock<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">-&gt;<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="15">netmask<pos:position pos:line="42" pos:column="22"/></name></name> <operator pos:line="42" pos:column="23">|=<pos:position pos:line="42" pos:column="25"/></operator> <name pos:line="42" pos:column="26">APR_INCOMPLETE_WRITE<pos:position pos:line="42" pos:column="46"/></name></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="44" pos:column="5">(<pos:position pos:line="44" pos:column="6"/></operator><operator pos:line="44" pos:column="6">*<pos:position pos:line="44" pos:column="7"/></operator><name pos:line="44" pos:column="7">len<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">)<pos:position pos:line="44" pos:column="11"/></operator> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <name pos:line="44" pos:column="14">rv<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt>
    <return pos:line="45" pos:column="5">return <expr><name pos:line="45" pos:column="12">APR_SUCCESS<pos:position pos:line="45" pos:column="23"/></name></expr>;<pos:position pos:line="45" pos:column="24"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6929.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_stream_out_prepare<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">h2_stream<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">stream<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">apr_off_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">plen<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, 
                                   <parameter><decl><type><name pos:line="2" pos:column="36">int<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">peos<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">h2_headers<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier><modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">pheaders<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">status<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">APR_SUCCESS<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_off_t<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">requested<pos:position pos:line="5" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="26">missing<pos:position pos:line="5" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="35">max_chunk<pos:position pos:line="5" pos:column="44"/></name> <init pos:line="5" pos:column="45">= <expr><name pos:line="5" pos:column="47">H2_DATA_CHUNK_SIZE<pos:position pos:line="5" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="66"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">conn_rec<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">c<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">complete<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ap_assert<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><name pos:line="9" pos:column="15">stream<pos:position pos:line="9" pos:column="21"/></name></expr></argument>)<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
    
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">stream<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">rst_error<pos:position pos:line="11" pos:column="26"/></name></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27"> <block pos:line="11" pos:column="28">{
        <expr_stmt><expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">plen<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">peos<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <literal type="number" pos:line="13" pos:column="17">1<pos:position pos:line="13" pos:column="18"/></literal></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">APR_ECONNRESET<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="17" pos:column="5">c<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <name><name pos:line="17" pos:column="9">stream<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">session<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">c<pos:position pos:line="17" pos:column="27"/></name></name></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">prep_output<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">stream<pos:position pos:line="18" pos:column="23"/></name></expr></argument>)<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="20" pos:column="5">/* determine how much we'd like to send. We cannot send more than
     * is requested. But we can reduce the size in case the master
     * connection operates in smaller chunks. (TSL warmup) */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">stream<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">-&gt;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="17">session<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">io<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">.<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="29">write_size<pos:position pos:line="23" pos:column="39"/></name></name> <operator pos:line="23" pos:column="40">&gt;<pos:position pos:line="23" pos:column="44"/></operator> <literal type="number" pos:line="23" pos:column="42">0<pos:position pos:line="23" pos:column="43"/></literal></expr>)<pos:position pos:line="23" pos:column="44"/></condition><then pos:line="23" pos:column="44"> <block pos:line="23" pos:column="45">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">max_chunk<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name><name pos:line="24" pos:column="21">stream<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">-&gt;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="29">session<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">io<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">.<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="41">write_size<pos:position pos:line="24" pos:column="51"/></name></name> <operator pos:line="24" pos:column="52">-<pos:position pos:line="24" pos:column="53"/></operator> <literal type="number" pos:line="24" pos:column="54">9<pos:position pos:line="24" pos:column="55"/></literal></expr>;<pos:position pos:line="24" pos:column="56"/></expr_stmt> <comment type="block" pos:line="24" pos:column="57">/* header bits */</comment> 
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="26" pos:column="5">requested<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <ternary><condition><expr><operator pos:line="26" pos:column="17">(<pos:position pos:line="26" pos:column="18"/></operator><operator pos:line="26" pos:column="18">*<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">plen<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">&gt;<pos:position pos:line="26" pos:column="28"/></operator> <literal type="number" pos:line="26" pos:column="26">0<pos:position pos:line="26" pos:column="27"/></literal><operator pos:line="26" pos:column="27">)<pos:position pos:line="26" pos:column="28"/></operator></expr>?<pos:position pos:line="26" pos:column="29"/></condition><then pos:line="26" pos:column="29"> <expr><call><name pos:line="26" pos:column="30">H2MIN<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><operator pos:line="26" pos:column="36">*<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="37">plen<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">max_chunk<pos:position pos:line="26" pos:column="52"/></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr> <pos:position pos:line="26" pos:column="54"/></then><else pos:line="26" pos:column="54">: <expr><name pos:line="26" pos:column="56">max_chunk<pos:position pos:line="26" pos:column="65"/></name></expr></else></ternary></expr>;<pos:position pos:line="26" pos:column="66"/></expr_stmt>
    
    <comment type="block" pos:line="28" pos:column="5">/* count the buffered data until eos or a headers bucket */</comment>
    <expr_stmt><expr><name pos:line="29" pos:column="5">status<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">add_data<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">stream<pos:position pos:line="29" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="31">requested<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">plen<pos:position pos:line="29" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="48">peos<pos:position pos:line="29" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="54">&amp;<pos:position pos:line="29" pos:column="59"/></operator><name pos:line="29" pos:column="55">complete<pos:position pos:line="29" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="65">pheaders<pos:position pos:line="29" pos:column="73"/></name></expr></argument>)<pos:position pos:line="29" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="75"/></expr_stmt>
    
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">status<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">==<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">APR_EAGAIN<pos:position pos:line="31" pos:column="29"/></name></expr>)<pos:position pos:line="31" pos:column="30"/></condition><then pos:line="31" pos:column="30"> <block pos:line="31" pos:column="31">{
        <comment type="block" pos:line="32" pos:column="9">/* TODO: ugly, someone needs to retrieve the response first */</comment>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">h2_mplx_keep_active<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><name><name pos:line="33" pos:column="29">stream<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">session<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">-&gt;<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="46">mplx<pos:position pos:line="33" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="52">stream<pos:position pos:line="33" pos:column="58"/></name></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">ap_log_cerror<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">APLOG_MARK<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="35">APLOG_TRACE1<pos:position pos:line="34" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="49">0<pos:position pos:line="34" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="52">c<pos:position pos:line="34" pos:column="53"/></name></expr></argument>,
                      <argument><expr><call><name pos:line="35" pos:column="23">H2_STRM_MSG<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">stream<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="43">"prep, response eagain"<pos:position pos:line="35" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="69"/></expr_stmt>
        <return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">status<pos:position pos:line="36" pos:column="22"/></name></expr>;<pos:position pos:line="36" pos:column="23"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then>
    <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><name pos:line="38" pos:column="14">status<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">!=<pos:position pos:line="38" pos:column="23"/></operator> <name pos:line="38" pos:column="24">APR_SUCCESS<pos:position pos:line="38" pos:column="35"/></name></expr>)<pos:position pos:line="38" pos:column="36"/></condition><then pos:line="38" pos:column="36"> <block pos:line="38" pos:column="37">{
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">status<pos:position pos:line="39" pos:column="22"/></name></expr>;<pos:position pos:line="39" pos:column="23"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if></elseif></if>
    
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">pheaders<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">&amp;&amp;<pos:position pos:line="42" pos:column="28"/></operator> <operator pos:line="42" pos:column="21">*<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">pheaders<pos:position pos:line="42" pos:column="30"/></name></expr>)<pos:position pos:line="42" pos:column="31"/></condition><then pos:line="42" pos:column="31"> <block pos:line="42" pos:column="32">{
        <return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">APR_SUCCESS<pos:position pos:line="43" pos:column="27"/></name></expr>;<pos:position pos:line="43" pos:column="28"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="46" pos:column="5">missing<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <call><name pos:line="46" pos:column="15">H2MIN<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">requested<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="32">stream<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">-&gt;<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="40">max_mem<pos:position pos:line="46" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call> <operator pos:line="46" pos:column="49">-<pos:position pos:line="46" pos:column="50"/></operator> <operator pos:line="46" pos:column="51">*<pos:position pos:line="46" pos:column="52"/></operator><name pos:line="46" pos:column="52">plen<pos:position pos:line="46" pos:column="56"/></name></expr>;<pos:position pos:line="46" pos:column="57"/></expr_stmt>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">complete<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">&amp;&amp;<pos:position pos:line="47" pos:column="28"/></operator> <operator pos:line="47" pos:column="21">!<pos:position pos:line="47" pos:column="22"/></operator><operator pos:line="47" pos:column="22">*<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="23">peos<pos:position pos:line="47" pos:column="27"/></name> <operator pos:line="47" pos:column="28">&amp;&amp;<pos:position pos:line="47" pos:column="38"/></operator> <name pos:line="47" pos:column="31">missing<pos:position pos:line="47" pos:column="38"/></name> <operator pos:line="47" pos:column="39">&gt;<pos:position pos:line="47" pos:column="43"/></operator> <literal type="number" pos:line="47" pos:column="41">0<pos:position pos:line="47" pos:column="42"/></literal></expr>)<pos:position pos:line="47" pos:column="43"/></condition><then pos:line="47" pos:column="43"> <block pos:line="47" pos:column="44">{
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">stream<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">-&gt;<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="21">output<pos:position pos:line="48" pos:column="27"/></name></name></expr>)<pos:position pos:line="48" pos:column="28"/></condition><then pos:line="48" pos:column="28"> <block pos:line="48" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">H2_STREAM_OUT_LOG<pos:position pos:line="49" pos:column="30"/></name><argument_list pos:line="49" pos:column="30">(<argument><expr><name pos:line="49" pos:column="31">APLOG_TRACE2<pos:position pos:line="49" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="45">stream<pos:position pos:line="49" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="53">"pre"<pos:position pos:line="49" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><name pos:line="50" pos:column="13">status<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <call><name pos:line="50" pos:column="22">h2_beam_receive<pos:position pos:line="50" pos:column="37"/></name><argument_list pos:line="50" pos:column="37">(<argument><expr><name><name pos:line="50" pos:column="38">stream<pos:position pos:line="50" pos:column="44"/></name><operator pos:line="50" pos:column="44">-&gt;<pos:position pos:line="50" pos:column="49"/></operator><name pos:line="50" pos:column="46">output<pos:position pos:line="50" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="54">stream<pos:position pos:line="50" pos:column="60"/></name><operator pos:line="50" pos:column="60">-&gt;<pos:position pos:line="50" pos:column="65"/></operator><name pos:line="50" pos:column="62">out_buffer<pos:position pos:line="50" pos:column="72"/></name></name></expr></argument>, 
                                     <argument><expr><name pos:line="51" pos:column="38">APR_NONBLOCK_READ<pos:position pos:line="51" pos:column="55"/></name></expr></argument>, 
                                     <argument><expr><name><name pos:line="52" pos:column="38">stream<pos:position pos:line="52" pos:column="44"/></name><operator pos:line="52" pos:column="44">-&gt;<pos:position pos:line="52" pos:column="49"/></operator><name pos:line="52" pos:column="46">max_mem<pos:position pos:line="52" pos:column="53"/></name></name> <operator pos:line="52" pos:column="54">-<pos:position pos:line="52" pos:column="55"/></operator> <operator pos:line="52" pos:column="56">*<pos:position pos:line="52" pos:column="57"/></operator><name pos:line="52" pos:column="57">plen<pos:position pos:line="52" pos:column="61"/></name></expr></argument>)<pos:position pos:line="52" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">H2_STREAM_OUT_LOG<pos:position pos:line="53" pos:column="30"/></name><argument_list pos:line="53" pos:column="30">(<argument><expr><name pos:line="53" pos:column="31">APLOG_TRACE2<pos:position pos:line="53" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="45">stream<pos:position pos:line="53" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="53">"post"<pos:position pos:line="53" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then>
        <else pos:line="55" pos:column="9">else <block pos:line="55" pos:column="14">{
            <expr_stmt><expr><name pos:line="56" pos:column="13">status<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">=<pos:position pos:line="56" pos:column="21"/></operator> <name pos:line="56" pos:column="22">APR_EOF<pos:position pos:line="56" pos:column="29"/></name></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="57" pos:column="10"/></block></else></if>
        
        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><call><name pos:line="59" pos:column="13">APR_STATUS_IS_EOF<pos:position pos:line="59" pos:column="30"/></name><argument_list pos:line="59" pos:column="30">(<argument><expr><name pos:line="59" pos:column="31">status<pos:position pos:line="59" pos:column="37"/></name></expr></argument>)<pos:position pos:line="59" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="39"/></condition><then pos:line="59" pos:column="39"> <block pos:line="59" pos:column="40">{
            <decl_stmt><decl><type><name pos:line="60" pos:column="13">apr_bucket<pos:position pos:line="60" pos:column="23"/></name> <modifier pos:line="60" pos:column="24">*<pos:position pos:line="60" pos:column="25"/></modifier></type><name pos:line="60" pos:column="25">eos<pos:position pos:line="60" pos:column="28"/></name> <init pos:line="60" pos:column="29">= <expr><call><name pos:line="60" pos:column="31">apr_bucket_eos_create<pos:position pos:line="60" pos:column="52"/></name><argument_list pos:line="60" pos:column="52">(<argument><expr><name><name pos:line="60" pos:column="53">c<pos:position pos:line="60" pos:column="54"/></name><operator pos:line="60" pos:column="54">-&gt;<pos:position pos:line="60" pos:column="59"/></operator><name pos:line="60" pos:column="56">bucket_alloc<pos:position pos:line="60" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="60" pos:column="70"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="61" pos:column="36"/></name><argument_list pos:line="61" pos:column="36">(<argument><expr><name><name pos:line="61" pos:column="37">stream<pos:position pos:line="61" pos:column="43"/></name><operator pos:line="61" pos:column="43">-&gt;<pos:position pos:line="61" pos:column="48"/></operator><name pos:line="61" pos:column="45">out_buffer<pos:position pos:line="61" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="57">eos<pos:position pos:line="61" pos:column="60"/></name></expr></argument>)<pos:position pos:line="61" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="62" pos:column="13">*<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="14">peos<pos:position pos:line="62" pos:column="18"/></name> <operator pos:line="62" pos:column="19">=<pos:position pos:line="62" pos:column="20"/></operator> <literal type="number" pos:line="62" pos:column="21">1<pos:position pos:line="62" pos:column="22"/></literal></expr>;<pos:position pos:line="62" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="63" pos:column="13">status<pos:position pos:line="63" pos:column="19"/></name> <operator pos:line="63" pos:column="20">=<pos:position pos:line="63" pos:column="21"/></operator> <name pos:line="63" pos:column="22">APR_SUCCESS<pos:position pos:line="63" pos:column="33"/></name></expr>;<pos:position pos:line="63" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></then>
        <elseif pos:line="65" pos:column="9">else <if pos:line="65" pos:column="14">if <condition pos:line="65" pos:column="17">(<expr><name pos:line="65" pos:column="18">status<pos:position pos:line="65" pos:column="24"/></name> <operator pos:line="65" pos:column="25">==<pos:position pos:line="65" pos:column="27"/></operator> <name pos:line="65" pos:column="28">APR_SUCCESS<pos:position pos:line="65" pos:column="39"/></name></expr>)<pos:position pos:line="65" pos:column="40"/></condition><then pos:line="65" pos:column="40"> <block pos:line="65" pos:column="41">{
            <comment type="block" pos:line="66" pos:column="13">/* do it again, now that we have gotten more */</comment>
            <expr_stmt><expr><name pos:line="67" pos:column="13">status<pos:position pos:line="67" pos:column="19"/></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <call><name pos:line="67" pos:column="22">add_data<pos:position pos:line="67" pos:column="30"/></name><argument_list pos:line="67" pos:column="30">(<argument><expr><name pos:line="67" pos:column="31">stream<pos:position pos:line="67" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="39">requested<pos:position pos:line="67" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="50">plen<pos:position pos:line="67" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="56">peos<pos:position pos:line="67" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="62">&amp;<pos:position pos:line="67" pos:column="67"/></operator><name pos:line="67" pos:column="63">complete<pos:position pos:line="67" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="73">pheaders<pos:position pos:line="67" pos:column="81"/></name></expr></argument>)<pos:position pos:line="67" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="83"/></expr_stmt>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>
    
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">status<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">==<pos:position pos:line="71" pos:column="18"/></operator> <name pos:line="71" pos:column="19">APR_SUCCESS<pos:position pos:line="71" pos:column="30"/></name></expr>)<pos:position pos:line="71" pos:column="31"/></condition><then pos:line="71" pos:column="31"> <block pos:line="71" pos:column="32">{
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><operator pos:line="72" pos:column="13">*<pos:position pos:line="72" pos:column="14"/></operator><name pos:line="72" pos:column="14">peos<pos:position pos:line="72" pos:column="18"/></name> <operator pos:line="72" pos:column="19">||<pos:position pos:line="72" pos:column="21"/></operator> <operator pos:line="72" pos:column="22">*<pos:position pos:line="72" pos:column="23"/></operator><name pos:line="72" pos:column="23">plen<pos:position pos:line="72" pos:column="27"/></name></expr>)<pos:position pos:line="72" pos:column="28"/></condition><then pos:line="72" pos:column="28"> <block pos:line="72" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">ap_log_cerror<pos:position pos:line="73" pos:column="26"/></name><argument_list pos:line="73" pos:column="26">(<argument><expr><name pos:line="73" pos:column="27">APLOG_MARK<pos:position pos:line="73" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="39">APLOG_TRACE1<pos:position pos:line="73" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="53">0<pos:position pos:line="73" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="56">c<pos:position pos:line="73" pos:column="57"/></name></expr></argument>,
                          <argument><expr><call><name pos:line="74" pos:column="27">H2_STRM_MSG<pos:position pos:line="74" pos:column="38"/></name><argument_list pos:line="74" pos:column="38">(<argument><expr><name pos:line="74" pos:column="39">stream<pos:position pos:line="74" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="47">"prepare, len=%ld eos=%d"<pos:position pos:line="74" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="73"/></argument_list></call></expr></argument>,
                          <argument><expr><operator pos:line="75" pos:column="27">(<pos:position pos:line="75" pos:column="28"/></operator><name pos:line="75" pos:column="28">long<pos:position pos:line="75" pos:column="32"/></name><operator pos:line="75" pos:column="32">)<pos:position pos:line="75" pos:column="33"/></operator><operator pos:line="75" pos:column="33">*<pos:position pos:line="75" pos:column="34"/></operator><name pos:line="75" pos:column="34">plen<pos:position pos:line="75" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="40">*<pos:position pos:line="75" pos:column="41"/></operator><name pos:line="75" pos:column="41">peos<pos:position pos:line="75" pos:column="45"/></name></expr></argument>)<pos:position pos:line="75" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="76" pos:column="10"/></block></then>
        <else pos:line="77" pos:column="9">else <block pos:line="77" pos:column="14">{
            <expr_stmt><expr><name pos:line="78" pos:column="13">status<pos:position pos:line="78" pos:column="19"/></name> <operator pos:line="78" pos:column="20">=<pos:position pos:line="78" pos:column="21"/></operator> <name pos:line="78" pos:column="22">APR_EAGAIN<pos:position pos:line="78" pos:column="32"/></name></expr>;<pos:position pos:line="78" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="79" pos:column="13">ap_log_cerror<pos:position pos:line="79" pos:column="26"/></name><argument_list pos:line="79" pos:column="26">(<argument><expr><name pos:line="79" pos:column="27">APLOG_MARK<pos:position pos:line="79" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="39">APLOG_TRACE1<pos:position pos:line="79" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="53">0<pos:position pos:line="79" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="56">c<pos:position pos:line="79" pos:column="57"/></name></expr></argument>,
                          <argument><expr><call><name pos:line="80" pos:column="27">H2_STRM_MSG<pos:position pos:line="80" pos:column="38"/></name><argument_list pos:line="80" pos:column="38">(<argument><expr><name pos:line="80" pos:column="39">stream<pos:position pos:line="80" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="47">"prepare, no data"<pos:position pos:line="80" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="80" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="81" pos:column="10"/></block></else></if>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if>
    <return pos:line="83" pos:column="5">return <expr><name pos:line="83" pos:column="12">status<pos:position pos:line="83" pos:column="18"/></name></expr>;<pos:position pos:line="83" pos:column="19"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

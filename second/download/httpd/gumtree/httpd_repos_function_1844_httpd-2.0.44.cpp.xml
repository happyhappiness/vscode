<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1844_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_error_document<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">cmd_parms<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">cmd<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">void<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">conf_<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                                      <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">errno_str<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="62">const<pos:position pos:line="2" pos:column="67"/></specifier> <name pos:line="2" pos:column="68">char<pos:position pos:line="2" pos:column="72"/></name> <modifier pos:line="2" pos:column="73">*<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="74">msg<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">core_dir_config<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">conf<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">conf_<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">error_number<pos:position pos:line="5" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="23">index_number<pos:position pos:line="5" pos:column="35"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="37">idx500<pos:position pos:line="5" pos:column="43"/></name></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
    <enum pos:line="6" pos:column="5">enum <block pos:line="6" pos:column="10">{ <decl><name pos:line="6" pos:column="12">MSG<pos:position pos:line="6" pos:column="15"/></name></decl>, <decl><name pos:line="6" pos:column="17">LOCAL_PATH<pos:position pos:line="6" pos:column="27"/></name></decl>, <decl><name pos:line="6" pos:column="29">REMOTE_PATH<pos:position pos:line="6" pos:column="40"/></name></decl> }<pos:position pos:line="6" pos:column="42"/></block> <decl><name pos:line="6" pos:column="43">what<pos:position pos:line="6" pos:column="47"/></name> <init pos:line="6" pos:column="48">= <expr><name pos:line="6" pos:column="50">MSG<pos:position pos:line="6" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="54"/></enum>

    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">err<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><call><name pos:line="8" pos:column="23">ap_check_cmd_context<pos:position pos:line="8" pos:column="43"/></name><argument_list pos:line="8" pos:column="43">(<argument><expr><name pos:line="8" pos:column="44">cmd<pos:position pos:line="8" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="49">NOT_IN_LIMIT<pos:position pos:line="8" pos:column="61"/></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="63"/></decl_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">err<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">!=<pos:position pos:line="9" pos:column="15"/></operator> <name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block pos:line="9" pos:column="22">{
        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">err<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="13" pos:column="5">/* 1st parameter should be a 3 digit number, which we recognize;
     * convert it into an array index
     */</comment>
    <expr_stmt><expr><name pos:line="16" pos:column="5">error_number<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <call><name pos:line="16" pos:column="20">atoi<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">errno_str<pos:position pos:line="16" pos:column="34"/></name></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">idx500<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">ap_index_of_response<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="17" pos:column="61"/></name></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="63"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">error_number<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">==<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="19" pos:column="51"/></name></expr>)<pos:position pos:line="19" pos:column="52"/></condition><then pos:line="19" pos:column="52"> <block pos:line="19" pos:column="53">{
        <expr_stmt><expr><name pos:line="20" pos:column="9">index_number<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="24">idx500<pos:position pos:line="20" pos:column="30"/></name></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then>
    <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if <condition pos:line="22" pos:column="13">(<expr><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">index_number<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <call><name pos:line="22" pos:column="30">ap_index_of_response<pos:position pos:line="22" pos:column="50"/></name><argument_list pos:line="22" pos:column="50">(<argument><expr><name pos:line="22" pos:column="51">error_number<pos:position pos:line="22" pos:column="63"/></name></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call><operator pos:line="22" pos:column="64">)<pos:position pos:line="22" pos:column="65"/></operator> <operator pos:line="22" pos:column="66">==<pos:position pos:line="22" pos:column="68"/></operator> <name pos:line="22" pos:column="69">idx500<pos:position pos:line="22" pos:column="75"/></name></expr>)<pos:position pos:line="22" pos:column="76"/></condition><then pos:line="22" pos:column="76"> <block pos:line="22" pos:column="77">{
        <return pos:line="23" pos:column="9">return <expr><call><name pos:line="23" pos:column="16">apr_pstrcat<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name><name pos:line="23" pos:column="28">cmd<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">-&gt;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="33">pool<pos:position pos:line="23" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="39">"Unsupported HTTP response code "<pos:position pos:line="23" pos:column="72"/></literal></expr></argument>,
                           <argument><expr><name pos:line="24" pos:column="28">errno_str<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="39">NULL<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="27" pos:column="5">/* Heuristic to determine second argument. */</comment>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name pos:line="28" pos:column="9">ap_strchr_c<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">msg<pos:position pos:line="28" pos:column="24"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="28" pos:column="25">' '<pos:position pos:line="28" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="9">what<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <name pos:line="29" pos:column="16">MSG<pos:position pos:line="29" pos:column="19"/></name></expr>;<pos:position pos:line="29" pos:column="20"/></expr_stmt></block></then>
    <elseif pos:line="30" pos:column="5">else <if pos:line="30" pos:column="10">if <condition pos:line="30" pos:column="13">(<expr><name><name pos:line="30" pos:column="14">msg<pos:position pos:line="30" pos:column="17"/></name><index pos:line="30" pos:column="17">[<expr><literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>]<pos:position pos:line="30" pos:column="20"/></index></name> <operator pos:line="30" pos:column="21">==<pos:position pos:line="30" pos:column="23"/></operator> <literal type="char" pos:line="30" pos:column="24">'/'<pos:position pos:line="30" pos:column="27"/></literal></expr>)<pos:position pos:line="30" pos:column="28"/></condition><then pos:line="30" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="9">what<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <name pos:line="31" pos:column="16">LOCAL_PATH<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><call><name pos:line="32" pos:column="14">ap_is_url<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><name pos:line="32" pos:column="24">msg<pos:position pos:line="32" pos:column="27"/></name></expr></argument>)<pos:position pos:line="32" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="29"/></condition><then pos:line="32" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="9">what<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <name pos:line="33" pos:column="16">REMOTE_PATH<pos:position pos:line="33" pos:column="27"/></name></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt></block></then></if></elseif>
    <else pos:line="34" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="9">what<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <name pos:line="35" pos:column="16">MSG<pos:position pos:line="35" pos:column="19"/></name></expr>;<pos:position pos:line="35" pos:column="20"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="37" pos:column="5">/* The entry should be ignored if it is a full URL for a 401 error */</comment>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">error_number<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">==<pos:position pos:line="39" pos:column="24"/></operator> <literal type="number" pos:line="39" pos:column="25">401<pos:position pos:line="39" pos:column="28"/></literal> <operator pos:line="39" pos:column="29">&amp;&amp;<pos:position pos:line="39" pos:column="39"/></operator> <name pos:line="39" pos:column="32">what<pos:position pos:line="39" pos:column="36"/></name> <operator pos:line="39" pos:column="37">==<pos:position pos:line="39" pos:column="39"/></operator> <name pos:line="39" pos:column="40">REMOTE_PATH<pos:position pos:line="39" pos:column="51"/></name></expr>)<pos:position pos:line="39" pos:column="52"/></condition><then pos:line="39" pos:column="52"> <block pos:line="39" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">ap_log_error<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><name pos:line="40" pos:column="22">APLOG_MARK<pos:position pos:line="40" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="34">APLOG_NOTICE<pos:position pos:line="40" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="48">0<pos:position pos:line="40" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="51">cmd<pos:position pos:line="40" pos:column="54"/></name><operator pos:line="40" pos:column="54">-&gt;<pos:position pos:line="40" pos:column="59"/></operator><name pos:line="40" pos:column="56">server<pos:position pos:line="40" pos:column="62"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="41" pos:column="22">"cannot use a full URL in a 401 ErrorDocument "<pos:position pos:line="41" pos:column="69"/></literal>
                     <literal type="string" pos:line="42" pos:column="22">"directive --- ignoring!"<pos:position pos:line="42" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then>
    <else pos:line="44" pos:column="5">else <block pos:line="44" pos:column="10">{ <comment type="block" pos:line="44" pos:column="12">/* Store it... */</comment>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name><name pos:line="45" pos:column="13">conf<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">-&gt;<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="19">response_code_strings<pos:position pos:line="45" pos:column="40"/></name></name> <operator pos:line="45" pos:column="41">==<pos:position pos:line="45" pos:column="43"/></operator> <name pos:line="45" pos:column="44">NULL<pos:position pos:line="45" pos:column="48"/></name></expr>)<pos:position pos:line="45" pos:column="49"/></condition><then pos:line="45" pos:column="49"> <block pos:line="45" pos:column="50">{
            <expr_stmt><expr><name><name pos:line="46" pos:column="13">conf<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">-&gt;<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="19">response_code_strings<pos:position pos:line="46" pos:column="40"/></name></name> <operator pos:line="46" pos:column="41">=<pos:position pos:line="46" pos:column="42"/></operator>
                <call><name pos:line="47" pos:column="17">apr_pcalloc<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><name><name pos:line="47" pos:column="29">cmd<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">pool<pos:position pos:line="47" pos:column="38"/></name></name></expr></argument>,
                            <argument><expr><sizeof pos:line="48" pos:column="29">sizeof<argument_list pos:line="48" pos:column="35">(<argument><expr><operator pos:line="48" pos:column="36">*<pos:position pos:line="48" pos:column="37"/></operator><name><name pos:line="48" pos:column="37">conf<pos:position pos:line="48" pos:column="41"/></name><operator pos:line="48" pos:column="41">-&gt;<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="43">response_code_strings<pos:position pos:line="48" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></sizeof> <operator pos:line="48" pos:column="66">*<pos:position pos:line="48" pos:column="67"/></operator>
                            <name pos:line="49" pos:column="29">RESPONSE_CODES<pos:position pos:line="49" pos:column="43"/></name></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="52" pos:column="9">/* hack. Prefix a " if it is a msg; as that is what
         * http_protocol.c relies on to distinguish between
         * a msg and a (local) path.
         */</comment>
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">conf<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">-&gt;<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="15">response_code_strings<pos:position pos:line="56" pos:column="36"/></name><index pos:line="56" pos:column="36">[<expr><name pos:line="56" pos:column="37">index_number<pos:position pos:line="56" pos:column="49"/></name></expr>]<pos:position pos:line="56" pos:column="50"/></index></name> <operator pos:line="56" pos:column="51">=<pos:position pos:line="56" pos:column="52"/></operator> <ternary><condition><expr><operator pos:line="56" pos:column="53">(<pos:position pos:line="56" pos:column="54"/></operator><name pos:line="56" pos:column="54">what<pos:position pos:line="56" pos:column="58"/></name> <operator pos:line="56" pos:column="59">==<pos:position pos:line="56" pos:column="61"/></operator> <name pos:line="56" pos:column="62">MSG<pos:position pos:line="56" pos:column="65"/></name><operator pos:line="56" pos:column="65">)<pos:position pos:line="56" pos:column="66"/></operator></expr> ?<pos:position pos:line="56" pos:column="68"/></condition><then pos:line="56" pos:column="68">
                <expr><call><name pos:line="57" pos:column="17">apr_pstrcat<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">(<argument><expr><name><name pos:line="57" pos:column="29">cmd<pos:position pos:line="57" pos:column="32"/></name><operator pos:line="57" pos:column="32">-&gt;<pos:position pos:line="57" pos:column="37"/></operator><name pos:line="57" pos:column="34">pool<pos:position pos:line="57" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="40">"\""<pos:position pos:line="57" pos:column="44"/></literal></expr></argument>,<argument><expr><name pos:line="57" pos:column="45">msg<pos:position pos:line="57" pos:column="48"/></name></expr></argument>,<argument><expr><name pos:line="57" pos:column="49">NULL<pos:position pos:line="57" pos:column="53"/></name></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></call></expr> <pos:position pos:line="57" pos:column="55"/></then><else pos:line="57" pos:column="55">:
                <expr><call><name pos:line="58" pos:column="17">apr_pstrdup<pos:position pos:line="58" pos:column="28"/></name><argument_list pos:line="58" pos:column="28">(<argument><expr><name><name pos:line="58" pos:column="29">cmd<pos:position pos:line="58" pos:column="32"/></name><operator pos:line="58" pos:column="32">-&gt;<pos:position pos:line="58" pos:column="37"/></operator><name pos:line="58" pos:column="34">pool<pos:position pos:line="58" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="40">msg<pos:position pos:line="58" pos:column="43"/></name></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="58" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></else></if>

    <return pos:line="61" pos:column="5">return <expr><name pos:line="61" pos:column="12">NULL<pos:position pos:line="61" pos:column="16"/></name></expr>;<pos:position pos:line="61" pos:column="17"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

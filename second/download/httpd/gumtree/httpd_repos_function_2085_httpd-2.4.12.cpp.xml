<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2085_httpd-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">send_socket<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">apr_pool_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">p<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="2" pos:column="33">apr_socket_t<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">s<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="3" pos:column="33">apr_socket_t<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">outbound<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="56"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_os_sock_t<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">rawsock<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_os_sock_t<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">srawsock<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">msghdr<pos:position pos:line="8" pos:column="18"/></name></name></type> <name pos:line="8" pos:column="19">msg<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">cmsghdr<pos:position pos:line="9" pos:column="19"/></name></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">cmsg<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">struct<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">iovec<pos:position pos:line="10" pos:column="17"/></name></name></type> <name pos:line="10" pos:column="18">iov<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">b<pos:position pos:line="11" pos:column="11"/></name> <init pos:line="11" pos:column="12">= <expr><literal type="char" pos:line="11" pos:column="14">'\0'<pos:position pos:line="11" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">rv<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <call><name pos:line="13" pos:column="10">apr_os_sock_get<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><operator pos:line="13" pos:column="26">&amp;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="27">rawsock<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="36">outbound<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">rv<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">!=<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="15">APR_SUCCESS<pos:position pos:line="14" pos:column="26"/></name></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27"> <block pos:line="14" pos:column="28">{
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">rv<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">rv<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">apr_os_sock_get<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><operator pos:line="18" pos:column="26">&amp;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="27">srawsock<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="37">s<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">rv<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">!=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">APR_SUCCESS<pos:position pos:line="19" pos:column="26"/></name></expr>)<pos:position pos:line="19" pos:column="27"/></condition><then pos:line="19" pos:column="27"> <block pos:line="19" pos:column="28">{
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">rv<pos:position pos:line="20" pos:column="18"/></name></expr>;<pos:position pos:line="20" pos:column="19"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">memset<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><operator pos:line="23" pos:column="12">&amp;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="13">msg<pos:position pos:line="23" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="18">0<pos:position pos:line="23" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="21">sizeof<argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">msg<pos:position pos:line="23" pos:column="31"/></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="25" pos:column="5">msg<pos:position pos:line="25" pos:column="8"/></name><operator pos:line="25" pos:column="8">.<pos:position pos:line="25" pos:column="9"/></operator><name pos:line="25" pos:column="9">msg_iov<pos:position pos:line="25" pos:column="16"/></name></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <operator pos:line="25" pos:column="19">&amp;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="20">iov<pos:position pos:line="25" pos:column="23"/></name></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">msg<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">.<pos:position pos:line="26" pos:column="9"/></operator><name pos:line="26" pos:column="9">msg_iovlen<pos:position pos:line="26" pos:column="19"/></name></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <literal type="number" pos:line="26" pos:column="22">1<pos:position pos:line="26" pos:column="23"/></literal></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="28" pos:column="5">iov<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">.<pos:position pos:line="28" pos:column="9"/></operator><name pos:line="28" pos:column="9">iov_base<pos:position pos:line="28" pos:column="17"/></name></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <operator pos:line="28" pos:column="20">&amp;<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="21">b<pos:position pos:line="28" pos:column="22"/></name></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">iov<pos:position pos:line="29" pos:column="8"/></name><operator pos:line="29" pos:column="8">.<pos:position pos:line="29" pos:column="9"/></operator><name pos:line="29" pos:column="9">iov_len<pos:position pos:line="29" pos:column="16"/></name></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <literal type="number" pos:line="29" pos:column="19">1<pos:position pos:line="29" pos:column="20"/></literal></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="31" pos:column="5">cmsg<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <call><name pos:line="31" pos:column="12">apr_palloc<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">p<pos:position pos:line="31" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="26">sizeof<argument_list pos:line="31" pos:column="32">(<argument><expr><operator pos:line="31" pos:column="33">*<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="34">cmsg<pos:position pos:line="31" pos:column="38"/></name></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></sizeof> <operator pos:line="31" pos:column="40">+<pos:position pos:line="31" pos:column="41"/></operator> <sizeof pos:line="31" pos:column="42">sizeof<argument_list pos:line="31" pos:column="48">(<argument><expr><name pos:line="31" pos:column="49">rawsock<pos:position pos:line="31" pos:column="56"/></name></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">cmsg<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">-&gt;<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="11">cmsg_len<pos:position pos:line="32" pos:column="19"/></name></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <sizeof pos:line="32" pos:column="22">sizeof<argument_list pos:line="32" pos:column="28">(<argument><expr><operator pos:line="32" pos:column="29">*<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">cmsg<pos:position pos:line="32" pos:column="34"/></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></sizeof> <operator pos:line="32" pos:column="36">+<pos:position pos:line="32" pos:column="37"/></operator> <sizeof pos:line="32" pos:column="38">sizeof<argument_list pos:line="32" pos:column="44">(<argument><expr><name pos:line="32" pos:column="45">rawsock<pos:position pos:line="32" pos:column="52"/></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></sizeof></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">cmsg<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">-&gt;<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="11">cmsg_level<pos:position pos:line="33" pos:column="21"/></name></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <name pos:line="33" pos:column="24">SOL_SOCKET<pos:position pos:line="33" pos:column="34"/></name></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">cmsg<pos:position pos:line="34" pos:column="9"/></name><operator pos:line="34" pos:column="9">-&gt;<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="11">cmsg_type<pos:position pos:line="34" pos:column="20"/></name></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="23">SCM_RIGHTS<pos:position pos:line="34" pos:column="33"/></name></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">memcpy<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><call><name pos:line="36" pos:column="12">CMSG_DATA<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">cmsg<pos:position pos:line="36" pos:column="26"/></name></expr></argument>)<pos:position pos:line="36" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="36" pos:column="29">&amp;<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="30">rawsock<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="39">sizeof<argument_list pos:line="36" pos:column="45">(<argument><expr><name pos:line="36" pos:column="46">rawsock<pos:position pos:line="36" pos:column="53"/></name></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="38" pos:column="5">msg<pos:position pos:line="38" pos:column="8"/></name><operator pos:line="38" pos:column="8">.<pos:position pos:line="38" pos:column="9"/></operator><name pos:line="38" pos:column="9">msg_control<pos:position pos:line="38" pos:column="20"/></name></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">cmsg<pos:position pos:line="38" pos:column="27"/></name></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">msg<pos:position pos:line="39" pos:column="8"/></name><operator pos:line="39" pos:column="8">.<pos:position pos:line="39" pos:column="9"/></operator><name pos:line="39" pos:column="9">msg_controllen<pos:position pos:line="39" pos:column="23"/></name></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <name><name pos:line="39" pos:column="26">cmsg<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">cmsg_len<pos:position pos:line="39" pos:column="40"/></name></name></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name pos:line="41" pos:column="5">rv<pos:position pos:line="41" pos:column="7"/></name> <operator pos:line="41" pos:column="8">=<pos:position pos:line="41" pos:column="9"/></operator> <call><name pos:line="41" pos:column="10">sendmsg<pos:position pos:line="41" pos:column="17"/></name><argument_list pos:line="41" pos:column="17">(<argument><expr><name pos:line="41" pos:column="18">srawsock<pos:position pos:line="41" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="28">&amp;<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="29">msg<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="34">0<pos:position pos:line="41" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">rv<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">==<pos:position pos:line="43" pos:column="14"/></operator> <operator pos:line="43" pos:column="15">-<pos:position pos:line="43" pos:column="16"/></operator><literal type="number" pos:line="43" pos:column="16">1<pos:position pos:line="43" pos:column="17"/></literal></expr>)<pos:position pos:line="43" pos:column="18"/></condition><then pos:line="43" pos:column="18"> <block pos:line="43" pos:column="19">{
        <return pos:line="44" pos:column="9">return <expr><name pos:line="44" pos:column="16">errno<pos:position pos:line="44" pos:column="21"/></name></expr>;<pos:position pos:line="44" pos:column="22"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>


    <return pos:line="48" pos:column="5">return <expr><name pos:line="48" pos:column="12">APR_SUCCESS<pos:position pos:line="48" pos:column="23"/></name></expr>;<pos:position pos:line="48" pos:column="24"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

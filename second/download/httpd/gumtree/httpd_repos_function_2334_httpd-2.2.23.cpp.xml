<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2334_httpd-2.2.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">LRESULT<pos:position pos:line="1" pos:column="15"/></name> <name pos:line="1" pos:column="16">CALLBACK<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">ttyConsoleCtrlWndProc<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name pos:line="1" pos:column="47">HWND<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">hwnd<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">UINT<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">msg<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                                              <parameter><decl><type><name pos:line="2" pos:column="47">WPARAM<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">wParam<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">LPARAM<pos:position pos:line="2" pos:column="68"/></name></type> <name pos:line="2" pos:column="69">lParam<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">msg<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">==<pos:position pos:line="4" pos:column="15"/></operator> <name pos:line="4" pos:column="16">WM_CREATE<pos:position pos:line="4" pos:column="25"/></name></expr>)<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26">
    <block pos:line="5" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">tty_info<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">tty<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><operator pos:line="6" pos:column="25">(<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">tty_info<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></operator><operator pos:line="6" pos:column="35">)<pos:position pos:line="6" pos:column="36"/></operator><operator pos:line="6" pos:column="36">(<pos:position pos:line="6" pos:column="37"/></operator><operator pos:line="6" pos:column="37">(<pos:position pos:line="6" pos:column="38"/></operator><operator pos:line="6" pos:column="38">(<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="39">LPCREATESTRUCT<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">)<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="54">lParam<pos:position pos:line="6" pos:column="60"/></name><operator pos:line="6" pos:column="60">)<pos:position pos:line="6" pos:column="61"/></operator><operator pos:line="6" pos:column="61">-&gt;<pos:position pos:line="6" pos:column="66"/></operator><name pos:line="6" pos:column="63">lpCreateParams<pos:position pos:line="6" pos:column="77"/></name><operator pos:line="6" pos:column="77">)<pos:position pos:line="6" pos:column="78"/></operator></expr></init></decl>;<pos:position pos:line="6" pos:column="79"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">SetWindowLong<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">hwnd<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="29">gwltty_phandler<pos:position pos:line="7" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="46">(<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="47">LONG<pos:position pos:line="7" pos:column="51"/></name><operator pos:line="7" pos:column="51">)<pos:position pos:line="7" pos:column="52"/></operator><name><name pos:line="7" pos:column="52">tty<pos:position pos:line="7" pos:column="55"/></name><operator pos:line="7" pos:column="55">-&gt;<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="57">phandler<pos:position pos:line="7" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">SetWindowLong<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">hwnd<pos:position pos:line="8" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="29">gwltty_ttywnd<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="44">(<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="45">LONG<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">)<pos:position pos:line="8" pos:column="50"/></operator><name><name pos:line="8" pos:column="50">tty<pos:position pos:line="8" pos:column="53"/></name><operator pos:line="8" pos:column="53">-&gt;<pos:position pos:line="8" pos:column="58"/></operator><name pos:line="8" pos:column="55">parent<pos:position pos:line="8" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="63"/></expr_stmt>
<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">DBG<pos:position pos:line="9" pos:column="11"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">DbgPrintf<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><literal type="string" pos:line="10" pos:column="19">"A proc %8.8x created %8.8x %s for tty wnd %8.8x\r\n"<pos:position pos:line="10" pos:column="72"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="11" pos:column="19">GetCurrentProcessId<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">()<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">hwnd<pos:position pos:line="11" pos:column="46"/></name></expr></argument>,
                  <argument><expr><name><name pos:line="12" pos:column="19">tty<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">name<pos:position pos:line="12" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="30">tty<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">-&gt;<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="35">parent<pos:position pos:line="12" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">tty<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">parent<pos:position pos:line="14" pos:column="24"/></name></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25"> <block pos:line="14" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">SetProp<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name><name pos:line="15" pos:column="21">tty<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">parent<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">hookwndprop<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="47">hwnd<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">PostMessage<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name><name pos:line="16" pos:column="25">tty<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">parent<pos:position pos:line="16" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">hookwndmsg<pos:position pos:line="16" pos:column="48"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="17" pos:column="25">tty<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">type<pos:position pos:line="17" pos:column="34"/></name></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="36">(<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">LPARAM<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">)<pos:position pos:line="17" pos:column="44"/></operator><name><name pos:line="17" pos:column="44">tty<pos:position pos:line="17" pos:column="47"/></name><operator pos:line="17" pos:column="47">-&gt;<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="49">parent<pos:position pos:line="17" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>
        <return pos:line="19" pos:column="9">return <expr><literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then>
    <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if <condition pos:line="21" pos:column="13">(<expr><name pos:line="21" pos:column="14">msg<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">==<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">WM_DESTROY<pos:position pos:line="21" pos:column="31"/></name></expr>)<pos:position pos:line="21" pos:column="32"/></condition><then pos:line="21" pos:column="32">
    <block pos:line="22" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">HWND<pos:position pos:line="23" pos:column="13"/></name></type> <name pos:line="23" pos:column="14">parent<pos:position pos:line="23" pos:column="20"/></name> <init pos:line="23" pos:column="21">= <expr><operator pos:line="23" pos:column="23">(<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">HWND<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">)<pos:position pos:line="23" pos:column="29"/></operator><call><name pos:line="23" pos:column="29">GetWindowLong<pos:position pos:line="23" pos:column="42"/></name><argument_list pos:line="23" pos:column="42">(<argument><expr><name pos:line="23" pos:column="43">hwnd<pos:position pos:line="23" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="49">gwltty_ttywnd<pos:position pos:line="23" pos:column="62"/></name></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="64"/></decl_stmt>
<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">DBG<pos:position pos:line="24" pos:column="11"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">DbgPrintf<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><literal type="string" pos:line="25" pos:column="19">"A proc %8.8x destroyed %8.8x ttyConHookChild\r\n"<pos:position pos:line="25" pos:column="69"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="26" pos:column="19">GetCurrentProcessId<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">()<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="26" pos:column="42">hwnd<pos:position pos:line="26" pos:column="46"/></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">parent<pos:position pos:line="28" pos:column="19"/></name></expr>)<pos:position pos:line="28" pos:column="20"/></condition><then pos:line="28" pos:column="20"> <block pos:line="28" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">RemoveProp<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><name pos:line="29" pos:column="24">parent<pos:position pos:line="29" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="32">hookwndprop<pos:position pos:line="29" pos:column="43"/></name></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">SendMessage<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">parent<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="33">hookwndmsg<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="45">0<pos:position pos:line="30" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="48">(<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="49">LPARAM<pos:position pos:line="30" pos:column="55"/></name><operator pos:line="30" pos:column="55">)<pos:position pos:line="30" pos:column="56"/></operator><name pos:line="30" pos:column="56">parent<pos:position pos:line="30" pos:column="62"/></name></expr></argument>)<pos:position pos:line="30" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="32" pos:column="9">monitor_hwnd<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="24">NULL<pos:position pos:line="32" pos:column="28"/></name></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="34" pos:column="5">else <if pos:line="34" pos:column="10">if <condition pos:line="34" pos:column="13">(<expr><name pos:line="34" pos:column="14">msg<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">==<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">WM_CLOSE<pos:position pos:line="34" pos:column="29"/></name></expr>)<pos:position pos:line="34" pos:column="30"/></condition><then pos:line="34" pos:column="30">
    <block pos:line="35" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">PHANDLER_ROUTINE<pos:position pos:line="36" pos:column="25"/></name></type> <name pos:line="36" pos:column="26">phandler<pos:position pos:line="36" pos:column="34"/></name> <init pos:line="36" pos:column="35">=
            <expr><operator pos:line="37" pos:column="13">(<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">PHANDLER_ROUTINE<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">)<pos:position pos:line="37" pos:column="31"/></operator><call><name pos:line="37" pos:column="31">GetWindowLong<pos:position pos:line="37" pos:column="44"/></name><argument_list pos:line="37" pos:column="44">(<argument><expr><name pos:line="37" pos:column="45">hwnd<pos:position pos:line="37" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="51">gwltty_phandler<pos:position pos:line="37" pos:column="66"/></name></expr></argument>)<pos:position pos:line="37" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="37" pos:column="68"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="38" pos:column="9">LRESULT<pos:position pos:line="38" pos:column="16"/></name></type> <name pos:line="38" pos:column="17">rv<pos:position pos:line="38" pos:column="19"/></name> <init pos:line="38" pos:column="20">= <expr><call><name pos:line="38" pos:column="22">phandler<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">CTRL_CLOSE_EVENT<pos:position pos:line="38" pos:column="47"/></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="49"/></decl_stmt>
<cpp:ifdef pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">ifdef<pos:position pos:line="39" pos:column="7"/></cpp:directive> <name pos:line="39" pos:column="8">DBG<pos:position pos:line="39" pos:column="11"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">DbgPrintf<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><literal type="string" pos:line="40" pos:column="19">"A proc %8.8x invoked CTRL_CLOSE_EVENT "<pos:position pos:line="40" pos:column="59"/></literal>
                  <literal type="string" pos:line="41" pos:column="19">"returning %d\r\n"<pos:position pos:line="41" pos:column="37"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="42" pos:column="19">GetCurrentProcessId<pos:position pos:line="42" pos:column="38"/></name><argument_list pos:line="42" pos:column="38">()<pos:position pos:line="42" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="42" pos:column="42">rv<pos:position pos:line="42" pos:column="44"/></name></expr></argument>)<pos:position pos:line="42" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">rv<pos:position pos:line="44" pos:column="15"/></name></expr>)<pos:position pos:line="44" pos:column="16"/></condition><then pos:line="44" pos:column="16">
            <block type="pseudo"><return pos:line="45" pos:column="13">return <expr><operator pos:line="45" pos:column="20">!<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="21">rv<pos:position pos:line="45" pos:column="23"/></name></expr>;<pos:position pos:line="45" pos:column="24"/></return></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="47" pos:column="5">else <if pos:line="47" pos:column="10">if <condition pos:line="47" pos:column="13">(<expr><operator pos:line="47" pos:column="14">(<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="15">msg<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">==<pos:position pos:line="47" pos:column="21"/></operator> <name pos:line="47" pos:column="22">WM_QUERYENDSESSION<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">)<pos:position pos:line="47" pos:column="41"/></operator> <operator pos:line="47" pos:column="42">||<pos:position pos:line="47" pos:column="44"/></operator> <operator pos:line="47" pos:column="45">(<pos:position pos:line="47" pos:column="46"/></operator><name pos:line="47" pos:column="46">msg<pos:position pos:line="47" pos:column="49"/></name> <operator pos:line="47" pos:column="50">==<pos:position pos:line="47" pos:column="52"/></operator> <name pos:line="47" pos:column="53">WM_ENDSESSION<pos:position pos:line="47" pos:column="66"/></name><operator pos:line="47" pos:column="66">)<pos:position pos:line="47" pos:column="67"/></operator></expr>)<pos:position pos:line="47" pos:column="68"/></condition><then pos:line="47" pos:column="68">
    <block pos:line="48" pos:column="5">{
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">lParam<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">&amp;<pos:position pos:line="49" pos:column="25"/></operator> <name pos:line="49" pos:column="22">ENDSESSION_LOGOFF<pos:position pos:line="49" pos:column="39"/></name></expr>)<pos:position pos:line="49" pos:column="40"/></condition><then pos:line="49" pos:column="40">
        <block pos:line="50" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="51" pos:column="13">PHANDLER_ROUTINE<pos:position pos:line="51" pos:column="29"/></name></type> <name pos:line="51" pos:column="30">phandler<pos:position pos:line="51" pos:column="38"/></name> <init pos:line="51" pos:column="39">=
                <expr><operator pos:line="52" pos:column="17">(<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="18">PHANDLER_ROUTINE<pos:position pos:line="52" pos:column="34"/></name><operator pos:line="52" pos:column="34">)<pos:position pos:line="52" pos:column="35"/></operator><call><name pos:line="52" pos:column="35">GetWindowLong<pos:position pos:line="52" pos:column="48"/></name><argument_list pos:line="52" pos:column="48">(<argument><expr><name pos:line="52" pos:column="49">hwnd<pos:position pos:line="52" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="55">gwltty_phandler<pos:position pos:line="52" pos:column="70"/></name></expr></argument>)<pos:position pos:line="52" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="72"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="53" pos:column="13">LRESULT<pos:position pos:line="53" pos:column="20"/></name></type> <name pos:line="53" pos:column="21">rv<pos:position pos:line="53" pos:column="23"/></name> <init pos:line="53" pos:column="24">= <expr><call><name pos:line="53" pos:column="26">phandler<pos:position pos:line="53" pos:column="34"/></name><argument_list pos:line="53" pos:column="34">(<argument><expr><name pos:line="53" pos:column="35">CTRL_LOGOFF_EVENT<pos:position pos:line="53" pos:column="52"/></name></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="53" pos:column="54"/></decl_stmt>
<cpp:ifdef pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">ifdef<pos:position pos:line="54" pos:column="7"/></cpp:directive> <name pos:line="54" pos:column="8">DBG<pos:position pos:line="54" pos:column="11"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">DbgPrintf<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">(<argument><expr><literal type="string" pos:line="55" pos:column="23">"A proc %8.8x invoked CTRL_LOGOFF_EVENT "<pos:position pos:line="55" pos:column="64"/></literal>
                      <literal type="string" pos:line="56" pos:column="23">"returning %d\r\n"<pos:position pos:line="56" pos:column="41"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="57" pos:column="23">GetCurrentProcessId<pos:position pos:line="57" pos:column="42"/></name><argument_list pos:line="57" pos:column="42">()<pos:position pos:line="57" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="57" pos:column="46">rv<pos:position pos:line="57" pos:column="48"/></name></expr></argument>)<pos:position pos:line="57" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="50"/></expr_stmt>
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="59" pos:column="13">if <condition pos:line="59" pos:column="16">(<expr><name pos:line="59" pos:column="17">rv<pos:position pos:line="59" pos:column="19"/></name></expr>)<pos:position pos:line="59" pos:column="20"/></condition><then pos:line="59" pos:column="20">
                <block type="pseudo"><return pos:line="60" pos:column="17">return <expr><operator pos:line="60" pos:column="24">(<pos:position pos:line="60" pos:column="25"/></operator><ternary><condition><expr><operator pos:line="60" pos:column="25">(<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="26">msg<pos:position pos:line="60" pos:column="29"/></name> <operator pos:line="60" pos:column="30">==<pos:position pos:line="60" pos:column="32"/></operator> <name pos:line="60" pos:column="33">WM_QUERYENDSESSION<pos:position pos:line="60" pos:column="51"/></name><operator pos:line="60" pos:column="51">)<pos:position pos:line="60" pos:column="52"/></operator></expr> ?<pos:position pos:line="60" pos:column="54"/></condition><then pos:line="60" pos:column="54"> <expr><name pos:line="60" pos:column="55">rv<pos:position pos:line="60" pos:column="57"/></name></expr> <pos:position pos:line="60" pos:column="58"/></then><else pos:line="60" pos:column="58">: <expr><operator pos:line="60" pos:column="60">!<pos:position pos:line="60" pos:column="61"/></operator><name pos:line="60" pos:column="61">rv<pos:position pos:line="60" pos:column="63"/></name></expr></else></ternary><operator pos:line="60" pos:column="63">)<pos:position pos:line="60" pos:column="64"/></operator></expr>;<pos:position pos:line="60" pos:column="65"/></return></block></then></if>
        }<pos:position pos:line="61" pos:column="10"/></block></then>
        <else pos:line="62" pos:column="9">else
        <block pos:line="63" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="64" pos:column="13">PHANDLER_ROUTINE<pos:position pos:line="64" pos:column="29"/></name></type> <name pos:line="64" pos:column="30">phandler<pos:position pos:line="64" pos:column="38"/></name> <init pos:line="64" pos:column="39">=
                <expr><operator pos:line="65" pos:column="17">(<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="18">PHANDLER_ROUTINE<pos:position pos:line="65" pos:column="34"/></name><operator pos:line="65" pos:column="34">)<pos:position pos:line="65" pos:column="35"/></operator><call><name pos:line="65" pos:column="35">GetWindowLong<pos:position pos:line="65" pos:column="48"/></name><argument_list pos:line="65" pos:column="48">(<argument><expr><name pos:line="65" pos:column="49">hwnd<pos:position pos:line="65" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="55">gwltty_phandler<pos:position pos:line="65" pos:column="70"/></name></expr></argument>)<pos:position pos:line="65" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="65" pos:column="72"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="66" pos:column="13">LRESULT<pos:position pos:line="66" pos:column="20"/></name></type> <name pos:line="66" pos:column="21">rv<pos:position pos:line="66" pos:column="23"/></name> <init pos:line="66" pos:column="24">= <expr><call><name pos:line="66" pos:column="26">phandler<pos:position pos:line="66" pos:column="34"/></name><argument_list pos:line="66" pos:column="34">(<argument><expr><name pos:line="66" pos:column="35">CTRL_SHUTDOWN_EVENT<pos:position pos:line="66" pos:column="54"/></name></expr></argument>)<pos:position pos:line="66" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="66" pos:column="56"/></decl_stmt>
<cpp:ifdef pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">ifdef<pos:position pos:line="67" pos:column="7"/></cpp:directive> <name pos:line="67" pos:column="8">DBG<pos:position pos:line="67" pos:column="11"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">DbgPrintf<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><literal type="string" pos:line="68" pos:column="23">"A proc %8.8x invoked CTRL_SHUTDOWN_EVENT "<pos:position pos:line="68" pos:column="66"/></literal>
                      <literal type="string" pos:line="69" pos:column="23">"returning %d\r\n"<pos:position pos:line="69" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="43">GetCurrentProcessId<pos:position pos:line="69" pos:column="62"/></name><argument_list pos:line="69" pos:column="62">()<pos:position pos:line="69" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="69" pos:column="66">rv<pos:position pos:line="69" pos:column="68"/></name></expr></argument>)<pos:position pos:line="69" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="70"/></expr_stmt>
<cpp:endif pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">endif<pos:position pos:line="70" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="71" pos:column="13">if <condition pos:line="71" pos:column="16">(<expr><name pos:line="71" pos:column="17">rv<pos:position pos:line="71" pos:column="19"/></name></expr>)<pos:position pos:line="71" pos:column="20"/></condition><then pos:line="71" pos:column="20">
                <block type="pseudo"><return pos:line="72" pos:column="17">return <expr><operator pos:line="72" pos:column="24">(<pos:position pos:line="72" pos:column="25"/></operator><ternary><condition><expr><operator pos:line="72" pos:column="25">(<pos:position pos:line="72" pos:column="26"/></operator><name pos:line="72" pos:column="26">msg<pos:position pos:line="72" pos:column="29"/></name> <operator pos:line="72" pos:column="30">==<pos:position pos:line="72" pos:column="32"/></operator> <name pos:line="72" pos:column="33">WM_QUERYENDSESSION<pos:position pos:line="72" pos:column="51"/></name><operator pos:line="72" pos:column="51">)<pos:position pos:line="72" pos:column="52"/></operator></expr> ?<pos:position pos:line="72" pos:column="54"/></condition><then pos:line="72" pos:column="54"> <expr><name pos:line="72" pos:column="55">rv<pos:position pos:line="72" pos:column="57"/></name></expr> <pos:position pos:line="72" pos:column="58"/></then><else pos:line="72" pos:column="58">: <expr><operator pos:line="72" pos:column="60">!<pos:position pos:line="72" pos:column="61"/></operator><name pos:line="72" pos:column="61">rv<pos:position pos:line="72" pos:column="63"/></name></expr></else></ternary><operator pos:line="72" pos:column="63">)<pos:position pos:line="72" pos:column="64"/></operator></expr>;<pos:position pos:line="72" pos:column="65"/></return></block></then></if>
        }<pos:position pos:line="73" pos:column="10"/></block></else></if>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if></elseif></if>
    <return pos:line="75" pos:column="5">return <expr><operator pos:line="75" pos:column="12">(<pos:position pos:line="75" pos:column="13"/></operator><call><name pos:line="75" pos:column="13">DefWindowProc<pos:position pos:line="75" pos:column="26"/></name><argument_list pos:line="75" pos:column="26">(<argument><expr><name pos:line="75" pos:column="27">hwnd<pos:position pos:line="75" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="33">msg<pos:position pos:line="75" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="38">wParam<pos:position pos:line="75" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="46">lParam<pos:position pos:line="75" pos:column="52"/></name></expr></argument>)<pos:position pos:line="75" pos:column="53"/></argument_list></call><operator pos:line="75" pos:column="53">)<pos:position pos:line="75" pos:column="54"/></operator></expr>;<pos:position pos:line="75" pos:column="55"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4426.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">proxy_ftp_handler<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">request_rec<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">r<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">proxy_worker<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">worker<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">proxy_server_conf<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">conf<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">url<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
                             <parameter><decl><type><specifier pos:line="3" pos:column="30">const<pos:position pos:line="3" pos:column="35"/></specifier> <name pos:line="3" pos:column="36">char<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">proxyhost<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="53">apr_port_t<pos:position pos:line="3" pos:column="63"/></name></type> <name pos:line="3" pos:column="64">proxyport<pos:position pos:line="3" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="74"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_pool_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">p<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name><name pos:line="5" pos:column="21">r<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">pool<pos:position pos:line="5" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">conn_rec<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">c<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><name><name pos:line="6" pos:column="19">r<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">-&gt;<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="22">connection<pos:position pos:line="6" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">proxy_conn_rec<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">backend<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_socket_t<pos:position pos:line="8" pos:column="17"/></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">sock<pos:position pos:line="8" pos:column="23"/></name></decl>, <modifier pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="26">local_sock<pos:position pos:line="8" pos:column="36"/></name></decl>, <modifier pos:line="8" pos:column="38">*<pos:position pos:line="8" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="39">data_sock<pos:position pos:line="8" pos:column="48"/></name> <init pos:line="8" pos:column="49">= <expr><name pos:line="8" pos:column="51">NULL<pos:position pos:line="8" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_sockaddr_t<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">connect_addr<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><name pos:line="9" pos:column="36">NULL<pos:position pos:line="9" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_status_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">rv<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">conn_rec<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">origin<pos:position pos:line="11" pos:column="21"/></name></decl>, <modifier pos:line="11" pos:column="23">*<pos:position pos:line="11" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="24">data<pos:position pos:line="11" pos:column="28"/></name> <init pos:line="11" pos:column="29">= <expr><name pos:line="11" pos:column="31">NULL<pos:position pos:line="11" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_status_t<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">err<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><name pos:line="12" pos:column="24">APR_SUCCESS<pos:position pos:line="12" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_status_t<pos:position pos:line="13" pos:column="17"/></name></type> <name pos:line="13" pos:column="18">uerr<pos:position pos:line="13" pos:column="22"/></name> <init pos:line="13" pos:column="23">= <expr><name pos:line="13" pos:column="25">APR_SUCCESS<pos:position pos:line="13" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_bucket_brigade<pos:position pos:line="14" pos:column="23"/></name> <modifier pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></modifier></type><name pos:line="14" pos:column="25">bb<pos:position pos:line="14" pos:column="27"/></name> <init pos:line="14" pos:column="28">= <expr><call><name pos:line="14" pos:column="30">apr_brigade_create<pos:position pos:line="14" pos:column="48"/></name><argument_list pos:line="14" pos:column="48">(<argument><expr><name pos:line="14" pos:column="49">p<pos:position pos:line="14" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="52">c<pos:position pos:line="14" pos:column="53"/></name><operator pos:line="14" pos:column="53">-&gt;<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="55">bucket_alloc<pos:position pos:line="14" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="69"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name> <modifier pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></modifier></type><name pos:line="15" pos:column="11">buf<pos:position pos:line="15" pos:column="14"/></name></decl>, <modifier pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="15" pos:column="17">connectname<pos:position pos:line="15" pos:column="28"/></name></decl>;<pos:position pos:line="15" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">apr_port_t<pos:position pos:line="16" pos:column="15"/></name></type> <name pos:line="16" pos:column="16">connectport<pos:position pos:line="16" pos:column="27"/></name></decl>;<pos:position pos:line="16" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name></type> <name><name pos:line="17" pos:column="10">buffer<pos:position pos:line="17" pos:column="16"/></name><index pos:line="17" pos:column="16">[<expr><name pos:line="17" pos:column="17">MAX_STRING_LEN<pos:position pos:line="17" pos:column="31"/></name></expr>]<pos:position pos:line="17" pos:column="32"/></index></name></decl>;<pos:position pos:line="17" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name> <modifier pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></modifier></type><name pos:line="18" pos:column="11">ftpmessage<pos:position pos:line="18" pos:column="21"/></name> <init pos:line="18" pos:column="22">= <expr><name pos:line="18" pos:column="24">NULL<pos:position pos:line="18" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name> <modifier pos:line="19" pos:column="10">*<pos:position pos:line="19" pos:column="11"/></modifier></type><name pos:line="19" pos:column="11">path<pos:position pos:line="19" pos:column="15"/></name></decl>, <modifier pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="19" pos:column="18">strp<pos:position pos:line="19" pos:column="22"/></name></decl>, <modifier pos:line="19" pos:column="24">*<pos:position pos:line="19" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="19" pos:column="25">type_suffix<pos:position pos:line="19" pos:column="36"/></name></decl>, <modifier pos:line="19" pos:column="38">*<pos:position pos:line="19" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="19" pos:column="39">cwd<pos:position pos:line="19" pos:column="42"/></name> <init pos:line="19" pos:column="43">= <expr><name pos:line="19" pos:column="45">NULL<pos:position pos:line="19" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">apr_uri_t<pos:position pos:line="20" pos:column="14"/></name></type> <name pos:line="20" pos:column="15">uri<pos:position pos:line="20" pos:column="18"/></name></decl>;<pos:position pos:line="20" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name> <modifier pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></modifier></type><name pos:line="21" pos:column="11">user<pos:position pos:line="21" pos:column="15"/></name> <init pos:line="21" pos:column="16">= <expr><name pos:line="21" pos:column="18">NULL<pos:position pos:line="21" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="23"/></decl_stmt>
<comment type="block" pos:line="22" pos:column="1">/*    char *account = NULL; how to supply an account in a URL? */</comment>
    <decl_stmt><decl><type><specifier pos:line="23" pos:column="5">const<pos:position pos:line="23" pos:column="10"/></specifier> <name pos:line="23" pos:column="11">char<pos:position pos:line="23" pos:column="15"/></name> <modifier pos:line="23" pos:column="16">*<pos:position pos:line="23" pos:column="17"/></modifier></type><name pos:line="23" pos:column="17">password<pos:position pos:line="23" pos:column="25"/></name> <init pos:line="23" pos:column="26">= <expr><name pos:line="23" pos:column="28">NULL<pos:position pos:line="23" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">int<pos:position pos:line="24" pos:column="8"/></name></type> <name pos:line="24" pos:column="9">len<pos:position pos:line="24" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="24" pos:column="14">rc<pos:position pos:line="24" pos:column="16"/></name></decl>;<pos:position pos:line="24" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">int<pos:position pos:line="25" pos:column="8"/></name></type> <name pos:line="25" pos:column="9">one<pos:position pos:line="25" pos:column="12"/></name> <init pos:line="25" pos:column="13">= <expr><literal type="number" pos:line="25" pos:column="15">1<pos:position pos:line="25" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">char<pos:position pos:line="26" pos:column="9"/></name> <modifier pos:line="26" pos:column="10">*<pos:position pos:line="26" pos:column="11"/></modifier></type><name pos:line="26" pos:column="11">size<pos:position pos:line="26" pos:column="15"/></name> <init pos:line="26" pos:column="16">= <expr><name pos:line="26" pos:column="18">NULL<pos:position pos:line="26" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">char<pos:position pos:line="27" pos:column="9"/></name></type> <name pos:line="27" pos:column="10">xfer_type<pos:position pos:line="27" pos:column="19"/></name> <init pos:line="27" pos:column="20">= <expr><literal type="char" pos:line="27" pos:column="22">'A'<pos:position pos:line="27" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="26"/></decl_stmt> <comment type="block" pos:line="27" pos:column="27">/* after ftp login, the default is ASCII */</comment>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">int<pos:position pos:line="28" pos:column="8"/></name></type>  <name pos:line="28" pos:column="10">dirlisting<pos:position pos:line="28" pos:column="20"/></name> <init pos:line="28" pos:column="21">= <expr><literal type="number" pos:line="28" pos:column="23">0<pos:position pos:line="28" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="28" pos:column="25"/></decl_stmt>
<cpp:if pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">if<pos:position pos:line="29" pos:column="4"/></cpp:directive> <expr><call><name pos:line="29" pos:column="5">defined<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><name pos:line="29" pos:column="13">USE_MDTM<pos:position pos:line="29" pos:column="21"/></name></expr></argument>)<pos:position pos:line="29" pos:column="22"/></argument_list></call> <operator pos:line="29" pos:column="23">&amp;&amp;<pos:position pos:line="29" pos:column="33"/></operator> <operator pos:line="29" pos:column="26">(<pos:position pos:line="29" pos:column="27"/></operator><call><name pos:line="29" pos:column="27">defined<pos:position pos:line="29" pos:column="34"/></name><argument_list pos:line="29" pos:column="34">(<argument><expr><name pos:line="29" pos:column="35">HAVE_TIMEGM<pos:position pos:line="29" pos:column="46"/></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call> <operator pos:line="29" pos:column="48">||<pos:position pos:line="29" pos:column="50"/></operator> <call><name pos:line="29" pos:column="51">defined<pos:position pos:line="29" pos:column="58"/></name><argument_list pos:line="29" pos:column="58">(<argument><expr><name pos:line="29" pos:column="59">HAVE_GMTOFF<pos:position pos:line="29" pos:column="70"/></name></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call><operator pos:line="29" pos:column="71">)<pos:position pos:line="29" pos:column="72"/></operator></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">apr_time_t<pos:position pos:line="30" pos:column="15"/></name></type> <name pos:line="30" pos:column="16">mtime<pos:position pos:line="30" pos:column="21"/></name> <init pos:line="30" pos:column="22">= <expr><literal type="number" pos:line="30" pos:column="24">0L<pos:position pos:line="30" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="27"/></decl_stmt>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">proxy_ftp_dir_conf<pos:position pos:line="32" pos:column="23"/></name> <modifier pos:line="32" pos:column="24">*<pos:position pos:line="32" pos:column="25"/></modifier></type><name pos:line="32" pos:column="25">fdconf<pos:position pos:line="32" pos:column="31"/></name> <init pos:line="32" pos:column="32">= <expr><call><name pos:line="32" pos:column="34">ap_get_module_config<pos:position pos:line="32" pos:column="54"/></name><argument_list pos:line="32" pos:column="54">(<argument><expr><name><name pos:line="32" pos:column="55">r<pos:position pos:line="32" pos:column="56"/></name><operator pos:line="32" pos:column="56">-&gt;<pos:position pos:line="32" pos:column="61"/></operator><name pos:line="32" pos:column="58">per_dir_config<pos:position pos:line="32" pos:column="72"/></name></name></expr></argument>,
                                                      <argument><expr><operator pos:line="33" pos:column="55">&amp;<pos:position pos:line="33" pos:column="60"/></operator><name pos:line="33" pos:column="56">proxy_ftp_module<pos:position pos:line="33" pos:column="72"/></name></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="74"/></decl_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* stuff for PASV mode */</comment>
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">int<pos:position pos:line="36" pos:column="8"/></name></type> <name pos:line="36" pos:column="9">connect<pos:position pos:line="36" pos:column="16"/></name> <init pos:line="36" pos:column="17">= <expr><literal type="number" pos:line="36" pos:column="19">0<pos:position pos:line="36" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="36" pos:column="22">use_port<pos:position pos:line="36" pos:column="30"/></name> <init pos:line="36" pos:column="31">= <expr><literal type="number" pos:line="36" pos:column="33">0<pos:position pos:line="36" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="36" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">char<pos:position pos:line="37" pos:column="9"/></name></type> <name><name pos:line="37" pos:column="10">dates<pos:position pos:line="37" pos:column="15"/></name><index pos:line="37" pos:column="15">[<expr><name pos:line="37" pos:column="16">APR_RFC822_DATE_LEN<pos:position pos:line="37" pos:column="35"/></name></expr>]<pos:position pos:line="37" pos:column="36"/></index></name></decl>;<pos:position pos:line="37" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">int<pos:position pos:line="38" pos:column="8"/></name></type> <name pos:line="38" pos:column="9">status<pos:position pos:line="38" pos:column="15"/></name></decl>;<pos:position pos:line="38" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">apr_pool_t<pos:position pos:line="39" pos:column="15"/></name> <modifier pos:line="39" pos:column="16">*<pos:position pos:line="39" pos:column="17"/></modifier></type><name pos:line="39" pos:column="17">address_pool<pos:position pos:line="39" pos:column="29"/></name></decl>;<pos:position pos:line="39" pos:column="30"/></decl_stmt>

    <comment type="block" pos:line="41" pos:column="5">/* is this for us? */</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">proxyhost<pos:position pos:line="42" pos:column="18"/></name></expr>)<pos:position pos:line="42" pos:column="19"/></condition><then pos:line="42" pos:column="19"> <block pos:line="42" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">ap_log_error<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">APLOG_MARK<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="34">APLOG_TRACE3<pos:position pos:line="43" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="48">0<pos:position pos:line="43" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="51">r<pos:position pos:line="43" pos:column="52"/></name><operator pos:line="43" pos:column="52">-&gt;<pos:position pos:line="43" pos:column="57"/></operator><name pos:line="43" pos:column="54">server<pos:position pos:line="43" pos:column="60"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="44" pos:column="22">"proxy: FTP: declining URL %s - proxyhost %s specified:"<pos:position pos:line="44" pos:column="78"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="80">url<pos:position pos:line="44" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="85">proxyhost<pos:position pos:line="44" pos:column="94"/></name></expr></argument>)<pos:position pos:line="44" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="96"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">DECLINED<pos:position pos:line="45" pos:column="24"/></name></expr>;<pos:position pos:line="45" pos:column="25"/></return>        <comment type="block" pos:line="45" pos:column="33">/* proxy connections are via HTTP */</comment>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><call><name pos:line="47" pos:column="9">strncasecmp<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">url<pos:position pos:line="47" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="26">"ftp:"<pos:position pos:line="47" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="34">4<pos:position pos:line="47" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="37"/></condition><then pos:line="47" pos:column="37"> <block pos:line="47" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">ap_log_error<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">APLOG_MARK<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="34">APLOG_TRACE3<pos:position pos:line="48" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="48">0<pos:position pos:line="48" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="51">r<pos:position pos:line="48" pos:column="52"/></name><operator pos:line="48" pos:column="52">-&gt;<pos:position pos:line="48" pos:column="57"/></operator><name pos:line="48" pos:column="54">server<pos:position pos:line="48" pos:column="60"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="49" pos:column="22">"proxy: FTP: declining URL %s - not ftp:"<pos:position pos:line="49" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="65">url<pos:position pos:line="49" pos:column="68"/></name></expr></argument>)<pos:position pos:line="49" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="70"/></expr_stmt>
        <return pos:line="50" pos:column="9">return <expr><name pos:line="50" pos:column="16">DECLINED<pos:position pos:line="50" pos:column="24"/></name></expr>;<pos:position pos:line="50" pos:column="25"/></return>        <comment type="block" pos:line="50" pos:column="33">/* only interested in FTP */</comment>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">ap_log_error<pos:position pos:line="52" pos:column="17"/></name><argument_list pos:line="52" pos:column="17">(<argument><expr><name pos:line="52" pos:column="18">APLOG_MARK<pos:position pos:line="52" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="30">APLOG_TRACE3<pos:position pos:line="52" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="44">0<pos:position pos:line="52" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="47">r<pos:position pos:line="52" pos:column="48"/></name><operator pos:line="52" pos:column="48">-&gt;<pos:position pos:line="52" pos:column="53"/></operator><name pos:line="52" pos:column="50">server<pos:position pos:line="52" pos:column="56"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="53" pos:column="18">"proxy: FTP: serving URL %s"<pos:position pos:line="53" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="48">url<pos:position pos:line="53" pos:column="51"/></name></expr></argument>)<pos:position pos:line="53" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="53"/></expr_stmt>


    <comment type="block" pos:line="56" pos:column="5">/*
     * I: Who Do I Connect To? -----------------------
     *
     * Break up the URL to determine the host to connect to
     */</comment>

    <comment type="block" pos:line="62" pos:column="5">/* we only support GET and HEAD */</comment>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name><name pos:line="63" pos:column="9">r<pos:position pos:line="63" pos:column="10"/></name><operator pos:line="63" pos:column="10">-&gt;<pos:position pos:line="63" pos:column="15"/></operator><name pos:line="63" pos:column="12">method_number<pos:position pos:line="63" pos:column="25"/></name></name> <operator pos:line="63" pos:column="26">!=<pos:position pos:line="63" pos:column="28"/></operator> <name pos:line="63" pos:column="29">M_GET<pos:position pos:line="63" pos:column="34"/></name></expr>)<pos:position pos:line="63" pos:column="35"/></condition><then pos:line="63" pos:column="35">
        <block type="pseudo"><return pos:line="64" pos:column="9">return <expr><name pos:line="64" pos:column="16">HTTP_NOT_IMPLEMENTED<pos:position pos:line="64" pos:column="36"/></name></expr>;<pos:position pos:line="64" pos:column="37"/></return></block></then></if>

    <comment type="block" pos:line="66" pos:column="5">/* We break the URL into host, port, path-search */</comment>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name><name pos:line="67" pos:column="9">r<pos:position pos:line="67" pos:column="10"/></name><operator pos:line="67" pos:column="10">-&gt;<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="12">parsed_uri<pos:position pos:line="67" pos:column="22"/></name><operator pos:line="67" pos:column="22">.<pos:position pos:line="67" pos:column="23"/></operator><name pos:line="67" pos:column="23">hostname<pos:position pos:line="67" pos:column="31"/></name></name> <operator pos:line="67" pos:column="32">==<pos:position pos:line="67" pos:column="34"/></operator> <name pos:line="67" pos:column="35">NULL<pos:position pos:line="67" pos:column="39"/></name></expr>)<pos:position pos:line="67" pos:column="40"/></condition><then pos:line="67" pos:column="40"> <block pos:line="67" pos:column="41">{
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">APR_SUCCESS<pos:position pos:line="68" pos:column="24"/></name> <operator pos:line="68" pos:column="25">!=<pos:position pos:line="68" pos:column="27"/></operator> <call><name pos:line="68" pos:column="28">apr_uri_parse<pos:position pos:line="68" pos:column="41"/></name><argument_list pos:line="68" pos:column="41">(<argument><expr><name pos:line="68" pos:column="42">p<pos:position pos:line="68" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="45">url<pos:position pos:line="68" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="50">&amp;<pos:position pos:line="68" pos:column="55"/></operator><name pos:line="68" pos:column="51">uri<pos:position pos:line="68" pos:column="54"/></name></expr></argument>)<pos:position pos:line="68" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="56"/></condition><then pos:line="68" pos:column="56"> <block pos:line="68" pos:column="57">{
            <return pos:line="69" pos:column="13">return <expr><call><name pos:line="69" pos:column="20">ap_proxyerror<pos:position pos:line="69" pos:column="33"/></name><argument_list pos:line="69" pos:column="33">(<argument><expr><name pos:line="69" pos:column="34">r<pos:position pos:line="69" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="37">HTTP_BAD_REQUEST<pos:position pos:line="69" pos:column="53"/></name></expr></argument>,
                <argument><expr><call><name pos:line="70" pos:column="17">apr_psprintf<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><name pos:line="70" pos:column="30">p<pos:position pos:line="70" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="33">"URI cannot be parsed: %s"<pos:position pos:line="70" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="61">url<pos:position pos:line="70" pos:column="64"/></name></expr></argument>)<pos:position pos:line="70" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="67"/></return>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="72" pos:column="9">connectname<pos:position pos:line="72" pos:column="20"/></name> <operator pos:line="72" pos:column="21">=<pos:position pos:line="72" pos:column="22"/></operator> <name><name pos:line="72" pos:column="23">uri<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">.<pos:position pos:line="72" pos:column="27"/></operator><name pos:line="72" pos:column="27">hostname<pos:position pos:line="72" pos:column="35"/></name></name></expr>;<pos:position pos:line="72" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="73" pos:column="9">connectport<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">=<pos:position pos:line="73" pos:column="22"/></operator> <name><name pos:line="73" pos:column="23">uri<pos:position pos:line="73" pos:column="26"/></name><operator pos:line="73" pos:column="26">.<pos:position pos:line="73" pos:column="27"/></operator><name pos:line="73" pos:column="27">port<pos:position pos:line="73" pos:column="31"/></name></name></expr>;<pos:position pos:line="73" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="74" pos:column="9">path<pos:position pos:line="74" pos:column="13"/></name> <operator pos:line="74" pos:column="14">=<pos:position pos:line="74" pos:column="15"/></operator> <call><name pos:line="74" pos:column="16">apr_pstrdup<pos:position pos:line="74" pos:column="27"/></name><argument_list pos:line="74" pos:column="27">(<argument><expr><name pos:line="74" pos:column="28">p<pos:position pos:line="74" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="31">uri<pos:position pos:line="74" pos:column="34"/></name><operator pos:line="74" pos:column="34">.<pos:position pos:line="74" pos:column="35"/></operator><name pos:line="74" pos:column="35">path<pos:position pos:line="74" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="75" pos:column="6"/></block></then>
    <else pos:line="76" pos:column="5">else <block pos:line="76" pos:column="10">{
        <expr_stmt><expr><name pos:line="77" pos:column="9">connectname<pos:position pos:line="77" pos:column="20"/></name> <operator pos:line="77" pos:column="21">=<pos:position pos:line="77" pos:column="22"/></operator> <name><name pos:line="77" pos:column="23">r<pos:position pos:line="77" pos:column="24"/></name><operator pos:line="77" pos:column="24">-&gt;<pos:position pos:line="77" pos:column="29"/></operator><name pos:line="77" pos:column="26">parsed_uri<pos:position pos:line="77" pos:column="36"/></name><operator pos:line="77" pos:column="36">.<pos:position pos:line="77" pos:column="37"/></operator><name pos:line="77" pos:column="37">hostname<pos:position pos:line="77" pos:column="45"/></name></name></expr>;<pos:position pos:line="77" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="78" pos:column="9">connectport<pos:position pos:line="78" pos:column="20"/></name> <operator pos:line="78" pos:column="21">=<pos:position pos:line="78" pos:column="22"/></operator> <name><name pos:line="78" pos:column="23">r<pos:position pos:line="78" pos:column="24"/></name><operator pos:line="78" pos:column="24">-&gt;<pos:position pos:line="78" pos:column="29"/></operator><name pos:line="78" pos:column="26">parsed_uri<pos:position pos:line="78" pos:column="36"/></name><operator pos:line="78" pos:column="36">.<pos:position pos:line="78" pos:column="37"/></operator><name pos:line="78" pos:column="37">port<pos:position pos:line="78" pos:column="41"/></name></name></expr>;<pos:position pos:line="78" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="79" pos:column="9">path<pos:position pos:line="79" pos:column="13"/></name> <operator pos:line="79" pos:column="14">=<pos:position pos:line="79" pos:column="15"/></operator> <call><name pos:line="79" pos:column="16">apr_pstrdup<pos:position pos:line="79" pos:column="27"/></name><argument_list pos:line="79" pos:column="27">(<argument><expr><name pos:line="79" pos:column="28">p<pos:position pos:line="79" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="31">r<pos:position pos:line="79" pos:column="32"/></name><operator pos:line="79" pos:column="32">-&gt;<pos:position pos:line="79" pos:column="37"/></operator><name pos:line="79" pos:column="34">parsed_uri<pos:position pos:line="79" pos:column="44"/></name><operator pos:line="79" pos:column="44">.<pos:position pos:line="79" pos:column="45"/></operator><name pos:line="79" pos:column="45">path<pos:position pos:line="79" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></else></if>
    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><name pos:line="81" pos:column="9">connectport<pos:position pos:line="81" pos:column="20"/></name> <operator pos:line="81" pos:column="21">==<pos:position pos:line="81" pos:column="23"/></operator> <literal type="number" pos:line="81" pos:column="24">0<pos:position pos:line="81" pos:column="25"/></literal></expr>)<pos:position pos:line="81" pos:column="26"/></condition><then pos:line="81" pos:column="26"> <block pos:line="81" pos:column="27">{
        <expr_stmt><expr><name pos:line="82" pos:column="9">connectport<pos:position pos:line="82" pos:column="20"/></name> <operator pos:line="82" pos:column="21">=<pos:position pos:line="82" pos:column="22"/></operator> <call><name pos:line="82" pos:column="23">apr_uri_port_of_scheme<pos:position pos:line="82" pos:column="45"/></name><argument_list pos:line="82" pos:column="45">(<argument><expr><literal type="string" pos:line="82" pos:column="46">"ftp"<pos:position pos:line="82" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="84" pos:column="5">path<pos:position pos:line="84" pos:column="9"/></name> <operator pos:line="84" pos:column="10">=<pos:position pos:line="84" pos:column="11"/></operator> <ternary><condition><expr><operator pos:line="84" pos:column="12">(<pos:position pos:line="84" pos:column="13"/></operator><name pos:line="84" pos:column="13">path<pos:position pos:line="84" pos:column="17"/></name> <operator pos:line="84" pos:column="18">!=<pos:position pos:line="84" pos:column="20"/></operator> <name pos:line="84" pos:column="21">NULL<pos:position pos:line="84" pos:column="25"/></name> <operator pos:line="84" pos:column="26">&amp;&amp;<pos:position pos:line="84" pos:column="36"/></operator> <name><name pos:line="84" pos:column="29">path<pos:position pos:line="84" pos:column="33"/></name><index pos:line="84" pos:column="33">[<expr><literal type="number" pos:line="84" pos:column="34">0<pos:position pos:line="84" pos:column="35"/></literal></expr>]<pos:position pos:line="84" pos:column="36"/></index></name> <operator pos:line="84" pos:column="37">!=<pos:position pos:line="84" pos:column="39"/></operator> <literal type="char" pos:line="84" pos:column="40">'\0'<pos:position pos:line="84" pos:column="44"/></literal><operator pos:line="84" pos:column="44">)<pos:position pos:line="84" pos:column="45"/></operator></expr> ?<pos:position pos:line="84" pos:column="47"/></condition><then pos:line="84" pos:column="47"> <expr><operator pos:line="84" pos:column="48">&amp;<pos:position pos:line="84" pos:column="53"/></operator><name><name pos:line="84" pos:column="49">path<pos:position pos:line="84" pos:column="53"/></name><index pos:line="84" pos:column="53">[<expr><literal type="number" pos:line="84" pos:column="54">1<pos:position pos:line="84" pos:column="55"/></literal></expr>]<pos:position pos:line="84" pos:column="56"/></index></name></expr> <pos:position pos:line="84" pos:column="57"/></then><else pos:line="84" pos:column="57">: <expr><literal type="string" pos:line="84" pos:column="59">""<pos:position pos:line="84" pos:column="61"/></literal></expr></else></ternary></expr>;<pos:position pos:line="84" pos:column="62"/></expr_stmt>

    <expr_stmt><expr><name pos:line="86" pos:column="5">type_suffix<pos:position pos:line="86" pos:column="16"/></name> <operator pos:line="86" pos:column="17">=<pos:position pos:line="86" pos:column="18"/></operator> <call><name pos:line="86" pos:column="19">strchr<pos:position pos:line="86" pos:column="25"/></name><argument_list pos:line="86" pos:column="25">(<argument><expr><name pos:line="86" pos:column="26">path<pos:position pos:line="86" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="86" pos:column="32">';'<pos:position pos:line="86" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="37"/></expr_stmt>
    <if pos:line="87" pos:column="5">if <condition pos:line="87" pos:column="8">(<expr><name pos:line="87" pos:column="9">type_suffix<pos:position pos:line="87" pos:column="20"/></name> <operator pos:line="87" pos:column="21">!=<pos:position pos:line="87" pos:column="23"/></operator> <name pos:line="87" pos:column="24">NULL<pos:position pos:line="87" pos:column="28"/></name></expr>)<pos:position pos:line="87" pos:column="29"/></condition><then pos:line="87" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="88" pos:column="9">*<pos:position pos:line="88" pos:column="10"/></operator><operator pos:line="88" pos:column="10">(<pos:position pos:line="88" pos:column="11"/></operator><name pos:line="88" pos:column="11">type_suffix<pos:position pos:line="88" pos:column="22"/></name><operator pos:line="88" pos:column="22">++<pos:position pos:line="88" pos:column="24"/></operator><operator pos:line="88" pos:column="24">)<pos:position pos:line="88" pos:column="25"/></operator> <operator pos:line="88" pos:column="26">=<pos:position pos:line="88" pos:column="27"/></operator> <literal type="char" pos:line="88" pos:column="28">'\0'<pos:position pos:line="88" pos:column="32"/></literal></expr>;<pos:position pos:line="88" pos:column="33"/></expr_stmt></block></then></if>

    <if pos:line="90" pos:column="5">if <condition pos:line="90" pos:column="8">(<expr><name pos:line="90" pos:column="9">type_suffix<pos:position pos:line="90" pos:column="20"/></name> <operator pos:line="90" pos:column="21">!=<pos:position pos:line="90" pos:column="23"/></operator> <name pos:line="90" pos:column="24">NULL<pos:position pos:line="90" pos:column="28"/></name> <operator pos:line="90" pos:column="29">&amp;&amp;<pos:position pos:line="90" pos:column="39"/></operator> <call><name pos:line="90" pos:column="32">strncmp<pos:position pos:line="90" pos:column="39"/></name><argument_list pos:line="90" pos:column="39">(<argument><expr><name pos:line="90" pos:column="40">type_suffix<pos:position pos:line="90" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="53">"type="<pos:position pos:line="90" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="62">5<pos:position pos:line="90" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="64"/></argument_list></call> <operator pos:line="90" pos:column="65">==<pos:position pos:line="90" pos:column="67"/></operator> <literal type="number" pos:line="90" pos:column="68">0<pos:position pos:line="90" pos:column="69"/></literal>
        <operator pos:line="91" pos:column="9">&amp;&amp;<pos:position pos:line="91" pos:column="19"/></operator> <call><name pos:line="91" pos:column="12">apr_isalpha<pos:position pos:line="91" pos:column="23"/></name><argument_list pos:line="91" pos:column="23">(<argument><expr><name><name pos:line="91" pos:column="24">type_suffix<pos:position pos:line="91" pos:column="35"/></name><index pos:line="91" pos:column="35">[<expr><literal type="number" pos:line="91" pos:column="36">5<pos:position pos:line="91" pos:column="37"/></literal></expr>]<pos:position pos:line="91" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="91" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="40"/></condition><then pos:line="91" pos:column="40"> <block pos:line="91" pos:column="41">{
        <comment type="block" pos:line="92" pos:column="9">/* "type=d" forces a dir listing.
         * The other types (i|a|e) are directly used for the ftp TYPE command
         */</comment>
        <if pos:line="95" pos:column="9">if <condition pos:line="95" pos:column="12">( <expr><operator pos:line="95" pos:column="14">!<pos:position pos:line="95" pos:column="15"/></operator> <operator pos:line="95" pos:column="16">(<pos:position pos:line="95" pos:column="17"/></operator><name pos:line="95" pos:column="17">dirlisting<pos:position pos:line="95" pos:column="27"/></name> <operator pos:line="95" pos:column="28">=<pos:position pos:line="95" pos:column="29"/></operator> <operator pos:line="95" pos:column="30">(<pos:position pos:line="95" pos:column="31"/></operator><call><name pos:line="95" pos:column="31">apr_tolower<pos:position pos:line="95" pos:column="42"/></name><argument_list pos:line="95" pos:column="42">(<argument><expr><name><name pos:line="95" pos:column="43">type_suffix<pos:position pos:line="95" pos:column="54"/></name><index pos:line="95" pos:column="54">[<expr><literal type="number" pos:line="95" pos:column="55">5<pos:position pos:line="95" pos:column="56"/></literal></expr>]<pos:position pos:line="95" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="95" pos:column="58"/></argument_list></call> <operator pos:line="95" pos:column="59">==<pos:position pos:line="95" pos:column="61"/></operator> <literal type="char" pos:line="95" pos:column="62">'d'<pos:position pos:line="95" pos:column="65"/></literal><operator pos:line="95" pos:column="65">)<pos:position pos:line="95" pos:column="66"/></operator><operator pos:line="95" pos:column="66">)<pos:position pos:line="95" pos:column="67"/></operator></expr>)<pos:position pos:line="95" pos:column="68"/></condition><then pos:line="95" pos:column="68">
            <block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="13">xfer_type<pos:position pos:line="96" pos:column="22"/></name> <operator pos:line="96" pos:column="23">=<pos:position pos:line="96" pos:column="24"/></operator> <call><name pos:line="96" pos:column="25">apr_toupper<pos:position pos:line="96" pos:column="36"/></name><argument_list pos:line="96" pos:column="36">(<argument><expr><name><name pos:line="96" pos:column="37">type_suffix<pos:position pos:line="96" pos:column="48"/></name><index pos:line="96" pos:column="48">[<expr><literal type="number" pos:line="96" pos:column="49">5<pos:position pos:line="96" pos:column="50"/></literal></expr>]<pos:position pos:line="96" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="96" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="53"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="98" pos:column="9">/* Check valid types, rather than ignoring invalid types silently: */</comment>
        <if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">(<expr><call><name pos:line="99" pos:column="13">strchr<pos:position pos:line="99" pos:column="19"/></name><argument_list pos:line="99" pos:column="19">(<argument><expr><literal type="string" pos:line="99" pos:column="20">"AEI"<pos:position pos:line="99" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="27">xfer_type<pos:position pos:line="99" pos:column="36"/></name></expr></argument>)<pos:position pos:line="99" pos:column="37"/></argument_list></call> <operator pos:line="99" pos:column="38">==<pos:position pos:line="99" pos:column="40"/></operator> <name pos:line="99" pos:column="41">NULL<pos:position pos:line="99" pos:column="45"/></name></expr>)<pos:position pos:line="99" pos:column="46"/></condition><then pos:line="99" pos:column="46">
            <block type="pseudo"><return pos:line="100" pos:column="13">return <expr><call><name pos:line="100" pos:column="20">ap_proxyerror<pos:position pos:line="100" pos:column="33"/></name><argument_list pos:line="100" pos:column="33">(<argument><expr><name pos:line="100" pos:column="34">r<pos:position pos:line="100" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="37">HTTP_BAD_REQUEST<pos:position pos:line="100" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="100" pos:column="55">apr_pstrcat<pos:position pos:line="100" pos:column="66"/></name><argument_list pos:line="100" pos:column="66">(<argument><expr><name><name pos:line="100" pos:column="67">r<pos:position pos:line="100" pos:column="68"/></name><operator pos:line="100" pos:column="68">-&gt;<pos:position pos:line="100" pos:column="73"/></operator><name pos:line="100" pos:column="70">pool<pos:position pos:line="100" pos:column="74"/></name></name></expr></argument>,
                                    <argument><expr><literal type="string" pos:line="101" pos:column="37">"ftp proxy supports only types 'a', 'i', or 'e': \""<pos:position pos:line="101" pos:column="89"/></literal></expr></argument>,
                                    <argument><expr><name pos:line="102" pos:column="37">type_suffix<pos:position pos:line="102" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="50">"\" is invalid."<pos:position pos:line="102" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="68">NULL<pos:position pos:line="102" pos:column="72"/></name></expr></argument>)<pos:position pos:line="102" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="102" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="75"/></return></block></then></if>
    }<pos:position pos:line="103" pos:column="6"/></block></then>
    <else pos:line="104" pos:column="5">else <block pos:line="104" pos:column="10">{
        <comment type="block" pos:line="105" pos:column="9">/* make binary transfers the default */</comment>
        <expr_stmt><expr><name pos:line="106" pos:column="9">xfer_type<pos:position pos:line="106" pos:column="18"/></name> <operator pos:line="106" pos:column="19">=<pos:position pos:line="106" pos:column="20"/></operator> <literal type="char" pos:line="106" pos:column="21">'I'<pos:position pos:line="106" pos:column="24"/></literal></expr>;<pos:position pos:line="106" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="107" pos:column="6"/></block></else></if>


    <comment type="block" pos:line="110" pos:column="5">/*
     * The "Authorization:" header must be checked first. We allow the user
     * to "override" the URL-coded user [ &amp; password ] in the Browsers'
     * User&amp;Password Dialog. NOTE that this is only marginally more secure
     * than having the password travel in plain as part of the URL, because
     * Basic Auth simply uuencodes the plain text password. But chances are
     * still smaller that the URL is logged regularly.
     */</comment>
    <if pos:line="118" pos:column="5">if <condition pos:line="118" pos:column="8">(<expr><operator pos:line="118" pos:column="9">(<pos:position pos:line="118" pos:column="10"/></operator><name pos:line="118" pos:column="10">password<pos:position pos:line="118" pos:column="18"/></name> <operator pos:line="118" pos:column="19">=<pos:position pos:line="118" pos:column="20"/></operator> <call><name pos:line="118" pos:column="21">apr_table_get<pos:position pos:line="118" pos:column="34"/></name><argument_list pos:line="118" pos:column="34">(<argument><expr><name><name pos:line="118" pos:column="35">r<pos:position pos:line="118" pos:column="36"/></name><operator pos:line="118" pos:column="36">-&gt;<pos:position pos:line="118" pos:column="41"/></operator><name pos:line="118" pos:column="38">headers_in<pos:position pos:line="118" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="50">"Authorization"<pos:position pos:line="118" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="66"/></argument_list></call><operator pos:line="118" pos:column="66">)<pos:position pos:line="118" pos:column="67"/></operator> <operator pos:line="118" pos:column="68">!=<pos:position pos:line="118" pos:column="70"/></operator> <name pos:line="118" pos:column="71">NULL<pos:position pos:line="118" pos:column="75"/></name>
        <operator pos:line="119" pos:column="9">&amp;&amp;<pos:position pos:line="119" pos:column="19"/></operator> <call><name pos:line="119" pos:column="12">strcasecmp<pos:position pos:line="119" pos:column="22"/></name><argument_list pos:line="119" pos:column="22">(<argument><expr><call><name pos:line="119" pos:column="23">ap_getword<pos:position pos:line="119" pos:column="33"/></name><argument_list pos:line="119" pos:column="33">(<argument><expr><name><name pos:line="119" pos:column="34">r<pos:position pos:line="119" pos:column="35"/></name><operator pos:line="119" pos:column="35">-&gt;<pos:position pos:line="119" pos:column="40"/></operator><name pos:line="119" pos:column="37">pool<pos:position pos:line="119" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="119" pos:column="43">&amp;<pos:position pos:line="119" pos:column="48"/></operator><name pos:line="119" pos:column="44">password<pos:position pos:line="119" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="119" pos:column="54">' '<pos:position pos:line="119" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="60">"Basic"<pos:position pos:line="119" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="68"/></argument_list></call> <operator pos:line="119" pos:column="69">==<pos:position pos:line="119" pos:column="71"/></operator> <literal type="number" pos:line="119" pos:column="72">0<pos:position pos:line="119" pos:column="73"/></literal>
        <operator pos:line="120" pos:column="9">&amp;&amp;<pos:position pos:line="120" pos:column="19"/></operator> <operator pos:line="120" pos:column="12">(<pos:position pos:line="120" pos:column="13"/></operator><name pos:line="120" pos:column="13">password<pos:position pos:line="120" pos:column="21"/></name> <operator pos:line="120" pos:column="22">=<pos:position pos:line="120" pos:column="23"/></operator> <call><name pos:line="120" pos:column="24">ap_pbase64decode<pos:position pos:line="120" pos:column="40"/></name><argument_list pos:line="120" pos:column="40">(<argument><expr><name><name pos:line="120" pos:column="41">r<pos:position pos:line="120" pos:column="42"/></name><operator pos:line="120" pos:column="42">-&gt;<pos:position pos:line="120" pos:column="47"/></operator><name pos:line="120" pos:column="44">pool<pos:position pos:line="120" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="50">password<pos:position pos:line="120" pos:column="58"/></name></expr></argument>)<pos:position pos:line="120" pos:column="59"/></argument_list></call><operator pos:line="120" pos:column="59">)<pos:position pos:line="120" pos:column="60"/></operator><index pos:line="120" pos:column="60">[<expr><literal type="number" pos:line="120" pos:column="61">0<pos:position pos:line="120" pos:column="62"/></literal></expr>]<pos:position pos:line="120" pos:column="63"/></index> <operator pos:line="120" pos:column="64">!=<pos:position pos:line="120" pos:column="66"/></operator> <literal type="char" pos:line="120" pos:column="67">':'<pos:position pos:line="120" pos:column="70"/></literal></expr>)<pos:position pos:line="120" pos:column="71"/></condition><then pos:line="120" pos:column="71"> <block pos:line="120" pos:column="72">{
        <comment type="block" pos:line="121" pos:column="9">/* Check the decoded string for special characters. */</comment>
        <if pos:line="122" pos:column="9">if <condition pos:line="122" pos:column="12">(<expr><operator pos:line="122" pos:column="13">!<pos:position pos:line="122" pos:column="14"/></operator><call><name pos:line="122" pos:column="14">ftp_check_string<pos:position pos:line="122" pos:column="30"/></name><argument_list pos:line="122" pos:column="30">(<argument><expr><name pos:line="122" pos:column="31">password<pos:position pos:line="122" pos:column="39"/></name></expr></argument>)<pos:position pos:line="122" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="41"/></condition><then pos:line="122" pos:column="41"> <block pos:line="122" pos:column="42">{
            <return pos:line="123" pos:column="13">return <expr><call><name pos:line="123" pos:column="20">ap_proxyerror<pos:position pos:line="123" pos:column="33"/></name><argument_list pos:line="123" pos:column="33">(<argument><expr><name pos:line="123" pos:column="34">r<pos:position pos:line="123" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="37">HTTP_BAD_REQUEST<pos:position pos:line="123" pos:column="53"/></name></expr></argument>, 
                                 <argument><expr><literal type="string" pos:line="124" pos:column="34">"user credentials contained invalid character"<pos:position pos:line="124" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="82"/></return>
        }<pos:position pos:line="125" pos:column="10"/></block></then></if> 
        <comment type="block" pos:line="126" pos:column="9">/*
         * Note that this allocation has to be made from r-&gt;connection-&gt;pool
         * because it has the lifetime of the connection.  The other
         * allocations are temporary and can be tossed away any time.
         */</comment>
        <expr_stmt><expr><name pos:line="131" pos:column="9">user<pos:position pos:line="131" pos:column="13"/></name> <operator pos:line="131" pos:column="14">=<pos:position pos:line="131" pos:column="15"/></operator> <call><name pos:line="131" pos:column="16">ap_getword_nulls<pos:position pos:line="131" pos:column="32"/></name><argument_list pos:line="131" pos:column="32">(<argument><expr><name><name pos:line="131" pos:column="33">r<pos:position pos:line="131" pos:column="34"/></name><operator pos:line="131" pos:column="34">-&gt;<pos:position pos:line="131" pos:column="39"/></operator><name pos:line="131" pos:column="36">connection<pos:position pos:line="131" pos:column="46"/></name><operator pos:line="131" pos:column="46">-&gt;<pos:position pos:line="131" pos:column="51"/></operator><name pos:line="131" pos:column="48">pool<pos:position pos:line="131" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="131" pos:column="54">&amp;<pos:position pos:line="131" pos:column="59"/></operator><name pos:line="131" pos:column="55">password<pos:position pos:line="131" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="131" pos:column="65">':'<pos:position pos:line="131" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="132" pos:column="9">r<pos:position pos:line="132" pos:column="10"/></name><operator pos:line="132" pos:column="10">-&gt;<pos:position pos:line="132" pos:column="15"/></operator><name pos:line="132" pos:column="12">ap_auth_type<pos:position pos:line="132" pos:column="24"/></name></name> <operator pos:line="132" pos:column="25">=<pos:position pos:line="132" pos:column="26"/></operator> <literal type="string" pos:line="132" pos:column="27">"Basic"<pos:position pos:line="132" pos:column="34"/></literal></expr>;<pos:position pos:line="132" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="133" pos:column="9">r<pos:position pos:line="133" pos:column="10"/></name><operator pos:line="133" pos:column="10">-&gt;<pos:position pos:line="133" pos:column="15"/></operator><name pos:line="133" pos:column="12">user<pos:position pos:line="133" pos:column="16"/></name></name> <operator pos:line="133" pos:column="17">=<pos:position pos:line="133" pos:column="18"/></operator> <name><name pos:line="133" pos:column="19">r<pos:position pos:line="133" pos:column="20"/></name><operator pos:line="133" pos:column="20">-&gt;<pos:position pos:line="133" pos:column="25"/></operator><name pos:line="133" pos:column="22">parsed_uri<pos:position pos:line="133" pos:column="32"/></name><operator pos:line="133" pos:column="32">.<pos:position pos:line="133" pos:column="33"/></operator><name pos:line="133" pos:column="33">user<pos:position pos:line="133" pos:column="37"/></name></name> <operator pos:line="133" pos:column="38">=<pos:position pos:line="133" pos:column="39"/></operator> <name pos:line="133" pos:column="40">user<pos:position pos:line="133" pos:column="44"/></name></expr>;<pos:position pos:line="133" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="134" pos:column="6"/></block></then>
    <elseif pos:line="135" pos:column="5">else <if pos:line="135" pos:column="10">if <condition pos:line="135" pos:column="13">(<expr><operator pos:line="135" pos:column="14">(<pos:position pos:line="135" pos:column="15"/></operator><name pos:line="135" pos:column="15">user<pos:position pos:line="135" pos:column="19"/></name> <operator pos:line="135" pos:column="20">=<pos:position pos:line="135" pos:column="21"/></operator> <name><name pos:line="135" pos:column="22">r<pos:position pos:line="135" pos:column="23"/></name><operator pos:line="135" pos:column="23">-&gt;<pos:position pos:line="135" pos:column="28"/></operator><name pos:line="135" pos:column="25">parsed_uri<pos:position pos:line="135" pos:column="35"/></name><operator pos:line="135" pos:column="35">.<pos:position pos:line="135" pos:column="36"/></operator><name pos:line="135" pos:column="36">user<pos:position pos:line="135" pos:column="40"/></name></name><operator pos:line="135" pos:column="40">)<pos:position pos:line="135" pos:column="41"/></operator> <operator pos:line="135" pos:column="42">!=<pos:position pos:line="135" pos:column="44"/></operator> <name pos:line="135" pos:column="45">NULL<pos:position pos:line="135" pos:column="49"/></name></expr>)<pos:position pos:line="135" pos:column="50"/></condition><then pos:line="135" pos:column="50"> <block pos:line="135" pos:column="51">{
        <expr_stmt><expr><name pos:line="136" pos:column="9">user<pos:position pos:line="136" pos:column="13"/></name> <operator pos:line="136" pos:column="14">=<pos:position pos:line="136" pos:column="15"/></operator> <call><name pos:line="136" pos:column="16">apr_pstrdup<pos:position pos:line="136" pos:column="27"/></name><argument_list pos:line="136" pos:column="27">(<argument><expr><name pos:line="136" pos:column="28">p<pos:position pos:line="136" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="31">user<pos:position pos:line="136" pos:column="35"/></name></expr></argument>)<pos:position pos:line="136" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="137" pos:column="9">decodeenc<pos:position pos:line="137" pos:column="18"/></name><argument_list pos:line="137" pos:column="18">(<argument><expr><name pos:line="137" pos:column="19">user<pos:position pos:line="137" pos:column="23"/></name></expr></argument>)<pos:position pos:line="137" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="25"/></expr_stmt>
        <if pos:line="138" pos:column="9">if <condition pos:line="138" pos:column="12">(<expr><operator pos:line="138" pos:column="13">(<pos:position pos:line="138" pos:column="14"/></operator><name pos:line="138" pos:column="14">password<pos:position pos:line="138" pos:column="22"/></name> <operator pos:line="138" pos:column="23">=<pos:position pos:line="138" pos:column="24"/></operator> <name><name pos:line="138" pos:column="25">r<pos:position pos:line="138" pos:column="26"/></name><operator pos:line="138" pos:column="26">-&gt;<pos:position pos:line="138" pos:column="31"/></operator><name pos:line="138" pos:column="28">parsed_uri<pos:position pos:line="138" pos:column="38"/></name><operator pos:line="138" pos:column="38">.<pos:position pos:line="138" pos:column="39"/></operator><name pos:line="138" pos:column="39">password<pos:position pos:line="138" pos:column="47"/></name></name><operator pos:line="138" pos:column="47">)<pos:position pos:line="138" pos:column="48"/></operator> <operator pos:line="138" pos:column="49">!=<pos:position pos:line="138" pos:column="51"/></operator> <name pos:line="138" pos:column="52">NULL<pos:position pos:line="138" pos:column="56"/></name></expr>)<pos:position pos:line="138" pos:column="57"/></condition><then pos:line="138" pos:column="57"> <block pos:line="138" pos:column="58">{
            <decl_stmt><decl><type><name pos:line="139" pos:column="13">char<pos:position pos:line="139" pos:column="17"/></name> <modifier pos:line="139" pos:column="18">*<pos:position pos:line="139" pos:column="19"/></modifier></type><name pos:line="139" pos:column="19">tmp<pos:position pos:line="139" pos:column="22"/></name> <init pos:line="139" pos:column="23">= <expr><call><name pos:line="139" pos:column="25">apr_pstrdup<pos:position pos:line="139" pos:column="36"/></name><argument_list pos:line="139" pos:column="36">(<argument><expr><name pos:line="139" pos:column="37">p<pos:position pos:line="139" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="40">password<pos:position pos:line="139" pos:column="48"/></name></expr></argument>)<pos:position pos:line="139" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="139" pos:column="50"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="140" pos:column="13">decodeenc<pos:position pos:line="140" pos:column="22"/></name><argument_list pos:line="140" pos:column="22">(<argument><expr><name pos:line="140" pos:column="23">tmp<pos:position pos:line="140" pos:column="26"/></name></expr></argument>)<pos:position pos:line="140" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name pos:line="141" pos:column="13">password<pos:position pos:line="141" pos:column="21"/></name> <operator pos:line="141" pos:column="22">=<pos:position pos:line="141" pos:column="23"/></operator> <name pos:line="141" pos:column="24">tmp<pos:position pos:line="141" pos:column="27"/></name></expr>;<pos:position pos:line="141" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="142" pos:column="10"/></block></then></if>
    }<pos:position pos:line="143" pos:column="6"/></block></then></if></elseif>
    <else pos:line="144" pos:column="5">else <block pos:line="144" pos:column="10">{
        <expr_stmt><expr><name pos:line="145" pos:column="9">user<pos:position pos:line="145" pos:column="13"/></name> <operator pos:line="145" pos:column="14">=<pos:position pos:line="145" pos:column="15"/></operator> <literal type="string" pos:line="145" pos:column="16">"anonymous"<pos:position pos:line="145" pos:column="27"/></literal></expr>;<pos:position pos:line="145" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="146" pos:column="9">password<pos:position pos:line="146" pos:column="17"/></name> <operator pos:line="146" pos:column="18">=<pos:position pos:line="146" pos:column="19"/></operator> <literal type="string" pos:line="146" pos:column="20">"apache-proxy@"<pos:position pos:line="146" pos:column="35"/></literal></expr>;<pos:position pos:line="146" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="147" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="149" pos:column="5">ap_log_error<pos:position pos:line="149" pos:column="17"/></name><argument_list pos:line="149" pos:column="17">(<argument><expr><name pos:line="149" pos:column="18">APLOG_MARK<pos:position pos:line="149" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="30">APLOG_DEBUG<pos:position pos:line="149" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="149" pos:column="43">0<pos:position pos:line="149" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="149" pos:column="46">r<pos:position pos:line="149" pos:column="47"/></name><operator pos:line="149" pos:column="47">-&gt;<pos:position pos:line="149" pos:column="52"/></operator><name pos:line="149" pos:column="49">server<pos:position pos:line="149" pos:column="55"/></name></name></expr></argument>,
       <argument><expr><literal type="string" pos:line="150" pos:column="8">"proxy: FTP: connecting %s to %s:%d"<pos:position pos:line="150" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="150" pos:column="46">url<pos:position pos:line="150" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="51">connectname<pos:position pos:line="150" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="64">connectport<pos:position pos:line="150" pos:column="75"/></name></expr></argument>)<pos:position pos:line="150" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="77"/></expr_stmt>

    <if pos:line="152" pos:column="5">if <condition pos:line="152" pos:column="8">(<expr><name><name pos:line="152" pos:column="9">worker<pos:position pos:line="152" pos:column="15"/></name><operator pos:line="152" pos:column="15">-&gt;<pos:position pos:line="152" pos:column="20"/></operator><name pos:line="152" pos:column="17">is_address_reusable<pos:position pos:line="152" pos:column="36"/></name></name></expr>)<pos:position pos:line="152" pos:column="37"/></condition><then pos:line="152" pos:column="37"> <block pos:line="152" pos:column="38">{
        <if pos:line="153" pos:column="9">if <condition pos:line="153" pos:column="12">(<expr><operator pos:line="153" pos:column="13">!<pos:position pos:line="153" pos:column="14"/></operator><name><name pos:line="153" pos:column="14">worker<pos:position pos:line="153" pos:column="20"/></name><operator pos:line="153" pos:column="20">-&gt;<pos:position pos:line="153" pos:column="25"/></operator><name pos:line="153" pos:column="22">cp<pos:position pos:line="153" pos:column="24"/></name><operator pos:line="153" pos:column="24">-&gt;<pos:position pos:line="153" pos:column="29"/></operator><name pos:line="153" pos:column="26">addr<pos:position pos:line="153" pos:column="30"/></name></name></expr>)<pos:position pos:line="153" pos:column="31"/></condition><then pos:line="153" pos:column="31"> <block pos:line="153" pos:column="32">{
            <if pos:line="154" pos:column="13">if <condition pos:line="154" pos:column="16">(<expr><operator pos:line="154" pos:column="17">(<pos:position pos:line="154" pos:column="18"/></operator><name pos:line="154" pos:column="18">err<pos:position pos:line="154" pos:column="21"/></name> <operator pos:line="154" pos:column="22">=<pos:position pos:line="154" pos:column="23"/></operator> <call><name pos:line="154" pos:column="24">PROXY_THREAD_LOCK<pos:position pos:line="154" pos:column="41"/></name><argument_list pos:line="154" pos:column="41">(<argument><expr><name pos:line="154" pos:column="42">worker<pos:position pos:line="154" pos:column="48"/></name></expr></argument>)<pos:position pos:line="154" pos:column="49"/></argument_list></call><operator pos:line="154" pos:column="49">)<pos:position pos:line="154" pos:column="50"/></operator> <operator pos:line="154" pos:column="51">!=<pos:position pos:line="154" pos:column="53"/></operator> <name pos:line="154" pos:column="54">APR_SUCCESS<pos:position pos:line="154" pos:column="65"/></name></expr>)<pos:position pos:line="154" pos:column="66"/></condition><then pos:line="154" pos:column="66"> <block pos:line="154" pos:column="67">{
                <expr_stmt><expr><call><name pos:line="155" pos:column="17">ap_log_error<pos:position pos:line="155" pos:column="29"/></name><argument_list pos:line="155" pos:column="29">(<argument><expr><name pos:line="155" pos:column="30">APLOG_MARK<pos:position pos:line="155" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="42">APLOG_ERR<pos:position pos:line="155" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="53">err<pos:position pos:line="155" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="155" pos:column="58">r<pos:position pos:line="155" pos:column="59"/></name><operator pos:line="155" pos:column="59">-&gt;<pos:position pos:line="155" pos:column="64"/></operator><name pos:line="155" pos:column="61">server<pos:position pos:line="155" pos:column="67"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="156" pos:column="30">"proxy: FTP: lock"<pos:position pos:line="156" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="50"/></expr_stmt>
                <return pos:line="157" pos:column="17">return <expr><name pos:line="157" pos:column="24">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="157" pos:column="50"/></name></expr>;<pos:position pos:line="157" pos:column="51"/></return>
            }<pos:position pos:line="158" pos:column="14"/></block></then></if>
        }<pos:position pos:line="159" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="160" pos:column="9">connect_addr<pos:position pos:line="160" pos:column="21"/></name> <operator pos:line="160" pos:column="22">=<pos:position pos:line="160" pos:column="23"/></operator> <name><name pos:line="160" pos:column="24">worker<pos:position pos:line="160" pos:column="30"/></name><operator pos:line="160" pos:column="30">-&gt;<pos:position pos:line="160" pos:column="35"/></operator><name pos:line="160" pos:column="32">cp<pos:position pos:line="160" pos:column="34"/></name><operator pos:line="160" pos:column="34">-&gt;<pos:position pos:line="160" pos:column="39"/></operator><name pos:line="160" pos:column="36">addr<pos:position pos:line="160" pos:column="40"/></name></name></expr>;<pos:position pos:line="160" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="161" pos:column="9">address_pool<pos:position pos:line="161" pos:column="21"/></name> <operator pos:line="161" pos:column="22">=<pos:position pos:line="161" pos:column="23"/></operator> <name><name pos:line="161" pos:column="24">worker<pos:position pos:line="161" pos:column="30"/></name><operator pos:line="161" pos:column="30">-&gt;<pos:position pos:line="161" pos:column="35"/></operator><name pos:line="161" pos:column="32">cp<pos:position pos:line="161" pos:column="34"/></name><operator pos:line="161" pos:column="34">-&gt;<pos:position pos:line="161" pos:column="39"/></operator><name pos:line="161" pos:column="36">pool<pos:position pos:line="161" pos:column="40"/></name></name></expr>;<pos:position pos:line="161" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="162" pos:column="6"/></block></then>
    <else pos:line="163" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="164" pos:column="9">address_pool<pos:position pos:line="164" pos:column="21"/></name> <operator pos:line="164" pos:column="22">=<pos:position pos:line="164" pos:column="23"/></operator> <name><name pos:line="164" pos:column="24">r<pos:position pos:line="164" pos:column="25"/></name><operator pos:line="164" pos:column="25">-&gt;<pos:position pos:line="164" pos:column="30"/></operator><name pos:line="164" pos:column="27">pool<pos:position pos:line="164" pos:column="31"/></name></name></expr>;<pos:position pos:line="164" pos:column="32"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="166" pos:column="5">/* do a DNS lookup for the destination host */</comment>
    <if pos:line="167" pos:column="5">if <condition pos:line="167" pos:column="8">(<expr><operator pos:line="167" pos:column="9">!<pos:position pos:line="167" pos:column="10"/></operator><name pos:line="167" pos:column="10">connect_addr<pos:position pos:line="167" pos:column="22"/></name></expr>)<pos:position pos:line="167" pos:column="23"/></condition><then pos:line="167" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="168" pos:column="9">err<pos:position pos:line="168" pos:column="12"/></name> <operator pos:line="168" pos:column="13">=<pos:position pos:line="168" pos:column="14"/></operator> <call><name pos:line="168" pos:column="15">apr_sockaddr_info_get<pos:position pos:line="168" pos:column="36"/></name><argument_list pos:line="168" pos:column="36">(<argument><expr><operator pos:line="168" pos:column="37">&amp;<pos:position pos:line="168" pos:column="42"/></operator><operator pos:line="168" pos:column="38">(<pos:position pos:line="168" pos:column="39"/></operator><name pos:line="168" pos:column="39">connect_addr<pos:position pos:line="168" pos:column="51"/></name><operator pos:line="168" pos:column="51">)<pos:position pos:line="168" pos:column="52"/></operator></expr></argument>,
                                    <argument><expr><name pos:line="169" pos:column="37">connectname<pos:position pos:line="169" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="50">APR_UNSPEC<pos:position pos:line="169" pos:column="60"/></name></expr></argument>,
                                    <argument><expr><name pos:line="170" pos:column="37">connectport<pos:position pos:line="170" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="170" pos:column="50">0<pos:position pos:line="170" pos:column="51"/></literal></expr></argument>,
                                    <argument><expr><name pos:line="171" pos:column="37">address_pool<pos:position pos:line="171" pos:column="49"/></name></expr></argument>)<pos:position pos:line="171" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="51"/></expr_stmt></block></then></if>
    <if pos:line="172" pos:column="5">if <condition pos:line="172" pos:column="8">(<expr><name><name pos:line="172" pos:column="9">worker<pos:position pos:line="172" pos:column="15"/></name><operator pos:line="172" pos:column="15">-&gt;<pos:position pos:line="172" pos:column="20"/></operator><name pos:line="172" pos:column="17">is_address_reusable<pos:position pos:line="172" pos:column="36"/></name></name> <operator pos:line="172" pos:column="37">&amp;&amp;<pos:position pos:line="172" pos:column="47"/></operator> <operator pos:line="172" pos:column="40">!<pos:position pos:line="172" pos:column="41"/></operator><name><name pos:line="172" pos:column="41">worker<pos:position pos:line="172" pos:column="47"/></name><operator pos:line="172" pos:column="47">-&gt;<pos:position pos:line="172" pos:column="52"/></operator><name pos:line="172" pos:column="49">cp<pos:position pos:line="172" pos:column="51"/></name><operator pos:line="172" pos:column="51">-&gt;<pos:position pos:line="172" pos:column="56"/></operator><name pos:line="172" pos:column="53">addr<pos:position pos:line="172" pos:column="57"/></name></name></expr>)<pos:position pos:line="172" pos:column="58"/></condition><then pos:line="172" pos:column="58"> <block pos:line="172" pos:column="59">{
        <expr_stmt><expr><name><name pos:line="173" pos:column="9">worker<pos:position pos:line="173" pos:column="15"/></name><operator pos:line="173" pos:column="15">-&gt;<pos:position pos:line="173" pos:column="20"/></operator><name pos:line="173" pos:column="17">cp<pos:position pos:line="173" pos:column="19"/></name><operator pos:line="173" pos:column="19">-&gt;<pos:position pos:line="173" pos:column="24"/></operator><name pos:line="173" pos:column="21">addr<pos:position pos:line="173" pos:column="25"/></name></name> <operator pos:line="173" pos:column="26">=<pos:position pos:line="173" pos:column="27"/></operator> <name pos:line="173" pos:column="28">connect_addr<pos:position pos:line="173" pos:column="40"/></name></expr>;<pos:position pos:line="173" pos:column="41"/></expr_stmt>
        <if pos:line="174" pos:column="9">if <condition pos:line="174" pos:column="12">(<expr><operator pos:line="174" pos:column="13">(<pos:position pos:line="174" pos:column="14"/></operator><name pos:line="174" pos:column="14">uerr<pos:position pos:line="174" pos:column="18"/></name> <operator pos:line="174" pos:column="19">=<pos:position pos:line="174" pos:column="20"/></operator> <call><name pos:line="174" pos:column="21">PROXY_THREAD_UNLOCK<pos:position pos:line="174" pos:column="40"/></name><argument_list pos:line="174" pos:column="40">(<argument><expr><name pos:line="174" pos:column="41">worker<pos:position pos:line="174" pos:column="47"/></name></expr></argument>)<pos:position pos:line="174" pos:column="48"/></argument_list></call><operator pos:line="174" pos:column="48">)<pos:position pos:line="174" pos:column="49"/></operator> <operator pos:line="174" pos:column="50">!=<pos:position pos:line="174" pos:column="52"/></operator> <name pos:line="174" pos:column="53">APR_SUCCESS<pos:position pos:line="174" pos:column="64"/></name></expr>)<pos:position pos:line="174" pos:column="65"/></condition><then pos:line="174" pos:column="65"> <block pos:line="174" pos:column="66">{
            <expr_stmt><expr><call><name pos:line="175" pos:column="13">ap_log_error<pos:position pos:line="175" pos:column="25"/></name><argument_list pos:line="175" pos:column="25">(<argument><expr><name pos:line="175" pos:column="26">APLOG_MARK<pos:position pos:line="175" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="38">APLOG_ERR<pos:position pos:line="175" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="49">uerr<pos:position pos:line="175" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="175" pos:column="55">r<pos:position pos:line="175" pos:column="56"/></name><operator pos:line="175" pos:column="56">-&gt;<pos:position pos:line="175" pos:column="61"/></operator><name pos:line="175" pos:column="58">server<pos:position pos:line="175" pos:column="64"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="176" pos:column="26">"proxy: FTP: unlock"<pos:position pos:line="176" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="177" pos:column="10"/></block></then></if>
    }<pos:position pos:line="178" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="179" pos:column="5">/*
     * get all the possible IP addresses for the destname and loop through
     * them until we get a successful connection
     */</comment>
    <if pos:line="183" pos:column="5">if <condition pos:line="183" pos:column="8">(<expr><name pos:line="183" pos:column="9">APR_SUCCESS<pos:position pos:line="183" pos:column="20"/></name> <operator pos:line="183" pos:column="21">!=<pos:position pos:line="183" pos:column="23"/></operator> <name pos:line="183" pos:column="24">err<pos:position pos:line="183" pos:column="27"/></name></expr>)<pos:position pos:line="183" pos:column="28"/></condition><then pos:line="183" pos:column="28"> <block pos:line="183" pos:column="29">{
        <return pos:line="184" pos:column="9">return <expr><call><name pos:line="184" pos:column="16">ap_proxyerror<pos:position pos:line="184" pos:column="29"/></name><argument_list pos:line="184" pos:column="29">(<argument><expr><name pos:line="184" pos:column="30">r<pos:position pos:line="184" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="33">HTTP_BAD_GATEWAY<pos:position pos:line="184" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="184" pos:column="51">apr_pstrcat<pos:position pos:line="184" pos:column="62"/></name><argument_list pos:line="184" pos:column="62">(<argument><expr><name pos:line="184" pos:column="63">p<pos:position pos:line="184" pos:column="64"/></name></expr></argument>,
                                                 <argument><expr><literal type="string" pos:line="185" pos:column="50">"DNS lookup failure for: "<pos:position pos:line="185" pos:column="76"/></literal></expr></argument>,
                                                        <argument><expr><name pos:line="186" pos:column="57">connectname<pos:position pos:line="186" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="70">NULL<pos:position pos:line="186" pos:column="74"/></name></expr></argument>)<pos:position pos:line="186" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="186" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="77"/></return>
    }<pos:position pos:line="187" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="189" pos:column="5">/* check if ProxyBlock directive on this host */</comment>
    <if pos:line="190" pos:column="5">if <condition pos:line="190" pos:column="8">(<expr><name pos:line="190" pos:column="9">OK<pos:position pos:line="190" pos:column="11"/></name> <operator pos:line="190" pos:column="12">!=<pos:position pos:line="190" pos:column="14"/></operator> <call><name pos:line="190" pos:column="15">ap_proxy_checkproxyblock<pos:position pos:line="190" pos:column="39"/></name><argument_list pos:line="190" pos:column="39">(<argument><expr><name pos:line="190" pos:column="40">r<pos:position pos:line="190" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="43">conf<pos:position pos:line="190" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="49">connect_addr<pos:position pos:line="190" pos:column="61"/></name></expr></argument>)<pos:position pos:line="190" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="190" pos:column="63"/></condition><then pos:line="190" pos:column="63"> <block pos:line="190" pos:column="64">{
        <return pos:line="191" pos:column="9">return <expr><call><name pos:line="191" pos:column="16">ap_proxyerror<pos:position pos:line="191" pos:column="29"/></name><argument_list pos:line="191" pos:column="29">(<argument><expr><name pos:line="191" pos:column="30">r<pos:position pos:line="191" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="33">HTTP_FORBIDDEN<pos:position pos:line="191" pos:column="47"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="192" pos:column="30">"Connect to remote machine blocked"<pos:position pos:line="192" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="67"/></return>
    }<pos:position pos:line="193" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="195" pos:column="5">/* create space for state information */</comment>
    <expr_stmt><expr><name pos:line="196" pos:column="5">backend<pos:position pos:line="196" pos:column="12"/></name> <operator pos:line="196" pos:column="13">=<pos:position pos:line="196" pos:column="14"/></operator> <operator pos:line="196" pos:column="15">(<pos:position pos:line="196" pos:column="16"/></operator><name pos:line="196" pos:column="16">proxy_conn_rec<pos:position pos:line="196" pos:column="30"/></name> <operator pos:line="196" pos:column="31">*<pos:position pos:line="196" pos:column="32"/></operator><operator pos:line="196" pos:column="32">)<pos:position pos:line="196" pos:column="33"/></operator> <call><name pos:line="196" pos:column="34">ap_get_module_config<pos:position pos:line="196" pos:column="54"/></name><argument_list pos:line="196" pos:column="54">(<argument><expr><name><name pos:line="196" pos:column="55">c<pos:position pos:line="196" pos:column="56"/></name><operator pos:line="196" pos:column="56">-&gt;<pos:position pos:line="196" pos:column="61"/></operator><name pos:line="196" pos:column="58">conn_config<pos:position pos:line="196" pos:column="69"/></name></name></expr></argument>, <argument><expr><operator pos:line="196" pos:column="71">&amp;<pos:position pos:line="196" pos:column="76"/></operator><name pos:line="196" pos:column="72">proxy_ftp_module<pos:position pos:line="196" pos:column="88"/></name></expr></argument>)<pos:position pos:line="196" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="90"/></expr_stmt>
    <if pos:line="197" pos:column="5">if <condition pos:line="197" pos:column="8">(<expr><operator pos:line="197" pos:column="9">!<pos:position pos:line="197" pos:column="10"/></operator><name pos:line="197" pos:column="10">backend<pos:position pos:line="197" pos:column="17"/></name></expr>)<pos:position pos:line="197" pos:column="18"/></condition><then pos:line="197" pos:column="18"> <block pos:line="197" pos:column="19">{
        <expr_stmt><expr><name pos:line="198" pos:column="9">status<pos:position pos:line="198" pos:column="15"/></name> <operator pos:line="198" pos:column="16">=<pos:position pos:line="198" pos:column="17"/></operator> <call><name pos:line="198" pos:column="18">ap_proxy_acquire_connection<pos:position pos:line="198" pos:column="45"/></name><argument_list pos:line="198" pos:column="45">(<argument><expr><literal type="string" pos:line="198" pos:column="46">"FTP"<pos:position pos:line="198" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="198" pos:column="53">&amp;<pos:position pos:line="198" pos:column="58"/></operator><name pos:line="198" pos:column="54">backend<pos:position pos:line="198" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="63">worker<pos:position pos:line="198" pos:column="69"/></name></expr></argument>, <argument><expr><name><name pos:line="198" pos:column="71">r<pos:position pos:line="198" pos:column="72"/></name><operator pos:line="198" pos:column="72">-&gt;<pos:position pos:line="198" pos:column="77"/></operator><name pos:line="198" pos:column="74">server<pos:position pos:line="198" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="198" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="82"/></expr_stmt>
        <if pos:line="199" pos:column="9">if <condition pos:line="199" pos:column="12">(<expr><name pos:line="199" pos:column="13">status<pos:position pos:line="199" pos:column="19"/></name> <operator pos:line="199" pos:column="20">!=<pos:position pos:line="199" pos:column="22"/></operator> <name pos:line="199" pos:column="23">OK<pos:position pos:line="199" pos:column="25"/></name></expr>)<pos:position pos:line="199" pos:column="26"/></condition><then pos:line="199" pos:column="26"> <block pos:line="199" pos:column="27">{
            <if pos:line="200" pos:column="13">if <condition pos:line="200" pos:column="16">(<expr><name pos:line="200" pos:column="17">backend<pos:position pos:line="200" pos:column="24"/></name></expr>)<pos:position pos:line="200" pos:column="25"/></condition><then pos:line="200" pos:column="25"> <block pos:line="200" pos:column="26">{
                <expr_stmt><expr><name><name pos:line="201" pos:column="17">backend<pos:position pos:line="201" pos:column="24"/></name><operator pos:line="201" pos:column="24">-&gt;<pos:position pos:line="201" pos:column="29"/></operator><name pos:line="201" pos:column="26">close<pos:position pos:line="201" pos:column="31"/></name></name> <operator pos:line="201" pos:column="32">=<pos:position pos:line="201" pos:column="33"/></operator> <literal type="number" pos:line="201" pos:column="34">1<pos:position pos:line="201" pos:column="35"/></literal></expr>;<pos:position pos:line="201" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="202" pos:column="17">ap_proxy_release_connection<pos:position pos:line="202" pos:column="44"/></name><argument_list pos:line="202" pos:column="44">(<argument><expr><literal type="string" pos:line="202" pos:column="45">"FTP"<pos:position pos:line="202" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="202" pos:column="52">backend<pos:position pos:line="202" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="202" pos:column="61">r<pos:position pos:line="202" pos:column="62"/></name><operator pos:line="202" pos:column="62">-&gt;<pos:position pos:line="202" pos:column="67"/></operator><name pos:line="202" pos:column="64">server<pos:position pos:line="202" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="202" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="72"/></expr_stmt>
            }<pos:position pos:line="203" pos:column="14"/></block></then></if>
            <return pos:line="204" pos:column="13">return <expr><name pos:line="204" pos:column="20">status<pos:position pos:line="204" pos:column="26"/></name></expr>;<pos:position pos:line="204" pos:column="27"/></return>
        }<pos:position pos:line="205" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="206" pos:column="9">/* TODO: see if ftp could use determine_connection */</comment>
        <expr_stmt><expr><name><name pos:line="207" pos:column="9">backend<pos:position pos:line="207" pos:column="16"/></name><operator pos:line="207" pos:column="16">-&gt;<pos:position pos:line="207" pos:column="21"/></operator><name pos:line="207" pos:column="18">addr<pos:position pos:line="207" pos:column="22"/></name></name> <operator pos:line="207" pos:column="23">=<pos:position pos:line="207" pos:column="24"/></operator> <name pos:line="207" pos:column="25">connect_addr<pos:position pos:line="207" pos:column="37"/></name></expr>;<pos:position pos:line="207" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="208" pos:column="9">ap_set_module_config<pos:position pos:line="208" pos:column="29"/></name><argument_list pos:line="208" pos:column="29">(<argument><expr><name><name pos:line="208" pos:column="30">c<pos:position pos:line="208" pos:column="31"/></name><operator pos:line="208" pos:column="31">-&gt;<pos:position pos:line="208" pos:column="36"/></operator><name pos:line="208" pos:column="33">conn_config<pos:position pos:line="208" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="208" pos:column="46">&amp;<pos:position pos:line="208" pos:column="51"/></operator><name pos:line="208" pos:column="47">proxy_ftp_module<pos:position pos:line="208" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="65">backend<pos:position pos:line="208" pos:column="72"/></name></expr></argument>)<pos:position pos:line="208" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="209" pos:column="6"/></block></then></if>


    <comment type="block" pos:line="212" pos:column="5">/*
     * II: Make the Connection -----------------------
     *
     * We have determined who to connect to. Now make the connection.
     */</comment>


    <if pos:line="219" pos:column="5">if <condition pos:line="219" pos:column="8">(<expr><call><name pos:line="219" pos:column="9">ap_proxy_connect_backend<pos:position pos:line="219" pos:column="33"/></name><argument_list pos:line="219" pos:column="33">(<argument><expr><literal type="string" pos:line="219" pos:column="34">"FTP"<pos:position pos:line="219" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="219" pos:column="41">backend<pos:position pos:line="219" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="50">worker<pos:position pos:line="219" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="219" pos:column="58">r<pos:position pos:line="219" pos:column="59"/></name><operator pos:line="219" pos:column="59">-&gt;<pos:position pos:line="219" pos:column="64"/></operator><name pos:line="219" pos:column="61">server<pos:position pos:line="219" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="219" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="219" pos:column="69"/></condition><then pos:line="219" pos:column="69"> <block pos:line="219" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="220" pos:column="9">ap_log_error<pos:position pos:line="220" pos:column="21"/></name><argument_list pos:line="220" pos:column="21">(<argument><expr><name pos:line="220" pos:column="22">APLOG_MARK<pos:position pos:line="220" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="220" pos:column="34">APLOG_DEBUG<pos:position pos:line="220" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="220" pos:column="47">0<pos:position pos:line="220" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="220" pos:column="50">r<pos:position pos:line="220" pos:column="51"/></name><operator pos:line="220" pos:column="51">-&gt;<pos:position pos:line="220" pos:column="56"/></operator><name pos:line="220" pos:column="53">server<pos:position pos:line="220" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="221" pos:column="22">"proxy: FTP: an error occurred creating a new connection to %pI (%s)"<pos:position pos:line="221" pos:column="91"/></literal></expr></argument>,
                     <argument><expr><name pos:line="222" pos:column="22">connect_addr<pos:position pos:line="222" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="222" pos:column="36">connectname<pos:position pos:line="222" pos:column="47"/></name></expr></argument>)<pos:position pos:line="222" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="223" pos:column="9">proxy_ftp_cleanup<pos:position pos:line="223" pos:column="26"/></name><argument_list pos:line="223" pos:column="26">(<argument><expr><name pos:line="223" pos:column="27">r<pos:position pos:line="223" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="223" pos:column="30">backend<pos:position pos:line="223" pos:column="37"/></name></expr></argument>)<pos:position pos:line="223" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="39"/></expr_stmt>
        <return pos:line="224" pos:column="9">return <expr><name pos:line="224" pos:column="16">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="224" pos:column="40"/></name></expr>;<pos:position pos:line="224" pos:column="41"/></return>
    }<pos:position pos:line="225" pos:column="6"/></block></then></if>

    <if pos:line="227" pos:column="5">if <condition pos:line="227" pos:column="8">(<expr><operator pos:line="227" pos:column="9">!<pos:position pos:line="227" pos:column="10"/></operator><name><name pos:line="227" pos:column="10">backend<pos:position pos:line="227" pos:column="17"/></name><operator pos:line="227" pos:column="17">-&gt;<pos:position pos:line="227" pos:column="22"/></operator><name pos:line="227" pos:column="19">connection<pos:position pos:line="227" pos:column="29"/></name></name></expr>)<pos:position pos:line="227" pos:column="30"/></condition><then pos:line="227" pos:column="30"> <block pos:line="227" pos:column="31">{
        <expr_stmt><expr><name pos:line="228" pos:column="9">status<pos:position pos:line="228" pos:column="15"/></name> <operator pos:line="228" pos:column="16">=<pos:position pos:line="228" pos:column="17"/></operator> <call><name pos:line="228" pos:column="18">ap_proxy_connection_create<pos:position pos:line="228" pos:column="44"/></name><argument_list pos:line="228" pos:column="44">(<argument><expr><literal type="string" pos:line="228" pos:column="45">"FTP"<pos:position pos:line="228" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="228" pos:column="52">backend<pos:position pos:line="228" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="228" pos:column="61">c<pos:position pos:line="228" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="228" pos:column="64">r<pos:position pos:line="228" pos:column="65"/></name><operator pos:line="228" pos:column="65">-&gt;<pos:position pos:line="228" pos:column="70"/></operator><name pos:line="228" pos:column="67">server<pos:position pos:line="228" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="228" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="75"/></expr_stmt>
        <if pos:line="229" pos:column="9">if <condition pos:line="229" pos:column="12">(<expr><name pos:line="229" pos:column="13">status<pos:position pos:line="229" pos:column="19"/></name> <operator pos:line="229" pos:column="20">!=<pos:position pos:line="229" pos:column="22"/></operator> <name pos:line="229" pos:column="23">OK<pos:position pos:line="229" pos:column="25"/></name></expr>)<pos:position pos:line="229" pos:column="26"/></condition><then pos:line="229" pos:column="26"> <block pos:line="229" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="230" pos:column="13">proxy_ftp_cleanup<pos:position pos:line="230" pos:column="30"/></name><argument_list pos:line="230" pos:column="30">(<argument><expr><name pos:line="230" pos:column="31">r<pos:position pos:line="230" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="34">backend<pos:position pos:line="230" pos:column="41"/></name></expr></argument>)<pos:position pos:line="230" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="43"/></expr_stmt>
            <return pos:line="231" pos:column="13">return <expr><name pos:line="231" pos:column="20">status<pos:position pos:line="231" pos:column="26"/></name></expr>;<pos:position pos:line="231" pos:column="27"/></return>
        }<pos:position pos:line="232" pos:column="10"/></block></then></if>
    }<pos:position pos:line="233" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="235" pos:column="5">/* Use old naming */</comment>
    <expr_stmt><expr><name pos:line="236" pos:column="5">origin<pos:position pos:line="236" pos:column="11"/></name> <operator pos:line="236" pos:column="12">=<pos:position pos:line="236" pos:column="13"/></operator> <name><name pos:line="236" pos:column="14">backend<pos:position pos:line="236" pos:column="21"/></name><operator pos:line="236" pos:column="21">-&gt;<pos:position pos:line="236" pos:column="26"/></operator><name pos:line="236" pos:column="23">connection<pos:position pos:line="236" pos:column="33"/></name></name></expr>;<pos:position pos:line="236" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="237" pos:column="5">sock<pos:position pos:line="237" pos:column="9"/></name> <operator pos:line="237" pos:column="10">=<pos:position pos:line="237" pos:column="11"/></operator> <name><name pos:line="237" pos:column="12">backend<pos:position pos:line="237" pos:column="19"/></name><operator pos:line="237" pos:column="19">-&gt;<pos:position pos:line="237" pos:column="24"/></operator><name pos:line="237" pos:column="21">sock<pos:position pos:line="237" pos:column="25"/></name></name></expr>;<pos:position pos:line="237" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="239" pos:column="5">ap_log_error<pos:position pos:line="239" pos:column="17"/></name><argument_list pos:line="239" pos:column="17">(<argument><expr><name pos:line="239" pos:column="18">APLOG_MARK<pos:position pos:line="239" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="30">APLOG_TRACE1<pos:position pos:line="239" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="239" pos:column="44">0<pos:position pos:line="239" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="239" pos:column="47">r<pos:position pos:line="239" pos:column="48"/></name><operator pos:line="239" pos:column="48">-&gt;<pos:position pos:line="239" pos:column="53"/></operator><name pos:line="239" pos:column="50">server<pos:position pos:line="239" pos:column="56"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="240" pos:column="18">"proxy: FTP: control connection complete"<pos:position pos:line="240" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="240" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="61"/></expr_stmt>


    <comment type="block" pos:line="243" pos:column="5">/*
     * III: Send Control Request -------------------------
     *
     * Log into the ftp server, send the username &amp; password, change to the
     * correct directory...
     */</comment>


    <comment type="block" pos:line="251" pos:column="5">/* possible results: */</comment>
    <comment type="block" pos:line="252" pos:column="5">/* 120 Service ready in nnn minutes. */</comment>
    <comment type="block" pos:line="253" pos:column="5">/* 220 Service ready for new user. */</comment>
    <comment type="block" pos:line="254" pos:column="5">/* 421 Service not available, closing control connection. */</comment>
    <expr_stmt><expr><name pos:line="255" pos:column="5">rc<pos:position pos:line="255" pos:column="7"/></name> <operator pos:line="255" pos:column="8">=<pos:position pos:line="255" pos:column="9"/></operator> <call><name pos:line="255" pos:column="10">proxy_ftp_command<pos:position pos:line="255" pos:column="27"/></name><argument_list pos:line="255" pos:column="27">(<argument><expr><name pos:line="255" pos:column="28">NULL<pos:position pos:line="255" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="34">r<pos:position pos:line="255" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="37">origin<pos:position pos:line="255" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="45">bb<pos:position pos:line="255" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="255" pos:column="49">&amp;<pos:position pos:line="255" pos:column="54"/></operator><name pos:line="255" pos:column="50">ftpmessage<pos:position pos:line="255" pos:column="60"/></name></expr></argument>)<pos:position pos:line="255" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="62"/></expr_stmt>
    <if pos:line="256" pos:column="5">if <condition pos:line="256" pos:column="8">(<expr><name pos:line="256" pos:column="9">rc<pos:position pos:line="256" pos:column="11"/></name> <operator pos:line="256" pos:column="12">==<pos:position pos:line="256" pos:column="14"/></operator> <operator pos:line="256" pos:column="15">-<pos:position pos:line="256" pos:column="16"/></operator><literal type="number" pos:line="256" pos:column="16">1<pos:position pos:line="256" pos:column="17"/></literal> <operator pos:line="256" pos:column="18">||<pos:position pos:line="256" pos:column="20"/></operator> <name pos:line="256" pos:column="21">rc<pos:position pos:line="256" pos:column="23"/></name> <operator pos:line="256" pos:column="24">==<pos:position pos:line="256" pos:column="26"/></operator> <literal type="number" pos:line="256" pos:column="27">421<pos:position pos:line="256" pos:column="30"/></literal></expr>)<pos:position pos:line="256" pos:column="31"/></condition><then pos:line="256" pos:column="31"> <block pos:line="256" pos:column="32">{
        <return pos:line="257" pos:column="9">return <expr><call><name pos:line="257" pos:column="16">ftp_proxyerror<pos:position pos:line="257" pos:column="30"/></name><argument_list pos:line="257" pos:column="30">(<argument><expr><name pos:line="257" pos:column="31">r<pos:position pos:line="257" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="34">backend<pos:position pos:line="257" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="43">HTTP_BAD_GATEWAY<pos:position pos:line="257" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="257" pos:column="61">"Error reading from remote server"<pos:position pos:line="257" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="257" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="97"/></return>
    }<pos:position pos:line="258" pos:column="6"/></block></then></if>
    <if pos:line="259" pos:column="5">if <condition pos:line="259" pos:column="8">(<expr><name pos:line="259" pos:column="9">rc<pos:position pos:line="259" pos:column="11"/></name> <operator pos:line="259" pos:column="12">==<pos:position pos:line="259" pos:column="14"/></operator> <literal type="number" pos:line="259" pos:column="15">120<pos:position pos:line="259" pos:column="18"/></literal></expr>)<pos:position pos:line="259" pos:column="19"/></condition><then pos:line="259" pos:column="19"> <block pos:line="259" pos:column="20">{
        <comment type="block" pos:line="260" pos:column="9">/*
         * RFC2616 states: 14.37 Retry-After
         *
         * The Retry-After response-header field can be used with a 503 (Service
         * Unavailable) response to indicate how long the service is expected
         * to be unavailable to the requesting client. [...] The value of
         * this field can be either an HTTP-date or an integer number of
         * seconds (in decimal) after the time of the response. Retry-After
         * = "Retry-After" ":" ( HTTP-date | delta-seconds )
         */</comment>
        <decl_stmt><decl><type><name pos:line="270" pos:column="9">char<pos:position pos:line="270" pos:column="13"/></name> <modifier pos:line="270" pos:column="14">*<pos:position pos:line="270" pos:column="15"/></modifier></type><name pos:line="270" pos:column="15">secs_str<pos:position pos:line="270" pos:column="23"/></name> <init pos:line="270" pos:column="24">= <expr><name pos:line="270" pos:column="26">ftpmessage<pos:position pos:line="270" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="270" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="271" pos:column="9">time_t<pos:position pos:line="271" pos:column="15"/></name></type> <name pos:line="271" pos:column="16">secs<pos:position pos:line="271" pos:column="20"/></name></decl>;<pos:position pos:line="271" pos:column="21"/></decl_stmt>

        <comment type="block" pos:line="273" pos:column="9">/* Look for a number, preceded by whitespace */</comment>
        <while pos:line="274" pos:column="9">while <condition pos:line="274" pos:column="15">(<expr><operator pos:line="274" pos:column="16">*<pos:position pos:line="274" pos:column="17"/></operator><name pos:line="274" pos:column="17">secs_str<pos:position pos:line="274" pos:column="25"/></name></expr>)<pos:position pos:line="274" pos:column="26"/></condition>
            <block type="pseudo"><if pos:line="275" pos:column="13">if <condition pos:line="275" pos:column="16">(<expr><operator pos:line="275" pos:column="17">(<pos:position pos:line="275" pos:column="18"/></operator><name pos:line="275" pos:column="18">secs_str<pos:position pos:line="275" pos:column="26"/></name><operator pos:line="275" pos:column="26">==<pos:position pos:line="275" pos:column="28"/></operator><name pos:line="275" pos:column="28">ftpmessage<pos:position pos:line="275" pos:column="38"/></name> <operator pos:line="275" pos:column="39">||<pos:position pos:line="275" pos:column="41"/></operator> <call><name pos:line="275" pos:column="42">apr_isspace<pos:position pos:line="275" pos:column="53"/></name><argument_list pos:line="275" pos:column="53">(<argument><expr><name><name pos:line="275" pos:column="54">secs_str<pos:position pos:line="275" pos:column="62"/></name><index pos:line="275" pos:column="62">[<expr><operator pos:line="275" pos:column="63">-<pos:position pos:line="275" pos:column="64"/></operator><literal type="number" pos:line="275" pos:column="64">1<pos:position pos:line="275" pos:column="65"/></literal></expr>]<pos:position pos:line="275" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="275" pos:column="67"/></argument_list></call><operator pos:line="275" pos:column="67">)<pos:position pos:line="275" pos:column="68"/></operator> <operator pos:line="275" pos:column="69">&amp;&amp;<pos:position pos:line="275" pos:column="79"/></operator>
                <call><name pos:line="276" pos:column="17">apr_isdigit<pos:position pos:line="276" pos:column="28"/></name><argument_list pos:line="276" pos:column="28">(<argument><expr><name><name pos:line="276" pos:column="29">secs_str<pos:position pos:line="276" pos:column="37"/></name><index pos:line="276" pos:column="37">[<expr><literal type="number" pos:line="276" pos:column="38">0<pos:position pos:line="276" pos:column="39"/></literal></expr>]<pos:position pos:line="276" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="276" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="276" pos:column="42"/></condition><then pos:line="276" pos:column="42">
                <block type="pseudo"><break pos:line="277" pos:column="17">break;<pos:position pos:line="277" pos:column="23"/></break></block></then></if></block></while>
        <if pos:line="278" pos:column="9">if <condition pos:line="278" pos:column="12">(<expr><operator pos:line="278" pos:column="13">*<pos:position pos:line="278" pos:column="14"/></operator><name pos:line="278" pos:column="14">secs_str<pos:position pos:line="278" pos:column="22"/></name> <operator pos:line="278" pos:column="23">!=<pos:position pos:line="278" pos:column="25"/></operator> <literal type="char" pos:line="278" pos:column="26">'\0'<pos:position pos:line="278" pos:column="30"/></literal></expr>)<pos:position pos:line="278" pos:column="31"/></condition><then pos:line="278" pos:column="31"> <block pos:line="278" pos:column="32">{
            <expr_stmt><expr><name pos:line="279" pos:column="13">secs<pos:position pos:line="279" pos:column="17"/></name> <operator pos:line="279" pos:column="18">=<pos:position pos:line="279" pos:column="19"/></operator> <call><name pos:line="279" pos:column="20">atol<pos:position pos:line="279" pos:column="24"/></name><argument_list pos:line="279" pos:column="24">(<argument><expr><name pos:line="279" pos:column="25">secs_str<pos:position pos:line="279" pos:column="33"/></name></expr></argument>)<pos:position pos:line="279" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="280" pos:column="13">apr_table_add<pos:position pos:line="280" pos:column="26"/></name><argument_list pos:line="280" pos:column="26">(<argument><expr><name><name pos:line="280" pos:column="27">r<pos:position pos:line="280" pos:column="28"/></name><operator pos:line="280" pos:column="28">-&gt;<pos:position pos:line="280" pos:column="33"/></operator><name pos:line="280" pos:column="30">headers_out<pos:position pos:line="280" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="280" pos:column="43">"Retry-After"<pos:position pos:line="280" pos:column="56"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="281" pos:column="27">apr_psprintf<pos:position pos:line="281" pos:column="39"/></name><argument_list pos:line="281" pos:column="39">(<argument><expr><name pos:line="281" pos:column="40">p<pos:position pos:line="281" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="281" pos:column="43">"%lu"<pos:position pos:line="281" pos:column="48"/></literal></expr></argument>, <argument><expr><call pos:line="281" pos:column="50">(<name pos:line="281" pos:column="51">unsigned<pos:position pos:line="281" pos:column="59"/></name> <name pos:line="281" pos:column="60">long<pos:position pos:line="281" pos:column="64"/></name>)<argument_list pos:line="281" pos:column="65">(<argument><expr><literal type="number" pos:line="281" pos:column="66">60<pos:position pos:line="281" pos:column="68"/></literal> <operator pos:line="281" pos:column="69">*<pos:position pos:line="281" pos:column="70"/></operator> <name pos:line="281" pos:column="71">secs<pos:position pos:line="281" pos:column="75"/></name></expr></argument>)<pos:position pos:line="281" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="281" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="281" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="282" pos:column="10"/></block></then></if>
        <return pos:line="283" pos:column="9">return <expr><call><name pos:line="283" pos:column="16">ftp_proxyerror<pos:position pos:line="283" pos:column="30"/></name><argument_list pos:line="283" pos:column="30">(<argument><expr><name pos:line="283" pos:column="31">r<pos:position pos:line="283" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="34">backend<pos:position pos:line="283" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="43">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="283" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="69">ftpmessage<pos:position pos:line="283" pos:column="79"/></name></expr></argument>)<pos:position pos:line="283" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="81"/></return>
    }<pos:position pos:line="284" pos:column="6"/></block></then></if>
    <if pos:line="285" pos:column="5">if <condition pos:line="285" pos:column="8">(<expr><name pos:line="285" pos:column="9">rc<pos:position pos:line="285" pos:column="11"/></name> <operator pos:line="285" pos:column="12">!=<pos:position pos:line="285" pos:column="14"/></operator> <literal type="number" pos:line="285" pos:column="15">220<pos:position pos:line="285" pos:column="18"/></literal></expr>)<pos:position pos:line="285" pos:column="19"/></condition><then pos:line="285" pos:column="19"> <block pos:line="285" pos:column="20">{
        <return pos:line="286" pos:column="9">return <expr><call><name pos:line="286" pos:column="16">ftp_proxyerror<pos:position pos:line="286" pos:column="30"/></name><argument_list pos:line="286" pos:column="30">(<argument><expr><name pos:line="286" pos:column="31">r<pos:position pos:line="286" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="286" pos:column="34">backend<pos:position pos:line="286" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="286" pos:column="43">HTTP_BAD_GATEWAY<pos:position pos:line="286" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="286" pos:column="61">ftpmessage<pos:position pos:line="286" pos:column="71"/></name></expr></argument>)<pos:position pos:line="286" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="73"/></return>
    }<pos:position pos:line="287" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="289" pos:column="5">rc<pos:position pos:line="289" pos:column="7"/></name> <operator pos:line="289" pos:column="8">=<pos:position pos:line="289" pos:column="9"/></operator> <call><name pos:line="289" pos:column="10">proxy_ftp_command<pos:position pos:line="289" pos:column="27"/></name><argument_list pos:line="289" pos:column="27">(<argument><expr><call><name pos:line="289" pos:column="28">apr_pstrcat<pos:position pos:line="289" pos:column="39"/></name><argument_list pos:line="289" pos:column="39">(<argument><expr><name pos:line="289" pos:column="40">p<pos:position pos:line="289" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="289" pos:column="43">"USER "<pos:position pos:line="289" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="289" pos:column="52">user<pos:position pos:line="289" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="289" pos:column="58">CRLF<pos:position pos:line="289" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="289" pos:column="64">NULL<pos:position pos:line="289" pos:column="68"/></name></expr></argument>)<pos:position pos:line="289" pos:column="69"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="290" pos:column="28">r<pos:position pos:line="290" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="290" pos:column="31">origin<pos:position pos:line="290" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="290" pos:column="39">bb<pos:position pos:line="290" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="290" pos:column="43">&amp;<pos:position pos:line="290" pos:column="48"/></operator><name pos:line="290" pos:column="44">ftpmessage<pos:position pos:line="290" pos:column="54"/></name></expr></argument>)<pos:position pos:line="290" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="56"/></expr_stmt>
    <comment type="block" pos:line="291" pos:column="5">/* possible results; 230, 331, 332, 421, 500, 501, 530 */</comment>
    <comment type="block" pos:line="292" pos:column="5">/* states: 1 - error, 2 - success; 3 - send password, 4,5 fail */</comment>
    <comment type="block" pos:line="293" pos:column="5">/* 230 User logged in, proceed. */</comment>
    <comment type="block" pos:line="294" pos:column="5">/* 331 User name okay, need password. */</comment>
    <comment type="block" pos:line="295" pos:column="5">/* 332 Need account for login. */</comment>
    <comment type="block" pos:line="296" pos:column="5">/* 421 Service not available, closing control connection. */</comment>
    <comment type="block" pos:line="297" pos:column="5">/* 500 Syntax error, command unrecognized. */</comment>
    <comment type="block" pos:line="298" pos:column="5">/* (This may include errors such as command line too long.) */</comment>
    <comment type="block" pos:line="299" pos:column="5">/* 501 Syntax error in parameters or arguments. */</comment>
    <comment type="block" pos:line="300" pos:column="5">/* 530 Not logged in. */</comment>
    <if pos:line="301" pos:column="5">if <condition pos:line="301" pos:column="8">(<expr><name pos:line="301" pos:column="9">rc<pos:position pos:line="301" pos:column="11"/></name> <operator pos:line="301" pos:column="12">==<pos:position pos:line="301" pos:column="14"/></operator> <operator pos:line="301" pos:column="15">-<pos:position pos:line="301" pos:column="16"/></operator><literal type="number" pos:line="301" pos:column="16">1<pos:position pos:line="301" pos:column="17"/></literal> <operator pos:line="301" pos:column="18">||<pos:position pos:line="301" pos:column="20"/></operator> <name pos:line="301" pos:column="21">rc<pos:position pos:line="301" pos:column="23"/></name> <operator pos:line="301" pos:column="24">==<pos:position pos:line="301" pos:column="26"/></operator> <literal type="number" pos:line="301" pos:column="27">421<pos:position pos:line="301" pos:column="30"/></literal></expr>)<pos:position pos:line="301" pos:column="31"/></condition><then pos:line="301" pos:column="31"> <block pos:line="301" pos:column="32">{
        <return pos:line="302" pos:column="9">return <expr><call><name pos:line="302" pos:column="16">ftp_proxyerror<pos:position pos:line="302" pos:column="30"/></name><argument_list pos:line="302" pos:column="30">(<argument><expr><name pos:line="302" pos:column="31">r<pos:position pos:line="302" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="302" pos:column="34">backend<pos:position pos:line="302" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="302" pos:column="43">HTTP_BAD_GATEWAY<pos:position pos:line="302" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="302" pos:column="61">"Error reading from remote server"<pos:position pos:line="302" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="302" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="97"/></return>
    }<pos:position pos:line="303" pos:column="6"/></block></then></if>
    <if pos:line="304" pos:column="5">if <condition pos:line="304" pos:column="8">(<expr><name pos:line="304" pos:column="9">rc<pos:position pos:line="304" pos:column="11"/></name> <operator pos:line="304" pos:column="12">==<pos:position pos:line="304" pos:column="14"/></operator> <literal type="number" pos:line="304" pos:column="15">530<pos:position pos:line="304" pos:column="18"/></literal></expr>)<pos:position pos:line="304" pos:column="19"/></condition><then pos:line="304" pos:column="19"> <block pos:line="304" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="305" pos:column="9">proxy_ftp_cleanup<pos:position pos:line="305" pos:column="26"/></name><argument_list pos:line="305" pos:column="26">(<argument><expr><name pos:line="305" pos:column="27">r<pos:position pos:line="305" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="305" pos:column="30">backend<pos:position pos:line="305" pos:column="37"/></name></expr></argument>)<pos:position pos:line="305" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="39"/></expr_stmt>
        <return pos:line="306" pos:column="9">return <expr><call><name pos:line="306" pos:column="16">ftp_unauthorized<pos:position pos:line="306" pos:column="32"/></name><argument_list pos:line="306" pos:column="32">(<argument><expr><name pos:line="306" pos:column="33">r<pos:position pos:line="306" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="306" pos:column="36">1<pos:position pos:line="306" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="306" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="39"/></return>  <comment type="block" pos:line="306" pos:column="41">/* log it: user name guessing
                                         * attempt? */</comment>
    }<pos:position pos:line="308" pos:column="6"/></block></then></if>
    <if pos:line="309" pos:column="5">if <condition pos:line="309" pos:column="8">(<expr><name pos:line="309" pos:column="9">rc<pos:position pos:line="309" pos:column="11"/></name> <operator pos:line="309" pos:column="12">!=<pos:position pos:line="309" pos:column="14"/></operator> <literal type="number" pos:line="309" pos:column="15">230<pos:position pos:line="309" pos:column="18"/></literal> <operator pos:line="309" pos:column="19">&amp;&amp;<pos:position pos:line="309" pos:column="29"/></operator> <name pos:line="309" pos:column="22">rc<pos:position pos:line="309" pos:column="24"/></name> <operator pos:line="309" pos:column="25">!=<pos:position pos:line="309" pos:column="27"/></operator> <literal type="number" pos:line="309" pos:column="28">331<pos:position pos:line="309" pos:column="31"/></literal></expr>)<pos:position pos:line="309" pos:column="32"/></condition><then pos:line="309" pos:column="32"> <block pos:line="309" pos:column="33">{
        <return pos:line="310" pos:column="9">return <expr><call><name pos:line="310" pos:column="16">ftp_proxyerror<pos:position pos:line="310" pos:column="30"/></name><argument_list pos:line="310" pos:column="30">(<argument><expr><name pos:line="310" pos:column="31">r<pos:position pos:line="310" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="34">backend<pos:position pos:line="310" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="43">HTTP_BAD_GATEWAY<pos:position pos:line="310" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="61">ftpmessage<pos:position pos:line="310" pos:column="71"/></name></expr></argument>)<pos:position pos:line="310" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="73"/></return>
    }<pos:position pos:line="311" pos:column="6"/></block></then></if>

    <if pos:line="313" pos:column="5">if <condition pos:line="313" pos:column="8">(<expr><name pos:line="313" pos:column="9">rc<pos:position pos:line="313" pos:column="11"/></name> <operator pos:line="313" pos:column="12">==<pos:position pos:line="313" pos:column="14"/></operator> <literal type="number" pos:line="313" pos:column="15">331<pos:position pos:line="313" pos:column="18"/></literal></expr>)<pos:position pos:line="313" pos:column="19"/></condition><then pos:line="313" pos:column="19"> <block pos:line="313" pos:column="20">{            <comment type="block" pos:line="313" pos:column="33">/* send password */</comment>
        <if pos:line="314" pos:column="9">if <condition pos:line="314" pos:column="12">(<expr><name pos:line="314" pos:column="13">password<pos:position pos:line="314" pos:column="21"/></name> <operator pos:line="314" pos:column="22">==<pos:position pos:line="314" pos:column="24"/></operator> <name pos:line="314" pos:column="25">NULL<pos:position pos:line="314" pos:column="29"/></name></expr>)<pos:position pos:line="314" pos:column="30"/></condition><then pos:line="314" pos:column="30"> <block pos:line="314" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="315" pos:column="13">proxy_ftp_cleanup<pos:position pos:line="315" pos:column="30"/></name><argument_list pos:line="315" pos:column="30">(<argument><expr><name pos:line="315" pos:column="31">r<pos:position pos:line="315" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="315" pos:column="34">backend<pos:position pos:line="315" pos:column="41"/></name></expr></argument>)<pos:position pos:line="315" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="43"/></expr_stmt>
            <return pos:line="316" pos:column="13">return <expr><call><name pos:line="316" pos:column="20">ftp_unauthorized<pos:position pos:line="316" pos:column="36"/></name><argument_list pos:line="316" pos:column="36">(<argument><expr><name pos:line="316" pos:column="37">r<pos:position pos:line="316" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="316" pos:column="40">0<pos:position pos:line="316" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="316" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="43"/></return>
        }<pos:position pos:line="317" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="319" pos:column="9">rc<pos:position pos:line="319" pos:column="11"/></name> <operator pos:line="319" pos:column="12">=<pos:position pos:line="319" pos:column="13"/></operator> <call><name pos:line="319" pos:column="14">proxy_ftp_command<pos:position pos:line="319" pos:column="31"/></name><argument_list pos:line="319" pos:column="31">(<argument><expr><call><name pos:line="319" pos:column="32">apr_pstrcat<pos:position pos:line="319" pos:column="43"/></name><argument_list pos:line="319" pos:column="43">(<argument><expr><name pos:line="319" pos:column="44">p<pos:position pos:line="319" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="319" pos:column="47">"PASS "<pos:position pos:line="319" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="319" pos:column="56">password<pos:position pos:line="319" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="319" pos:column="66">CRLF<pos:position pos:line="319" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="319" pos:column="72">NULL<pos:position pos:line="319" pos:column="76"/></name></expr></argument>)<pos:position pos:line="319" pos:column="77"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="320" pos:column="28">r<pos:position pos:line="320" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="320" pos:column="31">origin<pos:position pos:line="320" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="320" pos:column="39">bb<pos:position pos:line="320" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="320" pos:column="43">&amp;<pos:position pos:line="320" pos:column="48"/></operator><name pos:line="320" pos:column="44">ftpmessage<pos:position pos:line="320" pos:column="54"/></name></expr></argument>)<pos:position pos:line="320" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="56"/></expr_stmt>
        <comment type="block" pos:line="321" pos:column="9">/* possible results 202, 230, 332, 421, 500, 501, 503, 530 */</comment>
        <comment type="block" pos:line="322" pos:column="9">/* 230 User logged in, proceed. */</comment>
        <comment type="block" pos:line="323" pos:column="9">/* 332 Need account for login. */</comment>
        <comment type="block" pos:line="324" pos:column="9">/* 421 Service not available, closing control connection. */</comment>
        <comment type="block" pos:line="325" pos:column="9">/* 500 Syntax error, command unrecognized. */</comment>
        <comment type="block" pos:line="326" pos:column="9">/* 501 Syntax error in parameters or arguments. */</comment>
        <comment type="block" pos:line="327" pos:column="9">/* 503 Bad sequence of commands. */</comment>
        <comment type="block" pos:line="328" pos:column="9">/* 530 Not logged in. */</comment>
        <if pos:line="329" pos:column="9">if <condition pos:line="329" pos:column="12">(<expr><name pos:line="329" pos:column="13">rc<pos:position pos:line="329" pos:column="15"/></name> <operator pos:line="329" pos:column="16">==<pos:position pos:line="329" pos:column="18"/></operator> <operator pos:line="329" pos:column="19">-<pos:position pos:line="329" pos:column="20"/></operator><literal type="number" pos:line="329" pos:column="20">1<pos:position pos:line="329" pos:column="21"/></literal> <operator pos:line="329" pos:column="22">||<pos:position pos:line="329" pos:column="24"/></operator> <name pos:line="329" pos:column="25">rc<pos:position pos:line="329" pos:column="27"/></name> <operator pos:line="329" pos:column="28">==<pos:position pos:line="329" pos:column="30"/></operator> <literal type="number" pos:line="329" pos:column="31">421<pos:position pos:line="329" pos:column="34"/></literal></expr>)<pos:position pos:line="329" pos:column="35"/></condition><then pos:line="329" pos:column="35"> <block pos:line="329" pos:column="36">{
            <return pos:line="330" pos:column="13">return <expr><call><name pos:line="330" pos:column="20">ftp_proxyerror<pos:position pos:line="330" pos:column="34"/></name><argument_list pos:line="330" pos:column="34">(<argument><expr><name pos:line="330" pos:column="35">r<pos:position pos:line="330" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="330" pos:column="38">backend<pos:position pos:line="330" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="330" pos:column="47">HTTP_BAD_GATEWAY<pos:position pos:line="330" pos:column="63"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="331" pos:column="35">"Error reading from remote server"<pos:position pos:line="331" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="331" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="71"/></return>
        }<pos:position pos:line="332" pos:column="10"/></block></then></if>
        <if pos:line="333" pos:column="9">if <condition pos:line="333" pos:column="12">(<expr><name pos:line="333" pos:column="13">rc<pos:position pos:line="333" pos:column="15"/></name> <operator pos:line="333" pos:column="16">==<pos:position pos:line="333" pos:column="18"/></operator> <literal type="number" pos:line="333" pos:column="19">332<pos:position pos:line="333" pos:column="22"/></literal></expr>)<pos:position pos:line="333" pos:column="23"/></condition><then pos:line="333" pos:column="23"> <block pos:line="333" pos:column="24">{
            <return pos:line="334" pos:column="13">return <expr><call><name pos:line="334" pos:column="20">ftp_proxyerror<pos:position pos:line="334" pos:column="34"/></name><argument_list pos:line="334" pos:column="34">(<argument><expr><name pos:line="334" pos:column="35">r<pos:position pos:line="334" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="334" pos:column="38">backend<pos:position pos:line="334" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="334" pos:column="47">HTTP_UNAUTHORIZED<pos:position pos:line="334" pos:column="64"/></name></expr></argument>,
                  <argument><expr><call><name pos:line="335" pos:column="19">apr_pstrcat<pos:position pos:line="335" pos:column="30"/></name><argument_list pos:line="335" pos:column="30">(<argument><expr><name pos:line="335" pos:column="31">p<pos:position pos:line="335" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="335" pos:column="34">"Need account for login: "<pos:position pos:line="335" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="335" pos:column="62">ftpmessage<pos:position pos:line="335" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="335" pos:column="74">NULL<pos:position pos:line="335" pos:column="78"/></name></expr></argument>)<pos:position pos:line="335" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="335" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="81"/></return>
        }<pos:position pos:line="336" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="337" pos:column="9">/* @@@ questionable -- we might as well return a 403 Forbidden here */</comment>
        <if pos:line="338" pos:column="9">if <condition pos:line="338" pos:column="12">(<expr><name pos:line="338" pos:column="13">rc<pos:position pos:line="338" pos:column="15"/></name> <operator pos:line="338" pos:column="16">==<pos:position pos:line="338" pos:column="18"/></operator> <literal type="number" pos:line="338" pos:column="19">530<pos:position pos:line="338" pos:column="22"/></literal></expr>)<pos:position pos:line="338" pos:column="23"/></condition><then pos:line="338" pos:column="23"> <block pos:line="338" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="339" pos:column="13">proxy_ftp_cleanup<pos:position pos:line="339" pos:column="30"/></name><argument_list pos:line="339" pos:column="30">(<argument><expr><name pos:line="339" pos:column="31">r<pos:position pos:line="339" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="339" pos:column="34">backend<pos:position pos:line="339" pos:column="41"/></name></expr></argument>)<pos:position pos:line="339" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="43"/></expr_stmt>
            <return pos:line="340" pos:column="13">return <expr><call><name pos:line="340" pos:column="20">ftp_unauthorized<pos:position pos:line="340" pos:column="36"/></name><argument_list pos:line="340" pos:column="36">(<argument><expr><name pos:line="340" pos:column="37">r<pos:position pos:line="340" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="340" pos:column="40">1<pos:position pos:line="340" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="340" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="43"/></return>      <comment type="block" pos:line="340" pos:column="49">/* log it: passwd guessing
                                                 * attempt? */</comment>
        }<pos:position pos:line="342" pos:column="10"/></block></then></if>
        <if pos:line="343" pos:column="9">if <condition pos:line="343" pos:column="12">(<expr><name pos:line="343" pos:column="13">rc<pos:position pos:line="343" pos:column="15"/></name> <operator pos:line="343" pos:column="16">!=<pos:position pos:line="343" pos:column="18"/></operator> <literal type="number" pos:line="343" pos:column="19">230<pos:position pos:line="343" pos:column="22"/></literal> <operator pos:line="343" pos:column="23">&amp;&amp;<pos:position pos:line="343" pos:column="33"/></operator> <name pos:line="343" pos:column="26">rc<pos:position pos:line="343" pos:column="28"/></name> <operator pos:line="343" pos:column="29">!=<pos:position pos:line="343" pos:column="31"/></operator> <literal type="number" pos:line="343" pos:column="32">202<pos:position pos:line="343" pos:column="35"/></literal></expr>)<pos:position pos:line="343" pos:column="36"/></condition><then pos:line="343" pos:column="36"> <block pos:line="343" pos:column="37">{
            <return pos:line="344" pos:column="13">return <expr><call><name pos:line="344" pos:column="20">ftp_proxyerror<pos:position pos:line="344" pos:column="34"/></name><argument_list pos:line="344" pos:column="34">(<argument><expr><name pos:line="344" pos:column="35">r<pos:position pos:line="344" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="344" pos:column="38">backend<pos:position pos:line="344" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="344" pos:column="47">HTTP_BAD_GATEWAY<pos:position pos:line="344" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="344" pos:column="65">ftpmessage<pos:position pos:line="344" pos:column="75"/></name></expr></argument>)<pos:position pos:line="344" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="344" pos:column="77"/></return>
        }<pos:position pos:line="345" pos:column="10"/></block></then></if>
    }<pos:position pos:line="346" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="347" pos:column="5">apr_table_set<pos:position pos:line="347" pos:column="18"/></name><argument_list pos:line="347" pos:column="18">(<argument><expr><name><name pos:line="347" pos:column="19">r<pos:position pos:line="347" pos:column="20"/></name><operator pos:line="347" pos:column="20">-&gt;<pos:position pos:line="347" pos:column="25"/></operator><name pos:line="347" pos:column="22">notes<pos:position pos:line="347" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="347" pos:column="29">"Directory-README"<pos:position pos:line="347" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="347" pos:column="49">ftpmessage<pos:position pos:line="347" pos:column="59"/></name></expr></argument>)<pos:position pos:line="347" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="347" pos:column="61"/></expr_stmt>


    <comment type="block" pos:line="350" pos:column="5">/* Special handling for leading "%2f": this enforces a "cwd /"
     * out of the $HOME directory which was the starting point after login
     */</comment>
    <if pos:line="353" pos:column="5">if <condition pos:line="353" pos:column="8">(<expr><call><name pos:line="353" pos:column="9">strncasecmp<pos:position pos:line="353" pos:column="20"/></name><argument_list pos:line="353" pos:column="20">(<argument><expr><name pos:line="353" pos:column="21">path<pos:position pos:line="353" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="353" pos:column="27">"%2f"<pos:position pos:line="353" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="353" pos:column="34">3<pos:position pos:line="353" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="353" pos:column="36"/></argument_list></call> <operator pos:line="353" pos:column="37">==<pos:position pos:line="353" pos:column="39"/></operator> <literal type="number" pos:line="353" pos:column="40">0<pos:position pos:line="353" pos:column="41"/></literal></expr>)<pos:position pos:line="353" pos:column="42"/></condition><then pos:line="353" pos:column="42"> <block pos:line="353" pos:column="43">{
        <expr_stmt><expr><name pos:line="354" pos:column="9">path<pos:position pos:line="354" pos:column="13"/></name> <operator pos:line="354" pos:column="14">+=<pos:position pos:line="354" pos:column="16"/></operator> <literal type="number" pos:line="354" pos:column="17">3<pos:position pos:line="354" pos:column="18"/></literal></expr>;<pos:position pos:line="354" pos:column="19"/></expr_stmt>
        <while pos:line="355" pos:column="9">while <condition pos:line="355" pos:column="15">(<expr><operator pos:line="355" pos:column="16">*<pos:position pos:line="355" pos:column="17"/></operator><name pos:line="355" pos:column="17">path<pos:position pos:line="355" pos:column="21"/></name> <operator pos:line="355" pos:column="22">==<pos:position pos:line="355" pos:column="24"/></operator> <literal type="char" pos:line="355" pos:column="25">'/'<pos:position pos:line="355" pos:column="28"/></literal></expr>)<pos:position pos:line="355" pos:column="29"/></condition> <comment type="block" pos:line="355" pos:column="30">/* skip leading '/' (after root %2f) */</comment>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="356" pos:column="13">++<pos:position pos:line="356" pos:column="15"/></operator><name pos:line="356" pos:column="15">path<pos:position pos:line="356" pos:column="19"/></name></expr>;<pos:position pos:line="356" pos:column="20"/></expr_stmt></block></while>

        <expr_stmt><expr><name pos:line="358" pos:column="9">rc<pos:position pos:line="358" pos:column="11"/></name> <operator pos:line="358" pos:column="12">=<pos:position pos:line="358" pos:column="13"/></operator> <call><name pos:line="358" pos:column="14">proxy_ftp_command<pos:position pos:line="358" pos:column="31"/></name><argument_list pos:line="358" pos:column="31">(<argument><expr><literal type="string" pos:line="358" pos:column="32">"CWD /"<pos:position pos:line="358" pos:column="39"/></literal> <name pos:line="358" pos:column="40">CRLF<pos:position pos:line="358" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="358" pos:column="46">r<pos:position pos:line="358" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="358" pos:column="49">origin<pos:position pos:line="358" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="358" pos:column="57">bb<pos:position pos:line="358" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="358" pos:column="61">&amp;<pos:position pos:line="358" pos:column="66"/></operator><name pos:line="358" pos:column="62">ftpmessage<pos:position pos:line="358" pos:column="72"/></name></expr></argument>)<pos:position pos:line="358" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="358" pos:column="74"/></expr_stmt>
        <if pos:line="359" pos:column="9">if <condition pos:line="359" pos:column="12">(<expr><name pos:line="359" pos:column="13">rc<pos:position pos:line="359" pos:column="15"/></name> <operator pos:line="359" pos:column="16">==<pos:position pos:line="359" pos:column="18"/></operator> <operator pos:line="359" pos:column="19">-<pos:position pos:line="359" pos:column="20"/></operator><literal type="number" pos:line="359" pos:column="20">1<pos:position pos:line="359" pos:column="21"/></literal> <operator pos:line="359" pos:column="22">||<pos:position pos:line="359" pos:column="24"/></operator> <name pos:line="359" pos:column="25">rc<pos:position pos:line="359" pos:column="27"/></name> <operator pos:line="359" pos:column="28">==<pos:position pos:line="359" pos:column="30"/></operator> <literal type="number" pos:line="359" pos:column="31">421<pos:position pos:line="359" pos:column="34"/></literal></expr>)<pos:position pos:line="359" pos:column="35"/></condition><then pos:line="359" pos:column="35">
            <block type="pseudo"><return pos:line="360" pos:column="13">return <expr><call><name pos:line="360" pos:column="20">ftp_proxyerror<pos:position pos:line="360" pos:column="34"/></name><argument_list pos:line="360" pos:column="34">(<argument><expr><name pos:line="360" pos:column="35">r<pos:position pos:line="360" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="360" pos:column="38">backend<pos:position pos:line="360" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="360" pos:column="47">HTTP_BAD_GATEWAY<pos:position pos:line="360" pos:column="63"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="361" pos:column="35">"Error reading from remote server"<pos:position pos:line="361" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="361" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="361" pos:column="71"/></return></block></then></if>
    }<pos:position pos:line="362" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="364" pos:column="5">/*
     * set the directory (walk directory component by component): this is
     * what we must do if we don't know the OS type of the remote machine
     */</comment>
    <for pos:line="368" pos:column="5">for <control pos:line="368" pos:column="9">(<init pos:line="368" pos:column="10">;<pos:position pos:line="368" pos:column="11"/></init><condition pos:line="368" pos:column="11">;<pos:position pos:line="368" pos:column="12"/></condition><incr/>)<pos:position pos:line="368" pos:column="13"/></control> <block pos:line="368" pos:column="14">{
        <expr_stmt><expr><name pos:line="369" pos:column="9">strp<pos:position pos:line="369" pos:column="13"/></name> <operator pos:line="369" pos:column="14">=<pos:position pos:line="369" pos:column="15"/></operator> <call><name pos:line="369" pos:column="16">strchr<pos:position pos:line="369" pos:column="22"/></name><argument_list pos:line="369" pos:column="22">(<argument><expr><name pos:line="369" pos:column="23">path<pos:position pos:line="369" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="369" pos:column="29">'/'<pos:position pos:line="369" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="369" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="369" pos:column="34"/></expr_stmt>
        <if pos:line="370" pos:column="9">if <condition pos:line="370" pos:column="12">(<expr><name pos:line="370" pos:column="13">strp<pos:position pos:line="370" pos:column="17"/></name> <operator pos:line="370" pos:column="18">==<pos:position pos:line="370" pos:column="20"/></operator> <name pos:line="370" pos:column="21">NULL<pos:position pos:line="370" pos:column="25"/></name></expr>)<pos:position pos:line="370" pos:column="26"/></condition><then pos:line="370" pos:column="26">
            <block type="pseudo"><break pos:line="371" pos:column="13">break;<pos:position pos:line="371" pos:column="19"/></break></block></then></if>
        <expr_stmt><expr><operator pos:line="372" pos:column="9">*<pos:position pos:line="372" pos:column="10"/></operator><name pos:line="372" pos:column="10">strp<pos:position pos:line="372" pos:column="14"/></name> <operator pos:line="372" pos:column="15">=<pos:position pos:line="372" pos:column="16"/></operator> <literal type="char" pos:line="372" pos:column="17">'\0'<pos:position pos:line="372" pos:column="21"/></literal></expr>;<pos:position pos:line="372" pos:column="22"/></expr_stmt>

        <expr_stmt><expr><name pos:line="374" pos:column="9">len<pos:position pos:line="374" pos:column="12"/></name> <operator pos:line="374" pos:column="13">=<pos:position pos:line="374" pos:column="14"/></operator> <call><name pos:line="374" pos:column="15">decodeenc<pos:position pos:line="374" pos:column="24"/></name><argument_list pos:line="374" pos:column="24">(<argument><expr><name pos:line="374" pos:column="25">path<pos:position pos:line="374" pos:column="29"/></name></expr></argument>)<pos:position pos:line="374" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="374" pos:column="31"/></expr_stmt> <comment type="block" pos:line="374" pos:column="32">/* Note! This decodes a %2f -&gt; "/" */</comment>

        <if pos:line="376" pos:column="9">if <condition pos:line="376" pos:column="12">(<expr><call><name pos:line="376" pos:column="13">strchr<pos:position pos:line="376" pos:column="19"/></name><argument_list pos:line="376" pos:column="19">(<argument><expr><name pos:line="376" pos:column="20">path<pos:position pos:line="376" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="376" pos:column="26">'/'<pos:position pos:line="376" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="376" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="376" pos:column="31"/></condition><then pos:line="376" pos:column="31"> <block pos:line="376" pos:column="32">{ <comment type="block" pos:line="376" pos:column="34">/* are there now any '/' characters? */</comment>
            <return pos:line="377" pos:column="13">return <expr><call><name pos:line="377" pos:column="20">ftp_proxyerror<pos:position pos:line="377" pos:column="34"/></name><argument_list pos:line="377" pos:column="34">(<argument><expr><name pos:line="377" pos:column="35">r<pos:position pos:line="377" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="377" pos:column="38">backend<pos:position pos:line="377" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="377" pos:column="47">HTTP_BAD_REQUEST<pos:position pos:line="377" pos:column="63"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="378" pos:column="35">"Use of /%2f is only allowed at the base directory"<pos:position pos:line="378" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="378" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="378" pos:column="88"/></return>
        }<pos:position pos:line="379" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="381" pos:column="9">/* NOTE: FTP servers do globbing on the path.
         * So we need to escape the URI metacharacters.
         * We use a special glob-escaping routine to escape globbing chars.
         * We could also have extended gen_test_char.c with a special T_ESCAPE_FTP_PATH
         */</comment>
        <expr_stmt><expr><name pos:line="386" pos:column="9">rc<pos:position pos:line="386" pos:column="11"/></name> <operator pos:line="386" pos:column="12">=<pos:position pos:line="386" pos:column="13"/></operator> <call><name pos:line="386" pos:column="14">proxy_ftp_command<pos:position pos:line="386" pos:column="31"/></name><argument_list pos:line="386" pos:column="31">(<argument><expr><call><name pos:line="386" pos:column="32">apr_pstrcat<pos:position pos:line="386" pos:column="43"/></name><argument_list pos:line="386" pos:column="43">(<argument><expr><name pos:line="386" pos:column="44">p<pos:position pos:line="386" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="386" pos:column="47">"CWD "<pos:position pos:line="386" pos:column="53"/></literal></expr></argument>,
                           <argument><expr><call><name pos:line="387" pos:column="28">ftp_escape_globbingchars<pos:position pos:line="387" pos:column="52"/></name><argument_list pos:line="387" pos:column="52">(<argument><expr><name pos:line="387" pos:column="53">p<pos:position pos:line="387" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="387" pos:column="56">path<pos:position pos:line="387" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="387" pos:column="62">fdconf<pos:position pos:line="387" pos:column="68"/></name></expr></argument>)<pos:position pos:line="387" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="387" pos:column="71">CRLF<pos:position pos:line="387" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="387" pos:column="77">NULL<pos:position pos:line="387" pos:column="81"/></name></expr></argument>)<pos:position pos:line="387" pos:column="82"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="388" pos:column="28">r<pos:position pos:line="388" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="388" pos:column="31">origin<pos:position pos:line="388" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="388" pos:column="39">bb<pos:position pos:line="388" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="388" pos:column="43">&amp;<pos:position pos:line="388" pos:column="48"/></operator><name pos:line="388" pos:column="44">ftpmessage<pos:position pos:line="388" pos:column="54"/></name></expr></argument>)<pos:position pos:line="388" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="388" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="389" pos:column="9">*<pos:position pos:line="389" pos:column="10"/></operator><name pos:line="389" pos:column="10">strp<pos:position pos:line="389" pos:column="14"/></name> <operator pos:line="389" pos:column="15">=<pos:position pos:line="389" pos:column="16"/></operator> <literal type="char" pos:line="389" pos:column="17">'/'<pos:position pos:line="389" pos:column="20"/></literal></expr>;<pos:position pos:line="389" pos:column="21"/></expr_stmt>
        <comment type="block" pos:line="390" pos:column="9">/* responses: 250, 421, 500, 501, 502, 530, 550 */</comment>
        <comment type="block" pos:line="391" pos:column="9">/* 250 Requested file action okay, completed. */</comment>
        <comment type="block" pos:line="392" pos:column="9">/* 421 Service not available, closing control connection. */</comment>
        <comment type="block" pos:line="393" pos:column="9">/* 500 Syntax error, command unrecognized. */</comment>
        <comment type="block" pos:line="394" pos:column="9">/* 501 Syntax error in parameters or arguments. */</comment>
        <comment type="block" pos:line="395" pos:column="9">/* 502 Command not implemented. */</comment>
        <comment type="block" pos:line="396" pos:column="9">/* 530 Not logged in. */</comment>
        <comment type="block" pos:line="397" pos:column="9">/* 550 Requested action not taken. */</comment>
        <if pos:line="398" pos:column="9">if <condition pos:line="398" pos:column="12">(<expr><name pos:line="398" pos:column="13">rc<pos:position pos:line="398" pos:column="15"/></name> <operator pos:line="398" pos:column="16">==<pos:position pos:line="398" pos:column="18"/></operator> <operator pos:line="398" pos:column="19">-<pos:position pos:line="398" pos:column="20"/></operator><literal type="number" pos:line="398" pos:column="20">1<pos:position pos:line="398" pos:column="21"/></literal> <operator pos:line="398" pos:column="22">||<pos:position pos:line="398" pos:column="24"/></operator> <name pos:line="398" pos:column="25">rc<pos:position pos:line="398" pos:column="27"/></name> <operator pos:line="398" pos:column="28">==<pos:position pos:line="398" pos:column="30"/></operator> <literal type="number" pos:line="398" pos:column="31">421<pos:position pos:line="398" pos:column="34"/></literal></expr>)<pos:position pos:line="398" pos:column="35"/></condition><then pos:line="398" pos:column="35"> <block pos:line="398" pos:column="36">{
            <return pos:line="399" pos:column="13">return <expr><call><name pos:line="399" pos:column="20">ftp_proxyerror<pos:position pos:line="399" pos:column="34"/></name><argument_list pos:line="399" pos:column="34">(<argument><expr><name pos:line="399" pos:column="35">r<pos:position pos:line="399" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="399" pos:column="38">backend<pos:position pos:line="399" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="399" pos:column="47">HTTP_BAD_GATEWAY<pos:position pos:line="399" pos:column="63"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="400" pos:column="35">"Error reading from remote server"<pos:position pos:line="400" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="400" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="400" pos:column="71"/></return>
        }<pos:position pos:line="401" pos:column="10"/></block></then></if>
        <if pos:line="402" pos:column="9">if <condition pos:line="402" pos:column="12">(<expr><name pos:line="402" pos:column="13">rc<pos:position pos:line="402" pos:column="15"/></name> <operator pos:line="402" pos:column="16">==<pos:position pos:line="402" pos:column="18"/></operator> <literal type="number" pos:line="402" pos:column="19">550<pos:position pos:line="402" pos:column="22"/></literal></expr>)<pos:position pos:line="402" pos:column="23"/></condition><then pos:line="402" pos:column="23"> <block pos:line="402" pos:column="24">{
            <return pos:line="403" pos:column="13">return <expr><call><name pos:line="403" pos:column="20">ftp_proxyerror<pos:position pos:line="403" pos:column="34"/></name><argument_list pos:line="403" pos:column="34">(<argument><expr><name pos:line="403" pos:column="35">r<pos:position pos:line="403" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="403" pos:column="38">backend<pos:position pos:line="403" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="403" pos:column="47">HTTP_NOT_FOUND<pos:position pos:line="403" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="403" pos:column="63">ftpmessage<pos:position pos:line="403" pos:column="73"/></name></expr></argument>)<pos:position pos:line="403" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="403" pos:column="75"/></return>
        }<pos:position pos:line="404" pos:column="10"/></block></then></if>
        <if pos:line="405" pos:column="9">if <condition pos:line="405" pos:column="12">(<expr><name pos:line="405" pos:column="13">rc<pos:position pos:line="405" pos:column="15"/></name> <operator pos:line="405" pos:column="16">!=<pos:position pos:line="405" pos:column="18"/></operator> <literal type="number" pos:line="405" pos:column="19">250<pos:position pos:line="405" pos:column="22"/></literal></expr>)<pos:position pos:line="405" pos:column="23"/></condition><then pos:line="405" pos:column="23"> <block pos:line="405" pos:column="24">{
            <return pos:line="406" pos:column="13">return <expr><call><name pos:line="406" pos:column="20">ftp_proxyerror<pos:position pos:line="406" pos:column="34"/></name><argument_list pos:line="406" pos:column="34">(<argument><expr><name pos:line="406" pos:column="35">r<pos:position pos:line="406" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="406" pos:column="38">backend<pos:position pos:line="406" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="406" pos:column="47">HTTP_BAD_GATEWAY<pos:position pos:line="406" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="406" pos:column="65">ftpmessage<pos:position pos:line="406" pos:column="75"/></name></expr></argument>)<pos:position pos:line="406" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="406" pos:column="77"/></return>
        }<pos:position pos:line="407" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="409" pos:column="9">path<pos:position pos:line="409" pos:column="13"/></name> <operator pos:line="409" pos:column="14">=<pos:position pos:line="409" pos:column="15"/></operator> <name pos:line="409" pos:column="16">strp<pos:position pos:line="409" pos:column="20"/></name> <operator pos:line="409" pos:column="21">+<pos:position pos:line="409" pos:column="22"/></operator> <literal type="number" pos:line="409" pos:column="23">1<pos:position pos:line="409" pos:column="24"/></literal></expr>;<pos:position pos:line="409" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="410" pos:column="6"/></block></for>

    <comment type="block" pos:line="412" pos:column="5">/*
     * IV: Make Data Connection? -------------------------
     *
     * Try EPSV, if that fails... try PASV, if that fails... try PORT.
     */</comment>
<comment type="block" pos:line="417" pos:column="1">/* this temporarily switches off EPSV/PASV */</comment>
<comment type="block" pos:line="418" pos:column="1">/*goto bypass;*/</comment>

    <comment type="block" pos:line="420" pos:column="5">/* set up data connection - EPSV */</comment>
    <block pos:line="421" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="422" pos:column="9">apr_sockaddr_t<pos:position pos:line="422" pos:column="23"/></name> <modifier pos:line="422" pos:column="24">*<pos:position pos:line="422" pos:column="25"/></modifier></type><name pos:line="422" pos:column="25">data_addr<pos:position pos:line="422" pos:column="34"/></name></decl>;<pos:position pos:line="422" pos:column="35"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="423" pos:column="9">char<pos:position pos:line="423" pos:column="13"/></name> <modifier pos:line="423" pos:column="14">*<pos:position pos:line="423" pos:column="15"/></modifier></type><name pos:line="423" pos:column="15">data_ip<pos:position pos:line="423" pos:column="22"/></name></decl>;<pos:position pos:line="423" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="424" pos:column="9">apr_port_t<pos:position pos:line="424" pos:column="19"/></name></type> <name pos:line="424" pos:column="20">data_port<pos:position pos:line="424" pos:column="29"/></name></decl>;<pos:position pos:line="424" pos:column="30"/></decl_stmt>

        <comment type="block" pos:line="426" pos:column="9">/*
         * The EPSV command replaces PASV where both IPV4 and IPV6 is
         * supported. Only the port is returned, the IP address is always the
         * same as that on the control connection. Example: Entering Extended
         * Passive Mode (|||6446|)
         */</comment>
        <expr_stmt><expr><name pos:line="432" pos:column="9">rc<pos:position pos:line="432" pos:column="11"/></name> <operator pos:line="432" pos:column="12">=<pos:position pos:line="432" pos:column="13"/></operator> <call><name pos:line="432" pos:column="14">proxy_ftp_command<pos:position pos:line="432" pos:column="31"/></name><argument_list pos:line="432" pos:column="31">(<argument><expr><literal type="string" pos:line="432" pos:column="32">"EPSV"<pos:position pos:line="432" pos:column="38"/></literal> <name pos:line="432" pos:column="39">CRLF<pos:position pos:line="432" pos:column="43"/></name></expr></argument>,
                           <argument><expr><name pos:line="433" pos:column="28">r<pos:position pos:line="433" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="433" pos:column="31">origin<pos:position pos:line="433" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="433" pos:column="39">bb<pos:position pos:line="433" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="433" pos:column="43">&amp;<pos:position pos:line="433" pos:column="48"/></operator><name pos:line="433" pos:column="44">ftpmessage<pos:position pos:line="433" pos:column="54"/></name></expr></argument>)<pos:position pos:line="433" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="433" pos:column="56"/></expr_stmt>
        <comment type="block" pos:line="434" pos:column="9">/* possible results: 227, 421, 500, 501, 502, 530 */</comment>
        <comment type="block" pos:line="435" pos:column="9">/* 227 Entering Passive Mode (h1,h2,h3,h4,p1,p2). */</comment>
        <comment type="block" pos:line="436" pos:column="9">/* 421 Service not available, closing control connection. */</comment>
        <comment type="block" pos:line="437" pos:column="9">/* 500 Syntax error, command unrecognized. */</comment>
        <comment type="block" pos:line="438" pos:column="9">/* 501 Syntax error in parameters or arguments. */</comment>
        <comment type="block" pos:line="439" pos:column="9">/* 502 Command not implemented. */</comment>
        <comment type="block" pos:line="440" pos:column="9">/* 530 Not logged in. */</comment>
        <if pos:line="441" pos:column="9">if <condition pos:line="441" pos:column="12">(<expr><name pos:line="441" pos:column="13">rc<pos:position pos:line="441" pos:column="15"/></name> <operator pos:line="441" pos:column="16">==<pos:position pos:line="441" pos:column="18"/></operator> <operator pos:line="441" pos:column="19">-<pos:position pos:line="441" pos:column="20"/></operator><literal type="number" pos:line="441" pos:column="20">1<pos:position pos:line="441" pos:column="21"/></literal> <operator pos:line="441" pos:column="22">||<pos:position pos:line="441" pos:column="24"/></operator> <name pos:line="441" pos:column="25">rc<pos:position pos:line="441" pos:column="27"/></name> <operator pos:line="441" pos:column="28">==<pos:position pos:line="441" pos:column="30"/></operator> <literal type="number" pos:line="441" pos:column="31">421<pos:position pos:line="441" pos:column="34"/></literal></expr>)<pos:position pos:line="441" pos:column="35"/></condition><then pos:line="441" pos:column="35"> <block pos:line="441" pos:column="36">{
            <return pos:line="442" pos:column="13">return <expr><call><name pos:line="442" pos:column="20">ftp_proxyerror<pos:position pos:line="442" pos:column="34"/></name><argument_list pos:line="442" pos:column="34">(<argument><expr><name pos:line="442" pos:column="35">r<pos:position pos:line="442" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="442" pos:column="38">backend<pos:position pos:line="442" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="442" pos:column="47">HTTP_BAD_GATEWAY<pos:position pos:line="442" pos:column="63"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="443" pos:column="35">"Error reading from remote server"<pos:position pos:line="443" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="443" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="443" pos:column="71"/></return>
        }<pos:position pos:line="444" pos:column="10"/></block></then></if>
        <if pos:line="445" pos:column="9">if <condition pos:line="445" pos:column="12">(<expr><name pos:line="445" pos:column="13">rc<pos:position pos:line="445" pos:column="15"/></name> <operator pos:line="445" pos:column="16">!=<pos:position pos:line="445" pos:column="18"/></operator> <literal type="number" pos:line="445" pos:column="19">229<pos:position pos:line="445" pos:column="22"/></literal> <operator pos:line="445" pos:column="23">&amp;&amp;<pos:position pos:line="445" pos:column="33"/></operator> <name pos:line="445" pos:column="26">rc<pos:position pos:line="445" pos:column="28"/></name> <operator pos:line="445" pos:column="29">!=<pos:position pos:line="445" pos:column="31"/></operator> <literal type="number" pos:line="445" pos:column="32">500<pos:position pos:line="445" pos:column="35"/></literal> <operator pos:line="445" pos:column="36">&amp;&amp;<pos:position pos:line="445" pos:column="46"/></operator> <name pos:line="445" pos:column="39">rc<pos:position pos:line="445" pos:column="41"/></name> <operator pos:line="445" pos:column="42">!=<pos:position pos:line="445" pos:column="44"/></operator> <literal type="number" pos:line="445" pos:column="45">501<pos:position pos:line="445" pos:column="48"/></literal> <operator pos:line="445" pos:column="49">&amp;&amp;<pos:position pos:line="445" pos:column="59"/></operator> <name pos:line="445" pos:column="52">rc<pos:position pos:line="445" pos:column="54"/></name> <operator pos:line="445" pos:column="55">!=<pos:position pos:line="445" pos:column="57"/></operator> <literal type="number" pos:line="445" pos:column="58">502<pos:position pos:line="445" pos:column="61"/></literal></expr>)<pos:position pos:line="445" pos:column="62"/></condition><then pos:line="445" pos:column="62"> <block pos:line="445" pos:column="63">{
            <return pos:line="446" pos:column="13">return <expr><call><name pos:line="446" pos:column="20">ftp_proxyerror<pos:position pos:line="446" pos:column="34"/></name><argument_list pos:line="446" pos:column="34">(<argument><expr><name pos:line="446" pos:column="35">r<pos:position pos:line="446" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="446" pos:column="38">backend<pos:position pos:line="446" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="446" pos:column="47">HTTP_BAD_GATEWAY<pos:position pos:line="446" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="446" pos:column="65">ftpmessage<pos:position pos:line="446" pos:column="75"/></name></expr></argument>)<pos:position pos:line="446" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="446" pos:column="77"/></return>
        }<pos:position pos:line="447" pos:column="10"/></block></then>
        <elseif pos:line="448" pos:column="9">else <if pos:line="448" pos:column="14">if <condition pos:line="448" pos:column="17">(<expr><name pos:line="448" pos:column="18">rc<pos:position pos:line="448" pos:column="20"/></name> <operator pos:line="448" pos:column="21">==<pos:position pos:line="448" pos:column="23"/></operator> <literal type="number" pos:line="448" pos:column="24">229<pos:position pos:line="448" pos:column="27"/></literal></expr>)<pos:position pos:line="448" pos:column="28"/></condition><then pos:line="448" pos:column="28"> <block pos:line="448" pos:column="29">{
            <comment type="block" pos:line="449" pos:column="13">/* Parse the port out of the EPSV reply. */</comment>
            <expr_stmt><expr><name pos:line="450" pos:column="13">data_port<pos:position pos:line="450" pos:column="22"/></name> <operator pos:line="450" pos:column="23">=<pos:position pos:line="450" pos:column="24"/></operator> <call><name pos:line="450" pos:column="25">parse_epsv_reply<pos:position pos:line="450" pos:column="41"/></name><argument_list pos:line="450" pos:column="41">(<argument><expr><name pos:line="450" pos:column="42">ftpmessage<pos:position pos:line="450" pos:column="52"/></name></expr></argument>)<pos:position pos:line="450" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="450" pos:column="54"/></expr_stmt>

            <if pos:line="452" pos:column="13">if <condition pos:line="452" pos:column="16">(<expr><name pos:line="452" pos:column="17">data_port<pos:position pos:line="452" pos:column="26"/></name></expr>)<pos:position pos:line="452" pos:column="27"/></condition><then pos:line="452" pos:column="27"> <block pos:line="452" pos:column="28">{
                <decl_stmt><decl><type><name pos:line="453" pos:column="17">apr_sockaddr_t<pos:position pos:line="453" pos:column="31"/></name> <modifier pos:line="453" pos:column="32">*<pos:position pos:line="453" pos:column="33"/></modifier></type><name pos:line="453" pos:column="33">epsv_addr<pos:position pos:line="453" pos:column="42"/></name></decl>;<pos:position pos:line="453" pos:column="43"/></decl_stmt>

                <expr_stmt><expr><call><name pos:line="455" pos:column="17">ap_log_error<pos:position pos:line="455" pos:column="29"/></name><argument_list pos:line="455" pos:column="29">(<argument><expr><name pos:line="455" pos:column="30">APLOG_MARK<pos:position pos:line="455" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="455" pos:column="42">APLOG_TRACE1<pos:position pos:line="455" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="455" pos:column="56">0<pos:position pos:line="455" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="455" pos:column="59">r<pos:position pos:line="455" pos:column="60"/></name><operator pos:line="455" pos:column="60">-&gt;<pos:position pos:line="455" pos:column="65"/></operator><name pos:line="455" pos:column="62">server<pos:position pos:line="455" pos:column="68"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="456" pos:column="30">"proxy: FTP: EPSV contacting remote host on port %d"<pos:position pos:line="456" pos:column="82"/></literal></expr></argument>,
                             <argument><expr><name pos:line="457" pos:column="30">data_port<pos:position pos:line="457" pos:column="39"/></name></expr></argument>)<pos:position pos:line="457" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="457" pos:column="41"/></expr_stmt>

                <if pos:line="459" pos:column="17">if <condition pos:line="459" pos:column="20">(<expr><operator pos:line="459" pos:column="21">(<pos:position pos:line="459" pos:column="22"/></operator><name pos:line="459" pos:column="22">rv<pos:position pos:line="459" pos:column="24"/></name> <operator pos:line="459" pos:column="25">=<pos:position pos:line="459" pos:column="26"/></operator> <call><name pos:line="459" pos:column="27">apr_socket_create<pos:position pos:line="459" pos:column="44"/></name><argument_list pos:line="459" pos:column="44">(<argument><expr><operator pos:line="459" pos:column="45">&amp;<pos:position pos:line="459" pos:column="50"/></operator><name pos:line="459" pos:column="46">data_sock<pos:position pos:line="459" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="459" pos:column="57">connect_addr<pos:position pos:line="459" pos:column="69"/></name><operator pos:line="459" pos:column="69">-&gt;<pos:position pos:line="459" pos:column="74"/></operator><name pos:line="459" pos:column="71">family<pos:position pos:line="459" pos:column="77"/></name></name></expr></argument>, <argument><expr><name pos:line="459" pos:column="79">SOCK_STREAM<pos:position pos:line="459" pos:column="90"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="459" pos:column="92">0<pos:position pos:line="459" pos:column="93"/></literal></expr></argument>, <argument><expr><name><name pos:line="459" pos:column="95">r<pos:position pos:line="459" pos:column="96"/></name><operator pos:line="459" pos:column="96">-&gt;<pos:position pos:line="459" pos:column="101"/></operator><name pos:line="459" pos:column="98">pool<pos:position pos:line="459" pos:column="102"/></name></name></expr></argument>)<pos:position pos:line="459" pos:column="103"/></argument_list></call><operator pos:line="459" pos:column="103">)<pos:position pos:line="459" pos:column="104"/></operator> <operator pos:line="459" pos:column="105">!=<pos:position pos:line="459" pos:column="107"/></operator> <name pos:line="459" pos:column="108">APR_SUCCESS<pos:position pos:line="459" pos:column="119"/></name></expr>)<pos:position pos:line="459" pos:column="120"/></condition><then pos:line="459" pos:column="120"> <block pos:line="459" pos:column="121">{
                    <expr_stmt><expr><call><name pos:line="460" pos:column="21">ap_log_rerror<pos:position pos:line="460" pos:column="34"/></name><argument_list pos:line="460" pos:column="34">(<argument><expr><name pos:line="460" pos:column="35">APLOG_MARK<pos:position pos:line="460" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="460" pos:column="47">APLOG_ERR<pos:position pos:line="460" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="460" pos:column="58">rv<pos:position pos:line="460" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="460" pos:column="62">r<pos:position pos:line="460" pos:column="63"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="461" pos:column="35">"proxy: FTP: error creating EPSV socket"<pos:position pos:line="461" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="461" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="461" pos:column="77"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="462" pos:column="21">proxy_ftp_cleanup<pos:position pos:line="462" pos:column="38"/></name><argument_list pos:line="462" pos:column="38">(<argument><expr><name pos:line="462" pos:column="39">r<pos:position pos:line="462" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="462" pos:column="42">backend<pos:position pos:line="462" pos:column="49"/></name></expr></argument>)<pos:position pos:line="462" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="462" pos:column="51"/></expr_stmt>
                    <return pos:line="463" pos:column="21">return <expr><name pos:line="463" pos:column="28">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="463" pos:column="54"/></name></expr>;<pos:position pos:line="463" pos:column="55"/></return>
                }<pos:position pos:line="464" pos:column="18"/></block></then></if>

                <if pos:line="466" pos:column="17">if <condition pos:line="466" pos:column="20">(<expr><name><name pos:line="466" pos:column="21">conf<pos:position pos:line="466" pos:column="25"/></name><operator pos:line="466" pos:column="25">-&gt;<pos:position pos:line="466" pos:column="30"/></operator><name pos:line="466" pos:column="27">recv_buffer_size<pos:position pos:line="466" pos:column="43"/></name></name> <operator pos:line="466" pos:column="44">&gt;<pos:position pos:line="466" pos:column="48"/></operator> <literal type="number" pos:line="466" pos:column="46">0<pos:position pos:line="466" pos:column="47"/></literal>
                        <operator pos:line="467" pos:column="25">&amp;&amp;<pos:position pos:line="467" pos:column="35"/></operator> <operator pos:line="467" pos:column="28">(<pos:position pos:line="467" pos:column="29"/></operator><name pos:line="467" pos:column="29">rv<pos:position pos:line="467" pos:column="31"/></name> <operator pos:line="467" pos:column="32">=<pos:position pos:line="467" pos:column="33"/></operator> <call><name pos:line="467" pos:column="34">apr_socket_opt_set<pos:position pos:line="467" pos:column="52"/></name><argument_list pos:line="467" pos:column="52">(<argument><expr><name pos:line="467" pos:column="53">data_sock<pos:position pos:line="467" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="467" pos:column="64">APR_SO_RCVBUF<pos:position pos:line="467" pos:column="77"/></name></expr></argument>,
                                                    <argument><expr><name><name pos:line="468" pos:column="53">conf<pos:position pos:line="468" pos:column="57"/></name><operator pos:line="468" pos:column="57">-&gt;<pos:position pos:line="468" pos:column="62"/></operator><name pos:line="468" pos:column="59">recv_buffer_size<pos:position pos:line="468" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="468" pos:column="76"/></argument_list></call><operator pos:line="468" pos:column="76">)<pos:position pos:line="468" pos:column="77"/></operator></expr>)<pos:position pos:line="468" pos:column="78"/></condition><then pos:line="468" pos:column="78"> <block pos:line="468" pos:column="79">{
                    <expr_stmt><expr><call><name pos:line="469" pos:column="21">ap_log_rerror<pos:position pos:line="469" pos:column="34"/></name><argument_list pos:line="469" pos:column="34">(<argument><expr><name pos:line="469" pos:column="35">APLOG_MARK<pos:position pos:line="469" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="469" pos:column="47">APLOG_ERR<pos:position pos:line="469" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="469" pos:column="58">rv<pos:position pos:line="469" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="469" pos:column="62">r<pos:position pos:line="469" pos:column="63"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="470" pos:column="35">"proxy: FTP: apr_socket_opt_set(SO_RCVBUF): Failed to set ProxyReceiveBufferSize, using default"<pos:position pos:line="470" pos:column="131"/></literal></expr></argument>)<pos:position pos:line="470" pos:column="132"/></argument_list></call></expr>;<pos:position pos:line="470" pos:column="133"/></expr_stmt>
                }<pos:position pos:line="471" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="473" pos:column="17">rv<pos:position pos:line="473" pos:column="19"/></name> <operator pos:line="473" pos:column="20">=<pos:position pos:line="473" pos:column="21"/></operator> <call><name pos:line="473" pos:column="22">apr_socket_opt_set<pos:position pos:line="473" pos:column="40"/></name><argument_list pos:line="473" pos:column="40">(<argument><expr><name pos:line="473" pos:column="41">data_sock<pos:position pos:line="473" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="473" pos:column="52">APR_TCP_NODELAY<pos:position pos:line="473" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="473" pos:column="69">1<pos:position pos:line="473" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="473" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="473" pos:column="72"/></expr_stmt>
                <if pos:line="474" pos:column="17">if <condition pos:line="474" pos:column="20">(<expr><name pos:line="474" pos:column="21">rv<pos:position pos:line="474" pos:column="23"/></name> <operator pos:line="474" pos:column="24">!=<pos:position pos:line="474" pos:column="26"/></operator> <name pos:line="474" pos:column="27">APR_SUCCESS<pos:position pos:line="474" pos:column="38"/></name> <operator pos:line="474" pos:column="39">&amp;&amp;<pos:position pos:line="474" pos:column="49"/></operator> <name pos:line="474" pos:column="42">rv<pos:position pos:line="474" pos:column="44"/></name> <operator pos:line="474" pos:column="45">!=<pos:position pos:line="474" pos:column="47"/></operator> <name pos:line="474" pos:column="48">APR_ENOTIMPL<pos:position pos:line="474" pos:column="60"/></name></expr>)<pos:position pos:line="474" pos:column="61"/></condition><then pos:line="474" pos:column="61"> <block pos:line="474" pos:column="62">{
                    <expr_stmt><expr><call><name pos:line="475" pos:column="21">ap_log_rerror<pos:position pos:line="475" pos:column="34"/></name><argument_list pos:line="475" pos:column="34">(<argument><expr><name pos:line="475" pos:column="35">APLOG_MARK<pos:position pos:line="475" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="475" pos:column="47">APLOG_ERR<pos:position pos:line="475" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="475" pos:column="58">rv<pos:position pos:line="475" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="475" pos:column="62">r<pos:position pos:line="475" pos:column="63"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="476" pos:column="34">"apr_socket_opt_set(APR_TCP_NODELAY): Failed to set"<pos:position pos:line="476" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="476" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="476" pos:column="88"/></expr_stmt>
                }<pos:position pos:line="477" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="479" pos:column="17">/* make the connection */</comment>
                <expr_stmt><expr><call><name pos:line="480" pos:column="17">apr_socket_addr_get<pos:position pos:line="480" pos:column="36"/></name><argument_list pos:line="480" pos:column="36">(<argument><expr><operator pos:line="480" pos:column="37">&amp;<pos:position pos:line="480" pos:column="42"/></operator><name pos:line="480" pos:column="38">data_addr<pos:position pos:line="480" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="480" pos:column="49">APR_REMOTE<pos:position pos:line="480" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="480" pos:column="61">sock<pos:position pos:line="480" pos:column="65"/></name></expr></argument>)<pos:position pos:line="480" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="480" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="481" pos:column="17">apr_sockaddr_ip_get<pos:position pos:line="481" pos:column="36"/></name><argument_list pos:line="481" pos:column="36">(<argument><expr><operator pos:line="481" pos:column="37">&amp;<pos:position pos:line="481" pos:column="42"/></operator><name pos:line="481" pos:column="38">data_ip<pos:position pos:line="481" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="481" pos:column="47">data_addr<pos:position pos:line="481" pos:column="56"/></name></expr></argument>)<pos:position pos:line="481" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="481" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="482" pos:column="17">apr_sockaddr_info_get<pos:position pos:line="482" pos:column="38"/></name><argument_list pos:line="482" pos:column="38">(<argument><expr><operator pos:line="482" pos:column="39">&amp;<pos:position pos:line="482" pos:column="44"/></operator><name pos:line="482" pos:column="40">epsv_addr<pos:position pos:line="482" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="482" pos:column="51">data_ip<pos:position pos:line="482" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="482" pos:column="60">connect_addr<pos:position pos:line="482" pos:column="72"/></name><operator pos:line="482" pos:column="72">-&gt;<pos:position pos:line="482" pos:column="77"/></operator><name pos:line="482" pos:column="74">family<pos:position pos:line="482" pos:column="80"/></name></name></expr></argument>, <argument><expr><name pos:line="482" pos:column="82">data_port<pos:position pos:line="482" pos:column="91"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="482" pos:column="93">0<pos:position pos:line="482" pos:column="94"/></literal></expr></argument>, <argument><expr><name pos:line="482" pos:column="96">p<pos:position pos:line="482" pos:column="97"/></name></expr></argument>)<pos:position pos:line="482" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="482" pos:column="99"/></expr_stmt>
                <expr_stmt><expr><name pos:line="483" pos:column="17">rv<pos:position pos:line="483" pos:column="19"/></name> <operator pos:line="483" pos:column="20">=<pos:position pos:line="483" pos:column="21"/></operator> <call><name pos:line="483" pos:column="22">apr_socket_connect<pos:position pos:line="483" pos:column="40"/></name><argument_list pos:line="483" pos:column="40">(<argument><expr><name pos:line="483" pos:column="41">data_sock<pos:position pos:line="483" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="483" pos:column="52">epsv_addr<pos:position pos:line="483" pos:column="61"/></name></expr></argument>)<pos:position pos:line="483" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="483" pos:column="63"/></expr_stmt>
                <if pos:line="484" pos:column="17">if <condition pos:line="484" pos:column="20">(<expr><name pos:line="484" pos:column="21">rv<pos:position pos:line="484" pos:column="23"/></name> <operator pos:line="484" pos:column="24">!=<pos:position pos:line="484" pos:column="26"/></operator> <name pos:line="484" pos:column="27">APR_SUCCESS<pos:position pos:line="484" pos:column="38"/></name></expr>)<pos:position pos:line="484" pos:column="39"/></condition><then pos:line="484" pos:column="39"> <block pos:line="484" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="485" pos:column="21">ap_log_error<pos:position pos:line="485" pos:column="33"/></name><argument_list pos:line="485" pos:column="33">(<argument><expr><name pos:line="485" pos:column="34">APLOG_MARK<pos:position pos:line="485" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="485" pos:column="46">APLOG_ERR<pos:position pos:line="485" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="485" pos:column="57">rv<pos:position pos:line="485" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="485" pos:column="61">r<pos:position pos:line="485" pos:column="62"/></name><operator pos:line="485" pos:column="62">-&gt;<pos:position pos:line="485" pos:column="67"/></operator><name pos:line="485" pos:column="64">server<pos:position pos:line="485" pos:column="70"/></name></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="486" pos:column="34">"proxy: FTP: EPSV attempt to connect to %pI failed - Firewall/NAT?"<pos:position pos:line="486" pos:column="101"/></literal></expr></argument>, <argument><expr><name pos:line="486" pos:column="103">epsv_addr<pos:position pos:line="486" pos:column="112"/></name></expr></argument>)<pos:position pos:line="486" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="486" pos:column="114"/></expr_stmt>
                    <return pos:line="487" pos:column="21">return <expr><call><name pos:line="487" pos:column="28">ftp_proxyerror<pos:position pos:line="487" pos:column="42"/></name><argument_list pos:line="487" pos:column="42">(<argument><expr><name pos:line="487" pos:column="43">r<pos:position pos:line="487" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="487" pos:column="46">backend<pos:position pos:line="487" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="487" pos:column="55">HTTP_BAD_GATEWAY<pos:position pos:line="487" pos:column="71"/></name></expr></argument>, <argument><expr><call><name pos:line="487" pos:column="73">apr_psprintf<pos:position pos:line="487" pos:column="85"/></name><argument_list pos:line="487" pos:column="85">(<argument><expr><name><name pos:line="487" pos:column="86">r<pos:position pos:line="487" pos:column="87"/></name><operator pos:line="487" pos:column="87">-&gt;<pos:position pos:line="487" pos:column="92"/></operator><name pos:line="487" pos:column="89">pool<pos:position pos:line="487" pos:column="93"/></name></name></expr></argument>,
                                                                           <argument><expr><literal type="string" pos:line="488" pos:column="76">"EPSV attempt to connect to %pI failed - firewall/NAT?"<pos:position pos:line="488" pos:column="131"/></literal></expr></argument>, <argument><expr><name pos:line="488" pos:column="133">epsv_addr<pos:position pos:line="488" pos:column="142"/></name></expr></argument>)<pos:position pos:line="488" pos:column="143"/></argument_list></call></expr></argument>)<pos:position pos:line="488" pos:column="144"/></argument_list></call></expr>;<pos:position pos:line="488" pos:column="145"/></return>
                }<pos:position pos:line="489" pos:column="18"/></block></then>
                <else pos:line="490" pos:column="17">else <block pos:line="490" pos:column="22">{
                    <expr_stmt><expr><name pos:line="491" pos:column="21">connect<pos:position pos:line="491" pos:column="28"/></name> <operator pos:line="491" pos:column="29">=<pos:position pos:line="491" pos:column="30"/></operator> <literal type="number" pos:line="491" pos:column="31">1<pos:position pos:line="491" pos:column="32"/></literal></expr>;<pos:position pos:line="491" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="492" pos:column="18"/></block></else></if>
            }<pos:position pos:line="493" pos:column="14"/></block></then></if>
        }<pos:position pos:line="494" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="495" pos:column="6"/></block>

    <comment type="block" pos:line="497" pos:column="5">/* set up data connection - PASV */</comment>
    <if pos:line="498" pos:column="5">if <condition pos:line="498" pos:column="8">(<expr><operator pos:line="498" pos:column="9">!<pos:position pos:line="498" pos:column="10"/></operator><name pos:line="498" pos:column="10">connect<pos:position pos:line="498" pos:column="17"/></name></expr>)<pos:position pos:line="498" pos:column="18"/></condition><then pos:line="498" pos:column="18"> <block pos:line="498" pos:column="19">{
        <expr_stmt><expr><name pos:line="499" pos:column="9">rc<pos:position pos:line="499" pos:column="11"/></name> <operator pos:line="499" pos:column="12">=<pos:position pos:line="499" pos:column="13"/></operator> <call><name pos:line="499" pos:column="14">proxy_ftp_command<pos:position pos:line="499" pos:column="31"/></name><argument_list pos:line="499" pos:column="31">(<argument><expr><literal type="string" pos:line="499" pos:column="32">"PASV"<pos:position pos:line="499" pos:column="38"/></literal> <name pos:line="499" pos:column="39">CRLF<pos:position pos:line="499" pos:column="43"/></name></expr></argument>,
                           <argument><expr><name pos:line="500" pos:column="28">r<pos:position pos:line="500" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="500" pos:column="31">origin<pos:position pos:line="500" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="500" pos:column="39">bb<pos:position pos:line="500" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="500" pos:column="43">&amp;<pos:position pos:line="500" pos:column="48"/></operator><name pos:line="500" pos:column="44">ftpmessage<pos:position pos:line="500" pos:column="54"/></name></expr></argument>)<pos:position pos:line="500" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="500" pos:column="56"/></expr_stmt>
        <comment type="block" pos:line="501" pos:column="9">/* possible results: 227, 421, 500, 501, 502, 530 */</comment>
        <comment type="block" pos:line="502" pos:column="9">/* 227 Entering Passive Mode (h1,h2,h3,h4,p1,p2). */</comment>
        <comment type="block" pos:line="503" pos:column="9">/* 421 Service not available, closing control connection. */</comment>
        <comment type="block" pos:line="504" pos:column="9">/* 500 Syntax error, command unrecognized. */</comment>
        <comment type="block" pos:line="505" pos:column="9">/* 501 Syntax error in parameters or arguments. */</comment>
        <comment type="block" pos:line="506" pos:column="9">/* 502 Command not implemented. */</comment>
        <comment type="block" pos:line="507" pos:column="9">/* 530 Not logged in. */</comment>
        <if pos:line="508" pos:column="9">if <condition pos:line="508" pos:column="12">(<expr><name pos:line="508" pos:column="13">rc<pos:position pos:line="508" pos:column="15"/></name> <operator pos:line="508" pos:column="16">==<pos:position pos:line="508" pos:column="18"/></operator> <operator pos:line="508" pos:column="19">-<pos:position pos:line="508" pos:column="20"/></operator><literal type="number" pos:line="508" pos:column="20">1<pos:position pos:line="508" pos:column="21"/></literal> <operator pos:line="508" pos:column="22">||<pos:position pos:line="508" pos:column="24"/></operator> <name pos:line="508" pos:column="25">rc<pos:position pos:line="508" pos:column="27"/></name> <operator pos:line="508" pos:column="28">==<pos:position pos:line="508" pos:column="30"/></operator> <literal type="number" pos:line="508" pos:column="31">421<pos:position pos:line="508" pos:column="34"/></literal></expr>)<pos:position pos:line="508" pos:column="35"/></condition><then pos:line="508" pos:column="35"> <block pos:line="508" pos:column="36">{
            <return pos:line="509" pos:column="13">return <expr><call><name pos:line="509" pos:column="20">ftp_proxyerror<pos:position pos:line="509" pos:column="34"/></name><argument_list pos:line="509" pos:column="34">(<argument><expr><name pos:line="509" pos:column="35">r<pos:position pos:line="509" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="509" pos:column="38">backend<pos:position pos:line="509" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="509" pos:column="47">HTTP_BAD_GATEWAY<pos:position pos:line="509" pos:column="63"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="510" pos:column="35">"Error reading from remote server"<pos:position pos:line="510" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="510" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="510" pos:column="71"/></return>
        }<pos:position pos:line="511" pos:column="10"/></block></then></if>
        <if pos:line="512" pos:column="9">if <condition pos:line="512" pos:column="12">(<expr><name pos:line="512" pos:column="13">rc<pos:position pos:line="512" pos:column="15"/></name> <operator pos:line="512" pos:column="16">!=<pos:position pos:line="512" pos:column="18"/></operator> <literal type="number" pos:line="512" pos:column="19">227<pos:position pos:line="512" pos:column="22"/></literal> <operator pos:line="512" pos:column="23">&amp;&amp;<pos:position pos:line="512" pos:column="33"/></operator> <name pos:line="512" pos:column="26">rc<pos:position pos:line="512" pos:column="28"/></name> <operator pos:line="512" pos:column="29">!=<pos:position pos:line="512" pos:column="31"/></operator> <literal type="number" pos:line="512" pos:column="32">502<pos:position pos:line="512" pos:column="35"/></literal></expr>)<pos:position pos:line="512" pos:column="36"/></condition><then pos:line="512" pos:column="36"> <block pos:line="512" pos:column="37">{
            <return pos:line="513" pos:column="13">return <expr><call><name pos:line="513" pos:column="20">ftp_proxyerror<pos:position pos:line="513" pos:column="34"/></name><argument_list pos:line="513" pos:column="34">(<argument><expr><name pos:line="513" pos:column="35">r<pos:position pos:line="513" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="513" pos:column="38">backend<pos:position pos:line="513" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="513" pos:column="47">HTTP_BAD_GATEWAY<pos:position pos:line="513" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="513" pos:column="65">ftpmessage<pos:position pos:line="513" pos:column="75"/></name></expr></argument>)<pos:position pos:line="513" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="513" pos:column="77"/></return>
        }<pos:position pos:line="514" pos:column="10"/></block></then>
        <elseif pos:line="515" pos:column="9">else <if pos:line="515" pos:column="14">if <condition pos:line="515" pos:column="17">(<expr><name pos:line="515" pos:column="18">rc<pos:position pos:line="515" pos:column="20"/></name> <operator pos:line="515" pos:column="21">==<pos:position pos:line="515" pos:column="23"/></operator> <literal type="number" pos:line="515" pos:column="24">227<pos:position pos:line="515" pos:column="27"/></literal></expr>)<pos:position pos:line="515" pos:column="28"/></condition><then pos:line="515" pos:column="28"> <block pos:line="515" pos:column="29">{
            <decl_stmt><decl><type><name pos:line="516" pos:column="13">unsigned<pos:position pos:line="516" pos:column="21"/></name> <name pos:line="516" pos:column="22">int<pos:position pos:line="516" pos:column="25"/></name></type> <name pos:line="516" pos:column="26">h0<pos:position pos:line="516" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="516" pos:column="30">h1<pos:position pos:line="516" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="516" pos:column="34">h2<pos:position pos:line="516" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="516" pos:column="38">h3<pos:position pos:line="516" pos:column="40"/></name></decl>, <decl><type ref="prev"/><name pos:line="516" pos:column="42">p0<pos:position pos:line="516" pos:column="44"/></name></decl>, <decl><type ref="prev"/><name pos:line="516" pos:column="46">p1<pos:position pos:line="516" pos:column="48"/></name></decl>;<pos:position pos:line="516" pos:column="49"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="517" pos:column="13">char<pos:position pos:line="517" pos:column="17"/></name> <modifier pos:line="517" pos:column="18">*<pos:position pos:line="517" pos:column="19"/></modifier></type><name pos:line="517" pos:column="19">pstr<pos:position pos:line="517" pos:column="23"/></name></decl>;<pos:position pos:line="517" pos:column="24"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="518" pos:column="13">char<pos:position pos:line="518" pos:column="17"/></name> <modifier pos:line="518" pos:column="18">*<pos:position pos:line="518" pos:column="19"/></modifier></type><name pos:line="518" pos:column="19">tok_cntx<pos:position pos:line="518" pos:column="27"/></name></decl>;<pos:position pos:line="518" pos:column="28"/></decl_stmt>

<comment type="block" pos:line="520" pos:column="1">/* FIXME: Check PASV against RFC1123 */</comment>

            <expr_stmt><expr><name pos:line="522" pos:column="13">pstr<pos:position pos:line="522" pos:column="17"/></name> <operator pos:line="522" pos:column="18">=<pos:position pos:line="522" pos:column="19"/></operator> <name pos:line="522" pos:column="20">ftpmessage<pos:position pos:line="522" pos:column="30"/></name></expr>;<pos:position pos:line="522" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="523" pos:column="13">pstr<pos:position pos:line="523" pos:column="17"/></name> <operator pos:line="523" pos:column="18">=<pos:position pos:line="523" pos:column="19"/></operator> <call><name pos:line="523" pos:column="20">apr_strtok<pos:position pos:line="523" pos:column="30"/></name><argument_list pos:line="523" pos:column="30">(<argument><expr><name pos:line="523" pos:column="31">pstr<pos:position pos:line="523" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="523" pos:column="37">" "<pos:position pos:line="523" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="523" pos:column="42">&amp;<pos:position pos:line="523" pos:column="47"/></operator><name pos:line="523" pos:column="43">tok_cntx<pos:position pos:line="523" pos:column="51"/></name></expr></argument>)<pos:position pos:line="523" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="523" pos:column="53"/></expr_stmt>    <comment type="block" pos:line="523" pos:column="57">/* separate result code */</comment>
            <if pos:line="524" pos:column="13">if <condition pos:line="524" pos:column="16">(<expr><name pos:line="524" pos:column="17">pstr<pos:position pos:line="524" pos:column="21"/></name> <operator pos:line="524" pos:column="22">!=<pos:position pos:line="524" pos:column="24"/></operator> <name pos:line="524" pos:column="25">NULL<pos:position pos:line="524" pos:column="29"/></name></expr>)<pos:position pos:line="524" pos:column="30"/></condition><then pos:line="524" pos:column="30"> <block pos:line="524" pos:column="31">{
                <if pos:line="525" pos:column="17">if <condition pos:line="525" pos:column="20">(<expr><operator pos:line="525" pos:column="21">*<pos:position pos:line="525" pos:column="22"/></operator><operator pos:line="525" pos:column="22">(<pos:position pos:line="525" pos:column="23"/></operator><name pos:line="525" pos:column="23">pstr<pos:position pos:line="525" pos:column="27"/></name> <operator pos:line="525" pos:column="28">+<pos:position pos:line="525" pos:column="29"/></operator> <call><name pos:line="525" pos:column="30">strlen<pos:position pos:line="525" pos:column="36"/></name><argument_list pos:line="525" pos:column="36">(<argument><expr><name pos:line="525" pos:column="37">pstr<pos:position pos:line="525" pos:column="41"/></name></expr></argument>)<pos:position pos:line="525" pos:column="42"/></argument_list></call> <operator pos:line="525" pos:column="43">+<pos:position pos:line="525" pos:column="44"/></operator> <literal type="number" pos:line="525" pos:column="45">1<pos:position pos:line="525" pos:column="46"/></literal><operator pos:line="525" pos:column="46">)<pos:position pos:line="525" pos:column="47"/></operator> <operator pos:line="525" pos:column="48">==<pos:position pos:line="525" pos:column="50"/></operator> <literal type="char" pos:line="525" pos:column="51">'='<pos:position pos:line="525" pos:column="54"/></literal></expr>)<pos:position pos:line="525" pos:column="55"/></condition><then pos:line="525" pos:column="55"> <block pos:line="525" pos:column="56">{
                    <expr_stmt><expr><name pos:line="526" pos:column="21">pstr<pos:position pos:line="526" pos:column="25"/></name> <operator pos:line="526" pos:column="26">+=<pos:position pos:line="526" pos:column="28"/></operator> <call><name pos:line="526" pos:column="29">strlen<pos:position pos:line="526" pos:column="35"/></name><argument_list pos:line="526" pos:column="35">(<argument><expr><name pos:line="526" pos:column="36">pstr<pos:position pos:line="526" pos:column="40"/></name></expr></argument>)<pos:position pos:line="526" pos:column="41"/></argument_list></call> <operator pos:line="526" pos:column="42">+<pos:position pos:line="526" pos:column="43"/></operator> <literal type="number" pos:line="526" pos:column="44">2<pos:position pos:line="526" pos:column="45"/></literal></expr>;<pos:position pos:line="526" pos:column="46"/></expr_stmt>
                }<pos:position pos:line="527" pos:column="18"/></block></then>
                <else pos:line="528" pos:column="17">else <block pos:line="528" pos:column="22">{
                    <expr_stmt><expr><name pos:line="529" pos:column="21">pstr<pos:position pos:line="529" pos:column="25"/></name> <operator pos:line="529" pos:column="26">=<pos:position pos:line="529" pos:column="27"/></operator> <call><name pos:line="529" pos:column="28">apr_strtok<pos:position pos:line="529" pos:column="38"/></name><argument_list pos:line="529" pos:column="38">(<argument><expr><name pos:line="529" pos:column="39">NULL<pos:position pos:line="529" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="529" pos:column="45">"("<pos:position pos:line="529" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="529" pos:column="50">&amp;<pos:position pos:line="529" pos:column="55"/></operator><name pos:line="529" pos:column="51">tok_cntx<pos:position pos:line="529" pos:column="59"/></name></expr></argument>)<pos:position pos:line="529" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="529" pos:column="61"/></expr_stmt>    <comment type="block" pos:line="529" pos:column="65">/* separate address &amp;
                                                                 * port params */</comment>
                    <if pos:line="531" pos:column="21">if <condition pos:line="531" pos:column="24">(<expr><name pos:line="531" pos:column="25">pstr<pos:position pos:line="531" pos:column="29"/></name> <operator pos:line="531" pos:column="30">!=<pos:position pos:line="531" pos:column="32"/></operator> <name pos:line="531" pos:column="33">NULL<pos:position pos:line="531" pos:column="37"/></name></expr>)<pos:position pos:line="531" pos:column="38"/></condition><then pos:line="531" pos:column="38">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="532" pos:column="25">pstr<pos:position pos:line="532" pos:column="29"/></name> <operator pos:line="532" pos:column="30">=<pos:position pos:line="532" pos:column="31"/></operator> <call><name pos:line="532" pos:column="32">apr_strtok<pos:position pos:line="532" pos:column="42"/></name><argument_list pos:line="532" pos:column="42">(<argument><expr><name pos:line="532" pos:column="43">NULL<pos:position pos:line="532" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="532" pos:column="49">")"<pos:position pos:line="532" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="532" pos:column="54">&amp;<pos:position pos:line="532" pos:column="59"/></operator><name pos:line="532" pos:column="55">tok_cntx<pos:position pos:line="532" pos:column="63"/></name></expr></argument>)<pos:position pos:line="532" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="532" pos:column="65"/></expr_stmt></block></then></if>
                }<pos:position pos:line="533" pos:column="18"/></block></else></if>
            }<pos:position pos:line="534" pos:column="14"/></block></then></if>

<comment type="block" pos:line="536" pos:column="1">/* FIXME: Only supports IPV4 - fix in RFC2428 */</comment>

            <if pos:line="538" pos:column="13">if <condition pos:line="538" pos:column="16">(<expr><name pos:line="538" pos:column="17">pstr<pos:position pos:line="538" pos:column="21"/></name> <operator pos:line="538" pos:column="22">!=<pos:position pos:line="538" pos:column="24"/></operator> <name pos:line="538" pos:column="25">NULL<pos:position pos:line="538" pos:column="29"/></name> <operator pos:line="538" pos:column="30">&amp;&amp;<pos:position pos:line="538" pos:column="40"/></operator> <operator pos:line="538" pos:column="33">(<pos:position pos:line="538" pos:column="34"/></operator><call><name pos:line="538" pos:column="34">sscanf<pos:position pos:line="538" pos:column="40"/></name><argument_list pos:line="538" pos:column="40">(<argument><expr><name pos:line="538" pos:column="41">pstr<pos:position pos:line="538" pos:column="45"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="539" pos:column="18">"%d,%d,%d,%d,%d,%d"<pos:position pos:line="539" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="539" pos:column="39">&amp;<pos:position pos:line="539" pos:column="44"/></operator><name pos:line="539" pos:column="40">h3<pos:position pos:line="539" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="539" pos:column="44">&amp;<pos:position pos:line="539" pos:column="49"/></operator><name pos:line="539" pos:column="45">h2<pos:position pos:line="539" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="539" pos:column="49">&amp;<pos:position pos:line="539" pos:column="54"/></operator><name pos:line="539" pos:column="50">h1<pos:position pos:line="539" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="539" pos:column="54">&amp;<pos:position pos:line="539" pos:column="59"/></operator><name pos:line="539" pos:column="55">h0<pos:position pos:line="539" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="539" pos:column="59">&amp;<pos:position pos:line="539" pos:column="64"/></operator><name pos:line="539" pos:column="60">p1<pos:position pos:line="539" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="539" pos:column="64">&amp;<pos:position pos:line="539" pos:column="69"/></operator><name pos:line="539" pos:column="65">p0<pos:position pos:line="539" pos:column="67"/></name></expr></argument>)<pos:position pos:line="539" pos:column="68"/></argument_list></call> <operator pos:line="539" pos:column="69">==<pos:position pos:line="539" pos:column="71"/></operator> <literal type="number" pos:line="539" pos:column="72">6<pos:position pos:line="539" pos:column="73"/></literal><operator pos:line="539" pos:column="73">)<pos:position pos:line="539" pos:column="74"/></operator></expr>)<pos:position pos:line="539" pos:column="75"/></condition><then pos:line="539" pos:column="75"> <block pos:line="539" pos:column="76">{

                <decl_stmt><decl><type><name pos:line="541" pos:column="17">apr_sockaddr_t<pos:position pos:line="541" pos:column="31"/></name> <modifier pos:line="541" pos:column="32">*<pos:position pos:line="541" pos:column="33"/></modifier></type><name pos:line="541" pos:column="33">pasv_addr<pos:position pos:line="541" pos:column="42"/></name></decl>;<pos:position pos:line="541" pos:column="43"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="542" pos:column="17">apr_port_t<pos:position pos:line="542" pos:column="27"/></name></type> <name pos:line="542" pos:column="28">pasvport<pos:position pos:line="542" pos:column="36"/></name> <init pos:line="542" pos:column="37">= <expr><operator pos:line="542" pos:column="39">(<pos:position pos:line="542" pos:column="40"/></operator><name pos:line="542" pos:column="40">p1<pos:position pos:line="542" pos:column="42"/></name> <operator pos:line="542" pos:column="43">&lt;&lt;<pos:position pos:line="542" pos:column="51"/></operator> <literal type="number" pos:line="542" pos:column="46">8<pos:position pos:line="542" pos:column="47"/></literal><operator pos:line="542" pos:column="47">)<pos:position pos:line="542" pos:column="48"/></operator> <operator pos:line="542" pos:column="49">+<pos:position pos:line="542" pos:column="50"/></operator> <name pos:line="542" pos:column="51">p0<pos:position pos:line="542" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="542" pos:column="54"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="543" pos:column="17">ap_log_error<pos:position pos:line="543" pos:column="29"/></name><argument_list pos:line="543" pos:column="29">(<argument><expr><name pos:line="543" pos:column="30">APLOG_MARK<pos:position pos:line="543" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="543" pos:column="42">APLOG_DEBUG<pos:position pos:line="543" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="543" pos:column="55">0<pos:position pos:line="543" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="543" pos:column="58">r<pos:position pos:line="543" pos:column="59"/></name><operator pos:line="543" pos:column="59">-&gt;<pos:position pos:line="543" pos:column="64"/></operator><name pos:line="543" pos:column="61">server<pos:position pos:line="543" pos:column="67"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="544" pos:column="27">"proxy: FTP: PASV contacting host %d.%d.%d.%d:%d"<pos:position pos:line="544" pos:column="76"/></literal></expr></argument>,
                             <argument><expr><name pos:line="545" pos:column="30">h3<pos:position pos:line="545" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="545" pos:column="34">h2<pos:position pos:line="545" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="545" pos:column="38">h1<pos:position pos:line="545" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="545" pos:column="42">h0<pos:position pos:line="545" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="545" pos:column="46">pasvport<pos:position pos:line="545" pos:column="54"/></name></expr></argument>)<pos:position pos:line="545" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="545" pos:column="56"/></expr_stmt>

                <if pos:line="547" pos:column="17">if <condition pos:line="547" pos:column="20">(<expr><operator pos:line="547" pos:column="21">(<pos:position pos:line="547" pos:column="22"/></operator><name pos:line="547" pos:column="22">rv<pos:position pos:line="547" pos:column="24"/></name> <operator pos:line="547" pos:column="25">=<pos:position pos:line="547" pos:column="26"/></operator> <call><name pos:line="547" pos:column="27">apr_socket_create<pos:position pos:line="547" pos:column="44"/></name><argument_list pos:line="547" pos:column="44">(<argument><expr><operator pos:line="547" pos:column="45">&amp;<pos:position pos:line="547" pos:column="50"/></operator><name pos:line="547" pos:column="46">data_sock<pos:position pos:line="547" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="547" pos:column="57">connect_addr<pos:position pos:line="547" pos:column="69"/></name><operator pos:line="547" pos:column="69">-&gt;<pos:position pos:line="547" pos:column="74"/></operator><name pos:line="547" pos:column="71">family<pos:position pos:line="547" pos:column="77"/></name></name></expr></argument>, <argument><expr><name pos:line="547" pos:column="79">SOCK_STREAM<pos:position pos:line="547" pos:column="90"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="547" pos:column="92">0<pos:position pos:line="547" pos:column="93"/></literal></expr></argument>, <argument><expr><name><name pos:line="547" pos:column="95">r<pos:position pos:line="547" pos:column="96"/></name><operator pos:line="547" pos:column="96">-&gt;<pos:position pos:line="547" pos:column="101"/></operator><name pos:line="547" pos:column="98">pool<pos:position pos:line="547" pos:column="102"/></name></name></expr></argument>)<pos:position pos:line="547" pos:column="103"/></argument_list></call><operator pos:line="547" pos:column="103">)<pos:position pos:line="547" pos:column="104"/></operator> <operator pos:line="547" pos:column="105">!=<pos:position pos:line="547" pos:column="107"/></operator> <name pos:line="547" pos:column="108">APR_SUCCESS<pos:position pos:line="547" pos:column="119"/></name></expr>)<pos:position pos:line="547" pos:column="120"/></condition><then pos:line="547" pos:column="120"> <block pos:line="547" pos:column="121">{
                    <expr_stmt><expr><call><name pos:line="548" pos:column="21">ap_log_rerror<pos:position pos:line="548" pos:column="34"/></name><argument_list pos:line="548" pos:column="34">(<argument><expr><name pos:line="548" pos:column="35">APLOG_MARK<pos:position pos:line="548" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="548" pos:column="47">APLOG_ERR<pos:position pos:line="548" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="548" pos:column="58">rv<pos:position pos:line="548" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="548" pos:column="62">r<pos:position pos:line="548" pos:column="63"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="549" pos:column="35">"proxy: error creating PASV socket"<pos:position pos:line="549" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="549" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="549" pos:column="72"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="550" pos:column="21">proxy_ftp_cleanup<pos:position pos:line="550" pos:column="38"/></name><argument_list pos:line="550" pos:column="38">(<argument><expr><name pos:line="550" pos:column="39">r<pos:position pos:line="550" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="550" pos:column="42">backend<pos:position pos:line="550" pos:column="49"/></name></expr></argument>)<pos:position pos:line="550" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="550" pos:column="51"/></expr_stmt>
                    <return pos:line="551" pos:column="21">return <expr><name pos:line="551" pos:column="28">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="551" pos:column="54"/></name></expr>;<pos:position pos:line="551" pos:column="55"/></return>
                }<pos:position pos:line="552" pos:column="18"/></block></then></if>

                <if pos:line="554" pos:column="17">if <condition pos:line="554" pos:column="20">(<expr><name><name pos:line="554" pos:column="21">conf<pos:position pos:line="554" pos:column="25"/></name><operator pos:line="554" pos:column="25">-&gt;<pos:position pos:line="554" pos:column="30"/></operator><name pos:line="554" pos:column="27">recv_buffer_size<pos:position pos:line="554" pos:column="43"/></name></name> <operator pos:line="554" pos:column="44">&gt;<pos:position pos:line="554" pos:column="48"/></operator> <literal type="number" pos:line="554" pos:column="46">0<pos:position pos:line="554" pos:column="47"/></literal>
                        <operator pos:line="555" pos:column="25">&amp;&amp;<pos:position pos:line="555" pos:column="35"/></operator> <operator pos:line="555" pos:column="28">(<pos:position pos:line="555" pos:column="29"/></operator><name pos:line="555" pos:column="29">rv<pos:position pos:line="555" pos:column="31"/></name> <operator pos:line="555" pos:column="32">=<pos:position pos:line="555" pos:column="33"/></operator> <call><name pos:line="555" pos:column="34">apr_socket_opt_set<pos:position pos:line="555" pos:column="52"/></name><argument_list pos:line="555" pos:column="52">(<argument><expr><name pos:line="555" pos:column="53">data_sock<pos:position pos:line="555" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="555" pos:column="64">APR_SO_RCVBUF<pos:position pos:line="555" pos:column="77"/></name></expr></argument>,
                                                    <argument><expr><name><name pos:line="556" pos:column="53">conf<pos:position pos:line="556" pos:column="57"/></name><operator pos:line="556" pos:column="57">-&gt;<pos:position pos:line="556" pos:column="62"/></operator><name pos:line="556" pos:column="59">recv_buffer_size<pos:position pos:line="556" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="556" pos:column="76"/></argument_list></call><operator pos:line="556" pos:column="76">)<pos:position pos:line="556" pos:column="77"/></operator></expr>)<pos:position pos:line="556" pos:column="78"/></condition><then pos:line="556" pos:column="78"> <block pos:line="556" pos:column="79">{
                    <expr_stmt><expr><call><name pos:line="557" pos:column="21">ap_log_rerror<pos:position pos:line="557" pos:column="34"/></name><argument_list pos:line="557" pos:column="34">(<argument><expr><name pos:line="557" pos:column="35">APLOG_MARK<pos:position pos:line="557" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="557" pos:column="47">APLOG_ERR<pos:position pos:line="557" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="557" pos:column="58">rv<pos:position pos:line="557" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="557" pos:column="62">r<pos:position pos:line="557" pos:column="63"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="558" pos:column="35">"proxy: FTP: apr_socket_opt_set(SO_RCVBUF): Failed to set ProxyReceiveBufferSize, using default"<pos:position pos:line="558" pos:column="131"/></literal></expr></argument>)<pos:position pos:line="558" pos:column="132"/></argument_list></call></expr>;<pos:position pos:line="558" pos:column="133"/></expr_stmt>
                }<pos:position pos:line="559" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="561" pos:column="17">rv<pos:position pos:line="561" pos:column="19"/></name> <operator pos:line="561" pos:column="20">=<pos:position pos:line="561" pos:column="21"/></operator> <call><name pos:line="561" pos:column="22">apr_socket_opt_set<pos:position pos:line="561" pos:column="40"/></name><argument_list pos:line="561" pos:column="40">(<argument><expr><name pos:line="561" pos:column="41">data_sock<pos:position pos:line="561" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="561" pos:column="52">APR_TCP_NODELAY<pos:position pos:line="561" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="561" pos:column="69">1<pos:position pos:line="561" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="561" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="561" pos:column="72"/></expr_stmt>
                <if pos:line="562" pos:column="17">if <condition pos:line="562" pos:column="20">(<expr><name pos:line="562" pos:column="21">rv<pos:position pos:line="562" pos:column="23"/></name> <operator pos:line="562" pos:column="24">!=<pos:position pos:line="562" pos:column="26"/></operator> <name pos:line="562" pos:column="27">APR_SUCCESS<pos:position pos:line="562" pos:column="38"/></name> <operator pos:line="562" pos:column="39">&amp;&amp;<pos:position pos:line="562" pos:column="49"/></operator> <name pos:line="562" pos:column="42">rv<pos:position pos:line="562" pos:column="44"/></name> <operator pos:line="562" pos:column="45">!=<pos:position pos:line="562" pos:column="47"/></operator> <name pos:line="562" pos:column="48">APR_ENOTIMPL<pos:position pos:line="562" pos:column="60"/></name></expr>)<pos:position pos:line="562" pos:column="61"/></condition><then pos:line="562" pos:column="61"> <block pos:line="562" pos:column="62">{
                    <expr_stmt><expr><call><name pos:line="563" pos:column="21">ap_log_rerror<pos:position pos:line="563" pos:column="34"/></name><argument_list pos:line="563" pos:column="34">(<argument><expr><name pos:line="563" pos:column="35">APLOG_MARK<pos:position pos:line="563" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="563" pos:column="47">APLOG_ERR<pos:position pos:line="563" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="563" pos:column="58">rv<pos:position pos:line="563" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="563" pos:column="62">r<pos:position pos:line="563" pos:column="63"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="564" pos:column="34">"apr_socket_opt_set(APR_TCP_NODELAY): Failed to set"<pos:position pos:line="564" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="564" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="564" pos:column="88"/></expr_stmt>
                }<pos:position pos:line="565" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="567" pos:column="17">/* make the connection */</comment>
                <expr_stmt><expr><call><name pos:line="568" pos:column="17">apr_sockaddr_info_get<pos:position pos:line="568" pos:column="38"/></name><argument_list pos:line="568" pos:column="38">(<argument><expr><operator pos:line="568" pos:column="39">&amp;<pos:position pos:line="568" pos:column="44"/></operator><name pos:line="568" pos:column="40">pasv_addr<pos:position pos:line="568" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="568" pos:column="51">apr_psprintf<pos:position pos:line="568" pos:column="63"/></name><argument_list pos:line="568" pos:column="63">(<argument><expr><name pos:line="568" pos:column="64">p<pos:position pos:line="568" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="568" pos:column="67">"%d.%d.%d.%d"<pos:position pos:line="568" pos:column="80"/></literal></expr></argument>, <argument><expr><name pos:line="568" pos:column="82">h3<pos:position pos:line="568" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="568" pos:column="86">h2<pos:position pos:line="568" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="568" pos:column="90">h1<pos:position pos:line="568" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="568" pos:column="94">h0<pos:position pos:line="568" pos:column="96"/></name></expr></argument>)<pos:position pos:line="568" pos:column="97"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="568" pos:column="99">connect_addr<pos:position pos:line="568" pos:column="111"/></name><operator pos:line="568" pos:column="111">-&gt;<pos:position pos:line="568" pos:column="116"/></operator><name pos:line="568" pos:column="113">family<pos:position pos:line="568" pos:column="119"/></name></name></expr></argument>, <argument><expr><name pos:line="568" pos:column="121">pasvport<pos:position pos:line="568" pos:column="129"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="568" pos:column="131">0<pos:position pos:line="568" pos:column="132"/></literal></expr></argument>, <argument><expr><name pos:line="568" pos:column="134">p<pos:position pos:line="568" pos:column="135"/></name></expr></argument>)<pos:position pos:line="568" pos:column="136"/></argument_list></call></expr>;<pos:position pos:line="568" pos:column="137"/></expr_stmt>
                <expr_stmt><expr><name pos:line="569" pos:column="17">rv<pos:position pos:line="569" pos:column="19"/></name> <operator pos:line="569" pos:column="20">=<pos:position pos:line="569" pos:column="21"/></operator> <call><name pos:line="569" pos:column="22">apr_socket_connect<pos:position pos:line="569" pos:column="40"/></name><argument_list pos:line="569" pos:column="40">(<argument><expr><name pos:line="569" pos:column="41">data_sock<pos:position pos:line="569" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="569" pos:column="52">pasv_addr<pos:position pos:line="569" pos:column="61"/></name></expr></argument>)<pos:position pos:line="569" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="569" pos:column="63"/></expr_stmt>
                <if pos:line="570" pos:column="17">if <condition pos:line="570" pos:column="20">(<expr><name pos:line="570" pos:column="21">rv<pos:position pos:line="570" pos:column="23"/></name> <operator pos:line="570" pos:column="24">!=<pos:position pos:line="570" pos:column="26"/></operator> <name pos:line="570" pos:column="27">APR_SUCCESS<pos:position pos:line="570" pos:column="38"/></name></expr>)<pos:position pos:line="570" pos:column="39"/></condition><then pos:line="570" pos:column="39"> <block pos:line="570" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="571" pos:column="21">ap_log_error<pos:position pos:line="571" pos:column="33"/></name><argument_list pos:line="571" pos:column="33">(<argument><expr><name pos:line="571" pos:column="34">APLOG_MARK<pos:position pos:line="571" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="571" pos:column="46">APLOG_ERR<pos:position pos:line="571" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="571" pos:column="57">rv<pos:position pos:line="571" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="571" pos:column="61">r<pos:position pos:line="571" pos:column="62"/></name><operator pos:line="571" pos:column="62">-&gt;<pos:position pos:line="571" pos:column="67"/></operator><name pos:line="571" pos:column="64">server<pos:position pos:line="571" pos:column="70"/></name></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="572" pos:column="34">"proxy: FTP: PASV attempt to connect to %pI failed - Firewall/NAT?"<pos:position pos:line="572" pos:column="101"/></literal></expr></argument>, <argument><expr><name pos:line="572" pos:column="103">pasv_addr<pos:position pos:line="572" pos:column="112"/></name></expr></argument>)<pos:position pos:line="572" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="572" pos:column="114"/></expr_stmt>
                    <return pos:line="573" pos:column="21">return <expr><call><name pos:line="573" pos:column="28">ftp_proxyerror<pos:position pos:line="573" pos:column="42"/></name><argument_list pos:line="573" pos:column="42">(<argument><expr><name pos:line="573" pos:column="43">r<pos:position pos:line="573" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="573" pos:column="46">backend<pos:position pos:line="573" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="573" pos:column="55">HTTP_BAD_GATEWAY<pos:position pos:line="573" pos:column="71"/></name></expr></argument>, <argument><expr><call><name pos:line="573" pos:column="73">apr_psprintf<pos:position pos:line="573" pos:column="85"/></name><argument_list pos:line="573" pos:column="85">(<argument><expr><name><name pos:line="573" pos:column="86">r<pos:position pos:line="573" pos:column="87"/></name><operator pos:line="573" pos:column="87">-&gt;<pos:position pos:line="573" pos:column="92"/></operator><name pos:line="573" pos:column="89">pool<pos:position pos:line="573" pos:column="93"/></name></name></expr></argument>,
                                                                           <argument><expr><literal type="string" pos:line="574" pos:column="76">"PASV attempt to connect to %pI failed - firewall/NAT?"<pos:position pos:line="574" pos:column="131"/></literal></expr></argument>, <argument><expr><name pos:line="574" pos:column="133">pasv_addr<pos:position pos:line="574" pos:column="142"/></name></expr></argument>)<pos:position pos:line="574" pos:column="143"/></argument_list></call></expr></argument>)<pos:position pos:line="574" pos:column="144"/></argument_list></call></expr>;<pos:position pos:line="574" pos:column="145"/></return>
                }<pos:position pos:line="575" pos:column="18"/></block></then>
                <else pos:line="576" pos:column="17">else <block pos:line="576" pos:column="22">{
                    <expr_stmt><expr><name pos:line="577" pos:column="21">connect<pos:position pos:line="577" pos:column="28"/></name> <operator pos:line="577" pos:column="29">=<pos:position pos:line="577" pos:column="30"/></operator> <literal type="number" pos:line="577" pos:column="31">1<pos:position pos:line="577" pos:column="32"/></literal></expr>;<pos:position pos:line="577" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="578" pos:column="18"/></block></else></if>
            }<pos:position pos:line="579" pos:column="14"/></block></then></if>
        }<pos:position pos:line="580" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="581" pos:column="6"/></block></then></if>
<comment type="block" pos:line="582" pos:column="1">/*bypass:*/</comment>

    <comment type="block" pos:line="584" pos:column="5">/* set up data connection - PORT */</comment>
    <if pos:line="585" pos:column="5">if <condition pos:line="585" pos:column="8">(<expr><operator pos:line="585" pos:column="9">!<pos:position pos:line="585" pos:column="10"/></operator><name pos:line="585" pos:column="10">connect<pos:position pos:line="585" pos:column="17"/></name></expr>)<pos:position pos:line="585" pos:column="18"/></condition><then pos:line="585" pos:column="18"> <block pos:line="585" pos:column="19">{
        <decl_stmt><decl><type><name pos:line="586" pos:column="9">apr_sockaddr_t<pos:position pos:line="586" pos:column="23"/></name> <modifier pos:line="586" pos:column="24">*<pos:position pos:line="586" pos:column="25"/></modifier></type><name pos:line="586" pos:column="25">local_addr<pos:position pos:line="586" pos:column="35"/></name></decl>;<pos:position pos:line="586" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="587" pos:column="9">char<pos:position pos:line="587" pos:column="13"/></name> <modifier pos:line="587" pos:column="14">*<pos:position pos:line="587" pos:column="15"/></modifier></type><name pos:line="587" pos:column="15">local_ip<pos:position pos:line="587" pos:column="23"/></name></decl>;<pos:position pos:line="587" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="588" pos:column="9">apr_port_t<pos:position pos:line="588" pos:column="19"/></name></type> <name pos:line="588" pos:column="20">local_port<pos:position pos:line="588" pos:column="30"/></name></decl>;<pos:position pos:line="588" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="589" pos:column="9">unsigned<pos:position pos:line="589" pos:column="17"/></name> <name pos:line="589" pos:column="18">int<pos:position pos:line="589" pos:column="21"/></name></type> <name pos:line="589" pos:column="22">h0<pos:position pos:line="589" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="589" pos:column="26">h1<pos:position pos:line="589" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="589" pos:column="30">h2<pos:position pos:line="589" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="589" pos:column="34">h3<pos:position pos:line="589" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="589" pos:column="38">p0<pos:position pos:line="589" pos:column="40"/></name></decl>, <decl><type ref="prev"/><name pos:line="589" pos:column="42">p1<pos:position pos:line="589" pos:column="44"/></name></decl>;<pos:position pos:line="589" pos:column="45"/></decl_stmt>

        <if pos:line="591" pos:column="9">if <condition pos:line="591" pos:column="12">(<expr><operator pos:line="591" pos:column="13">(<pos:position pos:line="591" pos:column="14"/></operator><name pos:line="591" pos:column="14">rv<pos:position pos:line="591" pos:column="16"/></name> <operator pos:line="591" pos:column="17">=<pos:position pos:line="591" pos:column="18"/></operator> <call><name pos:line="591" pos:column="19">apr_socket_create<pos:position pos:line="591" pos:column="36"/></name><argument_list pos:line="591" pos:column="36">(<argument><expr><operator pos:line="591" pos:column="37">&amp;<pos:position pos:line="591" pos:column="42"/></operator><name pos:line="591" pos:column="38">local_sock<pos:position pos:line="591" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="591" pos:column="50">connect_addr<pos:position pos:line="591" pos:column="62"/></name><operator pos:line="591" pos:column="62">-&gt;<pos:position pos:line="591" pos:column="67"/></operator><name pos:line="591" pos:column="64">family<pos:position pos:line="591" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="591" pos:column="72">SOCK_STREAM<pos:position pos:line="591" pos:column="83"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="591" pos:column="85">0<pos:position pos:line="591" pos:column="86"/></literal></expr></argument>, <argument><expr><name><name pos:line="591" pos:column="88">r<pos:position pos:line="591" pos:column="89"/></name><operator pos:line="591" pos:column="89">-&gt;<pos:position pos:line="591" pos:column="94"/></operator><name pos:line="591" pos:column="91">pool<pos:position pos:line="591" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="591" pos:column="96"/></argument_list></call><operator pos:line="591" pos:column="96">)<pos:position pos:line="591" pos:column="97"/></operator> <operator pos:line="591" pos:column="98">!=<pos:position pos:line="591" pos:column="100"/></operator> <name pos:line="591" pos:column="101">APR_SUCCESS<pos:position pos:line="591" pos:column="112"/></name></expr>)<pos:position pos:line="591" pos:column="113"/></condition><then pos:line="591" pos:column="113"> <block pos:line="591" pos:column="114">{
            <expr_stmt><expr><call><name pos:line="592" pos:column="13">ap_log_rerror<pos:position pos:line="592" pos:column="26"/></name><argument_list pos:line="592" pos:column="26">(<argument><expr><name pos:line="592" pos:column="27">APLOG_MARK<pos:position pos:line="592" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="592" pos:column="39">APLOG_ERR<pos:position pos:line="592" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="592" pos:column="50">rv<pos:position pos:line="592" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="592" pos:column="54">r<pos:position pos:line="592" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="593" pos:column="27">"proxy: FTP: error creating local socket"<pos:position pos:line="593" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="593" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="593" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="594" pos:column="13">proxy_ftp_cleanup<pos:position pos:line="594" pos:column="30"/></name><argument_list pos:line="594" pos:column="30">(<argument><expr><name pos:line="594" pos:column="31">r<pos:position pos:line="594" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="594" pos:column="34">backend<pos:position pos:line="594" pos:column="41"/></name></expr></argument>)<pos:position pos:line="594" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="594" pos:column="43"/></expr_stmt>
            <return pos:line="595" pos:column="13">return <expr><name pos:line="595" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="595" pos:column="46"/></name></expr>;<pos:position pos:line="595" pos:column="47"/></return>
        }<pos:position pos:line="596" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="597" pos:column="9">apr_socket_addr_get<pos:position pos:line="597" pos:column="28"/></name><argument_list pos:line="597" pos:column="28">(<argument><expr><operator pos:line="597" pos:column="29">&amp;<pos:position pos:line="597" pos:column="34"/></operator><name pos:line="597" pos:column="30">local_addr<pos:position pos:line="597" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="597" pos:column="42">APR_LOCAL<pos:position pos:line="597" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="597" pos:column="53">sock<pos:position pos:line="597" pos:column="57"/></name></expr></argument>)<pos:position pos:line="597" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="597" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><name pos:line="598" pos:column="9">local_port<pos:position pos:line="598" pos:column="19"/></name> <operator pos:line="598" pos:column="20">=<pos:position pos:line="598" pos:column="21"/></operator> <name><name pos:line="598" pos:column="22">local_addr<pos:position pos:line="598" pos:column="32"/></name><operator pos:line="598" pos:column="32">-&gt;<pos:position pos:line="598" pos:column="37"/></operator><name pos:line="598" pos:column="34">port<pos:position pos:line="598" pos:column="38"/></name></name></expr>;<pos:position pos:line="598" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="599" pos:column="9">apr_sockaddr_ip_get<pos:position pos:line="599" pos:column="28"/></name><argument_list pos:line="599" pos:column="28">(<argument><expr><operator pos:line="599" pos:column="29">&amp;<pos:position pos:line="599" pos:column="34"/></operator><name pos:line="599" pos:column="30">local_ip<pos:position pos:line="599" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="599" pos:column="40">local_addr<pos:position pos:line="599" pos:column="50"/></name></expr></argument>)<pos:position pos:line="599" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="599" pos:column="52"/></expr_stmt>

        <if pos:line="601" pos:column="9">if <condition pos:line="601" pos:column="12">(<expr><operator pos:line="601" pos:column="13">(<pos:position pos:line="601" pos:column="14"/></operator><name pos:line="601" pos:column="14">rv<pos:position pos:line="601" pos:column="16"/></name> <operator pos:line="601" pos:column="17">=<pos:position pos:line="601" pos:column="18"/></operator> <call><name pos:line="601" pos:column="19">apr_socket_opt_set<pos:position pos:line="601" pos:column="37"/></name><argument_list pos:line="601" pos:column="37">(<argument><expr><name pos:line="601" pos:column="38">local_sock<pos:position pos:line="601" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="601" pos:column="50">APR_SO_REUSEADDR<pos:position pos:line="601" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="601" pos:column="68">one<pos:position pos:line="601" pos:column="71"/></name></expr></argument>)<pos:position pos:line="601" pos:column="72"/></argument_list></call><operator pos:line="601" pos:column="72">)<pos:position pos:line="601" pos:column="73"/></operator>
                <operator pos:line="602" pos:column="17">!=<pos:position pos:line="602" pos:column="19"/></operator> <name pos:line="602" pos:column="20">APR_SUCCESS<pos:position pos:line="602" pos:column="31"/></name></expr>)<pos:position pos:line="602" pos:column="32"/></condition><then pos:line="602" pos:column="32"> <block pos:line="602" pos:column="33">{
<cpp:ifndef pos:line="603" pos:column="1">#<cpp:directive pos:line="603" pos:column="2">ifndef<pos:position pos:line="603" pos:column="8"/></cpp:directive> <name pos:line="603" pos:column="9">_OSD_POSIX<pos:position pos:line="603" pos:column="19"/></name></cpp:ifndef>              <comment type="block" pos:line="603" pos:column="33">/* BS2000 has this option "always on" */</comment>
            <expr_stmt><expr><call><name pos:line="604" pos:column="13">ap_log_rerror<pos:position pos:line="604" pos:column="26"/></name><argument_list pos:line="604" pos:column="26">(<argument><expr><name pos:line="604" pos:column="27">APLOG_MARK<pos:position pos:line="604" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="604" pos:column="39">APLOG_ERR<pos:position pos:line="604" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="604" pos:column="50">rv<pos:position pos:line="604" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="604" pos:column="54">r<pos:position pos:line="604" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="605" pos:column="27">"proxy: FTP: error setting reuseaddr option"<pos:position pos:line="605" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="605" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="605" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="606" pos:column="13">proxy_ftp_cleanup<pos:position pos:line="606" pos:column="30"/></name><argument_list pos:line="606" pos:column="30">(<argument><expr><name pos:line="606" pos:column="31">r<pos:position pos:line="606" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="606" pos:column="34">backend<pos:position pos:line="606" pos:column="41"/></name></expr></argument>)<pos:position pos:line="606" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="606" pos:column="43"/></expr_stmt>
            <return pos:line="607" pos:column="13">return <expr><name pos:line="607" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="607" pos:column="46"/></name></expr>;<pos:position pos:line="607" pos:column="47"/></return>
<cpp:endif pos:line="608" pos:column="1">#<cpp:directive pos:line="608" pos:column="2">endif<pos:position pos:line="608" pos:column="7"/></cpp:directive></cpp:endif>                          <comment type="block" pos:line="608" pos:column="33">/* _OSD_POSIX */</comment>
        }<pos:position pos:line="609" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="611" pos:column="9">apr_sockaddr_info_get<pos:position pos:line="611" pos:column="30"/></name><argument_list pos:line="611" pos:column="30">(<argument><expr><operator pos:line="611" pos:column="31">&amp;<pos:position pos:line="611" pos:column="36"/></operator><name pos:line="611" pos:column="32">local_addr<pos:position pos:line="611" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="611" pos:column="44">local_ip<pos:position pos:line="611" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="611" pos:column="54">APR_UNSPEC<pos:position pos:line="611" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="611" pos:column="66">local_port<pos:position pos:line="611" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="611" pos:column="78">0<pos:position pos:line="611" pos:column="79"/></literal></expr></argument>, <argument><expr><name><name pos:line="611" pos:column="81">r<pos:position pos:line="611" pos:column="82"/></name><operator pos:line="611" pos:column="82">-&gt;<pos:position pos:line="611" pos:column="87"/></operator><name pos:line="611" pos:column="84">pool<pos:position pos:line="611" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="611" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="611" pos:column="90"/></expr_stmt>

        <if pos:line="613" pos:column="9">if <condition pos:line="613" pos:column="12">(<expr><operator pos:line="613" pos:column="13">(<pos:position pos:line="613" pos:column="14"/></operator><name pos:line="613" pos:column="14">rv<pos:position pos:line="613" pos:column="16"/></name> <operator pos:line="613" pos:column="17">=<pos:position pos:line="613" pos:column="18"/></operator> <call><name pos:line="613" pos:column="19">apr_socket_bind<pos:position pos:line="613" pos:column="34"/></name><argument_list pos:line="613" pos:column="34">(<argument><expr><name pos:line="613" pos:column="35">local_sock<pos:position pos:line="613" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="613" pos:column="47">local_addr<pos:position pos:line="613" pos:column="57"/></name></expr></argument>)<pos:position pos:line="613" pos:column="58"/></argument_list></call><operator pos:line="613" pos:column="58">)<pos:position pos:line="613" pos:column="59"/></operator> <operator pos:line="613" pos:column="60">!=<pos:position pos:line="613" pos:column="62"/></operator> <name pos:line="613" pos:column="63">APR_SUCCESS<pos:position pos:line="613" pos:column="74"/></name></expr>)<pos:position pos:line="613" pos:column="75"/></condition><then pos:line="613" pos:column="75"> <block pos:line="613" pos:column="76">{
            <expr_stmt><expr><call><name pos:line="614" pos:column="13">ap_log_rerror<pos:position pos:line="614" pos:column="26"/></name><argument_list pos:line="614" pos:column="26">(<argument><expr><name pos:line="614" pos:column="27">APLOG_MARK<pos:position pos:line="614" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="614" pos:column="39">APLOG_ERR<pos:position pos:line="614" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="614" pos:column="50">rv<pos:position pos:line="614" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="614" pos:column="54">r<pos:position pos:line="614" pos:column="55"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="615" pos:column="13">"proxy: FTP: error binding to ftp data socket %pI"<pos:position pos:line="615" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="615" pos:column="65">local_addr<pos:position pos:line="615" pos:column="75"/></name></expr></argument>)<pos:position pos:line="615" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="615" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="616" pos:column="13">proxy_ftp_cleanup<pos:position pos:line="616" pos:column="30"/></name><argument_list pos:line="616" pos:column="30">(<argument><expr><name pos:line="616" pos:column="31">r<pos:position pos:line="616" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="616" pos:column="34">backend<pos:position pos:line="616" pos:column="41"/></name></expr></argument>)<pos:position pos:line="616" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="616" pos:column="43"/></expr_stmt>
            <return pos:line="617" pos:column="13">return <expr><name pos:line="617" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="617" pos:column="46"/></name></expr>;<pos:position pos:line="617" pos:column="47"/></return>
        }<pos:position pos:line="618" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="620" pos:column="9">/* only need a short queue */</comment>
        <if pos:line="621" pos:column="9">if <condition pos:line="621" pos:column="12">(<expr><operator pos:line="621" pos:column="13">(<pos:position pos:line="621" pos:column="14"/></operator><name pos:line="621" pos:column="14">rv<pos:position pos:line="621" pos:column="16"/></name> <operator pos:line="621" pos:column="17">=<pos:position pos:line="621" pos:column="18"/></operator> <call><name pos:line="621" pos:column="19">apr_socket_listen<pos:position pos:line="621" pos:column="36"/></name><argument_list pos:line="621" pos:column="36">(<argument><expr><name pos:line="621" pos:column="37">local_sock<pos:position pos:line="621" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="621" pos:column="49">2<pos:position pos:line="621" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="621" pos:column="51"/></argument_list></call><operator pos:line="621" pos:column="51">)<pos:position pos:line="621" pos:column="52"/></operator> <operator pos:line="621" pos:column="53">!=<pos:position pos:line="621" pos:column="55"/></operator> <name pos:line="621" pos:column="56">APR_SUCCESS<pos:position pos:line="621" pos:column="67"/></name></expr>)<pos:position pos:line="621" pos:column="68"/></condition><then pos:line="621" pos:column="68"> <block pos:line="621" pos:column="69">{
            <expr_stmt><expr><call><name pos:line="622" pos:column="13">ap_log_rerror<pos:position pos:line="622" pos:column="26"/></name><argument_list pos:line="622" pos:column="26">(<argument><expr><name pos:line="622" pos:column="27">APLOG_MARK<pos:position pos:line="622" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="622" pos:column="39">APLOG_ERR<pos:position pos:line="622" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="622" pos:column="50">rv<pos:position pos:line="622" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="622" pos:column="54">r<pos:position pos:line="622" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="623" pos:column="27">"proxy: FTP: error listening to ftp data socket %pI"<pos:position pos:line="623" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="623" pos:column="81">local_addr<pos:position pos:line="623" pos:column="91"/></name></expr></argument>)<pos:position pos:line="623" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="623" pos:column="93"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="624" pos:column="13">proxy_ftp_cleanup<pos:position pos:line="624" pos:column="30"/></name><argument_list pos:line="624" pos:column="30">(<argument><expr><name pos:line="624" pos:column="31">r<pos:position pos:line="624" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="624" pos:column="34">backend<pos:position pos:line="624" pos:column="41"/></name></expr></argument>)<pos:position pos:line="624" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="624" pos:column="43"/></expr_stmt>
            <return pos:line="625" pos:column="13">return <expr><name pos:line="625" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="625" pos:column="46"/></name></expr>;<pos:position pos:line="625" pos:column="47"/></return>
        }<pos:position pos:line="626" pos:column="10"/></block></then></if>

<comment type="block" pos:line="628" pos:column="1">/* FIXME: Sent PORT here */</comment>

        <if pos:line="630" pos:column="9">if <condition pos:line="630" pos:column="12">(<expr><name pos:line="630" pos:column="13">local_ip<pos:position pos:line="630" pos:column="21"/></name> <operator pos:line="630" pos:column="22">&amp;&amp;<pos:position pos:line="630" pos:column="32"/></operator> <operator pos:line="630" pos:column="25">(<pos:position pos:line="630" pos:column="26"/></operator><call><name pos:line="630" pos:column="26">sscanf<pos:position pos:line="630" pos:column="32"/></name><argument_list pos:line="630" pos:column="32">(<argument><expr><name pos:line="630" pos:column="33">local_ip<pos:position pos:line="630" pos:column="41"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="631" pos:column="33">"%d.%d.%d.%d"<pos:position pos:line="631" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="631" pos:column="48">&amp;<pos:position pos:line="631" pos:column="53"/></operator><name pos:line="631" pos:column="49">h3<pos:position pos:line="631" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="631" pos:column="53">&amp;<pos:position pos:line="631" pos:column="58"/></operator><name pos:line="631" pos:column="54">h2<pos:position pos:line="631" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="631" pos:column="58">&amp;<pos:position pos:line="631" pos:column="63"/></operator><name pos:line="631" pos:column="59">h1<pos:position pos:line="631" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="631" pos:column="63">&amp;<pos:position pos:line="631" pos:column="68"/></operator><name pos:line="631" pos:column="64">h0<pos:position pos:line="631" pos:column="66"/></name></expr></argument>)<pos:position pos:line="631" pos:column="67"/></argument_list></call> <operator pos:line="631" pos:column="68">==<pos:position pos:line="631" pos:column="70"/></operator> <literal type="number" pos:line="631" pos:column="71">4<pos:position pos:line="631" pos:column="72"/></literal><operator pos:line="631" pos:column="72">)<pos:position pos:line="631" pos:column="73"/></operator></expr>)<pos:position pos:line="631" pos:column="74"/></condition><then pos:line="631" pos:column="74"> <block pos:line="631" pos:column="75">{
            <expr_stmt><expr><name pos:line="632" pos:column="13">p1<pos:position pos:line="632" pos:column="15"/></name> <operator pos:line="632" pos:column="16">=<pos:position pos:line="632" pos:column="17"/></operator> <operator pos:line="632" pos:column="18">(<pos:position pos:line="632" pos:column="19"/></operator><name pos:line="632" pos:column="19">local_port<pos:position pos:line="632" pos:column="29"/></name> <operator pos:line="632" pos:column="30">&gt;&gt;<pos:position pos:line="632" pos:column="35"/></operator> <literal type="number" pos:line="632" pos:column="33">8<pos:position pos:line="632" pos:column="34"/></literal><operator pos:line="632" pos:column="34">)<pos:position pos:line="632" pos:column="35"/></operator></expr>;<pos:position pos:line="632" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><name pos:line="633" pos:column="13">p0<pos:position pos:line="633" pos:column="15"/></name> <operator pos:line="633" pos:column="16">=<pos:position pos:line="633" pos:column="17"/></operator> <operator pos:line="633" pos:column="18">(<pos:position pos:line="633" pos:column="19"/></operator><name pos:line="633" pos:column="19">local_port<pos:position pos:line="633" pos:column="29"/></name> <operator pos:line="633" pos:column="30">&amp;<pos:position pos:line="633" pos:column="35"/></operator> <literal type="number" pos:line="633" pos:column="32">0xFF<pos:position pos:line="633" pos:column="36"/></literal><operator pos:line="633" pos:column="36">)<pos:position pos:line="633" pos:column="37"/></operator></expr>;<pos:position pos:line="633" pos:column="38"/></expr_stmt>

            <expr_stmt><expr><name pos:line="635" pos:column="13">rc<pos:position pos:line="635" pos:column="15"/></name> <operator pos:line="635" pos:column="16">=<pos:position pos:line="635" pos:column="17"/></operator> <call><name pos:line="635" pos:column="18">proxy_ftp_command<pos:position pos:line="635" pos:column="35"/></name><argument_list pos:line="635" pos:column="35">(<argument><expr><call><name pos:line="635" pos:column="36">apr_psprintf<pos:position pos:line="635" pos:column="48"/></name><argument_list pos:line="635" pos:column="48">(<argument><expr><name pos:line="635" pos:column="49">p<pos:position pos:line="635" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="635" pos:column="52">"PORT %d,%d,%d,%d,%d,%d"<pos:position pos:line="635" pos:column="76"/></literal> <name pos:line="635" pos:column="77">CRLF<pos:position pos:line="635" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="635" pos:column="83">h3<pos:position pos:line="635" pos:column="85"/></name></expr></argument>, <argument><expr><name pos:line="635" pos:column="87">h2<pos:position pos:line="635" pos:column="89"/></name></expr></argument>, <argument><expr><name pos:line="635" pos:column="91">h1<pos:position pos:line="635" pos:column="93"/></name></expr></argument>, <argument><expr><name pos:line="635" pos:column="95">h0<pos:position pos:line="635" pos:column="97"/></name></expr></argument>, <argument><expr><name pos:line="635" pos:column="99">p1<pos:position pos:line="635" pos:column="101"/></name></expr></argument>, <argument><expr><name pos:line="635" pos:column="103">p0<pos:position pos:line="635" pos:column="105"/></name></expr></argument>)<pos:position pos:line="635" pos:column="106"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="636" pos:column="28">r<pos:position pos:line="636" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="636" pos:column="31">origin<pos:position pos:line="636" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="636" pos:column="39">bb<pos:position pos:line="636" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="636" pos:column="43">&amp;<pos:position pos:line="636" pos:column="48"/></operator><name pos:line="636" pos:column="44">ftpmessage<pos:position pos:line="636" pos:column="54"/></name></expr></argument>)<pos:position pos:line="636" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="636" pos:column="56"/></expr_stmt>
            <comment type="block" pos:line="637" pos:column="13">/* possible results: 200, 421, 500, 501, 502, 530 */</comment>
            <comment type="block" pos:line="638" pos:column="13">/* 200 Command okay. */</comment>
            <comment type="block" pos:line="639" pos:column="13">/* 421 Service not available, closing control connection. */</comment>
            <comment type="block" pos:line="640" pos:column="13">/* 500 Syntax error, command unrecognized. */</comment>
            <comment type="block" pos:line="641" pos:column="13">/* 501 Syntax error in parameters or arguments. */</comment>
            <comment type="block" pos:line="642" pos:column="13">/* 502 Command not implemented. */</comment>
            <comment type="block" pos:line="643" pos:column="13">/* 530 Not logged in. */</comment>
            <if pos:line="644" pos:column="13">if <condition pos:line="644" pos:column="16">(<expr><name pos:line="644" pos:column="17">rc<pos:position pos:line="644" pos:column="19"/></name> <operator pos:line="644" pos:column="20">==<pos:position pos:line="644" pos:column="22"/></operator> <operator pos:line="644" pos:column="23">-<pos:position pos:line="644" pos:column="24"/></operator><literal type="number" pos:line="644" pos:column="24">1<pos:position pos:line="644" pos:column="25"/></literal> <operator pos:line="644" pos:column="26">||<pos:position pos:line="644" pos:column="28"/></operator> <name pos:line="644" pos:column="29">rc<pos:position pos:line="644" pos:column="31"/></name> <operator pos:line="644" pos:column="32">==<pos:position pos:line="644" pos:column="34"/></operator> <literal type="number" pos:line="644" pos:column="35">421<pos:position pos:line="644" pos:column="38"/></literal></expr>)<pos:position pos:line="644" pos:column="39"/></condition><then pos:line="644" pos:column="39"> <block pos:line="644" pos:column="40">{
                <return pos:line="645" pos:column="17">return <expr><call><name pos:line="645" pos:column="24">ftp_proxyerror<pos:position pos:line="645" pos:column="38"/></name><argument_list pos:line="645" pos:column="38">(<argument><expr><name pos:line="645" pos:column="39">r<pos:position pos:line="645" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="645" pos:column="42">backend<pos:position pos:line="645" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="645" pos:column="51">HTTP_BAD_GATEWAY<pos:position pos:line="645" pos:column="67"/></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="646" pos:column="39">"Error reading from remote server"<pos:position pos:line="646" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="646" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="646" pos:column="75"/></return>
            }<pos:position pos:line="647" pos:column="14"/></block></then></if>
            <if pos:line="648" pos:column="13">if <condition pos:line="648" pos:column="16">(<expr><name pos:line="648" pos:column="17">rc<pos:position pos:line="648" pos:column="19"/></name> <operator pos:line="648" pos:column="20">!=<pos:position pos:line="648" pos:column="22"/></operator> <literal type="number" pos:line="648" pos:column="23">200<pos:position pos:line="648" pos:column="26"/></literal></expr>)<pos:position pos:line="648" pos:column="27"/></condition><then pos:line="648" pos:column="27"> <block pos:line="648" pos:column="28">{
                <return pos:line="649" pos:column="17">return <expr><call><name pos:line="649" pos:column="24">ftp_proxyerror<pos:position pos:line="649" pos:column="38"/></name><argument_list pos:line="649" pos:column="38">(<argument><expr><name pos:line="649" pos:column="39">r<pos:position pos:line="649" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="649" pos:column="42">backend<pos:position pos:line="649" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="649" pos:column="51">HTTP_BAD_GATEWAY<pos:position pos:line="649" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="649" pos:column="69">buffer<pos:position pos:line="649" pos:column="75"/></name></expr></argument>)<pos:position pos:line="649" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="649" pos:column="77"/></return>
            }<pos:position pos:line="650" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="652" pos:column="13">/* signal that we must use the EPRT/PORT loop */</comment>
            <expr_stmt><expr><name pos:line="653" pos:column="13">use_port<pos:position pos:line="653" pos:column="21"/></name> <operator pos:line="653" pos:column="22">=<pos:position pos:line="653" pos:column="23"/></operator> <literal type="number" pos:line="653" pos:column="24">1<pos:position pos:line="653" pos:column="25"/></literal></expr>;<pos:position pos:line="653" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="654" pos:column="10"/></block></then>
        <else pos:line="655" pos:column="9">else <block pos:line="655" pos:column="14">{
<comment type="block" pos:line="656" pos:column="1">/* IPV6 FIXME:
 * The EPRT command replaces PORT where both IPV4 and IPV6 is supported. The first
 * number (1,2) indicates the protocol type. Examples:
 *   EPRT |1|132.235.1.2|6275|
 *   EPRT |2|1080::8:800:200C:417A|5282|
 */</comment>
            <return pos:line="662" pos:column="13">return <expr><call><name pos:line="662" pos:column="20">ftp_proxyerror<pos:position pos:line="662" pos:column="34"/></name><argument_list pos:line="662" pos:column="34">(<argument><expr><name pos:line="662" pos:column="35">r<pos:position pos:line="662" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="662" pos:column="38">backend<pos:position pos:line="662" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="662" pos:column="47">HTTP_NOT_IMPLEMENTED<pos:position pos:line="662" pos:column="67"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="663" pos:column="35">"Connect to IPV6 ftp server using EPRT not supported. Enable EPSV."<pos:position pos:line="663" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="663" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="663" pos:column="104"/></return>
        }<pos:position pos:line="664" pos:column="10"/></block></else></if>
    }<pos:position pos:line="665" pos:column="6"/></block></then></if>


    <comment type="block" pos:line="668" pos:column="5">/*
     * V: Set The Headers -------------------
     *
     * Get the size of the request, set up the environment for HTTP.
     */</comment>

    <comment type="block" pos:line="674" pos:column="5">/* set request; "path" holds last path component */</comment>
    <expr_stmt><expr><name pos:line="675" pos:column="5">len<pos:position pos:line="675" pos:column="8"/></name> <operator pos:line="675" pos:column="9">=<pos:position pos:line="675" pos:column="10"/></operator> <call><name pos:line="675" pos:column="11">decodeenc<pos:position pos:line="675" pos:column="20"/></name><argument_list pos:line="675" pos:column="20">(<argument><expr><name pos:line="675" pos:column="21">path<pos:position pos:line="675" pos:column="25"/></name></expr></argument>)<pos:position pos:line="675" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="675" pos:column="27"/></expr_stmt>

    <if pos:line="677" pos:column="5">if <condition pos:line="677" pos:column="8">(<expr><call><name pos:line="677" pos:column="9">strchr<pos:position pos:line="677" pos:column="15"/></name><argument_list pos:line="677" pos:column="15">(<argument><expr><name pos:line="677" pos:column="16">path<pos:position pos:line="677" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="677" pos:column="22">'/'<pos:position pos:line="677" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="677" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="677" pos:column="27"/></condition><then pos:line="677" pos:column="27"> <block pos:line="677" pos:column="28">{ <comment type="block" pos:line="677" pos:column="30">/* are there now any '/' characters? */</comment>
       <return pos:line="678" pos:column="8">return <expr><call><name pos:line="678" pos:column="15">ftp_proxyerror<pos:position pos:line="678" pos:column="29"/></name><argument_list pos:line="678" pos:column="29">(<argument><expr><name pos:line="678" pos:column="30">r<pos:position pos:line="678" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="678" pos:column="33">backend<pos:position pos:line="678" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="678" pos:column="42">HTTP_BAD_REQUEST<pos:position pos:line="678" pos:column="58"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="679" pos:column="30">"Use of /%2f is only allowed at the base directory"<pos:position pos:line="679" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="679" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="679" pos:column="83"/></return>
    }<pos:position pos:line="680" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="682" pos:column="5">/* If len == 0 then it must be a directory (you can't RETR nothing)
     * Also, don't allow to RETR by wildcard. Instead, create a dirlisting,
     * unless ProxyFtpListOnWildcard is off.
     */</comment>
    <if pos:line="686" pos:column="5">if <condition pos:line="686" pos:column="8">(<expr><name pos:line="686" pos:column="9">len<pos:position pos:line="686" pos:column="12"/></name> <operator pos:line="686" pos:column="13">==<pos:position pos:line="686" pos:column="15"/></operator> <literal type="number" pos:line="686" pos:column="16">0<pos:position pos:line="686" pos:column="17"/></literal> <operator pos:line="686" pos:column="18">||<pos:position pos:line="686" pos:column="20"/></operator> <operator pos:line="686" pos:column="21">(<pos:position pos:line="686" pos:column="22"/></operator><call><name pos:line="686" pos:column="22">ftp_check_globbingchars<pos:position pos:line="686" pos:column="45"/></name><argument_list pos:line="686" pos:column="45">(<argument><expr><name pos:line="686" pos:column="46">path<pos:position pos:line="686" pos:column="50"/></name></expr></argument>)<pos:position pos:line="686" pos:column="51"/></argument_list></call> <operator pos:line="686" pos:column="52">&amp;&amp;<pos:position pos:line="686" pos:column="62"/></operator> <name><name pos:line="686" pos:column="55">fdconf<pos:position pos:line="686" pos:column="61"/></name><operator pos:line="686" pos:column="61">-&gt;<pos:position pos:line="686" pos:column="66"/></operator><name pos:line="686" pos:column="63">ftp_list_on_wildcard<pos:position pos:line="686" pos:column="83"/></name></name><operator pos:line="686" pos:column="83">)<pos:position pos:line="686" pos:column="84"/></operator></expr>)<pos:position pos:line="686" pos:column="85"/></condition><then pos:line="686" pos:column="85"> <block pos:line="686" pos:column="86">{
        <expr_stmt><expr><name pos:line="687" pos:column="9">dirlisting<pos:position pos:line="687" pos:column="19"/></name> <operator pos:line="687" pos:column="20">=<pos:position pos:line="687" pos:column="21"/></operator> <literal type="number" pos:line="687" pos:column="22">1<pos:position pos:line="687" pos:column="23"/></literal></expr>;<pos:position pos:line="687" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="688" pos:column="6"/></block></then>
    <else pos:line="689" pos:column="5">else <block pos:line="689" pos:column="10">{
        <comment type="block" pos:line="690" pos:column="9">/* (from FreeBSD ftpd):
         * SIZE is not in RFC959, but Postel has blessed it and
         * it will be in the updated RFC.
         *
         * Return size of file in a format suitable for
         * using with RESTART (we just count bytes).
         */</comment>
        <comment type="block" pos:line="697" pos:column="9">/* from draft-ietf-ftpext-mlst-14.txt:
         * This value will
         * change depending on the current STRUcture, MODE and TYPE of the data
         * connection, or a data connection which would be created were one
         * created now.  Thus, the result of the SIZE command is dependent on
         * the currently established STRU, MODE and TYPE parameters.
         */</comment>
        <comment type="block" pos:line="704" pos:column="9">/* Therefore: switch to binary if the user did not specify ";type=a" */</comment>
        <expr_stmt><expr><call><name pos:line="705" pos:column="9">ftp_set_TYPE<pos:position pos:line="705" pos:column="21"/></name><argument_list pos:line="705" pos:column="21">(<argument><expr><name pos:line="705" pos:column="22">xfer_type<pos:position pos:line="705" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="705" pos:column="33">r<pos:position pos:line="705" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="705" pos:column="36">origin<pos:position pos:line="705" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="705" pos:column="44">bb<pos:position pos:line="705" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="705" pos:column="48">&amp;<pos:position pos:line="705" pos:column="53"/></operator><name pos:line="705" pos:column="49">ftpmessage<pos:position pos:line="705" pos:column="59"/></name></expr></argument>)<pos:position pos:line="705" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="705" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name pos:line="706" pos:column="9">rc<pos:position pos:line="706" pos:column="11"/></name> <operator pos:line="706" pos:column="12">=<pos:position pos:line="706" pos:column="13"/></operator> <call><name pos:line="706" pos:column="14">proxy_ftp_command<pos:position pos:line="706" pos:column="31"/></name><argument_list pos:line="706" pos:column="31">(<argument><expr><call><name pos:line="706" pos:column="32">apr_pstrcat<pos:position pos:line="706" pos:column="43"/></name><argument_list pos:line="706" pos:column="43">(<argument><expr><name pos:line="706" pos:column="44">p<pos:position pos:line="706" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="706" pos:column="47">"SIZE "<pos:position pos:line="706" pos:column="54"/></literal></expr></argument>,
                           <argument><expr><call><name pos:line="707" pos:column="28">ftp_escape_globbingchars<pos:position pos:line="707" pos:column="52"/></name><argument_list pos:line="707" pos:column="52">(<argument><expr><name pos:line="707" pos:column="53">p<pos:position pos:line="707" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="707" pos:column="56">path<pos:position pos:line="707" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="707" pos:column="62">fdconf<pos:position pos:line="707" pos:column="68"/></name></expr></argument>)<pos:position pos:line="707" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="707" pos:column="71">CRLF<pos:position pos:line="707" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="707" pos:column="77">NULL<pos:position pos:line="707" pos:column="81"/></name></expr></argument>)<pos:position pos:line="707" pos:column="82"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="708" pos:column="28">r<pos:position pos:line="708" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="708" pos:column="31">origin<pos:position pos:line="708" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="708" pos:column="39">bb<pos:position pos:line="708" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="708" pos:column="43">&amp;<pos:position pos:line="708" pos:column="48"/></operator><name pos:line="708" pos:column="44">ftpmessage<pos:position pos:line="708" pos:column="54"/></name></expr></argument>)<pos:position pos:line="708" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="708" pos:column="56"/></expr_stmt>
        <if pos:line="709" pos:column="9">if <condition pos:line="709" pos:column="12">(<expr><name pos:line="709" pos:column="13">rc<pos:position pos:line="709" pos:column="15"/></name> <operator pos:line="709" pos:column="16">==<pos:position pos:line="709" pos:column="18"/></operator> <operator pos:line="709" pos:column="19">-<pos:position pos:line="709" pos:column="20"/></operator><literal type="number" pos:line="709" pos:column="20">1<pos:position pos:line="709" pos:column="21"/></literal> <operator pos:line="709" pos:column="22">||<pos:position pos:line="709" pos:column="24"/></operator> <name pos:line="709" pos:column="25">rc<pos:position pos:line="709" pos:column="27"/></name> <operator pos:line="709" pos:column="28">==<pos:position pos:line="709" pos:column="30"/></operator> <literal type="number" pos:line="709" pos:column="31">421<pos:position pos:line="709" pos:column="34"/></literal></expr>)<pos:position pos:line="709" pos:column="35"/></condition><then pos:line="709" pos:column="35"> <block pos:line="709" pos:column="36">{
            <return pos:line="710" pos:column="13">return <expr><call><name pos:line="710" pos:column="20">ftp_proxyerror<pos:position pos:line="710" pos:column="34"/></name><argument_list pos:line="710" pos:column="34">(<argument><expr><name pos:line="710" pos:column="35">r<pos:position pos:line="710" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="710" pos:column="38">backend<pos:position pos:line="710" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="710" pos:column="47">HTTP_BAD_GATEWAY<pos:position pos:line="710" pos:column="63"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="711" pos:column="35">"Error reading from remote server"<pos:position pos:line="711" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="711" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="711" pos:column="71"/></return>
        }<pos:position pos:line="712" pos:column="10"/></block></then>
        <elseif pos:line="713" pos:column="9">else <if pos:line="713" pos:column="14">if <condition pos:line="713" pos:column="17">(<expr><name pos:line="713" pos:column="18">rc<pos:position pos:line="713" pos:column="20"/></name> <operator pos:line="713" pos:column="21">==<pos:position pos:line="713" pos:column="23"/></operator> <literal type="number" pos:line="713" pos:column="24">213<pos:position pos:line="713" pos:column="27"/></literal></expr>)<pos:position pos:line="713" pos:column="28"/></condition><then pos:line="713" pos:column="28"> <block pos:line="713" pos:column="29">{<comment type="block" pos:line="713" pos:column="30">/* Size command ok */</comment>
            <decl_stmt><decl><type><name pos:line="714" pos:column="13">int<pos:position pos:line="714" pos:column="16"/></name></type> <name pos:line="714" pos:column="17">j<pos:position pos:line="714" pos:column="18"/></name></decl>;<pos:position pos:line="714" pos:column="19"/></decl_stmt>
            <for pos:line="715" pos:column="13">for <control pos:line="715" pos:column="17">(<init><expr><name pos:line="715" pos:column="18">j<pos:position pos:line="715" pos:column="19"/></name> <operator pos:line="715" pos:column="20">=<pos:position pos:line="715" pos:column="21"/></operator> <literal type="number" pos:line="715" pos:column="22">0<pos:position pos:line="715" pos:column="23"/></literal></expr>;<pos:position pos:line="715" pos:column="24"/></init> <condition><expr><call><name pos:line="715" pos:column="25">apr_isdigit<pos:position pos:line="715" pos:column="36"/></name><argument_list pos:line="715" pos:column="36">(<argument><expr><name><name pos:line="715" pos:column="37">ftpmessage<pos:position pos:line="715" pos:column="47"/></name><index pos:line="715" pos:column="47">[<expr><name pos:line="715" pos:column="48">j<pos:position pos:line="715" pos:column="49"/></name></expr>]<pos:position pos:line="715" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="715" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="715" pos:column="52"/></condition> <incr><expr><name pos:line="715" pos:column="53">j<pos:position pos:line="715" pos:column="54"/></name><operator pos:line="715" pos:column="54">++<pos:position pos:line="715" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="715" pos:column="57"/></control>
                <block type="pseudo"><empty_stmt pos:line="716" pos:column="17">;<pos:position pos:line="716" pos:column="18"/></empty_stmt></block></for>
            <expr_stmt><expr><name><name pos:line="717" pos:column="13">ftpmessage<pos:position pos:line="717" pos:column="23"/></name><index pos:line="717" pos:column="23">[<expr><name pos:line="717" pos:column="24">j<pos:position pos:line="717" pos:column="25"/></name></expr>]<pos:position pos:line="717" pos:column="26"/></index></name> <operator pos:line="717" pos:column="27">=<pos:position pos:line="717" pos:column="28"/></operator> <literal type="char" pos:line="717" pos:column="29">'\0'<pos:position pos:line="717" pos:column="33"/></literal></expr>;<pos:position pos:line="717" pos:column="34"/></expr_stmt>
            <if pos:line="718" pos:column="13">if <condition pos:line="718" pos:column="16">(<expr><name><name pos:line="718" pos:column="17">ftpmessage<pos:position pos:line="718" pos:column="27"/></name><index pos:line="718" pos:column="27">[<expr><literal type="number" pos:line="718" pos:column="28">0<pos:position pos:line="718" pos:column="29"/></literal></expr>]<pos:position pos:line="718" pos:column="30"/></index></name> <operator pos:line="718" pos:column="31">!=<pos:position pos:line="718" pos:column="33"/></operator> <literal type="char" pos:line="718" pos:column="34">'\0'<pos:position pos:line="718" pos:column="38"/></literal></expr>)<pos:position pos:line="718" pos:column="39"/></condition><then pos:line="718" pos:column="39">
                 <block type="pseudo"><expr_stmt><expr><name pos:line="719" pos:column="18">size<pos:position pos:line="719" pos:column="22"/></name> <operator pos:line="719" pos:column="23">=<pos:position pos:line="719" pos:column="24"/></operator> <name pos:line="719" pos:column="25">ftpmessage<pos:position pos:line="719" pos:column="35"/></name></expr>;<pos:position pos:line="719" pos:column="36"/></expr_stmt></block></then></if> <comment type="block" pos:line="719" pos:column="37">/* already pstrdup'ed: no copy necessary */</comment>
        }<pos:position pos:line="720" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="721" pos:column="9">else <if pos:line="721" pos:column="14">if <condition pos:line="721" pos:column="17">(<expr><name pos:line="721" pos:column="18">rc<pos:position pos:line="721" pos:column="20"/></name> <operator pos:line="721" pos:column="21">==<pos:position pos:line="721" pos:column="23"/></operator> <literal type="number" pos:line="721" pos:column="24">550<pos:position pos:line="721" pos:column="27"/></literal></expr>)<pos:position pos:line="721" pos:column="28"/></condition><then pos:line="721" pos:column="28"> <block pos:line="721" pos:column="29">{    <comment type="block" pos:line="721" pos:column="34">/* Not a regular file */</comment>
            <expr_stmt><expr><call><name pos:line="722" pos:column="13">ap_log_error<pos:position pos:line="722" pos:column="25"/></name><argument_list pos:line="722" pos:column="25">(<argument><expr><name pos:line="722" pos:column="26">APLOG_MARK<pos:position pos:line="722" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="722" pos:column="38">APLOG_TRACE4<pos:position pos:line="722" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="722" pos:column="52">0<pos:position pos:line="722" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="722" pos:column="55">r<pos:position pos:line="722" pos:column="56"/></name><operator pos:line="722" pos:column="56">-&gt;<pos:position pos:line="722" pos:column="61"/></operator><name pos:line="722" pos:column="58">server<pos:position pos:line="722" pos:column="64"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="723" pos:column="26">"proxy: FTP: SIZE shows this is a directory"<pos:position pos:line="723" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="723" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="723" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><name pos:line="724" pos:column="13">dirlisting<pos:position pos:line="724" pos:column="23"/></name> <operator pos:line="724" pos:column="24">=<pos:position pos:line="724" pos:column="25"/></operator> <literal type="number" pos:line="724" pos:column="26">1<pos:position pos:line="724" pos:column="27"/></literal></expr>;<pos:position pos:line="724" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name pos:line="725" pos:column="13">rc<pos:position pos:line="725" pos:column="15"/></name> <operator pos:line="725" pos:column="16">=<pos:position pos:line="725" pos:column="17"/></operator> <call><name pos:line="725" pos:column="18">proxy_ftp_command<pos:position pos:line="725" pos:column="35"/></name><argument_list pos:line="725" pos:column="35">(<argument><expr><call><name pos:line="725" pos:column="36">apr_pstrcat<pos:position pos:line="725" pos:column="47"/></name><argument_list pos:line="725" pos:column="47">(<argument><expr><name pos:line="725" pos:column="48">p<pos:position pos:line="725" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="725" pos:column="51">"CWD "<pos:position pos:line="725" pos:column="57"/></literal></expr></argument>,
                           <argument><expr><call><name pos:line="726" pos:column="28">ftp_escape_globbingchars<pos:position pos:line="726" pos:column="52"/></name><argument_list pos:line="726" pos:column="52">(<argument><expr><name pos:line="726" pos:column="53">p<pos:position pos:line="726" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="726" pos:column="56">path<pos:position pos:line="726" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="726" pos:column="62">fdconf<pos:position pos:line="726" pos:column="68"/></name></expr></argument>)<pos:position pos:line="726" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="726" pos:column="71">CRLF<pos:position pos:line="726" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="726" pos:column="77">NULL<pos:position pos:line="726" pos:column="81"/></name></expr></argument>)<pos:position pos:line="726" pos:column="82"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="727" pos:column="28">r<pos:position pos:line="727" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="727" pos:column="31">origin<pos:position pos:line="727" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="727" pos:column="39">bb<pos:position pos:line="727" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="727" pos:column="43">&amp;<pos:position pos:line="727" pos:column="48"/></operator><name pos:line="727" pos:column="44">ftpmessage<pos:position pos:line="727" pos:column="54"/></name></expr></argument>)<pos:position pos:line="727" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="727" pos:column="56"/></expr_stmt>
            <comment type="block" pos:line="728" pos:column="13">/* possible results: 250, 421, 500, 501, 502, 530, 550 */</comment>
            <comment type="block" pos:line="729" pos:column="13">/* 250 Requested file action okay, completed. */</comment>
            <comment type="block" pos:line="730" pos:column="13">/* 421 Service not available, closing control connection. */</comment>
            <comment type="block" pos:line="731" pos:column="13">/* 500 Syntax error, command unrecognized. */</comment>
            <comment type="block" pos:line="732" pos:column="13">/* 501 Syntax error in parameters or arguments. */</comment>
            <comment type="block" pos:line="733" pos:column="13">/* 502 Command not implemented. */</comment>
            <comment type="block" pos:line="734" pos:column="13">/* 530 Not logged in. */</comment>
            <comment type="block" pos:line="735" pos:column="13">/* 550 Requested action not taken. */</comment>
            <if pos:line="736" pos:column="13">if <condition pos:line="736" pos:column="16">(<expr><name pos:line="736" pos:column="17">rc<pos:position pos:line="736" pos:column="19"/></name> <operator pos:line="736" pos:column="20">==<pos:position pos:line="736" pos:column="22"/></operator> <operator pos:line="736" pos:column="23">-<pos:position pos:line="736" pos:column="24"/></operator><literal type="number" pos:line="736" pos:column="24">1<pos:position pos:line="736" pos:column="25"/></literal> <operator pos:line="736" pos:column="26">||<pos:position pos:line="736" pos:column="28"/></operator> <name pos:line="736" pos:column="29">rc<pos:position pos:line="736" pos:column="31"/></name> <operator pos:line="736" pos:column="32">==<pos:position pos:line="736" pos:column="34"/></operator> <literal type="number" pos:line="736" pos:column="35">421<pos:position pos:line="736" pos:column="38"/></literal></expr>)<pos:position pos:line="736" pos:column="39"/></condition><then pos:line="736" pos:column="39"> <block pos:line="736" pos:column="40">{
                <return pos:line="737" pos:column="17">return <expr><call><name pos:line="737" pos:column="24">ftp_proxyerror<pos:position pos:line="737" pos:column="38"/></name><argument_list pos:line="737" pos:column="38">(<argument><expr><name pos:line="737" pos:column="39">r<pos:position pos:line="737" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="737" pos:column="42">backend<pos:position pos:line="737" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="737" pos:column="51">HTTP_BAD_GATEWAY<pos:position pos:line="737" pos:column="67"/></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="738" pos:column="39">"Error reading from remote server"<pos:position pos:line="738" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="738" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="738" pos:column="75"/></return>
            }<pos:position pos:line="739" pos:column="14"/></block></then></if>
            <if pos:line="740" pos:column="13">if <condition pos:line="740" pos:column="16">(<expr><name pos:line="740" pos:column="17">rc<pos:position pos:line="740" pos:column="19"/></name> <operator pos:line="740" pos:column="20">==<pos:position pos:line="740" pos:column="22"/></operator> <literal type="number" pos:line="740" pos:column="23">550<pos:position pos:line="740" pos:column="26"/></literal></expr>)<pos:position pos:line="740" pos:column="27"/></condition><then pos:line="740" pos:column="27"> <block pos:line="740" pos:column="28">{
                <return pos:line="741" pos:column="17">return <expr><call><name pos:line="741" pos:column="24">ftp_proxyerror<pos:position pos:line="741" pos:column="38"/></name><argument_list pos:line="741" pos:column="38">(<argument><expr><name pos:line="741" pos:column="39">r<pos:position pos:line="741" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="741" pos:column="42">backend<pos:position pos:line="741" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="741" pos:column="51">HTTP_NOT_FOUND<pos:position pos:line="741" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="741" pos:column="67">ftpmessage<pos:position pos:line="741" pos:column="77"/></name></expr></argument>)<pos:position pos:line="741" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="741" pos:column="79"/></return>
            }<pos:position pos:line="742" pos:column="14"/></block></then></if>
            <if pos:line="743" pos:column="13">if <condition pos:line="743" pos:column="16">(<expr><name pos:line="743" pos:column="17">rc<pos:position pos:line="743" pos:column="19"/></name> <operator pos:line="743" pos:column="20">!=<pos:position pos:line="743" pos:column="22"/></operator> <literal type="number" pos:line="743" pos:column="23">250<pos:position pos:line="743" pos:column="26"/></literal></expr>)<pos:position pos:line="743" pos:column="27"/></condition><then pos:line="743" pos:column="27"> <block pos:line="743" pos:column="28">{
                <return pos:line="744" pos:column="17">return <expr><call><name pos:line="744" pos:column="24">ftp_proxyerror<pos:position pos:line="744" pos:column="38"/></name><argument_list pos:line="744" pos:column="38">(<argument><expr><name pos:line="744" pos:column="39">r<pos:position pos:line="744" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="744" pos:column="42">backend<pos:position pos:line="744" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="744" pos:column="51">HTTP_BAD_GATEWAY<pos:position pos:line="744" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="744" pos:column="69">ftpmessage<pos:position pos:line="744" pos:column="79"/></name></expr></argument>)<pos:position pos:line="744" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="744" pos:column="81"/></return>
            }<pos:position pos:line="745" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="746" pos:column="13">path<pos:position pos:line="746" pos:column="17"/></name> <operator pos:line="746" pos:column="18">=<pos:position pos:line="746" pos:column="19"/></operator> <literal type="string" pos:line="746" pos:column="20">""<pos:position pos:line="746" pos:column="22"/></literal></expr>;<pos:position pos:line="746" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="747" pos:column="13">len<pos:position pos:line="747" pos:column="16"/></name> <operator pos:line="747" pos:column="17">=<pos:position pos:line="747" pos:column="18"/></operator> <literal type="number" pos:line="747" pos:column="19">0<pos:position pos:line="747" pos:column="20"/></literal></expr>;<pos:position pos:line="747" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="748" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="749" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="751" pos:column="5">cwd<pos:position pos:line="751" pos:column="8"/></name> <operator pos:line="751" pos:column="9">=<pos:position pos:line="751" pos:column="10"/></operator> <call><name pos:line="751" pos:column="11">ftp_get_PWD<pos:position pos:line="751" pos:column="22"/></name><argument_list pos:line="751" pos:column="22">(<argument><expr><name pos:line="751" pos:column="23">r<pos:position pos:line="751" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="751" pos:column="26">origin<pos:position pos:line="751" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="751" pos:column="34">bb<pos:position pos:line="751" pos:column="36"/></name></expr></argument>)<pos:position pos:line="751" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="751" pos:column="38"/></expr_stmt>
    <if pos:line="752" pos:column="5">if <condition pos:line="752" pos:column="8">(<expr><name pos:line="752" pos:column="9">cwd<pos:position pos:line="752" pos:column="12"/></name> <operator pos:line="752" pos:column="13">!=<pos:position pos:line="752" pos:column="15"/></operator> <name pos:line="752" pos:column="16">NULL<pos:position pos:line="752" pos:column="20"/></name></expr>)<pos:position pos:line="752" pos:column="21"/></condition><then pos:line="752" pos:column="21"> <block pos:line="752" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="753" pos:column="9">apr_table_set<pos:position pos:line="753" pos:column="22"/></name><argument_list pos:line="753" pos:column="22">(<argument><expr><name><name pos:line="753" pos:column="23">r<pos:position pos:line="753" pos:column="24"/></name><operator pos:line="753" pos:column="24">-&gt;<pos:position pos:line="753" pos:column="29"/></operator><name pos:line="753" pos:column="26">notes<pos:position pos:line="753" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="753" pos:column="33">"Directory-PWD"<pos:position pos:line="753" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="753" pos:column="50">cwd<pos:position pos:line="753" pos:column="53"/></name></expr></argument>)<pos:position pos:line="753" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="753" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="754" pos:column="6"/></block></then></if>

    <if pos:line="756" pos:column="5">if <condition pos:line="756" pos:column="8">(<expr><name pos:line="756" pos:column="9">dirlisting<pos:position pos:line="756" pos:column="19"/></name></expr>)<pos:position pos:line="756" pos:column="20"/></condition><then pos:line="756" pos:column="20"> <block pos:line="756" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="757" pos:column="9">ftp_set_TYPE<pos:position pos:line="757" pos:column="21"/></name><argument_list pos:line="757" pos:column="21">(<argument><expr><literal type="char" pos:line="757" pos:column="22">'A'<pos:position pos:line="757" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="757" pos:column="27">r<pos:position pos:line="757" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="757" pos:column="30">origin<pos:position pos:line="757" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="757" pos:column="38">bb<pos:position pos:line="757" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="757" pos:column="42">NULL<pos:position pos:line="757" pos:column="46"/></name></expr></argument>)<pos:position pos:line="757" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="757" pos:column="48"/></expr_stmt>
        <comment type="block" pos:line="758" pos:column="9">/* If the current directory contains no slash, we are talking to
         * a non-unix ftp system. Try LIST instead of "LIST -lag", it
         * should return a long listing anyway (unlike NLST).
         * Some exotic FTP servers might choke on the "-lag" switch.
         */</comment>
        <comment type="block" pos:line="763" pos:column="9">/* Note that we do not escape the path here, to allow for
         * queries like: ftp://user@host/apache/src/server/http_*.c
         */</comment>
        <if pos:line="766" pos:column="9">if <condition pos:line="766" pos:column="12">(<expr><name pos:line="766" pos:column="13">len<pos:position pos:line="766" pos:column="16"/></name> <operator pos:line="766" pos:column="17">!=<pos:position pos:line="766" pos:column="19"/></operator> <literal type="number" pos:line="766" pos:column="20">0<pos:position pos:line="766" pos:column="21"/></literal></expr>)<pos:position pos:line="766" pos:column="22"/></condition><then pos:line="766" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><name pos:line="767" pos:column="13">buf<pos:position pos:line="767" pos:column="16"/></name> <operator pos:line="767" pos:column="17">=<pos:position pos:line="767" pos:column="18"/></operator> <call><name pos:line="767" pos:column="19">apr_pstrcat<pos:position pos:line="767" pos:column="30"/></name><argument_list pos:line="767" pos:column="30">(<argument><expr><name pos:line="767" pos:column="31">p<pos:position pos:line="767" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="767" pos:column="34">"LIST "<pos:position pos:line="767" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="767" pos:column="43">path<pos:position pos:line="767" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="767" pos:column="49">CRLF<pos:position pos:line="767" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="767" pos:column="55">NULL<pos:position pos:line="767" pos:column="59"/></name></expr></argument>)<pos:position pos:line="767" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="767" pos:column="61"/></expr_stmt></block></then>
        <elseif pos:line="768" pos:column="9">else <if pos:line="768" pos:column="14">if <condition pos:line="768" pos:column="17">(<expr><name pos:line="768" pos:column="18">cwd<pos:position pos:line="768" pos:column="21"/></name> <operator pos:line="768" pos:column="22">==<pos:position pos:line="768" pos:column="24"/></operator> <name pos:line="768" pos:column="25">NULL<pos:position pos:line="768" pos:column="29"/></name> <operator pos:line="768" pos:column="30">||<pos:position pos:line="768" pos:column="32"/></operator> <call><name pos:line="768" pos:column="33">strchr<pos:position pos:line="768" pos:column="39"/></name><argument_list pos:line="768" pos:column="39">(<argument><expr><name pos:line="768" pos:column="40">cwd<pos:position pos:line="768" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="768" pos:column="45">'/'<pos:position pos:line="768" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="768" pos:column="49"/></argument_list></call> <operator pos:line="768" pos:column="50">!=<pos:position pos:line="768" pos:column="52"/></operator> <name pos:line="768" pos:column="53">NULL<pos:position pos:line="768" pos:column="57"/></name></expr>)<pos:position pos:line="768" pos:column="58"/></condition><then pos:line="768" pos:column="58">
            <block type="pseudo"><expr_stmt><expr><name pos:line="769" pos:column="13">buf<pos:position pos:line="769" pos:column="16"/></name> <operator pos:line="769" pos:column="17">=<pos:position pos:line="769" pos:column="18"/></operator> <call><name pos:line="769" pos:column="19">apr_pstrcat<pos:position pos:line="769" pos:column="30"/></name><argument_list pos:line="769" pos:column="30">(<argument><expr><name pos:line="769" pos:column="31">p<pos:position pos:line="769" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="769" pos:column="34">"LIST -lag"<pos:position pos:line="769" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="769" pos:column="47">CRLF<pos:position pos:line="769" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="769" pos:column="53">NULL<pos:position pos:line="769" pos:column="57"/></name></expr></argument>)<pos:position pos:line="769" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="769" pos:column="59"/></expr_stmt></block></then></if></elseif>
        <else pos:line="770" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="771" pos:column="13">buf<pos:position pos:line="771" pos:column="16"/></name> <operator pos:line="771" pos:column="17">=<pos:position pos:line="771" pos:column="18"/></operator> <literal type="string" pos:line="771" pos:column="19">"LIST"<pos:position pos:line="771" pos:column="25"/></literal> <name pos:line="771" pos:column="26">CRLF<pos:position pos:line="771" pos:column="30"/></name></expr>;<pos:position pos:line="771" pos:column="31"/></expr_stmt></block></else></if>
    }<pos:position pos:line="772" pos:column="6"/></block></then>
    <else pos:line="773" pos:column="5">else <block pos:line="773" pos:column="10">{
        <comment type="block" pos:line="774" pos:column="9">/* switch to binary if the user did not specify ";type=a" */</comment>
        <expr_stmt><expr><call><name pos:line="775" pos:column="9">ftp_set_TYPE<pos:position pos:line="775" pos:column="21"/></name><argument_list pos:line="775" pos:column="21">(<argument><expr><name pos:line="775" pos:column="22">xfer_type<pos:position pos:line="775" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="775" pos:column="33">r<pos:position pos:line="775" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="775" pos:column="36">origin<pos:position pos:line="775" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="775" pos:column="44">bb<pos:position pos:line="775" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="775" pos:column="48">&amp;<pos:position pos:line="775" pos:column="53"/></operator><name pos:line="775" pos:column="49">ftpmessage<pos:position pos:line="775" pos:column="59"/></name></expr></argument>)<pos:position pos:line="775" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="775" pos:column="61"/></expr_stmt>
<cpp:if pos:line="776" pos:column="1">#<cpp:directive pos:line="776" pos:column="2">if<pos:position pos:line="776" pos:column="4"/></cpp:directive> <expr><call><name pos:line="776" pos:column="5">defined<pos:position pos:line="776" pos:column="12"/></name><argument_list pos:line="776" pos:column="12">(<argument><expr><name pos:line="776" pos:column="13">USE_MDTM<pos:position pos:line="776" pos:column="21"/></name></expr></argument>)<pos:position pos:line="776" pos:column="22"/></argument_list></call> <operator pos:line="776" pos:column="23">&amp;&amp;<pos:position pos:line="776" pos:column="33"/></operator> <operator pos:line="776" pos:column="26">(<pos:position pos:line="776" pos:column="27"/></operator><call><name pos:line="776" pos:column="27">defined<pos:position pos:line="776" pos:column="34"/></name><argument_list pos:line="776" pos:column="34">(<argument><expr><name pos:line="776" pos:column="35">HAVE_TIMEGM<pos:position pos:line="776" pos:column="46"/></name></expr></argument>)<pos:position pos:line="776" pos:column="47"/></argument_list></call> <operator pos:line="776" pos:column="48">||<pos:position pos:line="776" pos:column="50"/></operator> <call><name pos:line="776" pos:column="51">defined<pos:position pos:line="776" pos:column="58"/></name><argument_list pos:line="776" pos:column="58">(<argument><expr><name pos:line="776" pos:column="59">HAVE_GMTOFF<pos:position pos:line="776" pos:column="70"/></name></expr></argument>)<pos:position pos:line="776" pos:column="71"/></argument_list></call><operator pos:line="776" pos:column="71">)<pos:position pos:line="776" pos:column="72"/></operator></expr></cpp:if>
        <comment type="block" pos:line="777" pos:column="9">/* from draft-ietf-ftpext-mlst-14.txt:
         *   The FTP command, MODIFICATION TIME (MDTM), can be used to determine
         *   when a file in the server NVFS was last modified.     &lt;..&gt;
         *   The syntax of a time value is:
         *           time-val       = 14DIGIT [ "." 1*DIGIT ]      &lt;..&gt;
         *     Symbolically, a time-val may be viewed as
         *           YYYYMMDDHHMMSS.sss
         *     The "." and subsequent digits ("sss") are optional. &lt;..&gt;
         *     Time values are always represented in UTC (GMT)
         */</comment>
        <expr_stmt><expr><name pos:line="787" pos:column="9">rc<pos:position pos:line="787" pos:column="11"/></name> <operator pos:line="787" pos:column="12">=<pos:position pos:line="787" pos:column="13"/></operator> <call><name pos:line="787" pos:column="14">proxy_ftp_command<pos:position pos:line="787" pos:column="31"/></name><argument_list pos:line="787" pos:column="31">(<argument><expr><call><name pos:line="787" pos:column="32">apr_pstrcat<pos:position pos:line="787" pos:column="43"/></name><argument_list pos:line="787" pos:column="43">(<argument><expr><name pos:line="787" pos:column="44">p<pos:position pos:line="787" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="787" pos:column="47">"MDTM "<pos:position pos:line="787" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name pos:line="787" pos:column="56">ftp_escape_globbingchars<pos:position pos:line="787" pos:column="80"/></name><argument_list pos:line="787" pos:column="80">(<argument><expr><name pos:line="787" pos:column="81">p<pos:position pos:line="787" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="787" pos:column="84">path<pos:position pos:line="787" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="787" pos:column="90">fdconf<pos:position pos:line="787" pos:column="96"/></name></expr></argument>)<pos:position pos:line="787" pos:column="97"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="787" pos:column="99">CRLF<pos:position pos:line="787" pos:column="103"/></name></expr></argument>, <argument><expr><name pos:line="787" pos:column="105">NULL<pos:position pos:line="787" pos:column="109"/></name></expr></argument>)<pos:position pos:line="787" pos:column="110"/></argument_list></call></expr></argument>,
                               <argument><expr><name pos:line="788" pos:column="32">r<pos:position pos:line="788" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="788" pos:column="35">origin<pos:position pos:line="788" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="788" pos:column="43">bb<pos:position pos:line="788" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="788" pos:column="47">&amp;<pos:position pos:line="788" pos:column="52"/></operator><name pos:line="788" pos:column="48">ftpmessage<pos:position pos:line="788" pos:column="58"/></name></expr></argument>)<pos:position pos:line="788" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="788" pos:column="60"/></expr_stmt>
        <comment type="block" pos:line="789" pos:column="9">/* then extract the Last-Modified time from it (YYYYMMDDhhmmss or YYYYMMDDhhmmss.xxx GMT). */</comment>
        <if pos:line="790" pos:column="9">if <condition pos:line="790" pos:column="12">(<expr><name pos:line="790" pos:column="13">rc<pos:position pos:line="790" pos:column="15"/></name> <operator pos:line="790" pos:column="16">==<pos:position pos:line="790" pos:column="18"/></operator> <literal type="number" pos:line="790" pos:column="19">213<pos:position pos:line="790" pos:column="22"/></literal></expr>)<pos:position pos:line="790" pos:column="23"/></condition><then pos:line="790" pos:column="23"> <block pos:line="790" pos:column="24">{
        <struct pos:line="791" pos:column="9">struct <block pos:line="791" pos:column="16">{<public type="default" pos:line="791" pos:column="17">
            <decl_stmt><decl><type><name pos:line="792" pos:column="13">char<pos:position pos:line="792" pos:column="17"/></name></type> <name><name pos:line="792" pos:column="18">YYYY<pos:position pos:line="792" pos:column="22"/></name><index pos:line="792" pos:column="22">[<expr><literal type="number" pos:line="792" pos:column="23">4<pos:position pos:line="792" pos:column="24"/></literal><operator pos:line="792" pos:column="24">+<pos:position pos:line="792" pos:column="25"/></operator><literal type="number" pos:line="792" pos:column="25">1<pos:position pos:line="792" pos:column="26"/></literal></expr>]<pos:position pos:line="792" pos:column="27"/></index></name></decl>;<pos:position pos:line="792" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="793" pos:column="9">char<pos:position pos:line="793" pos:column="13"/></name></type> <name><name pos:line="793" pos:column="14">MM<pos:position pos:line="793" pos:column="16"/></name><index pos:line="793" pos:column="16">[<expr><literal type="number" pos:line="793" pos:column="17">2<pos:position pos:line="793" pos:column="18"/></literal><operator pos:line="793" pos:column="18">+<pos:position pos:line="793" pos:column="19"/></operator><literal type="number" pos:line="793" pos:column="19">1<pos:position pos:line="793" pos:column="20"/></literal></expr>]<pos:position pos:line="793" pos:column="21"/></index></name></decl>;<pos:position pos:line="793" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="794" pos:column="9">char<pos:position pos:line="794" pos:column="13"/></name></type> <name><name pos:line="794" pos:column="14">DD<pos:position pos:line="794" pos:column="16"/></name><index pos:line="794" pos:column="16">[<expr><literal type="number" pos:line="794" pos:column="17">2<pos:position pos:line="794" pos:column="18"/></literal><operator pos:line="794" pos:column="18">+<pos:position pos:line="794" pos:column="19"/></operator><literal type="number" pos:line="794" pos:column="19">1<pos:position pos:line="794" pos:column="20"/></literal></expr>]<pos:position pos:line="794" pos:column="21"/></index></name></decl>;<pos:position pos:line="794" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="795" pos:column="9">char<pos:position pos:line="795" pos:column="13"/></name></type> <name><name pos:line="795" pos:column="14">hh<pos:position pos:line="795" pos:column="16"/></name><index pos:line="795" pos:column="16">[<expr><literal type="number" pos:line="795" pos:column="17">2<pos:position pos:line="795" pos:column="18"/></literal><operator pos:line="795" pos:column="18">+<pos:position pos:line="795" pos:column="19"/></operator><literal type="number" pos:line="795" pos:column="19">1<pos:position pos:line="795" pos:column="20"/></literal></expr>]<pos:position pos:line="795" pos:column="21"/></index></name></decl>;<pos:position pos:line="795" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="796" pos:column="9">char<pos:position pos:line="796" pos:column="13"/></name></type> <name><name pos:line="796" pos:column="14">mm<pos:position pos:line="796" pos:column="16"/></name><index pos:line="796" pos:column="16">[<expr><literal type="number" pos:line="796" pos:column="17">2<pos:position pos:line="796" pos:column="18"/></literal><operator pos:line="796" pos:column="18">+<pos:position pos:line="796" pos:column="19"/></operator><literal type="number" pos:line="796" pos:column="19">1<pos:position pos:line="796" pos:column="20"/></literal></expr>]<pos:position pos:line="796" pos:column="21"/></index></name></decl>;<pos:position pos:line="796" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="797" pos:column="9">char<pos:position pos:line="797" pos:column="13"/></name></type> <name><name pos:line="797" pos:column="14">ss<pos:position pos:line="797" pos:column="16"/></name><index pos:line="797" pos:column="16">[<expr><literal type="number" pos:line="797" pos:column="17">2<pos:position pos:line="797" pos:column="18"/></literal><operator pos:line="797" pos:column="18">+<pos:position pos:line="797" pos:column="19"/></operator><literal type="number" pos:line="797" pos:column="19">1<pos:position pos:line="797" pos:column="20"/></literal></expr>]<pos:position pos:line="797" pos:column="21"/></index></name></decl>;<pos:position pos:line="797" pos:column="22"/></decl_stmt>
        <pos:position pos:line="798" pos:column="9"/></public>}<pos:position pos:line="798" pos:column="10"/></block> <decl><name pos:line="798" pos:column="11">time_val<pos:position pos:line="798" pos:column="19"/></name></decl>;<pos:position pos:line="798" pos:column="20"/></struct>
        <if pos:line="799" pos:column="9">if <condition pos:line="799" pos:column="12">(<expr><literal type="number" pos:line="799" pos:column="13">6<pos:position pos:line="799" pos:column="14"/></literal> <operator pos:line="799" pos:column="15">==<pos:position pos:line="799" pos:column="17"/></operator> <call><name pos:line="799" pos:column="18">sscanf<pos:position pos:line="799" pos:column="24"/></name><argument_list pos:line="799" pos:column="24">(<argument><expr><name pos:line="799" pos:column="25">ftpmessage<pos:position pos:line="799" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="799" pos:column="37">"%4[0-9]%2[0-9]%2[0-9]%2[0-9]%2[0-9]%2[0-9]"<pos:position pos:line="799" pos:column="81"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="800" pos:column="13">time_val<pos:position pos:line="800" pos:column="21"/></name><operator pos:line="800" pos:column="21">.<pos:position pos:line="800" pos:column="22"/></operator><name pos:line="800" pos:column="22">YYYY<pos:position pos:line="800" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="800" pos:column="28">time_val<pos:position pos:line="800" pos:column="36"/></name><operator pos:line="800" pos:column="36">.<pos:position pos:line="800" pos:column="37"/></operator><name pos:line="800" pos:column="37">MM<pos:position pos:line="800" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="800" pos:column="41">time_val<pos:position pos:line="800" pos:column="49"/></name><operator pos:line="800" pos:column="49">.<pos:position pos:line="800" pos:column="50"/></operator><name pos:line="800" pos:column="50">DD<pos:position pos:line="800" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="800" pos:column="54">time_val<pos:position pos:line="800" pos:column="62"/></name><operator pos:line="800" pos:column="62">.<pos:position pos:line="800" pos:column="63"/></operator><name pos:line="800" pos:column="63">hh<pos:position pos:line="800" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="800" pos:column="67">time_val<pos:position pos:line="800" pos:column="75"/></name><operator pos:line="800" pos:column="75">.<pos:position pos:line="800" pos:column="76"/></operator><name pos:line="800" pos:column="76">mm<pos:position pos:line="800" pos:column="78"/></name></name></expr></argument>, <argument><expr><name><name pos:line="800" pos:column="80">time_val<pos:position pos:line="800" pos:column="88"/></name><operator pos:line="800" pos:column="88">.<pos:position pos:line="800" pos:column="89"/></operator><name pos:line="800" pos:column="89">ss<pos:position pos:line="800" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="800" pos:column="92"/></argument_list></call></expr>)<pos:position pos:line="800" pos:column="93"/></condition><then pos:line="800" pos:column="93"> <block pos:line="800" pos:column="94">{
                <decl_stmt><decl><type><name><name pos:line="801" pos:column="17">struct<pos:position pos:line="801" pos:column="23"/></name> <name pos:line="801" pos:column="24">tm<pos:position pos:line="801" pos:column="26"/></name></name></type> <name pos:line="801" pos:column="27">tms<pos:position pos:line="801" pos:column="30"/></name></decl>;<pos:position pos:line="801" pos:column="31"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="802" pos:column="9">memset<pos:position pos:line="802" pos:column="15"/></name> <argument_list pos:line="802" pos:column="16">(<argument><expr><operator pos:line="802" pos:column="17">&amp;<pos:position pos:line="802" pos:column="22"/></operator><name pos:line="802" pos:column="18">tms<pos:position pos:line="802" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="802" pos:column="23">'\0'<pos:position pos:line="802" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="802" pos:column="29">sizeof <name pos:line="802" pos:column="36">tms<pos:position pos:line="802" pos:column="39"/></name></sizeof></expr></argument>)<pos:position pos:line="802" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="802" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="803" pos:column="9">tms<pos:position pos:line="803" pos:column="12"/></name><operator pos:line="803" pos:column="12">.<pos:position pos:line="803" pos:column="13"/></operator><name pos:line="803" pos:column="13">tm_year<pos:position pos:line="803" pos:column="20"/></name></name> <operator pos:line="803" pos:column="21">=<pos:position pos:line="803" pos:column="22"/></operator> <call><name pos:line="803" pos:column="23">atoi<pos:position pos:line="803" pos:column="27"/></name><argument_list pos:line="803" pos:column="27">(<argument><expr><name><name pos:line="803" pos:column="28">time_val<pos:position pos:line="803" pos:column="36"/></name><operator pos:line="803" pos:column="36">.<pos:position pos:line="803" pos:column="37"/></operator><name pos:line="803" pos:column="37">YYYY<pos:position pos:line="803" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="803" pos:column="42"/></argument_list></call> <operator pos:line="803" pos:column="43">-<pos:position pos:line="803" pos:column="44"/></operator> <literal type="number" pos:line="803" pos:column="45">1900<pos:position pos:line="803" pos:column="49"/></literal></expr>;<pos:position pos:line="803" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="804" pos:column="9">tms<pos:position pos:line="804" pos:column="12"/></name><operator pos:line="804" pos:column="12">.<pos:position pos:line="804" pos:column="13"/></operator><name pos:line="804" pos:column="13">tm_mon<pos:position pos:line="804" pos:column="19"/></name></name>  <operator pos:line="804" pos:column="21">=<pos:position pos:line="804" pos:column="22"/></operator> <call><name pos:line="804" pos:column="23">atoi<pos:position pos:line="804" pos:column="27"/></name><argument_list pos:line="804" pos:column="27">(<argument><expr><name><name pos:line="804" pos:column="28">time_val<pos:position pos:line="804" pos:column="36"/></name><operator pos:line="804" pos:column="36">.<pos:position pos:line="804" pos:column="37"/></operator><name pos:line="804" pos:column="37">MM<pos:position pos:line="804" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="804" pos:column="40"/></argument_list></call>   <operator pos:line="804" pos:column="43">-<pos:position pos:line="804" pos:column="44"/></operator> <literal type="number" pos:line="804" pos:column="45">1<pos:position pos:line="804" pos:column="46"/></literal></expr>;<pos:position pos:line="804" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="805" pos:column="9">tms<pos:position pos:line="805" pos:column="12"/></name><operator pos:line="805" pos:column="12">.<pos:position pos:line="805" pos:column="13"/></operator><name pos:line="805" pos:column="13">tm_mday<pos:position pos:line="805" pos:column="20"/></name></name> <operator pos:line="805" pos:column="21">=<pos:position pos:line="805" pos:column="22"/></operator> <call><name pos:line="805" pos:column="23">atoi<pos:position pos:line="805" pos:column="27"/></name><argument_list pos:line="805" pos:column="27">(<argument><expr><name><name pos:line="805" pos:column="28">time_val<pos:position pos:line="805" pos:column="36"/></name><operator pos:line="805" pos:column="36">.<pos:position pos:line="805" pos:column="37"/></operator><name pos:line="805" pos:column="37">DD<pos:position pos:line="805" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="805" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="805" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="806" pos:column="9">tms<pos:position pos:line="806" pos:column="12"/></name><operator pos:line="806" pos:column="12">.<pos:position pos:line="806" pos:column="13"/></operator><name pos:line="806" pos:column="13">tm_hour<pos:position pos:line="806" pos:column="20"/></name></name> <operator pos:line="806" pos:column="21">=<pos:position pos:line="806" pos:column="22"/></operator> <call><name pos:line="806" pos:column="23">atoi<pos:position pos:line="806" pos:column="27"/></name><argument_list pos:line="806" pos:column="27">(<argument><expr><name><name pos:line="806" pos:column="28">time_val<pos:position pos:line="806" pos:column="36"/></name><operator pos:line="806" pos:column="36">.<pos:position pos:line="806" pos:column="37"/></operator><name pos:line="806" pos:column="37">hh<pos:position pos:line="806" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="806" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="806" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="807" pos:column="9">tms<pos:position pos:line="807" pos:column="12"/></name><operator pos:line="807" pos:column="12">.<pos:position pos:line="807" pos:column="13"/></operator><name pos:line="807" pos:column="13">tm_min<pos:position pos:line="807" pos:column="19"/></name></name>  <operator pos:line="807" pos:column="21">=<pos:position pos:line="807" pos:column="22"/></operator> <call><name pos:line="807" pos:column="23">atoi<pos:position pos:line="807" pos:column="27"/></name><argument_list pos:line="807" pos:column="27">(<argument><expr><name><name pos:line="807" pos:column="28">time_val<pos:position pos:line="807" pos:column="36"/></name><operator pos:line="807" pos:column="36">.<pos:position pos:line="807" pos:column="37"/></operator><name pos:line="807" pos:column="37">mm<pos:position pos:line="807" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="807" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="807" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="808" pos:column="9">tms<pos:position pos:line="808" pos:column="12"/></name><operator pos:line="808" pos:column="12">.<pos:position pos:line="808" pos:column="13"/></operator><name pos:line="808" pos:column="13">tm_sec<pos:position pos:line="808" pos:column="19"/></name></name>  <operator pos:line="808" pos:column="21">=<pos:position pos:line="808" pos:column="22"/></operator> <call><name pos:line="808" pos:column="23">atoi<pos:position pos:line="808" pos:column="27"/></name><argument_list pos:line="808" pos:column="27">(<argument><expr><name><name pos:line="808" pos:column="28">time_val<pos:position pos:line="808" pos:column="36"/></name><operator pos:line="808" pos:column="36">.<pos:position pos:line="808" pos:column="37"/></operator><name pos:line="808" pos:column="37">ss<pos:position pos:line="808" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="808" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="808" pos:column="41"/></expr_stmt>
<cpp:ifdef pos:line="809" pos:column="1">#<cpp:directive pos:line="809" pos:column="2">ifdef<pos:position pos:line="809" pos:column="7"/></cpp:directive> <name pos:line="809" pos:column="8">HAVE_TIMEGM<pos:position pos:line="809" pos:column="19"/></name></cpp:ifdef> <comment type="block" pos:line="809" pos:column="20">/* Does system have timegm()? */</comment>
        <expr_stmt><expr><name pos:line="810" pos:column="9">mtime<pos:position pos:line="810" pos:column="14"/></name> <operator pos:line="810" pos:column="15">=<pos:position pos:line="810" pos:column="16"/></operator> <call><name pos:line="810" pos:column="17">timegm<pos:position pos:line="810" pos:column="23"/></name><argument_list pos:line="810" pos:column="23">(<argument><expr><operator pos:line="810" pos:column="24">&amp;<pos:position pos:line="810" pos:column="29"/></operator><name pos:line="810" pos:column="25">tms<pos:position pos:line="810" pos:column="28"/></name></expr></argument>)<pos:position pos:line="810" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="810" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="811" pos:column="9">mtime<pos:position pos:line="811" pos:column="14"/></name> <operator pos:line="811" pos:column="15">*=<pos:position pos:line="811" pos:column="17"/></operator> <name pos:line="811" pos:column="18">APR_USEC_PER_SEC<pos:position pos:line="811" pos:column="34"/></name></expr>;<pos:position pos:line="811" pos:column="35"/></expr_stmt>
<cpp:elif pos:line="812" pos:column="1">#<cpp:directive pos:line="812" pos:column="2">elif<pos:position pos:line="812" pos:column="6"/></cpp:directive> <expr><name pos:line="812" pos:column="7">HAVE_GMTOFF<pos:position pos:line="812" pos:column="18"/></name></expr></cpp:elif> <comment type="block" pos:line="812" pos:column="19">/* does struct tm have a member tm_gmtoff? */</comment>
                <comment type="block" pos:line="813" pos:column="17">/* mktime will subtract the local timezone, which is not what we want.
         * Add it again because the MDTM string is GMT
         */</comment>
        <expr_stmt><expr><name pos:line="816" pos:column="9">mtime<pos:position pos:line="816" pos:column="14"/></name> <operator pos:line="816" pos:column="15">=<pos:position pos:line="816" pos:column="16"/></operator> <call><name pos:line="816" pos:column="17">mktime<pos:position pos:line="816" pos:column="23"/></name><argument_list pos:line="816" pos:column="23">(<argument><expr><operator pos:line="816" pos:column="24">&amp;<pos:position pos:line="816" pos:column="29"/></operator><name pos:line="816" pos:column="25">tms<pos:position pos:line="816" pos:column="28"/></name></expr></argument>)<pos:position pos:line="816" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="816" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="817" pos:column="9">mtime<pos:position pos:line="817" pos:column="14"/></name> <operator pos:line="817" pos:column="15">+=<pos:position pos:line="817" pos:column="17"/></operator> <name><name pos:line="817" pos:column="18">tms<pos:position pos:line="817" pos:column="21"/></name><operator pos:line="817" pos:column="21">.<pos:position pos:line="817" pos:column="22"/></operator><name pos:line="817" pos:column="22">tm_gmtoff<pos:position pos:line="817" pos:column="31"/></name></name></expr>;<pos:position pos:line="817" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="818" pos:column="9">mtime<pos:position pos:line="818" pos:column="14"/></name> <operator pos:line="818" pos:column="15">*=<pos:position pos:line="818" pos:column="17"/></operator> <name pos:line="818" pos:column="18">APR_USEC_PER_SEC<pos:position pos:line="818" pos:column="34"/></name></expr>;<pos:position pos:line="818" pos:column="35"/></expr_stmt>
<cpp:else pos:line="819" pos:column="1">#<cpp:directive pos:line="819" pos:column="2">else<pos:position pos:line="819" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="820" pos:column="9">mtime<pos:position pos:line="820" pos:column="14"/></name> <operator pos:line="820" pos:column="15">=<pos:position pos:line="820" pos:column="16"/></operator> <literal type="number" pos:line="820" pos:column="17">0L<pos:position pos:line="820" pos:column="19"/></literal></expr>;<pos:position pos:line="820" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="821" pos:column="1">#<cpp:directive pos:line="821" pos:column="2">endif<pos:position pos:line="821" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="822" pos:column="14"/></block></then></if>
    }<pos:position pos:line="823" pos:column="6"/></block></then></if>
<cpp:endif pos:line="824" pos:column="1">#<cpp:directive pos:line="824" pos:column="2">endif<pos:position pos:line="824" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="824" pos:column="8">/* USE_MDTM */</comment>
<comment type="block" pos:line="825" pos:column="1">/* FIXME: Handle range requests - send REST */</comment>
        <expr_stmt><expr><name pos:line="826" pos:column="9">buf<pos:position pos:line="826" pos:column="12"/></name> <operator pos:line="826" pos:column="13">=<pos:position pos:line="826" pos:column="14"/></operator> <call><name pos:line="826" pos:column="15">apr_pstrcat<pos:position pos:line="826" pos:column="26"/></name><argument_list pos:line="826" pos:column="26">(<argument><expr><name pos:line="826" pos:column="27">p<pos:position pos:line="826" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="826" pos:column="30">"RETR "<pos:position pos:line="826" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="826" pos:column="39">ftp_escape_globbingchars<pos:position pos:line="826" pos:column="63"/></name><argument_list pos:line="826" pos:column="63">(<argument><expr><name pos:line="826" pos:column="64">p<pos:position pos:line="826" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="826" pos:column="67">path<pos:position pos:line="826" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="826" pos:column="73">fdconf<pos:position pos:line="826" pos:column="79"/></name></expr></argument>)<pos:position pos:line="826" pos:column="80"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="826" pos:column="82">CRLF<pos:position pos:line="826" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="826" pos:column="88">NULL<pos:position pos:line="826" pos:column="92"/></name></expr></argument>)<pos:position pos:line="826" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="826" pos:column="94"/></expr_stmt>
    }<pos:position pos:line="827" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="828" pos:column="5">rc<pos:position pos:line="828" pos:column="7"/></name> <operator pos:line="828" pos:column="8">=<pos:position pos:line="828" pos:column="9"/></operator> <call><name pos:line="828" pos:column="10">proxy_ftp_command<pos:position pos:line="828" pos:column="27"/></name><argument_list pos:line="828" pos:column="27">(<argument><expr><name pos:line="828" pos:column="28">buf<pos:position pos:line="828" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="828" pos:column="33">r<pos:position pos:line="828" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="828" pos:column="36">origin<pos:position pos:line="828" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="828" pos:column="44">bb<pos:position pos:line="828" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="828" pos:column="48">&amp;<pos:position pos:line="828" pos:column="53"/></operator><name pos:line="828" pos:column="49">ftpmessage<pos:position pos:line="828" pos:column="59"/></name></expr></argument>)<pos:position pos:line="828" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="828" pos:column="61"/></expr_stmt>
    <comment type="block" pos:line="829" pos:column="5">/* rc is an intermediate response for the LIST or RETR commands */</comment>

    <comment type="block" pos:line="831" pos:column="5">/*
     * RETR: 110, 125, 150, 226, 250, 421, 425, 426, 450, 451, 500, 501, 530,
     * 550 NLST: 125, 150, 226, 250, 421, 425, 426, 450, 451, 500, 501, 502,
     * 530
     */</comment>
    <comment type="block" pos:line="836" pos:column="5">/* 110 Restart marker reply. */</comment>
    <comment type="block" pos:line="837" pos:column="5">/* 125 Data connection already open; transfer starting. */</comment>
    <comment type="block" pos:line="838" pos:column="5">/* 150 File status okay; about to open data connection. */</comment>
    <comment type="block" pos:line="839" pos:column="5">/* 226 Closing data connection. */</comment>
    <comment type="block" pos:line="840" pos:column="5">/* 250 Requested file action okay, completed. */</comment>
    <comment type="block" pos:line="841" pos:column="5">/* 421 Service not available, closing control connection. */</comment>
    <comment type="block" pos:line="842" pos:column="5">/* 425 Can't open data connection. */</comment>
    <comment type="block" pos:line="843" pos:column="5">/* 426 Connection closed; transfer aborted. */</comment>
    <comment type="block" pos:line="844" pos:column="5">/* 450 Requested file action not taken. */</comment>
    <comment type="block" pos:line="845" pos:column="5">/* 451 Requested action aborted. Local error in processing. */</comment>
    <comment type="block" pos:line="846" pos:column="5">/* 500 Syntax error, command unrecognized. */</comment>
    <comment type="block" pos:line="847" pos:column="5">/* 501 Syntax error in parameters or arguments. */</comment>
    <comment type="block" pos:line="848" pos:column="5">/* 530 Not logged in. */</comment>
    <comment type="block" pos:line="849" pos:column="5">/* 550 Requested action not taken. */</comment>
    <if pos:line="850" pos:column="5">if <condition pos:line="850" pos:column="8">(<expr><name pos:line="850" pos:column="9">rc<pos:position pos:line="850" pos:column="11"/></name> <operator pos:line="850" pos:column="12">==<pos:position pos:line="850" pos:column="14"/></operator> <operator pos:line="850" pos:column="15">-<pos:position pos:line="850" pos:column="16"/></operator><literal type="number" pos:line="850" pos:column="16">1<pos:position pos:line="850" pos:column="17"/></literal> <operator pos:line="850" pos:column="18">||<pos:position pos:line="850" pos:column="20"/></operator> <name pos:line="850" pos:column="21">rc<pos:position pos:line="850" pos:column="23"/></name> <operator pos:line="850" pos:column="24">==<pos:position pos:line="850" pos:column="26"/></operator> <literal type="number" pos:line="850" pos:column="27">421<pos:position pos:line="850" pos:column="30"/></literal></expr>)<pos:position pos:line="850" pos:column="31"/></condition><then pos:line="850" pos:column="31"> <block pos:line="850" pos:column="32">{
        <return pos:line="851" pos:column="9">return <expr><call><name pos:line="851" pos:column="16">ftp_proxyerror<pos:position pos:line="851" pos:column="30"/></name><argument_list pos:line="851" pos:column="30">(<argument><expr><name pos:line="851" pos:column="31">r<pos:position pos:line="851" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="851" pos:column="34">backend<pos:position pos:line="851" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="851" pos:column="43">HTTP_BAD_GATEWAY<pos:position pos:line="851" pos:column="59"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="852" pos:column="31">"Error reading from remote server"<pos:position pos:line="852" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="852" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="852" pos:column="67"/></return>
    }<pos:position pos:line="853" pos:column="6"/></block></then></if>
    <if pos:line="854" pos:column="5">if <condition pos:line="854" pos:column="8">(<expr><name pos:line="854" pos:column="9">rc<pos:position pos:line="854" pos:column="11"/></name> <operator pos:line="854" pos:column="12">==<pos:position pos:line="854" pos:column="14"/></operator> <literal type="number" pos:line="854" pos:column="15">550<pos:position pos:line="854" pos:column="18"/></literal></expr>)<pos:position pos:line="854" pos:column="19"/></condition><then pos:line="854" pos:column="19"> <block pos:line="854" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="855" pos:column="9">ap_log_error<pos:position pos:line="855" pos:column="21"/></name><argument_list pos:line="855" pos:column="21">(<argument><expr><name pos:line="855" pos:column="22">APLOG_MARK<pos:position pos:line="855" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="855" pos:column="34">APLOG_TRACE4<pos:position pos:line="855" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="855" pos:column="48">0<pos:position pos:line="855" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="855" pos:column="51">r<pos:position pos:line="855" pos:column="52"/></name><operator pos:line="855" pos:column="52">-&gt;<pos:position pos:line="855" pos:column="57"/></operator><name pos:line="855" pos:column="54">server<pos:position pos:line="855" pos:column="60"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="856" pos:column="22">"proxy: FTP: RETR failed, trying LIST instead"<pos:position pos:line="856" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="856" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="856" pos:column="70"/></expr_stmt>

        <comment type="block" pos:line="858" pos:column="9">/* Directory Listings should always be fetched in ASCII mode */</comment>
        <expr_stmt><expr><name pos:line="859" pos:column="9">dirlisting<pos:position pos:line="859" pos:column="19"/></name> <operator pos:line="859" pos:column="20">=<pos:position pos:line="859" pos:column="21"/></operator> <literal type="number" pos:line="859" pos:column="22">1<pos:position pos:line="859" pos:column="23"/></literal></expr>;<pos:position pos:line="859" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="860" pos:column="9">ftp_set_TYPE<pos:position pos:line="860" pos:column="21"/></name><argument_list pos:line="860" pos:column="21">(<argument><expr><literal type="char" pos:line="860" pos:column="22">'A'<pos:position pos:line="860" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="860" pos:column="27">r<pos:position pos:line="860" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="860" pos:column="30">origin<pos:position pos:line="860" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="860" pos:column="38">bb<pos:position pos:line="860" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="860" pos:column="42">NULL<pos:position pos:line="860" pos:column="46"/></name></expr></argument>)<pos:position pos:line="860" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="860" pos:column="48"/></expr_stmt>

        <expr_stmt><expr><name pos:line="862" pos:column="9">rc<pos:position pos:line="862" pos:column="11"/></name> <operator pos:line="862" pos:column="12">=<pos:position pos:line="862" pos:column="13"/></operator> <call><name pos:line="862" pos:column="14">proxy_ftp_command<pos:position pos:line="862" pos:column="31"/></name><argument_list pos:line="862" pos:column="31">(<argument><expr><call><name pos:line="862" pos:column="32">apr_pstrcat<pos:position pos:line="862" pos:column="43"/></name><argument_list pos:line="862" pos:column="43">(<argument><expr><name pos:line="862" pos:column="44">p<pos:position pos:line="862" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="862" pos:column="47">"CWD "<pos:position pos:line="862" pos:column="53"/></literal></expr></argument>,
                               <argument><expr><call><name pos:line="863" pos:column="32">ftp_escape_globbingchars<pos:position pos:line="863" pos:column="56"/></name><argument_list pos:line="863" pos:column="56">(<argument><expr><name pos:line="863" pos:column="57">p<pos:position pos:line="863" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="863" pos:column="60">path<pos:position pos:line="863" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="863" pos:column="66">fdconf<pos:position pos:line="863" pos:column="72"/></name></expr></argument>)<pos:position pos:line="863" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="863" pos:column="75">CRLF<pos:position pos:line="863" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="863" pos:column="81">NULL<pos:position pos:line="863" pos:column="85"/></name></expr></argument>)<pos:position pos:line="863" pos:column="86"/></argument_list></call></expr></argument>,
                               <argument><expr><name pos:line="864" pos:column="32">r<pos:position pos:line="864" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="864" pos:column="35">origin<pos:position pos:line="864" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="864" pos:column="43">bb<pos:position pos:line="864" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="864" pos:column="47">&amp;<pos:position pos:line="864" pos:column="52"/></operator><name pos:line="864" pos:column="48">ftpmessage<pos:position pos:line="864" pos:column="58"/></name></expr></argument>)<pos:position pos:line="864" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="864" pos:column="60"/></expr_stmt>
        <comment type="block" pos:line="865" pos:column="9">/* possible results: 250, 421, 500, 501, 502, 530, 550 */</comment>
        <comment type="block" pos:line="866" pos:column="9">/* 250 Requested file action okay, completed. */</comment>
        <comment type="block" pos:line="867" pos:column="9">/* 421 Service not available, closing control connection. */</comment>
        <comment type="block" pos:line="868" pos:column="9">/* 500 Syntax error, command unrecognized. */</comment>
        <comment type="block" pos:line="869" pos:column="9">/* 501 Syntax error in parameters or arguments. */</comment>
        <comment type="block" pos:line="870" pos:column="9">/* 502 Command not implemented. */</comment>
        <comment type="block" pos:line="871" pos:column="9">/* 530 Not logged in. */</comment>
        <comment type="block" pos:line="872" pos:column="9">/* 550 Requested action not taken. */</comment>
        <if pos:line="873" pos:column="9">if <condition pos:line="873" pos:column="12">(<expr><name pos:line="873" pos:column="13">rc<pos:position pos:line="873" pos:column="15"/></name> <operator pos:line="873" pos:column="16">==<pos:position pos:line="873" pos:column="18"/></operator> <operator pos:line="873" pos:column="19">-<pos:position pos:line="873" pos:column="20"/></operator><literal type="number" pos:line="873" pos:column="20">1<pos:position pos:line="873" pos:column="21"/></literal> <operator pos:line="873" pos:column="22">||<pos:position pos:line="873" pos:column="24"/></operator> <name pos:line="873" pos:column="25">rc<pos:position pos:line="873" pos:column="27"/></name> <operator pos:line="873" pos:column="28">==<pos:position pos:line="873" pos:column="30"/></operator> <literal type="number" pos:line="873" pos:column="31">421<pos:position pos:line="873" pos:column="34"/></literal></expr>)<pos:position pos:line="873" pos:column="35"/></condition><then pos:line="873" pos:column="35"> <block pos:line="873" pos:column="36">{
            <return pos:line="874" pos:column="13">return <expr><call><name pos:line="874" pos:column="20">ftp_proxyerror<pos:position pos:line="874" pos:column="34"/></name><argument_list pos:line="874" pos:column="34">(<argument><expr><name pos:line="874" pos:column="35">r<pos:position pos:line="874" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="874" pos:column="38">backend<pos:position pos:line="874" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="874" pos:column="47">HTTP_BAD_GATEWAY<pos:position pos:line="874" pos:column="63"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="875" pos:column="35">"Error reading from remote server"<pos:position pos:line="875" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="875" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="875" pos:column="71"/></return>
        }<pos:position pos:line="876" pos:column="10"/></block></then></if>
        <if pos:line="877" pos:column="9">if <condition pos:line="877" pos:column="12">(<expr><name pos:line="877" pos:column="13">rc<pos:position pos:line="877" pos:column="15"/></name> <operator pos:line="877" pos:column="16">==<pos:position pos:line="877" pos:column="18"/></operator> <literal type="number" pos:line="877" pos:column="19">550<pos:position pos:line="877" pos:column="22"/></literal></expr>)<pos:position pos:line="877" pos:column="23"/></condition><then pos:line="877" pos:column="23"> <block pos:line="877" pos:column="24">{
            <return pos:line="878" pos:column="13">return <expr><call><name pos:line="878" pos:column="20">ftp_proxyerror<pos:position pos:line="878" pos:column="34"/></name><argument_list pos:line="878" pos:column="34">(<argument><expr><name pos:line="878" pos:column="35">r<pos:position pos:line="878" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="878" pos:column="38">backend<pos:position pos:line="878" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="878" pos:column="47">HTTP_NOT_FOUND<pos:position pos:line="878" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="878" pos:column="63">ftpmessage<pos:position pos:line="878" pos:column="73"/></name></expr></argument>)<pos:position pos:line="878" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="878" pos:column="75"/></return>
        }<pos:position pos:line="879" pos:column="10"/></block></then></if>
        <if pos:line="880" pos:column="9">if <condition pos:line="880" pos:column="12">(<expr><name pos:line="880" pos:column="13">rc<pos:position pos:line="880" pos:column="15"/></name> <operator pos:line="880" pos:column="16">!=<pos:position pos:line="880" pos:column="18"/></operator> <literal type="number" pos:line="880" pos:column="19">250<pos:position pos:line="880" pos:column="22"/></literal></expr>)<pos:position pos:line="880" pos:column="23"/></condition><then pos:line="880" pos:column="23"> <block pos:line="880" pos:column="24">{
            <return pos:line="881" pos:column="13">return <expr><call><name pos:line="881" pos:column="20">ftp_proxyerror<pos:position pos:line="881" pos:column="34"/></name><argument_list pos:line="881" pos:column="34">(<argument><expr><name pos:line="881" pos:column="35">r<pos:position pos:line="881" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="881" pos:column="38">backend<pos:position pos:line="881" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="881" pos:column="47">HTTP_BAD_GATEWAY<pos:position pos:line="881" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="881" pos:column="65">ftpmessage<pos:position pos:line="881" pos:column="75"/></name></expr></argument>)<pos:position pos:line="881" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="881" pos:column="77"/></return>
        }<pos:position pos:line="882" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="884" pos:column="9">/* Update current directory after CWD */</comment>
        <expr_stmt><expr><name pos:line="885" pos:column="9">cwd<pos:position pos:line="885" pos:column="12"/></name> <operator pos:line="885" pos:column="13">=<pos:position pos:line="885" pos:column="14"/></operator> <call><name pos:line="885" pos:column="15">ftp_get_PWD<pos:position pos:line="885" pos:column="26"/></name><argument_list pos:line="885" pos:column="26">(<argument><expr><name pos:line="885" pos:column="27">r<pos:position pos:line="885" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="885" pos:column="30">origin<pos:position pos:line="885" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="885" pos:column="38">bb<pos:position pos:line="885" pos:column="40"/></name></expr></argument>)<pos:position pos:line="885" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="885" pos:column="42"/></expr_stmt>
        <if pos:line="886" pos:column="9">if <condition pos:line="886" pos:column="12">(<expr><name pos:line="886" pos:column="13">cwd<pos:position pos:line="886" pos:column="16"/></name> <operator pos:line="886" pos:column="17">!=<pos:position pos:line="886" pos:column="19"/></operator> <name pos:line="886" pos:column="20">NULL<pos:position pos:line="886" pos:column="24"/></name></expr>)<pos:position pos:line="886" pos:column="25"/></condition><then pos:line="886" pos:column="25"> <block pos:line="886" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="887" pos:column="13">apr_table_set<pos:position pos:line="887" pos:column="26"/></name><argument_list pos:line="887" pos:column="26">(<argument><expr><name><name pos:line="887" pos:column="27">r<pos:position pos:line="887" pos:column="28"/></name><operator pos:line="887" pos:column="28">-&gt;<pos:position pos:line="887" pos:column="33"/></operator><name pos:line="887" pos:column="30">notes<pos:position pos:line="887" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="887" pos:column="37">"Directory-PWD"<pos:position pos:line="887" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="887" pos:column="54">cwd<pos:position pos:line="887" pos:column="57"/></name></expr></argument>)<pos:position pos:line="887" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="887" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="888" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="890" pos:column="9">/* See above for the "LIST" vs. "LIST -lag" discussion. */</comment>
        <expr_stmt><expr><name pos:line="891" pos:column="9">rc<pos:position pos:line="891" pos:column="11"/></name> <operator pos:line="891" pos:column="12">=<pos:position pos:line="891" pos:column="13"/></operator> <call><name pos:line="891" pos:column="14">proxy_ftp_command<pos:position pos:line="891" pos:column="31"/></name><argument_list pos:line="891" pos:column="31">(<argument><expr><ternary><condition><expr><operator pos:line="891" pos:column="32">(<pos:position pos:line="891" pos:column="33"/></operator><name pos:line="891" pos:column="33">cwd<pos:position pos:line="891" pos:column="36"/></name> <operator pos:line="891" pos:column="37">==<pos:position pos:line="891" pos:column="39"/></operator> <name pos:line="891" pos:column="40">NULL<pos:position pos:line="891" pos:column="44"/></name> <operator pos:line="891" pos:column="45">||<pos:position pos:line="891" pos:column="47"/></operator> <call><name pos:line="891" pos:column="48">strchr<pos:position pos:line="891" pos:column="54"/></name><argument_list pos:line="891" pos:column="54">(<argument><expr><name pos:line="891" pos:column="55">cwd<pos:position pos:line="891" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="891" pos:column="60">'/'<pos:position pos:line="891" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="891" pos:column="64"/></argument_list></call> <operator pos:line="891" pos:column="65">!=<pos:position pos:line="891" pos:column="67"/></operator> <name pos:line="891" pos:column="68">NULL<pos:position pos:line="891" pos:column="72"/></name><operator pos:line="891" pos:column="72">)<pos:position pos:line="891" pos:column="73"/></operator></expr>
                               ?<pos:position pos:line="892" pos:column="33"/></condition><then pos:line="892" pos:column="33"> <expr><literal type="string" pos:line="892" pos:column="34">"LIST -lag"<pos:position pos:line="892" pos:column="45"/></literal> <name pos:line="892" pos:column="46">CRLF<pos:position pos:line="892" pos:column="50"/></name></expr> <pos:position pos:line="892" pos:column="51"/></then><else pos:line="892" pos:column="51">: <expr><literal type="string" pos:line="892" pos:column="53">"LIST"<pos:position pos:line="892" pos:column="59"/></literal> <name pos:line="892" pos:column="60">CRLF<pos:position pos:line="892" pos:column="64"/></name></expr></else></ternary></expr></argument>,
                               <argument><expr><name pos:line="893" pos:column="32">r<pos:position pos:line="893" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="893" pos:column="35">origin<pos:position pos:line="893" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="893" pos:column="43">bb<pos:position pos:line="893" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="893" pos:column="47">&amp;<pos:position pos:line="893" pos:column="52"/></operator><name pos:line="893" pos:column="48">ftpmessage<pos:position pos:line="893" pos:column="58"/></name></expr></argument>)<pos:position pos:line="893" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="893" pos:column="60"/></expr_stmt>

        <comment type="block" pos:line="895" pos:column="9">/* rc is an intermediate response for the LIST command (125 transfer starting, 150 opening data connection) */</comment>
        <if pos:line="896" pos:column="9">if <condition pos:line="896" pos:column="12">(<expr><name pos:line="896" pos:column="13">rc<pos:position pos:line="896" pos:column="15"/></name> <operator pos:line="896" pos:column="16">==<pos:position pos:line="896" pos:column="18"/></operator> <operator pos:line="896" pos:column="19">-<pos:position pos:line="896" pos:column="20"/></operator><literal type="number" pos:line="896" pos:column="20">1<pos:position pos:line="896" pos:column="21"/></literal> <operator pos:line="896" pos:column="22">||<pos:position pos:line="896" pos:column="24"/></operator> <name pos:line="896" pos:column="25">rc<pos:position pos:line="896" pos:column="27"/></name> <operator pos:line="896" pos:column="28">==<pos:position pos:line="896" pos:column="30"/></operator> <literal type="number" pos:line="896" pos:column="31">421<pos:position pos:line="896" pos:column="34"/></literal></expr>)<pos:position pos:line="896" pos:column="35"/></condition><then pos:line="896" pos:column="35">
            <block type="pseudo"><return pos:line="897" pos:column="13">return <expr><call><name pos:line="897" pos:column="20">ftp_proxyerror<pos:position pos:line="897" pos:column="34"/></name><argument_list pos:line="897" pos:column="34">(<argument><expr><name pos:line="897" pos:column="35">r<pos:position pos:line="897" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="897" pos:column="38">backend<pos:position pos:line="897" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="897" pos:column="47">HTTP_BAD_GATEWAY<pos:position pos:line="897" pos:column="63"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="898" pos:column="35">"Error reading from remote server"<pos:position pos:line="898" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="898" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="898" pos:column="71"/></return></block></then></if>
    }<pos:position pos:line="899" pos:column="6"/></block></then></if>
    <if pos:line="900" pos:column="5">if <condition pos:line="900" pos:column="8">(<expr><name pos:line="900" pos:column="9">rc<pos:position pos:line="900" pos:column="11"/></name> <operator pos:line="900" pos:column="12">!=<pos:position pos:line="900" pos:column="14"/></operator> <literal type="number" pos:line="900" pos:column="15">125<pos:position pos:line="900" pos:column="18"/></literal> <operator pos:line="900" pos:column="19">&amp;&amp;<pos:position pos:line="900" pos:column="29"/></operator> <name pos:line="900" pos:column="22">rc<pos:position pos:line="900" pos:column="24"/></name> <operator pos:line="900" pos:column="25">!=<pos:position pos:line="900" pos:column="27"/></operator> <literal type="number" pos:line="900" pos:column="28">150<pos:position pos:line="900" pos:column="31"/></literal> <operator pos:line="900" pos:column="32">&amp;&amp;<pos:position pos:line="900" pos:column="42"/></operator> <name pos:line="900" pos:column="35">rc<pos:position pos:line="900" pos:column="37"/></name> <operator pos:line="900" pos:column="38">!=<pos:position pos:line="900" pos:column="40"/></operator> <literal type="number" pos:line="900" pos:column="41">226<pos:position pos:line="900" pos:column="44"/></literal> <operator pos:line="900" pos:column="45">&amp;&amp;<pos:position pos:line="900" pos:column="55"/></operator> <name pos:line="900" pos:column="48">rc<pos:position pos:line="900" pos:column="50"/></name> <operator pos:line="900" pos:column="51">!=<pos:position pos:line="900" pos:column="53"/></operator> <literal type="number" pos:line="900" pos:column="54">250<pos:position pos:line="900" pos:column="57"/></literal></expr>)<pos:position pos:line="900" pos:column="58"/></condition><then pos:line="900" pos:column="58"> <block pos:line="900" pos:column="59">{
        <return pos:line="901" pos:column="9">return <expr><call><name pos:line="901" pos:column="16">ftp_proxyerror<pos:position pos:line="901" pos:column="30"/></name><argument_list pos:line="901" pos:column="30">(<argument><expr><name pos:line="901" pos:column="31">r<pos:position pos:line="901" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="901" pos:column="34">backend<pos:position pos:line="901" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="901" pos:column="43">HTTP_BAD_GATEWAY<pos:position pos:line="901" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="901" pos:column="61">ftpmessage<pos:position pos:line="901" pos:column="71"/></name></expr></argument>)<pos:position pos:line="901" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="901" pos:column="73"/></return>
    }<pos:position pos:line="902" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="904" pos:column="5">r<pos:position pos:line="904" pos:column="6"/></name><operator pos:line="904" pos:column="6">-&gt;<pos:position pos:line="904" pos:column="11"/></operator><name pos:line="904" pos:column="8">status<pos:position pos:line="904" pos:column="14"/></name></name> <operator pos:line="904" pos:column="15">=<pos:position pos:line="904" pos:column="16"/></operator> <name pos:line="904" pos:column="17">HTTP_OK<pos:position pos:line="904" pos:column="24"/></name></expr>;<pos:position pos:line="904" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="905" pos:column="5">r<pos:position pos:line="905" pos:column="6"/></name><operator pos:line="905" pos:column="6">-&gt;<pos:position pos:line="905" pos:column="11"/></operator><name pos:line="905" pos:column="8">status_line<pos:position pos:line="905" pos:column="19"/></name></name> <operator pos:line="905" pos:column="20">=<pos:position pos:line="905" pos:column="21"/></operator> <literal type="string" pos:line="905" pos:column="22">"200 OK"<pos:position pos:line="905" pos:column="30"/></literal></expr>;<pos:position pos:line="905" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="907" pos:column="5">apr_rfc822_date<pos:position pos:line="907" pos:column="20"/></name><argument_list pos:line="907" pos:column="20">(<argument><expr><name pos:line="907" pos:column="21">dates<pos:position pos:line="907" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="907" pos:column="28">r<pos:position pos:line="907" pos:column="29"/></name><operator pos:line="907" pos:column="29">-&gt;<pos:position pos:line="907" pos:column="34"/></operator><name pos:line="907" pos:column="31">request_time<pos:position pos:line="907" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="907" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="907" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="908" pos:column="5">apr_table_setn<pos:position pos:line="908" pos:column="19"/></name><argument_list pos:line="908" pos:column="19">(<argument><expr><name><name pos:line="908" pos:column="20">r<pos:position pos:line="908" pos:column="21"/></name><operator pos:line="908" pos:column="21">-&gt;<pos:position pos:line="908" pos:column="26"/></operator><name pos:line="908" pos:column="23">headers_out<pos:position pos:line="908" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="908" pos:column="36">"Date"<pos:position pos:line="908" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="908" pos:column="44">dates<pos:position pos:line="908" pos:column="49"/></name></expr></argument>)<pos:position pos:line="908" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="908" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="909" pos:column="5">apr_table_setn<pos:position pos:line="909" pos:column="19"/></name><argument_list pos:line="909" pos:column="19">(<argument><expr><name><name pos:line="909" pos:column="20">r<pos:position pos:line="909" pos:column="21"/></name><operator pos:line="909" pos:column="21">-&gt;<pos:position pos:line="909" pos:column="26"/></operator><name pos:line="909" pos:column="23">headers_out<pos:position pos:line="909" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="909" pos:column="36">"Server"<pos:position pos:line="909" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="909" pos:column="46">ap_get_server_description<pos:position pos:line="909" pos:column="71"/></name><argument_list pos:line="909" pos:column="71">()<pos:position pos:line="909" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="909" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="909" pos:column="75"/></expr_stmt>

    <comment type="block" pos:line="911" pos:column="5">/* set content-type */</comment>
    <if pos:line="912" pos:column="5">if <condition pos:line="912" pos:column="8">(<expr><name pos:line="912" pos:column="9">dirlisting<pos:position pos:line="912" pos:column="19"/></name></expr>)<pos:position pos:line="912" pos:column="20"/></condition><then pos:line="912" pos:column="20"> <block pos:line="912" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="913" pos:column="9">ap_set_content_type<pos:position pos:line="913" pos:column="28"/></name><argument_list pos:line="913" pos:column="28">(<argument><expr><name pos:line="913" pos:column="29">r<pos:position pos:line="913" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="913" pos:column="32">apr_pstrcat<pos:position pos:line="913" pos:column="43"/></name><argument_list pos:line="913" pos:column="43">(<argument><expr><name pos:line="913" pos:column="44">p<pos:position pos:line="913" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="913" pos:column="47">"text/html;charset="<pos:position pos:line="913" pos:column="67"/></literal></expr></argument>,
                                           <argument><expr><ternary><condition><expr><name><name pos:line="914" pos:column="44">fdconf<pos:position pos:line="914" pos:column="50"/></name><operator pos:line="914" pos:column="50">-&gt;<pos:position pos:line="914" pos:column="55"/></operator><name pos:line="914" pos:column="52">ftp_directory_charset<pos:position pos:line="914" pos:column="73"/></name></name></expr> ?<pos:position pos:line="914" pos:column="75"/></condition><then pos:line="914" pos:column="75">
                                           <expr><name><name pos:line="915" pos:column="44">fdconf<pos:position pos:line="915" pos:column="50"/></name><operator pos:line="915" pos:column="50">-&gt;<pos:position pos:line="915" pos:column="55"/></operator><name pos:line="915" pos:column="52">ftp_directory_charset<pos:position pos:line="915" pos:column="73"/></name></name></expr> <pos:position pos:line="915" pos:column="74"/></then><else pos:line="915" pos:column="74">:
                                           <expr><literal type="string" pos:line="916" pos:column="44">"ISO-8859-1"<pos:position pos:line="916" pos:column="56"/></literal></expr></else></ternary></expr></argument>,  <argument><expr><name pos:line="916" pos:column="59">NULL<pos:position pos:line="916" pos:column="63"/></name></expr></argument>)<pos:position pos:line="916" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="916" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="916" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="917" pos:column="6"/></block></then>
    <else pos:line="918" pos:column="5">else <block pos:line="918" pos:column="10">{
        <if pos:line="919" pos:column="9">if <condition pos:line="919" pos:column="12">(<expr><name pos:line="919" pos:column="13">xfer_type<pos:position pos:line="919" pos:column="22"/></name> <operator pos:line="919" pos:column="23">!=<pos:position pos:line="919" pos:column="25"/></operator> <literal type="char" pos:line="919" pos:column="26">'A'<pos:position pos:line="919" pos:column="29"/></literal> <operator pos:line="919" pos:column="30">&amp;&amp;<pos:position pos:line="919" pos:column="40"/></operator> <name pos:line="919" pos:column="33">size<pos:position pos:line="919" pos:column="37"/></name> <operator pos:line="919" pos:column="38">!=<pos:position pos:line="919" pos:column="40"/></operator> <name pos:line="919" pos:column="41">NULL<pos:position pos:line="919" pos:column="45"/></name></expr>)<pos:position pos:line="919" pos:column="46"/></condition><then pos:line="919" pos:column="46"> <block pos:line="919" pos:column="47">{
            <comment type="block" pos:line="920" pos:column="13">/* We "trust" the ftp server to really serve (size) bytes... */</comment>
            <expr_stmt><expr><call><name pos:line="921" pos:column="13">apr_table_setn<pos:position pos:line="921" pos:column="27"/></name><argument_list pos:line="921" pos:column="27">(<argument><expr><name><name pos:line="921" pos:column="28">r<pos:position pos:line="921" pos:column="29"/></name><operator pos:line="921" pos:column="29">-&gt;<pos:position pos:line="921" pos:column="34"/></operator><name pos:line="921" pos:column="31">headers_out<pos:position pos:line="921" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="921" pos:column="44">"Content-Length"<pos:position pos:line="921" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="921" pos:column="62">size<pos:position pos:line="921" pos:column="66"/></name></expr></argument>)<pos:position pos:line="921" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="921" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="922" pos:column="13">ap_log_error<pos:position pos:line="922" pos:column="25"/></name><argument_list pos:line="922" pos:column="25">(<argument><expr><name pos:line="922" pos:column="26">APLOG_MARK<pos:position pos:line="922" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="922" pos:column="38">APLOG_TRACE3<pos:position pos:line="922" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="922" pos:column="52">0<pos:position pos:line="922" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="922" pos:column="55">r<pos:position pos:line="922" pos:column="56"/></name><operator pos:line="922" pos:column="56">-&gt;<pos:position pos:line="922" pos:column="61"/></operator><name pos:line="922" pos:column="58">server<pos:position pos:line="922" pos:column="64"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="923" pos:column="26">"proxy: FTP: Content-Length set to %s"<pos:position pos:line="923" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="923" pos:column="66">size<pos:position pos:line="923" pos:column="70"/></name></expr></argument>)<pos:position pos:line="923" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="923" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="924" pos:column="10"/></block></then></if>
    }<pos:position pos:line="925" pos:column="6"/></block></else></if>
    <if pos:line="926" pos:column="5">if <condition pos:line="926" pos:column="8">(<expr><name><name pos:line="926" pos:column="9">r<pos:position pos:line="926" pos:column="10"/></name><operator pos:line="926" pos:column="10">-&gt;<pos:position pos:line="926" pos:column="15"/></operator><name pos:line="926" pos:column="12">content_type<pos:position pos:line="926" pos:column="24"/></name></name></expr>)<pos:position pos:line="926" pos:column="25"/></condition><then pos:line="926" pos:column="25"> <block pos:line="926" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="927" pos:column="9">apr_table_setn<pos:position pos:line="927" pos:column="23"/></name><argument_list pos:line="927" pos:column="23">(<argument><expr><name><name pos:line="927" pos:column="24">r<pos:position pos:line="927" pos:column="25"/></name><operator pos:line="927" pos:column="25">-&gt;<pos:position pos:line="927" pos:column="30"/></operator><name pos:line="927" pos:column="27">headers_out<pos:position pos:line="927" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="927" pos:column="40">"Content-Type"<pos:position pos:line="927" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="927" pos:column="56">r<pos:position pos:line="927" pos:column="57"/></name><operator pos:line="927" pos:column="57">-&gt;<pos:position pos:line="927" pos:column="62"/></operator><name pos:line="927" pos:column="59">content_type<pos:position pos:line="927" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="927" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="927" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="928" pos:column="9">ap_log_error<pos:position pos:line="928" pos:column="21"/></name><argument_list pos:line="928" pos:column="21">(<argument><expr><name pos:line="928" pos:column="22">APLOG_MARK<pos:position pos:line="928" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="928" pos:column="34">APLOG_TRACE3<pos:position pos:line="928" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="928" pos:column="48">0<pos:position pos:line="928" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="928" pos:column="51">r<pos:position pos:line="928" pos:column="52"/></name><operator pos:line="928" pos:column="52">-&gt;<pos:position pos:line="928" pos:column="57"/></operator><name pos:line="928" pos:column="54">server<pos:position pos:line="928" pos:column="60"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="929" pos:column="22">"proxy: FTP: Content-Type set to %s"<pos:position pos:line="929" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="929" pos:column="60">r<pos:position pos:line="929" pos:column="61"/></name><operator pos:line="929" pos:column="61">-&gt;<pos:position pos:line="929" pos:column="66"/></operator><name pos:line="929" pos:column="63">content_type<pos:position pos:line="929" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="929" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="929" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="930" pos:column="6"/></block></then></if>

<cpp:if pos:line="932" pos:column="1">#<cpp:directive pos:line="932" pos:column="2">if<pos:position pos:line="932" pos:column="4"/></cpp:directive> <expr><call><name pos:line="932" pos:column="5">defined<pos:position pos:line="932" pos:column="12"/></name><argument_list pos:line="932" pos:column="12">(<argument><expr><name pos:line="932" pos:column="13">USE_MDTM<pos:position pos:line="932" pos:column="21"/></name></expr></argument>)<pos:position pos:line="932" pos:column="22"/></argument_list></call> <operator pos:line="932" pos:column="23">&amp;&amp;<pos:position pos:line="932" pos:column="33"/></operator> <operator pos:line="932" pos:column="26">(<pos:position pos:line="932" pos:column="27"/></operator><call><name pos:line="932" pos:column="27">defined<pos:position pos:line="932" pos:column="34"/></name><argument_list pos:line="932" pos:column="34">(<argument><expr><name pos:line="932" pos:column="35">HAVE_TIMEGM<pos:position pos:line="932" pos:column="46"/></name></expr></argument>)<pos:position pos:line="932" pos:column="47"/></argument_list></call> <operator pos:line="932" pos:column="48">||<pos:position pos:line="932" pos:column="50"/></operator> <call><name pos:line="932" pos:column="51">defined<pos:position pos:line="932" pos:column="58"/></name><argument_list pos:line="932" pos:column="58">(<argument><expr><name pos:line="932" pos:column="59">HAVE_GMTOFF<pos:position pos:line="932" pos:column="70"/></name></expr></argument>)<pos:position pos:line="932" pos:column="71"/></argument_list></call><operator pos:line="932" pos:column="71">)<pos:position pos:line="932" pos:column="72"/></operator></expr></cpp:if>
    <if pos:line="933" pos:column="5">if <condition pos:line="933" pos:column="8">(<expr><name pos:line="933" pos:column="9">mtime<pos:position pos:line="933" pos:column="14"/></name> <operator pos:line="933" pos:column="15">!=<pos:position pos:line="933" pos:column="17"/></operator> <literal type="number" pos:line="933" pos:column="18">0L<pos:position pos:line="933" pos:column="20"/></literal></expr>)<pos:position pos:line="933" pos:column="21"/></condition><then pos:line="933" pos:column="21"> <block pos:line="933" pos:column="22">{
        <decl_stmt><decl><type><name pos:line="934" pos:column="9">char<pos:position pos:line="934" pos:column="13"/></name></type> <name><name pos:line="934" pos:column="14">datestr<pos:position pos:line="934" pos:column="21"/></name><index pos:line="934" pos:column="21">[<expr><name pos:line="934" pos:column="22">APR_RFC822_DATE_LEN<pos:position pos:line="934" pos:column="41"/></name></expr>]<pos:position pos:line="934" pos:column="42"/></index></name></decl>;<pos:position pos:line="934" pos:column="43"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="935" pos:column="9">apr_rfc822_date<pos:position pos:line="935" pos:column="24"/></name><argument_list pos:line="935" pos:column="24">(<argument><expr><name pos:line="935" pos:column="25">datestr<pos:position pos:line="935" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="935" pos:column="34">mtime<pos:position pos:line="935" pos:column="39"/></name></expr></argument>)<pos:position pos:line="935" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="935" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="936" pos:column="9">apr_table_set<pos:position pos:line="936" pos:column="22"/></name><argument_list pos:line="936" pos:column="22">(<argument><expr><name><name pos:line="936" pos:column="23">r<pos:position pos:line="936" pos:column="24"/></name><operator pos:line="936" pos:column="24">-&gt;<pos:position pos:line="936" pos:column="29"/></operator><name pos:line="936" pos:column="26">headers_out<pos:position pos:line="936" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="936" pos:column="39">"Last-Modified"<pos:position pos:line="936" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="936" pos:column="56">datestr<pos:position pos:line="936" pos:column="63"/></name></expr></argument>)<pos:position pos:line="936" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="936" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="937" pos:column="9">ap_log_error<pos:position pos:line="937" pos:column="21"/></name><argument_list pos:line="937" pos:column="21">(<argument><expr><name pos:line="937" pos:column="22">APLOG_MARK<pos:position pos:line="937" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="937" pos:column="34">APLOG_TRACE3<pos:position pos:line="937" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="937" pos:column="48">0<pos:position pos:line="937" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="937" pos:column="51">r<pos:position pos:line="937" pos:column="52"/></name><operator pos:line="937" pos:column="52">-&gt;<pos:position pos:line="937" pos:column="57"/></operator><name pos:line="937" pos:column="54">server<pos:position pos:line="937" pos:column="60"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="938" pos:column="22">"proxy: FTP: Last-Modified set to %s"<pos:position pos:line="938" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="938" pos:column="61">datestr<pos:position pos:line="938" pos:column="68"/></name></expr></argument>)<pos:position pos:line="938" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="938" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="939" pos:column="6"/></block></then></if>
<cpp:endif pos:line="940" pos:column="1">#<cpp:directive pos:line="940" pos:column="2">endif<pos:position pos:line="940" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="940" pos:column="8">/* USE_MDTM */</comment>

    <comment type="block" pos:line="942" pos:column="5">/* If an encoding has been set by mistake, delete it.
     * @@@ FIXME (e.g., for ftp://user@host/file*.tar.gz,
     * @@@        the encoding is currently set to x-gzip)
     */</comment>
    <if pos:line="946" pos:column="5">if <condition pos:line="946" pos:column="8">(<expr><name pos:line="946" pos:column="9">dirlisting<pos:position pos:line="946" pos:column="19"/></name> <operator pos:line="946" pos:column="20">&amp;&amp;<pos:position pos:line="946" pos:column="30"/></operator> <name><name pos:line="946" pos:column="23">r<pos:position pos:line="946" pos:column="24"/></name><operator pos:line="946" pos:column="24">-&gt;<pos:position pos:line="946" pos:column="29"/></operator><name pos:line="946" pos:column="26">content_encoding<pos:position pos:line="946" pos:column="42"/></name></name> <operator pos:line="946" pos:column="43">!=<pos:position pos:line="946" pos:column="45"/></operator> <name pos:line="946" pos:column="46">NULL<pos:position pos:line="946" pos:column="50"/></name></expr>)<pos:position pos:line="946" pos:column="51"/></condition><then pos:line="946" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="947" pos:column="9">r<pos:position pos:line="947" pos:column="10"/></name><operator pos:line="947" pos:column="10">-&gt;<pos:position pos:line="947" pos:column="15"/></operator><name pos:line="947" pos:column="12">content_encoding<pos:position pos:line="947" pos:column="28"/></name></name> <operator pos:line="947" pos:column="29">=<pos:position pos:line="947" pos:column="30"/></operator> <name pos:line="947" pos:column="31">NULL<pos:position pos:line="947" pos:column="35"/></name></expr>;<pos:position pos:line="947" pos:column="36"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="949" pos:column="5">/* set content-encoding (not for dir listings, they are uncompressed)*/</comment>
    <if pos:line="950" pos:column="5">if <condition pos:line="950" pos:column="8">(<expr><name><name pos:line="950" pos:column="9">r<pos:position pos:line="950" pos:column="10"/></name><operator pos:line="950" pos:column="10">-&gt;<pos:position pos:line="950" pos:column="15"/></operator><name pos:line="950" pos:column="12">content_encoding<pos:position pos:line="950" pos:column="28"/></name></name> <operator pos:line="950" pos:column="29">!=<pos:position pos:line="950" pos:column="31"/></operator> <name pos:line="950" pos:column="32">NULL<pos:position pos:line="950" pos:column="36"/></name> <operator pos:line="950" pos:column="37">&amp;&amp;<pos:position pos:line="950" pos:column="47"/></operator> <name><name pos:line="950" pos:column="40">r<pos:position pos:line="950" pos:column="41"/></name><operator pos:line="950" pos:column="41">-&gt;<pos:position pos:line="950" pos:column="46"/></operator><name pos:line="950" pos:column="43">content_encoding<pos:position pos:line="950" pos:column="59"/></name><index pos:line="950" pos:column="59">[<expr><literal type="number" pos:line="950" pos:column="60">0<pos:position pos:line="950" pos:column="61"/></literal></expr>]<pos:position pos:line="950" pos:column="62"/></index></name> <operator pos:line="950" pos:column="63">!=<pos:position pos:line="950" pos:column="65"/></operator> <literal type="char" pos:line="950" pos:column="66">'\0'<pos:position pos:line="950" pos:column="70"/></literal></expr>)<pos:position pos:line="950" pos:column="71"/></condition><then pos:line="950" pos:column="71"> <block pos:line="950" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="951" pos:column="9">ap_log_error<pos:position pos:line="951" pos:column="21"/></name><argument_list pos:line="951" pos:column="21">(<argument><expr><name pos:line="951" pos:column="22">APLOG_MARK<pos:position pos:line="951" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="951" pos:column="34">APLOG_TRACE3<pos:position pos:line="951" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="951" pos:column="48">0<pos:position pos:line="951" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="951" pos:column="51">r<pos:position pos:line="951" pos:column="52"/></name><operator pos:line="951" pos:column="52">-&gt;<pos:position pos:line="951" pos:column="57"/></operator><name pos:line="951" pos:column="54">server<pos:position pos:line="951" pos:column="60"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="952" pos:column="22">"proxy: FTP: Content-Encoding set to %s"<pos:position pos:line="952" pos:column="62"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="953" pos:column="22">r<pos:position pos:line="953" pos:column="23"/></name><operator pos:line="953" pos:column="23">-&gt;<pos:position pos:line="953" pos:column="28"/></operator><name pos:line="953" pos:column="25">content_encoding<pos:position pos:line="953" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="953" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="953" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="954" pos:column="9">apr_table_setn<pos:position pos:line="954" pos:column="23"/></name><argument_list pos:line="954" pos:column="23">(<argument><expr><name><name pos:line="954" pos:column="24">r<pos:position pos:line="954" pos:column="25"/></name><operator pos:line="954" pos:column="25">-&gt;<pos:position pos:line="954" pos:column="30"/></operator><name pos:line="954" pos:column="27">headers_out<pos:position pos:line="954" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="954" pos:column="40">"Content-Encoding"<pos:position pos:line="954" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="954" pos:column="60">r<pos:position pos:line="954" pos:column="61"/></name><operator pos:line="954" pos:column="61">-&gt;<pos:position pos:line="954" pos:column="66"/></operator><name pos:line="954" pos:column="63">content_encoding<pos:position pos:line="954" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="954" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="954" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="955" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="957" pos:column="5">/* wait for connection */</comment>
    <if pos:line="958" pos:column="5">if <condition pos:line="958" pos:column="8">(<expr><name pos:line="958" pos:column="9">use_port<pos:position pos:line="958" pos:column="17"/></name></expr>)<pos:position pos:line="958" pos:column="18"/></condition><then pos:line="958" pos:column="18"> <block pos:line="958" pos:column="19">{
        <for pos:line="959" pos:column="9">for <control pos:line="959" pos:column="13">(<init pos:line="959" pos:column="14">;<pos:position pos:line="959" pos:column="15"/></init><condition pos:line="959" pos:column="15">;<pos:position pos:line="959" pos:column="16"/></condition><incr/>)<pos:position pos:line="959" pos:column="17"/></control> <block pos:line="959" pos:column="18">{
            <expr_stmt><expr><name pos:line="960" pos:column="13">rv<pos:position pos:line="960" pos:column="15"/></name> <operator pos:line="960" pos:column="16">=<pos:position pos:line="960" pos:column="17"/></operator> <call><name pos:line="960" pos:column="18">apr_socket_accept<pos:position pos:line="960" pos:column="35"/></name><argument_list pos:line="960" pos:column="35">(<argument><expr><operator pos:line="960" pos:column="36">&amp;<pos:position pos:line="960" pos:column="41"/></operator><name pos:line="960" pos:column="37">data_sock<pos:position pos:line="960" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="960" pos:column="48">local_sock<pos:position pos:line="960" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="960" pos:column="60">r<pos:position pos:line="960" pos:column="61"/></name><operator pos:line="960" pos:column="61">-&gt;<pos:position pos:line="960" pos:column="66"/></operator><name pos:line="960" pos:column="63">pool<pos:position pos:line="960" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="960" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="960" pos:column="69"/></expr_stmt>
            <if pos:line="961" pos:column="13">if <condition pos:line="961" pos:column="16">(<expr><name pos:line="961" pos:column="17">rv<pos:position pos:line="961" pos:column="19"/></name> <operator pos:line="961" pos:column="20">==<pos:position pos:line="961" pos:column="22"/></operator> <name pos:line="961" pos:column="23">APR_EINTR<pos:position pos:line="961" pos:column="32"/></name></expr>)<pos:position pos:line="961" pos:column="33"/></condition><then pos:line="961" pos:column="33"> <block pos:line="961" pos:column="34">{
                <continue pos:line="962" pos:column="17">continue;<pos:position pos:line="962" pos:column="26"/></continue>
            }<pos:position pos:line="963" pos:column="14"/></block></then>
            <elseif pos:line="964" pos:column="13">else <if pos:line="964" pos:column="18">if <condition pos:line="964" pos:column="21">(<expr><name pos:line="964" pos:column="22">rv<pos:position pos:line="964" pos:column="24"/></name> <operator pos:line="964" pos:column="25">==<pos:position pos:line="964" pos:column="27"/></operator> <name pos:line="964" pos:column="28">APR_SUCCESS<pos:position pos:line="964" pos:column="39"/></name></expr>)<pos:position pos:line="964" pos:column="40"/></condition><then pos:line="964" pos:column="40"> <block pos:line="964" pos:column="41">{
                <break pos:line="965" pos:column="17">break;<pos:position pos:line="965" pos:column="23"/></break>
            }<pos:position pos:line="966" pos:column="14"/></block></then></if></elseif>
            <else pos:line="967" pos:column="13">else <block pos:line="967" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="968" pos:column="17">ap_log_rerror<pos:position pos:line="968" pos:column="30"/></name><argument_list pos:line="968" pos:column="30">(<argument><expr><name pos:line="968" pos:column="31">APLOG_MARK<pos:position pos:line="968" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="968" pos:column="43">APLOG_ERR<pos:position pos:line="968" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="968" pos:column="54">rv<pos:position pos:line="968" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="968" pos:column="58">r<pos:position pos:line="968" pos:column="59"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="969" pos:column="29">"proxy: FTP: failed to accept data connection"<pos:position pos:line="969" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="969" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="969" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="970" pos:column="17">proxy_ftp_cleanup<pos:position pos:line="970" pos:column="34"/></name><argument_list pos:line="970" pos:column="34">(<argument><expr><name pos:line="970" pos:column="35">r<pos:position pos:line="970" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="970" pos:column="38">backend<pos:position pos:line="970" pos:column="45"/></name></expr></argument>)<pos:position pos:line="970" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="970" pos:column="47"/></expr_stmt>
                <return pos:line="971" pos:column="17">return <expr><name pos:line="971" pos:column="24">HTTP_BAD_GATEWAY<pos:position pos:line="971" pos:column="40"/></name></expr>;<pos:position pos:line="971" pos:column="41"/></return>
            }<pos:position pos:line="972" pos:column="14"/></block></else></if>
        }<pos:position pos:line="973" pos:column="10"/></block></for>
    }<pos:position pos:line="974" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="976" pos:column="5">/* the transfer socket is now open, create a new connection */</comment>
    <expr_stmt><expr><name pos:line="977" pos:column="5">data<pos:position pos:line="977" pos:column="9"/></name> <operator pos:line="977" pos:column="10">=<pos:position pos:line="977" pos:column="11"/></operator> <call><name pos:line="977" pos:column="12">ap_run_create_connection<pos:position pos:line="977" pos:column="36"/></name><argument_list pos:line="977" pos:column="36">(<argument><expr><name pos:line="977" pos:column="37">p<pos:position pos:line="977" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="977" pos:column="40">r<pos:position pos:line="977" pos:column="41"/></name><operator pos:line="977" pos:column="41">-&gt;<pos:position pos:line="977" pos:column="46"/></operator><name pos:line="977" pos:column="43">server<pos:position pos:line="977" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="977" pos:column="51">data_sock<pos:position pos:line="977" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="977" pos:column="62">r<pos:position pos:line="977" pos:column="63"/></name><operator pos:line="977" pos:column="63">-&gt;<pos:position pos:line="977" pos:column="68"/></operator><name pos:line="977" pos:column="65">connection<pos:position pos:line="977" pos:column="75"/></name><operator pos:line="977" pos:column="75">-&gt;<pos:position pos:line="977" pos:column="80"/></operator><name pos:line="977" pos:column="77">id<pos:position pos:line="977" pos:column="79"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="978" pos:column="37">r<pos:position pos:line="978" pos:column="38"/></name><operator pos:line="978" pos:column="38">-&gt;<pos:position pos:line="978" pos:column="43"/></operator><name pos:line="978" pos:column="40">connection<pos:position pos:line="978" pos:column="50"/></name><operator pos:line="978" pos:column="50">-&gt;<pos:position pos:line="978" pos:column="55"/></operator><name pos:line="978" pos:column="52">sbh<pos:position pos:line="978" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="978" pos:column="57">c<pos:position pos:line="978" pos:column="58"/></name><operator pos:line="978" pos:column="58">-&gt;<pos:position pos:line="978" pos:column="63"/></operator><name pos:line="978" pos:column="60">bucket_alloc<pos:position pos:line="978" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="978" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="978" pos:column="74"/></expr_stmt>
    <if pos:line="979" pos:column="5">if <condition pos:line="979" pos:column="8">(<expr><operator pos:line="979" pos:column="9">!<pos:position pos:line="979" pos:column="10"/></operator><name pos:line="979" pos:column="10">data<pos:position pos:line="979" pos:column="14"/></name></expr>)<pos:position pos:line="979" pos:column="15"/></condition><then pos:line="979" pos:column="15"> <block pos:line="979" pos:column="16">{
        <comment type="block" pos:line="980" pos:column="9">/*
         * the peer reset the connection already; ap_run_create_connection() closed
         * the socket
         */</comment>
        <expr_stmt><expr><call><name pos:line="984" pos:column="9">ap_log_error<pos:position pos:line="984" pos:column="21"/></name><argument_list pos:line="984" pos:column="21">(<argument><expr><name pos:line="984" pos:column="22">APLOG_MARK<pos:position pos:line="984" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="984" pos:column="34">APLOG_DEBUG<pos:position pos:line="984" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="984" pos:column="47">0<pos:position pos:line="984" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="984" pos:column="50">r<pos:position pos:line="984" pos:column="51"/></name><operator pos:line="984" pos:column="51">-&gt;<pos:position pos:line="984" pos:column="56"/></operator><name pos:line="984" pos:column="53">server<pos:position pos:line="984" pos:column="59"/></name></name></expr></argument>,
          <argument><expr><literal type="string" pos:line="985" pos:column="11">"proxy: FTP: an error occurred creating the transfer connection"<pos:position pos:line="985" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="985" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="985" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="986" pos:column="9">proxy_ftp_cleanup<pos:position pos:line="986" pos:column="26"/></name><argument_list pos:line="986" pos:column="26">(<argument><expr><name pos:line="986" pos:column="27">r<pos:position pos:line="986" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="986" pos:column="30">backend<pos:position pos:line="986" pos:column="37"/></name></expr></argument>)<pos:position pos:line="986" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="986" pos:column="39"/></expr_stmt>
        <return pos:line="987" pos:column="9">return <expr><name pos:line="987" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="987" pos:column="42"/></name></expr>;<pos:position pos:line="987" pos:column="43"/></return>
    }<pos:position pos:line="988" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="990" pos:column="5">/*
     * We do not do SSL over the data connection, even if the virtual host we
     * are in might have SSL enabled
     */</comment>
    <expr_stmt><expr><call><name pos:line="994" pos:column="5">ap_proxy_ssl_disable<pos:position pos:line="994" pos:column="25"/></name><argument_list pos:line="994" pos:column="25">(<argument><expr><name pos:line="994" pos:column="26">data<pos:position pos:line="994" pos:column="30"/></name></expr></argument>)<pos:position pos:line="994" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="994" pos:column="32"/></expr_stmt>
    <comment type="block" pos:line="995" pos:column="5">/* set up the connection filters */</comment>
    <expr_stmt><expr><name pos:line="996" pos:column="5">rc<pos:position pos:line="996" pos:column="7"/></name> <operator pos:line="996" pos:column="8">=<pos:position pos:line="996" pos:column="9"/></operator> <call><name pos:line="996" pos:column="10">ap_run_pre_connection<pos:position pos:line="996" pos:column="31"/></name><argument_list pos:line="996" pos:column="31">(<argument><expr><name pos:line="996" pos:column="32">data<pos:position pos:line="996" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="996" pos:column="38">data_sock<pos:position pos:line="996" pos:column="47"/></name></expr></argument>)<pos:position pos:line="996" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="996" pos:column="49"/></expr_stmt>
    <if pos:line="997" pos:column="5">if <condition pos:line="997" pos:column="8">(<expr><name pos:line="997" pos:column="9">rc<pos:position pos:line="997" pos:column="11"/></name> <operator pos:line="997" pos:column="12">!=<pos:position pos:line="997" pos:column="14"/></operator> <name pos:line="997" pos:column="15">OK<pos:position pos:line="997" pos:column="17"/></name> <operator pos:line="997" pos:column="18">&amp;&amp;<pos:position pos:line="997" pos:column="28"/></operator> <name pos:line="997" pos:column="21">rc<pos:position pos:line="997" pos:column="23"/></name> <operator pos:line="997" pos:column="24">!=<pos:position pos:line="997" pos:column="26"/></operator> <name pos:line="997" pos:column="27">DONE<pos:position pos:line="997" pos:column="31"/></name></expr>)<pos:position pos:line="997" pos:column="32"/></condition><then pos:line="997" pos:column="32"> <block pos:line="997" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="998" pos:column="9">ap_log_error<pos:position pos:line="998" pos:column="21"/></name><argument_list pos:line="998" pos:column="21">(<argument><expr><name pos:line="998" pos:column="22">APLOG_MARK<pos:position pos:line="998" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="998" pos:column="34">APLOG_DEBUG<pos:position pos:line="998" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="998" pos:column="47">0<pos:position pos:line="998" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="998" pos:column="50">r<pos:position pos:line="998" pos:column="51"/></name><operator pos:line="998" pos:column="51">-&gt;<pos:position pos:line="998" pos:column="56"/></operator><name pos:line="998" pos:column="53">server<pos:position pos:line="998" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="999" pos:column="22">"proxy: FTP: pre_connection setup failed (%d)"<pos:position pos:line="999" pos:column="68"/></literal></expr></argument>,
                     <argument><expr><name pos:line="1000" pos:column="22">rc<pos:position pos:line="1000" pos:column="24"/></name></expr></argument>)<pos:position pos:line="1000" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="1000" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="1001" pos:column="9">data<pos:position pos:line="1001" pos:column="13"/></name><operator pos:line="1001" pos:column="13">-&gt;<pos:position pos:line="1001" pos:column="18"/></operator><name pos:line="1001" pos:column="15">aborted<pos:position pos:line="1001" pos:column="22"/></name></name> <operator pos:line="1001" pos:column="23">=<pos:position pos:line="1001" pos:column="24"/></operator> <literal type="number" pos:line="1001" pos:column="25">1<pos:position pos:line="1001" pos:column="26"/></literal></expr>;<pos:position pos:line="1001" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1002" pos:column="9">proxy_ftp_cleanup<pos:position pos:line="1002" pos:column="26"/></name><argument_list pos:line="1002" pos:column="26">(<argument><expr><name pos:line="1002" pos:column="27">r<pos:position pos:line="1002" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1002" pos:column="30">backend<pos:position pos:line="1002" pos:column="37"/></name></expr></argument>)<pos:position pos:line="1002" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="1002" pos:column="39"/></expr_stmt>
        <return pos:line="1003" pos:column="9">return <expr><name pos:line="1003" pos:column="16">rc<pos:position pos:line="1003" pos:column="18"/></name></expr>;<pos:position pos:line="1003" pos:column="19"/></return>
    }<pos:position pos:line="1004" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="1006" pos:column="5">/*
     * VI: Receive the Response ------------------------
     *
     * Get response from the remote ftp socket, and pass it up the filter chain.
     */</comment>

    <comment type="block" pos:line="1012" pos:column="5">/* send response */</comment>
    <expr_stmt><expr><name><name pos:line="1013" pos:column="5">r<pos:position pos:line="1013" pos:column="6"/></name><operator pos:line="1013" pos:column="6">-&gt;<pos:position pos:line="1013" pos:column="11"/></operator><name pos:line="1013" pos:column="8">sent_bodyct<pos:position pos:line="1013" pos:column="19"/></name></name> <operator pos:line="1013" pos:column="20">=<pos:position pos:line="1013" pos:column="21"/></operator> <literal type="number" pos:line="1013" pos:column="22">1<pos:position pos:line="1013" pos:column="23"/></literal></expr>;<pos:position pos:line="1013" pos:column="24"/></expr_stmt>

    <if pos:line="1015" pos:column="5">if <condition pos:line="1015" pos:column="8">(<expr><name pos:line="1015" pos:column="9">dirlisting<pos:position pos:line="1015" pos:column="19"/></name></expr>)<pos:position pos:line="1015" pos:column="20"/></condition><then pos:line="1015" pos:column="20"> <block pos:line="1015" pos:column="21">{
        <comment type="block" pos:line="1016" pos:column="9">/* insert directory filter */</comment>
        <expr_stmt><expr><call><name pos:line="1017" pos:column="9">ap_add_output_filter<pos:position pos:line="1017" pos:column="29"/></name><argument_list pos:line="1017" pos:column="29">(<argument><expr><literal type="string" pos:line="1017" pos:column="30">"PROXY_SEND_DIR"<pos:position pos:line="1017" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="1017" pos:column="48">NULL<pos:position pos:line="1017" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1017" pos:column="54">r<pos:position pos:line="1017" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="1017" pos:column="57">r<pos:position pos:line="1017" pos:column="58"/></name><operator pos:line="1017" pos:column="58">-&gt;<pos:position pos:line="1017" pos:column="63"/></operator><name pos:line="1017" pos:column="60">connection<pos:position pos:line="1017" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="1017" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="1017" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="1018" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="1020" pos:column="5">/* send body */</comment>
    <if pos:line="1021" pos:column="5">if <condition pos:line="1021" pos:column="8">(<expr><operator pos:line="1021" pos:column="9">!<pos:position pos:line="1021" pos:column="10"/></operator><name><name pos:line="1021" pos:column="10">r<pos:position pos:line="1021" pos:column="11"/></name><operator pos:line="1021" pos:column="11">-&gt;<pos:position pos:line="1021" pos:column="16"/></operator><name pos:line="1021" pos:column="13">header_only<pos:position pos:line="1021" pos:column="24"/></name></name></expr>)<pos:position pos:line="1021" pos:column="25"/></condition><then pos:line="1021" pos:column="25"> <block pos:line="1021" pos:column="26">{
        <decl_stmt><decl><type><name pos:line="1022" pos:column="9">apr_bucket<pos:position pos:line="1022" pos:column="19"/></name> <modifier pos:line="1022" pos:column="20">*<pos:position pos:line="1022" pos:column="21"/></modifier></type><name pos:line="1022" pos:column="21">e<pos:position pos:line="1022" pos:column="22"/></name></decl>;<pos:position pos:line="1022" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1023" pos:column="9">int<pos:position pos:line="1023" pos:column="12"/></name></type> <name pos:line="1023" pos:column="13">finish<pos:position pos:line="1023" pos:column="19"/></name> <init pos:line="1023" pos:column="20">= <expr><name pos:line="1023" pos:column="22">FALSE<pos:position pos:line="1023" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="1023" pos:column="28"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="1025" pos:column="9">ap_log_error<pos:position pos:line="1025" pos:column="21"/></name><argument_list pos:line="1025" pos:column="21">(<argument><expr><name pos:line="1025" pos:column="22">APLOG_MARK<pos:position pos:line="1025" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1025" pos:column="34">APLOG_TRACE3<pos:position pos:line="1025" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1025" pos:column="48">0<pos:position pos:line="1025" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="1025" pos:column="51">r<pos:position pos:line="1025" pos:column="52"/></name><operator pos:line="1025" pos:column="52">-&gt;<pos:position pos:line="1025" pos:column="57"/></operator><name pos:line="1025" pos:column="54">server<pos:position pos:line="1025" pos:column="60"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="1026" pos:column="22">"proxy: FTP: start body send"<pos:position pos:line="1026" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="1026" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="1026" pos:column="53"/></expr_stmt>

        <comment type="block" pos:line="1028" pos:column="9">/* read the body, pass it to the output filters */</comment>
        <while pos:line="1029" pos:column="9">while <condition pos:line="1029" pos:column="15">(<expr><call><name pos:line="1029" pos:column="16">ap_get_brigade<pos:position pos:line="1029" pos:column="30"/></name><argument_list pos:line="1029" pos:column="30">(<argument><expr><name><name pos:line="1029" pos:column="31">data<pos:position pos:line="1029" pos:column="35"/></name><operator pos:line="1029" pos:column="35">-&gt;<pos:position pos:line="1029" pos:column="40"/></operator><name pos:line="1029" pos:column="37">input_filters<pos:position pos:line="1029" pos:column="50"/></name></name></expr></argument>,
                              <argument><expr><name pos:line="1030" pos:column="31">bb<pos:position pos:line="1030" pos:column="33"/></name></expr></argument>,
                              <argument><expr><name pos:line="1031" pos:column="31">AP_MODE_READBYTES<pos:position pos:line="1031" pos:column="48"/></name></expr></argument>,
                              <argument><expr><name pos:line="1032" pos:column="31">APR_BLOCK_READ<pos:position pos:line="1032" pos:column="45"/></name></expr></argument>,
                              <argument><expr><name><name pos:line="1033" pos:column="31">conf<pos:position pos:line="1033" pos:column="35"/></name><operator pos:line="1033" pos:column="35">-&gt;<pos:position pos:line="1033" pos:column="40"/></operator><name pos:line="1033" pos:column="37">io_buffer_size<pos:position pos:line="1033" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="1033" pos:column="52"/></argument_list></call> <operator pos:line="1033" pos:column="53">==<pos:position pos:line="1033" pos:column="55"/></operator> <name pos:line="1033" pos:column="56">APR_SUCCESS<pos:position pos:line="1033" pos:column="67"/></name></expr>)<pos:position pos:line="1033" pos:column="68"/></condition> <block pos:line="1033" pos:column="69">{
<cpp:if pos:line="1034" pos:column="1">#<cpp:directive pos:line="1034" pos:column="2">if<pos:position pos:line="1034" pos:column="4"/></cpp:directive> <expr><name pos:line="1034" pos:column="5">DEBUGGING<pos:position pos:line="1034" pos:column="14"/></name></expr></cpp:if>
            <block pos:line="1035" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="1036" pos:column="17">apr_off_t<pos:position pos:line="1036" pos:column="26"/></name></type> <name pos:line="1036" pos:column="27">readbytes<pos:position pos:line="1036" pos:column="36"/></name></decl>;<pos:position pos:line="1036" pos:column="37"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="1037" pos:column="17">apr_brigade_length<pos:position pos:line="1037" pos:column="35"/></name><argument_list pos:line="1037" pos:column="35">(<argument><expr><name pos:line="1037" pos:column="36">bb<pos:position pos:line="1037" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1037" pos:column="40">0<pos:position pos:line="1037" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="1037" pos:column="43">&amp;<pos:position pos:line="1037" pos:column="48"/></operator><name pos:line="1037" pos:column="44">readbytes<pos:position pos:line="1037" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1037" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="1037" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="1038" pos:column="17">ap_log_error<pos:position pos:line="1038" pos:column="29"/></name><argument_list pos:line="1038" pos:column="29">(<argument><expr><name pos:line="1038" pos:column="30">APLOG_MARK<pos:position pos:line="1038" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="1038" pos:column="42">APLOG_DEBUG<pos:position pos:line="1038" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1038" pos:column="55">0<pos:position pos:line="1038" pos:column="56"/></literal></expr></argument>,
                             <argument><expr><name><name pos:line="1039" pos:column="30">r<pos:position pos:line="1039" pos:column="31"/></name><operator pos:line="1039" pos:column="31">-&gt;<pos:position pos:line="1039" pos:column="36"/></operator><name pos:line="1039" pos:column="33">server<pos:position pos:line="1039" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1039" pos:column="41">"proxy (PID %d): readbytes: %#x"<pos:position pos:line="1039" pos:column="73"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="1040" pos:column="30">getpid<pos:position pos:line="1040" pos:column="36"/></name><argument_list pos:line="1040" pos:column="36">()<pos:position pos:line="1040" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="1040" pos:column="40">readbytes<pos:position pos:line="1040" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1040" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1040" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="1041" pos:column="14"/></block>
<cpp:endif pos:line="1042" pos:column="1">#<cpp:directive pos:line="1042" pos:column="2">endif<pos:position pos:line="1042" pos:column="7"/></cpp:directive></cpp:endif>
            <comment type="block" pos:line="1043" pos:column="13">/* sanity check */</comment>
            <if pos:line="1044" pos:column="13">if <condition pos:line="1044" pos:column="16">(<expr><call><name pos:line="1044" pos:column="17">APR_BRIGADE_EMPTY<pos:position pos:line="1044" pos:column="34"/></name><argument_list pos:line="1044" pos:column="34">(<argument><expr><name pos:line="1044" pos:column="35">bb<pos:position pos:line="1044" pos:column="37"/></name></expr></argument>)<pos:position pos:line="1044" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="1044" pos:column="39"/></condition><then pos:line="1044" pos:column="39"> <block pos:line="1044" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="1045" pos:column="17">apr_brigade_cleanup<pos:position pos:line="1045" pos:column="36"/></name><argument_list pos:line="1045" pos:column="36">(<argument><expr><name pos:line="1045" pos:column="37">bb<pos:position pos:line="1045" pos:column="39"/></name></expr></argument>)<pos:position pos:line="1045" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="1045" pos:column="41"/></expr_stmt>
                <break pos:line="1046" pos:column="17">break;<pos:position pos:line="1046" pos:column="23"/></break>
            }<pos:position pos:line="1047" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="1049" pos:column="13">/* found the last brigade? */</comment>
            <if pos:line="1050" pos:column="13">if <condition pos:line="1050" pos:column="16">(<expr><call><name pos:line="1050" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="1050" pos:column="34"/></name><argument_list pos:line="1050" pos:column="34">(<argument><expr><call><name pos:line="1050" pos:column="35">APR_BRIGADE_LAST<pos:position pos:line="1050" pos:column="51"/></name><argument_list pos:line="1050" pos:column="51">(<argument><expr><name pos:line="1050" pos:column="52">bb<pos:position pos:line="1050" pos:column="54"/></name></expr></argument>)<pos:position pos:line="1050" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="1050" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="1050" pos:column="57"/></condition><then pos:line="1050" pos:column="57"> <block pos:line="1050" pos:column="58">{
                <comment type="block" pos:line="1051" pos:column="17">/* if this is the last brigade, cleanup the
                 * backend connection first to prevent the
                 * backend server from hanging around waiting
                 * for a slow client to eat these bytes
                 */</comment>
                <expr_stmt><expr><call><name pos:line="1056" pos:column="17">ap_flush_conn<pos:position pos:line="1056" pos:column="30"/></name><argument_list pos:line="1056" pos:column="30">(<argument><expr><name pos:line="1056" pos:column="31">data<pos:position pos:line="1056" pos:column="35"/></name></expr></argument>)<pos:position pos:line="1056" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="1056" pos:column="37"/></expr_stmt>
                <if pos:line="1057" pos:column="17">if <condition pos:line="1057" pos:column="20">(<expr><name pos:line="1057" pos:column="21">data_sock<pos:position pos:line="1057" pos:column="30"/></name></expr>)<pos:position pos:line="1057" pos:column="31"/></condition><then pos:line="1057" pos:column="31"> <block pos:line="1057" pos:column="32">{
                    <expr_stmt><expr><call><name pos:line="1058" pos:column="21">apr_socket_close<pos:position pos:line="1058" pos:column="37"/></name><argument_list pos:line="1058" pos:column="37">(<argument><expr><name pos:line="1058" pos:column="38">data_sock<pos:position pos:line="1058" pos:column="47"/></name></expr></argument>)<pos:position pos:line="1058" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="1058" pos:column="49"/></expr_stmt>
                }<pos:position pos:line="1059" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="1060" pos:column="17">data_sock<pos:position pos:line="1060" pos:column="26"/></name> <operator pos:line="1060" pos:column="27">=<pos:position pos:line="1060" pos:column="28"/></operator> <name pos:line="1060" pos:column="29">NULL<pos:position pos:line="1060" pos:column="33"/></name></expr>;<pos:position pos:line="1060" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="1061" pos:column="17">ap_log_error<pos:position pos:line="1061" pos:column="29"/></name><argument_list pos:line="1061" pos:column="29">(<argument><expr><name pos:line="1061" pos:column="30">APLOG_MARK<pos:position pos:line="1061" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="1061" pos:column="42">APLOG_DEBUG<pos:position pos:line="1061" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1061" pos:column="55">0<pos:position pos:line="1061" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="1061" pos:column="58">r<pos:position pos:line="1061" pos:column="59"/></name><operator pos:line="1061" pos:column="59">-&gt;<pos:position pos:line="1061" pos:column="64"/></operator><name pos:line="1061" pos:column="61">server<pos:position pos:line="1061" pos:column="67"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="1062" pos:column="30">"proxy: FTP: data connection closed"<pos:position pos:line="1062" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="1062" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="1062" pos:column="68"/></expr_stmt>
                <comment type="block" pos:line="1063" pos:column="17">/* signal that we must leave */</comment>
                <expr_stmt><expr><name pos:line="1064" pos:column="17">finish<pos:position pos:line="1064" pos:column="23"/></name> <operator pos:line="1064" pos:column="24">=<pos:position pos:line="1064" pos:column="25"/></operator> <name pos:line="1064" pos:column="26">TRUE<pos:position pos:line="1064" pos:column="30"/></name></expr>;<pos:position pos:line="1064" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="1065" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="1067" pos:column="13">/* if no EOS yet, then we must flush */</comment>
            <if pos:line="1068" pos:column="13">if <condition pos:line="1068" pos:column="16">(<expr><name pos:line="1068" pos:column="17">FALSE<pos:position pos:line="1068" pos:column="22"/></name> <operator pos:line="1068" pos:column="23">==<pos:position pos:line="1068" pos:column="25"/></operator> <name pos:line="1068" pos:column="26">finish<pos:position pos:line="1068" pos:column="32"/></name></expr>)<pos:position pos:line="1068" pos:column="33"/></condition><then pos:line="1068" pos:column="33"> <block pos:line="1068" pos:column="34">{
                <expr_stmt><expr><name pos:line="1069" pos:column="17">e<pos:position pos:line="1069" pos:column="18"/></name> <operator pos:line="1069" pos:column="19">=<pos:position pos:line="1069" pos:column="20"/></operator> <call><name pos:line="1069" pos:column="21">apr_bucket_flush_create<pos:position pos:line="1069" pos:column="44"/></name><argument_list pos:line="1069" pos:column="44">(<argument><expr><name><name pos:line="1069" pos:column="45">c<pos:position pos:line="1069" pos:column="46"/></name><operator pos:line="1069" pos:column="46">-&gt;<pos:position pos:line="1069" pos:column="51"/></operator><name pos:line="1069" pos:column="48">bucket_alloc<pos:position pos:line="1069" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="1069" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1069" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="1070" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="1070" pos:column="40"/></name><argument_list pos:line="1070" pos:column="40">(<argument><expr><name pos:line="1070" pos:column="41">bb<pos:position pos:line="1070" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="1070" pos:column="45">e<pos:position pos:line="1070" pos:column="46"/></name></expr></argument>)<pos:position pos:line="1070" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="1070" pos:column="48"/></expr_stmt>
            }<pos:position pos:line="1071" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="1073" pos:column="13">/* try send what we read */</comment>
            <if pos:line="1074" pos:column="13">if <condition pos:line="1074" pos:column="16">(<expr><call><name pos:line="1074" pos:column="17">ap_pass_brigade<pos:position pos:line="1074" pos:column="32"/></name><argument_list pos:line="1074" pos:column="32">(<argument><expr><name><name pos:line="1074" pos:column="33">r<pos:position pos:line="1074" pos:column="34"/></name><operator pos:line="1074" pos:column="34">-&gt;<pos:position pos:line="1074" pos:column="39"/></operator><name pos:line="1074" pos:column="36">output_filters<pos:position pos:line="1074" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="1074" pos:column="52">bb<pos:position pos:line="1074" pos:column="54"/></name></expr></argument>)<pos:position pos:line="1074" pos:column="55"/></argument_list></call> <operator pos:line="1074" pos:column="56">!=<pos:position pos:line="1074" pos:column="58"/></operator> <name pos:line="1074" pos:column="59">APR_SUCCESS<pos:position pos:line="1074" pos:column="70"/></name>
                <operator pos:line="1075" pos:column="17">||<pos:position pos:line="1075" pos:column="19"/></operator> <name><name pos:line="1075" pos:column="20">c<pos:position pos:line="1075" pos:column="21"/></name><operator pos:line="1075" pos:column="21">-&gt;<pos:position pos:line="1075" pos:column="26"/></operator><name pos:line="1075" pos:column="23">aborted<pos:position pos:line="1075" pos:column="30"/></name></name></expr>)<pos:position pos:line="1075" pos:column="31"/></condition><then pos:line="1075" pos:column="31"> <block pos:line="1075" pos:column="32">{
                <comment type="block" pos:line="1076" pos:column="17">/* Ack! Phbtt! Die! User aborted! */</comment>
                <expr_stmt><expr><name pos:line="1077" pos:column="17">finish<pos:position pos:line="1077" pos:column="23"/></name> <operator pos:line="1077" pos:column="24">=<pos:position pos:line="1077" pos:column="25"/></operator> <name pos:line="1077" pos:column="26">TRUE<pos:position pos:line="1077" pos:column="30"/></name></expr>;<pos:position pos:line="1077" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="1078" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="1080" pos:column="13">/* make sure we always clean up after ourselves */</comment>
            <expr_stmt><expr><call><name pos:line="1081" pos:column="13">apr_brigade_cleanup<pos:position pos:line="1081" pos:column="32"/></name><argument_list pos:line="1081" pos:column="32">(<argument><expr><name pos:line="1081" pos:column="33">bb<pos:position pos:line="1081" pos:column="35"/></name></expr></argument>)<pos:position pos:line="1081" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="1081" pos:column="37"/></expr_stmt>

            <comment type="block" pos:line="1083" pos:column="13">/* if we are done, leave */</comment>
            <if pos:line="1084" pos:column="13">if <condition pos:line="1084" pos:column="16">(<expr><name pos:line="1084" pos:column="17">TRUE<pos:position pos:line="1084" pos:column="21"/></name> <operator pos:line="1084" pos:column="22">==<pos:position pos:line="1084" pos:column="24"/></operator> <name pos:line="1084" pos:column="25">finish<pos:position pos:line="1084" pos:column="31"/></name></expr>)<pos:position pos:line="1084" pos:column="32"/></condition><then pos:line="1084" pos:column="32"> <block pos:line="1084" pos:column="33">{
                <break pos:line="1085" pos:column="17">break;<pos:position pos:line="1085" pos:column="23"/></break>
            }<pos:position pos:line="1086" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1087" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="1088" pos:column="9">ap_log_error<pos:position pos:line="1088" pos:column="21"/></name><argument_list pos:line="1088" pos:column="21">(<argument><expr><name pos:line="1088" pos:column="22">APLOG_MARK<pos:position pos:line="1088" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1088" pos:column="34">APLOG_TRACE3<pos:position pos:line="1088" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1088" pos:column="48">0<pos:position pos:line="1088" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="1088" pos:column="51">r<pos:position pos:line="1088" pos:column="52"/></name><operator pos:line="1088" pos:column="52">-&gt;<pos:position pos:line="1088" pos:column="57"/></operator><name pos:line="1088" pos:column="54">server<pos:position pos:line="1088" pos:column="60"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="1089" pos:column="22">"proxy: FTP: end body send"<pos:position pos:line="1089" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="1089" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1089" pos:column="51"/></expr_stmt>

    }<pos:position pos:line="1091" pos:column="6"/></block></then></if>
    <if pos:line="1092" pos:column="5">if <condition pos:line="1092" pos:column="8">(<expr><name pos:line="1092" pos:column="9">data_sock<pos:position pos:line="1092" pos:column="18"/></name></expr>)<pos:position pos:line="1092" pos:column="19"/></condition><then pos:line="1092" pos:column="19"> <block pos:line="1092" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="1093" pos:column="9">ap_flush_conn<pos:position pos:line="1093" pos:column="22"/></name><argument_list pos:line="1093" pos:column="22">(<argument><expr><name pos:line="1093" pos:column="23">data<pos:position pos:line="1093" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1093" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1093" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1094" pos:column="9">apr_socket_close<pos:position pos:line="1094" pos:column="25"/></name><argument_list pos:line="1094" pos:column="25">(<argument><expr><name pos:line="1094" pos:column="26">data_sock<pos:position pos:line="1094" pos:column="35"/></name></expr></argument>)<pos:position pos:line="1094" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="1094" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1095" pos:column="9">ap_log_error<pos:position pos:line="1095" pos:column="21"/></name><argument_list pos:line="1095" pos:column="21">(<argument><expr><name pos:line="1095" pos:column="22">APLOG_MARK<pos:position pos:line="1095" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1095" pos:column="34">APLOG_DEBUG<pos:position pos:line="1095" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1095" pos:column="47">0<pos:position pos:line="1095" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="1095" pos:column="50">r<pos:position pos:line="1095" pos:column="51"/></name><operator pos:line="1095" pos:column="51">-&gt;<pos:position pos:line="1095" pos:column="56"/></operator><name pos:line="1095" pos:column="53">server<pos:position pos:line="1095" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="1096" pos:column="22">"proxy: FTP: data connection closed"<pos:position pos:line="1096" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="1096" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="1096" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="1097" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="1099" pos:column="5">/* Retrieve the final response for the RETR or LIST commands */</comment>
    <expr_stmt><expr><name pos:line="1100" pos:column="5">rc<pos:position pos:line="1100" pos:column="7"/></name> <operator pos:line="1100" pos:column="8">=<pos:position pos:line="1100" pos:column="9"/></operator> <call><name pos:line="1100" pos:column="10">proxy_ftp_command<pos:position pos:line="1100" pos:column="27"/></name><argument_list pos:line="1100" pos:column="27">(<argument><expr><name pos:line="1100" pos:column="28">NULL<pos:position pos:line="1100" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1100" pos:column="34">r<pos:position pos:line="1100" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1100" pos:column="37">origin<pos:position pos:line="1100" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="1100" pos:column="45">bb<pos:position pos:line="1100" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="1100" pos:column="49">&amp;<pos:position pos:line="1100" pos:column="54"/></operator><name pos:line="1100" pos:column="50">ftpmessage<pos:position pos:line="1100" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1100" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1100" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="1101" pos:column="5">apr_brigade_cleanup<pos:position pos:line="1101" pos:column="24"/></name><argument_list pos:line="1101" pos:column="24">(<argument><expr><name pos:line="1101" pos:column="25">bb<pos:position pos:line="1101" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1101" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1101" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="1103" pos:column="5">/*
     * VII: Clean Up -------------
     *
     * If there are no KeepAlives, or if the connection has been signalled to
     * close, close the socket and clean up
     */</comment>

    <comment type="block" pos:line="1110" pos:column="5">/* finish */</comment>
    <expr_stmt><expr><name pos:line="1111" pos:column="5">rc<pos:position pos:line="1111" pos:column="7"/></name> <operator pos:line="1111" pos:column="8">=<pos:position pos:line="1111" pos:column="9"/></operator> <call><name pos:line="1111" pos:column="10">proxy_ftp_command<pos:position pos:line="1111" pos:column="27"/></name><argument_list pos:line="1111" pos:column="27">(<argument><expr><literal type="string" pos:line="1111" pos:column="28">"QUIT"<pos:position pos:line="1111" pos:column="34"/></literal> <name pos:line="1111" pos:column="35">CRLF<pos:position pos:line="1111" pos:column="39"/></name></expr></argument>,
                           <argument><expr><name pos:line="1112" pos:column="28">r<pos:position pos:line="1112" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1112" pos:column="31">origin<pos:position pos:line="1112" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1112" pos:column="39">bb<pos:position pos:line="1112" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="1112" pos:column="43">&amp;<pos:position pos:line="1112" pos:column="48"/></operator><name pos:line="1112" pos:column="44">ftpmessage<pos:position pos:line="1112" pos:column="54"/></name></expr></argument>)<pos:position pos:line="1112" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="1112" pos:column="56"/></expr_stmt>
    <comment type="block" pos:line="1113" pos:column="5">/* responses: 221, 500 */</comment>
    <comment type="block" pos:line="1114" pos:column="5">/* 221 Service closing control connection. */</comment>
    <comment type="block" pos:line="1115" pos:column="5">/* 500 Syntax error, command unrecognized. */</comment>
    <expr_stmt><expr><call><name pos:line="1116" pos:column="5">ap_flush_conn<pos:position pos:line="1116" pos:column="18"/></name><argument_list pos:line="1116" pos:column="18">(<argument><expr><name pos:line="1116" pos:column="19">origin<pos:position pos:line="1116" pos:column="25"/></name></expr></argument>)<pos:position pos:line="1116" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="1116" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="1117" pos:column="5">proxy_ftp_cleanup<pos:position pos:line="1117" pos:column="22"/></name><argument_list pos:line="1117" pos:column="22">(<argument><expr><name pos:line="1117" pos:column="23">r<pos:position pos:line="1117" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="1117" pos:column="26">backend<pos:position pos:line="1117" pos:column="33"/></name></expr></argument>)<pos:position pos:line="1117" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="1117" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="1119" pos:column="5">apr_brigade_destroy<pos:position pos:line="1119" pos:column="24"/></name><argument_list pos:line="1119" pos:column="24">(<argument><expr><name pos:line="1119" pos:column="25">bb<pos:position pos:line="1119" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1119" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1119" pos:column="29"/></expr_stmt>
    <return pos:line="1120" pos:column="5">return <expr><name pos:line="1120" pos:column="12">OK<pos:position pos:line="1120" pos:column="14"/></name></expr>;<pos:position pos:line="1120" pos:column="15"/></return>
}<pos:position pos:line="1121" pos:column="2"/></block></function></unit>

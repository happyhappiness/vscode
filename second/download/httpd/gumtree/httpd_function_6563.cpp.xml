<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6563.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_table_t<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">make_table<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">h2_response_parser<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">parser<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">h2_task<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">task<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name><name pos:line="3" pos:column="21">parser<pos:position pos:line="3" pos:column="27"/></name><operator pos:line="3" pos:column="27">-&gt;<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="29">task<pos:position pos:line="3" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_array_header_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">hlines<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><name><name pos:line="4" pos:column="34">parser<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">-&gt;<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="42">hlines<pos:position pos:line="4" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">hlines<pos:position pos:line="5" pos:column="15"/></name></expr>)<pos:position pos:line="5" pos:column="16"/></condition><then pos:line="5" pos:column="16"> <block pos:line="5" pos:column="17">{
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">apr_table_t<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">headers<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><call><name pos:line="6" pos:column="32">apr_table_make<pos:position pos:line="6" pos:column="46"/></name><argument_list pos:line="6" pos:column="46">(<argument><expr><name><name pos:line="6" pos:column="47">task<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">-&gt;<pos:position pos:line="6" pos:column="56"/></operator><name pos:line="6" pos:column="53">pool<pos:position pos:line="6" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="59">hlines<pos:position pos:line="6" pos:column="65"/></name><operator pos:line="6" pos:column="65">-&gt;<pos:position pos:line="6" pos:column="70"/></operator><name pos:line="6" pos:column="67">nelts<pos:position pos:line="6" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="74"/></decl_stmt>        
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
        
        <for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">i<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></init> <condition><expr><name pos:line="9" pos:column="21">i<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <name><name pos:line="9" pos:column="25">hlines<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">nelts<pos:position pos:line="9" pos:column="38"/></name></name></expr>;<pos:position pos:line="9" pos:column="39"/></condition> <incr><expr><operator pos:line="9" pos:column="40">++<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="42">i<pos:position pos:line="9" pos:column="43"/></name></expr></incr>)<pos:position pos:line="9" pos:column="44"/></control> <block pos:line="9" pos:column="45">{
            <decl_stmt><decl><type><name pos:line="10" pos:column="13">char<pos:position pos:line="10" pos:column="17"/></name> <modifier pos:line="10" pos:column="18">*<pos:position pos:line="10" pos:column="19"/></modifier></type><name pos:line="10" pos:column="19">hline<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><operator pos:line="10" pos:column="27">(<pos:position pos:line="10" pos:column="28"/></operator><operator pos:line="10" pos:column="28">(<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">char<pos:position pos:line="10" pos:column="33"/></name> <operator pos:line="10" pos:column="34">*<pos:position pos:line="10" pos:column="35"/></operator><operator pos:line="10" pos:column="35">*<pos:position pos:line="10" pos:column="36"/></operator><operator pos:line="10" pos:column="36">)<pos:position pos:line="10" pos:column="37"/></operator><name><name pos:line="10" pos:column="37">hlines<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">elts<pos:position pos:line="10" pos:column="49"/></name></name><operator pos:line="10" pos:column="49">)<pos:position pos:line="10" pos:column="50"/></operator><index pos:line="10" pos:column="50">[<expr><name pos:line="10" pos:column="51">i<pos:position pos:line="10" pos:column="52"/></name></expr>]<pos:position pos:line="10" pos:column="53"/></index></expr></init></decl>;<pos:position pos:line="10" pos:column="54"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="11" pos:column="13">char<pos:position pos:line="11" pos:column="17"/></name> <modifier pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></modifier></type><name pos:line="11" pos:column="19">sep<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><call><name pos:line="11" pos:column="25">ap_strchr<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">hline<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="42">':'<pos:position pos:line="11" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="47"/></decl_stmt>
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><operator pos:line="12" pos:column="17">!<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">sep<pos:position pos:line="12" pos:column="21"/></name></expr>)<pos:position pos:line="12" pos:column="22"/></condition><then pos:line="12" pos:column="22"> <block pos:line="12" pos:column="23">{
                <expr_stmt><expr><call><name pos:line="13" pos:column="17">ap_log_cerror<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">APLOG_MARK<pos:position pos:line="13" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="43">APLOG_WARNING<pos:position pos:line="13" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="58">APR_EINVAL<pos:position pos:line="13" pos:column="68"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="70">task<pos:position pos:line="13" pos:column="74"/></name><operator pos:line="13" pos:column="74">-&gt;<pos:position pos:line="13" pos:column="79"/></operator><name pos:line="13" pos:column="76">c<pos:position pos:line="13" pos:column="77"/></name></name></expr></argument>,
                              <argument><expr><call><name pos:line="14" pos:column="31">APLOGNO<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><literal type="number" pos:line="14" pos:column="39">02955<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call> <literal type="string" pos:line="14" pos:column="46">"h2_task(%s): invalid header[%d] '%s'"<pos:position pos:line="14" pos:column="84"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="15" pos:column="31">task<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">id<pos:position pos:line="15" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="41">i<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="44">(<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="45">char<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">*<pos:position pos:line="15" pos:column="50"/></operator><operator pos:line="15" pos:column="50">)<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="51">hline<pos:position pos:line="15" pos:column="56"/></name></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="58"/></expr_stmt>
                <comment type="block" pos:line="16" pos:column="17">/* not valid format, abort */</comment>
                <return pos:line="17" pos:column="17">return <expr><name pos:line="17" pos:column="24">NULL<pos:position pos:line="17" pos:column="28"/></name></expr>;<pos:position pos:line="17" pos:column="29"/></return>
            }<pos:position pos:line="18" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><operator pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">sep<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">++<pos:position pos:line="19" pos:column="20"/></operator><operator pos:line="19" pos:column="20">)<pos:position pos:line="19" pos:column="21"/></operator> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <literal type="char" pos:line="19" pos:column="24">'\0'<pos:position pos:line="19" pos:column="28"/></literal></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
            <while pos:line="20" pos:column="13">while <condition pos:line="20" pos:column="19">(<expr><operator pos:line="20" pos:column="20">*<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">sep<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">==<pos:position pos:line="20" pos:column="27"/></operator> <literal type="char" pos:line="20" pos:column="28">' '<pos:position pos:line="20" pos:column="31"/></literal> <operator pos:line="20" pos:column="32">||<pos:position pos:line="20" pos:column="34"/></operator> <operator pos:line="20" pos:column="35">*<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">sep<pos:position pos:line="20" pos:column="39"/></name> <operator pos:line="20" pos:column="40">==<pos:position pos:line="20" pos:column="42"/></operator> <literal type="char" pos:line="20" pos:column="43">'\t'<pos:position pos:line="20" pos:column="47"/></literal></expr>)<pos:position pos:line="20" pos:column="48"/></condition> <block pos:line="20" pos:column="49">{
                <expr_stmt><expr><operator pos:line="21" pos:column="17">++<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">sep<pos:position pos:line="21" pos:column="22"/></name></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>
            }<pos:position pos:line="22" pos:column="14"/></block></while>
            
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><operator pos:line="24" pos:column="17">!<pos:position pos:line="24" pos:column="18"/></operator><call><name pos:line="24" pos:column="18">h2_util_ignore_header<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><name pos:line="24" pos:column="40">hline<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="47"/></condition><then pos:line="24" pos:column="47"> <block pos:line="24" pos:column="48">{
                <expr_stmt><expr><call><name pos:line="25" pos:column="17">apr_table_merge<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">headers<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="42">hline<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">sep<pos:position pos:line="25" pos:column="52"/></name></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="26" pos:column="14"/></block></then></if>
        }<pos:position pos:line="27" pos:column="10"/></block></for>
        <return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">headers<pos:position pos:line="28" pos:column="23"/></name></expr>;<pos:position pos:line="28" pos:column="24"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then>
    <else pos:line="30" pos:column="5">else <block pos:line="30" pos:column="10">{
        <return pos:line="31" pos:column="9">return <expr><call><name pos:line="31" pos:column="16">apr_table_make<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name><name pos:line="31" pos:column="31">task<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">-&gt;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="37">pool<pos:position pos:line="31" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="43">0<pos:position pos:line="31" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></return>        
    }<pos:position pos:line="32" pos:column="6"/></block></else></if>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

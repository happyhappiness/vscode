<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3394_httpd-2.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_socket_bind<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">apr_socket_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">sock<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">apr_sockaddr_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">sa<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><call><name pos:line="3" pos:column="9">bind<pos:position pos:line="3" pos:column="13"/></name><argument_list pos:line="3" pos:column="13">(<argument><expr><name><name pos:line="3" pos:column="14">sock<pos:position pos:line="3" pos:column="18"/></name><operator pos:line="3" pos:column="18">-&gt;<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="20">socketdes<pos:position pos:line="3" pos:column="29"/></name></name></expr></argument>, 
             <argument><expr><operator pos:line="4" pos:column="14">(<pos:position pos:line="4" pos:column="15"/></operator>struct <name pos:line="4" pos:column="22">sockaddr<pos:position pos:line="4" pos:column="30"/></name> <operator pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></operator><operator pos:line="4" pos:column="32">)<pos:position pos:line="4" pos:column="33"/></operator><operator pos:line="4" pos:column="33">&amp;<pos:position pos:line="4" pos:column="38"/></operator><name><name pos:line="4" pos:column="34">sa<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">sa<pos:position pos:line="4" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="42">sa<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">-&gt;<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="46">salen<pos:position pos:line="4" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="52"/></argument_list></call> <operator pos:line="4" pos:column="53">==<pos:position pos:line="4" pos:column="55"/></operator> <operator pos:line="4" pos:column="56">-<pos:position pos:line="4" pos:column="57"/></operator><literal type="number" pos:line="4" pos:column="57">1<pos:position pos:line="4" pos:column="58"/></literal></expr>)<pos:position pos:line="4" pos:column="59"/></condition><then pos:line="4" pos:column="59"> <block pos:line="4" pos:column="60">{
        <return pos:line="5" pos:column="9">return <expr><name pos:line="5" pos:column="16">errno<pos:position pos:line="5" pos:column="21"/></name></expr>;<pos:position pos:line="5" pos:column="22"/></return>
    }<pos:position pos:line="6" pos:column="6"/></block></then>
    <else pos:line="7" pos:column="5">else <block pos:line="7" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="8" pos:column="9">sock<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">local_addr<pos:position pos:line="8" pos:column="25"/></name></name> <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">sa<pos:position pos:line="8" pos:column="30"/></name></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
        <comment type="block" pos:line="9" pos:column="9">/* XXX IPv6 - this assumes sin_port and sin6_port at same offset */</comment>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">sock<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">local_addr<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">sa<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">.<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="34">sin<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">.<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="38">sin_port<pos:position pos:line="10" pos:column="46"/></name></name> <operator pos:line="10" pos:column="47">==<pos:position pos:line="10" pos:column="49"/></operator> <literal type="number" pos:line="10" pos:column="50">0<pos:position pos:line="10" pos:column="51"/></literal></expr>)<pos:position pos:line="10" pos:column="52"/></condition><then pos:line="10" pos:column="52"> <block pos:line="10" pos:column="53">{ <comment type="block" pos:line="10" pos:column="55">/* no need for ntohs() when comparing w/ 0 */</comment>
            <expr_stmt><expr><name><name pos:line="11" pos:column="13">sock<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">local_port_unknown<pos:position pos:line="11" pos:column="37"/></name></name> <operator pos:line="11" pos:column="38">=<pos:position pos:line="11" pos:column="39"/></operator> <literal type="number" pos:line="11" pos:column="40">1<pos:position pos:line="11" pos:column="41"/></literal></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt> <comment type="block" pos:line="11" pos:column="43">/* kernel got us an ephemeral port */</comment>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if>
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">APR_SUCCESS<pos:position pos:line="13" pos:column="27"/></name></expr>;<pos:position pos:line="13" pos:column="28"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></else></if>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

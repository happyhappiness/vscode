<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1881_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">add_extension_info<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">cmd_parms<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">cmd<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">void<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">m_<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                      <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">value_<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="59">const<pos:position pos:line="2" pos:column="64"/></specifier> <name pos:line="2" pos:column="65">char<pos:position pos:line="2" pos:column="69"/></name><modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type> <name pos:line="2" pos:column="71">ext<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">mime_dir_config<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">m<pos:position pos:line="4" pos:column="23"/></name><init pos:line="4" pos:column="23">=<expr><name pos:line="4" pos:column="24">m_<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">extension_info<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">exinfo<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">offset<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><operator pos:line="6" pos:column="18">(<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">int<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">)<pos:position pos:line="6" pos:column="23"/></operator> <operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">long<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">)<pos:position pos:line="6" pos:column="30"/></operator> <name><name pos:line="6" pos:column="31">cmd<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="36">info<pos:position pos:line="6" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">key<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><call><name pos:line="7" pos:column="17">apr_pstrdup<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name><name pos:line="7" pos:column="29">cmd<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">temp_pool<pos:position pos:line="7" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">ext<pos:position pos:line="7" pos:column="48"/></name></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">value<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><call><name pos:line="8" pos:column="19">apr_pstrdup<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name><name pos:line="8" pos:column="31">cmd<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">pool<pos:position pos:line="8" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">value_<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ap_str_tolower<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">value<pos:position pos:line="9" pos:column="25"/></name></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ap_str_tolower<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">key<pos:position pos:line="10" pos:column="23"/></name></expr></argument>)<pos:position pos:line="10" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">key<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">==<pos:position pos:line="12" pos:column="16"/></operator> <literal type="char" pos:line="12" pos:column="17">'.'<pos:position pos:line="12" pos:column="20"/></literal></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21"> <block pos:line="12" pos:column="22">{
        <expr_stmt><expr><operator pos:line="13" pos:column="9">++<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">key<pos:position pos:line="13" pos:column="14"/></name></expr>;<pos:position pos:line="13" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name><name pos:line="15" pos:column="10">m<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">extension_mappings<pos:position pos:line="15" pos:column="31"/></name></name></expr>)<pos:position pos:line="15" pos:column="32"/></condition><then pos:line="15" pos:column="32"> <block pos:line="15" pos:column="33">{
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">m<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">extension_mappings<pos:position pos:line="16" pos:column="30"/></name></name> <operator pos:line="16" pos:column="31">=<pos:position pos:line="16" pos:column="32"/></operator> <call><name pos:line="16" pos:column="33">apr_hash_make<pos:position pos:line="16" pos:column="46"/></name><argument_list pos:line="16" pos:column="46">(<argument><expr><name><name pos:line="16" pos:column="47">cmd<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">pool<pos:position pos:line="16" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">exinfo<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">NULL<pos:position pos:line="17" pos:column="22"/></name></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then>
    <else pos:line="19" pos:column="5">else <block pos:line="19" pos:column="10">{
        <expr_stmt><expr><name pos:line="20" pos:column="9">exinfo<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <operator pos:line="20" pos:column="18">(<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="19">extension_info<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">*<pos:position pos:line="20" pos:column="34"/></operator><operator pos:line="20" pos:column="34">)<pos:position pos:line="20" pos:column="35"/></operator><call><name pos:line="20" pos:column="35">apr_hash_get<pos:position pos:line="20" pos:column="47"/></name><argument_list pos:line="20" pos:column="47">(<argument><expr><name><name pos:line="20" pos:column="48">m<pos:position pos:line="20" pos:column="49"/></name><operator pos:line="20" pos:column="49">-&gt;<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="51">extension_mappings<pos:position pos:line="20" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="71">key<pos:position pos:line="20" pos:column="74"/></name></expr></argument>,
                                               <argument><expr><name pos:line="21" pos:column="48">APR_HASH_KEY_STRING<pos:position pos:line="21" pos:column="67"/></name></expr></argument>)<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">exinfo<pos:position pos:line="23" pos:column="16"/></name></expr>)<pos:position pos:line="23" pos:column="17"/></condition><then pos:line="23" pos:column="17"> <block pos:line="23" pos:column="18">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">exinfo<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <call><name pos:line="24" pos:column="18">apr_pcalloc<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name><name pos:line="24" pos:column="30">cmd<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">-&gt;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="35">pool<pos:position pos:line="24" pos:column="39"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="41">sizeof<argument_list pos:line="24" pos:column="47">(<argument><expr><name pos:line="24" pos:column="48">extension_info<pos:position pos:line="24" pos:column="62"/></name></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name pos:line="25" pos:column="9">key<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <call><name pos:line="25" pos:column="15">apr_pstrdup<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name><name pos:line="25" pos:column="27">cmd<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">-&gt;<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="32">pool<pos:position pos:line="25" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="38">key<pos:position pos:line="25" pos:column="41"/></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">apr_hash_set<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name><name pos:line="26" pos:column="22">m<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">-&gt;<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="25">extension_mappings<pos:position pos:line="26" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">key<pos:position pos:line="26" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="50">APR_HASH_KEY_STRING<pos:position pos:line="26" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="71">exinfo<pos:position pos:line="26" pos:column="77"/></name></expr></argument>)<pos:position pos:line="26" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="28" pos:column="5">*<pos:position pos:line="28" pos:column="6"/></operator><operator pos:line="28" pos:column="6">(<pos:position pos:line="28" pos:column="7"/></operator><specifier pos:line="28" pos:column="7">const<pos:position pos:line="28" pos:column="12"/></specifier> <name pos:line="28" pos:column="13">char<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">*<pos:position pos:line="28" pos:column="18"/></operator><operator pos:line="28" pos:column="18">*<pos:position pos:line="28" pos:column="19"/></operator><operator pos:line="28" pos:column="19">)<pos:position pos:line="28" pos:column="20"/></operator><operator pos:line="28" pos:column="20">(<pos:position pos:line="28" pos:column="21"/></operator><operator pos:line="28" pos:column="21">(<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">char<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">*<pos:position pos:line="28" pos:column="28"/></operator><operator pos:line="28" pos:column="28">)<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="29">exinfo<pos:position pos:line="28" pos:column="35"/></name> <operator pos:line="28" pos:column="36">+<pos:position pos:line="28" pos:column="37"/></operator> <name pos:line="28" pos:column="38">offset<pos:position pos:line="28" pos:column="44"/></name><operator pos:line="28" pos:column="44">)<pos:position pos:line="28" pos:column="45"/></operator> <operator pos:line="28" pos:column="46">=<pos:position pos:line="28" pos:column="47"/></operator> <name pos:line="28" pos:column="48">value<pos:position pos:line="28" pos:column="53"/></name></expr>;<pos:position pos:line="28" pos:column="54"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">NULL<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3450_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">getpwnam_safe<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">username<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                                  <parameter><decl><type><name><name pos:line="2" pos:column="35">struct<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">passwd<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">pw<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">char<pos:position pos:line="3" pos:column="39"/></name></type> <name><name pos:line="3" pos:column="40">pwbuf<pos:position pos:line="3" pos:column="45"/></name><index pos:line="3" pos:column="45">[<expr><name pos:line="3" pos:column="46">PWBUF_SIZE<pos:position pos:line="3" pos:column="56"/></name></expr>]<pos:position pos:line="3" pos:column="57"/></index></name></decl></parameter>)<pos:position pos:line="3" pos:column="58"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">passwd<pos:position pos:line="5" pos:column="18"/></name></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">pwptr<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">APR_HAS_THREADS<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">&amp;&amp;<pos:position pos:line="6" pos:column="31"/></operator> <call><name pos:line="6" pos:column="24">defined<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><name pos:line="6" pos:column="32">_POSIX_THREAD_SAFE_FUNCTIONS<pos:position pos:line="6" pos:column="60"/></name></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call> <operator pos:line="6" pos:column="62">&amp;&amp;<pos:position pos:line="6" pos:column="72"/></operator> <call><name pos:line="6" pos:column="65">defined<pos:position pos:line="6" pos:column="72"/></name><argument_list pos:line="6" pos:column="72">(<argument><expr><name pos:line="6" pos:column="73">HAVE_GETPWNAM_R<pos:position pos:line="6" pos:column="88"/></name></expr></argument>)<pos:position pos:line="6" pos:column="89"/></argument_list></call></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">rv<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* POSIX defines getpwnam_r() et al to return the error number
     * rather than set errno, and requires pwptr to be set to NULL if
     * the entry is not found, imply that "not found" is not an error
     * condition; some implementations do return 0 with pwptr set to
     * NULL. */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">rv<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <call><name pos:line="14" pos:column="10">getpwnam_r<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">username<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="31">pw<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">pwbuf<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">PWBUF_SIZE<pos:position pos:line="14" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="54">&amp;<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="55">pwptr<pos:position pos:line="14" pos:column="60"/></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="62"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">rv<pos:position pos:line="15" pos:column="11"/></name></expr>)<pos:position pos:line="15" pos:column="12"/></condition><then pos:line="15" pos:column="12"> <block pos:line="15" pos:column="13">{
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">rv<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">pwptr<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">==<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">NULL<pos:position pos:line="18" pos:column="22"/></name></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23"> <block pos:line="18" pos:column="24">{
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">APR_ENOENT<pos:position pos:line="19" pos:column="26"/></name></expr>;<pos:position pos:line="19" pos:column="27"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
<cpp:else pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">else<pos:position pos:line="21" pos:column="6"/></cpp:directive></cpp:else>
    <comment type="block" pos:line="22" pos:column="5">/* Some platforms (e.g. FreeBSD 4.x) do not set errno on NULL "not
     * found" return values for the non-threadsafe function either. */</comment>
    <expr_stmt><expr><name pos:line="24" pos:column="5">errno<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <literal type="number" pos:line="24" pos:column="13">0<pos:position pos:line="24" pos:column="14"/></literal></expr>;<pos:position pos:line="24" pos:column="15"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">pwptr<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <call><name pos:line="25" pos:column="18">getpwnam<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">username<pos:position pos:line="25" pos:column="35"/></name></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call><operator pos:line="25" pos:column="36">)<pos:position pos:line="25" pos:column="37"/></operator> <operator pos:line="25" pos:column="38">!=<pos:position pos:line="25" pos:column="40"/></operator> <name pos:line="25" pos:column="41">NULL<pos:position pos:line="25" pos:column="45"/></name></expr>)<pos:position pos:line="25" pos:column="46"/></condition><then pos:line="25" pos:column="46"> <block pos:line="25" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">memcpy<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">pw<pos:position pos:line="26" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="20">pwptr<pos:position pos:line="26" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="27">sizeof <name><pos:position pos:line="26" pos:column="34"/></name></sizeof>*<name pos:line="26" pos:column="35">pw<pos:position pos:line="26" pos:column="37"/></name></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then>
    <else pos:line="28" pos:column="5">else <block pos:line="28" pos:column="10">{
        <return pos:line="29" pos:column="9">return <expr><ternary><condition><expr><name pos:line="29" pos:column="16">errno<pos:position pos:line="29" pos:column="21"/></name></expr> ?<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23"> <expr><name pos:line="29" pos:column="24">errno<pos:position pos:line="29" pos:column="29"/></name></expr> <pos:position pos:line="29" pos:column="30"/></then><else pos:line="29" pos:column="30">: <expr><name pos:line="29" pos:column="32">APR_ENOENT<pos:position pos:line="29" pos:column="42"/></name></expr></else></ternary></expr>;<pos:position pos:line="29" pos:column="43"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></else></if>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">APR_SUCCESS<pos:position pos:line="32" pos:column="23"/></name></expr>;<pos:position pos:line="32" pos:column="24"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6239.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">core_override_type<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">request_rec<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">r<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">core_dir_config<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">conf<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">=
        <expr><operator pos:line="4" pos:column="9">(<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">core_dir_config<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></operator><operator pos:line="4" pos:column="27">)<pos:position pos:line="4" pos:column="28"/></operator><call><name pos:line="4" pos:column="28">ap_get_core_module_config<pos:position pos:line="4" pos:column="53"/></name><argument_list pos:line="4" pos:column="53">(<argument><expr><name><name pos:line="4" pos:column="54">r<pos:position pos:line="4" pos:column="55"/></name><operator pos:line="4" pos:column="55">-&gt;<pos:position pos:line="4" pos:column="60"/></operator><name pos:line="4" pos:column="57">per_dir_config<pos:position pos:line="4" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="73"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* Check for overrides with ForceType / SetHandler
     */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">conf<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">mime_type<pos:position pos:line="8" pos:column="24"/></name></name> <operator pos:line="8" pos:column="25">&amp;&amp;<pos:position pos:line="8" pos:column="35"/></operator> <call><name pos:line="8" pos:column="28">strcmp<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><name><name pos:line="8" pos:column="35">conf<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="41">mime_type<pos:position pos:line="8" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="52">"none"<pos:position pos:line="8" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="60"/></condition><then pos:line="8" pos:column="60">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="9">ap_set_content_type<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">r<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="32">(<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">char<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">*<pos:position pos:line="9" pos:column="38"/></operator><operator pos:line="9" pos:column="38">)<pos:position pos:line="9" pos:column="39"/></operator> <name><name pos:line="9" pos:column="40">conf<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">-&gt;<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="46">mime_type<pos:position pos:line="9" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">conf<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">expr_handler<pos:position pos:line="11" pos:column="27"/></name></name></expr>)<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28"> <block pos:line="11" pos:column="29">{ 
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">char<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">err<pos:position pos:line="12" pos:column="24"/></name></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name pos:line="13" pos:column="15">char<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">val<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">val<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">ap_expr_str_exec<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name pos:line="14" pos:column="32">r<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="35">conf<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">-&gt;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="41">expr_handler<pos:position pos:line="14" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="55">&amp;<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="56">err<pos:position pos:line="14" pos:column="59"/></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="61"/></expr_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">err<pos:position pos:line="15" pos:column="16"/></name></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17"> <block pos:line="15" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">ap_log_rerror<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">APLOG_MARK<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="39">APLOG_ERR<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="50">0<pos:position pos:line="16" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="53">r<pos:position pos:line="16" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="56">APLOGNO<pos:position pos:line="16" pos:column="63"/></name><argument_list pos:line="16" pos:column="63">(<argument><expr><literal type="number" pos:line="16" pos:column="64">03154<pos:position pos:line="16" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call>
                          <literal type="string" pos:line="17" pos:column="27">"Can't evaluate handler expression: %s"<pos:position pos:line="17" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="68">err<pos:position pos:line="17" pos:column="71"/></name></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="73"/></expr_stmt>
            <return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="18" pos:column="46"/></name></expr>;<pos:position pos:line="18" pos:column="47"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>

        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">val<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">!=<pos:position pos:line="21" pos:column="19"/></operator> <call><name pos:line="21" pos:column="20">ap_strstr_c<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">val<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="37">"proxy:unix"<pos:position pos:line="21" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="51"/></condition><then pos:line="21" pos:column="51"> <block pos:line="21" pos:column="52">{ 
            <comment type="block" pos:line="22" pos:column="13">/* Retained for compatibility --  but not for UDS */</comment>
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">char<pos:position pos:line="23" pos:column="17"/></name> <modifier pos:line="23" pos:column="18">*<pos:position pos:line="23" pos:column="19"/></modifier></type><name pos:line="23" pos:column="19">tmp<pos:position pos:line="23" pos:column="22"/></name> <init pos:line="23" pos:column="23">= <expr><call><name pos:line="23" pos:column="25">apr_pstrdup<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name><name pos:line="23" pos:column="37">r<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">-&gt;<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="40">pool<pos:position pos:line="23" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="46">val<pos:position pos:line="23" pos:column="49"/></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="51"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">ap_str_tolower<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">tmp<pos:position pos:line="24" pos:column="31"/></name></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name pos:line="25" pos:column="13">val<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">tmp<pos:position pos:line="25" pos:column="22"/></name></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name pos:line="28" pos:column="13">strcmp<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">val<pos:position pos:line="28" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="25">"none"<pos:position pos:line="28" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="33"/></condition><then pos:line="28" pos:column="33"> <block pos:line="28" pos:column="34">{ 
            <expr_stmt><expr><name><name pos:line="29" pos:column="13">r<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">-&gt;<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="16">handler<pos:position pos:line="29" pos:column="23"/></name></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="26">val<pos:position pos:line="29" pos:column="29"/></name></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then>
    <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><name><name pos:line="32" pos:column="14">conf<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">handler<pos:position pos:line="32" pos:column="27"/></name></name> <operator pos:line="32" pos:column="28">&amp;&amp;<pos:position pos:line="32" pos:column="38"/></operator> <call><name pos:line="32" pos:column="31">strcmp<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name><name pos:line="32" pos:column="38">conf<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">handler<pos:position pos:line="32" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="53">"none"<pos:position pos:line="32" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="61"/></condition><then pos:line="32" pos:column="61"> <block pos:line="32" pos:column="62">{ 
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">r<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">-&gt;<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="12">handler<pos:position pos:line="33" pos:column="19"/></name></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <name><name pos:line="33" pos:column="22">conf<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">-&gt;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="28">handler<pos:position pos:line="33" pos:column="35"/></name></name></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="36" pos:column="5">/* Deal with the poor soul who is trying to force path_info to be
     * accepted within the core_handler, where they will let the subreq
     * address its contents.  This is toggled by the user in the very
     * beginning of the fixup phase (here!), so modules should override the user's
     * discretion in their own module fixup phase.  It is tristate, if
     * the user doesn't specify, the result is AP_REQ_DEFAULT_PATH_INFO.
     * (which the module may interpret to its own customary behavior.)
     * It won't be touched if the value is no longer AP_ACCEPT_PATHINFO_UNSET,
     * so any module changing the value prior to the fixup phase
     * OVERRIDES the user's choice.
     */</comment>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><operator pos:line="47" pos:column="9">(<pos:position pos:line="47" pos:column="10"/></operator><name><name pos:line="47" pos:column="10">r<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">-&gt;<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="13">used_path_info<pos:position pos:line="47" pos:column="27"/></name></name> <operator pos:line="47" pos:column="28">==<pos:position pos:line="47" pos:column="30"/></operator> <name pos:line="47" pos:column="31">AP_REQ_DEFAULT_PATH_INFO<pos:position pos:line="47" pos:column="55"/></name><operator pos:line="47" pos:column="55">)<pos:position pos:line="47" pos:column="56"/></operator>
        <operator pos:line="48" pos:column="9">&amp;&amp;<pos:position pos:line="48" pos:column="19"/></operator> <operator pos:line="48" pos:column="12">(<pos:position pos:line="48" pos:column="13"/></operator><name><name pos:line="48" pos:column="13">conf<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">-&gt;<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="19">accept_path_info<pos:position pos:line="48" pos:column="35"/></name></name> <operator pos:line="48" pos:column="36">!=<pos:position pos:line="48" pos:column="38"/></operator> <name pos:line="48" pos:column="39">AP_ACCEPT_PATHINFO_UNSET<pos:position pos:line="48" pos:column="63"/></name><operator pos:line="48" pos:column="63">)<pos:position pos:line="48" pos:column="64"/></operator></expr>)<pos:position pos:line="48" pos:column="65"/></condition><then pos:line="48" pos:column="65"> <block pos:line="48" pos:column="66">{
        <comment type="block" pos:line="49" pos:column="9">/* No module knew better, and the user coded AcceptPathInfo */</comment>
        <expr_stmt><expr><name><name pos:line="50" pos:column="9">r<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">-&gt;<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="12">used_path_info<pos:position pos:line="50" pos:column="26"/></name></name> <operator pos:line="50" pos:column="27">=<pos:position pos:line="50" pos:column="28"/></operator> <name><name pos:line="50" pos:column="29">conf<pos:position pos:line="50" pos:column="33"/></name><operator pos:line="50" pos:column="33">-&gt;<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="35">accept_path_info<pos:position pos:line="50" pos:column="51"/></name></name></expr>;<pos:position pos:line="50" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <return pos:line="53" pos:column="5">return <expr><name pos:line="53" pos:column="12">OK<pos:position pos:line="53" pos:column="14"/></name></expr>;<pos:position pos:line="53" pos:column="15"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_754_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">ssl_cmd_verify_depth_parse<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name pos:line="1" pos:column="47">cmd_parms<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">parms<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">arg<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
                                              <parameter><decl><type><name pos:line="3" pos:column="47">int<pos:position pos:line="3" pos:column="50"/></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">depth<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="58"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><operator pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">depth<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">=<pos:position pos:line="5" pos:column="18"/></operator> <call><name pos:line="5" pos:column="19">atoi<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">arg<pos:position pos:line="5" pos:column="27"/></name></expr></argument>)<pos:position pos:line="5" pos:column="28"/></argument_list></call><operator pos:line="5" pos:column="28">)<pos:position pos:line="5" pos:column="29"/></operator> <operator pos:line="5" pos:column="30">&gt;=<pos:position pos:line="5" pos:column="35"/></operator> <literal type="number" pos:line="5" pos:column="33">0<pos:position pos:line="5" pos:column="34"/></literal></expr>)<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35"> <block pos:line="5" pos:column="36">{
        <return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <return pos:line="9" pos:column="5">return <expr><call><name pos:line="9" pos:column="12">apr_pstrcat<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name><name pos:line="9" pos:column="24">parms<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">temp_pool<pos:position pos:line="9" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="42">parms<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">-&gt;<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="49">cmd<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">-&gt;<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="54">name<pos:position pos:line="9" pos:column="58"/></name></name></expr></argument>,
                       <argument><expr><literal type="string" pos:line="10" pos:column="24">": Invalid argument '"<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">arg<pos:position pos:line="10" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="53">"'"<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>,
                       <argument><expr><name pos:line="11" pos:column="24">NULL<pos:position pos:line="11" pos:column="28"/></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="30"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

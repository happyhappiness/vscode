<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1427_httpd-2.2.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_balancer_param<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">proxy_server_conf<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">conf<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="2" pos:column="39">apr_pool_t<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">p<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="3" pos:column="39">proxy_balancer<pos:position pos:line="3" pos:column="53"/></name> <modifier pos:line="3" pos:column="54">*<pos:position pos:line="3" pos:column="55"/></modifier></type><name pos:line="3" pos:column="55">balancer<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>,
                                      <parameter><decl><type><specifier pos:line="4" pos:column="39">const<pos:position pos:line="4" pos:column="44"/></specifier> <name pos:line="4" pos:column="45">char<pos:position pos:line="4" pos:column="49"/></name> <modifier pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></modifier></type><name pos:line="4" pos:column="51">key<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>,
                                      <parameter><decl><type><specifier pos:line="5" pos:column="39">const<pos:position pos:line="5" pos:column="44"/></specifier> <name pos:line="5" pos:column="45">char<pos:position pos:line="5" pos:column="49"/></name> <modifier pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></modifier></type><name pos:line="5" pos:column="51">val<pos:position pos:line="5" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="55"/></parameter_list>
<block pos:line="6" pos:column="1">{

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">ival<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name pos:line="9" pos:column="10">strcasecmp<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">key<pos:position pos:line="9" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="26">"stickysession"<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43"> <block pos:line="9" pos:column="44">{
        <comment type="block" pos:line="10" pos:column="9">/* Balancer sticky session name.
         * Set to something like JSESSIONID or
         * PHPSESSIONID, etc..,
         */</comment>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">balancer<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">-&gt;<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="19">sticky<pos:position pos:line="14" pos:column="25"/></name></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <call><name pos:line="14" pos:column="28">apr_pstrdup<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">p<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="43">val<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then>
    <elseif pos:line="16" pos:column="5">else <if pos:line="16" pos:column="10">if <condition pos:line="16" pos:column="13">(<expr><operator pos:line="16" pos:column="14">!<pos:position pos:line="16" pos:column="15"/></operator><call><name pos:line="16" pos:column="15">strcasecmp<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">key<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="31">"nofailover"<pos:position pos:line="16" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45"> <block pos:line="16" pos:column="46">{
        <comment type="block" pos:line="17" pos:column="9">/* If set to 'on' the session will break
         * if the worker is in error state or
         * disabled.
         */</comment>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name pos:line="21" pos:column="14">strcasecmp<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">val<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="30">"on"<pos:position pos:line="21" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="36"/></condition><then pos:line="21" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="13">balancer<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">sticky_force<pos:position pos:line="22" pos:column="35"/></name></name> <operator pos:line="22" pos:column="36">=<pos:position pos:line="22" pos:column="37"/></operator> <literal type="number" pos:line="22" pos:column="38">1<pos:position pos:line="22" pos:column="39"/></literal></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt></block></then>
        <elseif pos:line="23" pos:column="9">else <if pos:line="23" pos:column="14">if <condition pos:line="23" pos:column="17">(<expr><operator pos:line="23" pos:column="18">!<pos:position pos:line="23" pos:column="19"/></operator><call><name pos:line="23" pos:column="19">strcasecmp<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">val<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="35">"off"<pos:position pos:line="23" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="42"/></condition><then pos:line="23" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="13">balancer<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">sticky_force<pos:position pos:line="24" pos:column="35"/></name></name> <operator pos:line="24" pos:column="36">=<pos:position pos:line="24" pos:column="37"/></operator> <literal type="number" pos:line="24" pos:column="38">0<pos:position pos:line="24" pos:column="39"/></literal></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt></block></then></if></elseif>
        <else pos:line="25" pos:column="9">else
            <block type="pseudo"><return pos:line="26" pos:column="13">return <expr><literal type="string" pos:line="26" pos:column="20">"failover must be On|Off"<pos:position pos:line="26" pos:column="45"/></literal></expr>;<pos:position pos:line="26" pos:column="46"/></return></block></else></if>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if <condition pos:line="28" pos:column="13">(<expr><operator pos:line="28" pos:column="14">!<pos:position pos:line="28" pos:column="15"/></operator><call><name pos:line="28" pos:column="15">strcasecmp<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">key<pos:position pos:line="28" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="31">"timeout"<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="42"/></condition><then pos:line="28" pos:column="42"> <block pos:line="28" pos:column="43">{
        <comment type="block" pos:line="29" pos:column="9">/* Balancer timeout in seconds.
         * If set this will be the maximum time to
         * wait for a free worker.
         * Default is not to wait.
         */</comment>
        <expr_stmt><expr><name pos:line="34" pos:column="9">ival<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <call><name pos:line="34" pos:column="16">atoi<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">val<pos:position pos:line="34" pos:column="24"/></name></expr></argument>)<pos:position pos:line="34" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">ival<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">&lt;<pos:position pos:line="35" pos:column="22"/></operator> <literal type="number" pos:line="35" pos:column="20">1<pos:position pos:line="35" pos:column="21"/></literal></expr>)<pos:position pos:line="35" pos:column="22"/></condition><then pos:line="35" pos:column="22">
            <block type="pseudo"><return pos:line="36" pos:column="13">return <expr><literal type="string" pos:line="36" pos:column="20">"timeout must be at least one second"<pos:position pos:line="36" pos:column="57"/></literal></expr>;<pos:position pos:line="36" pos:column="58"/></return></block></then></if>
        <expr_stmt><expr><name><name pos:line="37" pos:column="9">balancer<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">-&gt;<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="19">timeout<pos:position pos:line="37" pos:column="26"/></name></name> <operator pos:line="37" pos:column="27">=<pos:position pos:line="37" pos:column="28"/></operator> <call><name pos:line="37" pos:column="29">apr_time_from_sec<pos:position pos:line="37" pos:column="46"/></name><argument_list pos:line="37" pos:column="46">(<argument><expr><name pos:line="37" pos:column="47">ival<pos:position pos:line="37" pos:column="51"/></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><operator pos:line="39" pos:column="14">!<pos:position pos:line="39" pos:column="15"/></operator><call><name pos:line="39" pos:column="15">strcasecmp<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><name pos:line="39" pos:column="26">key<pos:position pos:line="39" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="31">"maxattempts"<pos:position pos:line="39" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="46"/></condition><then pos:line="39" pos:column="46"> <block pos:line="39" pos:column="47">{
        <comment type="block" pos:line="40" pos:column="9">/* Maximum number of failover attempts before
         * giving up.
         */</comment>
        <expr_stmt><expr><name pos:line="43" pos:column="9">ival<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <call><name pos:line="43" pos:column="16">atoi<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><name pos:line="43" pos:column="21">val<pos:position pos:line="43" pos:column="24"/></name></expr></argument>)<pos:position pos:line="43" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">ival<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">&lt;<pos:position pos:line="44" pos:column="22"/></operator> <literal type="number" pos:line="44" pos:column="20">0<pos:position pos:line="44" pos:column="21"/></literal></expr>)<pos:position pos:line="44" pos:column="22"/></condition><then pos:line="44" pos:column="22">
            <block type="pseudo"><return pos:line="45" pos:column="13">return <expr><literal type="string" pos:line="45" pos:column="20">"maximum number of attempts must be a positive number"<pos:position pos:line="45" pos:column="74"/></literal></expr>;<pos:position pos:line="45" pos:column="75"/></return></block></then></if>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">balancer<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">-&gt;<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="19">max_attempts<pos:position pos:line="46" pos:column="31"/></name></name> <operator pos:line="46" pos:column="32">=<pos:position pos:line="46" pos:column="33"/></operator> <name pos:line="46" pos:column="34">ival<pos:position pos:line="46" pos:column="38"/></name></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">balancer<pos:position pos:line="47" pos:column="17"/></name><operator pos:line="47" pos:column="17">-&gt;<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="19">max_attempts_set<pos:position pos:line="47" pos:column="35"/></name></name> <operator pos:line="47" pos:column="36">=<pos:position pos:line="47" pos:column="37"/></operator> <literal type="number" pos:line="47" pos:column="38">1<pos:position pos:line="47" pos:column="39"/></literal></expr>;<pos:position pos:line="47" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="49" pos:column="5">else <if pos:line="49" pos:column="10">if <condition pos:line="49" pos:column="13">(<expr><operator pos:line="49" pos:column="14">!<pos:position pos:line="49" pos:column="15"/></operator><call><name pos:line="49" pos:column="15">strcasecmp<pos:position pos:line="49" pos:column="25"/></name><argument_list pos:line="49" pos:column="25">(<argument><expr><name pos:line="49" pos:column="26">key<pos:position pos:line="49" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="31">"lbmethod"<pos:position pos:line="49" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="43"/></condition><then pos:line="49" pos:column="43"> <block pos:line="49" pos:column="44">{
        <decl_stmt><decl><type><name pos:line="50" pos:column="9">proxy_balancer_method<pos:position pos:line="50" pos:column="30"/></name> <modifier pos:line="50" pos:column="31">*<pos:position pos:line="50" pos:column="32"/></modifier></type><name pos:line="50" pos:column="32">provider<pos:position pos:line="50" pos:column="40"/></name></decl>;<pos:position pos:line="50" pos:column="41"/></decl_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">provider<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <call><name pos:line="51" pos:column="20">ap_lookup_provider<pos:position pos:line="51" pos:column="38"/></name><argument_list pos:line="51" pos:column="38">(<argument><expr><name pos:line="51" pos:column="39">PROXY_LBMETHOD<pos:position pos:line="51" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="55">val<pos:position pos:line="51" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="60">"0"<pos:position pos:line="51" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="65"/></expr_stmt>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">provider<pos:position pos:line="52" pos:column="21"/></name></expr>)<pos:position pos:line="52" pos:column="22"/></condition><then pos:line="52" pos:column="22"> <block pos:line="52" pos:column="23">{
            <expr_stmt><expr><name><name pos:line="53" pos:column="13">balancer<pos:position pos:line="53" pos:column="21"/></name><operator pos:line="53" pos:column="21">-&gt;<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="23">lbmethod<pos:position pos:line="53" pos:column="31"/></name></name> <operator pos:line="53" pos:column="32">=<pos:position pos:line="53" pos:column="33"/></operator> <name pos:line="53" pos:column="34">provider<pos:position pos:line="53" pos:column="42"/></name></expr>;<pos:position pos:line="53" pos:column="43"/></expr_stmt>
            <return pos:line="54" pos:column="13">return <expr><name pos:line="54" pos:column="20">NULL<pos:position pos:line="54" pos:column="24"/></name></expr>;<pos:position pos:line="54" pos:column="25"/></return>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>
        <return pos:line="56" pos:column="9">return <expr><literal type="string" pos:line="56" pos:column="16">"unknown lbmethod"<pos:position pos:line="56" pos:column="34"/></literal></expr>;<pos:position pos:line="56" pos:column="35"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if></elseif>
    <else pos:line="58" pos:column="5">else <block pos:line="58" pos:column="10">{
        <return pos:line="59" pos:column="9">return <expr><literal type="string" pos:line="59" pos:column="16">"unknown Balancer parameter"<pos:position pos:line="59" pos:column="44"/></literal></expr>;<pos:position pos:line="59" pos:column="45"/></return>
    }<pos:position pos:line="60" pos:column="6"/></block></else></if>
    <return pos:line="61" pos:column="5">return <expr><name pos:line="61" pos:column="12">NULL<pos:position pos:line="61" pos:column="16"/></name></expr>;<pos:position pos:line="61" pos:column="17"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

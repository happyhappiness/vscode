<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7081.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_die<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name pos:line="1" pos:column="14">server_rec<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">s<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">s<pos:position pos:line="3" pos:column="10"/></name> <operator pos:line="3" pos:column="11">!=<pos:position pos:line="3" pos:column="13"/></operator> <name pos:line="3" pos:column="14">NULL<pos:position pos:line="3" pos:column="18"/></name> <operator pos:line="3" pos:column="19">&amp;&amp;<pos:position pos:line="3" pos:column="29"/></operator> <name><name pos:line="3" pos:column="22">s<pos:position pos:line="3" pos:column="23"/></name><operator pos:line="3" pos:column="23">-&gt;<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="25">is_virtual<pos:position pos:line="3" pos:column="35"/></name></name> <operator pos:line="3" pos:column="36">&amp;&amp;<pos:position pos:line="3" pos:column="46"/></operator> <name><name pos:line="3" pos:column="39">s<pos:position pos:line="3" pos:column="40"/></name><operator pos:line="3" pos:column="40">-&gt;<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="42">error_fname<pos:position pos:line="3" pos:column="53"/></name></name> <operator pos:line="3" pos:column="54">!=<pos:position pos:line="3" pos:column="56"/></operator> <name pos:line="3" pos:column="57">NULL<pos:position pos:line="3" pos:column="61"/></name></expr>)<pos:position pos:line="3" pos:column="62"/></condition><then pos:line="3" pos:column="62">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="9">ap_log_error<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><name pos:line="4" pos:column="22">APLOG_MARK<pos:position pos:line="4" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="34">APLOG_EMERG<pos:position pos:line="4" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="47">0<pos:position pos:line="4" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="50">NULL<pos:position pos:line="4" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="4" pos:column="56">APLOGNO<pos:position pos:line="4" pos:column="63"/></name><argument_list pos:line="4" pos:column="63">(<argument><expr><literal type="number" pos:line="4" pos:column="64">02311<pos:position pos:line="4" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="70"/></argument_list></call>
                     <literal type="string" pos:line="5" pos:column="22">"Fatal error initialising mod_ssl, exiting. "<pos:position pos:line="5" pos:column="67"/></literal>
                     <literal type="string" pos:line="6" pos:column="22">"See %s for more information"<pos:position pos:line="6" pos:column="51"/></literal></expr></argument>,
                     <argument><expr><call><name pos:line="7" pos:column="22">ap_server_root_relative<pos:position pos:line="7" pos:column="45"/></name><argument_list pos:line="7" pos:column="45">(<argument><expr><name><name pos:line="7" pos:column="46">s<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">-&gt;<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="49">process<pos:position pos:line="7" pos:column="56"/></name><operator pos:line="7" pos:column="56">-&gt;<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="58">pool<pos:position pos:line="7" pos:column="62"/></name></name></expr></argument>,
                                             <argument><expr><name><name pos:line="8" pos:column="46">s<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">-&gt;<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="49">error_fname<pos:position pos:line="8" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="63"/></expr_stmt></block></then>
    <else pos:line="9" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="9">ap_log_error<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">APLOG_MARK<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">APLOG_EMERG<pos:position pos:line="10" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="47">0<pos:position pos:line="10" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="50">NULL<pos:position pos:line="10" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="56">APLOGNO<pos:position pos:line="10" pos:column="63"/></name><argument_list pos:line="10" pos:column="63">(<argument><expr><literal type="number" pos:line="10" pos:column="64">02312<pos:position pos:line="10" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call>
                     <literal type="string" pos:line="11" pos:column="22">"Fatal error initialising mod_ssl, exiting."<pos:position pos:line="11" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="68"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="13" pos:column="5">/*
     * This is used for fatal errors and here
     * it is common module practice to really
     * exit from the complete program.
     * XXX: The config hooks should return errors instead of calling exit().
     */</comment>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">exit<pos:position pos:line="19" pos:column="9"/></name><argument_list pos:line="19" pos:column="9">(<argument><expr><literal type="number" pos:line="19" pos:column="10">1<pos:position pos:line="19" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="13"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2312_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">brigade_append<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">apr_bucket_brigade<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">bbOut<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">apr_bucket_brigade<pos:position pos:line="1" pos:column="81"/></name> <modifier pos:line="1" pos:column="82">*<pos:position pos:line="1" pos:column="83"/></modifier></type><name pos:line="1" pos:column="83">bbIn<pos:position pos:line="1" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="88"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <while pos:line="3" pos:column="5">while <condition pos:line="3" pos:column="11">(<expr><operator pos:line="3" pos:column="12">!<pos:position pos:line="3" pos:column="13"/></operator><call><name pos:line="3" pos:column="13">APR_BRIGADE_EMPTY<pos:position pos:line="3" pos:column="30"/></name><argument_list pos:line="3" pos:column="30">(<argument><expr><name pos:line="3" pos:column="31">bbIn<pos:position pos:line="3" pos:column="35"/></name></expr></argument>)<pos:position pos:line="3" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="37"/></condition> <block pos:line="3" pos:column="38">{
        <decl_stmt><decl><type><name pos:line="4" pos:column="9">apr_bucket<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">e<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><call><name pos:line="4" pos:column="25">APR_BRIGADE_FIRST<pos:position pos:line="4" pos:column="42"/></name><argument_list pos:line="4" pos:column="42">(<argument><expr><name pos:line="4" pos:column="43">bbIn<pos:position pos:line="4" pos:column="47"/></name></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">str<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">apr_size_t<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">len<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">apr_status_t<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">rv<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

        <expr_stmt><expr><name pos:line="9" pos:column="9">rv<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">apr_bucket_read<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">e<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="33">&amp;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="34">str<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="39">&amp;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="40">len<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="45">APR_BLOCK_READ<pos:position pos:line="9" pos:column="59"/></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">rv<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">!=<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">APR_SUCCESS<pos:position pos:line="10" pos:column="30"/></name></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31"> <block pos:line="10" pos:column="32">{
            <return pos:line="11" pos:column="13">return <expr><name pos:line="11" pos:column="20">rv<pos:position pos:line="11" pos:column="22"/></name></expr>;<pos:position pos:line="11" pos:column="23"/></return>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="14" pos:column="9">APR_BUCKET_REMOVE<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">e<pos:position pos:line="14" pos:column="28"/></name></expr></argument>)<pos:position pos:line="14" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">APR_BUCKET_IS_METADATA<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">e<pos:position pos:line="15" pos:column="37"/></name></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call> <operator pos:line="15" pos:column="39">||<pos:position pos:line="15" pos:column="41"/></operator> <name pos:line="15" pos:column="42">len<pos:position pos:line="15" pos:column="45"/></name> <operator pos:line="15" pos:column="46">&gt;<pos:position pos:line="15" pos:column="50"/></operator> <name pos:line="15" pos:column="48">APR_BUCKET_BUFF_SIZE<pos:position pos:line="15" pos:column="68"/></name><operator pos:line="15" pos:column="68">/<pos:position pos:line="15" pos:column="69"/></operator><literal type="number" pos:line="15" pos:column="69">4<pos:position pos:line="15" pos:column="70"/></literal></expr>)<pos:position pos:line="15" pos:column="71"/></condition><then pos:line="15" pos:column="71"> <block pos:line="15" pos:column="72">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="16" pos:column="36"/></name><argument_list pos:line="16" pos:column="36">(<argument><expr><name pos:line="16" pos:column="37">bbOut<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">e<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then>
        <else pos:line="18" pos:column="9">else <block pos:line="18" pos:column="14">{
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><name pos:line="19" pos:column="17">len<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">&gt;<pos:position pos:line="19" pos:column="25"/></operator> <literal type="number" pos:line="19" pos:column="23">0<pos:position pos:line="19" pos:column="24"/></literal></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25"> <block pos:line="19" pos:column="26">{
                <expr_stmt><expr><name pos:line="20" pos:column="17">rv<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">apr_brigade_write<pos:position pos:line="20" pos:column="39"/></name><argument_list pos:line="20" pos:column="39">(<argument><expr><name pos:line="20" pos:column="40">bbOut<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="47">NULL<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="53">NULL<pos:position pos:line="20" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="59">str<pos:position pos:line="20" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="64">len<pos:position pos:line="20" pos:column="67"/></name></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="69"/></expr_stmt>
                <if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">rv<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">!=<pos:position pos:line="21" pos:column="26"/></operator> <name pos:line="21" pos:column="27">APR_SUCCESS<pos:position pos:line="21" pos:column="38"/></name></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39"> <block pos:line="21" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="22" pos:column="21">apr_bucket_destroy<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">(<argument><expr><name pos:line="22" pos:column="40">e<pos:position pos:line="22" pos:column="41"/></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
                    <return pos:line="23" pos:column="21">return <expr><name pos:line="23" pos:column="28">rv<pos:position pos:line="23" pos:column="30"/></name></expr>;<pos:position pos:line="23" pos:column="31"/></return>
                }<pos:position pos:line="24" pos:column="18"/></block></then></if>
            }<pos:position pos:line="25" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">apr_bucket_destroy<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">e<pos:position pos:line="26" pos:column="33"/></name></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></else></if>
    }<pos:position pos:line="28" pos:column="6"/></block></while>
    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">APR_SUCCESS<pos:position pos:line="29" pos:column="23"/></name></expr>;<pos:position pos:line="29" pos:column="24"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

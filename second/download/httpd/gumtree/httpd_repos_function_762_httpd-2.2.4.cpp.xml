<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_762_httpd-2.2.4.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">ssl_cmd_SSLSessionCache<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">cmd_parms<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">cmd<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">void<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">dcfg<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>,
                                    <parameter><decl><type><specifier pos:line="3" pos:column="37">const<pos:position pos:line="3" pos:column="42"/></specifier> <name pos:line="3" pos:column="43">char<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">arg<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="53"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSLModConfigRec<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">mc<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><call><name pos:line="5" pos:column="27">myModConfig<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name><name pos:line="5" pos:column="39">cmd<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">server<pos:position pos:line="5" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">err<pos:position pos:line="6" pos:column="20"/></name></decl>, <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="23">colon<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">cp<pos:position pos:line="7" pos:column="13"/></name></decl>, <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="16">cp2<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">arglen<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><call><name pos:line="8" pos:column="18">strlen<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">arg<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">err<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">ap_check_cmd_context<pos:position pos:line="10" pos:column="36"/></name><argument_list pos:line="10" pos:column="36">(<argument><expr><name pos:line="10" pos:column="37">cmd<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">GLOBAL_ONLY<pos:position pos:line="10" pos:column="53"/></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call><operator pos:line="10" pos:column="54">)<pos:position pos:line="10" pos:column="55"/></operator></expr>)<pos:position pos:line="10" pos:column="56"/></condition><then pos:line="10" pos:column="56"> <block pos:line="10" pos:column="57">{
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">err<pos:position pos:line="11" pos:column="19"/></name></expr>;<pos:position pos:line="11" pos:column="20"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">ssl_config_global_isfixed<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">mc<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="39"/></condition><then pos:line="14" pos:column="39"> <block pos:line="14" pos:column="40">{
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">NULL<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">strcEQ<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">arg<pos:position pos:line="18" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="21">"none"<pos:position pos:line="18" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29"> <block pos:line="18" pos:column="30">{
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">mc<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">nSessionCacheMode<pos:position pos:line="19" pos:column="30"/></name></name>      <operator pos:line="19" pos:column="36">=<pos:position pos:line="19" pos:column="37"/></operator> <name pos:line="19" pos:column="38">SSL_SCMODE_NONE<pos:position pos:line="19" pos:column="53"/></name></expr>;<pos:position pos:line="19" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">mc<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">szSessionCacheDataFile<pos:position pos:line="20" pos:column="35"/></name></name> <operator pos:line="20" pos:column="36">=<pos:position pos:line="20" pos:column="37"/></operator> <name pos:line="20" pos:column="38">NULL<pos:position pos:line="20" pos:column="42"/></name></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then>
    <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if <condition pos:line="22" pos:column="13">(<expr><call><name pos:line="22" pos:column="14">strcEQ<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">arg<pos:position pos:line="22" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="26">"nonenotnull"<pos:position pos:line="22" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41"> <block pos:line="22" pos:column="42">{
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">mc<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">nSessionCacheMode<pos:position pos:line="23" pos:column="30"/></name></name>      <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <name pos:line="23" pos:column="38">SSL_SCMODE_NONE_NOT_NULL<pos:position pos:line="23" pos:column="62"/></name></expr>;<pos:position pos:line="23" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">mc<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">szSessionCacheDataFile<pos:position pos:line="24" pos:column="35"/></name></name> <operator pos:line="24" pos:column="36">=<pos:position pos:line="24" pos:column="37"/></operator> <name pos:line="24" pos:column="38">NULL<pos:position pos:line="24" pos:column="42"/></name></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><operator pos:line="26" pos:column="14">(<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">arglen<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">&gt;<pos:position pos:line="26" pos:column="26"/></operator> <literal type="number" pos:line="26" pos:column="24">4<pos:position pos:line="26" pos:column="25"/></literal><operator pos:line="26" pos:column="25">)<pos:position pos:line="26" pos:column="26"/></operator> <operator pos:line="26" pos:column="27">&amp;&amp;<pos:position pos:line="26" pos:column="37"/></operator> <call><name pos:line="26" pos:column="30">strcEQn<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><name pos:line="26" pos:column="38">arg<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="43">"dbm:"<pos:position pos:line="26" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="51">4<pos:position pos:line="26" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="54"/></condition><then pos:line="26" pos:column="54"> <block pos:line="26" pos:column="55">{
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">mc<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">nSessionCacheMode<pos:position pos:line="27" pos:column="30"/></name></name>      <operator pos:line="27" pos:column="36">=<pos:position pos:line="27" pos:column="37"/></operator> <name pos:line="27" pos:column="38">SSL_SCMODE_DBM<pos:position pos:line="27" pos:column="52"/></name></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">mc<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">szSessionCacheDataFile<pos:position pos:line="28" pos:column="35"/></name></name> <operator pos:line="28" pos:column="36">=<pos:position pos:line="28" pos:column="37"/></operator> <call><name pos:line="28" pos:column="38">ap_server_root_relative<pos:position pos:line="28" pos:column="61"/></name><argument_list pos:line="28" pos:column="61">(<argument><expr><name><name pos:line="28" pos:column="62">mc<pos:position pos:line="28" pos:column="64"/></name><operator pos:line="28" pos:column="64">-&gt;<pos:position pos:line="28" pos:column="69"/></operator><name pos:line="28" pos:column="66">pPool<pos:position pos:line="28" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="73">arg<pos:position pos:line="28" pos:column="76"/></name><operator pos:line="28" pos:column="76">+<pos:position pos:line="28" pos:column="77"/></operator><literal type="number" pos:line="28" pos:column="77">4<pos:position pos:line="28" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="80"/></expr_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name><name pos:line="29" pos:column="14">mc<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">szSessionCacheDataFile<pos:position pos:line="29" pos:column="40"/></name></name></expr>)<pos:position pos:line="29" pos:column="41"/></condition><then pos:line="29" pos:column="41"> <block pos:line="29" pos:column="42">{
            <return pos:line="30" pos:column="13">return <expr><call><name pos:line="30" pos:column="20">apr_psprintf<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name><name pos:line="30" pos:column="33">cmd<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">pool<pos:position pos:line="30" pos:column="42"/></name></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="31" pos:column="33">"SSLSessionCache: Invalid cache file path %s"<pos:position pos:line="31" pos:column="78"/></literal></expr></argument>,
                                <argument><expr><name pos:line="32" pos:column="33">arg<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">+<pos:position pos:line="32" pos:column="37"/></operator><literal type="number" pos:line="32" pos:column="37">4<pos:position pos:line="32" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="40"/></return>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="35" pos:column="5">else <if pos:line="35" pos:column="10">if <condition pos:line="35" pos:column="13">(<expr><operator pos:line="35" pos:column="14">(<pos:position pos:line="35" pos:column="15"/></operator><operator pos:line="35" pos:column="15">(<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">arglen<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">&gt;<pos:position pos:line="35" pos:column="27"/></operator> <literal type="number" pos:line="35" pos:column="25">4<pos:position pos:line="35" pos:column="26"/></literal><operator pos:line="35" pos:column="26">)<pos:position pos:line="35" pos:column="27"/></operator> <operator pos:line="35" pos:column="28">&amp;&amp;<pos:position pos:line="35" pos:column="38"/></operator> <call><name pos:line="35" pos:column="31">strcEQn<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name pos:line="35" pos:column="39">arg<pos:position pos:line="35" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="44">"shm:"<pos:position pos:line="35" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="52">4<pos:position pos:line="35" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call><operator pos:line="35" pos:column="54">)<pos:position pos:line="35" pos:column="55"/></operator> <operator pos:line="35" pos:column="56">||<pos:position pos:line="35" pos:column="58"/></operator>
             <operator pos:line="36" pos:column="14">(<pos:position pos:line="36" pos:column="15"/></operator><operator pos:line="36" pos:column="15">(<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="16">arglen<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">&gt;<pos:position pos:line="36" pos:column="27"/></operator> <literal type="number" pos:line="36" pos:column="25">6<pos:position pos:line="36" pos:column="26"/></literal><operator pos:line="36" pos:column="26">)<pos:position pos:line="36" pos:column="27"/></operator> <operator pos:line="36" pos:column="28">&amp;&amp;<pos:position pos:line="36" pos:column="38"/></operator> <call><name pos:line="36" pos:column="31">strcEQn<pos:position pos:line="36" pos:column="38"/></name><argument_list pos:line="36" pos:column="38">(<argument><expr><name pos:line="36" pos:column="39">arg<pos:position pos:line="36" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="44">"shmht:"<pos:position pos:line="36" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="54">6<pos:position pos:line="36" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call><operator pos:line="36" pos:column="56">)<pos:position pos:line="36" pos:column="57"/></operator> <operator pos:line="36" pos:column="58">||<pos:position pos:line="36" pos:column="60"/></operator>
             <operator pos:line="37" pos:column="14">(<pos:position pos:line="37" pos:column="15"/></operator><operator pos:line="37" pos:column="15">(<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="16">arglen<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">&gt;<pos:position pos:line="37" pos:column="27"/></operator> <literal type="number" pos:line="37" pos:column="25">6<pos:position pos:line="37" pos:column="26"/></literal><operator pos:line="37" pos:column="26">)<pos:position pos:line="37" pos:column="27"/></operator> <operator pos:line="37" pos:column="28">&amp;&amp;<pos:position pos:line="37" pos:column="38"/></operator> <call><name pos:line="37" pos:column="31">strcEQn<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><name pos:line="37" pos:column="39">arg<pos:position pos:line="37" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="44">"shmcb:"<pos:position pos:line="37" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="54">6<pos:position pos:line="37" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call><operator pos:line="37" pos:column="56">)<pos:position pos:line="37" pos:column="57"/></operator></expr>)<pos:position pos:line="37" pos:column="58"/></condition><then pos:line="37" pos:column="58"> <block pos:line="37" pos:column="59">{
<cpp:if pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">if<pos:position pos:line="38" pos:column="4"/></cpp:directive> <expr><operator pos:line="38" pos:column="5">!<pos:position pos:line="38" pos:column="6"/></operator><name pos:line="38" pos:column="6">APR_HAS_SHARED_MEMORY<pos:position pos:line="38" pos:column="27"/></name></expr></cpp:if>
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">MODSSL_NO_SHARED_MEMORY_ERROR<pos:position pos:line="39" pos:column="45"/></name></expr>;<pos:position pos:line="39" pos:column="46"/></return>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif<pos:position pos:line="40" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name><name pos:line="41" pos:column="9">mc<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">-&gt;<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="13">nSessionCacheMode<pos:position pos:line="41" pos:column="30"/></name></name>      <operator pos:line="41" pos:column="36">=<pos:position pos:line="41" pos:column="37"/></operator> <name pos:line="41" pos:column="38">SSL_SCMODE_SHMCB<pos:position pos:line="41" pos:column="54"/></name></expr>;<pos:position pos:line="41" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name pos:line="42" pos:column="9">colon<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <call><name pos:line="42" pos:column="17">ap_strchr_c<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">arg<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="42" pos:column="34">':'<pos:position pos:line="42" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">mc<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">-&gt;<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="13">szSessionCacheDataFile<pos:position pos:line="43" pos:column="35"/></name></name> <operator pos:line="43" pos:column="36">=<pos:position pos:line="43" pos:column="37"/></operator>
            <call><name pos:line="44" pos:column="13">ap_server_root_relative<pos:position pos:line="44" pos:column="36"/></name><argument_list pos:line="44" pos:column="36">(<argument><expr><name><name pos:line="44" pos:column="37">mc<pos:position pos:line="44" pos:column="39"/></name><operator pos:line="44" pos:column="39">-&gt;<pos:position pos:line="44" pos:column="44"/></operator><name pos:line="44" pos:column="41">pPool<pos:position pos:line="44" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="48">colon<pos:position pos:line="44" pos:column="53"/></name><operator pos:line="44" pos:column="53">+<pos:position pos:line="44" pos:column="54"/></operator><literal type="number" pos:line="44" pos:column="54">1<pos:position pos:line="44" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="57"/></expr_stmt>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">!<pos:position pos:line="45" pos:column="14"/></operator><name><name pos:line="45" pos:column="14">mc<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">-&gt;<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="18">szSessionCacheDataFile<pos:position pos:line="45" pos:column="40"/></name></name></expr>)<pos:position pos:line="45" pos:column="41"/></condition><then pos:line="45" pos:column="41"> <block pos:line="45" pos:column="42">{
            <return pos:line="46" pos:column="13">return <expr><call><name pos:line="46" pos:column="20">apr_psprintf<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name><name pos:line="46" pos:column="33">cmd<pos:position pos:line="46" pos:column="36"/></name><operator pos:line="46" pos:column="36">-&gt;<pos:position pos:line="46" pos:column="41"/></operator><name pos:line="46" pos:column="38">pool<pos:position pos:line="46" pos:column="42"/></name></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="47" pos:column="33">"SSLSessionCache: Invalid cache file path %s"<pos:position pos:line="47" pos:column="78"/></literal></expr></argument>,
                                <argument><expr><name pos:line="48" pos:column="33">colon<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">+<pos:position pos:line="48" pos:column="39"/></operator><literal type="number" pos:line="48" pos:column="39">1<pos:position pos:line="48" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="42"/></return>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="50" pos:column="9">mc<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">-&gt;<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="13">tSessionCacheDataTable<pos:position pos:line="50" pos:column="35"/></name></name> <operator pos:line="50" pos:column="36">=<pos:position pos:line="50" pos:column="37"/></operator> <name pos:line="50" pos:column="38">NULL<pos:position pos:line="50" pos:column="42"/></name></expr>;<pos:position pos:line="50" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="51" pos:column="9">mc<pos:position pos:line="51" pos:column="11"/></name><operator pos:line="51" pos:column="11">-&gt;<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="13">nSessionCacheDataSize<pos:position pos:line="51" pos:column="34"/></name></name>  <operator pos:line="51" pos:column="36">=<pos:position pos:line="51" pos:column="37"/></operator> <literal type="number" pos:line="51" pos:column="38">1024<pos:position pos:line="51" pos:column="42"/></literal><operator pos:line="51" pos:column="42">*<pos:position pos:line="51" pos:column="43"/></operator><literal type="number" pos:line="51" pos:column="43">512<pos:position pos:line="51" pos:column="46"/></literal></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt> <comment type="block" pos:line="51" pos:column="48">/* 512KB */</comment>

        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><operator pos:line="53" pos:column="13">(<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="14">cp<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <call><name pos:line="53" pos:column="19">strchr<pos:position pos:line="53" pos:column="25"/></name><argument_list pos:line="53" pos:column="25">(<argument><expr><name><name pos:line="53" pos:column="26">mc<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">-&gt;<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="30">szSessionCacheDataFile<pos:position pos:line="53" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="53" pos:column="54">'('<pos:position pos:line="53" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="58"/></argument_list></call><operator pos:line="53" pos:column="58">)<pos:position pos:line="53" pos:column="59"/></operator></expr>)<pos:position pos:line="53" pos:column="60"/></condition><then pos:line="53" pos:column="60"> <block pos:line="53" pos:column="61">{
            <expr_stmt><expr><operator pos:line="54" pos:column="13">*<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="14">cp<pos:position pos:line="54" pos:column="16"/></name><operator pos:line="54" pos:column="16">++<pos:position pos:line="54" pos:column="18"/></operator> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <name pos:line="54" pos:column="21">NUL<pos:position pos:line="54" pos:column="24"/></name></expr>;<pos:position pos:line="54" pos:column="25"/></expr_stmt>

            <if pos:line="56" pos:column="13">if <condition pos:line="56" pos:column="16">(<expr><operator pos:line="56" pos:column="17">!<pos:position pos:line="56" pos:column="18"/></operator><operator pos:line="56" pos:column="18">(<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="19">cp2<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">=<pos:position pos:line="56" pos:column="24"/></operator> <call><name pos:line="56" pos:column="25">strchr<pos:position pos:line="56" pos:column="31"/></name><argument_list pos:line="56" pos:column="31">(<argument><expr><name pos:line="56" pos:column="32">cp<pos:position pos:line="56" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="56" pos:column="36">')'<pos:position pos:line="56" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="40"/></argument_list></call><operator pos:line="56" pos:column="40">)<pos:position pos:line="56" pos:column="41"/></operator></expr>)<pos:position pos:line="56" pos:column="42"/></condition><then pos:line="56" pos:column="42"> <block pos:line="56" pos:column="43">{
                <return pos:line="57" pos:column="17">return <expr><literal type="string" pos:line="57" pos:column="24">"SSLSessionCache: Invalid argument: "<pos:position pos:line="57" pos:column="61"/></literal>
                       <literal type="string" pos:line="58" pos:column="24">"no closing parenthesis"<pos:position pos:line="58" pos:column="48"/></literal></expr>;<pos:position pos:line="58" pos:column="49"/></return>
            }<pos:position pos:line="59" pos:column="14"/></block></then></if>

            <expr_stmt><expr><operator pos:line="61" pos:column="13">*<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">cp2<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">=<pos:position pos:line="61" pos:column="19"/></operator> <name pos:line="61" pos:column="20">NUL<pos:position pos:line="61" pos:column="23"/></name></expr>;<pos:position pos:line="61" pos:column="24"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="63" pos:column="13">mc<pos:position pos:line="63" pos:column="15"/></name><operator pos:line="63" pos:column="15">-&gt;<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="17">nSessionCacheDataSize<pos:position pos:line="63" pos:column="38"/></name></name> <operator pos:line="63" pos:column="39">=<pos:position pos:line="63" pos:column="40"/></operator> <call><name pos:line="63" pos:column="41">atoi<pos:position pos:line="63" pos:column="45"/></name><argument_list pos:line="63" pos:column="45">(<argument><expr><name pos:line="63" pos:column="46">cp<pos:position pos:line="63" pos:column="48"/></name></expr></argument>)<pos:position pos:line="63" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="50"/></expr_stmt>

            <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><name><name pos:line="65" pos:column="17">mc<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">-&gt;<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="21">nSessionCacheDataSize<pos:position pos:line="65" pos:column="42"/></name></name> <operator pos:line="65" pos:column="43">&lt;<pos:position pos:line="65" pos:column="47"/></operator> <literal type="number" pos:line="65" pos:column="45">8192<pos:position pos:line="65" pos:column="49"/></literal></expr>)<pos:position pos:line="65" pos:column="50"/></condition><then pos:line="65" pos:column="50"> <block pos:line="65" pos:column="51">{
                <return pos:line="66" pos:column="17">return <expr><literal type="string" pos:line="66" pos:column="24">"SSLSessionCache: Invalid argument: "<pos:position pos:line="66" pos:column="61"/></literal>
                       <literal type="string" pos:line="67" pos:column="24">"size has to be &gt;= 8192 bytes"<pos:position pos:line="67" pos:column="57"/></literal></expr>;<pos:position pos:line="67" pos:column="55"/></return>

            }<pos:position pos:line="69" pos:column="14"/></block></then></if>

            <if pos:line="71" pos:column="13">if <condition pos:line="71" pos:column="16">(<expr><name><name pos:line="71" pos:column="17">mc<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">-&gt;<pos:position pos:line="71" pos:column="24"/></operator><name pos:line="71" pos:column="21">nSessionCacheDataSize<pos:position pos:line="71" pos:column="42"/></name></name> <operator pos:line="71" pos:column="43">&gt;=<pos:position pos:line="71" pos:column="48"/></operator> <name pos:line="71" pos:column="46">APR_SHM_MAXSIZE<pos:position pos:line="71" pos:column="61"/></name></expr>)<pos:position pos:line="71" pos:column="62"/></condition><then pos:line="71" pos:column="62"> <block pos:line="71" pos:column="63">{
                <return pos:line="72" pos:column="17">return <expr><call><name pos:line="72" pos:column="24">apr_psprintf<pos:position pos:line="72" pos:column="36"/></name><argument_list pos:line="72" pos:column="36">(<argument><expr><name><name pos:line="72" pos:column="37">cmd<pos:position pos:line="72" pos:column="40"/></name><operator pos:line="72" pos:column="40">-&gt;<pos:position pos:line="72" pos:column="45"/></operator><name pos:line="72" pos:column="42">pool<pos:position pos:line="72" pos:column="46"/></name></name></expr></argument>,
                                    <argument><expr><literal type="string" pos:line="73" pos:column="37">"SSLSessionCache: Invalid argument: "<pos:position pos:line="73" pos:column="74"/></literal>
                                    <literal type="string" pos:line="74" pos:column="37">"size has to be &lt; %d bytes on this "<pos:position pos:line="74" pos:column="76"/></literal>
                                    <literal type="string" pos:line="75" pos:column="37">"platform"<pos:position pos:line="75" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="49">APR_SHM_MAXSIZE<pos:position pos:line="75" pos:column="64"/></name></expr></argument>)<pos:position pos:line="75" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="66"/></return>

            }<pos:position pos:line="77" pos:column="14"/></block></then></if>
        }<pos:position pos:line="78" pos:column="10"/></block></then></if>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="80" pos:column="5">else <if pos:line="80" pos:column="10">if <condition pos:line="80" pos:column="13">(<expr><operator pos:line="80" pos:column="14">(<pos:position pos:line="80" pos:column="15"/></operator><name pos:line="80" pos:column="15">arglen<pos:position pos:line="80" pos:column="21"/></name> <operator pos:line="80" pos:column="22">&gt;<pos:position pos:line="80" pos:column="26"/></operator> <literal type="number" pos:line="80" pos:column="24">3<pos:position pos:line="80" pos:column="25"/></literal><operator pos:line="80" pos:column="25">)<pos:position pos:line="80" pos:column="26"/></operator> <operator pos:line="80" pos:column="27">&amp;&amp;<pos:position pos:line="80" pos:column="37"/></operator> <call><name pos:line="80" pos:column="30">strcEQn<pos:position pos:line="80" pos:column="37"/></name><argument_list pos:line="80" pos:column="37">(<argument><expr><name pos:line="80" pos:column="38">arg<pos:position pos:line="80" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="43">"dc:"<pos:position pos:line="80" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="50">3<pos:position pos:line="80" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="53"/></condition><then pos:line="80" pos:column="53"> <block pos:line="80" pos:column="54">{
<cpp:ifdef pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">ifdef<pos:position pos:line="81" pos:column="7"/></cpp:directive> <name pos:line="81" pos:column="8">HAVE_DISTCACHE<pos:position pos:line="81" pos:column="22"/></name></cpp:ifdef>
        <expr_stmt><expr><name><name pos:line="82" pos:column="9">mc<pos:position pos:line="82" pos:column="11"/></name><operator pos:line="82" pos:column="11">-&gt;<pos:position pos:line="82" pos:column="16"/></operator><name pos:line="82" pos:column="13">nSessionCacheMode<pos:position pos:line="82" pos:column="30"/></name></name>      <operator pos:line="82" pos:column="36">=<pos:position pos:line="82" pos:column="37"/></operator> <name pos:line="82" pos:column="38">SSL_SCMODE_DC<pos:position pos:line="82" pos:column="51"/></name></expr>;<pos:position pos:line="82" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="83" pos:column="9">mc<pos:position pos:line="83" pos:column="11"/></name><operator pos:line="83" pos:column="11">-&gt;<pos:position pos:line="83" pos:column="16"/></operator><name pos:line="83" pos:column="13">szSessionCacheDataFile<pos:position pos:line="83" pos:column="35"/></name></name> <operator pos:line="83" pos:column="36">=<pos:position pos:line="83" pos:column="37"/></operator> <call><name pos:line="83" pos:column="38">apr_pstrdup<pos:position pos:line="83" pos:column="49"/></name><argument_list pos:line="83" pos:column="49">(<argument><expr><name><name pos:line="83" pos:column="50">mc<pos:position pos:line="83" pos:column="52"/></name><operator pos:line="83" pos:column="52">-&gt;<pos:position pos:line="83" pos:column="57"/></operator><name pos:line="83" pos:column="54">pPool<pos:position pos:line="83" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="61">arg<pos:position pos:line="83" pos:column="64"/></name><operator pos:line="83" pos:column="64">+<pos:position pos:line="83" pos:column="65"/></operator><literal type="number" pos:line="83" pos:column="65">3<pos:position pos:line="83" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="68"/></expr_stmt>
        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><operator pos:line="84" pos:column="13">!<pos:position pos:line="84" pos:column="14"/></operator><name><name pos:line="84" pos:column="14">mc<pos:position pos:line="84" pos:column="16"/></name><operator pos:line="84" pos:column="16">-&gt;<pos:position pos:line="84" pos:column="21"/></operator><name pos:line="84" pos:column="18">szSessionCacheDataFile<pos:position pos:line="84" pos:column="40"/></name></name></expr>)<pos:position pos:line="84" pos:column="41"/></condition><then pos:line="84" pos:column="41"> <block pos:line="84" pos:column="42">{
            <return pos:line="85" pos:column="13">return <expr><call><name pos:line="85" pos:column="20">apr_pstrcat<pos:position pos:line="85" pos:column="31"/></name><argument_list pos:line="85" pos:column="31">(<argument><expr><name><name pos:line="85" pos:column="32">cmd<pos:position pos:line="85" pos:column="35"/></name><operator pos:line="85" pos:column="35">-&gt;<pos:position pos:line="85" pos:column="40"/></operator><name pos:line="85" pos:column="37">pool<pos:position pos:line="85" pos:column="41"/></name></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="86" pos:column="32">"SSLSessionCache: Invalid cache file path: "<pos:position pos:line="86" pos:column="76"/></literal></expr></argument>,
                               <argument><expr><name pos:line="87" pos:column="32">arg<pos:position pos:line="87" pos:column="35"/></name><operator pos:line="87" pos:column="35">+<pos:position pos:line="87" pos:column="36"/></operator><literal type="number" pos:line="87" pos:column="36">3<pos:position pos:line="87" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="39">NULL<pos:position pos:line="87" pos:column="43"/></name></expr></argument>)<pos:position pos:line="87" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="45"/></return>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if>
<cpp:else pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">else<pos:position pos:line="89" pos:column="6"/></cpp:directive></cpp:else>
        <return pos:line="90" pos:column="9">return <expr><literal type="string" pos:line="90" pos:column="16">"SSLSessionCache: distcache support disabled"<pos:position pos:line="90" pos:column="61"/></literal></expr>;<pos:position pos:line="90" pos:column="62"/></return>
<cpp:endif pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">endif<pos:position pos:line="91" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if></elseif>
    <else pos:line="93" pos:column="5">else <block pos:line="93" pos:column="10">{
        <return pos:line="94" pos:column="9">return <expr><literal type="string" pos:line="94" pos:column="16">"SSLSessionCache: Invalid argument"<pos:position pos:line="94" pos:column="51"/></literal></expr>;<pos:position pos:line="94" pos:column="52"/></return>
    }<pos:position pos:line="95" pos:column="6"/></block></else></if>

    <return pos:line="97" pos:column="5">return <expr><name pos:line="97" pos:column="12">NULL<pos:position pos:line="97" pos:column="16"/></name></expr>;<pos:position pos:line="97" pos:column="17"/></return>
}<pos:position pos:line="98" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2133_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">make_child<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">server_rec<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">s<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">slot<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">tid<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">err<pos:position pos:line="4" pos:column="12"/></name><init pos:line="4" pos:column="12">=<expr><literal type="number" pos:line="4" pos:column="13">0<pos:position pos:line="4" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">NXContext_t<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">ctx<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">slot<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">+<pos:position pos:line="7" pos:column="15"/></operator> <literal type="number" pos:line="7" pos:column="16">1<pos:position pos:line="7" pos:column="17"/></literal> <operator pos:line="7" pos:column="18">&gt;<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="20">ap_max_workers_limit<pos:position pos:line="7" pos:column="40"/></name></expr>)<pos:position pos:line="7" pos:column="41"/></condition><then pos:line="7" pos:column="41"> <block pos:line="7" pos:column="42">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">ap_max_workers_limit<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">=<pos:position pos:line="8" pos:column="31"/></operator> <name pos:line="8" pos:column="32">slot<pos:position pos:line="8" pos:column="36"/></name> <operator pos:line="8" pos:column="37">+<pos:position pos:line="8" pos:column="38"/></operator> <literal type="number" pos:line="8" pos:column="39">1<pos:position pos:line="8" pos:column="40"/></literal></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ap_update_child_status_from_indexes<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">(<argument><expr><literal type="number" pos:line="11" pos:column="41">0<pos:position pos:line="11" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="44">slot<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">WORKER_STARTING<pos:position pos:line="11" pos:column="65"/></name></expr></argument>, 
                                        <argument><expr><operator pos:line="12" pos:column="41">(<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="42">request_rec<pos:position pos:line="12" pos:column="53"/></name> <operator pos:line="12" pos:column="54">*<pos:position pos:line="12" pos:column="55"/></operator><operator pos:line="12" pos:column="55">)<pos:position pos:line="12" pos:column="56"/></operator> <name pos:line="12" pos:column="57">NULL<pos:position pos:line="12" pos:column="61"/></name></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="63"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">ctx<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">NXContextAlloc<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><operator pos:line="14" pos:column="30">(<pos:position pos:line="14" pos:column="31"/></operator><call><call><name pos:line="14" pos:column="31">void<pos:position pos:line="14" pos:column="35"/></name> <argument_list pos:line="14" pos:column="36">(<argument><expr><operator pos:line="14" pos:column="37">*<pos:position pos:line="14" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call><argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">void<pos:position pos:line="14" pos:column="44"/></name> <operator pos:line="14" pos:column="45">*<pos:position pos:line="14" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call><operator pos:line="14" pos:column="47">)<pos:position pos:line="14" pos:column="48"/></operator> <name pos:line="14" pos:column="49">worker_main<pos:position pos:line="14" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="62">(<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="63">void<pos:position pos:line="14" pos:column="67"/></name><operator pos:line="14" pos:column="67">*<pos:position pos:line="14" pos:column="68"/></operator><operator pos:line="14" pos:column="68">)<pos:position pos:line="14" pos:column="69"/></operator><name pos:line="14" pos:column="69">slot<pos:position pos:line="14" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="75">NX_PRIO_MED<pos:position pos:line="14" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="88">ap_thread_stack_size<pos:position pos:line="14" pos:column="108"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="110">NX_CTX_NORMAL<pos:position pos:line="14" pos:column="123"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="125">&amp;<pos:position pos:line="14" pos:column="130"/></operator><name pos:line="14" pos:column="126">err<pos:position pos:line="14" pos:column="129"/></name></expr></argument>)<pos:position pos:line="14" pos:column="130"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="131"/></condition><then pos:line="14" pos:column="131"> <block pos:line="14" pos:column="132">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name></type> <name><name pos:line="15" pos:column="14">threadName<pos:position pos:line="15" pos:column="24"/></name><index pos:line="15" pos:column="24">[<expr><literal type="number" pos:line="15" pos:column="25">32<pos:position pos:line="15" pos:column="27"/></literal></expr>]<pos:position pos:line="15" pos:column="28"/></index></name></decl>;<pos:position pos:line="15" pos:column="29"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="17" pos:column="9">sprintf<pos:position pos:line="17" pos:column="16"/></name> <argument_list pos:line="17" pos:column="17">(<argument><expr><name pos:line="17" pos:column="18">threadName<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="30">"Apache_Worker %d"<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">slot<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">NXContextSetName<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">ctx<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="31">threadName<pos:position pos:line="18" pos:column="41"/></name></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">err<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">NXThreadCreate<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">ctx<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="35">NX_THR_BIND_CONTEXT<pos:position pos:line="19" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="56">&amp;<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="57">tid<pos:position pos:line="19" pos:column="60"/></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">err<pos:position pos:line="20" pos:column="16"/></name></expr>)<pos:position pos:line="20" pos:column="17"/></condition><then pos:line="20" pos:column="17"> <block pos:line="20" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">NXContextFree<pos:position pos:line="21" pos:column="26"/></name> <argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">ctx<pos:position pos:line="21" pos:column="31"/></name></expr></argument>)<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">err<pos:position pos:line="25" pos:column="12"/></name></expr>)<pos:position pos:line="25" pos:column="13"/></condition><then pos:line="25" pos:column="13"> <block pos:line="25" pos:column="14">{
        <comment type="block" pos:line="26" pos:column="9">/* create thread didn't succeed. Fix the scoreboard or else
        * it will say SERVER_STARTING forever and ever
        */</comment>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">ap_update_child_status_from_indexes<pos:position pos:line="29" pos:column="44"/></name><argument_list pos:line="29" pos:column="44">(<argument><expr><literal type="number" pos:line="29" pos:column="45">0<pos:position pos:line="29" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="48">slot<pos:position pos:line="29" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="54">WORKER_DEAD<pos:position pos:line="29" pos:column="65"/></name></expr></argument>, 
                                            <argument><expr><operator pos:line="30" pos:column="45">(<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="46">request_rec<pos:position pos:line="30" pos:column="57"/></name> <operator pos:line="30" pos:column="58">*<pos:position pos:line="30" pos:column="59"/></operator><operator pos:line="30" pos:column="59">)<pos:position pos:line="30" pos:column="60"/></operator> <name pos:line="30" pos:column="61">NULL<pos:position pos:line="30" pos:column="65"/></name></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt>

        <comment type="block" pos:line="32" pos:column="9">/* In case system resources are maxxed out, we don't want
        Apache running away with the CPU trying to fork over and
        over and over again. */</comment>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">apr_thread_yield<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">()<pos:position pos:line="35" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>

        <return pos:line="37" pos:column="9">return <expr><operator pos:line="37" pos:column="16">-<pos:position pos:line="37" pos:column="17"/></operator><literal type="number" pos:line="37" pos:column="17">1<pos:position pos:line="37" pos:column="18"/></literal></expr>;<pos:position pos:line="37" pos:column="19"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="40" pos:column="5">ap_scoreboard_image<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">servers<pos:position pos:line="40" pos:column="33"/></name><index pos:line="40" pos:column="33">[<expr><literal type="number" pos:line="40" pos:column="34">0<pos:position pos:line="40" pos:column="35"/></literal></expr>]<pos:position pos:line="40" pos:column="36"/></index><index pos:line="40" pos:column="36">[<expr><name pos:line="40" pos:column="37">slot<pos:position pos:line="40" pos:column="41"/></name></expr>]<pos:position pos:line="40" pos:column="42"/></index></name><operator pos:line="40" pos:column="42">.<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="43">tid<pos:position pos:line="40" pos:column="46"/></name> <operator pos:line="40" pos:column="47">=<pos:position pos:line="40" pos:column="48"/></operator> <name pos:line="40" pos:column="49">tid<pos:position pos:line="40" pos:column="52"/></name></expr>;<pos:position pos:line="40" pos:column="53"/></expr_stmt>

    <return pos:line="42" pos:column="5">return <expr><literal type="number" pos:line="42" pos:column="12">0<pos:position pos:line="42" pos:column="13"/></literal></expr>;<pos:position pos:line="42" pos:column="14"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

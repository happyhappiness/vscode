<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3952_httpd-2.2.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_socket_timeout_set<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">apr_socket_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">sock<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">apr_interval_time_t<pos:position pos:line="1" pos:column="76"/></name></type> <name pos:line="1" pos:column="77">t<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">stat<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

    <comment type="block" pos:line="5" pos:column="5">/* If our new timeout is non-negative and our old timeout was
     * negative, then we need to ensure that we are non-blocking.
     * Conversely, if our new timeout is negative and we had
     * non-negative timeout, we must make sure our socket is blocking.
     * We want to avoid calling fcntl more than necessary on the
     * socket.
     */</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">t<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">&gt;=<pos:position pos:line="12" pos:column="16"/></operator> <literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal> <operator pos:line="12" pos:column="16">&amp;&amp;<pos:position pos:line="12" pos:column="26"/></operator> <name><name pos:line="12" pos:column="19">sock<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">timeout<pos:position pos:line="12" pos:column="32"/></name></name> <operator pos:line="12" pos:column="33">&lt;<pos:position pos:line="12" pos:column="37"/></operator> <literal type="number" pos:line="12" pos:column="35">0<pos:position pos:line="12" pos:column="36"/></literal></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37"> <block pos:line="12" pos:column="38">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">apr_is_option_set<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">sock<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">APR_SO_NONBLOCK<pos:position pos:line="13" pos:column="52"/></name></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call> <operator pos:line="13" pos:column="54">!=<pos:position pos:line="13" pos:column="56"/></operator> <literal type="number" pos:line="13" pos:column="57">1<pos:position pos:line="13" pos:column="58"/></literal></expr>)<pos:position pos:line="13" pos:column="59"/></condition><then pos:line="13" pos:column="59"> <block pos:line="13" pos:column="60">{
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><operator pos:line="14" pos:column="17">(<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">stat<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <call><name pos:line="14" pos:column="25">sononblock<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><name><name pos:line="14" pos:column="36">sock<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">-&gt;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="42">socketdes<pos:position pos:line="14" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call><operator pos:line="14" pos:column="52">)<pos:position pos:line="14" pos:column="53"/></operator> <operator pos:line="14" pos:column="54">!=<pos:position pos:line="14" pos:column="56"/></operator> <name pos:line="14" pos:column="57">APR_SUCCESS<pos:position pos:line="14" pos:column="68"/></name></expr>)<pos:position pos:line="14" pos:column="69"/></condition><then pos:line="14" pos:column="69"> <block pos:line="14" pos:column="70">{
                <return pos:line="15" pos:column="17">return <expr><name pos:line="15" pos:column="24">stat<pos:position pos:line="15" pos:column="28"/></name></expr>;<pos:position pos:line="15" pos:column="29"/></return>
            }<pos:position pos:line="16" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">apr_set_option<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">sock<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="34">APR_SO_NONBLOCK<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="51">1<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>
    }<pos:position pos:line="19" pos:column="6"/></block></then> 
    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><name pos:line="20" pos:column="14">t<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">&lt;<pos:position pos:line="20" pos:column="20"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal> <operator pos:line="20" pos:column="20">&amp;&amp;<pos:position pos:line="20" pos:column="30"/></operator> <name><name pos:line="20" pos:column="23">sock<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">-&gt;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="29">timeout<pos:position pos:line="20" pos:column="36"/></name></name> <operator pos:line="20" pos:column="37">&gt;=<pos:position pos:line="20" pos:column="42"/></operator> <literal type="number" pos:line="20" pos:column="40">0<pos:position pos:line="20" pos:column="41"/></literal></expr>)<pos:position pos:line="20" pos:column="42"/></condition><then pos:line="20" pos:column="42"> <block pos:line="20" pos:column="43">{
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">apr_is_option_set<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">sock<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">APR_SO_NONBLOCK<pos:position pos:line="21" pos:column="52"/></name></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call> <operator pos:line="21" pos:column="54">!=<pos:position pos:line="21" pos:column="56"/></operator> <literal type="number" pos:line="21" pos:column="57">0<pos:position pos:line="21" pos:column="58"/></literal></expr>)<pos:position pos:line="21" pos:column="59"/></condition><then pos:line="21" pos:column="59"> <block pos:line="21" pos:column="60">{ 
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><operator pos:line="22" pos:column="17">(<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">stat<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <call><name pos:line="22" pos:column="25">soblock<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name><name pos:line="22" pos:column="33">sock<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">-&gt;<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="39">socketdes<pos:position pos:line="22" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call><operator pos:line="22" pos:column="49">)<pos:position pos:line="22" pos:column="50"/></operator> <operator pos:line="22" pos:column="51">!=<pos:position pos:line="22" pos:column="53"/></operator> <name pos:line="22" pos:column="54">APR_SUCCESS<pos:position pos:line="22" pos:column="65"/></name></expr>)<pos:position pos:line="22" pos:column="66"/></condition><then pos:line="22" pos:column="66"> <block pos:line="22" pos:column="67">{ 
                <return pos:line="23" pos:column="17">return <expr><name pos:line="23" pos:column="24">stat<pos:position pos:line="23" pos:column="28"/></name></expr>;<pos:position pos:line="23" pos:column="29"/></return> 
            }<pos:position pos:line="24" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">apr_set_option<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">sock<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">APR_SO_NONBLOCK<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="51">0<pos:position pos:line="25" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if> 
    }<pos:position pos:line="27" pos:column="6"/></block></then></if></elseif></if>
    <comment type="block" pos:line="28" pos:column="5">/* must disable the incomplete read support if we disable
     * a timeout
     */</comment>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">t<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">&lt;=<pos:position pos:line="31" pos:column="16"/></operator> <literal type="number" pos:line="31" pos:column="14">0<pos:position pos:line="31" pos:column="15"/></literal></expr>)<pos:position pos:line="31" pos:column="16"/></condition><then pos:line="31" pos:column="16"> <block pos:line="31" pos:column="17">{
        <expr_stmt><expr><name><name pos:line="32" pos:column="9">sock<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">-&gt;<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="15">options<pos:position pos:line="32" pos:column="22"/></name></name> <operator pos:line="32" pos:column="23">&amp;=<pos:position pos:line="32" pos:column="29"/></operator> <operator pos:line="32" pos:column="26">~<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="27">APR_INCOMPLETE_READ<pos:position pos:line="32" pos:column="46"/></name></expr>;<pos:position pos:line="32" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">sock<pos:position pos:line="34" pos:column="9"/></name><operator pos:line="34" pos:column="9">-&gt;<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="11">timeout<pos:position pos:line="34" pos:column="18"/></name></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">t<pos:position pos:line="34" pos:column="22"/></name></expr>;<pos:position pos:line="34" pos:column="23"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">APR_SUCCESS<pos:position pos:line="35" pos:column="23"/></name></expr>;<pos:position pos:line="35" pos:column="24"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<function xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position"><specifier pos:line="1823" pos:column="1">static<pos:position pos:line="1823" pos:column="7"/></specifier> <type><name pos:line="1823" pos:column="8">void<pos:position pos:line="1823" pos:column="12"/></name></type> <name pos:line="1823" pos:column="13">am_run<pos:position pos:line="1823" pos:column="19"/></name><parameter_list pos:line="1823" pos:column="19">(<parameter><decl><type><name><name pos:line="1823" pos:column="20">struct<pos:position pos:line="1823" pos:column="26"/></name> <name pos:line="1823" pos:column="27">am_state<pos:position pos:line="1823" pos:column="35"/></name></name> <modifier pos:line="1823" pos:column="36">*<pos:position pos:line="1823" pos:column="37"/></modifier></type><name pos:line="1823" pos:column="37">state<pos:position pos:line="1823" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1823" pos:column="44">int<pos:position pos:line="1823" pos:column="47"/></name></type> <name pos:line="1823" pos:column="48">resume<pos:position pos:line="1823" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1823" pos:column="55"/></parameter_list>
<block pos:line="1824" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="1825" pos:column="9">const<pos:position pos:line="1825" pos:column="14"/></specifier> <name pos:line="1825" pos:column="15">char<pos:position pos:line="1825" pos:column="19"/></name> <modifier pos:line="1825" pos:column="20">*<pos:position pos:line="1825" pos:column="21"/></modifier></type><name><name pos:line="1825" pos:column="21">argv_gc_auto<pos:position pos:line="1825" pos:column="33"/></name><index pos:line="1825" pos:column="33">[]<pos:position pos:line="1825" pos:column="35"/></index></name> <init pos:line="1825" pos:column="36">= <expr><block pos:line="1825" pos:column="38">{<expr><literal type="string" pos:line="1825" pos:column="39">"gc"<pos:position pos:line="1825" pos:column="43"/></literal></expr>, <expr><literal type="string" pos:line="1825" pos:column="45">"--auto"<pos:position pos:line="1825" pos:column="53"/></literal></expr>, <expr><name pos:line="1825" pos:column="55">NULL<pos:position pos:line="1825" pos:column="59"/></name></expr>}<pos:position pos:line="1825" pos:column="60"/></block></expr></init></decl>;<pos:position pos:line="1825" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="1826" pos:column="9">struct<pos:position pos:line="1826" pos:column="15"/></name> <name pos:line="1826" pos:column="16">strbuf<pos:position pos:line="1826" pos:column="22"/></name></name></type> <name pos:line="1826" pos:column="23">sb<pos:position pos:line="1826" pos:column="25"/></name> <init pos:line="1826" pos:column="26">= <expr><name pos:line="1826" pos:column="28">STRBUF_INIT<pos:position pos:line="1826" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="1826" pos:column="40"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="1828" pos:column="9">unlink<pos:position pos:line="1828" pos:column="15"/></name><argument_list pos:line="1828" pos:column="15">(<argument><expr><call><name pos:line="1828" pos:column="16">am_path<pos:position pos:line="1828" pos:column="23"/></name><argument_list pos:line="1828" pos:column="23">(<argument><expr><name pos:line="1828" pos:column="24">state<pos:position pos:line="1828" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1828" pos:column="31">"dirtyindex"<pos:position pos:line="1828" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="1828" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="1828" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="1828" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="1830" pos:column="9">refresh_and_write_cache<pos:position pos:line="1830" pos:column="32"/></name><argument_list pos:line="1830" pos:column="32">()<pos:position pos:line="1830" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="1830" pos:column="35"/></expr_stmt>

	<if pos:line="1832" pos:column="9">if <condition pos:line="1832" pos:column="12">(<expr><call><name pos:line="1832" pos:column="13">index_has_changes<pos:position pos:line="1832" pos:column="30"/></name><argument_list pos:line="1832" pos:column="30">(<argument><expr><operator pos:line="1832" pos:column="31">&amp;<pos:position pos:line="1832" pos:column="36"/></operator><name pos:line="1832" pos:column="32">sb<pos:position pos:line="1832" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1832" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="1832" pos:column="36"/></condition><then pos:line="1832" pos:column="36"> <block pos:line="1832" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="1833" pos:column="17">write_state_bool<pos:position pos:line="1833" pos:column="33"/></name><argument_list pos:line="1833" pos:column="33">(<argument><expr><name pos:line="1833" pos:column="34">state<pos:position pos:line="1833" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1833" pos:column="41">"dirtyindex"<pos:position pos:line="1833" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1833" pos:column="55">1<pos:position pos:line="1833" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="1833" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="1833" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="1834" pos:column="17">die<pos:position pos:line="1834" pos:column="20"/></name><argument_list pos:line="1834" pos:column="20">(<argument><expr><call><name pos:line="1834" pos:column="21">_<pos:position pos:line="1834" pos:column="22"/></name><argument_list pos:line="1834" pos:column="22">(<argument><expr><literal type="string" pos:line="1834" pos:column="23">"Dirty index: cannot apply patches (dirty: %s)"<pos:position pos:line="1834" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="1834" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="1834" pos:column="73">sb<pos:position pos:line="1834" pos:column="75"/></name><operator pos:line="1834" pos:column="75">.<pos:position pos:line="1834" pos:column="76"/></operator><name pos:line="1834" pos:column="76">buf<pos:position pos:line="1834" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="1834" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="1834" pos:column="81"/></expr_stmt>
	}<pos:position pos:line="1835" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="1837" pos:column="9">strbuf_release<pos:position pos:line="1837" pos:column="23"/></name><argument_list pos:line="1837" pos:column="23">(<argument><expr><operator pos:line="1837" pos:column="24">&amp;<pos:position pos:line="1837" pos:column="29"/></operator><name pos:line="1837" pos:column="25">sb<pos:position pos:line="1837" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1837" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1837" pos:column="29"/></expr_stmt>

	<while pos:line="1839" pos:column="9">while <condition pos:line="1839" pos:column="15">(<expr><name><name pos:line="1839" pos:column="16">state<pos:position pos:line="1839" pos:column="21"/></name><operator pos:line="1839" pos:column="21">-&gt;<pos:position pos:line="1839" pos:column="26"/></operator><name pos:line="1839" pos:column="23">cur<pos:position pos:line="1839" pos:column="26"/></name></name> <operator pos:line="1839" pos:column="27">&lt;=<pos:position pos:line="1839" pos:column="32"/></operator> <name><name pos:line="1839" pos:column="30">state<pos:position pos:line="1839" pos:column="35"/></name><operator pos:line="1839" pos:column="35">-&gt;<pos:position pos:line="1839" pos:column="40"/></operator><name pos:line="1839" pos:column="37">last<pos:position pos:line="1839" pos:column="41"/></name></name></expr>)<pos:position pos:line="1839" pos:column="42"/></condition> <block pos:line="1839" pos:column="43">{
		<decl_stmt><decl><type><specifier pos:line="1840" pos:column="17">const<pos:position pos:line="1840" pos:column="22"/></specifier> <name pos:line="1840" pos:column="23">char<pos:position pos:line="1840" pos:column="27"/></name> <modifier pos:line="1840" pos:column="28">*<pos:position pos:line="1840" pos:column="29"/></modifier></type><name pos:line="1840" pos:column="29">mail<pos:position pos:line="1840" pos:column="33"/></name> <init pos:line="1840" pos:column="34">= <expr><call><name pos:line="1840" pos:column="36">am_path<pos:position pos:line="1840" pos:column="43"/></name><argument_list pos:line="1840" pos:column="43">(<argument><expr><name pos:line="1840" pos:column="44">state<pos:position pos:line="1840" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="1840" pos:column="51">msgnum<pos:position pos:line="1840" pos:column="57"/></name><argument_list pos:line="1840" pos:column="57">(<argument><expr><name pos:line="1840" pos:column="58">state<pos:position pos:line="1840" pos:column="63"/></name></expr></argument>)<pos:position pos:line="1840" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="1840" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1840" pos:column="66"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="1841" pos:column="17">int<pos:position pos:line="1841" pos:column="20"/></name></type> <name pos:line="1841" pos:column="21">apply_status<pos:position pos:line="1841" pos:column="33"/></name></decl>;<pos:position pos:line="1841" pos:column="34"/></decl_stmt>

		<if pos:line="1843" pos:column="17">if <condition pos:line="1843" pos:column="20">(<expr><operator pos:line="1843" pos:column="21">!<pos:position pos:line="1843" pos:column="22"/></operator><call><name pos:line="1843" pos:column="22">file_exists<pos:position pos:line="1843" pos:column="33"/></name><argument_list pos:line="1843" pos:column="33">(<argument><expr><name pos:line="1843" pos:column="34">mail<pos:position pos:line="1843" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1843" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="1843" pos:column="40"/></condition><then pos:line="1843" pos:column="40">
			<block type="pseudo"><goto pos:line="1844" pos:column="25">goto <name pos:line="1844" pos:column="30">next<pos:position pos:line="1844" pos:column="34"/></name>;<pos:position pos:line="1844" pos:column="35"/></goto></block></then></if>

		<if pos:line="1846" pos:column="17">if <condition pos:line="1846" pos:column="20">(<expr><name pos:line="1846" pos:column="21">resume<pos:position pos:line="1846" pos:column="27"/></name></expr>)<pos:position pos:line="1846" pos:column="28"/></condition><then pos:line="1846" pos:column="28"> <block pos:line="1846" pos:column="29">{
			<expr_stmt><expr><call><name pos:line="1847" pos:column="25">validate_resume_state<pos:position pos:line="1847" pos:column="46"/></name><argument_list pos:line="1847" pos:column="46">(<argument><expr><name pos:line="1847" pos:column="47">state<pos:position pos:line="1847" pos:column="52"/></name></expr></argument>)<pos:position pos:line="1847" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1847" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="1848" pos:column="18"/></block></then> <else pos:line="1848" pos:column="19">else <block pos:line="1848" pos:column="24">{
			<decl_stmt><decl><type><name pos:line="1849" pos:column="25">int<pos:position pos:line="1849" pos:column="28"/></name></type> <name pos:line="1849" pos:column="29">skip<pos:position pos:line="1849" pos:column="33"/></name></decl>;<pos:position pos:line="1849" pos:column="34"/></decl_stmt>

			<if pos:line="1851" pos:column="25">if <condition pos:line="1851" pos:column="28">(<expr><name><name pos:line="1851" pos:column="29">state<pos:position pos:line="1851" pos:column="34"/></name><operator pos:line="1851" pos:column="34">-&gt;<pos:position pos:line="1851" pos:column="39"/></operator><name pos:line="1851" pos:column="36">rebasing<pos:position pos:line="1851" pos:column="44"/></name></name></expr>)<pos:position pos:line="1851" pos:column="45"/></condition><then pos:line="1851" pos:column="45">
				<block type="pseudo"><expr_stmt><expr><name pos:line="1852" pos:column="33">skip<pos:position pos:line="1852" pos:column="37"/></name> <operator pos:line="1852" pos:column="38">=<pos:position pos:line="1852" pos:column="39"/></operator> <call><name pos:line="1852" pos:column="40">parse_mail_rebase<pos:position pos:line="1852" pos:column="57"/></name><argument_list pos:line="1852" pos:column="57">(<argument><expr><name pos:line="1852" pos:column="58">state<pos:position pos:line="1852" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="1852" pos:column="65">mail<pos:position pos:line="1852" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1852" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="1852" pos:column="71"/></expr_stmt></block></then>
			<else pos:line="1853" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="1854" pos:column="33">skip<pos:position pos:line="1854" pos:column="37"/></name> <operator pos:line="1854" pos:column="38">=<pos:position pos:line="1854" pos:column="39"/></operator> <call><name pos:line="1854" pos:column="40">parse_mail<pos:position pos:line="1854" pos:column="50"/></name><argument_list pos:line="1854" pos:column="50">(<argument><expr><name pos:line="1854" pos:column="51">state<pos:position pos:line="1854" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="1854" pos:column="58">mail<pos:position pos:line="1854" pos:column="62"/></name></expr></argument>)<pos:position pos:line="1854" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="1854" pos:column="64"/></expr_stmt></block></else></if>

			<if pos:line="1856" pos:column="25">if <condition pos:line="1856" pos:column="28">(<expr><name pos:line="1856" pos:column="29">skip<pos:position pos:line="1856" pos:column="33"/></name></expr>)<pos:position pos:line="1856" pos:column="34"/></condition><then pos:line="1856" pos:column="34">
				<block type="pseudo"><goto pos:line="1857" pos:column="33">goto <name pos:line="1857" pos:column="38">next<pos:position pos:line="1857" pos:column="42"/></name>;<pos:position pos:line="1857" pos:column="43"/></goto></block></then></if> <comment type="block" pos:line="1857" pos:column="44">/* mail should be skipped */</comment>

			<expr_stmt><expr><call><name pos:line="1859" pos:column="25">write_author_script<pos:position pos:line="1859" pos:column="44"/></name><argument_list pos:line="1859" pos:column="44">(<argument><expr><name pos:line="1859" pos:column="45">state<pos:position pos:line="1859" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1859" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1859" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="1860" pos:column="25">write_commit_msg<pos:position pos:line="1860" pos:column="41"/></name><argument_list pos:line="1860" pos:column="41">(<argument><expr><name pos:line="1860" pos:column="42">state<pos:position pos:line="1860" pos:column="47"/></name></expr></argument>)<pos:position pos:line="1860" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="1860" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="1861" pos:column="18"/></block></else></if>

		<if pos:line="1863" pos:column="17">if <condition pos:line="1863" pos:column="20">(<expr><name><name pos:line="1863" pos:column="21">state<pos:position pos:line="1863" pos:column="26"/></name><operator pos:line="1863" pos:column="26">-&gt;<pos:position pos:line="1863" pos:column="31"/></operator><name pos:line="1863" pos:column="28">interactive<pos:position pos:line="1863" pos:column="39"/></name></name> <operator pos:line="1863" pos:column="40">&amp;&amp;<pos:position pos:line="1863" pos:column="50"/></operator> <call><name pos:line="1863" pos:column="43">do_interactive<pos:position pos:line="1863" pos:column="57"/></name><argument_list pos:line="1863" pos:column="57">(<argument><expr><name pos:line="1863" pos:column="58">state<pos:position pos:line="1863" pos:column="63"/></name></expr></argument>)<pos:position pos:line="1863" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="1863" pos:column="65"/></condition><then pos:line="1863" pos:column="65">
			<block type="pseudo"><goto pos:line="1864" pos:column="25">goto <name pos:line="1864" pos:column="30">next<pos:position pos:line="1864" pos:column="34"/></name>;<pos:position pos:line="1864" pos:column="35"/></goto></block></then></if>

		<if pos:line="1866" pos:column="17">if <condition pos:line="1866" pos:column="20">(<expr><call><name pos:line="1866" pos:column="21">run_applypatch_msg_hook<pos:position pos:line="1866" pos:column="44"/></name><argument_list pos:line="1866" pos:column="44">(<argument><expr><name pos:line="1866" pos:column="45">state<pos:position pos:line="1866" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1866" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="1866" pos:column="52"/></condition><then pos:line="1866" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="1867" pos:column="25">exit<pos:position pos:line="1867" pos:column="29"/></name><argument_list pos:line="1867" pos:column="29">(<argument><expr><literal type="number" pos:line="1867" pos:column="30">1<pos:position pos:line="1867" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="1867" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="1867" pos:column="33"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="1869" pos:column="17">say<pos:position pos:line="1869" pos:column="20"/></name><argument_list pos:line="1869" pos:column="20">(<argument><expr><name pos:line="1869" pos:column="21">state<pos:position pos:line="1869" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="1869" pos:column="28">stdout<pos:position pos:line="1869" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="1869" pos:column="36">_<pos:position pos:line="1869" pos:column="37"/></name><argument_list pos:line="1869" pos:column="37">(<argument><expr><literal type="string" pos:line="1869" pos:column="38">"Applying: %.*s"<pos:position pos:line="1869" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="1869" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1869" pos:column="57">linelen<pos:position pos:line="1869" pos:column="64"/></name><argument_list pos:line="1869" pos:column="64">(<argument><expr><name><name pos:line="1869" pos:column="65">state<pos:position pos:line="1869" pos:column="70"/></name><operator pos:line="1869" pos:column="70">-&gt;<pos:position pos:line="1869" pos:column="75"/></operator><name pos:line="1869" pos:column="72">msg<pos:position pos:line="1869" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="1869" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="1869" pos:column="78">state<pos:position pos:line="1869" pos:column="83"/></name><operator pos:line="1869" pos:column="83">-&gt;<pos:position pos:line="1869" pos:column="88"/></operator><name pos:line="1869" pos:column="85">msg<pos:position pos:line="1869" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="1869" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="1869" pos:column="90"/></expr_stmt>

		<expr_stmt><expr><name pos:line="1871" pos:column="17">apply_status<pos:position pos:line="1871" pos:column="29"/></name> <operator pos:line="1871" pos:column="30">=<pos:position pos:line="1871" pos:column="31"/></operator> <call><name pos:line="1871" pos:column="32">run_apply<pos:position pos:line="1871" pos:column="41"/></name><argument_list pos:line="1871" pos:column="41">(<argument><expr><name pos:line="1871" pos:column="42">state<pos:position pos:line="1871" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="1871" pos:column="49">NULL<pos:position pos:line="1871" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1871" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="1871" pos:column="55"/></expr_stmt>

		<if pos:line="1873" pos:column="17">if <condition pos:line="1873" pos:column="20">(<expr><name pos:line="1873" pos:column="21">apply_status<pos:position pos:line="1873" pos:column="33"/></name> <operator pos:line="1873" pos:column="34">&amp;&amp;<pos:position pos:line="1873" pos:column="44"/></operator> <name><name pos:line="1873" pos:column="37">state<pos:position pos:line="1873" pos:column="42"/></name><operator pos:line="1873" pos:column="42">-&gt;<pos:position pos:line="1873" pos:column="47"/></operator><name pos:line="1873" pos:column="44">threeway<pos:position pos:line="1873" pos:column="52"/></name></name></expr>)<pos:position pos:line="1873" pos:column="53"/></condition><then pos:line="1873" pos:column="53"> <block pos:line="1873" pos:column="54">{
			<decl_stmt><decl><type><name><name pos:line="1874" pos:column="25">struct<pos:position pos:line="1874" pos:column="31"/></name> <name pos:line="1874" pos:column="32">strbuf<pos:position pos:line="1874" pos:column="38"/></name></name></type> <name pos:line="1874" pos:column="39">sb<pos:position pos:line="1874" pos:column="41"/></name> <init pos:line="1874" pos:column="42">= <expr><name pos:line="1874" pos:column="44">STRBUF_INIT<pos:position pos:line="1874" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="1874" pos:column="56"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="1876" pos:column="25">strbuf_addstr<pos:position pos:line="1876" pos:column="38"/></name><argument_list pos:line="1876" pos:column="38">(<argument><expr><operator pos:line="1876" pos:column="39">&amp;<pos:position pos:line="1876" pos:column="44"/></operator><name pos:line="1876" pos:column="40">sb<pos:position pos:line="1876" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="1876" pos:column="44">am_path<pos:position pos:line="1876" pos:column="51"/></name><argument_list pos:line="1876" pos:column="51">(<argument><expr><name pos:line="1876" pos:column="52">state<pos:position pos:line="1876" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1876" pos:column="59">"patch-merge-index"<pos:position pos:line="1876" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="1876" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="1876" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="1876" pos:column="81"/></expr_stmt>
			<expr_stmt><expr><name pos:line="1877" pos:column="25">apply_status<pos:position pos:line="1877" pos:column="37"/></name> <operator pos:line="1877" pos:column="38">=<pos:position pos:line="1877" pos:column="39"/></operator> <call><name pos:line="1877" pos:column="40">fall_back_threeway<pos:position pos:line="1877" pos:column="58"/></name><argument_list pos:line="1877" pos:column="58">(<argument><expr><name pos:line="1877" pos:column="59">state<pos:position pos:line="1877" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="1877" pos:column="66">sb<pos:position pos:line="1877" pos:column="68"/></name><operator pos:line="1877" pos:column="68">.<pos:position pos:line="1877" pos:column="69"/></operator><name pos:line="1877" pos:column="69">buf<pos:position pos:line="1877" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="1877" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="1877" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="1878" pos:column="25">strbuf_release<pos:position pos:line="1878" pos:column="39"/></name><argument_list pos:line="1878" pos:column="39">(<argument><expr><operator pos:line="1878" pos:column="40">&amp;<pos:position pos:line="1878" pos:column="45"/></operator><name pos:line="1878" pos:column="41">sb<pos:position pos:line="1878" pos:column="43"/></name></expr></argument>)<pos:position pos:line="1878" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="1878" pos:column="45"/></expr_stmt>

			<comment type="block" pos:line="1880" pos:column="25">/*
			 * Applying the patch to an earlier tree and merging
			 * the result may have produced the same tree as ours.
			 */</comment>
			<if pos:line="1884" pos:column="25">if <condition pos:line="1884" pos:column="28">(<expr><operator pos:line="1884" pos:column="29">!<pos:position pos:line="1884" pos:column="30"/></operator><name pos:line="1884" pos:column="30">apply_status<pos:position pos:line="1884" pos:column="42"/></name> <operator pos:line="1884" pos:column="43">&amp;&amp;<pos:position pos:line="1884" pos:column="53"/></operator> <operator pos:line="1884" pos:column="46">!<pos:position pos:line="1884" pos:column="47"/></operator><call><name pos:line="1884" pos:column="47">index_has_changes<pos:position pos:line="1884" pos:column="64"/></name><argument_list pos:line="1884" pos:column="64">(<argument><expr><name pos:line="1884" pos:column="65">NULL<pos:position pos:line="1884" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1884" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="1884" pos:column="71"/></condition><then pos:line="1884" pos:column="71"> <block pos:line="1884" pos:column="72">{
				<expr_stmt><expr><call><name pos:line="1885" pos:column="33">say<pos:position pos:line="1885" pos:column="36"/></name><argument_list pos:line="1885" pos:column="36">(<argument><expr><name pos:line="1885" pos:column="37">state<pos:position pos:line="1885" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1885" pos:column="44">stdout<pos:position pos:line="1885" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="1885" pos:column="52">_<pos:position pos:line="1885" pos:column="53"/></name><argument_list pos:line="1885" pos:column="53">(<argument><expr><literal type="string" pos:line="1885" pos:column="54">"No changes -- Patch already applied."<pos:position pos:line="1885" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="1885" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="1885" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="1885" pos:column="95"/></expr_stmt>
				<goto pos:line="1886" pos:column="33">goto <name pos:line="1886" pos:column="38">next<pos:position pos:line="1886" pos:column="42"/></name>;<pos:position pos:line="1886" pos:column="43"/></goto>
			}<pos:position pos:line="1887" pos:column="26"/></block></then></if>
		}<pos:position pos:line="1888" pos:column="18"/></block></then></if>

		<if pos:line="1890" pos:column="17">if <condition pos:line="1890" pos:column="20">(<expr><name pos:line="1890" pos:column="21">apply_status<pos:position pos:line="1890" pos:column="33"/></name></expr>)<pos:position pos:line="1890" pos:column="34"/></condition><then pos:line="1890" pos:column="34"> <block pos:line="1890" pos:column="35">{
			<decl_stmt><decl><type><name pos:line="1891" pos:column="25">int<pos:position pos:line="1891" pos:column="28"/></name></type> <name pos:line="1891" pos:column="29">advice_amworkdir<pos:position pos:line="1891" pos:column="45"/></name> <init pos:line="1891" pos:column="46">= <expr><literal type="number" pos:line="1891" pos:column="48">1<pos:position pos:line="1891" pos:column="49"/></literal></expr></init></decl>;<pos:position pos:line="1891" pos:column="50"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="1893" pos:column="25">printf_ln<pos:position pos:line="1893" pos:column="34"/></name><argument_list pos:line="1893" pos:column="34">(<argument><expr><call><name pos:line="1893" pos:column="35">_<pos:position pos:line="1893" pos:column="36"/></name><argument_list pos:line="1893" pos:column="36">(<argument><expr><literal type="string" pos:line="1893" pos:column="37">"Patch failed at %s %.*s"<pos:position pos:line="1893" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="1893" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1893" pos:column="65">msgnum<pos:position pos:line="1893" pos:column="71"/></name><argument_list pos:line="1893" pos:column="71">(<argument><expr><name pos:line="1893" pos:column="72">state<pos:position pos:line="1893" pos:column="77"/></name></expr></argument>)<pos:position pos:line="1893" pos:column="78"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="1894" pos:column="33">linelen<pos:position pos:line="1894" pos:column="40"/></name><argument_list pos:line="1894" pos:column="40">(<argument><expr><name><name pos:line="1894" pos:column="41">state<pos:position pos:line="1894" pos:column="46"/></name><operator pos:line="1894" pos:column="46">-&gt;<pos:position pos:line="1894" pos:column="51"/></operator><name pos:line="1894" pos:column="48">msg<pos:position pos:line="1894" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="1894" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="1894" pos:column="54">state<pos:position pos:line="1894" pos:column="59"/></name><operator pos:line="1894" pos:column="59">-&gt;<pos:position pos:line="1894" pos:column="64"/></operator><name pos:line="1894" pos:column="61">msg<pos:position pos:line="1894" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="1894" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="1894" pos:column="66"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="1896" pos:column="25">git_config_get_bool<pos:position pos:line="1896" pos:column="44"/></name><argument_list pos:line="1896" pos:column="44">(<argument><expr><literal type="string" pos:line="1896" pos:column="45">"advice.amworkdir"<pos:position pos:line="1896" pos:column="63"/></literal></expr></argument>, <argument><expr><operator pos:line="1896" pos:column="65">&amp;<pos:position pos:line="1896" pos:column="70"/></operator><name pos:line="1896" pos:column="66">advice_amworkdir<pos:position pos:line="1896" pos:column="82"/></name></expr></argument>)<pos:position pos:line="1896" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="1896" pos:column="84"/></expr_stmt>

			<if pos:line="1898" pos:column="25">if <condition pos:line="1898" pos:column="28">(<expr><name pos:line="1898" pos:column="29">advice_amworkdir<pos:position pos:line="1898" pos:column="45"/></name></expr>)<pos:position pos:line="1898" pos:column="46"/></condition><then pos:line="1898" pos:column="46">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="1899" pos:column="33">printf_ln<pos:position pos:line="1899" pos:column="42"/></name><argument_list pos:line="1899" pos:column="42">(<argument><expr><call><name pos:line="1899" pos:column="43">_<pos:position pos:line="1899" pos:column="44"/></name><argument_list pos:line="1899" pos:column="44">(<argument><expr><literal type="string" pos:line="1899" pos:column="45">"The copy of the patch that failed is found in: %s"<pos:position pos:line="1899" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="1899" pos:column="97"/></argument_list></call></expr></argument>,
						<argument><expr><call><name pos:line="1900" pos:column="49">am_path<pos:position pos:line="1900" pos:column="56"/></name><argument_list pos:line="1900" pos:column="56">(<argument><expr><name pos:line="1900" pos:column="57">state<pos:position pos:line="1900" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1900" pos:column="64">"patch"<pos:position pos:line="1900" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="1900" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="1900" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="1900" pos:column="74"/></expr_stmt></block></then></if>

			<expr_stmt><expr><call><name pos:line="1902" pos:column="25">die_user_resolve<pos:position pos:line="1902" pos:column="41"/></name><argument_list pos:line="1902" pos:column="41">(<argument><expr><name pos:line="1902" pos:column="42">state<pos:position pos:line="1902" pos:column="47"/></name></expr></argument>)<pos:position pos:line="1902" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="1902" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="1903" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="1905" pos:column="17">do_commit<pos:position pos:line="1905" pos:column="26"/></name><argument_list pos:line="1905" pos:column="26">(<argument><expr><name pos:line="1905" pos:column="27">state<pos:position pos:line="1905" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1905" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="1905" pos:column="34"/></expr_stmt>

<label><name pos:line="1907" pos:column="1">next<pos:position pos:line="1907" pos:column="5"/></name>:<pos:position pos:line="1907" pos:column="6"/></label>
		<expr_stmt><expr><call><name pos:line="1908" pos:column="17">am_next<pos:position pos:line="1908" pos:column="24"/></name><argument_list pos:line="1908" pos:column="24">(<argument><expr><name pos:line="1908" pos:column="25">state<pos:position pos:line="1908" pos:column="30"/></name></expr></argument>)<pos:position pos:line="1908" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="1908" pos:column="32"/></expr_stmt>

		<if pos:line="1910" pos:column="17">if <condition pos:line="1910" pos:column="20">(<expr><name pos:line="1910" pos:column="21">resume<pos:position pos:line="1910" pos:column="27"/></name></expr>)<pos:position pos:line="1910" pos:column="28"/></condition><then pos:line="1910" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="1911" pos:column="25">am_load<pos:position pos:line="1911" pos:column="32"/></name><argument_list pos:line="1911" pos:column="32">(<argument><expr><name pos:line="1911" pos:column="33">state<pos:position pos:line="1911" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1911" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1911" pos:column="40"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="1912" pos:column="17">resume<pos:position pos:line="1912" pos:column="23"/></name> <operator pos:line="1912" pos:column="24">=<pos:position pos:line="1912" pos:column="25"/></operator> <literal type="number" pos:line="1912" pos:column="26">0<pos:position pos:line="1912" pos:column="27"/></literal></expr>;<pos:position pos:line="1912" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="1913" pos:column="10"/></block></while>

	<if pos:line="1915" pos:column="9">if <condition pos:line="1915" pos:column="12">(<expr><operator pos:line="1915" pos:column="13">!<pos:position pos:line="1915" pos:column="14"/></operator><call><name pos:line="1915" pos:column="14">is_empty_file<pos:position pos:line="1915" pos:column="27"/></name><argument_list pos:line="1915" pos:column="27">(<argument><expr><call><name pos:line="1915" pos:column="28">am_path<pos:position pos:line="1915" pos:column="35"/></name><argument_list pos:line="1915" pos:column="35">(<argument><expr><name pos:line="1915" pos:column="36">state<pos:position pos:line="1915" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1915" pos:column="43">"rewritten"<pos:position pos:line="1915" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="1915" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="1915" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="1915" pos:column="57"/></condition><then pos:line="1915" pos:column="57"> <block pos:line="1915" pos:column="58">{
		<expr_stmt><expr><call><name pos:line="1916" pos:column="17">assert<pos:position pos:line="1916" pos:column="23"/></name><argument_list pos:line="1916" pos:column="23">(<argument><expr><name><name pos:line="1916" pos:column="24">state<pos:position pos:line="1916" pos:column="29"/></name><operator pos:line="1916" pos:column="29">-&gt;<pos:position pos:line="1916" pos:column="34"/></operator><name pos:line="1916" pos:column="31">rebasing<pos:position pos:line="1916" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="1916" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="1916" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="1917" pos:column="17">copy_notes_for_rebase<pos:position pos:line="1917" pos:column="38"/></name><argument_list pos:line="1917" pos:column="38">(<argument><expr><name pos:line="1917" pos:column="39">state<pos:position pos:line="1917" pos:column="44"/></name></expr></argument>)<pos:position pos:line="1917" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="1917" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="1918" pos:column="17">run_post_rewrite_hook<pos:position pos:line="1918" pos:column="38"/></name><argument_list pos:line="1918" pos:column="38">(<argument><expr><name pos:line="1918" pos:column="39">state<pos:position pos:line="1918" pos:column="44"/></name></expr></argument>)<pos:position pos:line="1918" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="1918" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="1919" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="1921" pos:column="9">/*
	 * In rebasing mode, it's up to the caller to take care of
	 * housekeeping.
	 */</comment>
	<if pos:line="1925" pos:column="9">if <condition pos:line="1925" pos:column="12">(<expr><operator pos:line="1925" pos:column="13">!<pos:position pos:line="1925" pos:column="14"/></operator><name><name pos:line="1925" pos:column="14">state<pos:position pos:line="1925" pos:column="19"/></name><operator pos:line="1925" pos:column="19">-&gt;<pos:position pos:line="1925" pos:column="24"/></operator><name pos:line="1925" pos:column="21">rebasing<pos:position pos:line="1925" pos:column="29"/></name></name></expr>)<pos:position pos:line="1925" pos:column="30"/></condition><then pos:line="1925" pos:column="30"> <block pos:line="1925" pos:column="31">{
		<expr_stmt><expr><call><name pos:line="1926" pos:column="17">am_destroy<pos:position pos:line="1926" pos:column="27"/></name><argument_list pos:line="1926" pos:column="27">(<argument><expr><name pos:line="1926" pos:column="28">state<pos:position pos:line="1926" pos:column="33"/></name></expr></argument>)<pos:position pos:line="1926" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="1926" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="1927" pos:column="17">close_all_packs<pos:position pos:line="1927" pos:column="32"/></name><argument_list pos:line="1927" pos:column="32">()<pos:position pos:line="1927" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="1927" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="1928" pos:column="17">run_command_v_opt<pos:position pos:line="1928" pos:column="34"/></name><argument_list pos:line="1928" pos:column="34">(<argument><expr><name pos:line="1928" pos:column="35">argv_gc_auto<pos:position pos:line="1928" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="1928" pos:column="49">RUN_GIT_CMD<pos:position pos:line="1928" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1928" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1928" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="1929" pos:column="10"/></block></then></if>
}<pos:position pos:line="1930" pos:column="2"/></block></function>


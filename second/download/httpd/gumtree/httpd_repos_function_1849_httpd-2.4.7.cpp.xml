<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1849_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">etag_uint64_to_hex<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">next<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">apr_uint64_t<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">u<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">printing<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><literal type="number" pos:line="3" pos:column="20">0<pos:position pos:line="3" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">shift<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><sizeof pos:line="4" pos:column="17">sizeof<argument_list pos:line="4" pos:column="23">(<argument><expr><name pos:line="4" pos:column="24">apr_uint64_t<pos:position pos:line="4" pos:column="36"/></name></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></sizeof> <operator pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></operator> <literal type="number" pos:line="4" pos:column="40">8<pos:position pos:line="4" pos:column="41"/></literal> <operator pos:line="4" pos:column="42">-<pos:position pos:line="4" pos:column="43"/></operator> <literal type="number" pos:line="4" pos:column="44">4<pos:position pos:line="4" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
    <do pos:line="5" pos:column="5">do <block pos:line="5" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">short<pos:position pos:line="6" pos:column="23"/></name></type> <name pos:line="6" pos:column="24">next_digit<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><call pos:line="6" pos:column="37">(<name pos:line="6" pos:column="38">unsigned<pos:position pos:line="6" pos:column="46"/></name> <name pos:line="6" pos:column="47">short<pos:position pos:line="6" pos:column="52"/></name>)
                                    <argument_list pos:line="7" pos:column="37">(<argument><expr><operator pos:line="7" pos:column="38">(<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="39">u<pos:position pos:line="7" pos:column="40"/></name> <operator pos:line="7" pos:column="41">&gt;&gt;<pos:position pos:line="7" pos:column="46"/></operator> <name pos:line="7" pos:column="44">shift<pos:position pos:line="7" pos:column="49"/></name><operator pos:line="7" pos:column="49">)<pos:position pos:line="7" pos:column="50"/></operator> <operator pos:line="7" pos:column="51">&amp;<pos:position pos:line="7" pos:column="56"/></operator> <operator pos:line="7" pos:column="53">(<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="54">apr_uint64_t<pos:position pos:line="7" pos:column="66"/></name><operator pos:line="7" pos:column="66">)<pos:position pos:line="7" pos:column="67"/></operator><literal type="number" pos:line="7" pos:column="67">0xf<pos:position pos:line="7" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="72"/></decl_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">next_digit<pos:position pos:line="8" pos:column="23"/></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24"> <block pos:line="8" pos:column="25">{
            <expr_stmt><expr><operator pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">next<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">++<pos:position pos:line="9" pos:column="20"/></operator> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <name><name pos:line="9" pos:column="23">HEX_DIGITS<pos:position pos:line="9" pos:column="33"/></name><index pos:line="9" pos:column="33">[<expr><name pos:line="9" pos:column="34">next_digit<pos:position pos:line="9" pos:column="44"/></name></expr>]<pos:position pos:line="9" pos:column="45"/></index></name></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="10" pos:column="13">printing<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <literal type="number" pos:line="10" pos:column="24">1<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="11" pos:column="10"/></block></then>
        <elseif pos:line="12" pos:column="9">else <if pos:line="12" pos:column="14">if <condition pos:line="12" pos:column="17">(<expr><name pos:line="12" pos:column="18">printing<pos:position pos:line="12" pos:column="26"/></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27"> <block pos:line="12" pos:column="28">{
            <expr_stmt><expr><operator pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">next<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">++<pos:position pos:line="13" pos:column="20"/></operator> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <name><name pos:line="13" pos:column="23">HEX_DIGITS<pos:position pos:line="13" pos:column="33"/></name><index pos:line="13" pos:column="33">[<expr><name pos:line="13" pos:column="34">next_digit<pos:position pos:line="13" pos:column="44"/></name></expr>]<pos:position pos:line="13" pos:column="45"/></index></name></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if></elseif></if>
        <expr_stmt><expr><name pos:line="15" pos:column="9">shift<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">-=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">4<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block> while <condition pos:line="16" pos:column="13">(<expr><name pos:line="16" pos:column="14">shift<pos:position pos:line="16" pos:column="19"/></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition>;<pos:position pos:line="16" pos:column="21"/></do>
    <expr_stmt><expr><operator pos:line="17" pos:column="5">*<pos:position pos:line="17" pos:column="6"/></operator><name pos:line="17" pos:column="6">next<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">++<pos:position pos:line="17" pos:column="12"/></operator> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <name><name pos:line="17" pos:column="15">HEX_DIGITS<pos:position pos:line="17" pos:column="25"/></name><index pos:line="17" pos:column="25">[<expr><name pos:line="17" pos:column="26">u<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">&amp;<pos:position pos:line="17" pos:column="33"/></operator> <operator pos:line="17" pos:column="30">(<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">apr_uint64_t<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">)<pos:position pos:line="17" pos:column="44"/></operator><literal type="number" pos:line="17" pos:column="44">0xf<pos:position pos:line="17" pos:column="47"/></literal></expr>]<pos:position pos:line="17" pos:column="48"/></index></name></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">next<pos:position pos:line="18" pos:column="16"/></name></expr>;<pos:position pos:line="18" pos:column="17"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

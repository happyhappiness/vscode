<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1062_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">lua_authz_parse<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">cmd_parms<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">cmd<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">require_line<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">void<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier><modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">parsed_require_line<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">provider_name<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">lua_authz_provider_spec<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">spec<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">lua_authz_provider_func<pos:position pos:line="6" pos:column="28"/></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">func<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><call><name pos:line="6" pos:column="37">apr_pcalloc<pos:position pos:line="6" pos:column="48"/></name><argument_list pos:line="6" pos:column="48">(<argument><expr><name><name pos:line="6" pos:column="49">cmd<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">-&gt;<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="54">pool<pos:position pos:line="6" pos:column="58"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="60">sizeof<argument_list pos:line="6" pos:column="66">(<argument><expr><name pos:line="6" pos:column="67">lua_authz_provider_func<pos:position pos:line="6" pos:column="90"/></name></expr></argument>)<pos:position pos:line="6" pos:column="91"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="92"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="93"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">apr_pool_userdata_get<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><operator pos:line="8" pos:column="27">(<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">void<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">*<pos:position pos:line="8" pos:column="33"/></operator><operator pos:line="8" pos:column="33">*<pos:position pos:line="8" pos:column="34"/></operator><operator pos:line="8" pos:column="34">)<pos:position pos:line="8" pos:column="35"/></operator><operator pos:line="8" pos:column="35">&amp;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="36">provider_name<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="51">AUTHZ_PROVIDER_NAME_NOTE<pos:position pos:line="8" pos:column="75"/></name></expr></argument>,
                          <argument><expr><name><name pos:line="9" pos:column="27">cmd<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">temp_pool<pos:position pos:line="9" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ap_assert<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">provider_name<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">!=<pos:position pos:line="10" pos:column="31"/></operator> <name pos:line="10" pos:column="32">NULL<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">spec<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <call><name pos:line="12" pos:column="12">apr_hash_get<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">lua_authz_providers<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="46">provider_name<pos:position pos:line="12" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="61">APR_HASH_KEY_STRING<pos:position pos:line="12" pos:column="80"/></name></expr></argument>)<pos:position pos:line="12" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="82"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ap_assert<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">spec<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">!=<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">NULL<pos:position pos:line="13" pos:column="27"/></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">func<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">spec<pos:position pos:line="14" pos:column="15"/></name></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">spec<pos:position pos:line="14" pos:column="22"/></name></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">require_line<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">&amp;&amp;<pos:position pos:line="16" pos:column="32"/></operator> <operator pos:line="16" pos:column="25">*<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="26">require_line<pos:position pos:line="16" pos:column="38"/></name></expr>)<pos:position pos:line="16" pos:column="39"/></condition><then pos:line="16" pos:column="39"> <block pos:line="16" pos:column="40">{
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">const<pos:position pos:line="17" pos:column="14"/></specifier> <name pos:line="17" pos:column="15">char<pos:position pos:line="17" pos:column="19"/></name> <modifier pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></modifier></type><name pos:line="17" pos:column="21">arg<pos:position pos:line="17" pos:column="24"/></name></decl>;<pos:position pos:line="17" pos:column="25"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">func<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">args<pos:position pos:line="18" pos:column="19"/></name></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <call><name pos:line="18" pos:column="22">apr_array_make<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name><name pos:line="18" pos:column="37">cmd<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">pool<pos:position pos:line="18" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="48">2<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="51">sizeof<argument_list pos:line="18" pos:column="57">(<argument><expr><specifier pos:line="18" pos:column="58">const<pos:position pos:line="18" pos:column="63"/></specifier> <name pos:line="18" pos:column="64">char<pos:position pos:line="18" pos:column="68"/></name> <operator pos:line="18" pos:column="69">*<pos:position pos:line="18" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="73"/></expr_stmt>
        <while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">arg<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <call><name pos:line="19" pos:column="23">ap_getword_conf<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><name><name pos:line="19" pos:column="39">cmd<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">pool<pos:position pos:line="19" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="50">&amp;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="51">require_line<pos:position pos:line="19" pos:column="63"/></name></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call><operator pos:line="19" pos:column="64">)<pos:position pos:line="19" pos:column="65"/></operator> <operator pos:line="19" pos:column="66">&amp;&amp;<pos:position pos:line="19" pos:column="76"/></operator> <operator pos:line="19" pos:column="69">*<pos:position pos:line="19" pos:column="70"/></operator><name pos:line="19" pos:column="70">arg<pos:position pos:line="19" pos:column="73"/></name></expr>)<pos:position pos:line="19" pos:column="74"/></condition> <block pos:line="19" pos:column="75">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">APR_ARRAY_PUSH<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name><name pos:line="20" pos:column="28">func<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">args<pos:position pos:line="20" pos:column="38"/></name></name></expr></argument>, <argument><expr><specifier pos:line="20" pos:column="40">const<pos:position pos:line="20" pos:column="45"/></specifier> <name pos:line="20" pos:column="46">char<pos:position pos:line="20" pos:column="50"/></name> <operator pos:line="20" pos:column="51">*<pos:position pos:line="20" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call> <operator pos:line="20" pos:column="54">=<pos:position pos:line="20" pos:column="55"/></operator> <name pos:line="20" pos:column="56">arg<pos:position pos:line="20" pos:column="59"/></name></expr>;<pos:position pos:line="20" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></while>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="24" pos:column="5">*<pos:position pos:line="24" pos:column="6"/></operator><name pos:line="24" pos:column="6">parsed_require_line<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">=<pos:position pos:line="24" pos:column="27"/></operator> <name pos:line="24" pos:column="28">func<pos:position pos:line="24" pos:column="32"/></name></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">NULL<pos:position pos:line="25" pos:column="16"/></name></expr>;<pos:position pos:line="25" pos:column="17"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

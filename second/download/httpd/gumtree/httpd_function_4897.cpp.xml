<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4897.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">stapling_cb<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">SSL<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">ssl<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">void<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">arg<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">conn_rec<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">conn<pos:position pos:line="3" pos:column="19"/></name>      <init pos:line="3" pos:column="25">= <expr><operator pos:line="3" pos:column="27">(<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="28">conn_rec<pos:position pos:line="3" pos:column="36"/></name> <operator pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></operator><operator pos:line="3" pos:column="38">)<pos:position pos:line="3" pos:column="39"/></operator><call><name pos:line="3" pos:column="39">SSL_get_app_data<pos:position pos:line="3" pos:column="55"/></name><argument_list pos:line="3" pos:column="55">(<argument><expr><name pos:line="3" pos:column="56">ssl<pos:position pos:line="3" pos:column="59"/></name></expr></argument>)<pos:position pos:line="3" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="61"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">server_rec<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">s<pos:position pos:line="4" pos:column="18"/></name>       <init pos:line="4" pos:column="25">= <expr><call><name pos:line="4" pos:column="27">mySrvFromConn<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><name pos:line="4" pos:column="41">conn<pos:position pos:line="4" pos:column="45"/></name></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSLSrvConfigRec<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">sc<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><call><name pos:line="5" pos:column="27">mySrvConfig<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">s<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SSLConnRec<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">sslconn<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><call><name pos:line="6" pos:column="27">myConnConfig<pos:position pos:line="6" pos:column="39"/></name><argument_list pos:line="6" pos:column="39">(<argument><expr><name pos:line="6" pos:column="40">conn<pos:position pos:line="6" pos:column="44"/></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">modssl_ctx_t<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">mctx<pos:position pos:line="7" pos:column="23"/></name>  <init pos:line="7" pos:column="25">= <expr><call><name pos:line="7" pos:column="27">myCtxConfig<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><name pos:line="7" pos:column="39">sslconn<pos:position pos:line="7" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="48">sc<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">certinfo<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">cinf<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><name pos:line="8" pos:column="22">NULL<pos:position pos:line="8" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">OCSP_RESPONSE<pos:position pos:line="9" pos:column="18"/></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">rsp<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><name pos:line="9" pos:column="26">NULL<pos:position pos:line="9" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">rv<pos:position pos:line="10" pos:column="11"/></name></decl>;<pos:position pos:line="10" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">BOOL<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">ok<pos:position pos:line="11" pos:column="12"/></name></decl>;<pos:position pos:line="11" pos:column="13"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">sc<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">server<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">stapling_enabled<pos:position pos:line="13" pos:column="37"/></name></name> <operator pos:line="13" pos:column="38">!=<pos:position pos:line="13" pos:column="40"/></operator> <name pos:line="13" pos:column="41">TRUE<pos:position pos:line="13" pos:column="45"/></name></expr>)<pos:position pos:line="13" pos:column="46"/></condition><then pos:line="13" pos:column="46"> <block pos:line="13" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">ap_log_error<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">APLOG_MARK<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">APLOG_DEBUG<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="47">0<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="50">s<pos:position pos:line="14" pos:column="51"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="15" pos:column="22">"stapling_cb: OCSP Stapling disabled"<pos:position pos:line="15" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="61"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">SSL_TLSEXT_ERR_NOACK<pos:position pos:line="16" pos:column="36"/></name></expr>;<pos:position pos:line="16" pos:column="37"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ap_log_error<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">APLOG_MARK<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="30">APLOG_DEBUG<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="43">0<pos:position pos:line="19" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">s<pos:position pos:line="19" pos:column="47"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="20" pos:column="18">"stapling_cb: OCSP Stapling callback called"<pos:position pos:line="20" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">cinf<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <call><name pos:line="22" pos:column="12">stapling_get_cert_info<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">s<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">mctx<pos:position pos:line="22" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="44">ssl<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">cinf<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">==<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">NULL<pos:position pos:line="23" pos:column="21"/></name></expr>)<pos:position pos:line="23" pos:column="22"/></condition><then pos:line="23" pos:column="22"> <block pos:line="23" pos:column="23">{
        <return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">SSL_TLSEXT_ERR_NOACK<pos:position pos:line="24" pos:column="36"/></name></expr>;<pos:position pos:line="24" pos:column="37"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">ap_log_error<pos:position pos:line="27" pos:column="17"/></name><argument_list pos:line="27" pos:column="17">(<argument><expr><name pos:line="27" pos:column="18">APLOG_MARK<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="30">APLOG_DEBUG<pos:position pos:line="27" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="43">0<pos:position pos:line="27" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="46">s<pos:position pos:line="27" pos:column="47"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="28" pos:column="18">"stapling_cb: retrieved cached certificate data"<pos:position pos:line="28" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="68"/></expr_stmt>

    <comment type="block" pos:line="30" pos:column="5">/* Check to see if we already have a response for this certificate */</comment>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">stapling_mutex_on<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">s<pos:position pos:line="31" pos:column="24"/></name></expr></argument>)<pos:position pos:line="31" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name pos:line="33" pos:column="5">rv<pos:position pos:line="33" pos:column="7"/></name> <operator pos:line="33" pos:column="8">=<pos:position pos:line="33" pos:column="9"/></operator> <call><name pos:line="33" pos:column="10">stapling_get_cached_response<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><name pos:line="33" pos:column="39">s<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="42">&amp;<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="43">rsp<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="48">&amp;<pos:position pos:line="33" pos:column="53"/></operator><name pos:line="33" pos:column="49">ok<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="53">cinf<pos:position pos:line="33" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="59">conn<pos:position pos:line="33" pos:column="63"/></name><operator pos:line="33" pos:column="63">-&gt;<pos:position pos:line="33" pos:column="68"/></operator><name pos:line="33" pos:column="65">pool<pos:position pos:line="33" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="71"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">rv<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">==<pos:position pos:line="34" pos:column="14"/></operator> <name pos:line="34" pos:column="15">FALSE<pos:position pos:line="34" pos:column="20"/></name></expr>)<pos:position pos:line="34" pos:column="21"/></condition><then pos:line="34" pos:column="21"> <block pos:line="34" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">stapling_mutex_off<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">s<pos:position pos:line="35" pos:column="29"/></name></expr></argument>)<pos:position pos:line="35" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
        <return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">SSL_TLSEXT_ERR_ALERT_FATAL<pos:position pos:line="36" pos:column="42"/></name></expr>;<pos:position pos:line="36" pos:column="43"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">rsp<pos:position pos:line="39" pos:column="12"/></name></expr>)<pos:position pos:line="39" pos:column="13"/></condition><then pos:line="39" pos:column="13"> <block pos:line="39" pos:column="14">{
        <comment type="block" pos:line="40" pos:column="9">/* see if response is acceptable */</comment>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">ap_log_error<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><name pos:line="41" pos:column="22">APLOG_MARK<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="34">APLOG_DEBUG<pos:position pos:line="41" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="47">0<pos:position pos:line="41" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">s<pos:position pos:line="41" pos:column="51"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="42" pos:column="22">"stapling_cb: retrieved cached response"<pos:position pos:line="42" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name pos:line="43" pos:column="9">rv<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <call><name pos:line="43" pos:column="14">stapling_check_response<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><name pos:line="43" pos:column="38">s<pos:position pos:line="43" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="41">mctx<pos:position pos:line="43" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="47">cinf<pos:position pos:line="43" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="53">rsp<pos:position pos:line="43" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="58">NULL<pos:position pos:line="43" pos:column="62"/></name></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="64"/></expr_stmt>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">rv<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">==<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">SSL_TLSEXT_ERR_ALERT_FATAL<pos:position pos:line="44" pos:column="45"/></name></expr>)<pos:position pos:line="44" pos:column="46"/></condition><then pos:line="44" pos:column="46"> <block pos:line="44" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">OCSP_RESPONSE_free<pos:position pos:line="45" pos:column="31"/></name><argument_list pos:line="45" pos:column="31">(<argument><expr><name pos:line="45" pos:column="32">rsp<pos:position pos:line="45" pos:column="35"/></name></expr></argument>)<pos:position pos:line="45" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">stapling_mutex_off<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><name pos:line="46" pos:column="32">s<pos:position pos:line="46" pos:column="33"/></name></expr></argument>)<pos:position pos:line="46" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>
            <return pos:line="47" pos:column="13">return <expr><name pos:line="47" pos:column="20">SSL_TLSEXT_ERR_ALERT_FATAL<pos:position pos:line="47" pos:column="46"/></name></expr>;<pos:position pos:line="47" pos:column="47"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then>
        <elseif pos:line="49" pos:column="9">else <if pos:line="49" pos:column="14">if <condition pos:line="49" pos:column="17">(<expr><name pos:line="49" pos:column="18">rv<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">==<pos:position pos:line="49" pos:column="23"/></operator> <name pos:line="49" pos:column="24">SSL_TLSEXT_ERR_NOACK<pos:position pos:line="49" pos:column="44"/></name></expr>)<pos:position pos:line="49" pos:column="45"/></condition><then pos:line="49" pos:column="45"> <block pos:line="49" pos:column="46">{
            <comment type="block" pos:line="50" pos:column="13">/* Error in response. If this error was not present when it was
             * stored (i.e. response no longer valid) then it can be
             * renewed straight away.
             *
             * If the error *was* present at the time it was stored then we
             * don't renew the response straight away we just wait for the
             * cached response to expire.
             */</comment>
            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><name pos:line="58" pos:column="17">ok<pos:position pos:line="58" pos:column="19"/></name></expr>)<pos:position pos:line="58" pos:column="20"/></condition><then pos:line="58" pos:column="20"> <block pos:line="58" pos:column="21">{
                <expr_stmt><expr><call><name pos:line="59" pos:column="17">OCSP_RESPONSE_free<pos:position pos:line="59" pos:column="35"/></name><argument_list pos:line="59" pos:column="35">(<argument><expr><name pos:line="59" pos:column="36">rsp<pos:position pos:line="59" pos:column="39"/></name></expr></argument>)<pos:position pos:line="59" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="60" pos:column="17">rsp<pos:position pos:line="60" pos:column="20"/></name> <operator pos:line="60" pos:column="21">=<pos:position pos:line="60" pos:column="22"/></operator> <name pos:line="60" pos:column="23">NULL<pos:position pos:line="60" pos:column="27"/></name></expr>;<pos:position pos:line="60" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="61" pos:column="14"/></block></then>
            <elseif pos:line="62" pos:column="13">else <if pos:line="62" pos:column="18">if <condition pos:line="62" pos:column="21">(<expr><operator pos:line="62" pos:column="22">!<pos:position pos:line="62" pos:column="23"/></operator><name><name pos:line="62" pos:column="23">mctx<pos:position pos:line="62" pos:column="27"/></name><operator pos:line="62" pos:column="27">-&gt;<pos:position pos:line="62" pos:column="32"/></operator><name pos:line="62" pos:column="29">stapling_return_errors<pos:position pos:line="62" pos:column="51"/></name></name></expr>)<pos:position pos:line="62" pos:column="52"/></condition><then pos:line="62" pos:column="52"> <block pos:line="62" pos:column="53">{
                <expr_stmt><expr><call><name pos:line="63" pos:column="17">OCSP_RESPONSE_free<pos:position pos:line="63" pos:column="35"/></name><argument_list pos:line="63" pos:column="35">(<argument><expr><name pos:line="63" pos:column="36">rsp<pos:position pos:line="63" pos:column="39"/></name></expr></argument>)<pos:position pos:line="63" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">stapling_mutex_off<pos:position pos:line="64" pos:column="35"/></name><argument_list pos:line="64" pos:column="35">(<argument><expr><name pos:line="64" pos:column="36">s<pos:position pos:line="64" pos:column="37"/></name></expr></argument>)<pos:position pos:line="64" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="39"/></expr_stmt>
                <return pos:line="65" pos:column="17">return <expr><name pos:line="65" pos:column="24">SSL_TLSEXT_ERR_NOACK<pos:position pos:line="65" pos:column="44"/></name></expr>;<pos:position pos:line="65" pos:column="45"/></return>
            }<pos:position pos:line="66" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>

    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name pos:line="70" pos:column="9">rsp<pos:position pos:line="70" pos:column="12"/></name> <operator pos:line="70" pos:column="13">==<pos:position pos:line="70" pos:column="15"/></operator> <name pos:line="70" pos:column="16">NULL<pos:position pos:line="70" pos:column="20"/></name></expr>)<pos:position pos:line="70" pos:column="21"/></condition><then pos:line="70" pos:column="21"> <block pos:line="70" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">ap_log_error<pos:position pos:line="71" pos:column="21"/></name><argument_list pos:line="71" pos:column="21">(<argument><expr><name pos:line="71" pos:column="22">APLOG_MARK<pos:position pos:line="71" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="34">APLOG_DEBUG<pos:position pos:line="71" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="47">0<pos:position pos:line="71" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="50">s<pos:position pos:line="71" pos:column="51"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="72" pos:column="22">"stapling_cb: renewing cached response"<pos:position pos:line="72" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><name pos:line="73" pos:column="9">rv<pos:position pos:line="73" pos:column="11"/></name> <operator pos:line="73" pos:column="12">=<pos:position pos:line="73" pos:column="13"/></operator> <call><name pos:line="73" pos:column="14">stapling_renew_response<pos:position pos:line="73" pos:column="37"/></name><argument_list pos:line="73" pos:column="37">(<argument><expr><name pos:line="73" pos:column="38">s<pos:position pos:line="73" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="41">mctx<pos:position pos:line="73" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="47">ssl<pos:position pos:line="73" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="52">cinf<pos:position pos:line="73" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="58">&amp;<pos:position pos:line="73" pos:column="63"/></operator><name pos:line="73" pos:column="59">rsp<pos:position pos:line="73" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="64">conn<pos:position pos:line="73" pos:column="68"/></name><operator pos:line="73" pos:column="68">-&gt;<pos:position pos:line="73" pos:column="73"/></operator><name pos:line="73" pos:column="70">pool<pos:position pos:line="73" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="76"/></expr_stmt>

        <if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">rv<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">==<pos:position pos:line="75" pos:column="18"/></operator> <name pos:line="75" pos:column="19">FALSE<pos:position pos:line="75" pos:column="24"/></name></expr>)<pos:position pos:line="75" pos:column="25"/></condition><then pos:line="75" pos:column="25"> <block pos:line="75" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">stapling_mutex_off<pos:position pos:line="76" pos:column="31"/></name><argument_list pos:line="76" pos:column="31">(<argument><expr><name pos:line="76" pos:column="32">s<pos:position pos:line="76" pos:column="33"/></name></expr></argument>)<pos:position pos:line="76" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="77" pos:column="13">ap_log_error<pos:position pos:line="77" pos:column="25"/></name><argument_list pos:line="77" pos:column="25">(<argument><expr><name pos:line="77" pos:column="26">APLOG_MARK<pos:position pos:line="77" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="38">APLOG_ERR<pos:position pos:line="77" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="49">0<pos:position pos:line="77" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="52">s<pos:position pos:line="77" pos:column="53"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="78" pos:column="26">"stapling_cb: fatal error"<pos:position pos:line="78" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="54"/></expr_stmt>
            <return pos:line="79" pos:column="13">return <expr><name pos:line="79" pos:column="20">SSL_TLSEXT_ERR_ALERT_FATAL<pos:position pos:line="79" pos:column="46"/></name></expr>;<pos:position pos:line="79" pos:column="47"/></return>
        }<pos:position pos:line="80" pos:column="10"/></block></then></if>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">stapling_mutex_off<pos:position pos:line="82" pos:column="23"/></name><argument_list pos:line="82" pos:column="23">(<argument><expr><name pos:line="82" pos:column="24">s<pos:position pos:line="82" pos:column="25"/></name></expr></argument>)<pos:position pos:line="82" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="27"/></expr_stmt>

    <if pos:line="84" pos:column="5">if <condition pos:line="84" pos:column="8">(<expr><name pos:line="84" pos:column="9">rsp<pos:position pos:line="84" pos:column="12"/></name></expr>)<pos:position pos:line="84" pos:column="13"/></condition><then pos:line="84" pos:column="13"> <block pos:line="84" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="85" pos:column="9">ap_log_error<pos:position pos:line="85" pos:column="21"/></name><argument_list pos:line="85" pos:column="21">(<argument><expr><name pos:line="85" pos:column="22">APLOG_MARK<pos:position pos:line="85" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="34">APLOG_DEBUG<pos:position pos:line="85" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="47">0<pos:position pos:line="85" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="50">s<pos:position pos:line="85" pos:column="51"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="86" pos:column="22">"stapling_cb: setting response"<pos:position pos:line="86" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="55"/></expr_stmt>
        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><operator pos:line="87" pos:column="13">!<pos:position pos:line="87" pos:column="14"/></operator><call><name pos:line="87" pos:column="14">stapling_set_response<pos:position pos:line="87" pos:column="35"/></name><argument_list pos:line="87" pos:column="35">(<argument><expr><name pos:line="87" pos:column="36">ssl<pos:position pos:line="87" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="41">rsp<pos:position pos:line="87" pos:column="44"/></name></expr></argument>)<pos:position pos:line="87" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="46"/></condition><then pos:line="87" pos:column="46">
            <block type="pseudo"><return pos:line="88" pos:column="13">return <expr><name pos:line="88" pos:column="20">SSL_TLSEXT_ERR_ALERT_FATAL<pos:position pos:line="88" pos:column="46"/></name></expr>;<pos:position pos:line="88" pos:column="47"/></return></block></then></if>
        <return pos:line="89" pos:column="9">return <expr><name pos:line="89" pos:column="16">SSL_TLSEXT_ERR_OK<pos:position pos:line="89" pos:column="33"/></name></expr>;<pos:position pos:line="89" pos:column="34"/></return>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">ap_log_error<pos:position pos:line="91" pos:column="17"/></name><argument_list pos:line="91" pos:column="17">(<argument><expr><name pos:line="91" pos:column="18">APLOG_MARK<pos:position pos:line="91" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="30">APLOG_DEBUG<pos:position pos:line="91" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="43">0<pos:position pos:line="91" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="46">s<pos:position pos:line="91" pos:column="47"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="92" pos:column="18">"stapling_cb: no response available"<pos:position pos:line="92" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="56"/></expr_stmt>

    <return pos:line="94" pos:column="5">return <expr><name pos:line="94" pos:column="12">SSL_TLSEXT_ERR_NOACK<pos:position pos:line="94" pos:column="32"/></name></expr>;<pos:position pos:line="94" pos:column="33"/></return>

}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

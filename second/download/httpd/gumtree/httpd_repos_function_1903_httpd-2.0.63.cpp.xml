<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1903_httpd-2.0.63.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">APR_INLINE<pos:position pos:line="1" pos:column="18"/></name> <name pos:line="1" pos:column="19">void<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">do_double_reverse<pos:position pos:line="1" pos:column="41"/></name> <parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">conn_rec<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">conn<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_sockaddr_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">sa<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">conn<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">double_reverse<pos:position pos:line="6" pos:column="29"/></name></name></expr>)<pos:position pos:line="6" pos:column="30"/></condition><then pos:line="6" pos:column="30"> <block pos:line="6" pos:column="31">{
        <comment type="block" pos:line="7" pos:column="9">/* already done */</comment>
        <return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">conn<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">remote_host<pos:position pos:line="11" pos:column="26"/></name></name> <operator pos:line="11" pos:column="27">==<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">NULL<pos:position pos:line="11" pos:column="34"/></name> <operator pos:line="11" pos:column="35">||<pos:position pos:line="11" pos:column="37"/></operator> <name><name pos:line="11" pos:column="38">conn<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-&gt;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="44">remote_host<pos:position pos:line="11" pos:column="55"/></name><index pos:line="11" pos:column="55">[<expr><literal type="number" pos:line="11" pos:column="56">0<pos:position pos:line="11" pos:column="57"/></literal></expr>]<pos:position pos:line="11" pos:column="58"/></index></name> <operator pos:line="11" pos:column="59">==<pos:position pos:line="11" pos:column="61"/></operator> <literal type="char" pos:line="11" pos:column="62">'\0'<pos:position pos:line="11" pos:column="66"/></literal></expr>)<pos:position pos:line="11" pos:column="67"/></condition><then pos:line="11" pos:column="67"> <block pos:line="11" pos:column="68">{
        <comment type="block" pos:line="12" pos:column="9">/* single reverse failed, so don't bother */</comment>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">conn<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">double_reverse<pos:position pos:line="13" pos:column="29"/></name></name> <operator pos:line="13" pos:column="30">=<pos:position pos:line="13" pos:column="31"/></operator> <operator pos:line="13" pos:column="32">-<pos:position pos:line="13" pos:column="33"/></operator><literal type="number" pos:line="13" pos:column="33">1<pos:position pos:line="13" pos:column="34"/></literal></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">rv<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">apr_sockaddr_info_get<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><operator pos:line="17" pos:column="32">&amp;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="33">sa<pos:position pos:line="17" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="37">conn<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">-&gt;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="43">remote_host<pos:position pos:line="17" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="56">APR_UNSPEC<pos:position pos:line="17" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="68">0<pos:position pos:line="17" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="71">0<pos:position pos:line="17" pos:column="72"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="74">conn<pos:position pos:line="17" pos:column="78"/></name><operator pos:line="17" pos:column="78">-&gt;<pos:position pos:line="17" pos:column="83"/></operator><name pos:line="17" pos:column="80">pool<pos:position pos:line="17" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="86"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">rv<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">==<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">APR_SUCCESS<pos:position pos:line="18" pos:column="26"/></name></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27"> <block pos:line="18" pos:column="28">{
        <while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><name pos:line="19" pos:column="16">sa<pos:position pos:line="19" pos:column="18"/></name></expr>)<pos:position pos:line="19" pos:column="19"/></condition> <block pos:line="19" pos:column="20">{
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><call><name pos:line="20" pos:column="17">apr_sockaddr_equal<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">sa<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="40">conn<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">-&gt;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="46">remote_addr<pos:position pos:line="20" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="59"/></condition><then pos:line="20" pos:column="59"> <block pos:line="20" pos:column="60">{
                <expr_stmt><expr><name><name pos:line="21" pos:column="17">conn<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">double_reverse<pos:position pos:line="21" pos:column="37"/></name></name> <operator pos:line="21" pos:column="38">=<pos:position pos:line="21" pos:column="39"/></operator> <literal type="number" pos:line="21" pos:column="40">1<pos:position pos:line="21" pos:column="41"/></literal></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt>
                <return pos:line="22" pos:column="17">return;<pos:position pos:line="22" pos:column="24"/></return>
            }<pos:position pos:line="23" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="25" pos:column="13">sa<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <name><name pos:line="25" pos:column="18">sa<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">next<pos:position pos:line="25" pos:column="26"/></name></name></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></while>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="29" pos:column="5">conn<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">-&gt;<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="11">double_reverse<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <operator pos:line="29" pos:column="28">-<pos:position pos:line="29" pos:column="29"/></operator><literal type="number" pos:line="29" pos:column="29">1<pos:position pos:line="29" pos:column="30"/></literal></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2145_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">APR_INLINE<pos:position pos:line="1" pos:column="18"/></name> <specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">construct_host_header<pos:position pos:line="1" pos:column="52"/></name><parameter_list pos:line="1" pos:column="52">(<parameter><decl><type><name pos:line="1" pos:column="53">request_rec<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">r<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                                                    <parameter><decl><type><name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">is_v6literal<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">iovec<pos:position pos:line="4" pos:column="17"/></name></name></type> <name><name pos:line="4" pos:column="18">iov<pos:position pos:line="4" pos:column="21"/></name><index pos:line="4" pos:column="21">[<expr><literal type="number" pos:line="4" pos:column="22">5<pos:position pos:line="4" pos:column="23"/></literal></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">nvec<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <comment type="block" pos:line="6" pos:column="5">/*
     * We cannot use ap_get_server_name/port here, because we must
     * ignore UseCanonicalName/Port.
     */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">is_v6literal<pos:position pos:line="10" pos:column="21"/></name></expr>)<pos:position pos:line="10" pos:column="22"/></condition><then pos:line="10" pos:column="22"> <block pos:line="10" pos:column="23">{
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">iov<pos:position pos:line="11" pos:column="12"/></name><index pos:line="11" pos:column="12">[<expr><name pos:line="11" pos:column="13">nvec<pos:position pos:line="11" pos:column="17"/></name></expr>]<pos:position pos:line="11" pos:column="18"/></index></name><operator pos:line="11" pos:column="18">.<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">iov_base<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <literal type="string" pos:line="11" pos:column="30">"["<pos:position pos:line="11" pos:column="33"/></literal></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">iov<pos:position pos:line="12" pos:column="12"/></name><index pos:line="12" pos:column="12">[<expr><name pos:line="12" pos:column="13">nvec<pos:position pos:line="12" pos:column="17"/></name></expr>]<pos:position pos:line="12" pos:column="18"/></index></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">iov_len<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <literal type="number" pos:line="12" pos:column="29">1<pos:position pos:line="12" pos:column="30"/></literal></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="13" pos:column="9">nvec<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">++<pos:position pos:line="13" pos:column="15"/></operator></expr>;<pos:position pos:line="13" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">iov<pos:position pos:line="15" pos:column="8"/></name><index pos:line="15" pos:column="8">[<expr><name pos:line="15" pos:column="9">nvec<pos:position pos:line="15" pos:column="13"/></name></expr>]<pos:position pos:line="15" pos:column="14"/></index></name><operator pos:line="15" pos:column="14">.<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">iov_base<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <operator pos:line="15" pos:column="26">(<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">void<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">*<pos:position pos:line="15" pos:column="33"/></operator><operator pos:line="15" pos:column="33">)<pos:position pos:line="15" pos:column="34"/></operator><name><name pos:line="15" pos:column="34">r<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">hostname<pos:position pos:line="15" pos:column="45"/></name></name></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">iov<pos:position pos:line="16" pos:column="8"/></name><index pos:line="16" pos:column="8">[<expr><name pos:line="16" pos:column="9">nvec<pos:position pos:line="16" pos:column="13"/></name></expr>]<pos:position pos:line="16" pos:column="14"/></index></name><operator pos:line="16" pos:column="14">.<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">iov_len<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <call><name pos:line="16" pos:column="25">strlen<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name><name pos:line="16" pos:column="32">r<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">-&gt;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="35">hostname<pos:position pos:line="16" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">nvec<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">++<pos:position pos:line="17" pos:column="11"/></operator></expr>;<pos:position pos:line="17" pos:column="12"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">is_v6literal<pos:position pos:line="18" pos:column="21"/></name></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22"> <block pos:line="18" pos:column="23">{
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">iov<pos:position pos:line="19" pos:column="12"/></name><index pos:line="19" pos:column="12">[<expr><name pos:line="19" pos:column="13">nvec<pos:position pos:line="19" pos:column="17"/></name></expr>]<pos:position pos:line="19" pos:column="18"/></index></name><operator pos:line="19" pos:column="18">.<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">iov_base<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <literal type="string" pos:line="19" pos:column="30">"]"<pos:position pos:line="19" pos:column="33"/></literal></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">iov<pos:position pos:line="20" pos:column="12"/></name><index pos:line="20" pos:column="12">[<expr><name pos:line="20" pos:column="13">nvec<pos:position pos:line="20" pos:column="17"/></name></expr>]<pos:position pos:line="20" pos:column="18"/></index></name><operator pos:line="20" pos:column="18">.<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="19">iov_len<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <literal type="number" pos:line="20" pos:column="29">1<pos:position pos:line="20" pos:column="30"/></literal></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">nvec<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">++<pos:position pos:line="21" pos:column="15"/></operator></expr>;<pos:position pos:line="21" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">r<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">parsed_uri<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">.<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">port_str<pos:position pos:line="23" pos:column="31"/></name></name></expr>)<pos:position pos:line="23" pos:column="32"/></condition><then pos:line="23" pos:column="32"> <block pos:line="23" pos:column="33">{
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">iov<pos:position pos:line="24" pos:column="12"/></name><index pos:line="24" pos:column="12">[<expr><name pos:line="24" pos:column="13">nvec<pos:position pos:line="24" pos:column="17"/></name></expr>]<pos:position pos:line="24" pos:column="18"/></index></name><operator pos:line="24" pos:column="18">.<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="19">iov_base<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <literal type="string" pos:line="24" pos:column="30">":"<pos:position pos:line="24" pos:column="33"/></literal></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">iov<pos:position pos:line="25" pos:column="12"/></name><index pos:line="25" pos:column="12">[<expr><name pos:line="25" pos:column="13">nvec<pos:position pos:line="25" pos:column="17"/></name></expr>]<pos:position pos:line="25" pos:column="18"/></index></name><operator pos:line="25" pos:column="18">.<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">iov_len<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <literal type="number" pos:line="25" pos:column="29">1<pos:position pos:line="25" pos:column="30"/></literal></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">nvec<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">++<pos:position pos:line="26" pos:column="15"/></operator></expr>;<pos:position pos:line="26" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">iov<pos:position pos:line="27" pos:column="12"/></name><index pos:line="27" pos:column="12">[<expr><name pos:line="27" pos:column="13">nvec<pos:position pos:line="27" pos:column="17"/></name></expr>]<pos:position pos:line="27" pos:column="18"/></index></name><operator pos:line="27" pos:column="18">.<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">iov_base<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <name><name pos:line="27" pos:column="30">r<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">-&gt;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="33">parsed_uri<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">.<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="44">port_str<pos:position pos:line="27" pos:column="52"/></name></name></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">iov<pos:position pos:line="28" pos:column="12"/></name><index pos:line="28" pos:column="12">[<expr><name pos:line="28" pos:column="13">nvec<pos:position pos:line="28" pos:column="17"/></name></expr>]<pos:position pos:line="28" pos:column="18"/></index></name><operator pos:line="28" pos:column="18">.<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">iov_len<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <call><name pos:line="28" pos:column="29">strlen<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><name><name pos:line="28" pos:column="36">r<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">-&gt;<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="39">parsed_uri<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">.<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="50">port_str<pos:position pos:line="28" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">nvec<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">++<pos:position pos:line="29" pos:column="15"/></operator></expr>;<pos:position pos:line="29" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
    <return pos:line="31" pos:column="5">return <expr><call><name pos:line="31" pos:column="12">apr_pstrcatv<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name><name pos:line="31" pos:column="25">r<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">-&gt;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="28">pool<pos:position pos:line="31" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">iov<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="39">nvec<pos:position pos:line="31" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="45">NULL<pos:position pos:line="31" pos:column="49"/></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_89_git-2.8.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">needs_rfc2047_encoding<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">line<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">len<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
				  <parameter><decl><type><name><name pos:line="2" pos:column="35">enum<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">rfc2047_type<pos:position pos:line="2" pos:column="52"/></name></name></type> <name pos:line="2" pos:column="53">type<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="25">len<pos:position pos:line="6" pos:column="28"/></name></expr>;<pos:position pos:line="6" pos:column="29"/></condition> <incr><expr><name pos:line="6" pos:column="30">i<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">++<pos:position pos:line="6" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="34"/></control> <block pos:line="6" pos:column="35">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">ch<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><name><name pos:line="7" pos:column="26">line<pos:position pos:line="7" pos:column="30"/></name><index pos:line="7" pos:column="30">[<expr><name pos:line="7" pos:column="31">i<pos:position pos:line="7" pos:column="32"/></name></expr>]<pos:position pos:line="7" pos:column="33"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><call><name pos:line="8" pos:column="21">non_ascii<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">ch<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call> <operator pos:line="8" pos:column="35">||<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="38">ch<pos:position pos:line="8" pos:column="40"/></name> <operator pos:line="8" pos:column="41">==<pos:position pos:line="8" pos:column="43"/></operator> <literal type="char" pos:line="8" pos:column="44">'\n'<pos:position pos:line="8" pos:column="48"/></literal></expr>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49">
			<block type="pseudo"><return pos:line="9" pos:column="25">return <expr><literal type="number" pos:line="9" pos:column="32">1<pos:position pos:line="9" pos:column="33"/></literal></expr>;<pos:position pos:line="9" pos:column="34"/></return></block></then></if>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">(<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">i<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">+<pos:position pos:line="10" pos:column="25"/></operator> <literal type="number" pos:line="10" pos:column="26">1<pos:position pos:line="10" pos:column="27"/></literal> <operator pos:line="10" pos:column="28">&lt;<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="30">len<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">)<pos:position pos:line="10" pos:column="34"/></operator> <operator pos:line="10" pos:column="35">&amp;&amp;<pos:position pos:line="10" pos:column="45"/></operator> <operator pos:line="10" pos:column="38">(<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="39">ch<pos:position pos:line="10" pos:column="41"/></name> <operator pos:line="10" pos:column="42">==<pos:position pos:line="10" pos:column="44"/></operator> <literal type="char" pos:line="10" pos:column="45">'='<pos:position pos:line="10" pos:column="48"/></literal> <operator pos:line="10" pos:column="49">&amp;&amp;<pos:position pos:line="10" pos:column="59"/></operator> <name><name pos:line="10" pos:column="52">line<pos:position pos:line="10" pos:column="56"/></name><index pos:line="10" pos:column="56">[<expr><name pos:line="10" pos:column="57">i<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">+<pos:position pos:line="10" pos:column="59"/></operator><literal type="number" pos:line="10" pos:column="59">1<pos:position pos:line="10" pos:column="60"/></literal></expr>]<pos:position pos:line="10" pos:column="61"/></index></name> <operator pos:line="10" pos:column="62">==<pos:position pos:line="10" pos:column="64"/></operator> <literal type="char" pos:line="10" pos:column="65">'?'<pos:position pos:line="10" pos:column="68"/></literal><operator pos:line="10" pos:column="68">)<pos:position pos:line="10" pos:column="69"/></operator></expr>)<pos:position pos:line="10" pos:column="70"/></condition><then pos:line="10" pos:column="70">
			<block type="pseudo"><return pos:line="11" pos:column="25">return <expr><literal type="number" pos:line="11" pos:column="32">1<pos:position pos:line="11" pos:column="33"/></literal></expr>;<pos:position pos:line="11" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="12" pos:column="10"/></block></for>

	<return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

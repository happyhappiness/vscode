<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2659.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">option_parse_stage<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">option<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">opt<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">arg<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">int<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">unset<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><call><name pos:line="4" pos:column="14">strcmp<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">arg<pos:position pos:line="4" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="26">"all"<pos:position pos:line="4" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="33"/></condition><then pos:line="4" pos:column="33"> <block pos:line="4" pos:column="34">{
		<expr_stmt><expr><name pos:line="5" pos:column="17">to_tempfile<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">=<pos:position pos:line="5" pos:column="30"/></operator> <literal type="number" pos:line="5" pos:column="31">1<pos:position pos:line="5" pos:column="32"/></literal></expr>;<pos:position pos:line="5" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="6" pos:column="17">checkout_stage<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">=<pos:position pos:line="6" pos:column="33"/></operator> <name pos:line="6" pos:column="34">CHECKOUT_ALL<pos:position pos:line="6" pos:column="46"/></name></expr>;<pos:position pos:line="6" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="7" pos:column="10"/></block></then> <else pos:line="7" pos:column="11">else <block pos:line="7" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">ch<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><name><name pos:line="8" pos:column="26">arg<pos:position pos:line="8" pos:column="29"/></name><index pos:line="8" pos:column="29">[<expr><literal type="number" pos:line="8" pos:column="30">0<pos:position pos:line="8" pos:column="31"/></literal></expr>]<pos:position pos:line="8" pos:column="32"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><literal type="char" pos:line="9" pos:column="21">'1'<pos:position pos:line="9" pos:column="24"/></literal> <operator pos:line="9" pos:column="25">&lt;=<pos:position pos:line="9" pos:column="30"/></operator> <name pos:line="9" pos:column="28">ch<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">&amp;&amp;<pos:position pos:line="9" pos:column="41"/></operator> <name pos:line="9" pos:column="34">ch<pos:position pos:line="9" pos:column="36"/></name> <operator pos:line="9" pos:column="37">&lt;=<pos:position pos:line="9" pos:column="42"/></operator> <literal type="char" pos:line="9" pos:column="40">'3'<pos:position pos:line="9" pos:column="43"/></literal></expr>)<pos:position pos:line="9" pos:column="44"/></condition><then pos:line="9" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="25">checkout_stage<pos:position pos:line="10" pos:column="39"/></name> <operator pos:line="10" pos:column="40">=<pos:position pos:line="10" pos:column="41"/></operator> <name><name pos:line="10" pos:column="42">arg<pos:position pos:line="10" pos:column="45"/></name><index pos:line="10" pos:column="45">[<expr><literal type="number" pos:line="10" pos:column="46">0<pos:position pos:line="10" pos:column="47"/></literal></expr>]<pos:position pos:line="10" pos:column="48"/></index></name> <operator pos:line="10" pos:column="49">-<pos:position pos:line="10" pos:column="50"/></operator> <literal type="char" pos:line="10" pos:column="51">'0'<pos:position pos:line="10" pos:column="54"/></literal></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt></block></then>
		<else pos:line="11" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">die<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><literal type="string" pos:line="12" pos:column="29">"stage should be between 1 and 3 or all"<pos:position pos:line="12" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt></block></else></if>
	}<pos:position pos:line="13" pos:column="10"/></block></else></if>
	<return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

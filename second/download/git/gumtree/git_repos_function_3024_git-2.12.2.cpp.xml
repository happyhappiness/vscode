<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3024_git-2.12.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">verify_clean_subdirectory<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name><name pos:line="1" pos:column="44">struct<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">cache_entry<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">ce<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
				     <parameter><decl><type><name><name pos:line="2" pos:column="38">enum<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">unpack_trees_error_types<pos:position pos:line="2" pos:column="67"/></name></name></type> <name pos:line="2" pos:column="68">error_type<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>,
				     <parameter><decl><type><name><name pos:line="3" pos:column="38">struct<pos:position pos:line="3" pos:column="44"/></name> <name pos:line="3" pos:column="45">unpack_trees_options<pos:position pos:line="3" pos:column="65"/></name></name> <modifier pos:line="3" pos:column="66">*<pos:position pos:line="3" pos:column="67"/></modifier></type><name pos:line="3" pos:column="67">o<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="69"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<comment type="block" pos:line="5" pos:column="9">/*
	 * we are about to extract "ce-&gt;name"; we would not want to lose
	 * anything in the existing directory there.
	 */</comment>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">namelen<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">i<pos:position pos:line="10" pos:column="14"/></name></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">dir_struct<pos:position pos:line="11" pos:column="26"/></name></name></type> <name pos:line="11" pos:column="27">d<pos:position pos:line="11" pos:column="28"/></name></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">pathbuf<pos:position pos:line="12" pos:column="22"/></name></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">cnt<pos:position pos:line="13" pos:column="16"/></name> <init pos:line="13" pos:column="17">= <expr><literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">unsigned<pos:position pos:line="14" pos:column="17"/></name> <name pos:line="14" pos:column="18">char<pos:position pos:line="14" pos:column="22"/></name></type> <name><name pos:line="14" pos:column="23">sha1<pos:position pos:line="14" pos:column="27"/></name><index pos:line="14" pos:column="27">[<expr><literal type="number" pos:line="14" pos:column="28">20<pos:position pos:line="14" pos:column="30"/></literal></expr>]<pos:position pos:line="14" pos:column="31"/></index></name></decl>;<pos:position pos:line="14" pos:column="32"/></decl_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">S_ISGITLINK<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name><name pos:line="16" pos:column="25">ce<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">ce_mode<pos:position pos:line="16" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call> <operator pos:line="16" pos:column="38">&amp;&amp;<pos:position pos:line="16" pos:column="48"/></operator>
	    <call><name pos:line="17" pos:column="13">resolve_gitlink_ref<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name><name pos:line="17" pos:column="33">ce<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">name<pos:position pos:line="17" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="43">"HEAD"<pos:position pos:line="17" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">sha1<pos:position pos:line="17" pos:column="55"/></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call> <operator pos:line="17" pos:column="57">==<pos:position pos:line="17" pos:column="59"/></operator> <literal type="number" pos:line="17" pos:column="60">0<pos:position pos:line="17" pos:column="61"/></literal></expr>)<pos:position pos:line="17" pos:column="62"/></condition><then pos:line="17" pos:column="62"> <block pos:line="17" pos:column="63">{
		<comment type="block" pos:line="18" pos:column="17">/* If we are not going to update the submodule, then
		 * we don't care.
		 */</comment>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><operator pos:line="21" pos:column="21">!<pos:position pos:line="21" pos:column="22"/></operator><call><name pos:line="21" pos:column="22">hashcmp<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">sha1<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="36">ce<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">-&gt;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="40">oid<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">.<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="44">hash<pos:position pos:line="21" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="50"/></condition><then pos:line="21" pos:column="50">
			<block type="pseudo"><return pos:line="22" pos:column="25">return <expr><literal type="number" pos:line="22" pos:column="32">0<pos:position pos:line="22" pos:column="33"/></literal></expr>;<pos:position pos:line="22" pos:column="34"/></return></block></then></if>
		<return pos:line="23" pos:column="17">return <expr><call><name pos:line="23" pos:column="24">verify_clean_submodule<pos:position pos:line="23" pos:column="46"/></name><argument_list pos:line="23" pos:column="46">(<argument><expr><name pos:line="23" pos:column="47">ce<pos:position pos:line="23" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="51">error_type<pos:position pos:line="23" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="63">o<pos:position pos:line="23" pos:column="64"/></name></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="66"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="26" pos:column="9">/*
	 * First let's make sure we do not have a local modification
	 * in that directory.
	 */</comment>
	<expr_stmt><expr><name pos:line="30" pos:column="9">namelen<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <call><name pos:line="30" pos:column="19">ce_namelen<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">ce<pos:position pos:line="30" pos:column="32"/></name></expr></argument>)<pos:position pos:line="30" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>
	<for pos:line="31" pos:column="9">for <control pos:line="31" pos:column="13">(<init><expr><name pos:line="31" pos:column="14">i<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <call><name pos:line="31" pos:column="18">locate_in_src_index<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">ce<pos:position pos:line="31" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="42">o<pos:position pos:line="31" pos:column="43"/></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="45"/></init>
	     <condition><expr><name pos:line="32" pos:column="14">i<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">&lt;<pos:position pos:line="32" pos:column="20"/></operator> <name><name pos:line="32" pos:column="18">o<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">-&gt;<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="21">src_index<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">-&gt;<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="32">cache_nr<pos:position pos:line="32" pos:column="40"/></name></name></expr>;<pos:position pos:line="32" pos:column="41"/></condition>
	     <incr><expr><name pos:line="33" pos:column="14">i<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">++<pos:position pos:line="33" pos:column="17"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="18"/></control> <block pos:line="33" pos:column="19">{
		<decl_stmt><decl><type><name><name pos:line="34" pos:column="17">struct<pos:position pos:line="34" pos:column="23"/></name> <name pos:line="34" pos:column="24">cache_entry<pos:position pos:line="34" pos:column="35"/></name></name> <modifier pos:line="34" pos:column="36">*<pos:position pos:line="34" pos:column="37"/></modifier></type><name pos:line="34" pos:column="37">ce2<pos:position pos:line="34" pos:column="40"/></name> <init pos:line="34" pos:column="41">= <expr><name><name pos:line="34" pos:column="43">o<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">-&gt;<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="46">src_index<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">-&gt;<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="57">cache<pos:position pos:line="34" pos:column="62"/></name><index pos:line="34" pos:column="62">[<expr><name pos:line="34" pos:column="63">i<pos:position pos:line="34" pos:column="64"/></name></expr>]<pos:position pos:line="34" pos:column="65"/></index></name></expr></init></decl>;<pos:position pos:line="34" pos:column="66"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">int<pos:position pos:line="35" pos:column="20"/></name></type> <name pos:line="35" pos:column="21">len<pos:position pos:line="35" pos:column="24"/></name> <init pos:line="35" pos:column="25">= <expr><call><name pos:line="35" pos:column="27">ce_namelen<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">ce2<pos:position pos:line="35" pos:column="41"/></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="43"/></decl_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">len<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">&lt;<pos:position pos:line="36" pos:column="29"/></operator> <name pos:line="36" pos:column="27">namelen<pos:position pos:line="36" pos:column="34"/></name> <operator pos:line="36" pos:column="35">||<pos:position pos:line="36" pos:column="37"/></operator>
		    <call><name pos:line="37" pos:column="21">strncmp<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><name><name pos:line="37" pos:column="29">ce<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">-&gt;<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="33">name<pos:position pos:line="37" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="39">ce2<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">-&gt;<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="44">name<pos:position pos:line="37" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="50">namelen<pos:position pos:line="37" pos:column="57"/></name></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></call> <operator pos:line="37" pos:column="59">||<pos:position pos:line="37" pos:column="61"/></operator>
		    <name><name pos:line="38" pos:column="21">ce2<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">name<pos:position pos:line="38" pos:column="30"/></name><index pos:line="38" pos:column="30">[<expr><name pos:line="38" pos:column="31">namelen<pos:position pos:line="38" pos:column="38"/></name></expr>]<pos:position pos:line="38" pos:column="39"/></index></name> <operator pos:line="38" pos:column="40">!=<pos:position pos:line="38" pos:column="42"/></operator> <literal type="char" pos:line="38" pos:column="43">'/'<pos:position pos:line="38" pos:column="46"/></literal></expr>)<pos:position pos:line="38" pos:column="47"/></condition><then pos:line="38" pos:column="47">
			<block type="pseudo"><break pos:line="39" pos:column="25">break;<pos:position pos:line="39" pos:column="31"/></break></block></then></if>
		<comment type="block" pos:line="40" pos:column="17">/*
		 * ce2-&gt;name is an entry in the subdirectory to be
		 * removed.
		 */</comment>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><operator pos:line="44" pos:column="21">!<pos:position pos:line="44" pos:column="22"/></operator><call><name pos:line="44" pos:column="22">ce_stage<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">ce2<pos:position pos:line="44" pos:column="34"/></name></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="36"/></condition><then pos:line="44" pos:column="36"> <block pos:line="44" pos:column="37">{
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><call><name pos:line="45" pos:column="29">verify_uptodate<pos:position pos:line="45" pos:column="44"/></name><argument_list pos:line="45" pos:column="44">(<argument><expr><name pos:line="45" pos:column="45">ce2<pos:position pos:line="45" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="50">o<pos:position pos:line="45" pos:column="51"/></name></expr></argument>)<pos:position pos:line="45" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="53"/></condition><then pos:line="45" pos:column="53">
				<block type="pseudo"><return pos:line="46" pos:column="33">return <expr><operator pos:line="46" pos:column="40">-<pos:position pos:line="46" pos:column="41"/></operator><literal type="number" pos:line="46" pos:column="41">1<pos:position pos:line="46" pos:column="42"/></literal></expr>;<pos:position pos:line="46" pos:column="43"/></return></block></then></if>
			<expr_stmt><expr><call><name pos:line="47" pos:column="25">add_entry<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><name pos:line="47" pos:column="35">o<pos:position pos:line="47" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="38">ce2<pos:position pos:line="47" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="43">CE_REMOVE<pos:position pos:line="47" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="54">0<pos:position pos:line="47" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">mark_ce_used<pos:position pos:line="48" pos:column="37"/></name><argument_list pos:line="48" pos:column="37">(<argument><expr><name pos:line="48" pos:column="38">ce2<pos:position pos:line="48" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="43">o<pos:position pos:line="48" pos:column="44"/></name></expr></argument>)<pos:position pos:line="48" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="49" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="50" pos:column="17">cnt<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">++<pos:position pos:line="50" pos:column="22"/></operator></expr>;<pos:position pos:line="50" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></for>

	<comment type="block" pos:line="53" pos:column="9">/*
	 * Then we need to make sure that we do not lose a locally
	 * present file that is not ignored.
	 */</comment>
	<expr_stmt><expr><name pos:line="57" pos:column="9">pathbuf<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <call><name pos:line="57" pos:column="19">xstrfmt<pos:position pos:line="57" pos:column="26"/></name><argument_list pos:line="57" pos:column="26">(<argument><expr><literal type="string" pos:line="57" pos:column="27">"%.*s/"<pos:position pos:line="57" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="36">namelen<pos:position pos:line="57" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="45">ce<pos:position pos:line="57" pos:column="47"/></name><operator pos:line="57" pos:column="47">-&gt;<pos:position pos:line="57" pos:column="52"/></operator><name pos:line="57" pos:column="49">name<pos:position pos:line="57" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="55"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="59" pos:column="9">memset<pos:position pos:line="59" pos:column="15"/></name><argument_list pos:line="59" pos:column="15">(<argument><expr><operator pos:line="59" pos:column="16">&amp;<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="17">d<pos:position pos:line="59" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="20">0<pos:position pos:line="59" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="23">sizeof<argument_list pos:line="59" pos:column="29">(<argument><expr><name pos:line="59" pos:column="30">d<pos:position pos:line="59" pos:column="31"/></name></expr></argument>)<pos:position pos:line="59" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="59" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="34"/></expr_stmt>
	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name><name pos:line="60" pos:column="13">o<pos:position pos:line="60" pos:column="14"/></name><operator pos:line="60" pos:column="14">-&gt;<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="16">dir<pos:position pos:line="60" pos:column="19"/></name></name></expr>)<pos:position pos:line="60" pos:column="20"/></condition><then pos:line="60" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="61" pos:column="17">d<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">.<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="19">exclude_per_dir<pos:position pos:line="61" pos:column="34"/></name></name> <operator pos:line="61" pos:column="35">=<pos:position pos:line="61" pos:column="36"/></operator> <name><name pos:line="61" pos:column="37">o<pos:position pos:line="61" pos:column="38"/></name><operator pos:line="61" pos:column="38">-&gt;<pos:position pos:line="61" pos:column="43"/></operator><name pos:line="61" pos:column="40">dir<pos:position pos:line="61" pos:column="43"/></name><operator pos:line="61" pos:column="43">-&gt;<pos:position pos:line="61" pos:column="48"/></operator><name pos:line="61" pos:column="45">exclude_per_dir<pos:position pos:line="61" pos:column="60"/></name></name></expr>;<pos:position pos:line="61" pos:column="61"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="62" pos:column="9">i<pos:position pos:line="62" pos:column="10"/></name> <operator pos:line="62" pos:column="11">=<pos:position pos:line="62" pos:column="12"/></operator> <call><name pos:line="62" pos:column="13">read_directory<pos:position pos:line="62" pos:column="27"/></name><argument_list pos:line="62" pos:column="27">(<argument><expr><operator pos:line="62" pos:column="28">&amp;<pos:position pos:line="62" pos:column="33"/></operator><name pos:line="62" pos:column="29">d<pos:position pos:line="62" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="32">pathbuf<pos:position pos:line="62" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="41">namelen<pos:position pos:line="62" pos:column="48"/></name><operator pos:line="62" pos:column="48">+<pos:position pos:line="62" pos:column="49"/></operator><literal type="number" pos:line="62" pos:column="49">1<pos:position pos:line="62" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="52">NULL<pos:position pos:line="62" pos:column="56"/></name></expr></argument>)<pos:position pos:line="62" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="58"/></expr_stmt>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">i<pos:position pos:line="63" pos:column="14"/></name></expr>)<pos:position pos:line="63" pos:column="15"/></condition><then pos:line="63" pos:column="15">
		<block type="pseudo"><return pos:line="64" pos:column="17">return <expr><ternary><condition><expr><name><name pos:line="64" pos:column="24">o<pos:position pos:line="64" pos:column="25"/></name><operator pos:line="64" pos:column="25">-&gt;<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="27">gently<pos:position pos:line="64" pos:column="33"/></name></name></expr> ?<pos:position pos:line="64" pos:column="35"/></condition><then pos:line="64" pos:column="35"> <expr><operator pos:line="64" pos:column="36">-<pos:position pos:line="64" pos:column="37"/></operator><literal type="number" pos:line="64" pos:column="37">1<pos:position pos:line="64" pos:column="38"/></literal></expr> <pos:position pos:line="64" pos:column="39"/></then><else pos:line="64" pos:column="39">:
			<expr><call><name pos:line="65" pos:column="25">add_rejected_path<pos:position pos:line="65" pos:column="42"/></name><argument_list pos:line="65" pos:column="42">(<argument><expr><name pos:line="65" pos:column="43">o<pos:position pos:line="65" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="46">ERROR_NOT_UPTODATE_DIR<pos:position pos:line="65" pos:column="68"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="70">ce<pos:position pos:line="65" pos:column="72"/></name><operator pos:line="65" pos:column="72">-&gt;<pos:position pos:line="65" pos:column="77"/></operator><name pos:line="65" pos:column="74">name<pos:position pos:line="65" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="79"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="65" pos:column="80"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="66" pos:column="9">free<pos:position pos:line="66" pos:column="13"/></name><argument_list pos:line="66" pos:column="13">(<argument><expr><name pos:line="66" pos:column="14">pathbuf<pos:position pos:line="66" pos:column="21"/></name></expr></argument>)<pos:position pos:line="66" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="23"/></expr_stmt>
	<return pos:line="67" pos:column="9">return <expr><name pos:line="67" pos:column="16">cnt<pos:position pos:line="67" pos:column="19"/></name></expr>;<pos:position pos:line="67" pos:column="20"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

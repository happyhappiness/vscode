<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1494_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">extract_param<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">raw<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">name<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="2" pos:column="26">struct<pos:position pos:line="2" pos:column="32"/></name> <name pos:line="2" pos:column="33">strbuf<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">out<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">len<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><call><name pos:line="4" pos:column="22">strlen<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><name pos:line="4" pos:column="29">name<pos:position pos:line="4" pos:column="33"/></name></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">strncasecmp<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">raw<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="30">name<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">len<pos:position pos:line="6" pos:column="39"/></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="41"/></condition><then pos:line="6" pos:column="41">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">-<pos:position pos:line="7" pos:column="25"/></operator><literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal></expr>;<pos:position pos:line="7" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="8" pos:column="9">raw<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">+=<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">len<pos:position pos:line="8" pos:column="19"/></name></expr>;<pos:position pos:line="8" pos:column="20"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">raw<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">!=<pos:position pos:line="10" pos:column="20"/></operator> <literal type="char" pos:line="10" pos:column="21">'='<pos:position pos:line="10" pos:column="24"/></literal></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">-<pos:position pos:line="11" pos:column="25"/></operator><literal type="number" pos:line="11" pos:column="25">1<pos:position pos:line="11" pos:column="26"/></literal></expr>;<pos:position pos:line="11" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="12" pos:column="9">raw<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">++<pos:position pos:line="12" pos:column="14"/></operator></expr>;<pos:position pos:line="12" pos:column="15"/></expr_stmt>

	<while pos:line="14" pos:column="9">while <condition pos:line="14" pos:column="15">(<expr><operator pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">raw<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">&amp;&amp;<pos:position pos:line="14" pos:column="31"/></operator> <operator pos:line="14" pos:column="24">!<pos:position pos:line="14" pos:column="25"/></operator><call><name pos:line="14" pos:column="25">isspace<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><operator pos:line="14" pos:column="33">*<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="34">raw<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call> <operator pos:line="14" pos:column="39">&amp;&amp;<pos:position pos:line="14" pos:column="49"/></operator> <operator pos:line="14" pos:column="42">*<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="43">raw<pos:position pos:line="14" pos:column="46"/></name> <operator pos:line="14" pos:column="47">!=<pos:position pos:line="14" pos:column="49"/></operator> <literal type="char" pos:line="14" pos:column="50">';'<pos:position pos:line="14" pos:column="53"/></literal></expr>)<pos:position pos:line="14" pos:column="54"/></condition>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">strbuf_addch<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">out<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="35">*<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">raw<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">++<pos:position pos:line="15" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt></block></while>
	<return pos:line="16" pos:column="9">return <expr><literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

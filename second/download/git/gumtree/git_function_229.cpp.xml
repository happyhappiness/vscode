<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_229.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_whitespace_option<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">apply_state<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">state<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="64">const<pos:position pos:line="1" pos:column="69"/></specifier> <name pos:line="1" pos:column="70">char<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">option<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="83"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">option<pos:position pos:line="3" pos:column="20"/></name></expr>)<pos:position pos:line="3" pos:column="21"/></condition><then pos:line="3" pos:column="21"> <block pos:line="3" pos:column="22">{
		<expr_stmt><expr><name><name pos:line="4" pos:column="17">state<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">-&gt;<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="24">ws_error_action<pos:position pos:line="4" pos:column="39"/></name></name> <operator pos:line="4" pos:column="40">=<pos:position pos:line="4" pos:column="41"/></operator> <name pos:line="4" pos:column="42">warn_on_ws_error<pos:position pos:line="4" pos:column="58"/></name></expr>;<pos:position pos:line="4" pos:column="59"/></expr_stmt>
		<return pos:line="5" pos:column="17">return;<pos:position pos:line="5" pos:column="24"/></return>
	}<pos:position pos:line="6" pos:column="10"/></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name pos:line="7" pos:column="14">strcmp<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">option<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="29">"warn"<pos:position pos:line="7" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="37"/></condition><then pos:line="7" pos:column="37"> <block pos:line="7" pos:column="38">{
		<expr_stmt><expr><name><name pos:line="8" pos:column="17">state<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">ws_error_action<pos:position pos:line="8" pos:column="39"/></name></name> <operator pos:line="8" pos:column="40">=<pos:position pos:line="8" pos:column="41"/></operator> <name pos:line="8" pos:column="42">warn_on_ws_error<pos:position pos:line="8" pos:column="58"/></name></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>
		<return pos:line="9" pos:column="17">return;<pos:position pos:line="9" pos:column="24"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">strcmp<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">option<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="29">"nowarn"<pos:position pos:line="11" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39"> <block pos:line="11" pos:column="40">{
		<expr_stmt><expr><name><name pos:line="12" pos:column="17">state<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">ws_error_action<pos:position pos:line="12" pos:column="39"/></name></name> <operator pos:line="12" pos:column="40">=<pos:position pos:line="12" pos:column="41"/></operator> <name pos:line="12" pos:column="42">nowarn_ws_error<pos:position pos:line="12" pos:column="57"/></name></expr>;<pos:position pos:line="12" pos:column="58"/></expr_stmt>
		<return pos:line="13" pos:column="17">return;<pos:position pos:line="13" pos:column="24"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><call><name pos:line="15" pos:column="14">strcmp<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">option<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="29">"error"<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="38"/></condition><then pos:line="15" pos:column="38"> <block pos:line="15" pos:column="39">{
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">state<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">ws_error_action<pos:position pos:line="16" pos:column="39"/></name></name> <operator pos:line="16" pos:column="40">=<pos:position pos:line="16" pos:column="41"/></operator> <name pos:line="16" pos:column="42">die_on_ws_error<pos:position pos:line="16" pos:column="57"/></name></expr>;<pos:position pos:line="16" pos:column="58"/></expr_stmt>
		<return pos:line="17" pos:column="17">return;<pos:position pos:line="17" pos:column="24"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">strcmp<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">option<pos:position pos:line="19" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="29">"error-all"<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="42"/></condition><then pos:line="19" pos:column="42"> <block pos:line="19" pos:column="43">{
		<expr_stmt><expr><name><name pos:line="20" pos:column="17">state<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">-&gt;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="24">ws_error_action<pos:position pos:line="20" pos:column="39"/></name></name> <operator pos:line="20" pos:column="40">=<pos:position pos:line="20" pos:column="41"/></operator> <name pos:line="20" pos:column="42">die_on_ws_error<pos:position pos:line="20" pos:column="57"/></name></expr>;<pos:position pos:line="20" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">state<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">squelch_whitespace_errors<pos:position pos:line="21" pos:column="49"/></name></name> <operator pos:line="21" pos:column="50">=<pos:position pos:line="21" pos:column="51"/></operator> <literal type="number" pos:line="21" pos:column="52">0<pos:position pos:line="21" pos:column="53"/></literal></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt>
		<return pos:line="22" pos:column="17">return;<pos:position pos:line="22" pos:column="24"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><call><name pos:line="24" pos:column="14">strcmp<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">option<pos:position pos:line="24" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="29">"strip"<pos:position pos:line="24" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call> <operator pos:line="24" pos:column="38">||<pos:position pos:line="24" pos:column="40"/></operator> <operator pos:line="24" pos:column="41">!<pos:position pos:line="24" pos:column="42"/></operator><call><name pos:line="24" pos:column="42">strcmp<pos:position pos:line="24" pos:column="48"/></name><argument_list pos:line="24" pos:column="48">(<argument><expr><name pos:line="24" pos:column="49">option<pos:position pos:line="24" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="57">"fix"<pos:position pos:line="24" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="64"/></condition><then pos:line="24" pos:column="64"> <block pos:line="24" pos:column="65">{
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">state<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">ws_error_action<pos:position pos:line="25" pos:column="39"/></name></name> <operator pos:line="25" pos:column="40">=<pos:position pos:line="25" pos:column="41"/></operator> <name pos:line="25" pos:column="42">correct_ws_error<pos:position pos:line="25" pos:column="58"/></name></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
		<return pos:line="26" pos:column="17">return;<pos:position pos:line="26" pos:column="24"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">die<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><call><name pos:line="28" pos:column="13">_<pos:position pos:line="28" pos:column="14"/></name><argument_list pos:line="28" pos:column="14">(<argument><expr><literal type="string" pos:line="28" pos:column="15">"unrecognized whitespace option '%s'"<pos:position pos:line="28" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="28" pos:column="55">option<pos:position pos:line="28" pos:column="61"/></name></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="63"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2521.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">read_loose_refs<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">dirname<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="50">struct<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">ref_dir<pos:position pos:line="1" pos:column="64"/></name></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">dir<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">ref_cache<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">refs<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><name><name pos:line="3" pos:column="34">dir<pos:position pos:line="3" pos:column="37"/></name><operator pos:line="3" pos:column="37">-&gt;<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="39">ref_cache<pos:position pos:line="3" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">DIR<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">d<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">dirent<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">de<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">dirnamelen<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><call><name pos:line="6" pos:column="26">strlen<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">dirname<pos:position pos:line="6" pos:column="40"/></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">refname<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">path<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><name pos:line="8" pos:column="30">STRBUF_INIT<pos:position pos:line="8" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">path_baselen<pos:position pos:line="9" pos:column="28"/></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">*<pos:position pos:line="11" pos:column="14"/></operator><name><name pos:line="11" pos:column="14">refs<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">name<pos:position pos:line="11" pos:column="24"/></name></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">strbuf_git_path_submodule<pos:position pos:line="12" pos:column="42"/></name><argument_list pos:line="12" pos:column="42">(<argument><expr><operator pos:line="12" pos:column="43">&amp;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="44">path<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="50">refs<pos:position pos:line="12" pos:column="54"/></name><operator pos:line="12" pos:column="54">-&gt;<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="56">name<pos:position pos:line="12" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="62">"%s"<pos:position pos:line="12" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="68">dirname<pos:position pos:line="12" pos:column="75"/></name></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="77"/></expr_stmt></block></then>
	<else pos:line="13" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">strbuf_git_path<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><operator pos:line="14" pos:column="33">&amp;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="34">path<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="40">"%s"<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="46">dirname<pos:position pos:line="14" pos:column="53"/></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name pos:line="15" pos:column="9">path_baselen<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <name><name pos:line="15" pos:column="24">path<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">.<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">len<pos:position pos:line="15" pos:column="32"/></name></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><name pos:line="17" pos:column="9">d<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">opendir<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name><name pos:line="17" pos:column="21">path<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">.<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">buf<pos:position pos:line="17" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">d<pos:position pos:line="18" pos:column="15"/></name></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16"> <block pos:line="18" pos:column="17">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">strbuf_release<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><operator pos:line="19" pos:column="32">&amp;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="33">path<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
		<return pos:line="20" pos:column="17">return;<pos:position pos:line="20" pos:column="24"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">strbuf_init<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><operator pos:line="23" pos:column="21">&amp;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="22">refname<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="31">dirnamelen<pos:position pos:line="23" pos:column="41"/></name> <operator pos:line="23" pos:column="42">+<pos:position pos:line="23" pos:column="43"/></operator> <literal type="number" pos:line="23" pos:column="44">257<pos:position pos:line="23" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">strbuf_add<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><operator pos:line="24" pos:column="20">&amp;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="21">refname<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="30">dirname<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="39">dirnamelen<pos:position pos:line="24" pos:column="49"/></name></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>

	<while pos:line="26" pos:column="9">while <condition pos:line="26" pos:column="15">(<expr><operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">de<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <call><name pos:line="26" pos:column="22">readdir<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">d<pos:position pos:line="26" pos:column="31"/></name></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></call><operator pos:line="26" pos:column="32">)<pos:position pos:line="26" pos:column="33"/></operator> <operator pos:line="26" pos:column="34">!=<pos:position pos:line="26" pos:column="36"/></operator> <name pos:line="26" pos:column="37">NULL<pos:position pos:line="26" pos:column="41"/></name></expr>)<pos:position pos:line="26" pos:column="42"/></condition> <block pos:line="26" pos:column="43">{
		<decl_stmt><decl><type><name pos:line="27" pos:column="17">unsigned<pos:position pos:line="27" pos:column="25"/></name> <name pos:line="27" pos:column="26">char<pos:position pos:line="27" pos:column="30"/></name></type> <name><name pos:line="27" pos:column="31">sha1<pos:position pos:line="27" pos:column="35"/></name><index pos:line="27" pos:column="35">[<expr><literal type="number" pos:line="27" pos:column="36">20<pos:position pos:line="27" pos:column="38"/></literal></expr>]<pos:position pos:line="27" pos:column="39"/></index></name></decl>;<pos:position pos:line="27" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="28" pos:column="17">struct<pos:position pos:line="28" pos:column="23"/></name> <name pos:line="28" pos:column="24">stat<pos:position pos:line="28" pos:column="28"/></name></name></type> <name pos:line="28" pos:column="29">st<pos:position pos:line="28" pos:column="31"/></name></decl>;<pos:position pos:line="28" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="29" pos:column="17">int<pos:position pos:line="29" pos:column="20"/></name></type> <name pos:line="29" pos:column="21">flag<pos:position pos:line="29" pos:column="25"/></name></decl>;<pos:position pos:line="29" pos:column="26"/></decl_stmt>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name><name pos:line="31" pos:column="21">de<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">d_name<pos:position pos:line="31" pos:column="31"/></name><index pos:line="31" pos:column="31">[<expr><literal type="number" pos:line="31" pos:column="32">0<pos:position pos:line="31" pos:column="33"/></literal></expr>]<pos:position pos:line="31" pos:column="34"/></index></name> <operator pos:line="31" pos:column="35">==<pos:position pos:line="31" pos:column="37"/></operator> <literal type="char" pos:line="31" pos:column="38">'.'<pos:position pos:line="31" pos:column="41"/></literal></expr>)<pos:position pos:line="31" pos:column="42"/></condition><then pos:line="31" pos:column="42">
			<block type="pseudo"><continue pos:line="32" pos:column="25">continue;<pos:position pos:line="32" pos:column="34"/></continue></block></then></if>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><call><name pos:line="33" pos:column="21">ends_with<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><name><name pos:line="33" pos:column="31">de<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">-&gt;<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="35">d_name<pos:position pos:line="33" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="43">".lock"<pos:position pos:line="33" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="52"/></condition><then pos:line="33" pos:column="52">
			<block type="pseudo"><continue pos:line="34" pos:column="25">continue;<pos:position pos:line="34" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">strbuf_addstr<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><operator pos:line="35" pos:column="31">&amp;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="32">refname<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="41">de<pos:position pos:line="35" pos:column="43"/></name><operator pos:line="35" pos:column="43">-&gt;<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="45">d_name<pos:position pos:line="35" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">strbuf_addstr<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><operator pos:line="36" pos:column="31">&amp;<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="32">path<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="38">de<pos:position pos:line="36" pos:column="40"/></name><operator pos:line="36" pos:column="40">-&gt;<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="42">d_name<pos:position pos:line="36" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="50"/></expr_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><call><name pos:line="37" pos:column="21">stat<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name><name pos:line="37" pos:column="26">path<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">.<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="31">buf<pos:position pos:line="37" pos:column="34"/></name></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="36">&amp;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="37">st<pos:position pos:line="37" pos:column="39"/></name></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></call> <operator pos:line="37" pos:column="41">&lt;<pos:position pos:line="37" pos:column="45"/></operator> <literal type="number" pos:line="37" pos:column="43">0<pos:position pos:line="37" pos:column="44"/></literal></expr>)<pos:position pos:line="37" pos:column="45"/></condition><then pos:line="37" pos:column="45"> <block pos:line="37" pos:column="46">{
			<empty_stmt pos:line="38" pos:column="25">;<pos:position pos:line="38" pos:column="26"/></empty_stmt> <comment type="block" pos:line="38" pos:column="27">/* silently ignore */</comment>
		}<pos:position pos:line="39" pos:column="18"/></block></then> <elseif pos:line="39" pos:column="19">else <if pos:line="39" pos:column="24">if <condition pos:line="39" pos:column="27">(<expr><call><name pos:line="39" pos:column="28">S_ISDIR<pos:position pos:line="39" pos:column="35"/></name><argument_list pos:line="39" pos:column="35">(<argument><expr><name><name pos:line="39" pos:column="36">st<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">.<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="39">st_mode<pos:position pos:line="39" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="48"/></condition><then pos:line="39" pos:column="48"> <block pos:line="39" pos:column="49">{
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">strbuf_addch<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><operator pos:line="40" pos:column="38">&amp;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="39">refname<pos:position pos:line="40" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="40" pos:column="48">'/'<pos:position pos:line="40" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">add_entry_to_dir<pos:position pos:line="41" pos:column="41"/></name><argument_list pos:line="41" pos:column="41">(<argument><expr><name pos:line="41" pos:column="42">dir<pos:position pos:line="41" pos:column="45"/></name></expr></argument>,
					 <argument><expr><call><name pos:line="42" pos:column="42">create_dir_entry<pos:position pos:line="42" pos:column="58"/></name><argument_list pos:line="42" pos:column="58">(<argument><expr><name pos:line="42" pos:column="59">refs<pos:position pos:line="42" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="65">refname<pos:position pos:line="42" pos:column="72"/></name><operator pos:line="42" pos:column="72">.<pos:position pos:line="42" pos:column="73"/></operator><name pos:line="42" pos:column="73">buf<pos:position pos:line="42" pos:column="76"/></name></name></expr></argument>,
							  <argument><expr><name><name pos:line="43" pos:column="59">refname<pos:position pos:line="43" pos:column="66"/></name><operator pos:line="43" pos:column="66">.<pos:position pos:line="43" pos:column="67"/></operator><name pos:line="43" pos:column="67">len<pos:position pos:line="43" pos:column="70"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="72">1<pos:position pos:line="43" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if></elseif> <else pos:line="44" pos:column="19">else <block pos:line="44" pos:column="24">{
			<decl_stmt><decl><type><name pos:line="45" pos:column="25">int<pos:position pos:line="45" pos:column="28"/></name></type> <name pos:line="45" pos:column="29">read_ok<pos:position pos:line="45" pos:column="36"/></name></decl>;<pos:position pos:line="45" pos:column="37"/></decl_stmt>

			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><operator pos:line="47" pos:column="29">*<pos:position pos:line="47" pos:column="30"/></operator><name><name pos:line="47" pos:column="30">refs<pos:position pos:line="47" pos:column="34"/></name><operator pos:line="47" pos:column="34">-&gt;<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="36">name<pos:position pos:line="47" pos:column="40"/></name></name></expr>)<pos:position pos:line="47" pos:column="41"/></condition><then pos:line="47" pos:column="41"> <block pos:line="47" pos:column="42">{
				<expr_stmt><expr><call><name pos:line="48" pos:column="33">hashclr<pos:position pos:line="48" pos:column="40"/></name><argument_list pos:line="48" pos:column="40">(<argument><expr><name pos:line="48" pos:column="41">sha1<pos:position pos:line="48" pos:column="45"/></name></expr></argument>)<pos:position pos:line="48" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="49" pos:column="33">flag<pos:position pos:line="49" pos:column="37"/></name> <operator pos:line="49" pos:column="38">=<pos:position pos:line="49" pos:column="39"/></operator> <literal type="number" pos:line="49" pos:column="40">0<pos:position pos:line="49" pos:column="41"/></literal></expr>;<pos:position pos:line="49" pos:column="42"/></expr_stmt>
				<expr_stmt><expr><name pos:line="50" pos:column="33">read_ok<pos:position pos:line="50" pos:column="40"/></name> <operator pos:line="50" pos:column="41">=<pos:position pos:line="50" pos:column="42"/></operator> <operator pos:line="50" pos:column="43">!<pos:position pos:line="50" pos:column="44"/></operator><call><name pos:line="50" pos:column="44">resolve_gitlink_ref<pos:position pos:line="50" pos:column="63"/></name><argument_list pos:line="50" pos:column="63">(<argument><expr><name><name pos:line="50" pos:column="64">refs<pos:position pos:line="50" pos:column="68"/></name><operator pos:line="50" pos:column="68">-&gt;<pos:position pos:line="50" pos:column="73"/></operator><name pos:line="50" pos:column="70">name<pos:position pos:line="50" pos:column="74"/></name></name></expr></argument>,
							       <argument><expr><name><name pos:line="51" pos:column="64">refname<pos:position pos:line="51" pos:column="71"/></name><operator pos:line="51" pos:column="71">.<pos:position pos:line="51" pos:column="72"/></operator><name pos:line="51" pos:column="72">buf<pos:position pos:line="51" pos:column="75"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="77">sha1<pos:position pos:line="51" pos:column="81"/></name></expr></argument>)<pos:position pos:line="51" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="83"/></expr_stmt>
			}<pos:position pos:line="52" pos:column="26"/></block></then> <else pos:line="52" pos:column="27">else <block pos:line="52" pos:column="32">{
				<expr_stmt><expr><name pos:line="53" pos:column="33">read_ok<pos:position pos:line="53" pos:column="40"/></name> <operator pos:line="53" pos:column="41">=<pos:position pos:line="53" pos:column="42"/></operator> <operator pos:line="53" pos:column="43">!<pos:position pos:line="53" pos:column="44"/></operator><call><name pos:line="53" pos:column="44">read_ref_full<pos:position pos:line="53" pos:column="57"/></name><argument_list pos:line="53" pos:column="57">(<argument><expr><name><name pos:line="53" pos:column="58">refname<pos:position pos:line="53" pos:column="65"/></name><operator pos:line="53" pos:column="65">.<pos:position pos:line="53" pos:column="66"/></operator><name pos:line="53" pos:column="66">buf<pos:position pos:line="53" pos:column="69"/></name></name></expr></argument>,
							 <argument><expr><name pos:line="54" pos:column="58">RESOLVE_REF_READING<pos:position pos:line="54" pos:column="77"/></name></expr></argument>,
							 <argument><expr><name pos:line="55" pos:column="58">sha1<pos:position pos:line="55" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="64">&amp;<pos:position pos:line="55" pos:column="69"/></operator><name pos:line="55" pos:column="65">flag<pos:position pos:line="55" pos:column="69"/></name></expr></argument>)<pos:position pos:line="55" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="71"/></expr_stmt>
			}<pos:position pos:line="56" pos:column="26"/></block></else></if>

			<if pos:line="58" pos:column="25">if <condition pos:line="58" pos:column="28">(<expr><operator pos:line="58" pos:column="29">!<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="30">read_ok<pos:position pos:line="58" pos:column="37"/></name></expr>)<pos:position pos:line="58" pos:column="38"/></condition><then pos:line="58" pos:column="38"> <block pos:line="58" pos:column="39">{
				<expr_stmt><expr><call><name pos:line="59" pos:column="33">hashclr<pos:position pos:line="59" pos:column="40"/></name><argument_list pos:line="59" pos:column="40">(<argument><expr><name pos:line="59" pos:column="41">sha1<pos:position pos:line="59" pos:column="45"/></name></expr></argument>)<pos:position pos:line="59" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="60" pos:column="33">flag<pos:position pos:line="60" pos:column="37"/></name> <operator pos:line="60" pos:column="38">|=<pos:position pos:line="60" pos:column="40"/></operator> <name pos:line="60" pos:column="41">REF_ISBROKEN<pos:position pos:line="60" pos:column="53"/></name></expr>;<pos:position pos:line="60" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="61" pos:column="26"/></block></then> <elseif pos:line="61" pos:column="27">else <if pos:line="61" pos:column="32">if <condition pos:line="61" pos:column="35">(<expr><call><name pos:line="61" pos:column="36">is_null_sha1<pos:position pos:line="61" pos:column="48"/></name><argument_list pos:line="61" pos:column="48">(<argument><expr><name pos:line="61" pos:column="49">sha1<pos:position pos:line="61" pos:column="53"/></name></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="55"/></condition><then pos:line="61" pos:column="55"> <block pos:line="61" pos:column="56">{
				<comment type="block" pos:line="62" pos:column="33">/*
				 * It is so astronomically unlikely
				 * that NULL_SHA1 is the SHA-1 of an
				 * actual object that we consider its
				 * appearance in a loose reference
				 * file to be repo corruption
				 * (probably due to a software bug).
				 */</comment>
				<expr_stmt><expr><name pos:line="70" pos:column="33">flag<pos:position pos:line="70" pos:column="37"/></name> <operator pos:line="70" pos:column="38">|=<pos:position pos:line="70" pos:column="40"/></operator> <name pos:line="70" pos:column="41">REF_ISBROKEN<pos:position pos:line="70" pos:column="53"/></name></expr>;<pos:position pos:line="70" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="71" pos:column="26"/></block></then></if></elseif></if>

			<if pos:line="73" pos:column="25">if <condition pos:line="73" pos:column="28">(<expr><call><name pos:line="73" pos:column="29">check_refname_format<pos:position pos:line="73" pos:column="49"/></name><argument_list pos:line="73" pos:column="49">(<argument><expr><name><name pos:line="73" pos:column="50">refname<pos:position pos:line="73" pos:column="57"/></name><operator pos:line="73" pos:column="57">.<pos:position pos:line="73" pos:column="58"/></operator><name pos:line="73" pos:column="58">buf<pos:position pos:line="73" pos:column="61"/></name></name></expr></argument>,
						 <argument><expr><name pos:line="74" pos:column="50">REFNAME_ALLOW_ONELEVEL<pos:position pos:line="74" pos:column="72"/></name></expr></argument>)<pos:position pos:line="74" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="74"/></condition><then pos:line="74" pos:column="74"> <block pos:line="74" pos:column="75">{
				<if pos:line="75" pos:column="33">if <condition pos:line="75" pos:column="36">(<expr><operator pos:line="75" pos:column="37">!<pos:position pos:line="75" pos:column="38"/></operator><call><name pos:line="75" pos:column="38">refname_is_safe<pos:position pos:line="75" pos:column="53"/></name><argument_list pos:line="75" pos:column="53">(<argument><expr><name><name pos:line="75" pos:column="54">refname<pos:position pos:line="75" pos:column="61"/></name><operator pos:line="75" pos:column="61">.<pos:position pos:line="75" pos:column="62"/></operator><name pos:line="75" pos:column="62">buf<pos:position pos:line="75" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="67"/></condition><then pos:line="75" pos:column="67">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="41">die<pos:position pos:line="76" pos:column="44"/></name><argument_list pos:line="76" pos:column="44">(<argument><expr><literal type="string" pos:line="76" pos:column="45">"loose refname is dangerous: %s"<pos:position pos:line="76" pos:column="77"/></literal></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="79">refname<pos:position pos:line="76" pos:column="86"/></name><operator pos:line="76" pos:column="86">.<pos:position pos:line="76" pos:column="87"/></operator><name pos:line="76" pos:column="87">buf<pos:position pos:line="76" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="92"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="77" pos:column="33">hashclr<pos:position pos:line="77" pos:column="40"/></name><argument_list pos:line="77" pos:column="40">(<argument><expr><name pos:line="77" pos:column="41">sha1<pos:position pos:line="77" pos:column="45"/></name></expr></argument>)<pos:position pos:line="77" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="78" pos:column="33">flag<pos:position pos:line="78" pos:column="37"/></name> <operator pos:line="78" pos:column="38">|=<pos:position pos:line="78" pos:column="40"/></operator> <name pos:line="78" pos:column="41">REF_BAD_NAME<pos:position pos:line="78" pos:column="53"/></name> <operator pos:line="78" pos:column="54">|<pos:position pos:line="78" pos:column="55"/></operator> <name pos:line="78" pos:column="56">REF_ISBROKEN<pos:position pos:line="78" pos:column="68"/></name></expr>;<pos:position pos:line="78" pos:column="69"/></expr_stmt>
			}<pos:position pos:line="79" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="80" pos:column="25">add_entry_to_dir<pos:position pos:line="80" pos:column="41"/></name><argument_list pos:line="80" pos:column="41">(<argument><expr><name pos:line="80" pos:column="42">dir<pos:position pos:line="80" pos:column="45"/></name></expr></argument>,
					 <argument><expr><call><name pos:line="81" pos:column="42">create_ref_entry<pos:position pos:line="81" pos:column="58"/></name><argument_list pos:line="81" pos:column="58">(<argument><expr><name><name pos:line="81" pos:column="59">refname<pos:position pos:line="81" pos:column="66"/></name><operator pos:line="81" pos:column="66">.<pos:position pos:line="81" pos:column="67"/></operator><name pos:line="81" pos:column="67">buf<pos:position pos:line="81" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="72">sha1<pos:position pos:line="81" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="78">flag<pos:position pos:line="81" pos:column="82"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="84">0<pos:position pos:line="81" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="88"/></expr_stmt>
		}<pos:position pos:line="82" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="83" pos:column="17">strbuf_setlen<pos:position pos:line="83" pos:column="30"/></name><argument_list pos:line="83" pos:column="30">(<argument><expr><operator pos:line="83" pos:column="31">&amp;<pos:position pos:line="83" pos:column="36"/></operator><name pos:line="83" pos:column="32">refname<pos:position pos:line="83" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="41">dirnamelen<pos:position pos:line="83" pos:column="51"/></name></expr></argument>)<pos:position pos:line="83" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="84" pos:column="17">strbuf_setlen<pos:position pos:line="84" pos:column="30"/></name><argument_list pos:line="84" pos:column="30">(<argument><expr><operator pos:line="84" pos:column="31">&amp;<pos:position pos:line="84" pos:column="36"/></operator><name pos:line="84" pos:column="32">path<pos:position pos:line="84" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="38">path_baselen<pos:position pos:line="84" pos:column="50"/></name></expr></argument>)<pos:position pos:line="84" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="85" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="86" pos:column="9">strbuf_release<pos:position pos:line="86" pos:column="23"/></name><argument_list pos:line="86" pos:column="23">(<argument><expr><operator pos:line="86" pos:column="24">&amp;<pos:position pos:line="86" pos:column="29"/></operator><name pos:line="86" pos:column="25">refname<pos:position pos:line="86" pos:column="32"/></name></expr></argument>)<pos:position pos:line="86" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="87" pos:column="9">strbuf_release<pos:position pos:line="87" pos:column="23"/></name><argument_list pos:line="87" pos:column="23">(<argument><expr><operator pos:line="87" pos:column="24">&amp;<pos:position pos:line="87" pos:column="29"/></operator><name pos:line="87" pos:column="25">path<pos:position pos:line="87" pos:column="29"/></name></expr></argument>)<pos:position pos:line="87" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="88" pos:column="9">closedir<pos:position pos:line="88" pos:column="17"/></name><argument_list pos:line="88" pos:column="17">(<argument><expr><name pos:line="88" pos:column="18">d<pos:position pos:line="88" pos:column="19"/></name></expr></argument>)<pos:position pos:line="88" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="21"/></expr_stmt>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

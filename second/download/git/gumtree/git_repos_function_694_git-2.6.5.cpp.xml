<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_694_git-2.6.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">parse_commit_buffer<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">commit<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">item<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">void<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">buffer<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">unsigned<pos:position pos:line="1" pos:column="74"/></name> <name pos:line="1" pos:column="75">long<pos:position pos:line="1" pos:column="79"/></name></type> <name pos:line="1" pos:column="80">size<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">tail<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name pos:line="3" pos:column="28">buffer<pos:position pos:line="3" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">bufptr<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">buffer<pos:position pos:line="4" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object_id<pos:position pos:line="5" pos:column="25"/></name></name></type> <name pos:line="5" pos:column="26">parent<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit_list<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier><modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">pptr<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">commit_graft<pos:position pos:line="7" pos:column="28"/></name></name> <modifier pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></modifier></type><name pos:line="7" pos:column="30">graft<pos:position pos:line="7" pos:column="35"/></name></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">int<pos:position pos:line="8" pos:column="18"/></name></type> <name pos:line="8" pos:column="19">tree_entry_len<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><name pos:line="8" pos:column="36">GIT_SHA1_HEXSZ<pos:position pos:line="8" pos:column="50"/></name> <operator pos:line="8" pos:column="51">+<pos:position pos:line="8" pos:column="52"/></operator> <literal type="number" pos:line="8" pos:column="53">5<pos:position pos:line="8" pos:column="54"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">int<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">parent_entry_len<pos:position pos:line="9" pos:column="35"/></name> <init pos:line="9" pos:column="36">= <expr><name pos:line="9" pos:column="38">GIT_SHA1_HEXSZ<pos:position pos:line="9" pos:column="52"/></name> <operator pos:line="9" pos:column="53">+<pos:position pos:line="9" pos:column="54"/></operator> <literal type="number" pos:line="9" pos:column="55">7<pos:position pos:line="9" pos:column="56"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="57"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">item<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">object<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">.<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">parsed<pos:position pos:line="11" pos:column="32"/></name></name></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">item<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">object<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">.<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">parsed<pos:position pos:line="13" pos:column="28"/></name></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <literal type="number" pos:line="13" pos:column="31">1<pos:position pos:line="13" pos:column="32"/></literal></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">tail<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">+=<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">size<pos:position pos:line="14" pos:column="21"/></name></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">tail<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">&lt;=<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="21">bufptr<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">+<pos:position pos:line="15" pos:column="29"/></operator> <name pos:line="15" pos:column="30">tree_entry_len<pos:position pos:line="15" pos:column="44"/></name> <operator pos:line="15" pos:column="45">+<pos:position pos:line="15" pos:column="46"/></operator> <literal type="number" pos:line="15" pos:column="47">1<pos:position pos:line="15" pos:column="48"/></literal> <operator pos:line="15" pos:column="49">||<pos:position pos:line="15" pos:column="51"/></operator> <call><name pos:line="15" pos:column="52">memcmp<pos:position pos:line="15" pos:column="58"/></name><argument_list pos:line="15" pos:column="58">(<argument><expr><name pos:line="15" pos:column="59">bufptr<pos:position pos:line="15" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="67">"tree "<pos:position pos:line="15" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="76">5<pos:position pos:line="15" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></call> <operator pos:line="15" pos:column="79">||<pos:position pos:line="15" pos:column="81"/></operator>
			<name><name pos:line="16" pos:column="25">bufptr<pos:position pos:line="16" pos:column="31"/></name><index pos:line="16" pos:column="31">[<expr><name pos:line="16" pos:column="32">tree_entry_len<pos:position pos:line="16" pos:column="46"/></name></expr>]<pos:position pos:line="16" pos:column="47"/></index></name> <operator pos:line="16" pos:column="48">!=<pos:position pos:line="16" pos:column="50"/></operator> <literal type="char" pos:line="16" pos:column="51">'\n'<pos:position pos:line="16" pos:column="55"/></literal></expr>)<pos:position pos:line="16" pos:column="56"/></condition><then pos:line="16" pos:column="56">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><call><name pos:line="17" pos:column="24">error<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><literal type="string" pos:line="17" pos:column="30">"bogus commit object %s"<pos:position pos:line="17" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="56">sha1_to_hex<pos:position pos:line="17" pos:column="67"/></name><argument_list pos:line="17" pos:column="67">(<argument><expr><name><name pos:line="17" pos:column="68">item<pos:position pos:line="17" pos:column="72"/></name><operator pos:line="17" pos:column="72">-&gt;<pos:position pos:line="17" pos:column="77"/></operator><name pos:line="17" pos:column="74">object<pos:position pos:line="17" pos:column="80"/></name><operator pos:line="17" pos:column="80">.<pos:position pos:line="17" pos:column="81"/></operator><name pos:line="17" pos:column="81">sha1<pos:position pos:line="17" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="88"/></return></block></then></if>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">get_sha1_hex<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">bufptr<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">+<pos:position pos:line="18" pos:column="34"/></operator> <literal type="number" pos:line="18" pos:column="35">5<pos:position pos:line="18" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="38">parent<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">.<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="45">hash<pos:position pos:line="18" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call> <operator pos:line="18" pos:column="51">&lt;<pos:position pos:line="18" pos:column="55"/></operator> <literal type="number" pos:line="18" pos:column="53">0<pos:position pos:line="18" pos:column="54"/></literal></expr>)<pos:position pos:line="18" pos:column="55"/></condition><then pos:line="18" pos:column="55">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><call><name pos:line="19" pos:column="24">error<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><literal type="string" pos:line="19" pos:column="30">"bad tree pointer in commit %s"<pos:position pos:line="19" pos:column="61"/></literal></expr></argument>,
			     <argument><expr><call><name pos:line="20" pos:column="30">sha1_to_hex<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><expr><name><name pos:line="20" pos:column="42">item<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">-&gt;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="48">object<pos:position pos:line="20" pos:column="54"/></name><operator pos:line="20" pos:column="54">.<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="55">sha1<pos:position pos:line="20" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="62"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">item<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">tree<pos:position pos:line="21" pos:column="19"/></name></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <call><name pos:line="21" pos:column="22">lookup_tree<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name><name pos:line="21" pos:column="34">parent<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">.<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">hash<pos:position pos:line="21" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">bufptr<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">+=<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">tree_entry_len<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">+<pos:position pos:line="22" pos:column="35"/></operator> <literal type="number" pos:line="22" pos:column="36">1<pos:position pos:line="22" pos:column="37"/></literal></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt> <comment type="block" pos:line="22" pos:column="39">/* "tree " + "hex sha1" + "\n" */</comment>
	<expr_stmt><expr><name pos:line="23" pos:column="9">pptr<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <operator pos:line="23" pos:column="16">&amp;<pos:position pos:line="23" pos:column="21"/></operator><name><name pos:line="23" pos:column="17">item<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">parents<pos:position pos:line="23" pos:column="30"/></name></name></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><name pos:line="25" pos:column="9">graft<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <call><name pos:line="25" pos:column="17">lookup_commit_graft<pos:position pos:line="25" pos:column="36"/></name><argument_list pos:line="25" pos:column="36">(<argument><expr><name><name pos:line="25" pos:column="37">item<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">object<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">.<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="50">sha1<pos:position pos:line="25" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="56"/></expr_stmt>
	<while pos:line="26" pos:column="9">while <condition pos:line="26" pos:column="15">(<expr><name pos:line="26" pos:column="16">bufptr<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">+<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="25">parent_entry_len<pos:position pos:line="26" pos:column="41"/></name> <operator pos:line="26" pos:column="42">&lt;<pos:position pos:line="26" pos:column="46"/></operator> <name pos:line="26" pos:column="44">tail<pos:position pos:line="26" pos:column="48"/></name> <operator pos:line="26" pos:column="49">&amp;&amp;<pos:position pos:line="26" pos:column="59"/></operator> <operator pos:line="26" pos:column="52">!<pos:position pos:line="26" pos:column="53"/></operator><call><name pos:line="26" pos:column="53">memcmp<pos:position pos:line="26" pos:column="59"/></name><argument_list pos:line="26" pos:column="59">(<argument><expr><name pos:line="26" pos:column="60">bufptr<pos:position pos:line="26" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="68">"parent "<pos:position pos:line="26" pos:column="77"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="79">7<pos:position pos:line="26" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="82"/></condition> <block pos:line="26" pos:column="83">{
		<decl_stmt><decl><type><name><name pos:line="27" pos:column="17">struct<pos:position pos:line="27" pos:column="23"/></name> <name pos:line="27" pos:column="24">commit<pos:position pos:line="27" pos:column="30"/></name></name> <modifier pos:line="27" pos:column="31">*<pos:position pos:line="27" pos:column="32"/></modifier></type><name pos:line="27" pos:column="32">new_parent<pos:position pos:line="27" pos:column="42"/></name></decl>;<pos:position pos:line="27" pos:column="43"/></decl_stmt>

		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">tail<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">&lt;=<pos:position pos:line="29" pos:column="31"/></operator> <name pos:line="29" pos:column="29">bufptr<pos:position pos:line="29" pos:column="35"/></name> <operator pos:line="29" pos:column="36">+<pos:position pos:line="29" pos:column="37"/></operator> <name pos:line="29" pos:column="38">parent_entry_len<pos:position pos:line="29" pos:column="54"/></name> <operator pos:line="29" pos:column="55">+<pos:position pos:line="29" pos:column="56"/></operator> <literal type="number" pos:line="29" pos:column="57">1<pos:position pos:line="29" pos:column="58"/></literal> <operator pos:line="29" pos:column="59">||<pos:position pos:line="29" pos:column="61"/></operator>
		    <call><name pos:line="30" pos:column="21">get_sha1_hex<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">bufptr<pos:position pos:line="30" pos:column="40"/></name> <operator pos:line="30" pos:column="41">+<pos:position pos:line="30" pos:column="42"/></operator> <literal type="number" pos:line="30" pos:column="43">7<pos:position pos:line="30" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="46">parent<pos:position pos:line="30" pos:column="52"/></name><operator pos:line="30" pos:column="52">.<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="53">hash<pos:position pos:line="30" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call> <operator pos:line="30" pos:column="59">||<pos:position pos:line="30" pos:column="61"/></operator>
		    <name><name pos:line="31" pos:column="21">bufptr<pos:position pos:line="31" pos:column="27"/></name><index pos:line="31" pos:column="27">[<expr><name pos:line="31" pos:column="28">parent_entry_len<pos:position pos:line="31" pos:column="44"/></name></expr>]<pos:position pos:line="31" pos:column="45"/></index></name> <operator pos:line="31" pos:column="46">!=<pos:position pos:line="31" pos:column="48"/></operator> <literal type="char" pos:line="31" pos:column="49">'\n'<pos:position pos:line="31" pos:column="53"/></literal></expr>)<pos:position pos:line="31" pos:column="54"/></condition><then pos:line="31" pos:column="54">
			<block type="pseudo"><return pos:line="32" pos:column="25">return <expr><call><name pos:line="32" pos:column="32">error<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><literal type="string" pos:line="32" pos:column="38">"bad parents in commit %s"<pos:position pos:line="32" pos:column="64"/></literal></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="66">sha1_to_hex<pos:position pos:line="32" pos:column="77"/></name><argument_list pos:line="32" pos:column="77">(<argument><expr><name><name pos:line="32" pos:column="78">item<pos:position pos:line="32" pos:column="82"/></name><operator pos:line="32" pos:column="82">-&gt;<pos:position pos:line="32" pos:column="87"/></operator><name pos:line="32" pos:column="84">object<pos:position pos:line="32" pos:column="90"/></name><operator pos:line="32" pos:column="90">.<pos:position pos:line="32" pos:column="91"/></operator><name pos:line="32" pos:column="91">sha1<pos:position pos:line="32" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="98"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="33" pos:column="17">bufptr<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">+=<pos:position pos:line="33" pos:column="26"/></operator> <name pos:line="33" pos:column="27">parent_entry_len<pos:position pos:line="33" pos:column="43"/></name> <operator pos:line="33" pos:column="44">+<pos:position pos:line="33" pos:column="45"/></operator> <literal type="number" pos:line="33" pos:column="46">1<pos:position pos:line="33" pos:column="47"/></literal></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
		<comment type="block" pos:line="34" pos:column="17">/*
		 * The clone is shallow if nr_parent &lt; 0, and we must
		 * not traverse its real parents even when we unhide them.
		 */</comment>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">graft<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">&amp;&amp;<pos:position pos:line="38" pos:column="37"/></operator> <operator pos:line="38" pos:column="30">(<pos:position pos:line="38" pos:column="31"/></operator><name><name pos:line="38" pos:column="31">graft<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">-&gt;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="38">nr_parent<pos:position pos:line="38" pos:column="47"/></name></name> <operator pos:line="38" pos:column="48">&lt;<pos:position pos:line="38" pos:column="52"/></operator> <literal type="number" pos:line="38" pos:column="50">0<pos:position pos:line="38" pos:column="51"/></literal> <operator pos:line="38" pos:column="52">||<pos:position pos:line="38" pos:column="54"/></operator> <name pos:line="38" pos:column="55">grafts_replace_parents<pos:position pos:line="38" pos:column="77"/></name><operator pos:line="38" pos:column="77">)<pos:position pos:line="38" pos:column="78"/></operator></expr>)<pos:position pos:line="38" pos:column="79"/></condition><then pos:line="38" pos:column="79">
			<block type="pseudo"><continue pos:line="39" pos:column="25">continue;<pos:position pos:line="39" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="40" pos:column="17">new_parent<pos:position pos:line="40" pos:column="27"/></name> <operator pos:line="40" pos:column="28">=<pos:position pos:line="40" pos:column="29"/></operator> <call><name pos:line="40" pos:column="30">lookup_commit<pos:position pos:line="40" pos:column="43"/></name><argument_list pos:line="40" pos:column="43">(<argument><expr><name><name pos:line="40" pos:column="44">parent<pos:position pos:line="40" pos:column="50"/></name><operator pos:line="40" pos:column="50">.<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="51">hash<pos:position pos:line="40" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">new_parent<pos:position pos:line="41" pos:column="31"/></name></expr>)<pos:position pos:line="41" pos:column="32"/></condition><then pos:line="41" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="25">pptr<pos:position pos:line="42" pos:column="29"/></name> <operator pos:line="42" pos:column="30">=<pos:position pos:line="42" pos:column="31"/></operator> <operator pos:line="42" pos:column="32">&amp;<pos:position pos:line="42" pos:column="37"/></operator><call><name pos:line="42" pos:column="33">commit_list_insert<pos:position pos:line="42" pos:column="51"/></name><argument_list pos:line="42" pos:column="51">(<argument><expr><name pos:line="42" pos:column="52">new_parent<pos:position pos:line="42" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="64">pptr<pos:position pos:line="42" pos:column="68"/></name></expr></argument>)<pos:position pos:line="42" pos:column="69"/></argument_list></call><operator pos:line="42" pos:column="69">-&gt;<pos:position pos:line="42" pos:column="74"/></operator><name pos:line="42" pos:column="71">next<pos:position pos:line="42" pos:column="75"/></name></expr>;<pos:position pos:line="42" pos:column="76"/></expr_stmt></block></then></if>
	}<pos:position pos:line="43" pos:column="10"/></block></while>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">graft<pos:position pos:line="44" pos:column="18"/></name></expr>)<pos:position pos:line="44" pos:column="19"/></condition><then pos:line="44" pos:column="19"> <block pos:line="44" pos:column="20">{
		<decl_stmt><decl><type><name pos:line="45" pos:column="17">int<pos:position pos:line="45" pos:column="20"/></name></type> <name pos:line="45" pos:column="21">i<pos:position pos:line="45" pos:column="22"/></name></decl>;<pos:position pos:line="45" pos:column="23"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="46" pos:column="17">struct<pos:position pos:line="46" pos:column="23"/></name> <name pos:line="46" pos:column="24">commit<pos:position pos:line="46" pos:column="30"/></name></name> <modifier pos:line="46" pos:column="31">*<pos:position pos:line="46" pos:column="32"/></modifier></type><name pos:line="46" pos:column="32">new_parent<pos:position pos:line="46" pos:column="42"/></name></decl>;<pos:position pos:line="46" pos:column="43"/></decl_stmt>
		<for pos:line="47" pos:column="17">for <control pos:line="47" pos:column="21">(<init><expr><name pos:line="47" pos:column="22">i<pos:position pos:line="47" pos:column="23"/></name> <operator pos:line="47" pos:column="24">=<pos:position pos:line="47" pos:column="25"/></operator> <literal type="number" pos:line="47" pos:column="26">0<pos:position pos:line="47" pos:column="27"/></literal></expr>;<pos:position pos:line="47" pos:column="28"/></init> <condition><expr><name pos:line="47" pos:column="29">i<pos:position pos:line="47" pos:column="30"/></name> <operator pos:line="47" pos:column="31">&lt;<pos:position pos:line="47" pos:column="35"/></operator> <name><name pos:line="47" pos:column="33">graft<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">-&gt;<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="40">nr_parent<pos:position pos:line="47" pos:column="49"/></name></name></expr>;<pos:position pos:line="47" pos:column="50"/></condition> <incr><expr><name pos:line="47" pos:column="51">i<pos:position pos:line="47" pos:column="52"/></name><operator pos:line="47" pos:column="52">++<pos:position pos:line="47" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="47" pos:column="55"/></control> <block pos:line="47" pos:column="56">{
			<expr_stmt><expr><name pos:line="48" pos:column="25">new_parent<pos:position pos:line="48" pos:column="35"/></name> <operator pos:line="48" pos:column="36">=<pos:position pos:line="48" pos:column="37"/></operator> <call><name pos:line="48" pos:column="38">lookup_commit<pos:position pos:line="48" pos:column="51"/></name><argument_list pos:line="48" pos:column="51">(<argument><expr><name><name pos:line="48" pos:column="52">graft<pos:position pos:line="48" pos:column="57"/></name><operator pos:line="48" pos:column="57">-&gt;<pos:position pos:line="48" pos:column="62"/></operator><name pos:line="48" pos:column="59">parent<pos:position pos:line="48" pos:column="65"/></name><index pos:line="48" pos:column="65">[<expr><name pos:line="48" pos:column="66">i<pos:position pos:line="48" pos:column="67"/></name></expr>]<pos:position pos:line="48" pos:column="68"/></index></name><operator pos:line="48" pos:column="68">.<pos:position pos:line="48" pos:column="69"/></operator><name pos:line="48" pos:column="69">hash<pos:position pos:line="48" pos:column="73"/></name></expr></argument>)<pos:position pos:line="48" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="75"/></expr_stmt>
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><operator pos:line="49" pos:column="29">!<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="30">new_parent<pos:position pos:line="49" pos:column="40"/></name></expr>)<pos:position pos:line="49" pos:column="41"/></condition><then pos:line="49" pos:column="41">
				<block type="pseudo"><continue pos:line="50" pos:column="33">continue;<pos:position pos:line="50" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="51" pos:column="25">pptr<pos:position pos:line="51" pos:column="29"/></name> <operator pos:line="51" pos:column="30">=<pos:position pos:line="51" pos:column="31"/></operator> <operator pos:line="51" pos:column="32">&amp;<pos:position pos:line="51" pos:column="37"/></operator><call><name pos:line="51" pos:column="33">commit_list_insert<pos:position pos:line="51" pos:column="51"/></name><argument_list pos:line="51" pos:column="51">(<argument><expr><name pos:line="51" pos:column="52">new_parent<pos:position pos:line="51" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="64">pptr<pos:position pos:line="51" pos:column="68"/></name></expr></argument>)<pos:position pos:line="51" pos:column="69"/></argument_list></call><operator pos:line="51" pos:column="69">-&gt;<pos:position pos:line="51" pos:column="74"/></operator><name pos:line="51" pos:column="71">next<pos:position pos:line="51" pos:column="75"/></name></expr>;<pos:position pos:line="51" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="52" pos:column="18"/></block></for>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="54" pos:column="9">item<pos:position pos:line="54" pos:column="13"/></name><operator pos:line="54" pos:column="13">-&gt;<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="15">date<pos:position pos:line="54" pos:column="19"/></name></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <call><name pos:line="54" pos:column="22">parse_commit_date<pos:position pos:line="54" pos:column="39"/></name><argument_list pos:line="54" pos:column="39">(<argument><expr><name pos:line="54" pos:column="40">bufptr<pos:position pos:line="54" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="48">tail<pos:position pos:line="54" pos:column="52"/></name></expr></argument>)<pos:position pos:line="54" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="54"/></expr_stmt>

	<return pos:line="56" pos:column="9">return <expr><literal type="number" pos:line="56" pos:column="16">0<pos:position pos:line="56" pos:column="17"/></literal></expr>;<pos:position pos:line="56" pos:column="18"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

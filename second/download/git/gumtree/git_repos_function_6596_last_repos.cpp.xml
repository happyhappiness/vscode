<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6596_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">gitbasename<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">path<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">base<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">path<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">skip_dos_drive_prefix<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><operator pos:line="6" pos:column="39">&amp;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="40">path<pos:position pos:line="6" pos:column="44"/></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="46"/></expr_stmt></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">path<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">||<pos:position pos:line="8" pos:column="21"/></operator> <operator pos:line="8" pos:column="22">!<pos:position pos:line="8" pos:column="23"/></operator><operator pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">path<pos:position pos:line="8" pos:column="28"/></name></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="string" pos:line="9" pos:column="24">"."<pos:position pos:line="9" pos:column="27"/></literal></expr>;<pos:position pos:line="9" pos:column="28"/></return></block></then></if>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">base<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">path<pos:position pos:line="11" pos:column="25"/></name></expr>;<pos:position pos:line="11" pos:column="26"/></init> <condition><expr><operator pos:line="11" pos:column="27">*<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">path<pos:position pos:line="11" pos:column="32"/></name></expr>;<pos:position pos:line="11" pos:column="33"/></condition> <incr><expr><name pos:line="11" pos:column="34">path<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">++<pos:position pos:line="11" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="41"/></control> <block pos:line="11" pos:column="42">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><call><name pos:line="12" pos:column="22">is_dir_sep<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><operator pos:line="12" pos:column="33">*<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="34">path<pos:position pos:line="12" pos:column="38"/></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40">
			<block type="pseudo"><continue pos:line="13" pos:column="25">continue;<pos:position pos:line="13" pos:column="34"/></continue></block></then></if>
		<do pos:line="14" pos:column="17">do <block pos:line="14" pos:column="20">{
			<expr_stmt><expr><name pos:line="15" pos:column="25">path<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">++<pos:position pos:line="15" pos:column="31"/></operator></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block> while <condition pos:line="16" pos:column="25">(<expr><call><name pos:line="16" pos:column="26">is_dir_sep<pos:position pos:line="16" pos:column="36"/></name><argument_list pos:line="16" pos:column="36">(<argument><expr><operator pos:line="16" pos:column="37">*<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="38">path<pos:position pos:line="16" pos:column="42"/></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="44"/></condition>;<pos:position pos:line="16" pos:column="45"/></do>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">*<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">path<pos:position pos:line="17" pos:column="26"/></name></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">base<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">=<pos:position pos:line="18" pos:column="31"/></operator> <name pos:line="18" pos:column="32">path<pos:position pos:line="18" pos:column="36"/></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt></block></then>
		<else pos:line="19" pos:column="17">else
			<block type="pseudo"><while pos:line="20" pos:column="25">while <condition pos:line="20" pos:column="31">(<expr><operator pos:line="20" pos:column="32">--<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">path<pos:position pos:line="20" pos:column="38"/></name> <operator pos:line="20" pos:column="39">!=<pos:position pos:line="20" pos:column="41"/></operator> <name pos:line="20" pos:column="42">base<pos:position pos:line="20" pos:column="46"/></name> <operator pos:line="20" pos:column="47">&amp;&amp;<pos:position pos:line="20" pos:column="57"/></operator> <call><name pos:line="20" pos:column="50">is_dir_sep<pos:position pos:line="20" pos:column="60"/></name><argument_list pos:line="20" pos:column="60">(<argument><expr><operator pos:line="20" pos:column="61">*<pos:position pos:line="20" pos:column="62"/></operator><name pos:line="20" pos:column="62">path<pos:position pos:line="20" pos:column="66"/></name></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="68"/></condition>
				<block type="pseudo"><expr_stmt><expr><operator pos:line="21" pos:column="33">*<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">path<pos:position pos:line="21" pos:column="38"/></name> <operator pos:line="21" pos:column="39">=<pos:position pos:line="21" pos:column="40"/></operator> <literal type="char" pos:line="21" pos:column="41">'\0'<pos:position pos:line="21" pos:column="45"/></literal></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt></block></while></block></else></if>
	}<pos:position pos:line="22" pos:column="10"/></block></for>
	<return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">char<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">*<pos:position pos:line="23" pos:column="23"/></operator><operator pos:line="23" pos:column="23">)<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">base<pos:position pos:line="23" pos:column="28"/></name></expr>;<pos:position pos:line="23" pos:column="29"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

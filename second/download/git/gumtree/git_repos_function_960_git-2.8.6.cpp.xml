<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_960_git-2.8.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">strbuf_add_wrapped_text<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">strbuf<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">buf<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">text<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">indent1<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">int<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">indent2<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">int<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">width<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">indent<pos:position pos:line="4" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="21">w<pos:position pos:line="4" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="24">assume_utf8<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><literal type="number" pos:line="4" pos:column="38">1<pos:position pos:line="4" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">bol<pos:position pos:line="5" pos:column="24"/></name></decl>, <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="27">space<pos:position pos:line="5" pos:column="32"/></name></decl>, <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="35">start<pos:position pos:line="5" pos:column="40"/></name> <init pos:line="5" pos:column="41">= <expr><name pos:line="5" pos:column="43">text<pos:position pos:line="5" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">orig_len<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name><name pos:line="6" pos:column="27">buf<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">-&gt;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="32">len<pos:position pos:line="6" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">width<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&lt;=<pos:position pos:line="8" pos:column="24"/></operator> <literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24"> <block pos:line="8" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">strbuf_add_indented_text<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name pos:line="9" pos:column="42">buf<pos:position pos:line="9" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="47">text<pos:position pos:line="9" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="53">indent1<pos:position pos:line="9" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="62">indent2<pos:position pos:line="9" pos:column="69"/></name></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="71"/></expr_stmt>
		<return pos:line="10" pos:column="17">return;<pos:position pos:line="10" pos:column="24"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

<label><name pos:line="13" pos:column="1">retry<pos:position pos:line="13" pos:column="6"/></name>:<pos:position pos:line="13" pos:column="7"/></label>
	<expr_stmt><expr><name pos:line="14" pos:column="9">bol<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="15">text<pos:position pos:line="14" pos:column="19"/></name></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">w<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">indent<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <name pos:line="15" pos:column="22">indent1<pos:position pos:line="15" pos:column="29"/></name></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">space<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">NULL<pos:position pos:line="16" pos:column="21"/></name></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">indent<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">&lt;<pos:position pos:line="17" pos:column="24"/></operator> <literal type="number" pos:line="17" pos:column="22">0<pos:position pos:line="17" pos:column="23"/></literal></expr>)<pos:position pos:line="17" pos:column="24"/></condition><then pos:line="17" pos:column="24"> <block pos:line="17" pos:column="25">{
		<expr_stmt><expr><name pos:line="18" pos:column="17">w<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <operator pos:line="18" pos:column="21">-<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">indent<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">space<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">text<pos:position pos:line="19" pos:column="29"/></name></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init pos:line="22" pos:column="14">;<pos:position pos:line="22" pos:column="15"/></init><condition pos:line="22" pos:column="15">;<pos:position pos:line="22" pos:column="16"/></condition><incr/>)<pos:position pos:line="22" pos:column="17"/></control> <block pos:line="22" pos:column="18">{
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">char<pos:position pos:line="23" pos:column="21"/></name></type> <name pos:line="23" pos:column="22">c<pos:position pos:line="23" pos:column="23"/></name></decl>;<pos:position pos:line="23" pos:column="24"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">size_t<pos:position pos:line="24" pos:column="23"/></name></type> <name pos:line="24" pos:column="24">skip<pos:position pos:line="24" pos:column="28"/></name></decl>;<pos:position pos:line="24" pos:column="29"/></decl_stmt>

		<while pos:line="26" pos:column="17">while <condition pos:line="26" pos:column="23">(<expr><operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">skip<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">=<pos:position pos:line="26" pos:column="31"/></operator> <call><name pos:line="26" pos:column="32">display_mode_esc_sequence_len<pos:position pos:line="26" pos:column="61"/></name><argument_list pos:line="26" pos:column="61">(<argument><expr><name pos:line="26" pos:column="62">text<pos:position pos:line="26" pos:column="66"/></name></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call><operator pos:line="26" pos:column="67">)<pos:position pos:line="26" pos:column="68"/></operator></expr>)<pos:position pos:line="26" pos:column="69"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="25">text<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">+=<pos:position pos:line="27" pos:column="32"/></operator> <name pos:line="27" pos:column="33">skip<pos:position pos:line="27" pos:column="37"/></name></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt></block></while>

		<expr_stmt><expr><name pos:line="29" pos:column="17">c<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <operator pos:line="29" pos:column="21">*<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">text<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">c<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">||<pos:position pos:line="30" pos:column="26"/></operator> <call><name pos:line="30" pos:column="27">isspace<pos:position pos:line="30" pos:column="34"/></name><argument_list pos:line="30" pos:column="34">(<argument><expr><name pos:line="30" pos:column="35">c<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="38"/></condition><then pos:line="30" pos:column="38"> <block pos:line="30" pos:column="39">{
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><name pos:line="31" pos:column="29">w<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">&lt;=<pos:position pos:line="31" pos:column="36"/></operator> <name pos:line="31" pos:column="34">width<pos:position pos:line="31" pos:column="39"/></name> <operator pos:line="31" pos:column="40">||<pos:position pos:line="31" pos:column="42"/></operator> <operator pos:line="31" pos:column="43">!<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="44">space<pos:position pos:line="31" pos:column="49"/></name></expr>)<pos:position pos:line="31" pos:column="50"/></condition><then pos:line="31" pos:column="50"> <block pos:line="31" pos:column="51">{
				<decl_stmt><decl><type><specifier pos:line="32" pos:column="33">const<pos:position pos:line="32" pos:column="38"/></specifier> <name pos:line="32" pos:column="39">char<pos:position pos:line="32" pos:column="43"/></name> <modifier pos:line="32" pos:column="44">*<pos:position pos:line="32" pos:column="45"/></modifier></type><name pos:line="32" pos:column="45">start<pos:position pos:line="32" pos:column="50"/></name> <init pos:line="32" pos:column="51">= <expr><name pos:line="32" pos:column="53">bol<pos:position pos:line="32" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="32" pos:column="57"/></decl_stmt>
				<if pos:line="33" pos:column="33">if <condition pos:line="33" pos:column="36">(<expr><operator pos:line="33" pos:column="37">!<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="38">c<pos:position pos:line="33" pos:column="39"/></name> <operator pos:line="33" pos:column="40">&amp;&amp;<pos:position pos:line="33" pos:column="50"/></operator> <name pos:line="33" pos:column="43">text<pos:position pos:line="33" pos:column="47"/></name> <operator pos:line="33" pos:column="48">==<pos:position pos:line="33" pos:column="50"/></operator> <name pos:line="33" pos:column="51">start<pos:position pos:line="33" pos:column="56"/></name></expr>)<pos:position pos:line="33" pos:column="57"/></condition><then pos:line="33" pos:column="57">
					<block type="pseudo"><return pos:line="34" pos:column="41">return;<pos:position pos:line="34" pos:column="48"/></return></block></then></if>
				<if pos:line="35" pos:column="33">if <condition pos:line="35" pos:column="36">(<expr><name pos:line="35" pos:column="37">space<pos:position pos:line="35" pos:column="42"/></name></expr>)<pos:position pos:line="35" pos:column="43"/></condition><then pos:line="35" pos:column="43">
					<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="41">start<pos:position pos:line="36" pos:column="46"/></name> <operator pos:line="36" pos:column="47">=<pos:position pos:line="36" pos:column="48"/></operator> <name pos:line="36" pos:column="49">space<pos:position pos:line="36" pos:column="54"/></name></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt></block></then>
				<else pos:line="37" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="41">strbuf_addchars<pos:position pos:line="38" pos:column="56"/></name><argument_list pos:line="38" pos:column="56">(<argument><expr><name pos:line="38" pos:column="57">buf<pos:position pos:line="38" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="38" pos:column="62">' '<pos:position pos:line="38" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="67">indent<pos:position pos:line="38" pos:column="73"/></name></expr></argument>)<pos:position pos:line="38" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="75"/></expr_stmt></block></else></if>
				<expr_stmt><expr><call><name pos:line="39" pos:column="33">strbuf_add<pos:position pos:line="39" pos:column="43"/></name><argument_list pos:line="39" pos:column="43">(<argument><expr><name pos:line="39" pos:column="44">buf<pos:position pos:line="39" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="49">start<pos:position pos:line="39" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="56">text<pos:position pos:line="39" pos:column="60"/></name> <operator pos:line="39" pos:column="61">-<pos:position pos:line="39" pos:column="62"/></operator> <name pos:line="39" pos:column="63">start<pos:position pos:line="39" pos:column="68"/></name></expr></argument>)<pos:position pos:line="39" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="70"/></expr_stmt>
				<if pos:line="40" pos:column="33">if <condition pos:line="40" pos:column="36">(<expr><operator pos:line="40" pos:column="37">!<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="38">c<pos:position pos:line="40" pos:column="39"/></name></expr>)<pos:position pos:line="40" pos:column="40"/></condition><then pos:line="40" pos:column="40">
					<block type="pseudo"><return pos:line="41" pos:column="41">return;<pos:position pos:line="41" pos:column="48"/></return></block></then></if>
				<expr_stmt><expr><name pos:line="42" pos:column="33">space<pos:position pos:line="42" pos:column="38"/></name> <operator pos:line="42" pos:column="39">=<pos:position pos:line="42" pos:column="40"/></operator> <name pos:line="42" pos:column="41">text<pos:position pos:line="42" pos:column="45"/></name></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>
				<if pos:line="43" pos:column="33">if <condition pos:line="43" pos:column="36">(<expr><name pos:line="43" pos:column="37">c<pos:position pos:line="43" pos:column="38"/></name> <operator pos:line="43" pos:column="39">==<pos:position pos:line="43" pos:column="41"/></operator> <literal type="char" pos:line="43" pos:column="42">'\t'<pos:position pos:line="43" pos:column="46"/></literal></expr>)<pos:position pos:line="43" pos:column="47"/></condition><then pos:line="43" pos:column="47">
					<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="41">w<pos:position pos:line="44" pos:column="42"/></name> <operator pos:line="44" pos:column="43">|=<pos:position pos:line="44" pos:column="45"/></operator> <literal type="number" pos:line="44" pos:column="46">0x07<pos:position pos:line="44" pos:column="50"/></literal></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt></block></then>
				<elseif pos:line="45" pos:column="33">else <if pos:line="45" pos:column="38">if <condition pos:line="45" pos:column="41">(<expr><name pos:line="45" pos:column="42">c<pos:position pos:line="45" pos:column="43"/></name> <operator pos:line="45" pos:column="44">==<pos:position pos:line="45" pos:column="46"/></operator> <literal type="char" pos:line="45" pos:column="47">'\n'<pos:position pos:line="45" pos:column="51"/></literal></expr>)<pos:position pos:line="45" pos:column="52"/></condition><then pos:line="45" pos:column="52"> <block pos:line="45" pos:column="53">{
					<expr_stmt><expr><name pos:line="46" pos:column="41">space<pos:position pos:line="46" pos:column="46"/></name><operator pos:line="46" pos:column="46">++<pos:position pos:line="46" pos:column="48"/></operator></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt>
					<if pos:line="47" pos:column="41">if <condition pos:line="47" pos:column="44">(<expr><operator pos:line="47" pos:column="45">*<pos:position pos:line="47" pos:column="46"/></operator><name pos:line="47" pos:column="46">space<pos:position pos:line="47" pos:column="51"/></name> <operator pos:line="47" pos:column="52">==<pos:position pos:line="47" pos:column="54"/></operator> <literal type="char" pos:line="47" pos:column="55">'\n'<pos:position pos:line="47" pos:column="59"/></literal></expr>)<pos:position pos:line="47" pos:column="60"/></condition><then pos:line="47" pos:column="60"> <block pos:line="47" pos:column="61">{
						<expr_stmt><expr><call><name pos:line="48" pos:column="49">strbuf_addch<pos:position pos:line="48" pos:column="61"/></name><argument_list pos:line="48" pos:column="61">(<argument><expr><name pos:line="48" pos:column="62">buf<pos:position pos:line="48" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="48" pos:column="67">'\n'<pos:position pos:line="48" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="73"/></expr_stmt>
						<goto pos:line="49" pos:column="49">goto <name pos:line="49" pos:column="54">new_line<pos:position pos:line="49" pos:column="62"/></name>;<pos:position pos:line="49" pos:column="63"/></goto>
					}<pos:position pos:line="50" pos:column="42"/></block></then>
					<elseif pos:line="51" pos:column="41">else <if pos:line="51" pos:column="46">if <condition pos:line="51" pos:column="49">(<expr><operator pos:line="51" pos:column="50">!<pos:position pos:line="51" pos:column="51"/></operator><call><name pos:line="51" pos:column="51">isalnum<pos:position pos:line="51" pos:column="58"/></name><argument_list pos:line="51" pos:column="58">(<argument><expr><operator pos:line="51" pos:column="59">*<pos:position pos:line="51" pos:column="60"/></operator><name pos:line="51" pos:column="60">space<pos:position pos:line="51" pos:column="65"/></name></expr></argument>)<pos:position pos:line="51" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="67"/></condition><then pos:line="51" pos:column="67">
						<block type="pseudo"><goto pos:line="52" pos:column="49">goto <name pos:line="52" pos:column="54">new_line<pos:position pos:line="52" pos:column="62"/></name>;<pos:position pos:line="52" pos:column="63"/></goto></block></then></if></elseif>
					<else pos:line="53" pos:column="41">else
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="49">strbuf_addch<pos:position pos:line="54" pos:column="61"/></name><argument_list pos:line="54" pos:column="61">(<argument><expr><name pos:line="54" pos:column="62">buf<pos:position pos:line="54" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="54" pos:column="67">' '<pos:position pos:line="54" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="72"/></expr_stmt></block></else></if>
				}<pos:position pos:line="55" pos:column="34"/></block></then></if></elseif></if>
				<expr_stmt><expr><name pos:line="56" pos:column="33">w<pos:position pos:line="56" pos:column="34"/></name><operator pos:line="56" pos:column="34">++<pos:position pos:line="56" pos:column="36"/></operator></expr>;<pos:position pos:line="56" pos:column="37"/></expr_stmt>
				<expr_stmt><expr><name pos:line="57" pos:column="33">text<pos:position pos:line="57" pos:column="37"/></name><operator pos:line="57" pos:column="37">++<pos:position pos:line="57" pos:column="39"/></operator></expr>;<pos:position pos:line="57" pos:column="40"/></expr_stmt>
			}<pos:position pos:line="58" pos:column="26"/></block></then>
			<else pos:line="59" pos:column="25">else <block pos:line="59" pos:column="30">{
<label><name pos:line="60" pos:column="1">new_line<pos:position pos:line="60" pos:column="9"/></name>:<pos:position pos:line="60" pos:column="10"/></label>
				<expr_stmt><expr><call><name pos:line="61" pos:column="33">strbuf_addch<pos:position pos:line="61" pos:column="45"/></name><argument_list pos:line="61" pos:column="45">(<argument><expr><name pos:line="61" pos:column="46">buf<pos:position pos:line="61" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="61" pos:column="51">'\n'<pos:position pos:line="61" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="57"/></expr_stmt>
				<expr_stmt><expr><name pos:line="62" pos:column="33">text<pos:position pos:line="62" pos:column="37"/></name> <operator pos:line="62" pos:column="38">=<pos:position pos:line="62" pos:column="39"/></operator> <name pos:line="62" pos:column="40">bol<pos:position pos:line="62" pos:column="43"/></name> <operator pos:line="62" pos:column="44">=<pos:position pos:line="62" pos:column="45"/></operator> <name pos:line="62" pos:column="46">space<pos:position pos:line="62" pos:column="51"/></name> <operator pos:line="62" pos:column="52">+<pos:position pos:line="62" pos:column="53"/></operator> <call><name pos:line="62" pos:column="54">isspace<pos:position pos:line="62" pos:column="61"/></name><argument_list pos:line="62" pos:column="61">(<argument><expr><operator pos:line="62" pos:column="62">*<pos:position pos:line="62" pos:column="63"/></operator><name pos:line="62" pos:column="63">space<pos:position pos:line="62" pos:column="68"/></name></expr></argument>)<pos:position pos:line="62" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="70"/></expr_stmt>
				<expr_stmt><expr><name pos:line="63" pos:column="33">space<pos:position pos:line="63" pos:column="38"/></name> <operator pos:line="63" pos:column="39">=<pos:position pos:line="63" pos:column="40"/></operator> <name pos:line="63" pos:column="41">NULL<pos:position pos:line="63" pos:column="45"/></name></expr>;<pos:position pos:line="63" pos:column="46"/></expr_stmt>
				<expr_stmt><expr><name pos:line="64" pos:column="33">w<pos:position pos:line="64" pos:column="34"/></name> <operator pos:line="64" pos:column="35">=<pos:position pos:line="64" pos:column="36"/></operator> <name pos:line="64" pos:column="37">indent<pos:position pos:line="64" pos:column="43"/></name> <operator pos:line="64" pos:column="44">=<pos:position pos:line="64" pos:column="45"/></operator> <name pos:line="64" pos:column="46">indent2<pos:position pos:line="64" pos:column="53"/></name></expr>;<pos:position pos:line="64" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="65" pos:column="26"/></block></else></if>
			<continue pos:line="66" pos:column="25">continue;<pos:position pos:line="66" pos:column="34"/></continue>
		}<pos:position pos:line="67" pos:column="18"/></block></then></if>
		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name pos:line="68" pos:column="21">assume_utf8<pos:position pos:line="68" pos:column="32"/></name></expr>)<pos:position pos:line="68" pos:column="33"/></condition><then pos:line="68" pos:column="33"> <block pos:line="68" pos:column="34">{
			<expr_stmt><expr><name pos:line="69" pos:column="25">w<pos:position pos:line="69" pos:column="26"/></name> <operator pos:line="69" pos:column="27">+=<pos:position pos:line="69" pos:column="29"/></operator> <call><name pos:line="69" pos:column="30">utf8_width<pos:position pos:line="69" pos:column="40"/></name><argument_list pos:line="69" pos:column="40">(<argument><expr><operator pos:line="69" pos:column="41">&amp;<pos:position pos:line="69" pos:column="46"/></operator><name pos:line="69" pos:column="42">text<pos:position pos:line="69" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="48">NULL<pos:position pos:line="69" pos:column="52"/></name></expr></argument>)<pos:position pos:line="69" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="54"/></expr_stmt>
			<if pos:line="70" pos:column="25">if <condition pos:line="70" pos:column="28">(<expr><operator pos:line="70" pos:column="29">!<pos:position pos:line="70" pos:column="30"/></operator><name pos:line="70" pos:column="30">text<pos:position pos:line="70" pos:column="34"/></name></expr>)<pos:position pos:line="70" pos:column="35"/></condition><then pos:line="70" pos:column="35"> <block pos:line="70" pos:column="36">{
				<expr_stmt><expr><name pos:line="71" pos:column="33">assume_utf8<pos:position pos:line="71" pos:column="44"/></name> <operator pos:line="71" pos:column="45">=<pos:position pos:line="71" pos:column="46"/></operator> <literal type="number" pos:line="71" pos:column="47">0<pos:position pos:line="71" pos:column="48"/></literal></expr>;<pos:position pos:line="71" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><name pos:line="72" pos:column="33">text<pos:position pos:line="72" pos:column="37"/></name> <operator pos:line="72" pos:column="38">=<pos:position pos:line="72" pos:column="39"/></operator> <name pos:line="72" pos:column="40">start<pos:position pos:line="72" pos:column="45"/></name></expr>;<pos:position pos:line="72" pos:column="46"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="73" pos:column="33">strbuf_setlen<pos:position pos:line="73" pos:column="46"/></name><argument_list pos:line="73" pos:column="46">(<argument><expr><name pos:line="73" pos:column="47">buf<pos:position pos:line="73" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="52">orig_len<pos:position pos:line="73" pos:column="60"/></name></expr></argument>)<pos:position pos:line="73" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="62"/></expr_stmt>
				<goto pos:line="74" pos:column="33">goto <name pos:line="74" pos:column="38">retry<pos:position pos:line="74" pos:column="43"/></name>;<pos:position pos:line="74" pos:column="44"/></goto>
			}<pos:position pos:line="75" pos:column="26"/></block></then></if>
		}<pos:position pos:line="76" pos:column="18"/></block></then> <else pos:line="76" pos:column="19">else <block pos:line="76" pos:column="24">{
			<expr_stmt><expr><name pos:line="77" pos:column="25">w<pos:position pos:line="77" pos:column="26"/></name><operator pos:line="77" pos:column="26">++<pos:position pos:line="77" pos:column="28"/></operator></expr>;<pos:position pos:line="77" pos:column="29"/></expr_stmt>
			<expr_stmt><expr><name pos:line="78" pos:column="25">text<pos:position pos:line="78" pos:column="29"/></name><operator pos:line="78" pos:column="29">++<pos:position pos:line="78" pos:column="31"/></operator></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>
		}<pos:position pos:line="79" pos:column="18"/></block></else></if>
	}<pos:position pos:line="80" pos:column="10"/></block></for>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

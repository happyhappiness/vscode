<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4533_git-2.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_object<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">object<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">obj<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">type<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">void<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">data<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="67">struct<pos:position pos:line="1" pos:column="73"/></name> <name pos:line="1" pos:column="74">fsck_options<pos:position pos:line="1" pos:column="86"/></name></name> <modifier pos:line="1" pos:column="87">*<pos:position pos:line="1" pos:column="88"/></modifier></type><name pos:line="1" pos:column="88">options<pos:position pos:line="1" pos:column="95"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="96"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">obj_buffer<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">obj_buf<pos:position pos:line="3" pos:column="35"/></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">obj<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">1<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">obj<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">flags<pos:position pos:line="8" pos:column="23"/></name></name> <operator pos:line="8" pos:column="24">&amp;<pos:position pos:line="8" pos:column="29"/></operator> <name pos:line="8" pos:column="26">FLAG_WRITTEN<pos:position pos:line="8" pos:column="38"/></name></expr>)<pos:position pos:line="8" pos:column="39"/></condition><then pos:line="8" pos:column="39">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">type<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">!=<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">OBJ_ANY<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">&amp;&amp;<pos:position pos:line="11" pos:column="39"/></operator> <name><name pos:line="11" pos:column="32">obj<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">type<pos:position pos:line="11" pos:column="41"/></name></name> <operator pos:line="11" pos:column="42">!=<pos:position pos:line="11" pos:column="44"/></operator> <name pos:line="11" pos:column="45">type<pos:position pos:line="11" pos:column="49"/></name></expr>)<pos:position pos:line="11" pos:column="50"/></condition><then pos:line="11" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">die<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><literal type="string" pos:line="12" pos:column="21">"object type mismatch"<pos:position pos:line="12" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><name><name pos:line="14" pos:column="15">obj<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">flags<pos:position pos:line="14" pos:column="25"/></name></name> <operator pos:line="14" pos:column="26">&amp;<pos:position pos:line="14" pos:column="31"/></operator> <name pos:line="14" pos:column="28">FLAG_OPEN<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">)<pos:position pos:line="14" pos:column="38"/></operator></expr>)<pos:position pos:line="14" pos:column="39"/></condition><then pos:line="14" pos:column="39"> <block pos:line="14" pos:column="40">{
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">unsigned<pos:position pos:line="15" pos:column="25"/></name> <name pos:line="15" pos:column="26">long<pos:position pos:line="15" pos:column="30"/></name></type> <name pos:line="15" pos:column="31">size<pos:position pos:line="15" pos:column="35"/></name></decl>;<pos:position pos:line="15" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">int<pos:position pos:line="16" pos:column="20"/></name></type> <name pos:line="16" pos:column="21">type<pos:position pos:line="16" pos:column="25"/></name> <init pos:line="16" pos:column="26">= <expr><call><name pos:line="16" pos:column="28">sha1_object_info<pos:position pos:line="16" pos:column="44"/></name><argument_list pos:line="16" pos:column="44">(<argument><expr><name><name pos:line="16" pos:column="45">obj<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">-&gt;<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="50">oid<pos:position pos:line="16" pos:column="53"/></name><operator pos:line="16" pos:column="53">.<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="54">hash<pos:position pos:line="16" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="60">&amp;<pos:position pos:line="16" pos:column="65"/></operator><name pos:line="16" pos:column="61">size<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="67"/></decl_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">type<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">!=<pos:position pos:line="17" pos:column="28"/></operator> <name><name pos:line="17" pos:column="29">obj<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">type<pos:position pos:line="17" pos:column="38"/></name></name> <operator pos:line="17" pos:column="39">||<pos:position pos:line="17" pos:column="41"/></operator> <name pos:line="17" pos:column="42">type<pos:position pos:line="17" pos:column="46"/></name> <operator pos:line="17" pos:column="47">&lt;=<pos:position pos:line="17" pos:column="52"/></operator> <literal type="number" pos:line="17" pos:column="50">0<pos:position pos:line="17" pos:column="51"/></literal></expr>)<pos:position pos:line="17" pos:column="52"/></condition><then pos:line="17" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="25">die<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><literal type="string" pos:line="18" pos:column="29">"object of unexpected type"<pos:position pos:line="18" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="58"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">obj<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">flags<pos:position pos:line="19" pos:column="27"/></name></name> <operator pos:line="19" pos:column="28">|=<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">FLAG_WRITTEN<pos:position pos:line="19" pos:column="43"/></name></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt>
		<return pos:line="20" pos:column="17">return <expr><literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="23" pos:column="9">obj_buf<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <call><name pos:line="23" pos:column="19">lookup_object_buffer<pos:position pos:line="23" pos:column="39"/></name><argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">obj<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">obj_buf<pos:position pos:line="24" pos:column="21"/></name></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">die<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><literal type="string" pos:line="25" pos:column="21">"Whoops! Cannot find object '%s'"<pos:position pos:line="25" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="56">oid_to_hex<pos:position pos:line="25" pos:column="66"/></name><argument_list pos:line="25" pos:column="66">(<argument><expr><operator pos:line="25" pos:column="67">&amp;<pos:position pos:line="25" pos:column="72"/></operator><name><name pos:line="25" pos:column="68">obj<pos:position pos:line="25" pos:column="71"/></name><operator pos:line="25" pos:column="71">-&gt;<pos:position pos:line="25" pos:column="76"/></operator><name pos:line="25" pos:column="73">oid<pos:position pos:line="25" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="79"/></expr_stmt></block></then></if>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">fsck_object<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">obj<pos:position pos:line="26" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="30">obj_buf<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">-&gt;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="39">buffer<pos:position pos:line="26" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="47">obj_buf<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">-&gt;<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="56">size<pos:position pos:line="26" pos:column="60"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="62">&amp;<pos:position pos:line="26" pos:column="67"/></operator><name pos:line="26" pos:column="63">fsck_options<pos:position pos:line="26" pos:column="75"/></name></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="77"/></condition><then pos:line="26" pos:column="77">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">die<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><literal type="string" pos:line="27" pos:column="21">"Error in object"<pos:position pos:line="27" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">fsck_options<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">.<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">walk<pos:position pos:line="28" pos:column="26"/></name></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="29">check_object<pos:position pos:line="28" pos:column="41"/></name></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><call><name pos:line="29" pos:column="13">fsck_walk<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">obj<pos:position pos:line="29" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="28">NULL<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="34">&amp;<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="35">fsck_options<pos:position pos:line="29" pos:column="47"/></name></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="49"/></condition><then pos:line="29" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="17">die<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><literal type="string" pos:line="30" pos:column="21">"Error on reachable objects of %s"<pos:position pos:line="30" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="57">oid_to_hex<pos:position pos:line="30" pos:column="67"/></name><argument_list pos:line="30" pos:column="67">(<argument><expr><operator pos:line="30" pos:column="68">&amp;<pos:position pos:line="30" pos:column="73"/></operator><name><name pos:line="30" pos:column="69">obj<pos:position pos:line="30" pos:column="72"/></name><operator pos:line="30" pos:column="72">-&gt;<pos:position pos:line="30" pos:column="77"/></operator><name pos:line="30" pos:column="74">oid<pos:position pos:line="30" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="80"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">write_cached_object<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><name pos:line="31" pos:column="29">obj<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">obj_buf<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt>
	<return pos:line="32" pos:column="9">return <expr><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>;<pos:position pos:line="32" pos:column="18"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3605_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">merge_changes<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">notes_merge_options<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">o<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="2" pos:column="26">struct<pos:position pos:line="2" pos:column="32"/></name> <name pos:line="2" pos:column="33">notes_merge_pair<pos:position pos:line="2" pos:column="49"/></name></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">changes<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">int<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">num_changes<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="3" pos:column="26">struct<pos:position pos:line="3" pos:column="32"/></name> <name pos:line="3" pos:column="33">notes_tree<pos:position pos:line="3" pos:column="43"/></name></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">t<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="47"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">conflicts<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><literal type="number" pos:line="5" pos:column="28">0<pos:position pos:line="5" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">trace_printf<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><literal type="string" pos:line="7" pos:column="22">"\tmerge_changes(num_changes = %i)\n"<pos:position pos:line="7" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="61">*<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="62">num_changes<pos:position pos:line="7" pos:column="73"/></name></expr></argument>)<pos:position pos:line="7" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="75"/></expr_stmt>
	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">i<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr>;<pos:position pos:line="8" pos:column="20"/></init> <condition><expr><name pos:line="8" pos:column="21">i<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&lt;<pos:position pos:line="8" pos:column="27"/></operator> <operator pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">num_changes<pos:position pos:line="8" pos:column="37"/></name></expr>;<pos:position pos:line="8" pos:column="38"/></condition> <incr><expr><name pos:line="8" pos:column="39">i<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">++<pos:position pos:line="8" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="43"/></control> <block pos:line="8" pos:column="44">{
		<decl_stmt><decl><type><name><name pos:line="9" pos:column="17">struct<pos:position pos:line="9" pos:column="23"/></name> <name pos:line="9" pos:column="24">notes_merge_pair<pos:position pos:line="9" pos:column="40"/></name></name> <modifier pos:line="9" pos:column="41">*<pos:position pos:line="9" pos:column="42"/></modifier></type><name pos:line="9" pos:column="42">p<pos:position pos:line="9" pos:column="43"/></name> <init pos:line="9" pos:column="44">= <expr><name pos:line="9" pos:column="46">changes<pos:position pos:line="9" pos:column="53"/></name> <operator pos:line="9" pos:column="54">+<pos:position pos:line="9" pos:column="55"/></operator> <name pos:line="9" pos:column="56">i<pos:position pos:line="9" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="58"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">trace_printf<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><literal type="string" pos:line="10" pos:column="30">"\t\t%.7s: %.7s -&gt; %.7s/%.7s\n"<pos:position pos:line="10" pos:column="64"/></literal></expr></argument>,
		       <argument><expr><call><name pos:line="11" pos:column="24">sha1_to_hex<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name><name pos:line="11" pos:column="36">p<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">obj<pos:position pos:line="11" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="45">sha1_to_hex<pos:position pos:line="11" pos:column="56"/></name><argument_list pos:line="11" pos:column="56">(<argument><expr><name><name pos:line="11" pos:column="57">p<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">-&gt;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="60">base<pos:position pos:line="11" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr></argument>,
		       <argument><expr><call><name pos:line="12" pos:column="24">sha1_to_hex<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name><name pos:line="12" pos:column="36">p<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">local<pos:position pos:line="12" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="47">sha1_to_hex<pos:position pos:line="12" pos:column="58"/></name><argument_list pos:line="12" pos:column="58">(<argument><expr><name><name pos:line="12" pos:column="59">p<pos:position pos:line="12" pos:column="60"/></name><operator pos:line="12" pos:column="60">-&gt;<pos:position pos:line="12" pos:column="65"/></operator><name pos:line="12" pos:column="62">remote<pos:position pos:line="12" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><call><name pos:line="14" pos:column="22">hashcmp<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name><name pos:line="14" pos:column="30">p<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">base<pos:position pos:line="14" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="39">p<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">-&gt;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="42">remote<pos:position pos:line="14" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="50"/></condition><then pos:line="14" pos:column="50"> <block pos:line="14" pos:column="51">{
			<comment type="block" pos:line="15" pos:column="25">/* no remote change; nothing to do */</comment>
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">trace_printf<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><literal type="string" pos:line="16" pos:column="38">"\t\t\tskipping (no remote change)\n"<pos:position pos:line="16" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="77"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></then> <elseif pos:line="17" pos:column="19">else <if pos:line="17" pos:column="24">if <condition pos:line="17" pos:column="27">(<expr><operator pos:line="17" pos:column="28">!<pos:position pos:line="17" pos:column="29"/></operator><call><name pos:line="17" pos:column="29">hashcmp<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name><name pos:line="17" pos:column="37">p<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">-&gt;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="40">local<pos:position pos:line="17" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="47">p<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">-&gt;<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="50">remote<pos:position pos:line="17" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="58"/></condition><then pos:line="17" pos:column="58"> <block pos:line="17" pos:column="59">{
			<comment type="block" pos:line="18" pos:column="25">/* same change in local and remote; nothing to do */</comment>
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">trace_printf<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><literal type="string" pos:line="19" pos:column="38">"\t\t\tskipping (local == remote)\n"<pos:position pos:line="19" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if></elseif> <elseif pos:line="20" pos:column="19">else <if pos:line="20" pos:column="24">if <condition pos:line="20" pos:column="27">(<expr><operator pos:line="20" pos:column="28">!<pos:position pos:line="20" pos:column="29"/></operator><call><name pos:line="20" pos:column="29">hashcmp<pos:position pos:line="20" pos:column="36"/></name><argument_list pos:line="20" pos:column="36">(<argument><expr><name><name pos:line="20" pos:column="37">p<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">-&gt;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="40">local<pos:position pos:line="20" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="47">uninitialized<pos:position pos:line="20" pos:column="60"/></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call> <operator pos:line="20" pos:column="62">||<pos:position pos:line="20" pos:column="64"/></operator>
			   <operator pos:line="21" pos:column="28">!<pos:position pos:line="21" pos:column="29"/></operator><call><name pos:line="21" pos:column="29">hashcmp<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><name><name pos:line="21" pos:column="37">p<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">-&gt;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="40">local<pos:position pos:line="21" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="47">p<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">-&gt;<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="50">base<pos:position pos:line="21" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="56"/></condition><then pos:line="21" pos:column="56"> <block pos:line="21" pos:column="57">{
			<comment type="block" pos:line="22" pos:column="25">/* no local change; adopt remote change */</comment>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">trace_printf<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><literal type="string" pos:line="23" pos:column="38">"\t\t\tno local change, adopted remote\n"<pos:position pos:line="23" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="81"/></expr_stmt>
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><call><name pos:line="24" pos:column="29">add_note<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">t<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="41">p<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">-&gt;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="44">obj<pos:position pos:line="24" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="49">p<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">-&gt;<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="52">remote<pos:position pos:line="24" pos:column="58"/></name></name></expr></argument>,
				     <argument><expr><name pos:line="25" pos:column="38">combine_notes_overwrite<pos:position pos:line="25" pos:column="61"/></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="63"/></condition><then pos:line="25" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="33">die<pos:position pos:line="26" pos:column="36"/></name><argument_list pos:line="26" pos:column="36">(<argument><expr><literal type="string" pos:line="26" pos:column="37">"BUG: combine_notes_overwrite failed"<pos:position pos:line="26" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="76"/></expr_stmt></block></then></if>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if></elseif> <else pos:line="27" pos:column="19">else <block pos:line="27" pos:column="24">{
			<comment type="block" pos:line="28" pos:column="25">/* need file-level merge between local and remote */</comment>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">trace_printf<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><literal type="string" pos:line="29" pos:column="38">"\t\t\tneed content-level merge\n"<pos:position pos:line="29" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><name pos:line="30" pos:column="25">conflicts<pos:position pos:line="30" pos:column="34"/></name> <operator pos:line="30" pos:column="35">+=<pos:position pos:line="30" pos:column="37"/></operator> <call><name pos:line="30" pos:column="38">merge_one_change<pos:position pos:line="30" pos:column="54"/></name><argument_list pos:line="30" pos:column="54">(<argument><expr><name pos:line="30" pos:column="55">o<pos:position pos:line="30" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">p<pos:position pos:line="30" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="61">t<pos:position pos:line="30" pos:column="62"/></name></expr></argument>)<pos:position pos:line="30" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></else></if>
	}<pos:position pos:line="32" pos:column="10"/></block></for>

	<return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">conflicts<pos:position pos:line="34" pos:column="25"/></name></expr>;<pos:position pos:line="34" pos:column="26"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

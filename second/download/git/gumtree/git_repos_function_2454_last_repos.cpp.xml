<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2454_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">within_depth<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><specifier pos:line="1" pos:column="18">const<pos:position pos:line="1" pos:column="23"/></specifier> <name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">name<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">namelen<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">depth<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">int<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">max_depth<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">cp<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">name<pos:position pos:line="4" pos:column="30"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="33">cpe<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><name pos:line="4" pos:column="39">name<pos:position pos:line="4" pos:column="43"/></name> <operator pos:line="4" pos:column="44">+<pos:position pos:line="4" pos:column="45"/></operator> <name pos:line="4" pos:column="46">namelen<pos:position pos:line="4" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><name pos:line="6" pos:column="16">cp<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&lt;<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="21">cpe<pos:position pos:line="6" pos:column="24"/></name></expr>)<pos:position pos:line="6" pos:column="25"/></condition> <block pos:line="6" pos:column="26">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">cp<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">++<pos:position pos:line="7" pos:column="26"/></operator> <operator pos:line="7" pos:column="27">!=<pos:position pos:line="7" pos:column="29"/></operator> <literal type="char" pos:line="7" pos:column="30">'/'<pos:position pos:line="7" pos:column="33"/></literal></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34">
			<block type="pseudo"><continue pos:line="8" pos:column="25">continue;<pos:position pos:line="8" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="9" pos:column="17">depth<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">++<pos:position pos:line="9" pos:column="24"/></operator></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">depth<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">&gt;<pos:position pos:line="10" pos:column="31"/></operator> <name pos:line="10" pos:column="29">max_depth<pos:position pos:line="10" pos:column="38"/></name></expr>)<pos:position pos:line="10" pos:column="39"/></condition><then pos:line="10" pos:column="39">
			<block type="pseudo"><return pos:line="11" pos:column="25">return <expr><literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal></expr>;<pos:position pos:line="11" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="12" pos:column="10"/></block></while>
	<return pos:line="13" pos:column="9">return <expr><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

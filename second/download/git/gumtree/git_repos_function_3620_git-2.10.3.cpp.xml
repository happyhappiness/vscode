<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3620_git-2.10.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_treeish_arg<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">argv<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">archiver_args<pos:position pos:line="2" pos:column="37"/></name></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">ar_args<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier> <name pos:line="2" pos:column="54">char<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">prefix<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">int<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">remote<pos:position pos:line="3" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="28"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">name<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">argv<pos:position pos:line="5" pos:column="32"/></name><index pos:line="5" pos:column="32">[<expr><literal type="number" pos:line="5" pos:column="33">0<pos:position pos:line="5" pos:column="34"/></literal></expr>]<pos:position pos:line="5" pos:column="35"/></index></name></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">unsigned<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">char<pos:position pos:line="6" pos:column="28"/></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">commit_sha1<pos:position pos:line="6" pos:column="41"/></name></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">time_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">archive_time<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">tree<pos:position pos:line="8" pos:column="20"/></name></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">tree<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name><name pos:line="9" pos:column="15">struct<pos:position pos:line="9" pos:column="21"/></name> <name pos:line="9" pos:column="22">commit<pos:position pos:line="9" pos:column="28"/></name></name> <modifier pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></modifier></type><name pos:line="9" pos:column="30">commit<pos:position pos:line="9" pos:column="36"/></name></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">object_id<pos:position pos:line="10" pos:column="25"/></name></name></type> <name pos:line="10" pos:column="26">oid<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>

	<comment type="block" pos:line="12" pos:column="9">/* Remotes are only allowed to fetch actual refs */</comment>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">remote<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">&amp;&amp;<pos:position pos:line="13" pos:column="30"/></operator> <operator pos:line="13" pos:column="23">!<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">remote_allow_unreachable<pos:position pos:line="13" pos:column="48"/></name></expr>)<pos:position pos:line="13" pos:column="49"/></condition><then pos:line="13" pos:column="49"> <block pos:line="13" pos:column="50">{
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">char<pos:position pos:line="14" pos:column="21"/></name> <modifier pos:line="14" pos:column="22">*<pos:position pos:line="14" pos:column="23"/></modifier></type><name pos:line="14" pos:column="23">ref<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><name pos:line="14" pos:column="29">NULL<pos:position pos:line="14" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="15" pos:column="17">const<pos:position pos:line="15" pos:column="22"/></specifier> <name pos:line="15" pos:column="23">char<pos:position pos:line="15" pos:column="27"/></name> <modifier pos:line="15" pos:column="28">*<pos:position pos:line="15" pos:column="29"/></modifier></type><name pos:line="15" pos:column="29">colon<pos:position pos:line="15" pos:column="34"/></name> <init pos:line="15" pos:column="35">= <expr><call><name pos:line="15" pos:column="37">strchrnul<pos:position pos:line="15" pos:column="46"/></name><argument_list pos:line="15" pos:column="46">(<argument><expr><name pos:line="15" pos:column="47">name<pos:position pos:line="15" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="53">':'<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="58"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">int<pos:position pos:line="16" pos:column="20"/></name></type> <name pos:line="16" pos:column="21">refnamelen<pos:position pos:line="16" pos:column="31"/></name> <init pos:line="16" pos:column="32">= <expr><name pos:line="16" pos:column="34">colon<pos:position pos:line="16" pos:column="39"/></name> <operator pos:line="16" pos:column="40">-<pos:position pos:line="16" pos:column="41"/></operator> <name pos:line="16" pos:column="42">name<pos:position pos:line="16" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="47"/></decl_stmt>

		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><call><name pos:line="18" pos:column="22">dwim_ref<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">name<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="37">refnamelen<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="49">oid<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">.<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="53">hash<pos:position pos:line="18" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="59">&amp;<pos:position pos:line="18" pos:column="64"/></operator><name pos:line="18" pos:column="60">ref<pos:position pos:line="18" pos:column="63"/></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="65"/></condition><then pos:line="18" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">die<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><literal type="string" pos:line="19" pos:column="29">"no such ref: %.*s"<pos:position pos:line="19" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">refnamelen<pos:position pos:line="19" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="62">name<pos:position pos:line="19" pos:column="66"/></name></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">free<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">ref<pos:position pos:line="20" pos:column="25"/></name></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">get_sha1<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">name<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="28">oid<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">.<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">hash<pos:position pos:line="23" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="38"/></condition><then pos:line="23" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">die<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><literal type="string" pos:line="24" pos:column="21">"Not a valid object name"<pos:position pos:line="24" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="48"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="26" pos:column="9">commit<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <call><name pos:line="26" pos:column="18">lookup_commit_reference_gently<pos:position pos:line="26" pos:column="48"/></name><argument_list pos:line="26" pos:column="48">(<argument><expr><name><name pos:line="26" pos:column="49">oid<pos:position pos:line="26" pos:column="52"/></name><operator pos:line="26" pos:column="52">.<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="53">hash<pos:position pos:line="26" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="59">1<pos:position pos:line="26" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="62"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">commit<pos:position pos:line="27" pos:column="19"/></name></expr>)<pos:position pos:line="27" pos:column="20"/></condition><then pos:line="27" pos:column="20"> <block pos:line="27" pos:column="21">{
		<expr_stmt><expr><name pos:line="28" pos:column="17">commit_sha1<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <name><name pos:line="28" pos:column="31">commit<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">-&gt;<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="39">object<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">.<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="46">oid<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">.<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="50">hash<pos:position pos:line="28" pos:column="54"/></name></name></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">archive_time<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <name><name pos:line="29" pos:column="32">commit<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">-&gt;<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="40">date<pos:position pos:line="29" pos:column="44"/></name></name></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></then> <else pos:line="30" pos:column="11">else <block pos:line="30" pos:column="16">{
		<expr_stmt><expr><name pos:line="31" pos:column="17">commit_sha1<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <name pos:line="31" pos:column="31">NULL<pos:position pos:line="31" pos:column="35"/></name></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name pos:line="32" pos:column="17">archive_time<pos:position pos:line="32" pos:column="29"/></name> <operator pos:line="32" pos:column="30">=<pos:position pos:line="32" pos:column="31"/></operator> <call><name pos:line="32" pos:column="32">time<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><name pos:line="32" pos:column="37">NULL<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="35" pos:column="9">tree<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <call><name pos:line="35" pos:column="16">parse_tree_indirect<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name><name pos:line="35" pos:column="36">oid<pos:position pos:line="35" pos:column="39"/></name><operator pos:line="35" pos:column="39">.<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="40">hash<pos:position pos:line="35" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">tree<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">==<pos:position pos:line="36" pos:column="20"/></operator> <name pos:line="36" pos:column="21">NULL<pos:position pos:line="36" pos:column="25"/></name></expr>)<pos:position pos:line="36" pos:column="26"/></condition><then pos:line="36" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="17">die<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><literal type="string" pos:line="37" pos:column="21">"not a tree object"<pos:position pos:line="37" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="42"/></expr_stmt></block></then></if>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">prefix<pos:position pos:line="39" pos:column="19"/></name></expr>)<pos:position pos:line="39" pos:column="20"/></condition><then pos:line="39" pos:column="20"> <block pos:line="39" pos:column="21">{
		<decl_stmt><decl><type><name><name pos:line="40" pos:column="17">struct<pos:position pos:line="40" pos:column="23"/></name> <name pos:line="40" pos:column="24">object_id<pos:position pos:line="40" pos:column="33"/></name></name></type> <name pos:line="40" pos:column="34">tree_oid<pos:position pos:line="40" pos:column="42"/></name></decl>;<pos:position pos:line="40" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="41" pos:column="17">unsigned<pos:position pos:line="41" pos:column="25"/></name> <name pos:line="41" pos:column="26">int<pos:position pos:line="41" pos:column="29"/></name></type> <name pos:line="41" pos:column="30">mode<pos:position pos:line="41" pos:column="34"/></name></decl>;<pos:position pos:line="41" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="42" pos:column="17">int<pos:position pos:line="42" pos:column="20"/></name></type> <name pos:line="42" pos:column="21">err<pos:position pos:line="42" pos:column="24"/></name></decl>;<pos:position pos:line="42" pos:column="25"/></decl_stmt>

		<expr_stmt><expr><name pos:line="44" pos:column="17">err<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <call><name pos:line="44" pos:column="23">get_tree_entry<pos:position pos:line="44" pos:column="37"/></name><argument_list pos:line="44" pos:column="37">(<argument><expr><name><name pos:line="44" pos:column="38">tree<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">-&gt;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="44">object<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">.<pos:position pos:line="44" pos:column="51"/></operator><name pos:line="44" pos:column="51">oid<pos:position pos:line="44" pos:column="54"/></name><operator pos:line="44" pos:column="54">.<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="55">hash<pos:position pos:line="44" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="61">prefix<pos:position pos:line="44" pos:column="67"/></name></expr></argument>,
				     <argument><expr><name><name pos:line="45" pos:column="38">tree_oid<pos:position pos:line="45" pos:column="46"/></name><operator pos:line="45" pos:column="46">.<pos:position pos:line="45" pos:column="47"/></operator><name pos:line="45" pos:column="47">hash<pos:position pos:line="45" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="53">&amp;<pos:position pos:line="45" pos:column="58"/></operator><name pos:line="45" pos:column="54">mode<pos:position pos:line="45" pos:column="58"/></name></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="60"/></expr_stmt>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">err<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">||<pos:position pos:line="46" pos:column="27"/></operator> <operator pos:line="46" pos:column="28">!<pos:position pos:line="46" pos:column="29"/></operator><call><name pos:line="46" pos:column="29">S_ISDIR<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><name pos:line="46" pos:column="37">mode<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="43"/></condition><then pos:line="46" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="25">die<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><literal type="string" pos:line="47" pos:column="29">"current working directory is untracked"<pos:position pos:line="47" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="71"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="49" pos:column="17">tree<pos:position pos:line="49" pos:column="21"/></name> <operator pos:line="49" pos:column="22">=<pos:position pos:line="49" pos:column="23"/></operator> <call><name pos:line="49" pos:column="24">parse_tree_indirect<pos:position pos:line="49" pos:column="43"/></name><argument_list pos:line="49" pos:column="43">(<argument><expr><name><name pos:line="49" pos:column="44">tree_oid<pos:position pos:line="49" pos:column="52"/></name><operator pos:line="49" pos:column="52">.<pos:position pos:line="49" pos:column="53"/></operator><name pos:line="49" pos:column="53">hash<pos:position pos:line="49" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="50" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="51" pos:column="9">ar_args<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">-&gt;<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="18">tree<pos:position pos:line="51" pos:column="22"/></name></name> <operator pos:line="51" pos:column="23">=<pos:position pos:line="51" pos:column="24"/></operator> <name pos:line="51" pos:column="25">tree<pos:position pos:line="51" pos:column="29"/></name></expr>;<pos:position pos:line="51" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="52" pos:column="9">ar_args<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">-&gt;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="18">commit_sha1<pos:position pos:line="52" pos:column="29"/></name></name> <operator pos:line="52" pos:column="30">=<pos:position pos:line="52" pos:column="31"/></operator> <name pos:line="52" pos:column="32">commit_sha1<pos:position pos:line="52" pos:column="43"/></name></expr>;<pos:position pos:line="52" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="53" pos:column="9">ar_args<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">-&gt;<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="18">commit<pos:position pos:line="53" pos:column="24"/></name></name> <operator pos:line="53" pos:column="25">=<pos:position pos:line="53" pos:column="26"/></operator> <name pos:line="53" pos:column="27">commit<pos:position pos:line="53" pos:column="33"/></name></expr>;<pos:position pos:line="53" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="54" pos:column="9">ar_args<pos:position pos:line="54" pos:column="16"/></name><operator pos:line="54" pos:column="16">-&gt;<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="18">time<pos:position pos:line="54" pos:column="22"/></name></name> <operator pos:line="54" pos:column="23">=<pos:position pos:line="54" pos:column="24"/></operator> <name pos:line="54" pos:column="25">archive_time<pos:position pos:line="54" pos:column="37"/></name></expr>;<pos:position pos:line="54" pos:column="38"/></expr_stmt>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

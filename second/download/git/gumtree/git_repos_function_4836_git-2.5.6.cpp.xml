<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4836_git-2.5.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_aliased_update<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">command<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">cmd<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="55">struct<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">string_list<pos:position pos:line="1" pos:column="73"/></name></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">list<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">buf<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">STRBUF_INIT<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">dst_name<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">string_list_item<pos:position pos:line="5" pos:column="32"/></name></name> <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></type><name pos:line="5" pos:column="34">item<pos:position pos:line="5" pos:column="38"/></name></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">command<pos:position pos:line="6" pos:column="23"/></name></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">dst_cmd<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">char<pos:position pos:line="7" pos:column="22"/></name></type> <name><name pos:line="7" pos:column="23">sha1<pos:position pos:line="7" pos:column="27"/></name><index pos:line="7" pos:column="27">[<expr><literal type="number" pos:line="7" pos:column="28">20<pos:position pos:line="7" pos:column="30"/></literal></expr>]<pos:position pos:line="7" pos:column="31"/></index></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">cmd_oldh<pos:position pos:line="8" pos:column="22"/></name><index pos:line="8" pos:column="22">[<expr><literal type="number" pos:line="8" pos:column="23">41<pos:position pos:line="8" pos:column="25"/></literal></expr>]<pos:position pos:line="8" pos:column="26"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="8" pos:column="28">cmd_newh<pos:position pos:line="8" pos:column="36"/></name><index pos:line="8" pos:column="36">[<expr><literal type="number" pos:line="8" pos:column="37">41<pos:position pos:line="8" pos:column="39"/></literal></expr>]<pos:position pos:line="8" pos:column="40"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="8" pos:column="42">dst_oldh<pos:position pos:line="8" pos:column="50"/></name><index pos:line="8" pos:column="50">[<expr><literal type="number" pos:line="8" pos:column="51">41<pos:position pos:line="8" pos:column="53"/></literal></expr>]<pos:position pos:line="8" pos:column="54"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="8" pos:column="56">dst_newh<pos:position pos:line="8" pos:column="64"/></name><index pos:line="8" pos:column="64">[<expr><literal type="number" pos:line="8" pos:column="65">41<pos:position pos:line="8" pos:column="67"/></literal></expr>]<pos:position pos:line="8" pos:column="68"/></index></name></decl>;<pos:position pos:line="8" pos:column="69"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">flag<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">strbuf_addf<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><operator pos:line="11" pos:column="21">&amp;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="22">buf<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="27">"%s%s"<pos:position pos:line="11" pos:column="33"/></literal></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="35">get_git_namespace<pos:position pos:line="11" pos:column="52"/></name><argument_list pos:line="11" pos:column="52">()<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="56">cmd<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">-&gt;<pos:position pos:line="11" pos:column="64"/></operator><name pos:line="11" pos:column="61">ref_name<pos:position pos:line="11" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">dst_name<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <call><name pos:line="12" pos:column="20">resolve_ref_unsafe<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><name><name pos:line="12" pos:column="39">buf<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">.<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="43">buf<pos:position pos:line="12" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="48">0<pos:position pos:line="12" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="51">sha1<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="57">&amp;<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="58">flag<pos:position pos:line="12" pos:column="62"/></name></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">strbuf_release<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><operator pos:line="13" pos:column="24">&amp;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="25">buf<pos:position pos:line="13" pos:column="28"/></name></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">flag<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">&amp;<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="22">REF_ISSYMREF<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">)<pos:position pos:line="15" pos:column="35"/></operator></expr>)<pos:position pos:line="15" pos:column="36"/></condition><then pos:line="15" pos:column="36">
		<block type="pseudo"><return pos:line="16" pos:column="17">return;<pos:position pos:line="16" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="18" pos:column="9">dst_name<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <call><name pos:line="18" pos:column="20">strip_namespace<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">dst_name<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">dst_name<pos:position pos:line="19" pos:column="22"/></name></expr>)<pos:position pos:line="19" pos:column="23"/></condition><then pos:line="19" pos:column="23"> <block pos:line="19" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">rp_error<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><literal type="string" pos:line="20" pos:column="26">"refusing update to broken symref '%s'"<pos:position pos:line="20" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="67">cmd<pos:position pos:line="20" pos:column="70"/></name><operator pos:line="20" pos:column="70">-&gt;<pos:position pos:line="20" pos:column="75"/></operator><name pos:line="20" pos:column="72">ref_name<pos:position pos:line="20" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="82"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">cmd<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">skip_update<pos:position pos:line="21" pos:column="33"/></name></name> <operator pos:line="21" pos:column="34">=<pos:position pos:line="21" pos:column="35"/></operator> <literal type="number" pos:line="21" pos:column="36">1<pos:position pos:line="21" pos:column="37"/></literal></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="22" pos:column="17">cmd<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">-&gt;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="22">error_string<pos:position pos:line="22" pos:column="34"/></name></name> <operator pos:line="22" pos:column="35">=<pos:position pos:line="22" pos:column="36"/></operator> <literal type="string" pos:line="22" pos:column="37">"broken symref"<pos:position pos:line="22" pos:column="52"/></literal></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>
		<return pos:line="23" pos:column="17">return;<pos:position pos:line="23" pos:column="24"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">(<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">item<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <call><name pos:line="26" pos:column="21">string_list_lookup<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><name pos:line="26" pos:column="40">list<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="46">dst_name<pos:position pos:line="26" pos:column="54"/></name></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call><operator pos:line="26" pos:column="55">)<pos:position pos:line="26" pos:column="56"/></operator> <operator pos:line="26" pos:column="57">==<pos:position pos:line="26" pos:column="59"/></operator> <name pos:line="26" pos:column="60">NULL<pos:position pos:line="26" pos:column="64"/></name></expr>)<pos:position pos:line="26" pos:column="65"/></condition><then pos:line="26" pos:column="65">
		<block type="pseudo"><return pos:line="27" pos:column="17">return;<pos:position pos:line="27" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name><name pos:line="29" pos:column="9">cmd<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">skip_update<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <literal type="number" pos:line="29" pos:column="28">1<pos:position pos:line="29" pos:column="29"/></literal></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><name pos:line="31" pos:column="9">dst_cmd<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <operator pos:line="31" pos:column="19">(<pos:position pos:line="31" pos:column="20"/></operator>struct <name pos:line="31" pos:column="27">command<pos:position pos:line="31" pos:column="34"/></name> <operator pos:line="31" pos:column="35">*<pos:position pos:line="31" pos:column="36"/></operator><operator pos:line="31" pos:column="36">)<pos:position pos:line="31" pos:column="37"/></operator> <name><name pos:line="31" pos:column="38">item<pos:position pos:line="31" pos:column="42"/></name><operator pos:line="31" pos:column="42">-&gt;<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="44">util<pos:position pos:line="31" pos:column="48"/></name></name></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><call><name pos:line="33" pos:column="14">hashcmp<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name><name pos:line="33" pos:column="22">cmd<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">-&gt;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="27">old_sha1<pos:position pos:line="33" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="37">dst_cmd<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">-&gt;<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="46">old_sha1<pos:position pos:line="33" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call> <operator pos:line="33" pos:column="56">&amp;&amp;<pos:position pos:line="33" pos:column="66"/></operator>
	    <operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><call><name pos:line="34" pos:column="14">hashcmp<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name><name pos:line="34" pos:column="22">cmd<pos:position pos:line="34" pos:column="25"/></name><operator pos:line="34" pos:column="25">-&gt;<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="27">new_sha1<pos:position pos:line="34" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="37">dst_cmd<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">-&gt;<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="46">new_sha1<pos:position pos:line="34" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="56"/></condition><then pos:line="34" pos:column="56">
		<block type="pseudo"><return pos:line="35" pos:column="17">return;<pos:position pos:line="35" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name><name pos:line="37" pos:column="9">dst_cmd<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">skip_update<pos:position pos:line="37" pos:column="29"/></name></name> <operator pos:line="37" pos:column="30">=<pos:position pos:line="37" pos:column="31"/></operator> <literal type="number" pos:line="37" pos:column="32">1<pos:position pos:line="37" pos:column="33"/></literal></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="39" pos:column="9">strcpy<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><name pos:line="39" pos:column="16">cmd_oldh<pos:position pos:line="39" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="26">find_unique_abbrev<pos:position pos:line="39" pos:column="44"/></name><argument_list pos:line="39" pos:column="44">(<argument><expr><name><name pos:line="39" pos:column="45">cmd<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">-&gt;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="50">old_sha1<pos:position pos:line="39" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="60">DEFAULT_ABBREV<pos:position pos:line="39" pos:column="74"/></name></expr></argument>)<pos:position pos:line="39" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="77"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">strcpy<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><name pos:line="40" pos:column="16">cmd_newh<pos:position pos:line="40" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="26">find_unique_abbrev<pos:position pos:line="40" pos:column="44"/></name><argument_list pos:line="40" pos:column="44">(<argument><expr><name><name pos:line="40" pos:column="45">cmd<pos:position pos:line="40" pos:column="48"/></name><operator pos:line="40" pos:column="48">-&gt;<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="50">new_sha1<pos:position pos:line="40" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="60">DEFAULT_ABBREV<pos:position pos:line="40" pos:column="74"/></name></expr></argument>)<pos:position pos:line="40" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="77"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">strcpy<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><name pos:line="41" pos:column="16">dst_oldh<pos:position pos:line="41" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="26">find_unique_abbrev<pos:position pos:line="41" pos:column="44"/></name><argument_list pos:line="41" pos:column="44">(<argument><expr><name><name pos:line="41" pos:column="45">dst_cmd<pos:position pos:line="41" pos:column="52"/></name><operator pos:line="41" pos:column="52">-&gt;<pos:position pos:line="41" pos:column="57"/></operator><name pos:line="41" pos:column="54">old_sha1<pos:position pos:line="41" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="64">DEFAULT_ABBREV<pos:position pos:line="41" pos:column="78"/></name></expr></argument>)<pos:position pos:line="41" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="81"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">strcpy<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><name pos:line="42" pos:column="16">dst_newh<pos:position pos:line="42" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="26">find_unique_abbrev<pos:position pos:line="42" pos:column="44"/></name><argument_list pos:line="42" pos:column="44">(<argument><expr><name><name pos:line="42" pos:column="45">dst_cmd<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">-&gt;<pos:position pos:line="42" pos:column="57"/></operator><name pos:line="42" pos:column="54">new_sha1<pos:position pos:line="42" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="64">DEFAULT_ABBREV<pos:position pos:line="42" pos:column="78"/></name></expr></argument>)<pos:position pos:line="42" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="81"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">rp_error<pos:position pos:line="43" pos:column="17"/></name><argument_list pos:line="43" pos:column="17">(<argument><expr><literal type="string" pos:line="43" pos:column="18">"refusing inconsistent update between symref '%s' (%s..%s) and"<pos:position pos:line="43" pos:column="81"/></literal>
		 <literal type="string" pos:line="44" pos:column="18">" its target '%s' (%s..%s)"<pos:position pos:line="44" pos:column="45"/></literal></expr></argument>,
		 <argument><expr><name><name pos:line="45" pos:column="18">cmd<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">ref_name<pos:position pos:line="45" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="33">cmd_oldh<pos:position pos:line="45" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="43">cmd_newh<pos:position pos:line="45" pos:column="51"/></name></expr></argument>,
		 <argument><expr><name><name pos:line="46" pos:column="18">dst_cmd<pos:position pos:line="46" pos:column="25"/></name><operator pos:line="46" pos:column="25">-&gt;<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="27">ref_name<pos:position pos:line="46" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="37">dst_oldh<pos:position pos:line="46" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="47">dst_newh<pos:position pos:line="46" pos:column="55"/></name></expr></argument>)<pos:position pos:line="46" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="57"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="48" pos:column="9">cmd<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">error_string<pos:position pos:line="48" pos:column="26"/></name></name> <operator pos:line="48" pos:column="27">=<pos:position pos:line="48" pos:column="28"/></operator> <name><name pos:line="48" pos:column="29">dst_cmd<pos:position pos:line="48" pos:column="36"/></name><operator pos:line="48" pos:column="36">-&gt;<pos:position pos:line="48" pos:column="41"/></operator><name pos:line="48" pos:column="38">error_string<pos:position pos:line="48" pos:column="50"/></name></name> <operator pos:line="48" pos:column="51">=<pos:position pos:line="48" pos:column="52"/></operator>
		<literal type="string" pos:line="49" pos:column="17">"inconsistent aliased update"<pos:position pos:line="49" pos:column="46"/></literal></expr>;<pos:position pos:line="49" pos:column="47"/></expr_stmt>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

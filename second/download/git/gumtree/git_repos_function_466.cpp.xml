<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_466.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">filter_refs<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name><name pos:line="1" pos:column="17">struct<pos:position pos:line="1" pos:column="23"/></name> <name pos:line="1" pos:column="24">ref_array<pos:position pos:line="1" pos:column="33"/></name></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">array<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">ref_filter<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">filter<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">unsigned<pos:position pos:line="1" pos:column="77"/></name> <name pos:line="1" pos:column="78">int<pos:position pos:line="1" pos:column="81"/></name></type> <name pos:line="1" pos:column="82">type<pos:position pos:line="1" pos:column="86"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="87"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">ref_filter_cbdata<pos:position pos:line="3" pos:column="33"/></name></name></type> <name pos:line="3" pos:column="34">ref_cbdata<pos:position pos:line="3" pos:column="44"/></name></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="5" pos:column="9">ref_cbdata<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">.<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">array<pos:position pos:line="5" pos:column="25"/></name></name> <operator pos:line="5" pos:column="26">=<pos:position pos:line="5" pos:column="27"/></operator> <name pos:line="5" pos:column="28">array<pos:position pos:line="5" pos:column="33"/></name></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="6" pos:column="9">ref_cbdata<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">.<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">filter<pos:position pos:line="6" pos:column="26"/></name></name> <operator pos:line="6" pos:column="27">=<pos:position pos:line="6" pos:column="28"/></operator> <name pos:line="6" pos:column="29">filter<pos:position pos:line="6" pos:column="35"/></name></expr>;<pos:position pos:line="6" pos:column="36"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">type<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&amp;<pos:position pos:line="8" pos:column="23"/></operator> <operator pos:line="8" pos:column="20">(<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">FILTER_REFS_ALL<pos:position pos:line="8" pos:column="36"/></name> <operator pos:line="8" pos:column="37">|<pos:position pos:line="8" pos:column="38"/></operator> <name pos:line="8" pos:column="39">FILTER_REFS_INCLUDE_BROKEN<pos:position pos:line="8" pos:column="65"/></name><operator pos:line="8" pos:column="65">)<pos:position pos:line="8" pos:column="66"/></operator></expr>)<pos:position pos:line="8" pos:column="67"/></condition><then pos:line="8" pos:column="67">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><call><name pos:line="9" pos:column="24">for_each_rawref<pos:position pos:line="9" pos:column="39"/></name><argument_list pos:line="9" pos:column="39">(<argument><expr><name pos:line="9" pos:column="40">ref_filter_handler<pos:position pos:line="9" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="60">&amp;<pos:position pos:line="9" pos:column="65"/></operator><name pos:line="9" pos:column="61">ref_cbdata<pos:position pos:line="9" pos:column="71"/></name></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="73"/></return></block></then>
	<elseif pos:line="10" pos:column="9">else <if pos:line="10" pos:column="14">if <condition pos:line="10" pos:column="17">(<expr><name pos:line="10" pos:column="18">type<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">&amp;<pos:position pos:line="10" pos:column="28"/></operator> <name pos:line="10" pos:column="25">FILTER_REFS_ALL<pos:position pos:line="10" pos:column="40"/></name></expr>)<pos:position pos:line="10" pos:column="41"/></condition><then pos:line="10" pos:column="41">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><call><name pos:line="11" pos:column="24">for_each_ref<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">ref_filter_handler<pos:position pos:line="11" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="57">&amp;<pos:position pos:line="11" pos:column="62"/></operator><name pos:line="11" pos:column="58">ref_cbdata<pos:position pos:line="11" pos:column="68"/></name></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="70"/></return></block></then></if></elseif>
	<else pos:line="12" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">die<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><literal type="string" pos:line="13" pos:column="21">"filter_refs: invalid type"<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt></block></else></if>
	<return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

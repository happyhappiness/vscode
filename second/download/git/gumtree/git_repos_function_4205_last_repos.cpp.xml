<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4205_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">vreportf<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><specifier pos:line="1" pos:column="15">const<pos:position pos:line="1" pos:column="20"/></specifier> <name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">prefix<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">err<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">va_list<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">params<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">msg<pos:position pos:line="3" pos:column="17"/></name><index pos:line="3" pos:column="17">[<expr><literal type="number" pos:line="3" pos:column="18">4096<pos:position pos:line="3" pos:column="22"/></literal></expr>]<pos:position pos:line="3" pos:column="23"/></index></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">p<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">vsnprintf<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">msg<pos:position pos:line="6" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="24">sizeof<argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">msg<pos:position pos:line="6" pos:column="34"/></name></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="6" pos:column="37">err<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="42">params<pos:position pos:line="6" pos:column="48"/></name></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="50"/></expr_stmt>
	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">p<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <name pos:line="7" pos:column="18">msg<pos:position pos:line="7" pos:column="21"/></name></expr>;<pos:position pos:line="7" pos:column="22"/></init> <condition><expr><operator pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">p<pos:position pos:line="7" pos:column="25"/></name></expr>;<pos:position pos:line="7" pos:column="26"/></condition> <incr><expr><name pos:line="7" pos:column="27">p<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">++<pos:position pos:line="7" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="31"/></control> <block pos:line="7" pos:column="32">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><call><name pos:line="8" pos:column="21">iscntrl<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><operator pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">p<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call> <operator pos:line="8" pos:column="33">&amp;&amp;<pos:position pos:line="8" pos:column="43"/></operator> <operator pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="37">p<pos:position pos:line="8" pos:column="38"/></name> <operator pos:line="8" pos:column="39">!=<pos:position pos:line="8" pos:column="41"/></operator> <literal type="char" pos:line="8" pos:column="42">'\t'<pos:position pos:line="8" pos:column="46"/></literal> <operator pos:line="8" pos:column="47">&amp;&amp;<pos:position pos:line="8" pos:column="57"/></operator> <operator pos:line="8" pos:column="50">*<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="51">p<pos:position pos:line="8" pos:column="52"/></name> <operator pos:line="8" pos:column="53">!=<pos:position pos:line="8" pos:column="55"/></operator> <literal type="char" pos:line="8" pos:column="56">'\n'<pos:position pos:line="8" pos:column="60"/></literal></expr>)<pos:position pos:line="8" pos:column="61"/></condition><then pos:line="8" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">p<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">=<pos:position pos:line="9" pos:column="29"/></operator> <literal type="char" pos:line="9" pos:column="30">'?'<pos:position pos:line="9" pos:column="33"/></literal></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt></block></then></if>
	}<pos:position pos:line="10" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">fprintf<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">stderr<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="25">"%s%s\n"<pos:position pos:line="11" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">prefix<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">msg<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

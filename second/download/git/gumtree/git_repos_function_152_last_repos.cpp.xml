<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_152_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_reachable_list<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">object_array<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">src<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">object_array<pos:position pos:line="2" pos:column="50"/></name></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">reachable<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">child_process<pos:position pos:line="4" pos:column="29"/></name></name></type> <name pos:line="4" pos:column="30">cmd<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><name pos:line="4" pos:column="36">CHILD_PROCESS_INIT<pos:position pos:line="4" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">object<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">o<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">namebuf<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[<expr><literal type="number" pos:line="7" pos:column="22">42<pos:position pos:line="7" pos:column="24"/></literal></expr>]<pos:position pos:line="7" pos:column="25"/></index></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt> <comment type="block" pos:line="7" pos:column="27">/* ^ + SHA-1 + LF */</comment>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">do_reachable_revlist<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><operator pos:line="9" pos:column="34">&amp;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="35">cmd<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">src<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="45">reachable<pos:position pos:line="9" pos:column="54"/></name></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call> <operator pos:line="9" pos:column="56">&lt;<pos:position pos:line="9" pos:column="60"/></operator> <literal type="number" pos:line="9" pos:column="58">0<pos:position pos:line="9" pos:column="59"/></literal></expr>)<pos:position pos:line="9" pos:column="60"/></condition><then pos:line="9" pos:column="60">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">-<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></return></block></then></if>

	<while pos:line="12" pos:column="9">while <condition pos:line="12" pos:column="15">(<expr><operator pos:line="12" pos:column="16">(<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">i<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <call><name pos:line="12" pos:column="21">read_in_full<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name><name pos:line="12" pos:column="34">cmd<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">.<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">out<pos:position pos:line="12" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="43">namebuf<pos:position pos:line="12" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="52">41<pos:position pos:line="12" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call><operator pos:line="12" pos:column="55">)<pos:position pos:line="12" pos:column="56"/></operator> <operator pos:line="12" pos:column="57">==<pos:position pos:line="12" pos:column="59"/></operator> <literal type="number" pos:line="12" pos:column="60">41<pos:position pos:line="12" pos:column="62"/></literal></expr>)<pos:position pos:line="12" pos:column="63"/></condition> <block pos:line="12" pos:column="64">{
		<decl_stmt><decl><type><name><name pos:line="13" pos:column="17">struct<pos:position pos:line="13" pos:column="23"/></name> <name pos:line="13" pos:column="24">object_id<pos:position pos:line="13" pos:column="33"/></name></name></type> <name pos:line="13" pos:column="34">sha1<pos:position pos:line="13" pos:column="38"/></name></decl>;<pos:position pos:line="13" pos:column="39"/></decl_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name><name pos:line="15" pos:column="21">namebuf<pos:position pos:line="15" pos:column="28"/></name><index pos:line="15" pos:column="28">[<expr><literal type="number" pos:line="15" pos:column="29">40<pos:position pos:line="15" pos:column="31"/></literal></expr>]<pos:position pos:line="15" pos:column="32"/></index></name> <operator pos:line="15" pos:column="33">!=<pos:position pos:line="15" pos:column="35"/></operator> <literal type="char" pos:line="15" pos:column="36">'\n'<pos:position pos:line="15" pos:column="40"/></literal> <operator pos:line="15" pos:column="41">||<pos:position pos:line="15" pos:column="43"/></operator> <call><name pos:line="15" pos:column="44">get_oid_hex<pos:position pos:line="15" pos:column="55"/></name><argument_list pos:line="15" pos:column="55">(<argument><expr><name pos:line="15" pos:column="56">namebuf<pos:position pos:line="15" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="65">&amp;<pos:position pos:line="15" pos:column="70"/></operator><name pos:line="15" pos:column="66">sha1<pos:position pos:line="15" pos:column="70"/></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="72"/></condition><then pos:line="15" pos:column="72">
			<block type="pseudo"><break pos:line="16" pos:column="25">break;<pos:position pos:line="16" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><name pos:line="18" pos:column="17">o<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <call><name pos:line="18" pos:column="21">lookup_object<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><name><name pos:line="18" pos:column="35">sha1<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">.<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="40">hash<pos:position pos:line="18" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">o<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&amp;&amp;<pos:position pos:line="19" pos:column="33"/></operator> <name><name pos:line="19" pos:column="26">o<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">type<pos:position pos:line="19" pos:column="33"/></name></name> <operator pos:line="19" pos:column="34">==<pos:position pos:line="19" pos:column="36"/></operator> <name pos:line="19" pos:column="37">OBJ_COMMIT<pos:position pos:line="19" pos:column="47"/></name></expr>)<pos:position pos:line="19" pos:column="48"/></condition><then pos:line="19" pos:column="48"> <block pos:line="19" pos:column="49">{
			<expr_stmt><expr><name><name pos:line="20" pos:column="25">o<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">flags<pos:position pos:line="20" pos:column="33"/></name></name> <operator pos:line="20" pos:column="34">&amp;=<pos:position pos:line="20" pos:column="40"/></operator> <operator pos:line="20" pos:column="37">~<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="38">TMP_MARK<pos:position pos:line="20" pos:column="46"/></name></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>
	}<pos:position pos:line="22" pos:column="10"/></block></while>
	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">i<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <call><name pos:line="23" pos:column="18">get_max_object_index<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">()<pos:position pos:line="23" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="41"/></init> <condition><expr><literal type="number" pos:line="23" pos:column="42">0<pos:position pos:line="23" pos:column="43"/></literal> <operator pos:line="23" pos:column="44">&lt;<pos:position pos:line="23" pos:column="48"/></operator> <name pos:line="23" pos:column="46">i<pos:position pos:line="23" pos:column="47"/></name></expr>;<pos:position pos:line="23" pos:column="48"/></condition> <incr><expr><name pos:line="23" pos:column="49">i<pos:position pos:line="23" pos:column="50"/></name><operator pos:line="23" pos:column="50">--<pos:position pos:line="23" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="53"/></control> <block pos:line="23" pos:column="54">{
		<expr_stmt><expr><name pos:line="24" pos:column="17">o<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <call><name pos:line="24" pos:column="21">get_indexed_object<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><name pos:line="24" pos:column="40">i<pos:position pos:line="24" pos:column="41"/></name> <operator pos:line="24" pos:column="42">-<pos:position pos:line="24" pos:column="43"/></operator> <literal type="number" pos:line="24" pos:column="44">1<pos:position pos:line="24" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">o<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">&amp;&amp;<pos:position pos:line="25" pos:column="33"/></operator> <name><name pos:line="25" pos:column="26">o<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">-&gt;<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="29">type<pos:position pos:line="25" pos:column="33"/></name></name> <operator pos:line="25" pos:column="34">==<pos:position pos:line="25" pos:column="36"/></operator> <name pos:line="25" pos:column="37">OBJ_COMMIT<pos:position pos:line="25" pos:column="47"/></name> <operator pos:line="25" pos:column="48">&amp;&amp;<pos:position pos:line="25" pos:column="58"/></operator>
		    <operator pos:line="26" pos:column="21">(<pos:position pos:line="26" pos:column="22"/></operator><name><name pos:line="26" pos:column="22">o<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">-&gt;<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="25">flags<pos:position pos:line="26" pos:column="30"/></name></name> <operator pos:line="26" pos:column="31">&amp;<pos:position pos:line="26" pos:column="36"/></operator> <name pos:line="26" pos:column="33">TMP_MARK<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">)<pos:position pos:line="26" pos:column="42"/></operator></expr>)<pos:position pos:line="26" pos:column="43"/></condition><then pos:line="26" pos:column="43"> <block pos:line="26" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">add_object_array<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">o<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="45">NULL<pos:position pos:line="27" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="51">reachable<pos:position pos:line="27" pos:column="60"/></name></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="28" pos:column="33">o<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">-&gt;<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="36">flags<pos:position pos:line="28" pos:column="41"/></name></name> <operator pos:line="28" pos:column="42">&amp;=<pos:position pos:line="28" pos:column="48"/></operator> <operator pos:line="28" pos:column="45">~<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="46">TMP_MARK<pos:position pos:line="28" pos:column="54"/></name></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
	}<pos:position pos:line="30" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">close<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name><name pos:line="31" pos:column="15">cmd<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">.<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">out<pos:position pos:line="31" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><call><name pos:line="33" pos:column="13">finish_command<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><operator pos:line="33" pos:column="28">&amp;<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="29">cmd<pos:position pos:line="33" pos:column="32"/></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="34"/></condition><then pos:line="33" pos:column="34">
		<block type="pseudo"><return pos:line="34" pos:column="17">return <expr><operator pos:line="34" pos:column="24">-<pos:position pos:line="34" pos:column="25"/></operator><literal type="number" pos:line="34" pos:column="25">1<pos:position pos:line="34" pos:column="26"/></literal></expr>;<pos:position pos:line="34" pos:column="27"/></return></block></then></if>

	<return pos:line="36" pos:column="9">return <expr><literal type="number" pos:line="36" pos:column="16">0<pos:position pos:line="36" pos:column="17"/></literal></expr>;<pos:position pos:line="36" pos:column="18"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5040_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_verify_commit<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">argc<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier><modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">argv<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">prefix<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><literal type="number" pos:line="3" pos:column="17">1<pos:position pos:line="3" pos:column="18"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="20">verbose<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><literal type="number" pos:line="3" pos:column="30">0<pos:position pos:line="3" pos:column="31"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="33">had_error<pos:position pos:line="3" pos:column="42"/></name> <init pos:line="3" pos:column="43">= <expr><literal type="number" pos:line="3" pos:column="45">0<pos:position pos:line="3" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">flags<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name><name pos:line="5" pos:column="15">struct<pos:position pos:line="5" pos:column="21"/></name> <name pos:line="5" pos:column="22">option<pos:position pos:line="5" pos:column="28"/></name></name></type> <name><name pos:line="5" pos:column="29">verify_commit_options<pos:position pos:line="5" pos:column="50"/></name><index pos:line="5" pos:column="50">[]<pos:position pos:line="5" pos:column="52"/></index></name> <init pos:line="5" pos:column="53">= <expr><block pos:line="5" pos:column="55">{
		<expr><call><name pos:line="6" pos:column="17">OPT__VERBOSE<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><operator pos:line="6" pos:column="30">&amp;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="31">verbose<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="40">N_<pos:position pos:line="6" pos:column="42"/></name><argument_list pos:line="6" pos:column="42">(<argument><expr><literal type="string" pos:line="6" pos:column="43">"print commit contents"<pos:position pos:line="6" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="68"/></argument_list></call></expr>,
		<expr><call><name pos:line="7" pos:column="17">OPT_BIT<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="28">"raw"<pos:position pos:line="7" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="35">&amp;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="36">flags<pos:position pos:line="7" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="43">N_<pos:position pos:line="7" pos:column="45"/></name><argument_list pos:line="7" pos:column="45">(<argument><expr><literal type="string" pos:line="7" pos:column="46">"print raw gpg status output"<pos:position pos:line="7" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="7" pos:column="78">GPG_VERIFY_RAW<pos:position pos:line="7" pos:column="92"/></name></expr></argument>)<pos:position pos:line="7" pos:column="93"/></argument_list></call></expr>,
		<macro><name pos:line="8" pos:column="17">OPT_END<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">()<pos:position pos:line="8" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="9" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">git_config<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">git_verify_commit_config<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">NULL<pos:position pos:line="11" pos:column="50"/></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">argc<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <call><name pos:line="13" pos:column="16">parse_options<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">argc<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="36">argv<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">prefix<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="50">verify_commit_options<pos:position pos:line="13" pos:column="71"/></name></expr></argument>,
			     <argument><expr><name pos:line="14" pos:column="30">verify_commit_usage<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">PARSE_OPT_KEEP_ARGV0<pos:position pos:line="14" pos:column="71"/></name></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">argc<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">&lt;=<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name></expr>)<pos:position pos:line="15" pos:column="23"/></condition><then pos:line="15" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">usage_with_options<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">verify_commit_usage<pos:position pos:line="16" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="57">verify_commit_options<pos:position pos:line="16" pos:column="78"/></name></expr></argument>)<pos:position pos:line="16" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="80"/></expr_stmt></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">verbose<pos:position pos:line="18" pos:column="20"/></name></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">flags<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">|=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">GPG_VERIFY_VERBOSE<pos:position pos:line="19" pos:column="44"/></name></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="21" pos:column="9">/* sometimes the program was terminated because this signal
	 * was received in the process of writing the gpg input: */</comment>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">signal<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">SIGPIPE<pos:position pos:line="23" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="25">SIG_IGN<pos:position pos:line="23" pos:column="32"/></name></expr></argument>)<pos:position pos:line="23" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt>
	<while pos:line="24" pos:column="9">while <condition pos:line="24" pos:column="15">(<expr><name pos:line="24" pos:column="16">i<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">&lt;<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="20">argc<pos:position pos:line="24" pos:column="24"/></name></expr>)<pos:position pos:line="24" pos:column="25"/></condition>
		<block type="pseudo"><if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">verify_commit<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name><name pos:line="25" pos:column="35">argv<pos:position pos:line="25" pos:column="39"/></name><index pos:line="25" pos:column="39">[<expr><name pos:line="25" pos:column="40">i<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">++<pos:position pos:line="25" pos:column="43"/></operator></expr>]<pos:position pos:line="25" pos:column="44"/></index></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="46">flags<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="53"/></condition><then pos:line="25" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="25">had_error<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">=<pos:position pos:line="26" pos:column="36"/></operator> <literal type="number" pos:line="26" pos:column="37">1<pos:position pos:line="26" pos:column="38"/></literal></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt></block></then></if></block></while>
	<return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">had_error<pos:position pos:line="27" pos:column="25"/></name></expr>;<pos:position pos:line="27" pos:column="26"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

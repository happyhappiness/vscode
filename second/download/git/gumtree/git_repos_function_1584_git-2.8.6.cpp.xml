<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1584_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">read_mailmap_string<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">string_list<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">map<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">buf<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier><modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">repo_abbrev<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<while pos:line="4" pos:column="9">while <condition pos:line="4" pos:column="15">(<expr><operator pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">buf<pos:position pos:line="4" pos:column="20"/></name></expr>)<pos:position pos:line="4" pos:column="21"/></condition> <block pos:line="4" pos:column="22">{
		<decl_stmt><decl><type><name pos:line="5" pos:column="17">char<pos:position pos:line="5" pos:column="21"/></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">end<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><call><name pos:line="5" pos:column="29">strchrnul<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">buf<pos:position pos:line="5" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="5" pos:column="44">'\n'<pos:position pos:line="5" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="50"/></decl_stmt>

		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">end<pos:position pos:line="7" pos:column="25"/></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">end<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">++<pos:position pos:line="8" pos:column="31"/></operator> <operator pos:line="8" pos:column="32">=<pos:position pos:line="8" pos:column="33"/></operator> <literal type="char" pos:line="8" pos:column="34">'\0'<pos:position pos:line="8" pos:column="38"/></literal></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="10" pos:column="17">read_mailmap_line<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">map<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">buf<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="45">repo_abbrev<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name pos:line="11" pos:column="17">buf<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">end<pos:position pos:line="11" pos:column="26"/></name></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></while>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

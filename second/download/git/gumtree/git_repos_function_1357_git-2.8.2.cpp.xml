<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1357_git-2.8.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">write_branch_report<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">FILE<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">rpt<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="44">struct<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">branch<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">b<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">fprintf<pos:position pos:line="3" pos:column="16"/></name><argument_list pos:line="3" pos:column="16">(<argument><expr><name pos:line="3" pos:column="17">rpt<pos:position pos:line="3" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="22">"%s:\n"<pos:position pos:line="3" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="3" pos:column="31">b<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">-&gt;<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="34">name<pos:position pos:line="3" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="40"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">fprintf<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">rpt<pos:position pos:line="5" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="22">"  status      :"<pos:position pos:line="5" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="41"/></expr_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">b<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">active<pos:position pos:line="6" pos:column="22"/></name></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">fputs<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><literal type="string" pos:line="7" pos:column="23">" active"<pos:position pos:line="7" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="34">rpt<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">b<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">branch_tree<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">tree<pos:position pos:line="8" pos:column="32"/></name></name></expr>)<pos:position pos:line="8" pos:column="33"/></condition><then pos:line="8" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">fputs<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><literal type="string" pos:line="9" pos:column="23">" loaded"<pos:position pos:line="9" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="34">rpt<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">is_null_sha1<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name><name pos:line="10" pos:column="26">b<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">branch_tree<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">.<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="41">versions<pos:position pos:line="10" pos:column="49"/></name><index pos:line="10" pos:column="49">[<expr><literal type="number" pos:line="10" pos:column="50">1<pos:position pos:line="10" pos:column="51"/></literal></expr>]<pos:position pos:line="10" pos:column="52"/></index></name><operator pos:line="10" pos:column="52">.<pos:position pos:line="10" pos:column="53"/></operator><name pos:line="10" pos:column="53">sha1<pos:position pos:line="10" pos:column="57"/></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="59"/></condition><then pos:line="10" pos:column="59">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">fputs<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><literal type="string" pos:line="11" pos:column="23">" dirty"<pos:position pos:line="11" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="33">rpt<pos:position pos:line="11" pos:column="36"/></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">fputc<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><literal type="char" pos:line="12" pos:column="15">'\n'<pos:position pos:line="12" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="21">rpt<pos:position pos:line="12" pos:column="24"/></name></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">fprintf<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">rpt<pos:position pos:line="14" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="22">"  tip commit  : %s\n"<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="46">sha1_to_hex<pos:position pos:line="14" pos:column="57"/></name><argument_list pos:line="14" pos:column="57">(<argument><expr><name><name pos:line="14" pos:column="58">b<pos:position pos:line="14" pos:column="59"/></name><operator pos:line="14" pos:column="59">-&gt;<pos:position pos:line="14" pos:column="64"/></operator><name pos:line="14" pos:column="61">sha1<pos:position pos:line="14" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">fprintf<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">rpt<pos:position pos:line="15" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="22">"  old tree    : %s\n"<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="46">sha1_to_hex<pos:position pos:line="15" pos:column="57"/></name><argument_list pos:line="15" pos:column="57">(<argument><expr><name><name pos:line="15" pos:column="58">b<pos:position pos:line="15" pos:column="59"/></name><operator pos:line="15" pos:column="59">-&gt;<pos:position pos:line="15" pos:column="64"/></operator><name pos:line="15" pos:column="61">branch_tree<pos:position pos:line="15" pos:column="72"/></name><operator pos:line="15" pos:column="72">.<pos:position pos:line="15" pos:column="73"/></operator><name pos:line="15" pos:column="73">versions<pos:position pos:line="15" pos:column="81"/></name><index pos:line="15" pos:column="81">[<expr><literal type="number" pos:line="15" pos:column="82">0<pos:position pos:line="15" pos:column="83"/></literal></expr>]<pos:position pos:line="15" pos:column="84"/></index></name><operator pos:line="15" pos:column="84">.<pos:position pos:line="15" pos:column="85"/></operator><name pos:line="15" pos:column="85">sha1<pos:position pos:line="15" pos:column="89"/></name></expr></argument>)<pos:position pos:line="15" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="92"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">fprintf<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">rpt<pos:position pos:line="16" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="22">"  cur tree    : %s\n"<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="46">sha1_to_hex<pos:position pos:line="16" pos:column="57"/></name><argument_list pos:line="16" pos:column="57">(<argument><expr><name><name pos:line="16" pos:column="58">b<pos:position pos:line="16" pos:column="59"/></name><operator pos:line="16" pos:column="59">-&gt;<pos:position pos:line="16" pos:column="64"/></operator><name pos:line="16" pos:column="61">branch_tree<pos:position pos:line="16" pos:column="72"/></name><operator pos:line="16" pos:column="72">.<pos:position pos:line="16" pos:column="73"/></operator><name pos:line="16" pos:column="73">versions<pos:position pos:line="16" pos:column="81"/></name><index pos:line="16" pos:column="81">[<expr><literal type="number" pos:line="16" pos:column="82">1<pos:position pos:line="16" pos:column="83"/></literal></expr>]<pos:position pos:line="16" pos:column="84"/></index></name><operator pos:line="16" pos:column="84">.<pos:position pos:line="16" pos:column="85"/></operator><name pos:line="16" pos:column="85">sha1<pos:position pos:line="16" pos:column="89"/></name></expr></argument>)<pos:position pos:line="16" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="92"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">fprintf<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">rpt<pos:position pos:line="17" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="22">"  commit clock: %"<pos:position pos:line="17" pos:column="41"/></literal> <name pos:line="17" pos:column="42">PRIuMAX<pos:position pos:line="17" pos:column="49"/></name> <literal type="string" pos:line="17" pos:column="50">"\n"<pos:position pos:line="17" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="56">b<pos:position pos:line="17" pos:column="57"/></name><operator pos:line="17" pos:column="57">-&gt;<pos:position pos:line="17" pos:column="62"/></operator><name pos:line="17" pos:column="59">last_commit<pos:position pos:line="17" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="72"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">fputs<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><literal type="string" pos:line="19" pos:column="15">"  last pack   : "<pos:position pos:line="19" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="35">rpt<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">b<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">pack_id<pos:position pos:line="20" pos:column="23"/></name></name> <operator pos:line="20" pos:column="24">&lt;<pos:position pos:line="20" pos:column="28"/></operator> <name pos:line="20" pos:column="26">MAX_PACK_ID<pos:position pos:line="20" pos:column="37"/></name></expr>)<pos:position pos:line="20" pos:column="38"/></condition><then pos:line="20" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">fprintf<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">rpt<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="30">"%u"<pos:position pos:line="21" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="36">b<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">-&gt;<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="39">pack_id<pos:position pos:line="21" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">fputc<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><literal type="char" pos:line="22" pos:column="15">'\n'<pos:position pos:line="22" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="21">rpt<pos:position pos:line="22" pos:column="24"/></name></expr></argument>)<pos:position pos:line="22" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="24" pos:column="9">fputc<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><literal type="char" pos:line="24" pos:column="15">'\n'<pos:position pos:line="24" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="21">rpt<pos:position pos:line="24" pos:column="24"/></name></expr></argument>)<pos:position pos:line="24" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6877_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">init_top<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">mstate<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">m<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">mchunkptr<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">p<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">size_t<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">psize<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list> <block pos:line="1" pos:column="59">{
  <comment type="block" pos:line="2" pos:column="3">/* Ensure alignment */</comment>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">offset<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">align_offset<pos:position pos:line="3" pos:column="31"/></name><argument_list pos:line="3" pos:column="31">(<argument><expr><call><name pos:line="3" pos:column="32">chunk2mem<pos:position pos:line="3" pos:column="41"/></name><argument_list pos:line="3" pos:column="41">(<argument><expr><name pos:line="3" pos:column="42">p<pos:position pos:line="3" pos:column="43"/></name></expr></argument>)<pos:position pos:line="3" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
  <expr_stmt><expr><name pos:line="4" pos:column="3">p<pos:position pos:line="4" pos:column="4"/></name> <operator pos:line="4" pos:column="5">=<pos:position pos:line="4" pos:column="6"/></operator> <call pos:line="4" pos:column="7">(<name pos:line="4" pos:column="8">mchunkptr<pos:position pos:line="4" pos:column="17"/></name>)<argument_list pos:line="4" pos:column="18">(<argument><expr><operator pos:line="4" pos:column="19">(<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">char<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></operator><operator pos:line="4" pos:column="25">)<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">p<pos:position pos:line="4" pos:column="27"/></name> <operator pos:line="4" pos:column="28">+<pos:position pos:line="4" pos:column="29"/></operator> <name pos:line="4" pos:column="30">offset<pos:position pos:line="4" pos:column="36"/></name></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name pos:line="5" pos:column="3">psize<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">-=<pos:position pos:line="5" pos:column="11"/></operator> <name pos:line="5" pos:column="12">offset<pos:position pos:line="5" pos:column="18"/></name></expr>;<pos:position pos:line="5" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="7" pos:column="3">m<pos:position pos:line="7" pos:column="4"/></name><operator pos:line="7" pos:column="4">-&gt;<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="6">top<pos:position pos:line="7" pos:column="9"/></name></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <name pos:line="7" pos:column="12">p<pos:position pos:line="7" pos:column="13"/></name></expr>;<pos:position pos:line="7" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">m<pos:position pos:line="8" pos:column="4"/></name><operator pos:line="8" pos:column="4">-&gt;<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="6">topsize<pos:position pos:line="8" pos:column="13"/></name></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">psize<pos:position pos:line="8" pos:column="21"/></name></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">p<pos:position pos:line="9" pos:column="4"/></name><operator pos:line="9" pos:column="4">-&gt;<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="6">head<pos:position pos:line="9" pos:column="10"/></name></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">psize<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">|<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">PINUSE_BIT<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
  <comment type="block" pos:line="10" pos:column="3">/* set size of fake trailing chunk holding overhead space only once */</comment>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">chunk_plus_offset<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">p<pos:position pos:line="11" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="24">psize<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">head<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">=<pos:position pos:line="11" pos:column="38"/></operator> <name pos:line="11" pos:column="39">TOP_FOOT_SIZE<pos:position pos:line="11" pos:column="52"/></name></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">m<pos:position pos:line="12" pos:column="4"/></name><operator pos:line="12" pos:column="4">-&gt;<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="6">trim_check<pos:position pos:line="12" pos:column="16"/></name></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <name><name pos:line="12" pos:column="19">mparams<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">.<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">trim_threshold<pos:position pos:line="12" pos:column="41"/></name></name></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt> <comment type="block" pos:line="12" pos:column="43">/* reset on each update */</comment>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3288_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">line_log_data<pos:position pos:line="1" pos:column="28"/></name></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type>
<name pos:line="2" pos:column="1">parse_lines<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name><name pos:line="2" pos:column="13">struct<pos:position pos:line="2" pos:column="19"/></name> <name pos:line="2" pos:column="20">commit<pos:position pos:line="2" pos:column="26"/></name></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">commit<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">prefix<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="56">struct<pos:position pos:line="2" pos:column="62"/></name> <name pos:line="2" pos:column="63">string_list<pos:position pos:line="2" pos:column="74"/></name></name> <modifier pos:line="2" pos:column="75">*<pos:position pos:line="2" pos:column="76"/></modifier></type><name pos:line="2" pos:column="76">args<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="81"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">long<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">lines<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">long<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">ends<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><name pos:line="5" pos:column="31">NULL<pos:position pos:line="5" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">nth_line_cb<pos:position pos:line="6" pos:column="27"/></name></name></type> <name pos:line="6" pos:column="28">cb_data<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">string_list_item<pos:position pos:line="7" pos:column="32"/></name></name> <modifier pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></modifier></type><name pos:line="7" pos:column="34">item<pos:position pos:line="7" pos:column="38"/></name></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">line_log_data<pos:position pos:line="8" pos:column="29"/></name></name> <modifier pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></modifier></type><name pos:line="8" pos:column="31">ranges<pos:position pos:line="8" pos:column="37"/></name> <init pos:line="8" pos:column="38">= <expr><name pos:line="8" pos:column="40">NULL<pos:position pos:line="8" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">line_log_data<pos:position pos:line="9" pos:column="29"/></name></name> <modifier pos:line="9" pos:column="30">*<pos:position pos:line="9" pos:column="31"/></modifier></type><name pos:line="9" pos:column="31">p<pos:position pos:line="9" pos:column="32"/></name></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>

	<macro><name pos:line="11" pos:column="9">for_each_string_list_item<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument pos:line="11" pos:column="35">item<pos:position pos:line="11" pos:column="39"/></argument>, <argument pos:line="11" pos:column="41">args<pos:position pos:line="11" pos:column="45"/></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></macro> <block pos:line="11" pos:column="47">{
		<decl_stmt><decl><type><specifier pos:line="12" pos:column="17">const<pos:position pos:line="12" pos:column="22"/></specifier> <name pos:line="12" pos:column="23">char<pos:position pos:line="12" pos:column="27"/></name> <modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">name_part<pos:position pos:line="12" pos:column="38"/></name></decl>, <modifier pos:line="12" pos:column="40">*<pos:position pos:line="12" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="41">range_part<pos:position pos:line="12" pos:column="51"/></name></decl>;<pos:position pos:line="12" pos:column="52"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">char<pos:position pos:line="13" pos:column="21"/></name> <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier></type><name pos:line="13" pos:column="23">full_name<pos:position pos:line="13" pos:column="32"/></name></decl>;<pos:position pos:line="13" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="14" pos:column="17">struct<pos:position pos:line="14" pos:column="23"/></name> <name pos:line="14" pos:column="24">diff_filespec<pos:position pos:line="14" pos:column="37"/></name></name> <modifier pos:line="14" pos:column="38">*<pos:position pos:line="14" pos:column="39"/></modifier></type><name pos:line="14" pos:column="39">spec<pos:position pos:line="14" pos:column="43"/></name></decl>;<pos:position pos:line="14" pos:column="44"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">long<pos:position pos:line="15" pos:column="21"/></name></type> <name pos:line="15" pos:column="22">begin<pos:position pos:line="15" pos:column="27"/></name> <init pos:line="15" pos:column="28">= <expr><literal type="number" pos:line="15" pos:column="30">0<pos:position pos:line="15" pos:column="31"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="33">end<pos:position pos:line="15" pos:column="36"/></name> <init pos:line="15" pos:column="37">= <expr><literal type="number" pos:line="15" pos:column="39">0<pos:position pos:line="15" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">long<pos:position pos:line="16" pos:column="21"/></name></type> <name pos:line="16" pos:column="22">anchor<pos:position pos:line="16" pos:column="28"/></name></decl>;<pos:position pos:line="16" pos:column="29"/></decl_stmt>

		<expr_stmt><expr><name pos:line="18" pos:column="17">name_part<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <call><name pos:line="18" pos:column="29">skip_range_arg<pos:position pos:line="18" pos:column="43"/></name><argument_list pos:line="18" pos:column="43">(<argument><expr><name><name pos:line="18" pos:column="44">item<pos:position pos:line="18" pos:column="48"/></name><operator pos:line="18" pos:column="48">-&gt;<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="50">string<pos:position pos:line="18" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="58"/></expr_stmt>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">name_part<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">||<pos:position pos:line="19" pos:column="34"/></operator> <operator pos:line="19" pos:column="35">*<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="36">name_part<pos:position pos:line="19" pos:column="45"/></name> <operator pos:line="19" pos:column="46">!=<pos:position pos:line="19" pos:column="48"/></operator> <literal type="char" pos:line="19" pos:column="49">':'<pos:position pos:line="19" pos:column="52"/></literal> <operator pos:line="19" pos:column="53">||<pos:position pos:line="19" pos:column="55"/></operator> <operator pos:line="19" pos:column="56">!<pos:position pos:line="19" pos:column="57"/></operator><name><name pos:line="19" pos:column="57">name_part<pos:position pos:line="19" pos:column="66"/></name><index pos:line="19" pos:column="66">[<expr><literal type="number" pos:line="19" pos:column="67">1<pos:position pos:line="19" pos:column="68"/></literal></expr>]<pos:position pos:line="19" pos:column="69"/></index></name></expr>)<pos:position pos:line="19" pos:column="70"/></condition><then pos:line="19" pos:column="70">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="25">die<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><literal type="string" pos:line="20" pos:column="29">"-L argument not 'start,end:file' or ':funcname:file': %s"<pos:position pos:line="20" pos:column="87"/></literal></expr></argument>,
			    <argument><expr><name><name pos:line="21" pos:column="29">item<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">-&gt;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="35">string<pos:position pos:line="21" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="22" pos:column="17">range_part<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <call><name pos:line="22" pos:column="30">xstrndup<pos:position pos:line="22" pos:column="38"/></name><argument_list pos:line="22" pos:column="38">(<argument><expr><name><name pos:line="22" pos:column="39">item<pos:position pos:line="22" pos:column="43"/></name><operator pos:line="22" pos:column="43">-&gt;<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="45">string<pos:position pos:line="22" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="53">name_part<pos:position pos:line="22" pos:column="62"/></name> <operator pos:line="22" pos:column="63">-<pos:position pos:line="22" pos:column="64"/></operator> <name><name pos:line="22" pos:column="65">item<pos:position pos:line="22" pos:column="69"/></name><operator pos:line="22" pos:column="69">-&gt;<pos:position pos:line="22" pos:column="74"/></operator><name pos:line="22" pos:column="71">string<pos:position pos:line="22" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">name_part<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">++<pos:position pos:line="23" pos:column="28"/></operator></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>

		<expr_stmt><expr><name pos:line="25" pos:column="17">full_name<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <call><name pos:line="25" pos:column="29">prefix_path<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">prefix<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="25" pos:column="49">prefix<pos:position pos:line="25" pos:column="55"/></name></expr> ?<pos:position pos:line="25" pos:column="57"/></condition><then pos:line="25" pos:column="57"> <expr><call><name pos:line="25" pos:column="58">strlen<pos:position pos:line="25" pos:column="64"/></name><argument_list pos:line="25" pos:column="64">(<argument><expr><name pos:line="25" pos:column="65">prefix<pos:position pos:line="25" pos:column="71"/></name></expr></argument>)<pos:position pos:line="25" pos:column="72"/></argument_list></call></expr> <pos:position pos:line="25" pos:column="73"/></then><else pos:line="25" pos:column="73">: <expr><literal type="number" pos:line="25" pos:column="75">0<pos:position pos:line="25" pos:column="76"/></literal></expr></else></ternary></expr></argument>,
					<argument><expr><name pos:line="26" pos:column="41">name_part<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt>

		<expr_stmt><expr><name pos:line="28" pos:column="17">spec<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <call><name pos:line="28" pos:column="24">alloc_filespec<pos:position pos:line="28" pos:column="38"/></name><argument_list pos:line="28" pos:column="38">(<argument><expr><name pos:line="28" pos:column="39">full_name<pos:position pos:line="28" pos:column="48"/></name></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">fill_blob_sha1<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><name pos:line="29" pos:column="32">commit<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="40">spec<pos:position pos:line="29" pos:column="44"/></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">fill_line_ends<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">spec<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="38">&amp;<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="39">lines<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="46">&amp;<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="47">ends<pos:position pos:line="30" pos:column="51"/></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">cb_data<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">.<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">spec<pos:position pos:line="31" pos:column="29"/></name></name> <operator pos:line="31" pos:column="30">=<pos:position pos:line="31" pos:column="31"/></operator> <name pos:line="31" pos:column="32">spec<pos:position pos:line="31" pos:column="36"/></name></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">cb_data<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">.<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="25">lines<pos:position pos:line="32" pos:column="30"/></name></name> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <name pos:line="32" pos:column="33">lines<pos:position pos:line="32" pos:column="38"/></name></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="33" pos:column="17">cb_data<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">.<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">line_ends<pos:position pos:line="33" pos:column="34"/></name></name> <operator pos:line="33" pos:column="35">=<pos:position pos:line="33" pos:column="36"/></operator> <name pos:line="33" pos:column="37">ends<pos:position pos:line="33" pos:column="41"/></name></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>

		<expr_stmt><expr><name pos:line="35" pos:column="17">p<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <call><name pos:line="35" pos:column="21">search_line_log_data<pos:position pos:line="35" pos:column="41"/></name><argument_list pos:line="35" pos:column="41">(<argument><expr><name pos:line="35" pos:column="42">ranges<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">full_name<pos:position pos:line="35" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="61">NULL<pos:position pos:line="35" pos:column="65"/></name></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="67"/></expr_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">p<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">&amp;&amp;<pos:position pos:line="36" pos:column="33"/></operator> <name><name pos:line="36" pos:column="26">p<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">ranges<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">.<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="36">nr<pos:position pos:line="36" pos:column="38"/></name></name></expr>)<pos:position pos:line="36" pos:column="39"/></condition><then pos:line="36" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">anchor<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">=<pos:position pos:line="37" pos:column="33"/></operator> <name><name pos:line="37" pos:column="34">p<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">-&gt;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="37">ranges<pos:position pos:line="37" pos:column="43"/></name><operator pos:line="37" pos:column="43">.<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="44">ranges<pos:position pos:line="37" pos:column="50"/></name><index pos:line="37" pos:column="50">[<expr><name><name pos:line="37" pos:column="51">p<pos:position pos:line="37" pos:column="52"/></name><operator pos:line="37" pos:column="52">-&gt;<pos:position pos:line="37" pos:column="57"/></operator><name pos:line="37" pos:column="54">ranges<pos:position pos:line="37" pos:column="60"/></name><operator pos:line="37" pos:column="60">.<pos:position pos:line="37" pos:column="61"/></operator><name pos:line="37" pos:column="61">nr<pos:position pos:line="37" pos:column="63"/></name></name> <operator pos:line="37" pos:column="64">-<pos:position pos:line="37" pos:column="65"/></operator> <literal type="number" pos:line="37" pos:column="66">1<pos:position pos:line="37" pos:column="67"/></literal></expr>]<pos:position pos:line="37" pos:column="68"/></index></name><operator pos:line="37" pos:column="68">.<pos:position pos:line="37" pos:column="69"/></operator><name pos:line="37" pos:column="69">end<pos:position pos:line="37" pos:column="72"/></name> <operator pos:line="37" pos:column="73">+<pos:position pos:line="37" pos:column="74"/></operator> <literal type="number" pos:line="37" pos:column="75">1<pos:position pos:line="37" pos:column="76"/></literal></expr>;<pos:position pos:line="37" pos:column="77"/></expr_stmt></block></then>
		<else pos:line="38" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="25">anchor<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">=<pos:position pos:line="39" pos:column="33"/></operator> <literal type="number" pos:line="39" pos:column="34">1<pos:position pos:line="39" pos:column="35"/></literal></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt></block></else></if>

		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><call><name pos:line="41" pos:column="21">parse_range_arg<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><name pos:line="41" pos:column="37">range_part<pos:position pos:line="41" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">nth_line<pos:position pos:line="41" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="59">&amp;<pos:position pos:line="41" pos:column="64"/></operator><name pos:line="41" pos:column="60">cb_data<pos:position pos:line="41" pos:column="67"/></name></expr></argument>,
				    <argument><expr><name pos:line="42" pos:column="37">lines<pos:position pos:line="42" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="44">anchor<pos:position pos:line="42" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="52">&amp;<pos:position pos:line="42" pos:column="57"/></operator><name pos:line="42" pos:column="53">begin<pos:position pos:line="42" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="60">&amp;<pos:position pos:line="42" pos:column="65"/></operator><name pos:line="42" pos:column="61">end<pos:position pos:line="42" pos:column="64"/></name></expr></argument>,
				    <argument><expr><name pos:line="43" pos:column="37">full_name<pos:position pos:line="43" pos:column="46"/></name></expr></argument>)<pos:position pos:line="43" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="48"/></condition><then pos:line="43" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="25">die<pos:position pos:line="44" pos:column="28"/></name><argument_list pos:line="44" pos:column="28">(<argument><expr><literal type="string" pos:line="44" pos:column="29">"malformed -L argument '%s'"<pos:position pos:line="44" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="59">range_part<pos:position pos:line="44" pos:column="69"/></name></expr></argument>)<pos:position pos:line="44" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="71"/></expr_stmt></block></then></if>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">lines<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">&lt;<pos:position pos:line="45" pos:column="31"/></operator> <name pos:line="45" pos:column="29">end<pos:position pos:line="45" pos:column="32"/></name> <operator pos:line="45" pos:column="33">||<pos:position pos:line="45" pos:column="35"/></operator> <operator pos:line="45" pos:column="36">(<pos:position pos:line="45" pos:column="37"/></operator><operator pos:line="45" pos:column="37">(<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="38">lines<pos:position pos:line="45" pos:column="43"/></name> <operator pos:line="45" pos:column="44">||<pos:position pos:line="45" pos:column="46"/></operator> <name pos:line="45" pos:column="47">begin<pos:position pos:line="45" pos:column="52"/></name><operator pos:line="45" pos:column="52">)<pos:position pos:line="45" pos:column="53"/></operator> <operator pos:line="45" pos:column="54">&amp;&amp;<pos:position pos:line="45" pos:column="64"/></operator> <name pos:line="45" pos:column="57">lines<pos:position pos:line="45" pos:column="62"/></name> <operator pos:line="45" pos:column="63">&lt;<pos:position pos:line="45" pos:column="67"/></operator> <name pos:line="45" pos:column="65">begin<pos:position pos:line="45" pos:column="70"/></name><operator pos:line="45" pos:column="70">)<pos:position pos:line="45" pos:column="71"/></operator></expr>)<pos:position pos:line="45" pos:column="72"/></condition><then pos:line="45" pos:column="72">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">die<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><literal type="string" pos:line="46" pos:column="29">"file %s has only %lu lines"<pos:position pos:line="46" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="59">name_part<pos:position pos:line="46" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="70">lines<pos:position pos:line="46" pos:column="75"/></name></expr></argument>)<pos:position pos:line="46" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="77"/></expr_stmt></block></then></if>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name pos:line="47" pos:column="21">begin<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">&lt;<pos:position pos:line="47" pos:column="31"/></operator> <literal type="number" pos:line="47" pos:column="29">1<pos:position pos:line="47" pos:column="30"/></literal></expr>)<pos:position pos:line="47" pos:column="31"/></condition><then pos:line="47" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="25">begin<pos:position pos:line="48" pos:column="30"/></name> <operator pos:line="48" pos:column="31">=<pos:position pos:line="48" pos:column="32"/></operator> <literal type="number" pos:line="48" pos:column="33">1<pos:position pos:line="48" pos:column="34"/></literal></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt></block></then></if>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name pos:line="49" pos:column="21">end<pos:position pos:line="49" pos:column="24"/></name> <operator pos:line="49" pos:column="25">&lt;<pos:position pos:line="49" pos:column="29"/></operator> <literal type="number" pos:line="49" pos:column="27">1<pos:position pos:line="49" pos:column="28"/></literal></expr>)<pos:position pos:line="49" pos:column="29"/></condition><then pos:line="49" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="25">end<pos:position pos:line="50" pos:column="28"/></name> <operator pos:line="50" pos:column="29">=<pos:position pos:line="50" pos:column="30"/></operator> <name pos:line="50" pos:column="31">lines<pos:position pos:line="50" pos:column="36"/></name></expr>;<pos:position pos:line="50" pos:column="37"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="51" pos:column="17">begin<pos:position pos:line="51" pos:column="22"/></name><operator pos:line="51" pos:column="22">--<pos:position pos:line="51" pos:column="24"/></operator></expr>;<pos:position pos:line="51" pos:column="25"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">line_log_data_insert<pos:position pos:line="52" pos:column="37"/></name><argument_list pos:line="52" pos:column="37">(<argument><expr><operator pos:line="52" pos:column="38">&amp;<pos:position pos:line="52" pos:column="43"/></operator><name pos:line="52" pos:column="39">ranges<pos:position pos:line="52" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="47">full_name<pos:position pos:line="52" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="58">begin<pos:position pos:line="52" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="65">end<pos:position pos:line="52" pos:column="68"/></name></expr></argument>)<pos:position pos:line="52" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="70"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="54" pos:column="17">free_filespec<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name pos:line="54" pos:column="31">spec<pos:position pos:line="54" pos:column="35"/></name></expr></argument>)<pos:position pos:line="54" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="55" pos:column="17">FREE_AND_NULL<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><name pos:line="55" pos:column="31">ends<pos:position pos:line="55" pos:column="35"/></name></expr></argument>)<pos:position pos:line="55" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="56" pos:column="10"/></block>

	<for pos:line="58" pos:column="9">for <control pos:line="58" pos:column="13">(<init><expr><name pos:line="58" pos:column="14">p<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <name pos:line="58" pos:column="18">ranges<pos:position pos:line="58" pos:column="24"/></name></expr>;<pos:position pos:line="58" pos:column="25"/></init> <condition><expr><name pos:line="58" pos:column="26">p<pos:position pos:line="58" pos:column="27"/></name></expr>;<pos:position pos:line="58" pos:column="28"/></condition> <incr><expr><name pos:line="58" pos:column="29">p<pos:position pos:line="58" pos:column="30"/></name> <operator pos:line="58" pos:column="31">=<pos:position pos:line="58" pos:column="32"/></operator> <name><name pos:line="58" pos:column="33">p<pos:position pos:line="58" pos:column="34"/></name><operator pos:line="58" pos:column="34">-&gt;<pos:position pos:line="58" pos:column="39"/></operator><name pos:line="58" pos:column="36">next<pos:position pos:line="58" pos:column="40"/></name></name></expr></incr>)<pos:position pos:line="58" pos:column="41"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="17">sort_and_merge_range_set<pos:position pos:line="59" pos:column="41"/></name><argument_list pos:line="59" pos:column="41">(<argument><expr><operator pos:line="59" pos:column="42">&amp;<pos:position pos:line="59" pos:column="47"/></operator><name><name pos:line="59" pos:column="43">p<pos:position pos:line="59" pos:column="44"/></name><operator pos:line="59" pos:column="44">-&gt;<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="46">ranges<pos:position pos:line="59" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="54"/></expr_stmt></block></for>

	<return pos:line="61" pos:column="9">return <expr><name pos:line="61" pos:column="16">ranges<pos:position pos:line="61" pos:column="22"/></name></expr>;<pos:position pos:line="61" pos:column="23"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

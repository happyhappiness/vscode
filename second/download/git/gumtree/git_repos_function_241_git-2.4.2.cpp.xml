<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_241_git-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">combine_notes_fn<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">parse_combine_notes_fn<pos:position pos:line="1" pos:column="47"/></name><parameter_list pos:line="1" pos:column="47">(<parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">v<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><call><name pos:line="3" pos:column="14">strcasecmp<pos:position pos:line="3" pos:column="24"/></name><argument_list pos:line="3" pos:column="24">(<argument><expr><name pos:line="3" pos:column="25">v<pos:position pos:line="3" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="28">"overwrite"<pos:position pos:line="3" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="41"/></condition><then pos:line="3" pos:column="41">
		<block type="pseudo"><return pos:line="4" pos:column="17">return <expr><name pos:line="4" pos:column="24">combine_notes_overwrite<pos:position pos:line="4" pos:column="47"/></name></expr>;<pos:position pos:line="4" pos:column="48"/></return></block></then>
	<elseif pos:line="5" pos:column="9">else <if pos:line="5" pos:column="14">if <condition pos:line="5" pos:column="17">(<expr><operator pos:line="5" pos:column="18">!<pos:position pos:line="5" pos:column="19"/></operator><call><name pos:line="5" pos:column="19">strcasecmp<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">v<pos:position pos:line="5" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="33">"ignore"<pos:position pos:line="5" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="43"/></condition><then pos:line="5" pos:column="43">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><name pos:line="6" pos:column="24">combine_notes_ignore<pos:position pos:line="6" pos:column="44"/></name></expr>;<pos:position pos:line="6" pos:column="45"/></return></block></then></if></elseif>
	<elseif pos:line="7" pos:column="9">else <if pos:line="7" pos:column="14">if <condition pos:line="7" pos:column="17">(<expr><operator pos:line="7" pos:column="18">!<pos:position pos:line="7" pos:column="19"/></operator><call><name pos:line="7" pos:column="19">strcasecmp<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">v<pos:position pos:line="7" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="33">"concatenate"<pos:position pos:line="7" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="48"/></condition><then pos:line="7" pos:column="48">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><name pos:line="8" pos:column="24">combine_notes_concatenate<pos:position pos:line="8" pos:column="49"/></name></expr>;<pos:position pos:line="8" pos:column="50"/></return></block></then></if></elseif>
	<elseif pos:line="9" pos:column="9">else <if pos:line="9" pos:column="14">if <condition pos:line="9" pos:column="17">(<expr><operator pos:line="9" pos:column="18">!<pos:position pos:line="9" pos:column="19"/></operator><call><name pos:line="9" pos:column="19">strcasecmp<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">v<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="33">"cat_sort_uniq"<pos:position pos:line="9" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><name pos:line="10" pos:column="24">combine_notes_cat_sort_uniq<pos:position pos:line="10" pos:column="51"/></name></expr>;<pos:position pos:line="10" pos:column="52"/></return></block></then></if></elseif>
	<else pos:line="11" pos:column="9">else
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">NULL<pos:position pos:line="12" pos:column="28"/></name></expr>;<pos:position pos:line="12" pos:column="29"/></return></block></else></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6469_git-2.9.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">pthread_setspecific<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">pthread_key_t<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">key<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">void<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">value<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<return pos:line="3" pos:column="9">return <expr><ternary><condition><expr><call><name pos:line="3" pos:column="16">TlsSetValue<pos:position pos:line="3" pos:column="27"/></name><argument_list pos:line="3" pos:column="27">(<argument><expr><name pos:line="3" pos:column="28">key<pos:position pos:line="3" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="33">(<pos:position pos:line="3" pos:column="34"/></operator><name pos:line="3" pos:column="34">void<pos:position pos:line="3" pos:column="38"/></name> <operator pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></operator><operator pos:line="3" pos:column="40">)<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="41">value<pos:position pos:line="3" pos:column="46"/></name></expr></argument>)<pos:position pos:line="3" pos:column="47"/></argument_list></call></expr> ?<pos:position pos:line="3" pos:column="49"/></condition><then pos:line="3" pos:column="49"> <expr><literal type="number" pos:line="3" pos:column="50">0<pos:position pos:line="3" pos:column="51"/></literal></expr> <pos:position pos:line="3" pos:column="52"/></then><else pos:line="3" pos:column="52">: <expr><name pos:line="3" pos:column="54">EINVAL<pos:position pos:line="3" pos:column="60"/></name></expr></else></ternary></expr>;<pos:position pos:line="3" pos:column="61"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4182_git-2.5.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">assign_blame<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">scoreboard<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">sb<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">opt<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">rev_info<pos:position pos:line="3" pos:column="24"/></name></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">revs<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><name><name pos:line="3" pos:column="33">sb<pos:position pos:line="3" pos:column="35"/></name><operator pos:line="3" pos:column="35">-&gt;<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="37">revs<pos:position pos:line="3" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">commit<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><call><name pos:line="4" pos:column="33">prio_queue_get<pos:position pos:line="4" pos:column="47"/></name><argument_list pos:line="4" pos:column="47">(<argument><expr><operator pos:line="4" pos:column="48">&amp;<pos:position pos:line="4" pos:column="53"/></operator><name><name pos:line="4" pos:column="49">sb<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">-&gt;<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="53">commits<pos:position pos:line="4" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="62"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><name pos:line="6" pos:column="16">commit<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition> <block pos:line="6" pos:column="24">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">blame_entry<pos:position pos:line="7" pos:column="35"/></name></name> <modifier pos:line="7" pos:column="36">*<pos:position pos:line="7" pos:column="37"/></modifier></type><name pos:line="7" pos:column="37">ent<pos:position pos:line="7" pos:column="40"/></name></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">origin<pos:position pos:line="8" pos:column="30"/></name></name> <modifier pos:line="8" pos:column="31">*<pos:position pos:line="8" pos:column="32"/></modifier></type><name pos:line="8" pos:column="32">suspect<pos:position pos:line="8" pos:column="39"/></name> <init pos:line="8" pos:column="40">= <expr><name><name pos:line="8" pos:column="42">commit<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">-&gt;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="50">util<pos:position pos:line="8" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="55"/></decl_stmt>

		<comment type="block" pos:line="10" pos:column="17">/* find one suspect to break down */</comment>
		<while pos:line="11" pos:column="17">while <condition pos:line="11" pos:column="23">(<expr><name pos:line="11" pos:column="24">suspect<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">&amp;&amp;<pos:position pos:line="11" pos:column="42"/></operator> <operator pos:line="11" pos:column="35">!<pos:position pos:line="11" pos:column="36"/></operator><name><name pos:line="11" pos:column="36">suspect<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">suspects<pos:position pos:line="11" pos:column="53"/></name></name></expr>)<pos:position pos:line="11" pos:column="54"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">suspect<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">=<pos:position pos:line="12" pos:column="34"/></operator> <name><name pos:line="12" pos:column="35">suspect<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">next<pos:position pos:line="12" pos:column="48"/></name></name></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt></block></while>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">suspect<pos:position pos:line="14" pos:column="29"/></name></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30"> <block pos:line="14" pos:column="31">{
			<expr_stmt><expr><name pos:line="15" pos:column="25">commit<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <call><name pos:line="15" pos:column="34">prio_queue_get<pos:position pos:line="15" pos:column="48"/></name><argument_list pos:line="15" pos:column="48">(<argument><expr><operator pos:line="15" pos:column="49">&amp;<pos:position pos:line="15" pos:column="54"/></operator><name><name pos:line="15" pos:column="50">sb<pos:position pos:line="15" pos:column="52"/></name><operator pos:line="15" pos:column="52">-&gt;<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="54">commits<pos:position pos:line="15" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>
			<continue pos:line="16" pos:column="25">continue;<pos:position pos:line="16" pos:column="34"/></continue>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="19" pos:column="17">assert<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">commit<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">==<pos:position pos:line="19" pos:column="33"/></operator> <name><name pos:line="19" pos:column="34">suspect<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">-&gt;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="43">commit<pos:position pos:line="19" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>

		<comment type="block" pos:line="21" pos:column="17">/*
		 * We will use this suspect later in the loop,
		 * so hold onto it in the meantime.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">origin_incref<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">suspect<pos:position pos:line="25" pos:column="38"/></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">parse_commit<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">commit<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">reverse<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">||<pos:position pos:line="27" pos:column="31"/></operator>
		    <operator pos:line="28" pos:column="21">(<pos:position pos:line="28" pos:column="22"/></operator><operator pos:line="28" pos:column="22">!<pos:position pos:line="28" pos:column="23"/></operator><operator pos:line="28" pos:column="23">(<pos:position pos:line="28" pos:column="24"/></operator><name><name pos:line="28" pos:column="24">commit<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="32">object<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">.<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="39">flags<pos:position pos:line="28" pos:column="44"/></name></name> <operator pos:line="28" pos:column="45">&amp;<pos:position pos:line="28" pos:column="50"/></operator> <name pos:line="28" pos:column="47">UNINTERESTING<pos:position pos:line="28" pos:column="60"/></name><operator pos:line="28" pos:column="60">)<pos:position pos:line="28" pos:column="61"/></operator> <operator pos:line="28" pos:column="62">&amp;&amp;<pos:position pos:line="28" pos:column="72"/></operator>
		     <operator pos:line="29" pos:column="22">!<pos:position pos:line="29" pos:column="23"/></operator><operator pos:line="29" pos:column="23">(<pos:position pos:line="29" pos:column="24"/></operator><name><name pos:line="29" pos:column="24">revs<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">-&gt;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="30">max_age<pos:position pos:line="29" pos:column="37"/></name></name> <operator pos:line="29" pos:column="38">!=<pos:position pos:line="29" pos:column="40"/></operator> <operator pos:line="29" pos:column="41">-<pos:position pos:line="29" pos:column="42"/></operator><literal type="number" pos:line="29" pos:column="42">1<pos:position pos:line="29" pos:column="43"/></literal> <operator pos:line="29" pos:column="44">&amp;&amp;<pos:position pos:line="29" pos:column="54"/></operator> <name><name pos:line="29" pos:column="47">commit<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">-&gt;<pos:position pos:line="29" pos:column="58"/></operator><name pos:line="29" pos:column="55">date<pos:position pos:line="29" pos:column="59"/></name></name> <operator pos:line="29" pos:column="60">&lt;<pos:position pos:line="29" pos:column="64"/></operator> <name><name pos:line="29" pos:column="62">revs<pos:position pos:line="29" pos:column="66"/></name><operator pos:line="29" pos:column="66">-&gt;<pos:position pos:line="29" pos:column="71"/></operator><name pos:line="29" pos:column="68">max_age<pos:position pos:line="29" pos:column="75"/></name></name><operator pos:line="29" pos:column="75">)<pos:position pos:line="29" pos:column="76"/></operator><operator pos:line="29" pos:column="76">)<pos:position pos:line="29" pos:column="77"/></operator></expr>)<pos:position pos:line="29" pos:column="78"/></condition><then pos:line="29" pos:column="78">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="25">pass_blame<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><name pos:line="30" pos:column="36">sb<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">suspect<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">opt<pos:position pos:line="30" pos:column="52"/></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt></block></then>
		<else pos:line="31" pos:column="17">else <block pos:line="31" pos:column="22">{
			<expr_stmt><expr><name><name pos:line="32" pos:column="25">commit<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">-&gt;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="33">object<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">.<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="40">flags<pos:position pos:line="32" pos:column="45"/></name></name> <operator pos:line="32" pos:column="46">|=<pos:position pos:line="32" pos:column="48"/></operator> <name pos:line="32" pos:column="49">UNINTERESTING<pos:position pos:line="32" pos:column="62"/></name></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt>
			<if pos:line="33" pos:column="25">if <condition pos:line="33" pos:column="28">(<expr><name><name pos:line="33" pos:column="29">commit<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">object<pos:position pos:line="33" pos:column="43"/></name><operator pos:line="33" pos:column="43">.<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="44">parsed<pos:position pos:line="33" pos:column="50"/></name></name></expr>)<pos:position pos:line="33" pos:column="51"/></condition><then pos:line="33" pos:column="51">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="33">mark_parents_uninteresting<pos:position pos:line="34" pos:column="59"/></name><argument_list pos:line="34" pos:column="59">(<argument><expr><name pos:line="34" pos:column="60">commit<pos:position pos:line="34" pos:column="66"/></name></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="68"/></expr_stmt></block></then></if>
		}<pos:position pos:line="35" pos:column="18"/></block></else></if>
		<comment type="block" pos:line="36" pos:column="17">/* treat root commit as boundary */</comment>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><operator pos:line="37" pos:column="21">!<pos:position pos:line="37" pos:column="22"/></operator><name><name pos:line="37" pos:column="22">commit<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">-&gt;<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="30">parents<pos:position pos:line="37" pos:column="37"/></name></name> <operator pos:line="37" pos:column="38">&amp;&amp;<pos:position pos:line="37" pos:column="48"/></operator> <operator pos:line="37" pos:column="41">!<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="42">show_root<pos:position pos:line="37" pos:column="51"/></name></expr>)<pos:position pos:line="37" pos:column="52"/></condition><then pos:line="37" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="25">commit<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">-&gt;<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="33">object<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">.<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="40">flags<pos:position pos:line="38" pos:column="45"/></name></name> <operator pos:line="38" pos:column="46">|=<pos:position pos:line="38" pos:column="48"/></operator> <name pos:line="38" pos:column="49">UNINTERESTING<pos:position pos:line="38" pos:column="62"/></name></expr>;<pos:position pos:line="38" pos:column="63"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="40" pos:column="17">/* Take responsibility for the remaining entries */</comment>
		<expr_stmt><expr><name pos:line="41" pos:column="17">ent<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <name><name pos:line="41" pos:column="23">suspect<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">-&gt;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="32">suspects<pos:position pos:line="41" pos:column="40"/></name></name></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">ent<pos:position pos:line="42" pos:column="24"/></name></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25"> <block pos:line="42" pos:column="26">{
			<expr_stmt><expr><name><name pos:line="43" pos:column="25">suspect<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">-&gt;<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="34">guilty<pos:position pos:line="43" pos:column="40"/></name></name> <operator pos:line="43" pos:column="41">=<pos:position pos:line="43" pos:column="42"/></operator> <literal type="number" pos:line="43" pos:column="43">1<pos:position pos:line="43" pos:column="44"/></literal></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt>
			<for pos:line="44" pos:column="25">for <control pos:line="44" pos:column="29">(<init pos:line="44" pos:column="30">;<pos:position pos:line="44" pos:column="31"/></init><condition pos:line="44" pos:column="31">;<pos:position pos:line="44" pos:column="32"/></condition><incr/>)<pos:position pos:line="44" pos:column="33"/></control> <block pos:line="44" pos:column="34">{
				<decl_stmt><decl><type><name><name pos:line="45" pos:column="33">struct<pos:position pos:line="45" pos:column="39"/></name> <name pos:line="45" pos:column="40">blame_entry<pos:position pos:line="45" pos:column="51"/></name></name> <modifier pos:line="45" pos:column="52">*<pos:position pos:line="45" pos:column="53"/></modifier></type><name pos:line="45" pos:column="53">next<pos:position pos:line="45" pos:column="57"/></name> <init pos:line="45" pos:column="58">= <expr><name><name pos:line="45" pos:column="60">ent<pos:position pos:line="45" pos:column="63"/></name><operator pos:line="45" pos:column="63">-&gt;<pos:position pos:line="45" pos:column="68"/></operator><name pos:line="45" pos:column="65">next<pos:position pos:line="45" pos:column="69"/></name></name></expr></init></decl>;<pos:position pos:line="45" pos:column="70"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="46" pos:column="33">found_guilty_entry<pos:position pos:line="46" pos:column="51"/></name><argument_list pos:line="46" pos:column="51">(<argument><expr><name pos:line="46" pos:column="52">ent<pos:position pos:line="46" pos:column="55"/></name></expr></argument>)<pos:position pos:line="46" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="57"/></expr_stmt>
				<if pos:line="47" pos:column="33">if <condition pos:line="47" pos:column="36">(<expr><name pos:line="47" pos:column="37">next<pos:position pos:line="47" pos:column="41"/></name></expr>)<pos:position pos:line="47" pos:column="42"/></condition><then pos:line="47" pos:column="42"> <block pos:line="47" pos:column="43">{
					<expr_stmt><expr><name pos:line="48" pos:column="41">ent<pos:position pos:line="48" pos:column="44"/></name> <operator pos:line="48" pos:column="45">=<pos:position pos:line="48" pos:column="46"/></operator> <name pos:line="48" pos:column="47">next<pos:position pos:line="48" pos:column="51"/></name></expr>;<pos:position pos:line="48" pos:column="52"/></expr_stmt>
					<continue pos:line="49" pos:column="41">continue;<pos:position pos:line="49" pos:column="50"/></continue>
				}<pos:position pos:line="50" pos:column="34"/></block></then></if>
				<expr_stmt><expr><name><name pos:line="51" pos:column="33">ent<pos:position pos:line="51" pos:column="36"/></name><operator pos:line="51" pos:column="36">-&gt;<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="38">next<pos:position pos:line="51" pos:column="42"/></name></name> <operator pos:line="51" pos:column="43">=<pos:position pos:line="51" pos:column="44"/></operator> <name><name pos:line="51" pos:column="45">sb<pos:position pos:line="51" pos:column="47"/></name><operator pos:line="51" pos:column="47">-&gt;<pos:position pos:line="51" pos:column="52"/></operator><name pos:line="51" pos:column="49">ent<pos:position pos:line="51" pos:column="52"/></name></name></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="52" pos:column="33">sb<pos:position pos:line="52" pos:column="35"/></name><operator pos:line="52" pos:column="35">-&gt;<pos:position pos:line="52" pos:column="40"/></operator><name pos:line="52" pos:column="37">ent<pos:position pos:line="52" pos:column="40"/></name></name> <operator pos:line="52" pos:column="41">=<pos:position pos:line="52" pos:column="42"/></operator> <name><name pos:line="52" pos:column="43">suspect<pos:position pos:line="52" pos:column="50"/></name><operator pos:line="52" pos:column="50">-&gt;<pos:position pos:line="52" pos:column="55"/></operator><name pos:line="52" pos:column="52">suspects<pos:position pos:line="52" pos:column="60"/></name></name></expr>;<pos:position pos:line="52" pos:column="61"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="53" pos:column="33">suspect<pos:position pos:line="53" pos:column="40"/></name><operator pos:line="53" pos:column="40">-&gt;<pos:position pos:line="53" pos:column="45"/></operator><name pos:line="53" pos:column="42">suspects<pos:position pos:line="53" pos:column="50"/></name></name> <operator pos:line="53" pos:column="51">=<pos:position pos:line="53" pos:column="52"/></operator> <name pos:line="53" pos:column="53">NULL<pos:position pos:line="53" pos:column="57"/></name></expr>;<pos:position pos:line="53" pos:column="58"/></expr_stmt>
				<break pos:line="54" pos:column="33">break;<pos:position pos:line="54" pos:column="39"/></break>
			}<pos:position pos:line="55" pos:column="26"/></block></for>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">origin_decref<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">suspect<pos:position pos:line="57" pos:column="38"/></name></expr></argument>)<pos:position pos:line="57" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="40"/></expr_stmt>

		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">DEBUG<pos:position pos:line="59" pos:column="26"/></name></expr>)<pos:position pos:line="59" pos:column="27"/></condition><then pos:line="59" pos:column="27"> <comment type="block" pos:line="59" pos:column="28">/* sanity */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="25">sanity_check_refcnt<pos:position pos:line="60" pos:column="44"/></name><argument_list pos:line="60" pos:column="44">(<argument><expr><name pos:line="60" pos:column="45">sb<pos:position pos:line="60" pos:column="47"/></name></expr></argument>)<pos:position pos:line="60" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="49"/></expr_stmt></block></then></if>
	}<pos:position pos:line="61" pos:column="10"/></block></while>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

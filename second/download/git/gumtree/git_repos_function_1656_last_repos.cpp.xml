<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1656_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">diff_debug_filespec<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">diff_filespec<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">s<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">x<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">one<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">fprintf<pos:position pos:line="3" pos:column="16"/></name><argument_list pos:line="3" pos:column="16">(<argument><expr><name pos:line="3" pos:column="17">stderr<pos:position pos:line="3" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="25">"queue[%d] %s (%s) %s %06o %s\n"<pos:position pos:line="3" pos:column="57"/></literal></expr></argument>,
		<argument><expr><name pos:line="4" pos:column="17">x<pos:position pos:line="4" pos:column="18"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="4" pos:column="20">one<pos:position pos:line="4" pos:column="23"/></name></expr> ?<pos:position pos:line="4" pos:column="25"/></condition><then pos:line="4" pos:column="25"> <expr><name pos:line="4" pos:column="26">one<pos:position pos:line="4" pos:column="29"/></name></expr> <pos:position pos:line="4" pos:column="30"/></then><else pos:line="4" pos:column="30">: <expr><literal type="string" pos:line="4" pos:column="32">""<pos:position pos:line="4" pos:column="34"/></literal></expr></else></ternary></expr></argument>,
		<argument><expr><name><name pos:line="5" pos:column="17">s<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">path<pos:position pos:line="5" pos:column="24"/></name></name></expr></argument>,
		<argument><expr><ternary><condition><expr><call><name pos:line="6" pos:column="17">DIFF_FILE_VALID<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">s<pos:position pos:line="6" pos:column="34"/></name></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr> ?<pos:position pos:line="6" pos:column="37"/></condition><then pos:line="6" pos:column="37"> <expr><literal type="string" pos:line="6" pos:column="38">"valid"<pos:position pos:line="6" pos:column="45"/></literal></expr> <pos:position pos:line="6" pos:column="46"/></then><else pos:line="6" pos:column="46">: <expr><literal type="string" pos:line="6" pos:column="48">"invalid"<pos:position pos:line="6" pos:column="57"/></literal></expr></else></ternary></expr></argument>,
		<argument><expr><name><name pos:line="7" pos:column="17">s<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">mode<pos:position pos:line="7" pos:column="24"/></name></name></expr></argument>,
		<argument><expr><ternary><condition><expr><name><name pos:line="8" pos:column="17">s<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">-&gt;<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="20">oid_valid<pos:position pos:line="8" pos:column="29"/></name></name></expr> ?<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31"> <expr><call><name pos:line="8" pos:column="32">oid_to_hex<pos:position pos:line="8" pos:column="42"/></name><argument_list pos:line="8" pos:column="42">(<argument><expr><operator pos:line="8" pos:column="43">&amp;<pos:position pos:line="8" pos:column="48"/></operator><name><name pos:line="8" pos:column="44">s<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">-&gt;<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="47">oid<pos:position pos:line="8" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr> <pos:position pos:line="8" pos:column="52"/></then><else pos:line="8" pos:column="52">: <expr><literal type="string" pos:line="8" pos:column="54">""<pos:position pos:line="8" pos:column="56"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">fprintf<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">stderr<pos:position pos:line="9" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="25">"queue[%d] %s size %lu\n"<pos:position pos:line="9" pos:column="50"/></literal></expr></argument>,
		<argument><expr><name pos:line="10" pos:column="17">x<pos:position pos:line="10" pos:column="18"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="10" pos:column="20">one<pos:position pos:line="10" pos:column="23"/></name></expr> ?<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25"> <expr><name pos:line="10" pos:column="26">one<pos:position pos:line="10" pos:column="29"/></name></expr> <pos:position pos:line="10" pos:column="30"/></then><else pos:line="10" pos:column="30">: <expr><literal type="string" pos:line="10" pos:column="32">""<pos:position pos:line="10" pos:column="34"/></literal></expr></else></ternary></expr></argument>,
		<argument><expr><name><name pos:line="11" pos:column="17">s<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">size<pos:position pos:line="11" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3851_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">prepare_to_write_split_index<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">index_state<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">istate<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">split_index<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">si<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><call><name pos:line="3" pos:column="34">init_split_index<pos:position pos:line="3" pos:column="50"/></name><argument_list pos:line="3" pos:column="50">(<argument><expr><name pos:line="3" pos:column="51">istate<pos:position pos:line="3" pos:column="57"/></name></expr></argument>)<pos:position pos:line="3" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">cache_entry<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier><modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">entries<pos:position pos:line="4" pos:column="37"/></name> <init pos:line="4" pos:column="38">= <expr><name pos:line="4" pos:column="40">NULL<pos:position pos:line="4" pos:column="44"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="47">ce<pos:position pos:line="4" pos:column="49"/></name></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">nr_entries<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="32">nr_alloc<pos:position pos:line="5" pos:column="40"/></name> <init pos:line="5" pos:column="41">= <expr><literal type="number" pos:line="5" pos:column="43">0<pos:position pos:line="5" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="7" pos:column="9">si<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">delete_bitmap<pos:position pos:line="7" pos:column="26"/></name></name> <operator pos:line="7" pos:column="27">=<pos:position pos:line="7" pos:column="28"/></operator> <call><name pos:line="7" pos:column="29">ewah_new<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">()<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">si<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">replace_bitmap<pos:position pos:line="8" pos:column="27"/></name></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <call><name pos:line="8" pos:column="30">ewah_new<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">()<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">si<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">base<pos:position pos:line="10" pos:column="21"/></name></name></expr>)<pos:position pos:line="10" pos:column="22"/></condition><then pos:line="10" pos:column="22"> <block pos:line="10" pos:column="23">{
		<comment type="block" pos:line="11" pos:column="17">/* Go through istate-&gt;cache[] and mark CE_MATCHED to
		 * entry with positive index. We'll go through
		 * base-&gt;cache[] later to delete all entries in base
		 * that are not marked with either CE_MATCHED or
		 * CE_UPDATE_IN_BASE. If istate-&gt;cache[i] is a
		 * duplicate, deduplicate it.
		 */</comment>
		<for pos:line="18" pos:column="17">for <control pos:line="18" pos:column="21">(<init><expr><name pos:line="18" pos:column="22">i<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal></expr>;<pos:position pos:line="18" pos:column="28"/></init> <condition><expr><name pos:line="18" pos:column="29">i<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">&lt;<pos:position pos:line="18" pos:column="35"/></operator> <name><name pos:line="18" pos:column="33">istate<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">cache_nr<pos:position pos:line="18" pos:column="49"/></name></name></expr>;<pos:position pos:line="18" pos:column="50"/></condition> <incr><expr><name pos:line="18" pos:column="51">i<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">++<pos:position pos:line="18" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="55"/></control> <block pos:line="18" pos:column="56">{
			<decl_stmt><decl><type><name><name pos:line="19" pos:column="25">struct<pos:position pos:line="19" pos:column="31"/></name> <name pos:line="19" pos:column="32">cache_entry<pos:position pos:line="19" pos:column="43"/></name></name> <modifier pos:line="19" pos:column="44">*<pos:position pos:line="19" pos:column="45"/></modifier></type><name pos:line="19" pos:column="45">base<pos:position pos:line="19" pos:column="49"/></name></decl>;<pos:position pos:line="19" pos:column="50"/></decl_stmt>
			<comment type="block" pos:line="20" pos:column="25">/* namelen is checked separately */</comment>
			<decl_stmt><decl><type><specifier pos:line="21" pos:column="25">const<pos:position pos:line="21" pos:column="30"/></specifier> <name pos:line="21" pos:column="31">unsigned<pos:position pos:line="21" pos:column="39"/></name> <name pos:line="21" pos:column="40">int<pos:position pos:line="21" pos:column="43"/></name></type> <name pos:line="21" pos:column="44">ondisk_flags<pos:position pos:line="21" pos:column="56"/></name> <init pos:line="21" pos:column="57">=
				<expr><name pos:line="22" pos:column="33">CE_STAGEMASK<pos:position pos:line="22" pos:column="45"/></name> <operator pos:line="22" pos:column="46">|<pos:position pos:line="22" pos:column="47"/></operator> <name pos:line="22" pos:column="48">CE_VALID<pos:position pos:line="22" pos:column="56"/></name> <operator pos:line="22" pos:column="57">|<pos:position pos:line="22" pos:column="58"/></operator> <name pos:line="22" pos:column="59">CE_EXTENDED_FLAGS<pos:position pos:line="22" pos:column="76"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="77"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="23" pos:column="25">unsigned<pos:position pos:line="23" pos:column="33"/></name> <name pos:line="23" pos:column="34">int<pos:position pos:line="23" pos:column="37"/></name></type> <name pos:line="23" pos:column="38">ce_flags<pos:position pos:line="23" pos:column="46"/></name></decl>, <decl><type ref="prev"/><name pos:line="23" pos:column="48">base_flags<pos:position pos:line="23" pos:column="58"/></name></decl>, <decl><type ref="prev"/><name pos:line="23" pos:column="60">ret<pos:position pos:line="23" pos:column="63"/></name></decl>;<pos:position pos:line="23" pos:column="64"/></decl_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">ce<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <name><name pos:line="24" pos:column="30">istate<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">cache<pos:position pos:line="24" pos:column="43"/></name><index pos:line="24" pos:column="43">[<expr><name pos:line="24" pos:column="44">i<pos:position pos:line="24" pos:column="45"/></name></expr>]<pos:position pos:line="24" pos:column="46"/></index></name></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><operator pos:line="25" pos:column="29">!<pos:position pos:line="25" pos:column="30"/></operator><name><name pos:line="25" pos:column="30">ce<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">index<pos:position pos:line="25" pos:column="39"/></name></name></expr>)<pos:position pos:line="25" pos:column="40"/></condition><then pos:line="25" pos:column="40">
				<block type="pseudo"><continue pos:line="26" pos:column="33">continue;<pos:position pos:line="26" pos:column="42"/></continue></block></then></if>
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><name><name pos:line="27" pos:column="29">ce<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">-&gt;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="33">index<pos:position pos:line="27" pos:column="38"/></name></name> <operator pos:line="27" pos:column="39">&gt;<pos:position pos:line="27" pos:column="43"/></operator> <name><name pos:line="27" pos:column="41">si<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">-&gt;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="45">base<pos:position pos:line="27" pos:column="49"/></name><operator pos:line="27" pos:column="49">-&gt;<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="51">cache_nr<pos:position pos:line="27" pos:column="59"/></name></name></expr>)<pos:position pos:line="27" pos:column="60"/></condition><then pos:line="27" pos:column="60"> <block pos:line="27" pos:column="61">{
				<expr_stmt><expr><name><name pos:line="28" pos:column="33">ce<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">-&gt;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="37">index<pos:position pos:line="28" pos:column="42"/></name></name> <operator pos:line="28" pos:column="43">=<pos:position pos:line="28" pos:column="44"/></operator> <literal type="number" pos:line="28" pos:column="45">0<pos:position pos:line="28" pos:column="46"/></literal></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
				<continue pos:line="29" pos:column="33">continue;<pos:position pos:line="29" pos:column="42"/></continue>
			}<pos:position pos:line="30" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name><name pos:line="31" pos:column="25">ce<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">-&gt;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="29">ce_flags<pos:position pos:line="31" pos:column="37"/></name></name> <operator pos:line="31" pos:column="38">|=<pos:position pos:line="31" pos:column="40"/></operator> <name pos:line="31" pos:column="41">CE_MATCHED<pos:position pos:line="31" pos:column="51"/></name></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt> <comment type="block" pos:line="31" pos:column="53">/* or "shared" */</comment>
			<expr_stmt><expr><name pos:line="32" pos:column="25">base<pos:position pos:line="32" pos:column="29"/></name> <operator pos:line="32" pos:column="30">=<pos:position pos:line="32" pos:column="31"/></operator> <name><name pos:line="32" pos:column="32">si<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">-&gt;<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="36">base<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">-&gt;<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="42">cache<pos:position pos:line="32" pos:column="47"/></name><index pos:line="32" pos:column="47">[<expr><name><name pos:line="32" pos:column="48">ce<pos:position pos:line="32" pos:column="50"/></name><operator pos:line="32" pos:column="50">-&gt;<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="52">index<pos:position pos:line="32" pos:column="57"/></name></name> <operator pos:line="32" pos:column="58">-<pos:position pos:line="32" pos:column="59"/></operator> <literal type="number" pos:line="32" pos:column="60">1<pos:position pos:line="32" pos:column="61"/></literal></expr>]<pos:position pos:line="32" pos:column="62"/></index></name></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt>
			<if pos:line="33" pos:column="25">if <condition pos:line="33" pos:column="28">(<expr><name pos:line="33" pos:column="29">ce<pos:position pos:line="33" pos:column="31"/></name> <operator pos:line="33" pos:column="32">==<pos:position pos:line="33" pos:column="34"/></operator> <name pos:line="33" pos:column="35">base<pos:position pos:line="33" pos:column="39"/></name></expr>)<pos:position pos:line="33" pos:column="40"/></condition><then pos:line="33" pos:column="40">
				<block type="pseudo"><continue pos:line="34" pos:column="33">continue;<pos:position pos:line="34" pos:column="42"/></continue></block></then></if>
			<if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><name><name pos:line="35" pos:column="29">ce<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">-&gt;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="33">ce_namelen<pos:position pos:line="35" pos:column="43"/></name></name> <operator pos:line="35" pos:column="44">!=<pos:position pos:line="35" pos:column="46"/></operator> <name><name pos:line="35" pos:column="47">base<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">-&gt;<pos:position pos:line="35" pos:column="56"/></operator><name pos:line="35" pos:column="53">ce_namelen<pos:position pos:line="35" pos:column="63"/></name></name> <operator pos:line="35" pos:column="64">||<pos:position pos:line="35" pos:column="66"/></operator>
			    <call><name pos:line="36" pos:column="29">strcmp<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><name><name pos:line="36" pos:column="36">ce<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">-&gt;<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="40">name<pos:position pos:line="36" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="46">base<pos:position pos:line="36" pos:column="50"/></name><operator pos:line="36" pos:column="50">-&gt;<pos:position pos:line="36" pos:column="55"/></operator><name pos:line="36" pos:column="52">name<pos:position pos:line="36" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="58"/></condition><then pos:line="36" pos:column="58"> <block pos:line="36" pos:column="59">{
				<expr_stmt><expr><name><name pos:line="37" pos:column="33">ce<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">-&gt;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="37">index<pos:position pos:line="37" pos:column="42"/></name></name> <operator pos:line="37" pos:column="43">=<pos:position pos:line="37" pos:column="44"/></operator> <literal type="number" pos:line="37" pos:column="45">0<pos:position pos:line="37" pos:column="46"/></literal></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
				<continue pos:line="38" pos:column="33">continue;<pos:position pos:line="38" pos:column="42"/></continue>
			}<pos:position pos:line="39" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="40" pos:column="25">ce_flags<pos:position pos:line="40" pos:column="33"/></name> <operator pos:line="40" pos:column="34">=<pos:position pos:line="40" pos:column="35"/></operator> <name><name pos:line="40" pos:column="36">ce<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">-&gt;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="40">ce_flags<pos:position pos:line="40" pos:column="48"/></name></name></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="41" pos:column="25">base_flags<pos:position pos:line="41" pos:column="35"/></name> <operator pos:line="41" pos:column="36">=<pos:position pos:line="41" pos:column="37"/></operator> <name><name pos:line="41" pos:column="38">base<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">-&gt;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="44">ce_flags<pos:position pos:line="41" pos:column="52"/></name></name></expr>;<pos:position pos:line="41" pos:column="53"/></expr_stmt>
			<comment type="block" pos:line="42" pos:column="25">/* only on-disk flags matter */</comment>
			<expr_stmt><expr><name><name pos:line="43" pos:column="25">ce<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">ce_flags<pos:position pos:line="43" pos:column="37"/></name></name>   <operator pos:line="43" pos:column="40">&amp;=<pos:position pos:line="43" pos:column="46"/></operator> <name pos:line="43" pos:column="43">ondisk_flags<pos:position pos:line="43" pos:column="55"/></name></expr>;<pos:position pos:line="43" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="44" pos:column="25">base<pos:position pos:line="44" pos:column="29"/></name><operator pos:line="44" pos:column="29">-&gt;<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="31">ce_flags<pos:position pos:line="44" pos:column="39"/></name></name> <operator pos:line="44" pos:column="40">&amp;=<pos:position pos:line="44" pos:column="46"/></operator> <name pos:line="44" pos:column="43">ondisk_flags<pos:position pos:line="44" pos:column="55"/></name></expr>;<pos:position pos:line="44" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name pos:line="45" pos:column="25">ret<pos:position pos:line="45" pos:column="28"/></name> <operator pos:line="45" pos:column="29">=<pos:position pos:line="45" pos:column="30"/></operator> <call><name pos:line="45" pos:column="31">memcmp<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><operator pos:line="45" pos:column="38">&amp;<pos:position pos:line="45" pos:column="43"/></operator><name><name pos:line="45" pos:column="39">ce<pos:position pos:line="45" pos:column="41"/></name><operator pos:line="45" pos:column="41">-&gt;<pos:position pos:line="45" pos:column="46"/></operator><name pos:line="45" pos:column="43">ce_stat_data<pos:position pos:line="45" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="57">&amp;<pos:position pos:line="45" pos:column="62"/></operator><name><name pos:line="45" pos:column="58">base<pos:position pos:line="45" pos:column="62"/></name><operator pos:line="45" pos:column="62">-&gt;<pos:position pos:line="45" pos:column="67"/></operator><name pos:line="45" pos:column="64">ce_stat_data<pos:position pos:line="45" pos:column="76"/></name></name></expr></argument>,
				     <argument><expr><call><name pos:line="46" pos:column="38">offsetof<pos:position pos:line="46" pos:column="46"/></name><argument_list pos:line="46" pos:column="46">(<argument><expr pos:line="46" pos:column="47">struct <name pos:line="46" pos:column="54">cache_entry<pos:position pos:line="46" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="67">name<pos:position pos:line="46" pos:column="71"/></name></expr></argument>)<pos:position pos:line="46" pos:column="72"/></argument_list></call> <operator pos:line="46" pos:column="73">-<pos:position pos:line="46" pos:column="74"/></operator>
				     <call><name pos:line="47" pos:column="38">offsetof<pos:position pos:line="47" pos:column="46"/></name><argument_list pos:line="47" pos:column="46">(<argument><expr pos:line="47" pos:column="47">struct <name pos:line="47" pos:column="54">cache_entry<pos:position pos:line="47" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="67">ce_stat_data<pos:position pos:line="47" pos:column="79"/></name></expr></argument>)<pos:position pos:line="47" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="82"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="48" pos:column="25">ce<pos:position pos:line="48" pos:column="27"/></name><operator pos:line="48" pos:column="27">-&gt;<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="29">ce_flags<pos:position pos:line="48" pos:column="37"/></name></name> <operator pos:line="48" pos:column="38">=<pos:position pos:line="48" pos:column="39"/></operator> <name pos:line="48" pos:column="40">ce_flags<pos:position pos:line="48" pos:column="48"/></name></expr>;<pos:position pos:line="48" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="49" pos:column="25">base<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">-&gt;<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="31">ce_flags<pos:position pos:line="49" pos:column="39"/></name></name> <operator pos:line="49" pos:column="40">=<pos:position pos:line="49" pos:column="41"/></operator> <name pos:line="49" pos:column="42">base_flags<pos:position pos:line="49" pos:column="52"/></name></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><name pos:line="50" pos:column="29">ret<pos:position pos:line="50" pos:column="32"/></name></expr>)<pos:position pos:line="50" pos:column="33"/></condition><then pos:line="50" pos:column="33">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="51" pos:column="33">ce<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">-&gt;<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="37">ce_flags<pos:position pos:line="51" pos:column="45"/></name></name> <operator pos:line="51" pos:column="46">|=<pos:position pos:line="51" pos:column="48"/></operator> <name pos:line="51" pos:column="49">CE_UPDATE_IN_BASE<pos:position pos:line="51" pos:column="66"/></name></expr>;<pos:position pos:line="51" pos:column="67"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="52" pos:column="25">free<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name pos:line="52" pos:column="30">base<pos:position pos:line="52" pos:column="34"/></name></expr></argument>)<pos:position pos:line="52" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="53" pos:column="25">si<pos:position pos:line="53" pos:column="27"/></name><operator pos:line="53" pos:column="27">-&gt;<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="29">base<pos:position pos:line="53" pos:column="33"/></name><operator pos:line="53" pos:column="33">-&gt;<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="35">cache<pos:position pos:line="53" pos:column="40"/></name><index pos:line="53" pos:column="40">[<expr><name><name pos:line="53" pos:column="41">ce<pos:position pos:line="53" pos:column="43"/></name><operator pos:line="53" pos:column="43">-&gt;<pos:position pos:line="53" pos:column="48"/></operator><name pos:line="53" pos:column="45">index<pos:position pos:line="53" pos:column="50"/></name></name> <operator pos:line="53" pos:column="51">-<pos:position pos:line="53" pos:column="52"/></operator> <literal type="number" pos:line="53" pos:column="53">1<pos:position pos:line="53" pos:column="54"/></literal></expr>]<pos:position pos:line="53" pos:column="55"/></index></name> <operator pos:line="53" pos:column="56">=<pos:position pos:line="53" pos:column="57"/></operator> <name pos:line="53" pos:column="58">ce<pos:position pos:line="53" pos:column="60"/></name></expr>;<pos:position pos:line="53" pos:column="61"/></expr_stmt>
		}<pos:position pos:line="54" pos:column="18"/></block></for>
		<for pos:line="55" pos:column="17">for <control pos:line="55" pos:column="21">(<init><expr><name pos:line="55" pos:column="22">i<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <literal type="number" pos:line="55" pos:column="26">0<pos:position pos:line="55" pos:column="27"/></literal></expr>;<pos:position pos:line="55" pos:column="28"/></init> <condition><expr><name pos:line="55" pos:column="29">i<pos:position pos:line="55" pos:column="30"/></name> <operator pos:line="55" pos:column="31">&lt;<pos:position pos:line="55" pos:column="35"/></operator> <name><name pos:line="55" pos:column="33">si<pos:position pos:line="55" pos:column="35"/></name><operator pos:line="55" pos:column="35">-&gt;<pos:position pos:line="55" pos:column="40"/></operator><name pos:line="55" pos:column="37">base<pos:position pos:line="55" pos:column="41"/></name><operator pos:line="55" pos:column="41">-&gt;<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="43">cache_nr<pos:position pos:line="55" pos:column="51"/></name></name></expr>;<pos:position pos:line="55" pos:column="52"/></condition> <incr><expr><name pos:line="55" pos:column="53">i<pos:position pos:line="55" pos:column="54"/></name><operator pos:line="55" pos:column="54">++<pos:position pos:line="55" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="55" pos:column="57"/></control> <block pos:line="55" pos:column="58">{
			<expr_stmt><expr><name pos:line="56" pos:column="25">ce<pos:position pos:line="56" pos:column="27"/></name> <operator pos:line="56" pos:column="28">=<pos:position pos:line="56" pos:column="29"/></operator> <name><name pos:line="56" pos:column="30">si<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">-&gt;<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="34">base<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">-&gt;<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="40">cache<pos:position pos:line="56" pos:column="45"/></name><index pos:line="56" pos:column="45">[<expr><name pos:line="56" pos:column="46">i<pos:position pos:line="56" pos:column="47"/></name></expr>]<pos:position pos:line="56" pos:column="48"/></index></name></expr>;<pos:position pos:line="56" pos:column="49"/></expr_stmt>
			<if pos:line="57" pos:column="25">if <condition pos:line="57" pos:column="28">(<expr><operator pos:line="57" pos:column="29">(<pos:position pos:line="57" pos:column="30"/></operator><name><name pos:line="57" pos:column="30">ce<pos:position pos:line="57" pos:column="32"/></name><operator pos:line="57" pos:column="32">-&gt;<pos:position pos:line="57" pos:column="37"/></operator><name pos:line="57" pos:column="34">ce_flags<pos:position pos:line="57" pos:column="42"/></name></name> <operator pos:line="57" pos:column="43">&amp;<pos:position pos:line="57" pos:column="48"/></operator> <name pos:line="57" pos:column="45">CE_REMOVE<pos:position pos:line="57" pos:column="54"/></name><operator pos:line="57" pos:column="54">)<pos:position pos:line="57" pos:column="55"/></operator> <operator pos:line="57" pos:column="56">||<pos:position pos:line="57" pos:column="58"/></operator>
			    <operator pos:line="58" pos:column="29">!<pos:position pos:line="58" pos:column="30"/></operator><operator pos:line="58" pos:column="30">(<pos:position pos:line="58" pos:column="31"/></operator><name><name pos:line="58" pos:column="31">ce<pos:position pos:line="58" pos:column="33"/></name><operator pos:line="58" pos:column="33">-&gt;<pos:position pos:line="58" pos:column="38"/></operator><name pos:line="58" pos:column="35">ce_flags<pos:position pos:line="58" pos:column="43"/></name></name> <operator pos:line="58" pos:column="44">&amp;<pos:position pos:line="58" pos:column="49"/></operator> <name pos:line="58" pos:column="46">CE_MATCHED<pos:position pos:line="58" pos:column="56"/></name><operator pos:line="58" pos:column="56">)<pos:position pos:line="58" pos:column="57"/></operator></expr>)<pos:position pos:line="58" pos:column="58"/></condition><then pos:line="58" pos:column="58">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="33">ewah_set<pos:position pos:line="59" pos:column="41"/></name><argument_list pos:line="59" pos:column="41">(<argument><expr><name><name pos:line="59" pos:column="42">si<pos:position pos:line="59" pos:column="44"/></name><operator pos:line="59" pos:column="44">-&gt;<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="46">delete_bitmap<pos:position pos:line="59" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="61">i<pos:position pos:line="59" pos:column="62"/></name></expr></argument>)<pos:position pos:line="59" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="64"/></expr_stmt></block></then>
			<elseif pos:line="60" pos:column="25">else <if pos:line="60" pos:column="30">if <condition pos:line="60" pos:column="33">(<expr><name><name pos:line="60" pos:column="34">ce<pos:position pos:line="60" pos:column="36"/></name><operator pos:line="60" pos:column="36">-&gt;<pos:position pos:line="60" pos:column="41"/></operator><name pos:line="60" pos:column="38">ce_flags<pos:position pos:line="60" pos:column="46"/></name></name> <operator pos:line="60" pos:column="47">&amp;<pos:position pos:line="60" pos:column="52"/></operator> <name pos:line="60" pos:column="49">CE_UPDATE_IN_BASE<pos:position pos:line="60" pos:column="66"/></name></expr>)<pos:position pos:line="60" pos:column="67"/></condition><then pos:line="60" pos:column="67"> <block pos:line="60" pos:column="68">{
				<expr_stmt><expr><call><name pos:line="61" pos:column="33">ewah_set<pos:position pos:line="61" pos:column="41"/></name><argument_list pos:line="61" pos:column="41">(<argument><expr><name><name pos:line="61" pos:column="42">si<pos:position pos:line="61" pos:column="44"/></name><operator pos:line="61" pos:column="44">-&gt;<pos:position pos:line="61" pos:column="49"/></operator><name pos:line="61" pos:column="46">replace_bitmap<pos:position pos:line="61" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="62">i<pos:position pos:line="61" pos:column="63"/></name></expr></argument>)<pos:position pos:line="61" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="65"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="62" pos:column="33">ce<pos:position pos:line="62" pos:column="35"/></name><operator pos:line="62" pos:column="35">-&gt;<pos:position pos:line="62" pos:column="40"/></operator><name pos:line="62" pos:column="37">ce_flags<pos:position pos:line="62" pos:column="45"/></name></name> <operator pos:line="62" pos:column="46">|=<pos:position pos:line="62" pos:column="48"/></operator> <name pos:line="62" pos:column="49">CE_STRIP_NAME<pos:position pos:line="62" pos:column="62"/></name></expr>;<pos:position pos:line="62" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="63" pos:column="33">ALLOC_GROW<pos:position pos:line="63" pos:column="43"/></name><argument_list pos:line="63" pos:column="43">(<argument><expr><name pos:line="63" pos:column="44">entries<pos:position pos:line="63" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="53">nr_entries<pos:position pos:line="63" pos:column="63"/></name><operator pos:line="63" pos:column="63">+<pos:position pos:line="63" pos:column="64"/></operator><literal type="number" pos:line="63" pos:column="64">1<pos:position pos:line="63" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="67">nr_alloc<pos:position pos:line="63" pos:column="75"/></name></expr></argument>)<pos:position pos:line="63" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="77"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="64" pos:column="33">entries<pos:position pos:line="64" pos:column="40"/></name><index pos:line="64" pos:column="40">[<expr><name pos:line="64" pos:column="41">nr_entries<pos:position pos:line="64" pos:column="51"/></name><operator pos:line="64" pos:column="51">++<pos:position pos:line="64" pos:column="53"/></operator></expr>]<pos:position pos:line="64" pos:column="54"/></index></name> <operator pos:line="64" pos:column="55">=<pos:position pos:line="64" pos:column="56"/></operator> <name pos:line="64" pos:column="57">ce<pos:position pos:line="64" pos:column="59"/></name></expr>;<pos:position pos:line="64" pos:column="60"/></expr_stmt>
			}<pos:position pos:line="65" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="66" pos:column="18"/></block></for>
	}<pos:position pos:line="67" pos:column="10"/></block></then></if>

	<for pos:line="69" pos:column="9">for <control pos:line="69" pos:column="13">(<init><expr><name pos:line="69" pos:column="14">i<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">=<pos:position pos:line="69" pos:column="17"/></operator> <literal type="number" pos:line="69" pos:column="18">0<pos:position pos:line="69" pos:column="19"/></literal></expr>;<pos:position pos:line="69" pos:column="20"/></init> <condition><expr><name pos:line="69" pos:column="21">i<pos:position pos:line="69" pos:column="22"/></name> <operator pos:line="69" pos:column="23">&lt;<pos:position pos:line="69" pos:column="27"/></operator> <name><name pos:line="69" pos:column="25">istate<pos:position pos:line="69" pos:column="31"/></name><operator pos:line="69" pos:column="31">-&gt;<pos:position pos:line="69" pos:column="36"/></operator><name pos:line="69" pos:column="33">cache_nr<pos:position pos:line="69" pos:column="41"/></name></name></expr>;<pos:position pos:line="69" pos:column="42"/></condition> <incr><expr><name pos:line="69" pos:column="43">i<pos:position pos:line="69" pos:column="44"/></name><operator pos:line="69" pos:column="44">++<pos:position pos:line="69" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="69" pos:column="47"/></control> <block pos:line="69" pos:column="48">{
		<expr_stmt><expr><name pos:line="70" pos:column="17">ce<pos:position pos:line="70" pos:column="19"/></name> <operator pos:line="70" pos:column="20">=<pos:position pos:line="70" pos:column="21"/></operator> <name><name pos:line="70" pos:column="22">istate<pos:position pos:line="70" pos:column="28"/></name><operator pos:line="70" pos:column="28">-&gt;<pos:position pos:line="70" pos:column="33"/></operator><name pos:line="70" pos:column="30">cache<pos:position pos:line="70" pos:column="35"/></name><index pos:line="70" pos:column="35">[<expr><name pos:line="70" pos:column="36">i<pos:position pos:line="70" pos:column="37"/></name></expr>]<pos:position pos:line="70" pos:column="38"/></index></name></expr>;<pos:position pos:line="70" pos:column="39"/></expr_stmt>
		<if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><operator pos:line="71" pos:column="21">(<pos:position pos:line="71" pos:column="22"/></operator><operator pos:line="71" pos:column="22">!<pos:position pos:line="71" pos:column="23"/></operator><name><name pos:line="71" pos:column="23">si<pos:position pos:line="71" pos:column="25"/></name><operator pos:line="71" pos:column="25">-&gt;<pos:position pos:line="71" pos:column="30"/></operator><name pos:line="71" pos:column="27">base<pos:position pos:line="71" pos:column="31"/></name></name> <operator pos:line="71" pos:column="32">||<pos:position pos:line="71" pos:column="34"/></operator> <operator pos:line="71" pos:column="35">!<pos:position pos:line="71" pos:column="36"/></operator><name><name pos:line="71" pos:column="36">ce<pos:position pos:line="71" pos:column="38"/></name><operator pos:line="71" pos:column="38">-&gt;<pos:position pos:line="71" pos:column="43"/></operator><name pos:line="71" pos:column="40">index<pos:position pos:line="71" pos:column="45"/></name></name><operator pos:line="71" pos:column="45">)<pos:position pos:line="71" pos:column="46"/></operator> <operator pos:line="71" pos:column="47">&amp;&amp;<pos:position pos:line="71" pos:column="57"/></operator> <operator pos:line="71" pos:column="50">!<pos:position pos:line="71" pos:column="51"/></operator><operator pos:line="71" pos:column="51">(<pos:position pos:line="71" pos:column="52"/></operator><name><name pos:line="71" pos:column="52">ce<pos:position pos:line="71" pos:column="54"/></name><operator pos:line="71" pos:column="54">-&gt;<pos:position pos:line="71" pos:column="59"/></operator><name pos:line="71" pos:column="56">ce_flags<pos:position pos:line="71" pos:column="64"/></name></name> <operator pos:line="71" pos:column="65">&amp;<pos:position pos:line="71" pos:column="70"/></operator> <name pos:line="71" pos:column="67">CE_REMOVE<pos:position pos:line="71" pos:column="76"/></name><operator pos:line="71" pos:column="76">)<pos:position pos:line="71" pos:column="77"/></operator></expr>)<pos:position pos:line="71" pos:column="78"/></condition><then pos:line="71" pos:column="78"> <block pos:line="71" pos:column="79">{
			<expr_stmt><expr><call><name pos:line="72" pos:column="25">assert<pos:position pos:line="72" pos:column="31"/></name><argument_list pos:line="72" pos:column="31">(<argument><expr><operator pos:line="72" pos:column="32">!<pos:position pos:line="72" pos:column="33"/></operator><operator pos:line="72" pos:column="33">(<pos:position pos:line="72" pos:column="34"/></operator><name><name pos:line="72" pos:column="34">ce<pos:position pos:line="72" pos:column="36"/></name><operator pos:line="72" pos:column="36">-&gt;<pos:position pos:line="72" pos:column="41"/></operator><name pos:line="72" pos:column="38">ce_flags<pos:position pos:line="72" pos:column="46"/></name></name> <operator pos:line="72" pos:column="47">&amp;<pos:position pos:line="72" pos:column="52"/></operator> <name pos:line="72" pos:column="49">CE_STRIP_NAME<pos:position pos:line="72" pos:column="62"/></name><operator pos:line="72" pos:column="62">)<pos:position pos:line="72" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="72" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="73" pos:column="25">ALLOC_GROW<pos:position pos:line="73" pos:column="35"/></name><argument_list pos:line="73" pos:column="35">(<argument><expr><name pos:line="73" pos:column="36">entries<pos:position pos:line="73" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="45">nr_entries<pos:position pos:line="73" pos:column="55"/></name><operator pos:line="73" pos:column="55">+<pos:position pos:line="73" pos:column="56"/></operator><literal type="number" pos:line="73" pos:column="56">1<pos:position pos:line="73" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="59">nr_alloc<pos:position pos:line="73" pos:column="67"/></name></expr></argument>)<pos:position pos:line="73" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="74" pos:column="25">entries<pos:position pos:line="74" pos:column="32"/></name><index pos:line="74" pos:column="32">[<expr><name pos:line="74" pos:column="33">nr_entries<pos:position pos:line="74" pos:column="43"/></name><operator pos:line="74" pos:column="43">++<pos:position pos:line="74" pos:column="45"/></operator></expr>]<pos:position pos:line="74" pos:column="46"/></index></name> <operator pos:line="74" pos:column="47">=<pos:position pos:line="74" pos:column="48"/></operator> <name pos:line="74" pos:column="49">ce<pos:position pos:line="74" pos:column="51"/></name></expr>;<pos:position pos:line="74" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="75" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="76" pos:column="17">ce<pos:position pos:line="76" pos:column="19"/></name><operator pos:line="76" pos:column="19">-&gt;<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="21">ce_flags<pos:position pos:line="76" pos:column="29"/></name></name> <operator pos:line="76" pos:column="30">&amp;=<pos:position pos:line="76" pos:column="36"/></operator> <operator pos:line="76" pos:column="33">~<pos:position pos:line="76" pos:column="34"/></operator><name pos:line="76" pos:column="34">CE_MATCHED<pos:position pos:line="76" pos:column="44"/></name></expr>;<pos:position pos:line="76" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="77" pos:column="10"/></block></for>

	<comment type="block" pos:line="79" pos:column="9">/*
	 * take cache[] out temporarily, put entries[] in its place
	 * for writing
	 */</comment>
	<expr_stmt><expr><name><name pos:line="83" pos:column="9">si<pos:position pos:line="83" pos:column="11"/></name><operator pos:line="83" pos:column="11">-&gt;<pos:position pos:line="83" pos:column="16"/></operator><name pos:line="83" pos:column="13">saved_cache<pos:position pos:line="83" pos:column="24"/></name></name> <operator pos:line="83" pos:column="25">=<pos:position pos:line="83" pos:column="26"/></operator> <name><name pos:line="83" pos:column="27">istate<pos:position pos:line="83" pos:column="33"/></name><operator pos:line="83" pos:column="33">-&gt;<pos:position pos:line="83" pos:column="38"/></operator><name pos:line="83" pos:column="35">cache<pos:position pos:line="83" pos:column="40"/></name></name></expr>;<pos:position pos:line="83" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="84" pos:column="9">si<pos:position pos:line="84" pos:column="11"/></name><operator pos:line="84" pos:column="11">-&gt;<pos:position pos:line="84" pos:column="16"/></operator><name pos:line="84" pos:column="13">saved_cache_nr<pos:position pos:line="84" pos:column="27"/></name></name> <operator pos:line="84" pos:column="28">=<pos:position pos:line="84" pos:column="29"/></operator> <name><name pos:line="84" pos:column="30">istate<pos:position pos:line="84" pos:column="36"/></name><operator pos:line="84" pos:column="36">-&gt;<pos:position pos:line="84" pos:column="41"/></operator><name pos:line="84" pos:column="38">cache_nr<pos:position pos:line="84" pos:column="46"/></name></name></expr>;<pos:position pos:line="84" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="85" pos:column="9">istate<pos:position pos:line="85" pos:column="15"/></name><operator pos:line="85" pos:column="15">-&gt;<pos:position pos:line="85" pos:column="20"/></operator><name pos:line="85" pos:column="17">cache<pos:position pos:line="85" pos:column="22"/></name></name> <operator pos:line="85" pos:column="23">=<pos:position pos:line="85" pos:column="24"/></operator> <name pos:line="85" pos:column="25">entries<pos:position pos:line="85" pos:column="32"/></name></expr>;<pos:position pos:line="85" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="86" pos:column="9">istate<pos:position pos:line="86" pos:column="15"/></name><operator pos:line="86" pos:column="15">-&gt;<pos:position pos:line="86" pos:column="20"/></operator><name pos:line="86" pos:column="17">cache_nr<pos:position pos:line="86" pos:column="25"/></name></name> <operator pos:line="86" pos:column="26">=<pos:position pos:line="86" pos:column="27"/></operator> <name pos:line="86" pos:column="28">nr_entries<pos:position pos:line="86" pos:column="38"/></name></expr>;<pos:position pos:line="86" pos:column="39"/></expr_stmt>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

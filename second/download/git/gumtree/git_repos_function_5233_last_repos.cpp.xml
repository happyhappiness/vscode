<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5233_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">shortlog_output<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">shortlog<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">log<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">j<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">sb<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name pos:line="4" pos:column="28">STRBUF_INIT<pos:position pos:line="4" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">log<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">sort_by_number<pos:position pos:line="6" pos:column="32"/></name></name></expr>)<pos:position pos:line="6" pos:column="33"/></condition><then pos:line="6" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">QSORT<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name><name pos:line="7" pos:column="23">log<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">list<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">.<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">items<pos:position pos:line="7" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="40">log<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">list<pos:position pos:line="7" pos:column="49"/></name><operator pos:line="7" pos:column="49">.<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="50">nr<pos:position pos:line="7" pos:column="52"/></name></name></expr></argument>,
		      <argument><expr><ternary><condition><expr><name><name pos:line="8" pos:column="23">log<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">summary<pos:position pos:line="8" pos:column="35"/></name></name></expr> ?<pos:position pos:line="8" pos:column="37"/></condition><then pos:line="8" pos:column="37"> <expr><name pos:line="8" pos:column="38">compare_by_counter<pos:position pos:line="8" pos:column="56"/></name></expr> <pos:position pos:line="8" pos:column="57"/></then><else pos:line="8" pos:column="57">: <expr><name pos:line="8" pos:column="59">compare_by_list<pos:position pos:line="8" pos:column="74"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="8" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="76"/></expr_stmt></block></then></if>
	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">i<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></init> <condition><expr><name pos:line="9" pos:column="21">i<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <name><name pos:line="9" pos:column="25">log<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">list<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">.<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">nr<pos:position pos:line="9" pos:column="37"/></name></name></expr>;<pos:position pos:line="9" pos:column="38"/></condition> <incr><expr><name pos:line="9" pos:column="39">i<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">++<pos:position pos:line="9" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="43"/></control> <block pos:line="9" pos:column="44">{
		<decl_stmt><decl><type><specifier pos:line="10" pos:column="17">const<pos:position pos:line="10" pos:column="22"/></specifier> <name><name pos:line="10" pos:column="23">struct<pos:position pos:line="10" pos:column="29"/></name> <name pos:line="10" pos:column="30">string_list_item<pos:position pos:line="10" pos:column="46"/></name></name> <modifier pos:line="10" pos:column="47">*<pos:position pos:line="10" pos:column="48"/></modifier></type><name pos:line="10" pos:column="48">item<pos:position pos:line="10" pos:column="52"/></name> <init pos:line="10" pos:column="53">= <expr><operator pos:line="10" pos:column="55">&amp;<pos:position pos:line="10" pos:column="60"/></operator><name><name pos:line="10" pos:column="56">log<pos:position pos:line="10" pos:column="59"/></name><operator pos:line="10" pos:column="59">-&gt;<pos:position pos:line="10" pos:column="64"/></operator><name pos:line="10" pos:column="61">list<pos:position pos:line="10" pos:column="65"/></name><operator pos:line="10" pos:column="65">.<pos:position pos:line="10" pos:column="66"/></operator><name pos:line="10" pos:column="66">items<pos:position pos:line="10" pos:column="71"/></name><index pos:line="10" pos:column="71">[<expr><name pos:line="10" pos:column="72">i<pos:position pos:line="10" pos:column="73"/></name></expr>]<pos:position pos:line="10" pos:column="74"/></index></name></expr></init></decl>;<pos:position pos:line="10" pos:column="75"/></decl_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name><name pos:line="11" pos:column="21">log<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">-&gt;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="26">summary<pos:position pos:line="11" pos:column="33"/></name></name></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34"> <block pos:line="11" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="12" pos:column="25">fprintf<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name><name pos:line="12" pos:column="33">log<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">file<pos:position pos:line="12" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="44">"%6d\t%s\n"<pos:position pos:line="12" pos:column="55"/></literal></expr></argument>,
				<argument><expr><operator pos:line="13" pos:column="33">(<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">int<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">)<pos:position pos:line="13" pos:column="38"/></operator><call><name pos:line="13" pos:column="38">UTIL_TO_INT<pos:position pos:line="13" pos:column="49"/></name><argument_list pos:line="13" pos:column="49">(<argument><expr><name pos:line="13" pos:column="50">item<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="57">item<pos:position pos:line="13" pos:column="61"/></name><operator pos:line="13" pos:column="61">-&gt;<pos:position pos:line="13" pos:column="66"/></operator><name pos:line="13" pos:column="63">string<pos:position pos:line="13" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="14" pos:column="18"/></block></then> <else pos:line="14" pos:column="19">else <block pos:line="14" pos:column="24">{
			<decl_stmt><decl><type><name><name pos:line="15" pos:column="25">struct<pos:position pos:line="15" pos:column="31"/></name> <name pos:line="15" pos:column="32">string_list<pos:position pos:line="15" pos:column="43"/></name></name> <modifier pos:line="15" pos:column="44">*<pos:position pos:line="15" pos:column="45"/></modifier></type><name pos:line="15" pos:column="45">onelines<pos:position pos:line="15" pos:column="53"/></name> <init pos:line="15" pos:column="54">= <expr><name><name pos:line="15" pos:column="56">item<pos:position pos:line="15" pos:column="60"/></name><operator pos:line="15" pos:column="60">-&gt;<pos:position pos:line="15" pos:column="65"/></operator><name pos:line="15" pos:column="62">util<pos:position pos:line="15" pos:column="66"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="67"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">fprintf<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name><name pos:line="16" pos:column="33">log<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">file<pos:position pos:line="16" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="44">"%s (%d):\n"<pos:position pos:line="16" pos:column="56"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="17" pos:column="33">item<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">string<pos:position pos:line="17" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="47">onelines<pos:position pos:line="17" pos:column="55"/></name><operator pos:line="17" pos:column="55">-&gt;<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="57">nr<pos:position pos:line="17" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>
			<for pos:line="18" pos:column="25">for <control pos:line="18" pos:column="29">(<init><expr><name pos:line="18" pos:column="30">j<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">=<pos:position pos:line="18" pos:column="33"/></operator> <name><name pos:line="18" pos:column="34">onelines<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">-&gt;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="44">nr<pos:position pos:line="18" pos:column="46"/></name></name> <operator pos:line="18" pos:column="47">-<pos:position pos:line="18" pos:column="48"/></operator> <literal type="number" pos:line="18" pos:column="49">1<pos:position pos:line="18" pos:column="50"/></literal></expr>;<pos:position pos:line="18" pos:column="51"/></init> <condition><expr><name pos:line="18" pos:column="52">j<pos:position pos:line="18" pos:column="53"/></name> <operator pos:line="18" pos:column="54">&gt;=<pos:position pos:line="18" pos:column="59"/></operator> <literal type="number" pos:line="18" pos:column="57">0<pos:position pos:line="18" pos:column="58"/></literal></expr>;<pos:position pos:line="18" pos:column="59"/></condition> <incr><expr><name pos:line="18" pos:column="60">j<pos:position pos:line="18" pos:column="61"/></name><operator pos:line="18" pos:column="61">--<pos:position pos:line="18" pos:column="63"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="64"/></control> <block pos:line="18" pos:column="65">{
				<decl_stmt><decl><type><specifier pos:line="19" pos:column="33">const<pos:position pos:line="19" pos:column="38"/></specifier> <name pos:line="19" pos:column="39">char<pos:position pos:line="19" pos:column="43"/></name> <modifier pos:line="19" pos:column="44">*<pos:position pos:line="19" pos:column="45"/></modifier></type><name pos:line="19" pos:column="45">msg<pos:position pos:line="19" pos:column="48"/></name> <init pos:line="19" pos:column="49">= <expr><name><name pos:line="19" pos:column="51">onelines<pos:position pos:line="19" pos:column="59"/></name><operator pos:line="19" pos:column="59">-&gt;<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="61">items<pos:position pos:line="19" pos:column="66"/></name><index pos:line="19" pos:column="66">[<expr><name pos:line="19" pos:column="67">j<pos:position pos:line="19" pos:column="68"/></name></expr>]<pos:position pos:line="19" pos:column="69"/></index></name><operator pos:line="19" pos:column="69">.<pos:position pos:line="19" pos:column="70"/></operator><name pos:line="19" pos:column="70">string<pos:position pos:line="19" pos:column="76"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="77"/></decl_stmt>

				<if pos:line="21" pos:column="33">if <condition pos:line="21" pos:column="36">(<expr><name><name pos:line="21" pos:column="37">log<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">-&gt;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="42">wrap_lines<pos:position pos:line="21" pos:column="52"/></name></name></expr>)<pos:position pos:line="21" pos:column="53"/></condition><then pos:line="21" pos:column="53"> <block pos:line="21" pos:column="54">{
					<expr_stmt><expr><call><name pos:line="22" pos:column="41">strbuf_reset<pos:position pos:line="22" pos:column="53"/></name><argument_list pos:line="22" pos:column="53">(<argument><expr><operator pos:line="22" pos:column="54">&amp;<pos:position pos:line="22" pos:column="59"/></operator><name pos:line="22" pos:column="55">sb<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="23" pos:column="41">add_wrapped_shortlog_msg<pos:position pos:line="23" pos:column="65"/></name><argument_list pos:line="23" pos:column="65">(<argument><expr><operator pos:line="23" pos:column="66">&amp;<pos:position pos:line="23" pos:column="71"/></operator><name pos:line="23" pos:column="67">sb<pos:position pos:line="23" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="71">msg<pos:position pos:line="23" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="76">log<pos:position pos:line="23" pos:column="79"/></name></expr></argument>)<pos:position pos:line="23" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="81"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="24" pos:column="41">fwrite<pos:position pos:line="24" pos:column="47"/></name><argument_list pos:line="24" pos:column="47">(<argument><expr><name><name pos:line="24" pos:column="48">sb<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">.<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="51">buf<pos:position pos:line="24" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="56">sb<pos:position pos:line="24" pos:column="58"/></name><operator pos:line="24" pos:column="58">.<pos:position pos:line="24" pos:column="59"/></operator><name pos:line="24" pos:column="59">len<pos:position pos:line="24" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="64">1<pos:position pos:line="24" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="67">log<pos:position pos:line="24" pos:column="70"/></name><operator pos:line="24" pos:column="70">-&gt;<pos:position pos:line="24" pos:column="75"/></operator><name pos:line="24" pos:column="72">file<pos:position pos:line="24" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="78"/></expr_stmt>
				}<pos:position pos:line="25" pos:column="34"/></block></then>
				<else pos:line="26" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="41">fprintf<pos:position pos:line="27" pos:column="48"/></name><argument_list pos:line="27" pos:column="48">(<argument><expr><name><name pos:line="27" pos:column="49">log<pos:position pos:line="27" pos:column="52"/></name><operator pos:line="27" pos:column="52">-&gt;<pos:position pos:line="27" pos:column="57"/></operator><name pos:line="27" pos:column="54">file<pos:position pos:line="27" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="60">"      %s\n"<pos:position pos:line="27" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="74">msg<pos:position pos:line="27" pos:column="77"/></name></expr></argument>)<pos:position pos:line="27" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="79"/></expr_stmt></block></else></if>
			}<pos:position pos:line="28" pos:column="26"/></block></for>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">putc<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><literal type="char" pos:line="29" pos:column="30">'\n'<pos:position pos:line="29" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="36">log<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">file<pos:position pos:line="29" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="30" pos:column="25">onelines<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">strdup_strings<pos:position pos:line="30" pos:column="49"/></name></name> <operator pos:line="30" pos:column="50">=<pos:position pos:line="30" pos:column="51"/></operator> <literal type="number" pos:line="30" pos:column="52">1<pos:position pos:line="30" pos:column="53"/></literal></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">string_list_clear<pos:position pos:line="31" pos:column="42"/></name><argument_list pos:line="31" pos:column="42">(<argument><expr><name pos:line="31" pos:column="43">onelines<pos:position pos:line="31" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="53">0<pos:position pos:line="31" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">free<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">onelines<pos:position pos:line="32" pos:column="38"/></name></expr></argument>)<pos:position pos:line="32" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name><name pos:line="35" pos:column="17">log<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">list<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">.<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">items<pos:position pos:line="35" pos:column="32"/></name><index pos:line="35" pos:column="32">[<expr><name pos:line="35" pos:column="33">i<pos:position pos:line="35" pos:column="34"/></name></expr>]<pos:position pos:line="35" pos:column="35"/></index></name><operator pos:line="35" pos:column="35">.<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="36">util<pos:position pos:line="35" pos:column="40"/></name> <operator pos:line="35" pos:column="41">=<pos:position pos:line="35" pos:column="42"/></operator> <name pos:line="35" pos:column="43">NULL<pos:position pos:line="35" pos:column="47"/></name></expr>;<pos:position pos:line="35" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="38" pos:column="9">strbuf_release<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><operator pos:line="38" pos:column="24">&amp;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="25">sb<pos:position pos:line="38" pos:column="27"/></name></expr></argument>)<pos:position pos:line="38" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="39" pos:column="9">log<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">-&gt;<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="14">list<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">.<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="19">strdup_strings<pos:position pos:line="39" pos:column="33"/></name></name> <operator pos:line="39" pos:column="34">=<pos:position pos:line="39" pos:column="35"/></operator> <literal type="number" pos:line="39" pos:column="36">1<pos:position pos:line="39" pos:column="37"/></literal></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">string_list_clear<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><operator pos:line="40" pos:column="27">&amp;<pos:position pos:line="40" pos:column="32"/></operator><name><name pos:line="40" pos:column="28">log<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">-&gt;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="33">list<pos:position pos:line="40" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="39">1<pos:position pos:line="40" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">clear_mailmap<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><operator pos:line="41" pos:column="23">&amp;<pos:position pos:line="41" pos:column="28"/></operator><name><name pos:line="41" pos:column="24">log<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">mailmap<pos:position pos:line="41" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1095_git-2.4.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">run_diff_cmd<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">pgm<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">name<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="3" pos:column="26">const<pos:position pos:line="3" pos:column="31"/></specifier> <name pos:line="3" pos:column="32">char<pos:position pos:line="3" pos:column="36"/></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">other<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="4" pos:column="26">const<pos:position pos:line="4" pos:column="31"/></specifier> <name pos:line="4" pos:column="32">char<pos:position pos:line="4" pos:column="36"/></name> <modifier pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></modifier></type><name pos:line="4" pos:column="38">attr_path<pos:position pos:line="4" pos:column="47"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="5" pos:column="26">struct<pos:position pos:line="5" pos:column="32"/></name> <name pos:line="5" pos:column="33">diff_filespec<pos:position pos:line="5" pos:column="46"/></name></name> <modifier pos:line="5" pos:column="47">*<pos:position pos:line="5" pos:column="48"/></modifier></type><name pos:line="5" pos:column="48">one<pos:position pos:line="5" pos:column="51"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="6" pos:column="26">struct<pos:position pos:line="6" pos:column="32"/></name> <name pos:line="6" pos:column="33">diff_filespec<pos:position pos:line="6" pos:column="46"/></name></name> <modifier pos:line="6" pos:column="47">*<pos:position pos:line="6" pos:column="48"/></modifier></type><name pos:line="6" pos:column="48">two<pos:position pos:line="6" pos:column="51"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="7" pos:column="26">struct<pos:position pos:line="7" pos:column="32"/></name> <name pos:line="7" pos:column="33">strbuf<pos:position pos:line="7" pos:column="39"/></name></name> <modifier pos:line="7" pos:column="40">*<pos:position pos:line="7" pos:column="41"/></modifier></type><name pos:line="7" pos:column="41">msg<pos:position pos:line="7" pos:column="44"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="8" pos:column="26">struct<pos:position pos:line="8" pos:column="32"/></name> <name pos:line="8" pos:column="33">diff_options<pos:position pos:line="8" pos:column="45"/></name></name> <modifier pos:line="8" pos:column="46">*<pos:position pos:line="8" pos:column="47"/></modifier></type><name pos:line="8" pos:column="47">o<pos:position pos:line="8" pos:column="48"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="9" pos:column="26">struct<pos:position pos:line="9" pos:column="32"/></name> <name pos:line="9" pos:column="33">diff_filepair<pos:position pos:line="9" pos:column="46"/></name></name> <modifier pos:line="9" pos:column="47">*<pos:position pos:line="9" pos:column="48"/></modifier></type><name pos:line="9" pos:column="48">p<pos:position pos:line="9" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="9" pos:column="50"/></parameter_list>
<block pos:line="10" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">char<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">xfrm_msg<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><name pos:line="11" pos:column="32">NULL<pos:position pos:line="11" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">complete_rewrite<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><operator pos:line="12" pos:column="32">(<pos:position pos:line="12" pos:column="33"/></operator><name><name pos:line="12" pos:column="33">p<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">status<pos:position pos:line="12" pos:column="42"/></name></name> <operator pos:line="12" pos:column="43">==<pos:position pos:line="12" pos:column="45"/></operator> <name pos:line="12" pos:column="46">DIFF_STATUS_MODIFIED<pos:position pos:line="12" pos:column="66"/></name><operator pos:line="12" pos:column="66">)<pos:position pos:line="12" pos:column="67"/></operator> <operator pos:line="12" pos:column="68">&amp;&amp;<pos:position pos:line="12" pos:column="78"/></operator> <name><name pos:line="12" pos:column="71">p<pos:position pos:line="12" pos:column="72"/></name><operator pos:line="12" pos:column="72">-&gt;<pos:position pos:line="12" pos:column="77"/></operator><name pos:line="12" pos:column="74">score<pos:position pos:line="12" pos:column="79"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="80"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">must_show_header<pos:position pos:line="13" pos:column="29"/></name> <init pos:line="13" pos:column="30">= <expr><literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>


	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">DIFF_OPT_TST<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">o<pos:position pos:line="16" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="29">ALLOW_EXTERNAL<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45"> <block pos:line="16" pos:column="46">{
		<decl_stmt><decl><type><name><name pos:line="17" pos:column="17">struct<pos:position pos:line="17" pos:column="23"/></name> <name pos:line="17" pos:column="24">userdiff_driver<pos:position pos:line="17" pos:column="39"/></name></name> <modifier pos:line="17" pos:column="40">*<pos:position pos:line="17" pos:column="41"/></modifier></type><name pos:line="17" pos:column="41">drv<pos:position pos:line="17" pos:column="44"/></name> <init pos:line="17" pos:column="45">= <expr><call><name pos:line="17" pos:column="47">userdiff_find_by_path<pos:position pos:line="17" pos:column="68"/></name><argument_list pos:line="17" pos:column="68">(<argument><expr><name pos:line="17" pos:column="69">attr_path<pos:position pos:line="17" pos:column="78"/></name></expr></argument>)<pos:position pos:line="17" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="80"/></decl_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">drv<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">&amp;&amp;<pos:position pos:line="18" pos:column="35"/></operator> <name><name pos:line="18" pos:column="28">drv<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">external<pos:position pos:line="18" pos:column="41"/></name></name></expr>)<pos:position pos:line="18" pos:column="42"/></condition><then pos:line="18" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="25">pgm<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <name><name pos:line="19" pos:column="31">drv<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">external<pos:position pos:line="19" pos:column="44"/></name></name></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt></block></then></if>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">msg<pos:position pos:line="22" pos:column="16"/></name></expr>)<pos:position pos:line="22" pos:column="17"/></condition><then pos:line="22" pos:column="17"> <block pos:line="22" pos:column="18">{
		<comment type="block" pos:line="23" pos:column="17">/*
		 * don't use colors when the header is intended for an
		 * external diff driver
		 */</comment>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">fill_metainfo<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">msg<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="36">name<pos:position pos:line="27" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="42">other<pos:position pos:line="27" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="49">one<pos:position pos:line="27" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="54">two<pos:position pos:line="27" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="59">o<pos:position pos:line="27" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="62">p<pos:position pos:line="27" pos:column="63"/></name></expr></argument>,
			      <argument><expr><operator pos:line="28" pos:column="31">&amp;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="32">must_show_header<pos:position pos:line="28" pos:column="48"/></name></expr></argument>,
			      <argument><expr><call><name pos:line="29" pos:column="31">want_color<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name><name pos:line="29" pos:column="42">o<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">-&gt;<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="45">use_color<pos:position pos:line="29" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call> <operator pos:line="29" pos:column="56">&amp;&amp;<pos:position pos:line="29" pos:column="66"/></operator> <operator pos:line="29" pos:column="59">!<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="60">pgm<pos:position pos:line="29" pos:column="63"/></name></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">xfrm_msg<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">=<pos:position pos:line="30" pos:column="27"/></operator> <ternary><condition><expr><name><name pos:line="30" pos:column="28">msg<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">-&gt;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="33">len<pos:position pos:line="30" pos:column="36"/></name></name></expr> ?<pos:position pos:line="30" pos:column="38"/></condition><then pos:line="30" pos:column="38"> <expr><name><name pos:line="30" pos:column="39">msg<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">-&gt;<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="44">buf<pos:position pos:line="30" pos:column="47"/></name></name></expr> <pos:position pos:line="30" pos:column="48"/></then><else pos:line="30" pos:column="48">: <expr><name pos:line="30" pos:column="50">NULL<pos:position pos:line="30" pos:column="54"/></name></expr></else></ternary></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">pgm<pos:position pos:line="33" pos:column="16"/></name></expr>)<pos:position pos:line="33" pos:column="17"/></condition><then pos:line="33" pos:column="17"> <block pos:line="33" pos:column="18">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">run_external_diff<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">pgm<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="40">name<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="46">other<pos:position pos:line="34" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="53">one<pos:position pos:line="34" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="58">two<pos:position pos:line="34" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="63">xfrm_msg<pos:position pos:line="34" pos:column="71"/></name></expr></argument>,
				  <argument><expr><name pos:line="35" pos:column="35">complete_rewrite<pos:position pos:line="35" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="53">o<pos:position pos:line="35" pos:column="54"/></name></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt>
		<return pos:line="36" pos:column="17">return;<pos:position pos:line="36" pos:column="24"/></return>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">one<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">&amp;&amp;<pos:position pos:line="38" pos:column="27"/></operator> <name pos:line="38" pos:column="20">two<pos:position pos:line="38" pos:column="23"/></name></expr>)<pos:position pos:line="38" pos:column="24"/></condition><then pos:line="38" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="17">builtin_diff<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">name<pos:position pos:line="39" pos:column="34"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="39" pos:column="36">other<pos:position pos:line="39" pos:column="41"/></name></expr> ?<pos:position pos:line="39" pos:column="43"/></condition><then pos:line="39" pos:column="43"> <expr><name pos:line="39" pos:column="44">other<pos:position pos:line="39" pos:column="49"/></name></expr> <pos:position pos:line="39" pos:column="50"/></then><else pos:line="39" pos:column="50">: <expr><name pos:line="39" pos:column="52">name<pos:position pos:line="39" pos:column="56"/></name></expr></else></ternary></expr></argument>,
			     <argument><expr><name pos:line="40" pos:column="30">one<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="35">two<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="40">xfrm_msg<pos:position pos:line="40" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="50">must_show_header<pos:position pos:line="40" pos:column="66"/></name></expr></argument>,
			     <argument><expr><name pos:line="41" pos:column="30">o<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="33">complete_rewrite<pos:position pos:line="41" pos:column="49"/></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt></block></then>
	<else pos:line="42" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="17">fprintf<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name><name pos:line="43" pos:column="25">o<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">-&gt;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="28">file<pos:position pos:line="43" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="34">"* Unmerged path %s\n"<pos:position pos:line="43" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="58">name<pos:position pos:line="43" pos:column="62"/></name></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="64"/></expr_stmt></block></else></if>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_496_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">find_move_in_parent<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">blame_scoreboard<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">sb<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="2" pos:column="33">struct<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">blame_entry<pos:position pos:line="2" pos:column="51"/></name></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier><modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier><modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">blamed<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="3" pos:column="33">struct<pos:position pos:line="3" pos:column="39"/></name> <name pos:line="3" pos:column="40">blame_entry<pos:position pos:line="3" pos:column="51"/></name></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier><modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">toosmall<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="4" pos:column="33">struct<pos:position pos:line="4" pos:column="39"/></name> <name pos:line="4" pos:column="40">blame_origin<pos:position pos:line="4" pos:column="52"/></name></name> <modifier pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></modifier></type><name pos:line="4" pos:column="54">target<pos:position pos:line="4" pos:column="60"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="5" pos:column="33">struct<pos:position pos:line="5" pos:column="39"/></name> <name pos:line="5" pos:column="40">blame_origin<pos:position pos:line="5" pos:column="52"/></name></name> <modifier pos:line="5" pos:column="53">*<pos:position pos:line="5" pos:column="54"/></modifier></type><name pos:line="5" pos:column="54">parent<pos:position pos:line="5" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="61"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">blame_entry<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">e<pos:position pos:line="7" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="7" pos:column="32">split<pos:position pos:line="7" pos:column="37"/></name><index pos:line="7" pos:column="37">[<expr><literal type="number" pos:line="7" pos:column="38">3<pos:position pos:line="7" pos:column="39"/></literal></expr>]<pos:position pos:line="7" pos:column="40"/></index></name></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">blame_entry<pos:position pos:line="8" pos:column="27"/></name></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">unblamed<pos:position pos:line="8" pos:column="37"/></name> <init pos:line="8" pos:column="38">= <expr><name><name pos:line="8" pos:column="40">target<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">-&gt;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="48">suspects<pos:position pos:line="8" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">blame_entry<pos:position pos:line="9" pos:column="27"/></name></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">leftover<pos:position pos:line="9" pos:column="37"/></name> <init pos:line="9" pos:column="38">= <expr><name pos:line="9" pos:column="40">NULL<pos:position pos:line="9" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">mmfile_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">file_p<pos:position pos:line="10" pos:column="24"/></name></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">unblamed<pos:position pos:line="12" pos:column="22"/></name></expr>)<pos:position pos:line="12" pos:column="23"/></condition><then pos:line="12" pos:column="23">
		<block type="pseudo"><return pos:line="13" pos:column="17">return;<pos:position pos:line="13" pos:column="24"/></return></block></then></if> <comment type="block" pos:line="13" pos:column="25">/* nothing remains for this target */</comment>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">fill_origin_blob<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><operator pos:line="15" pos:column="26">&amp;<pos:position pos:line="15" pos:column="31"/></operator><name><name pos:line="15" pos:column="27">sb<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">revs<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">diffopt<pos:position pos:line="15" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">parent<pos:position pos:line="15" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="54">&amp;<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="55">file_p<pos:position pos:line="15" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="63">&amp;<pos:position pos:line="15" pos:column="68"/></operator><name><name pos:line="15" pos:column="64">sb<pos:position pos:line="15" pos:column="66"/></name><operator pos:line="15" pos:column="66">-&gt;<pos:position pos:line="15" pos:column="71"/></operator><name pos:line="15" pos:column="68">num_read_blob<pos:position pos:line="15" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="83"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name><name pos:line="16" pos:column="14">file_p<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">ptr<pos:position pos:line="16" pos:column="24"/></name></name></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25">
		<block type="pseudo"><return pos:line="17" pos:column="17">return;<pos:position pos:line="17" pos:column="24"/></return></block></then></if>

	<comment type="block" pos:line="19" pos:column="9">/* At each iteration, unblamed has a NULL-terminated list of
	 * entries that have not yet been tested for blame.  leftover
	 * contains the reversed list of entries that have been tested
	 * without being assignable to the parent.
	 */</comment>
	<do pos:line="24" pos:column="9">do <block pos:line="24" pos:column="12">{
		<decl_stmt><decl><type><name><name pos:line="25" pos:column="17">struct<pos:position pos:line="25" pos:column="23"/></name> <name pos:line="25" pos:column="24">blame_entry<pos:position pos:line="25" pos:column="35"/></name></name> <modifier pos:line="25" pos:column="36">*<pos:position pos:line="25" pos:column="37"/></modifier><modifier pos:line="25" pos:column="37">*<pos:position pos:line="25" pos:column="38"/></modifier></type><name pos:line="25" pos:column="38">unblamedtail<pos:position pos:line="25" pos:column="50"/></name> <init pos:line="25" pos:column="51">= <expr><operator pos:line="25" pos:column="53">&amp;<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="54">unblamed<pos:position pos:line="25" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="63"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="26" pos:column="17">struct<pos:position pos:line="26" pos:column="23"/></name> <name pos:line="26" pos:column="24">blame_entry<pos:position pos:line="26" pos:column="35"/></name></name> <modifier pos:line="26" pos:column="36">*<pos:position pos:line="26" pos:column="37"/></modifier></type><name pos:line="26" pos:column="37">next<pos:position pos:line="26" pos:column="41"/></name></decl>;<pos:position pos:line="26" pos:column="42"/></decl_stmt>
		<for pos:line="27" pos:column="17">for <control pos:line="27" pos:column="21">(<init><expr><name pos:line="27" pos:column="22">e<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <name pos:line="27" pos:column="26">unblamed<pos:position pos:line="27" pos:column="34"/></name></expr>;<pos:position pos:line="27" pos:column="35"/></init> <condition><expr><name pos:line="27" pos:column="36">e<pos:position pos:line="27" pos:column="37"/></name></expr>;<pos:position pos:line="27" pos:column="38"/></condition> <incr><expr><name pos:line="27" pos:column="39">e<pos:position pos:line="27" pos:column="40"/></name> <operator pos:line="27" pos:column="41">=<pos:position pos:line="27" pos:column="42"/></operator> <name pos:line="27" pos:column="43">next<pos:position pos:line="27" pos:column="47"/></name></expr></incr>)<pos:position pos:line="27" pos:column="48"/></control> <block pos:line="27" pos:column="49">{
			<expr_stmt><expr><name pos:line="28" pos:column="25">next<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">=<pos:position pos:line="28" pos:column="31"/></operator> <name><name pos:line="28" pos:column="32">e<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">-&gt;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="35">next<pos:position pos:line="28" pos:column="39"/></name></name></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">find_copy_in_blob<pos:position pos:line="29" pos:column="42"/></name><argument_list pos:line="29" pos:column="42">(<argument><expr><name pos:line="29" pos:column="43">sb<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="47">e<pos:position pos:line="29" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="50">parent<pos:position pos:line="29" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="58">split<pos:position pos:line="29" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="65">&amp;<pos:position pos:line="29" pos:column="70"/></operator><name pos:line="29" pos:column="66">file_p<pos:position pos:line="29" pos:column="72"/></name></expr></argument>)<pos:position pos:line="29" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="74"/></expr_stmt>
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><name><name pos:line="30" pos:column="29">split<pos:position pos:line="30" pos:column="34"/></name><index pos:line="30" pos:column="34">[<expr><literal type="number" pos:line="30" pos:column="35">1<pos:position pos:line="30" pos:column="36"/></literal></expr>]<pos:position pos:line="30" pos:column="37"/></index></name><operator pos:line="30" pos:column="37">.<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="38">suspect<pos:position pos:line="30" pos:column="45"/></name> <operator pos:line="30" pos:column="46">&amp;&amp;<pos:position pos:line="30" pos:column="56"/></operator>
			    <name><name pos:line="31" pos:column="29">sb<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">move_score<pos:position pos:line="31" pos:column="43"/></name></name> <operator pos:line="31" pos:column="44">&lt;<pos:position pos:line="31" pos:column="48"/></operator> <call><name pos:line="31" pos:column="46">blame_entry_score<pos:position pos:line="31" pos:column="63"/></name><argument_list pos:line="31" pos:column="63">(<argument><expr><name pos:line="31" pos:column="64">sb<pos:position pos:line="31" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="68">&amp;<pos:position pos:line="31" pos:column="73"/></operator><name><name pos:line="31" pos:column="69">split<pos:position pos:line="31" pos:column="74"/></name><index pos:line="31" pos:column="74">[<expr><literal type="number" pos:line="31" pos:column="75">1<pos:position pos:line="31" pos:column="76"/></literal></expr>]<pos:position pos:line="31" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="79"/></condition><then pos:line="31" pos:column="79"> <block pos:line="31" pos:column="80">{
				<expr_stmt><expr><call><name pos:line="32" pos:column="33">split_blame<pos:position pos:line="32" pos:column="44"/></name><argument_list pos:line="32" pos:column="44">(<argument><expr><name pos:line="32" pos:column="45">blamed<pos:position pos:line="32" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="53">&amp;<pos:position pos:line="32" pos:column="58"/></operator><name pos:line="32" pos:column="54">unblamedtail<pos:position pos:line="32" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="68">split<pos:position pos:line="32" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="75">e<pos:position pos:line="32" pos:column="76"/></name></expr></argument>)<pos:position pos:line="32" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="78"/></expr_stmt>
			}<pos:position pos:line="33" pos:column="26"/></block></then> <else pos:line="33" pos:column="27">else <block pos:line="33" pos:column="32">{
				<expr_stmt><expr><name><name pos:line="34" pos:column="33">e<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">-&gt;<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="36">next<pos:position pos:line="34" pos:column="40"/></name></name> <operator pos:line="34" pos:column="41">=<pos:position pos:line="34" pos:column="42"/></operator> <name pos:line="34" pos:column="43">leftover<pos:position pos:line="34" pos:column="51"/></name></expr>;<pos:position pos:line="34" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><name pos:line="35" pos:column="33">leftover<pos:position pos:line="35" pos:column="41"/></name> <operator pos:line="35" pos:column="42">=<pos:position pos:line="35" pos:column="43"/></operator> <name pos:line="35" pos:column="44">e<pos:position pos:line="35" pos:column="45"/></name></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="36" pos:column="26"/></block></else></if>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">decref_split<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name pos:line="37" pos:column="38">split<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></for>
		<expr_stmt><expr><operator pos:line="39" pos:column="17">*<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">unblamedtail<pos:position pos:line="39" pos:column="30"/></name> <operator pos:line="39" pos:column="31">=<pos:position pos:line="39" pos:column="32"/></operator> <name pos:line="39" pos:column="33">NULL<pos:position pos:line="39" pos:column="37"/></name></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="40" pos:column="17">toosmall<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">=<pos:position pos:line="40" pos:column="27"/></operator> <call><name pos:line="40" pos:column="28">filter_small<pos:position pos:line="40" pos:column="40"/></name><argument_list pos:line="40" pos:column="40">(<argument><expr><name pos:line="40" pos:column="41">sb<pos:position pos:line="40" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="45">toosmall<pos:position pos:line="40" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="55">&amp;<pos:position pos:line="40" pos:column="60"/></operator><name pos:line="40" pos:column="56">unblamed<pos:position pos:line="40" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="66">sb<pos:position pos:line="40" pos:column="68"/></name><operator pos:line="40" pos:column="68">-&gt;<pos:position pos:line="40" pos:column="73"/></operator><name pos:line="40" pos:column="70">move_score<pos:position pos:line="40" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="82"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block> while <condition pos:line="41" pos:column="17">(<expr><name pos:line="41" pos:column="18">unblamed<pos:position pos:line="41" pos:column="26"/></name></expr>)<pos:position pos:line="41" pos:column="27"/></condition>;<pos:position pos:line="41" pos:column="28"/></do>
	<expr_stmt><expr><name><name pos:line="42" pos:column="9">target<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">-&gt;<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="17">suspects<pos:position pos:line="42" pos:column="25"/></name></name> <operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator> <call><name pos:line="42" pos:column="28">reverse_blame<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">leftover<pos:position pos:line="42" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="52">NULL<pos:position pos:line="42" pos:column="56"/></name></expr></argument>)<pos:position pos:line="42" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="58"/></expr_stmt>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

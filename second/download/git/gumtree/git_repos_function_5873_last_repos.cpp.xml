<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5873_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">diff_two<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">file1<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">label1<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">file2<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">label2<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">xpparam_t<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">xpp<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">xdemitconf_t<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">xecfg<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">xdemitcb_t<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">ecb<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">mmfile_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">minus<pos:position pos:line="7" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="25">plus<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">ret<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">read_mmfile<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><operator pos:line="10" pos:column="25">&amp;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="26">minus<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">file1<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call> <operator pos:line="10" pos:column="40">||<pos:position pos:line="10" pos:column="42"/></operator> <call><name pos:line="10" pos:column="43">read_mmfile<pos:position pos:line="10" pos:column="54"/></name><argument_list pos:line="10" pos:column="54">(<argument><expr><operator pos:line="10" pos:column="55">&amp;<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="56">plus<pos:position pos:line="10" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="62">file2<pos:position pos:line="10" pos:column="67"/></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="69"/></condition><then pos:line="10" pos:column="69">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">-<pos:position pos:line="11" pos:column="25"/></operator><literal type="number" pos:line="11" pos:column="25">1<pos:position pos:line="11" pos:column="26"/></literal></expr>;<pos:position pos:line="11" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">printf<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="string" pos:line="13" pos:column="16">"--- a/%s\n+++ b/%s\n"<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">label1<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">label2<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">fflush<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">stdout<pos:position pos:line="14" pos:column="22"/></name></expr></argument>)<pos:position pos:line="14" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">memset<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><operator pos:line="15" pos:column="16">&amp;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="17">xpp<pos:position pos:line="15" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="25">sizeof<argument_list pos:line="15" pos:column="31">(<argument><expr><name pos:line="15" pos:column="32">xpp<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">xpp<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">.<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">flags<pos:position pos:line="16" pos:column="18"/></name></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <literal type="number" pos:line="16" pos:column="21">0<pos:position pos:line="16" pos:column="22"/></literal></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">memset<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><operator pos:line="17" pos:column="16">&amp;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="17">xecfg<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="27">sizeof<argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">xecfg<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">xecfg<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">.<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">ctxlen<pos:position pos:line="18" pos:column="21"/></name></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <literal type="number" pos:line="18" pos:column="24">3<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">ecb<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">.<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">outf<pos:position pos:line="19" pos:column="17"/></name></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">outf<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">ret<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <call><name pos:line="20" pos:column="15">xdi_diff<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><operator pos:line="20" pos:column="24">&amp;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="25">minus<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="32">&amp;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="33">plus<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="39">&amp;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="40">xpp<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="45">&amp;<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="46">xecfg<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="53">&amp;<pos:position pos:line="20" pos:column="58"/></operator><name pos:line="20" pos:column="54">ecb<pos:position pos:line="20" pos:column="57"/></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">free<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name><name pos:line="22" pos:column="14">minus<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">.<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">ptr<pos:position pos:line="22" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">free<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><name><name pos:line="23" pos:column="14">plus<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">.<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">ptr<pos:position pos:line="23" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
	<return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">ret<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4556_git-2.8.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">is_rev_argument<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">arg<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><specifier pos:line="3" pos:column="16">const<pos:position pos:line="3" pos:column="21"/></specifier> <name pos:line="3" pos:column="22">char<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name><name pos:line="3" pos:column="28">rev_args<pos:position pos:line="3" pos:column="36"/></name><index pos:line="3" pos:column="36">[]<pos:position pos:line="3" pos:column="38"/></index></name> <init pos:line="3" pos:column="39">= <expr><block pos:line="3" pos:column="41">{
		<expr><literal type="string" pos:line="4" pos:column="17">"--all"<pos:position pos:line="4" pos:column="24"/></literal></expr>,
		<expr><literal type="string" pos:line="5" pos:column="17">"--bisect"<pos:position pos:line="5" pos:column="27"/></literal></expr>,
		<expr><literal type="string" pos:line="6" pos:column="17">"--dense"<pos:position pos:line="6" pos:column="26"/></literal></expr>,
		<expr><literal type="string" pos:line="7" pos:column="17">"--branches="<pos:position pos:line="7" pos:column="30"/></literal></expr>,
		<expr><literal type="string" pos:line="8" pos:column="17">"--branches"<pos:position pos:line="8" pos:column="29"/></literal></expr>,
		<expr><literal type="string" pos:line="9" pos:column="17">"--header"<pos:position pos:line="9" pos:column="27"/></literal></expr>,
		<expr><literal type="string" pos:line="10" pos:column="17">"--ignore-missing"<pos:position pos:line="10" pos:column="35"/></literal></expr>,
		<expr><literal type="string" pos:line="11" pos:column="17">"--max-age="<pos:position pos:line="11" pos:column="29"/></literal></expr>,
		<expr><literal type="string" pos:line="12" pos:column="17">"--max-count="<pos:position pos:line="12" pos:column="31"/></literal></expr>,
		<expr><literal type="string" pos:line="13" pos:column="17">"--min-age="<pos:position pos:line="13" pos:column="29"/></literal></expr>,
		<expr><literal type="string" pos:line="14" pos:column="17">"--no-merges"<pos:position pos:line="14" pos:column="30"/></literal></expr>,
		<expr><literal type="string" pos:line="15" pos:column="17">"--min-parents="<pos:position pos:line="15" pos:column="33"/></literal></expr>,
		<expr><literal type="string" pos:line="16" pos:column="17">"--no-min-parents"<pos:position pos:line="16" pos:column="35"/></literal></expr>,
		<expr><literal type="string" pos:line="17" pos:column="17">"--max-parents="<pos:position pos:line="17" pos:column="33"/></literal></expr>,
		<expr><literal type="string" pos:line="18" pos:column="17">"--no-max-parents"<pos:position pos:line="18" pos:column="35"/></literal></expr>,
		<expr><literal type="string" pos:line="19" pos:column="17">"--objects"<pos:position pos:line="19" pos:column="28"/></literal></expr>,
		<expr><literal type="string" pos:line="20" pos:column="17">"--objects-edge"<pos:position pos:line="20" pos:column="33"/></literal></expr>,
		<expr><literal type="string" pos:line="21" pos:column="17">"--parents"<pos:position pos:line="21" pos:column="28"/></literal></expr>,
		<expr><literal type="string" pos:line="22" pos:column="17">"--pretty"<pos:position pos:line="22" pos:column="27"/></literal></expr>,
		<expr><literal type="string" pos:line="23" pos:column="17">"--remotes="<pos:position pos:line="23" pos:column="29"/></literal></expr>,
		<expr><literal type="string" pos:line="24" pos:column="17">"--remotes"<pos:position pos:line="24" pos:column="28"/></literal></expr>,
		<expr><literal type="string" pos:line="25" pos:column="17">"--glob="<pos:position pos:line="25" pos:column="26"/></literal></expr>,
		<expr><literal type="string" pos:line="26" pos:column="17">"--sparse"<pos:position pos:line="26" pos:column="27"/></literal></expr>,
		<expr><literal type="string" pos:line="27" pos:column="17">"--tags="<pos:position pos:line="27" pos:column="26"/></literal></expr>,
		<expr><literal type="string" pos:line="28" pos:column="17">"--tags"<pos:position pos:line="28" pos:column="25"/></literal></expr>,
		<expr><literal type="string" pos:line="29" pos:column="17">"--topo-order"<pos:position pos:line="29" pos:column="31"/></literal></expr>,
		<expr><literal type="string" pos:line="30" pos:column="17">"--date-order"<pos:position pos:line="30" pos:column="31"/></literal></expr>,
		<expr><literal type="string" pos:line="31" pos:column="17">"--unpacked"<pos:position pos:line="31" pos:column="29"/></literal></expr>,
		<expr><name pos:line="32" pos:column="17">NULL<pos:position pos:line="32" pos:column="21"/></name></expr>
	}<pos:position pos:line="33" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="33" pos:column="11"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="34" pos:column="9">const<pos:position pos:line="34" pos:column="14"/></specifier> <name pos:line="34" pos:column="15">char<pos:position pos:line="34" pos:column="19"/></name> <modifier pos:line="34" pos:column="20">*<pos:position pos:line="34" pos:column="21"/></modifier><modifier pos:line="34" pos:column="21">*<pos:position pos:line="34" pos:column="22"/></modifier></type><name pos:line="34" pos:column="22">p<pos:position pos:line="34" pos:column="23"/></name> <init pos:line="34" pos:column="24">= <expr><name pos:line="34" pos:column="26">rev_args<pos:position pos:line="34" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="34" pos:column="35"/></decl_stmt>

	<comment type="block" pos:line="36" pos:column="9">/* accept -&lt;digit&gt;, like traditional "head" */</comment>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">(<pos:position pos:line="37" pos:column="14"/></operator><operator pos:line="37" pos:column="14">*<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">arg<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">==<pos:position pos:line="37" pos:column="21"/></operator> <literal type="char" pos:line="37" pos:column="22">'-'<pos:position pos:line="37" pos:column="25"/></literal><operator pos:line="37" pos:column="25">)<pos:position pos:line="37" pos:column="26"/></operator> <operator pos:line="37" pos:column="27">&amp;&amp;<pos:position pos:line="37" pos:column="37"/></operator> <call><name pos:line="37" pos:column="30">isdigit<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name><name pos:line="37" pos:column="38">arg<pos:position pos:line="37" pos:column="41"/></name><index pos:line="37" pos:column="41">[<expr><literal type="number" pos:line="37" pos:column="42">1<pos:position pos:line="37" pos:column="43"/></literal></expr>]<pos:position pos:line="37" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="46"/></condition><then pos:line="37" pos:column="46">
		<block type="pseudo"><return pos:line="38" pos:column="17">return <expr><literal type="number" pos:line="38" pos:column="24">1<pos:position pos:line="38" pos:column="25"/></literal></expr>;<pos:position pos:line="38" pos:column="26"/></return></block></then></if>

	<for pos:line="40" pos:column="9">for <control pos:line="40" pos:column="13">(<init pos:line="40" pos:column="14">;<pos:position pos:line="40" pos:column="15"/></init><condition pos:line="40" pos:column="15">;<pos:position pos:line="40" pos:column="16"/></condition><incr/>)<pos:position pos:line="40" pos:column="17"/></control> <block pos:line="40" pos:column="18">{
		<decl_stmt><decl><type><specifier pos:line="41" pos:column="17">const<pos:position pos:line="41" pos:column="22"/></specifier> <name pos:line="41" pos:column="23">char<pos:position pos:line="41" pos:column="27"/></name> <modifier pos:line="41" pos:column="28">*<pos:position pos:line="41" pos:column="29"/></modifier></type><name pos:line="41" pos:column="29">str<pos:position pos:line="41" pos:column="32"/></name> <init pos:line="41" pos:column="33">= <expr><operator pos:line="41" pos:column="35">*<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="36">p<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">++<pos:position pos:line="41" pos:column="39"/></operator></expr></init></decl>;<pos:position pos:line="41" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="42" pos:column="17">int<pos:position pos:line="42" pos:column="20"/></name></type> <name pos:line="42" pos:column="21">len<pos:position pos:line="42" pos:column="24"/></name></decl>;<pos:position pos:line="42" pos:column="25"/></decl_stmt>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><operator pos:line="43" pos:column="21">!<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">str<pos:position pos:line="43" pos:column="25"/></name></expr>)<pos:position pos:line="43" pos:column="26"/></condition><then pos:line="43" pos:column="26">
			<block type="pseudo"><return pos:line="44" pos:column="25">return <expr><literal type="number" pos:line="44" pos:column="32">0<pos:position pos:line="44" pos:column="33"/></literal></expr>;<pos:position pos:line="44" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="45" pos:column="17">len<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">=<pos:position pos:line="45" pos:column="22"/></operator> <call><name pos:line="45" pos:column="23">strlen<pos:position pos:line="45" pos:column="29"/></name><argument_list pos:line="45" pos:column="29">(<argument><expr><name pos:line="45" pos:column="30">str<pos:position pos:line="45" pos:column="33"/></name></expr></argument>)<pos:position pos:line="45" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="35"/></expr_stmt>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><operator pos:line="46" pos:column="21">!<pos:position pos:line="46" pos:column="22"/></operator><call><name pos:line="46" pos:column="22">strcmp<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><name pos:line="46" pos:column="29">arg<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="34">str<pos:position pos:line="46" pos:column="37"/></name></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call> <operator pos:line="46" pos:column="39">||<pos:position pos:line="46" pos:column="41"/></operator>
		    <operator pos:line="47" pos:column="21">(<pos:position pos:line="47" pos:column="22"/></operator><name><name pos:line="47" pos:column="22">str<pos:position pos:line="47" pos:column="25"/></name><index pos:line="47" pos:column="25">[<expr><name pos:line="47" pos:column="26">len<pos:position pos:line="47" pos:column="29"/></name><operator pos:line="47" pos:column="29">-<pos:position pos:line="47" pos:column="30"/></operator><literal type="number" pos:line="47" pos:column="30">1<pos:position pos:line="47" pos:column="31"/></literal></expr>]<pos:position pos:line="47" pos:column="32"/></index></name> <operator pos:line="47" pos:column="33">==<pos:position pos:line="47" pos:column="35"/></operator> <literal type="char" pos:line="47" pos:column="36">'='<pos:position pos:line="47" pos:column="39"/></literal> <operator pos:line="47" pos:column="40">&amp;&amp;<pos:position pos:line="47" pos:column="50"/></operator> <operator pos:line="47" pos:column="43">!<pos:position pos:line="47" pos:column="44"/></operator><call><name pos:line="47" pos:column="44">strncmp<pos:position pos:line="47" pos:column="51"/></name><argument_list pos:line="47" pos:column="51">(<argument><expr><name pos:line="47" pos:column="52">arg<pos:position pos:line="47" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="57">str<pos:position pos:line="47" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="62">len<pos:position pos:line="47" pos:column="65"/></name></expr></argument>)<pos:position pos:line="47" pos:column="66"/></argument_list></call><operator pos:line="47" pos:column="66">)<pos:position pos:line="47" pos:column="67"/></operator></expr>)<pos:position pos:line="47" pos:column="68"/></condition><then pos:line="47" pos:column="68">
			<block type="pseudo"><return pos:line="48" pos:column="25">return <expr><literal type="number" pos:line="48" pos:column="32">1<pos:position pos:line="48" pos:column="33"/></literal></expr>;<pos:position pos:line="48" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="49" pos:column="10"/></block></for>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

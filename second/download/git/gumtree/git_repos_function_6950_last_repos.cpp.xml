<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6950_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">reg_errcode_t<pos:position pos:line="1" pos:column="21"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">free_fail_stack_return<pos:position pos:line="3" pos:column="23"/></name> <parameter_list pos:line="3" pos:column="24">(<parameter><decl><type><name><name pos:line="3" pos:column="25">struct<pos:position pos:line="3" pos:column="31"/></name> <name pos:line="3" pos:column="32">re_fail_stack_t<pos:position pos:line="3" pos:column="47"/></name></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">fs<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">fs<pos:position pos:line="5" pos:column="9"/></name></expr>)<pos:position pos:line="5" pos:column="10"/></condition><then pos:line="5" pos:column="10">
    <block pos:line="6" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="7" pos:column="7">int<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">fs_idx<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
      <for pos:line="8" pos:column="7">for <control pos:line="8" pos:column="11">(<init><expr><name pos:line="8" pos:column="12">fs_idx<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <literal type="number" pos:line="8" pos:column="21">0<pos:position pos:line="8" pos:column="22"/></literal></expr>;<pos:position pos:line="8" pos:column="23"/></init> <condition><expr><name pos:line="8" pos:column="24">fs_idx<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">&lt;<pos:position pos:line="8" pos:column="35"/></operator> <name><name pos:line="8" pos:column="33">fs<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">num<pos:position pos:line="8" pos:column="40"/></name></name></expr>;<pos:position pos:line="8" pos:column="41"/></condition> <incr><expr><operator pos:line="8" pos:column="42">++<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">fs_idx<pos:position pos:line="8" pos:column="50"/></name></expr></incr>)<pos:position pos:line="8" pos:column="51"/></control>
	<block pos:line="9" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="10" pos:column="11">re_node_set_free<pos:position pos:line="10" pos:column="27"/></name> <argument_list pos:line="10" pos:column="28">(<argument><expr><operator pos:line="10" pos:column="29">&amp;<pos:position pos:line="10" pos:column="34"/></operator><name><name pos:line="10" pos:column="30">fs<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">stack<pos:position pos:line="10" pos:column="39"/></name><index pos:line="10" pos:column="39">[<expr><name pos:line="10" pos:column="40">fs_idx<pos:position pos:line="10" pos:column="46"/></name></expr>]<pos:position pos:line="10" pos:column="47"/></index></name><operator pos:line="10" pos:column="47">.<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="48">eps_via_nodes<pos:position pos:line="10" pos:column="61"/></name></expr></argument>)<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="63"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="11" pos:column="11">re_free<pos:position pos:line="11" pos:column="18"/></name> <argument_list pos:line="11" pos:column="19">(<argument><expr><name><name pos:line="11" pos:column="20">fs<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">-&gt;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="24">stack<pos:position pos:line="11" pos:column="29"/></name><index pos:line="11" pos:column="29">[<expr><name pos:line="11" pos:column="30">fs_idx<pos:position pos:line="11" pos:column="36"/></name></expr>]<pos:position pos:line="11" pos:column="37"/></index></name><operator pos:line="11" pos:column="37">.<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="38">regs<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></for>
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">re_free<pos:position pos:line="13" pos:column="14"/></name> <argument_list pos:line="13" pos:column="15">(<argument><expr><name><name pos:line="13" pos:column="16">fs<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">stack<pos:position pos:line="13" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
  <return pos:line="15" pos:column="3">return <expr><name pos:line="15" pos:column="10">REG_NOERROR<pos:position pos:line="15" pos:column="21"/></name></expr>;<pos:position pos:line="15" pos:column="22"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

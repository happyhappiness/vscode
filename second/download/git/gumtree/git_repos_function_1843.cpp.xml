<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1843.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fill<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><specifier pos:line="1" pos:column="17">const<pos:position pos:line="1" pos:column="22"/></specifier> <name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">path<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">int<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">pathlen<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">basename_offset<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">attr_stack<pos:position pos:line="2" pos:column="34"/></name></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">stk<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">rem<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">base<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><ternary><condition><expr><name><name pos:line="5" pos:column="28">stk<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">origin<pos:position pos:line="5" pos:column="39"/></name></name></expr> ?<pos:position pos:line="5" pos:column="41"/></condition><then pos:line="5" pos:column="41"> <expr><name><name pos:line="5" pos:column="42">stk<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">-&gt;<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="47">origin<pos:position pos:line="5" pos:column="53"/></name></name></expr> <pos:position pos:line="5" pos:column="54"/></then><else pos:line="5" pos:column="54">: <expr><literal type="string" pos:line="5" pos:column="56">""<pos:position pos:line="5" pos:column="58"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="59"/></decl_stmt>

	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <name><name pos:line="7" pos:column="18">stk<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">-&gt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">num_matches<pos:position pos:line="7" pos:column="34"/></name></name> <operator pos:line="7" pos:column="35">-<pos:position pos:line="7" pos:column="36"/></operator> <literal type="number" pos:line="7" pos:column="37">1<pos:position pos:line="7" pos:column="38"/></literal></expr>;<pos:position pos:line="7" pos:column="39"/></init> <condition><expr><literal type="number" pos:line="7" pos:column="40">0<pos:position pos:line="7" pos:column="41"/></literal> <operator pos:line="7" pos:column="42">&lt;<pos:position pos:line="7" pos:column="46"/></operator> <name pos:line="7" pos:column="44">rem<pos:position pos:line="7" pos:column="47"/></name> <operator pos:line="7" pos:column="48">&amp;&amp;<pos:position pos:line="7" pos:column="58"/></operator> <literal type="number" pos:line="7" pos:column="51">0<pos:position pos:line="7" pos:column="52"/></literal> <operator pos:line="7" pos:column="53">&lt;=<pos:position pos:line="7" pos:column="58"/></operator> <name pos:line="7" pos:column="56">i<pos:position pos:line="7" pos:column="57"/></name></expr>;<pos:position pos:line="7" pos:column="58"/></condition> <incr><expr><name pos:line="7" pos:column="59">i<pos:position pos:line="7" pos:column="60"/></name><operator pos:line="7" pos:column="60">--<pos:position pos:line="7" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="63"/></control> <block pos:line="7" pos:column="64">{
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">match_attr<pos:position pos:line="8" pos:column="34"/></name></name> <modifier pos:line="8" pos:column="35">*<pos:position pos:line="8" pos:column="36"/></modifier></type><name pos:line="8" pos:column="36">a<pos:position pos:line="8" pos:column="37"/></name> <init pos:line="8" pos:column="38">= <expr><name><name pos:line="8" pos:column="40">stk<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">attrs<pos:position pos:line="8" pos:column="50"/></name><index pos:line="8" pos:column="50">[<expr><name pos:line="8" pos:column="51">i<pos:position pos:line="8" pos:column="52"/></name></expr>]<pos:position pos:line="8" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="54"/></decl_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name><name pos:line="9" pos:column="21">a<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">is_macro<pos:position pos:line="9" pos:column="32"/></name></name></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33">
			<block type="pseudo"><continue pos:line="10" pos:column="25">continue;<pos:position pos:line="10" pos:column="34"/></continue></block></then></if>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">path_matches<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">path<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">pathlen<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">basename_offset<pos:position pos:line="11" pos:column="64"/></name></expr></argument>,
				 <argument><expr><operator pos:line="12" pos:column="34">&amp;<pos:position pos:line="12" pos:column="39"/></operator><name><name pos:line="12" pos:column="35">a<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">u<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">.<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">pat<pos:position pos:line="12" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">base<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="51">stk<pos:position pos:line="12" pos:column="54"/></name><operator pos:line="12" pos:column="54">-&gt;<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="56">originlen<pos:position pos:line="12" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="67"/></condition><then pos:line="12" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">rem<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <call><name pos:line="13" pos:column="31">fill_one<pos:position pos:line="13" pos:column="39"/></name><argument_list pos:line="13" pos:column="39">(<argument><expr><literal type="string" pos:line="13" pos:column="40">"fill"<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">a<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">rem<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt></block></then></if>
	}<pos:position pos:line="14" pos:column="10"/></block></for>
	<return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">rem<pos:position pos:line="15" pos:column="19"/></name></expr>;<pos:position pos:line="15" pos:column="20"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

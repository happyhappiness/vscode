<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4685_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">guess_dir_name<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">repo<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">is_bundle<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">is_bare<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">end<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name pos:line="3" pos:column="27">repo<pos:position pos:line="3" pos:column="31"/></name> <operator pos:line="3" pos:column="32">+<pos:position pos:line="3" pos:column="33"/></operator> <call><name pos:line="3" pos:column="34">strlen<pos:position pos:line="3" pos:column="40"/></name><argument_list pos:line="3" pos:column="40">(<argument><expr><name pos:line="3" pos:column="41">repo<pos:position pos:line="3" pos:column="45"/></name></expr></argument>)<pos:position pos:line="3" pos:column="46"/></argument_list></call></expr></init></decl>, <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="49">start<pos:position pos:line="3" pos:column="54"/></name></decl>;<pos:position pos:line="3" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">dir<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/*
	 * Strip trailing spaces, slashes and /.git
	 */</comment>
	<while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><name pos:line="9" pos:column="16">repo<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">&lt;<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="23">end<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">&amp;&amp;<pos:position pos:line="9" pos:column="37"/></operator> <operator pos:line="9" pos:column="30">(<pos:position pos:line="9" pos:column="31"/></operator><call><name pos:line="9" pos:column="31">is_dir_sep<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name><name pos:line="9" pos:column="42">end<pos:position pos:line="9" pos:column="45"/></name><index pos:line="9" pos:column="45">[<expr><operator pos:line="9" pos:column="46">-<pos:position pos:line="9" pos:column="47"/></operator><literal type="number" pos:line="9" pos:column="47">1<pos:position pos:line="9" pos:column="48"/></literal></expr>]<pos:position pos:line="9" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call> <operator pos:line="9" pos:column="51">||<pos:position pos:line="9" pos:column="53"/></operator> <call><name pos:line="9" pos:column="54">isspace<pos:position pos:line="9" pos:column="61"/></name><argument_list pos:line="9" pos:column="61">(<argument><expr><name><name pos:line="9" pos:column="62">end<pos:position pos:line="9" pos:column="65"/></name><index pos:line="9" pos:column="65">[<expr><operator pos:line="9" pos:column="66">-<pos:position pos:line="9" pos:column="67"/></operator><literal type="number" pos:line="9" pos:column="67">1<pos:position pos:line="9" pos:column="68"/></literal></expr>]<pos:position pos:line="9" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call><operator pos:line="9" pos:column="70">)<pos:position pos:line="9" pos:column="71"/></operator></expr>)<pos:position pos:line="9" pos:column="72"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">end<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">--<pos:position pos:line="10" pos:column="22"/></operator></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt></block></while>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">end<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">-<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">repo<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">&gt;<pos:position pos:line="11" pos:column="28"/></operator> <literal type="number" pos:line="11" pos:column="26">5<pos:position pos:line="11" pos:column="27"/></literal> <operator pos:line="11" pos:column="28">&amp;&amp;<pos:position pos:line="11" pos:column="38"/></operator> <call><name pos:line="11" pos:column="31">is_dir_sep<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name><name pos:line="11" pos:column="42">end<pos:position pos:line="11" pos:column="45"/></name><index pos:line="11" pos:column="45">[<expr><operator pos:line="11" pos:column="46">-<pos:position pos:line="11" pos:column="47"/></operator><literal type="number" pos:line="11" pos:column="47">5<pos:position pos:line="11" pos:column="48"/></literal></expr>]<pos:position pos:line="11" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call> <operator pos:line="11" pos:column="51">&amp;&amp;<pos:position pos:line="11" pos:column="61"/></operator>
	    <operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><call><name pos:line="12" pos:column="14">strncmp<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">end<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">-<pos:position pos:line="12" pos:column="27"/></operator> <literal type="number" pos:line="12" pos:column="28">4<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="31">".git"<pos:position pos:line="12" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="39">4<pos:position pos:line="12" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42"> <block pos:line="12" pos:column="43">{
		<expr_stmt><expr><name pos:line="13" pos:column="17">end<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">-=<pos:position pos:line="13" pos:column="23"/></operator> <literal type="number" pos:line="13" pos:column="24">5<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
		<while pos:line="14" pos:column="17">while <condition pos:line="14" pos:column="23">(<expr><name pos:line="14" pos:column="24">repo<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">&lt;<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="31">end<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">&amp;&amp;<pos:position pos:line="14" pos:column="45"/></operator> <call><name pos:line="14" pos:column="38">is_dir_sep<pos:position pos:line="14" pos:column="48"/></name><argument_list pos:line="14" pos:column="48">(<argument><expr><name><name pos:line="14" pos:column="49">end<pos:position pos:line="14" pos:column="52"/></name><index pos:line="14" pos:column="52">[<expr><operator pos:line="14" pos:column="53">-<pos:position pos:line="14" pos:column="54"/></operator><literal type="number" pos:line="14" pos:column="54">1<pos:position pos:line="14" pos:column="55"/></literal></expr>]<pos:position pos:line="14" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="58"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">end<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">--<pos:position pos:line="15" pos:column="30"/></operator></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt></block></while>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="18" pos:column="9">/*
	 * Find last component, but be prepared that repo could have
	 * the form  "remote.example.com:foo.git", i.e. no slash
	 * in the directory part.
	 */</comment>
	<expr_stmt><expr><name pos:line="23" pos:column="9">start<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">end<pos:position pos:line="23" pos:column="20"/></name></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
	<while pos:line="24" pos:column="9">while <condition pos:line="24" pos:column="15">(<expr><name pos:line="24" pos:column="16">repo<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">&lt;<pos:position pos:line="24" pos:column="25"/></operator> <name pos:line="24" pos:column="23">start<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">&amp;&amp;<pos:position pos:line="24" pos:column="39"/></operator> <operator pos:line="24" pos:column="32">!<pos:position pos:line="24" pos:column="33"/></operator><call><name pos:line="24" pos:column="33">is_dir_sep<pos:position pos:line="24" pos:column="43"/></name><argument_list pos:line="24" pos:column="43">(<argument><expr><name><name pos:line="24" pos:column="44">start<pos:position pos:line="24" pos:column="49"/></name><index pos:line="24" pos:column="49">[<expr><operator pos:line="24" pos:column="50">-<pos:position pos:line="24" pos:column="51"/></operator><literal type="number" pos:line="24" pos:column="51">1<pos:position pos:line="24" pos:column="52"/></literal></expr>]<pos:position pos:line="24" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call> <operator pos:line="24" pos:column="55">&amp;&amp;<pos:position pos:line="24" pos:column="65"/></operator> <name><name pos:line="24" pos:column="58">start<pos:position pos:line="24" pos:column="63"/></name><index pos:line="24" pos:column="63">[<expr><operator pos:line="24" pos:column="64">-<pos:position pos:line="24" pos:column="65"/></operator><literal type="number" pos:line="24" pos:column="65">1<pos:position pos:line="24" pos:column="66"/></literal></expr>]<pos:position pos:line="24" pos:column="67"/></index></name> <operator pos:line="24" pos:column="68">!=<pos:position pos:line="24" pos:column="70"/></operator> <literal type="char" pos:line="24" pos:column="71">':'<pos:position pos:line="24" pos:column="74"/></literal></expr>)<pos:position pos:line="24" pos:column="75"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="17">start<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">--<pos:position pos:line="25" pos:column="24"/></operator></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt></block></while>

	<comment type="block" pos:line="27" pos:column="9">/*
	 * Strip .{bundle,git}.
	 */</comment>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">is_bundle<pos:position pos:line="30" pos:column="22"/></name></expr>)<pos:position pos:line="30" pos:column="23"/></condition><then pos:line="30" pos:column="23"> <block pos:line="30" pos:column="24">{
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">end<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">-<pos:position pos:line="31" pos:column="26"/></operator> <name pos:line="31" pos:column="27">start<pos:position pos:line="31" pos:column="32"/></name> <operator pos:line="31" pos:column="33">&gt;<pos:position pos:line="31" pos:column="37"/></operator> <literal type="number" pos:line="31" pos:column="35">7<pos:position pos:line="31" pos:column="36"/></literal> <operator pos:line="31" pos:column="37">&amp;&amp;<pos:position pos:line="31" pos:column="47"/></operator> <operator pos:line="31" pos:column="40">!<pos:position pos:line="31" pos:column="41"/></operator><call><name pos:line="31" pos:column="41">strncmp<pos:position pos:line="31" pos:column="48"/></name><argument_list pos:line="31" pos:column="48">(<argument><expr><name pos:line="31" pos:column="49">end<pos:position pos:line="31" pos:column="52"/></name> <operator pos:line="31" pos:column="53">-<pos:position pos:line="31" pos:column="54"/></operator> <literal type="number" pos:line="31" pos:column="55">7<pos:position pos:line="31" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="58">".bundle"<pos:position pos:line="31" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="69">7<pos:position pos:line="31" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="72"/></condition><then pos:line="31" pos:column="72">
			<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="25">end<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">-=<pos:position pos:line="32" pos:column="31"/></operator> <literal type="number" pos:line="32" pos:column="32">7<pos:position pos:line="32" pos:column="33"/></literal></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt></block></then></if>
	}<pos:position pos:line="33" pos:column="10"/></block></then> <else pos:line="33" pos:column="11">else <block pos:line="33" pos:column="16">{
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">end<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">-<pos:position pos:line="34" pos:column="26"/></operator> <name pos:line="34" pos:column="27">start<pos:position pos:line="34" pos:column="32"/></name> <operator pos:line="34" pos:column="33">&gt;<pos:position pos:line="34" pos:column="37"/></operator> <literal type="number" pos:line="34" pos:column="35">4<pos:position pos:line="34" pos:column="36"/></literal> <operator pos:line="34" pos:column="37">&amp;&amp;<pos:position pos:line="34" pos:column="47"/></operator> <operator pos:line="34" pos:column="40">!<pos:position pos:line="34" pos:column="41"/></operator><call><name pos:line="34" pos:column="41">strncmp<pos:position pos:line="34" pos:column="48"/></name><argument_list pos:line="34" pos:column="48">(<argument><expr><name pos:line="34" pos:column="49">end<pos:position pos:line="34" pos:column="52"/></name> <operator pos:line="34" pos:column="53">-<pos:position pos:line="34" pos:column="54"/></operator> <literal type="number" pos:line="34" pos:column="55">4<pos:position pos:line="34" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="58">".git"<pos:position pos:line="34" pos:column="64"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="66">4<pos:position pos:line="34" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="69"/></condition><then pos:line="34" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="25">end<pos:position pos:line="35" pos:column="28"/></name> <operator pos:line="35" pos:column="29">-=<pos:position pos:line="35" pos:column="31"/></operator> <literal type="number" pos:line="35" pos:column="32">4<pos:position pos:line="35" pos:column="33"/></literal></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt></block></then></if>
	}<pos:position pos:line="36" pos:column="10"/></block></else></if>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">is_bare<pos:position pos:line="38" pos:column="20"/></name></expr>)<pos:position pos:line="38" pos:column="21"/></condition><then pos:line="38" pos:column="21"> <block pos:line="38" pos:column="22">{
		<decl_stmt><decl><type><name><name pos:line="39" pos:column="17">struct<pos:position pos:line="39" pos:column="23"/></name> <name pos:line="39" pos:column="24">strbuf<pos:position pos:line="39" pos:column="30"/></name></name></type> <name pos:line="39" pos:column="31">result<pos:position pos:line="39" pos:column="37"/></name> <init pos:line="39" pos:column="38">= <expr><name pos:line="39" pos:column="40">STRBUF_INIT<pos:position pos:line="39" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="39" pos:column="52"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">strbuf_addf<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><operator pos:line="40" pos:column="29">&amp;<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="30">result<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="38">"%.*s.git"<pos:position pos:line="40" pos:column="48"/></literal></expr></argument>, <argument><expr><call pos:line="40" pos:column="50">(<name pos:line="40" pos:column="51">int<pos:position pos:line="40" pos:column="54"/></name>)<argument_list pos:line="40" pos:column="55">(<argument><expr><name pos:line="40" pos:column="56">end<pos:position pos:line="40" pos:column="59"/></name> <operator pos:line="40" pos:column="60">-<pos:position pos:line="40" pos:column="61"/></operator> <name pos:line="40" pos:column="62">start<pos:position pos:line="40" pos:column="67"/></name></expr></argument>)<pos:position pos:line="40" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="70">start<pos:position pos:line="40" pos:column="75"/></name></expr></argument>)<pos:position pos:line="40" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><name pos:line="41" pos:column="17">dir<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <call><name pos:line="41" pos:column="23">strbuf_detach<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><operator pos:line="41" pos:column="37">&amp;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="38">result<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="46">NULL<pos:position pos:line="41" pos:column="50"/></name></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></then> <else pos:line="42" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="17">dir<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">=<pos:position pos:line="43" pos:column="22"/></operator> <call><name pos:line="43" pos:column="23">xstrndup<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><name pos:line="43" pos:column="32">start<pos:position pos:line="43" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="39">end<pos:position pos:line="43" pos:column="42"/></name> <operator pos:line="43" pos:column="43">-<pos:position pos:line="43" pos:column="44"/></operator> <name pos:line="43" pos:column="45">start<pos:position pos:line="43" pos:column="50"/></name></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="52"/></expr_stmt></block></else></if>
	<comment type="block" pos:line="44" pos:column="9">/*
	 * Replace sequences of 'control' characters and whitespace
	 * with one ascii space, remove leading and trailing spaces.
	 */</comment>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">*<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">dir<pos:position pos:line="48" pos:column="17"/></name></expr>)<pos:position pos:line="48" pos:column="18"/></condition><then pos:line="48" pos:column="18"> <block pos:line="48" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="49" pos:column="17">char<pos:position pos:line="49" pos:column="21"/></name> <modifier pos:line="49" pos:column="22">*<pos:position pos:line="49" pos:column="23"/></modifier></type><name pos:line="49" pos:column="23">out<pos:position pos:line="49" pos:column="26"/></name> <init pos:line="49" pos:column="27">= <expr><name pos:line="49" pos:column="29">dir<pos:position pos:line="49" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="49" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="50" pos:column="17">int<pos:position pos:line="50" pos:column="20"/></name></type> <name pos:line="50" pos:column="21">prev_space<pos:position pos:line="50" pos:column="31"/></name> <init pos:line="50" pos:column="32">= <expr><literal type="number" pos:line="50" pos:column="34">1<pos:position pos:line="50" pos:column="35"/></literal></expr></init></decl> <comment type="block" pos:line="50" pos:column="36">/* strip leading whitespace */</comment>;<pos:position pos:line="50" pos:column="67"/></decl_stmt>
		<for pos:line="51" pos:column="17">for <control pos:line="51" pos:column="21">(<init><expr><name pos:line="51" pos:column="22">end<pos:position pos:line="51" pos:column="25"/></name> <operator pos:line="51" pos:column="26">=<pos:position pos:line="51" pos:column="27"/></operator> <name pos:line="51" pos:column="28">dir<pos:position pos:line="51" pos:column="31"/></name></expr>;<pos:position pos:line="51" pos:column="32"/></init> <condition><expr><operator pos:line="51" pos:column="33">*<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="34">end<pos:position pos:line="51" pos:column="37"/></name></expr>;<pos:position pos:line="51" pos:column="38"/></condition> <incr><expr><operator pos:line="51" pos:column="39">++<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="41">end<pos:position pos:line="51" pos:column="44"/></name></expr></incr>)<pos:position pos:line="51" pos:column="45"/></control> <block pos:line="51" pos:column="46">{
			<decl_stmt><decl><type><name pos:line="52" pos:column="25">char<pos:position pos:line="52" pos:column="29"/></name></type> <name pos:line="52" pos:column="30">ch<pos:position pos:line="52" pos:column="32"/></name> <init pos:line="52" pos:column="33">= <expr><operator pos:line="52" pos:column="35">*<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="36">end<pos:position pos:line="52" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="52" pos:column="40"/></decl_stmt>
			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><operator pos:line="53" pos:column="29">(<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="30">unsigned<pos:position pos:line="53" pos:column="38"/></name> <name pos:line="53" pos:column="39">char<pos:position pos:line="53" pos:column="43"/></name><operator pos:line="53" pos:column="43">)<pos:position pos:line="53" pos:column="44"/></operator><name pos:line="53" pos:column="44">ch<pos:position pos:line="53" pos:column="46"/></name> <operator pos:line="53" pos:column="47">&lt;<pos:position pos:line="53" pos:column="51"/></operator> <literal type="char" pos:line="53" pos:column="49">'\x20'<pos:position pos:line="53" pos:column="55"/></literal></expr>)<pos:position pos:line="53" pos:column="56"/></condition><then pos:line="53" pos:column="56">
				<block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="33">ch<pos:position pos:line="54" pos:column="35"/></name> <operator pos:line="54" pos:column="36">=<pos:position pos:line="54" pos:column="37"/></operator> <literal type="char" pos:line="54" pos:column="38">'\x20'<pos:position pos:line="54" pos:column="44"/></literal></expr>;<pos:position pos:line="54" pos:column="45"/></expr_stmt></block></then></if>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><call><name pos:line="55" pos:column="29">isspace<pos:position pos:line="55" pos:column="36"/></name><argument_list pos:line="55" pos:column="36">(<argument><expr><name pos:line="55" pos:column="37">ch<pos:position pos:line="55" pos:column="39"/></name></expr></argument>)<pos:position pos:line="55" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="41"/></condition><then pos:line="55" pos:column="41"> <block pos:line="55" pos:column="42">{
				<if pos:line="56" pos:column="33">if <condition pos:line="56" pos:column="36">(<expr><name pos:line="56" pos:column="37">prev_space<pos:position pos:line="56" pos:column="47"/></name></expr>)<pos:position pos:line="56" pos:column="48"/></condition><then pos:line="56" pos:column="48">
					<block type="pseudo"><continue pos:line="57" pos:column="41">continue;<pos:position pos:line="57" pos:column="50"/></continue></block></then></if>
				<expr_stmt><expr><name pos:line="58" pos:column="33">prev_space<pos:position pos:line="58" pos:column="43"/></name> <operator pos:line="58" pos:column="44">=<pos:position pos:line="58" pos:column="45"/></operator> <literal type="number" pos:line="58" pos:column="46">1<pos:position pos:line="58" pos:column="47"/></literal></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="59" pos:column="26"/></block></then> <else pos:line="59" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="33">prev_space<pos:position pos:line="60" pos:column="43"/></name> <operator pos:line="60" pos:column="44">=<pos:position pos:line="60" pos:column="45"/></operator> <literal type="number" pos:line="60" pos:column="46">0<pos:position pos:line="60" pos:column="47"/></literal></expr>;<pos:position pos:line="60" pos:column="48"/></expr_stmt></block></else></if>
			<expr_stmt><expr><operator pos:line="61" pos:column="25">*<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="26">out<pos:position pos:line="61" pos:column="29"/></name><operator pos:line="61" pos:column="29">++<pos:position pos:line="61" pos:column="31"/></operator> <operator pos:line="61" pos:column="32">=<pos:position pos:line="61" pos:column="33"/></operator> <name pos:line="61" pos:column="34">ch<pos:position pos:line="61" pos:column="36"/></name></expr>;<pos:position pos:line="61" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="62" pos:column="18"/></block></for>
		<expr_stmt><expr><operator pos:line="63" pos:column="17">*<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="18">out<pos:position pos:line="63" pos:column="21"/></name> <operator pos:line="63" pos:column="22">=<pos:position pos:line="63" pos:column="23"/></operator> <literal type="char" pos:line="63" pos:column="24">'\0'<pos:position pos:line="63" pos:column="28"/></literal></expr>;<pos:position pos:line="63" pos:column="29"/></expr_stmt>
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><name pos:line="64" pos:column="21">out<pos:position pos:line="64" pos:column="24"/></name> <operator pos:line="64" pos:column="25">&gt;<pos:position pos:line="64" pos:column="29"/></operator> <name pos:line="64" pos:column="27">dir<pos:position pos:line="64" pos:column="30"/></name> <operator pos:line="64" pos:column="31">&amp;&amp;<pos:position pos:line="64" pos:column="41"/></operator> <name pos:line="64" pos:column="34">prev_space<pos:position pos:line="64" pos:column="44"/></name></expr>)<pos:position pos:line="64" pos:column="45"/></condition><then pos:line="64" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="65" pos:column="25">out<pos:position pos:line="65" pos:column="28"/></name><index pos:line="65" pos:column="28">[<expr><operator pos:line="65" pos:column="29">-<pos:position pos:line="65" pos:column="30"/></operator><literal type="number" pos:line="65" pos:column="30">1<pos:position pos:line="65" pos:column="31"/></literal></expr>]<pos:position pos:line="65" pos:column="32"/></index></name> <operator pos:line="65" pos:column="33">=<pos:position pos:line="65" pos:column="34"/></operator> <literal type="char" pos:line="65" pos:column="35">'\0'<pos:position pos:line="65" pos:column="39"/></literal></expr>;<pos:position pos:line="65" pos:column="40"/></expr_stmt></block></then></if>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>
	<return pos:line="67" pos:column="9">return <expr><name pos:line="67" pos:column="16">dir<pos:position pos:line="67" pos:column="19"/></name></expr>;<pos:position pos:line="67" pos:column="20"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

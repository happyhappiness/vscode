<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4294_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">interpret_nth_prior_checkout<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">name<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">int<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">namelen<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
					<parameter><decl><type><name><name pos:line="2" pos:column="41">struct<pos:position pos:line="2" pos:column="47"/></name> <name pos:line="2" pos:column="48">strbuf<pos:position pos:line="2" pos:column="54"/></name></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">buf<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">long<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">nth<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">retval<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">grab_nth_branch_switch_cbdata<pos:position pos:line="6" pos:column="45"/></name></name></type> <name pos:line="6" pos:column="46">cb<pos:position pos:line="6" pos:column="48"/></name></decl>;<pos:position pos:line="6" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">brace<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">num_end<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">namelen<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">&lt;<pos:position pos:line="10" pos:column="25"/></operator> <literal type="number" pos:line="10" pos:column="23">4<pos:position pos:line="10" pos:column="24"/></literal></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">-<pos:position pos:line="11" pos:column="25"/></operator><literal type="number" pos:line="11" pos:column="25">1<pos:position pos:line="11" pos:column="26"/></literal></expr>;<pos:position pos:line="11" pos:column="27"/></return></block></then></if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">name<pos:position pos:line="12" pos:column="17"/></name><index pos:line="12" pos:column="17">[<expr><literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>]<pos:position pos:line="12" pos:column="20"/></index></name> <operator pos:line="12" pos:column="21">!=<pos:position pos:line="12" pos:column="23"/></operator> <literal type="char" pos:line="12" pos:column="24">'@'<pos:position pos:line="12" pos:column="27"/></literal> <operator pos:line="12" pos:column="28">||<pos:position pos:line="12" pos:column="30"/></operator> <name><name pos:line="12" pos:column="31">name<pos:position pos:line="12" pos:column="35"/></name><index pos:line="12" pos:column="35">[<expr><literal type="number" pos:line="12" pos:column="36">1<pos:position pos:line="12" pos:column="37"/></literal></expr>]<pos:position pos:line="12" pos:column="38"/></index></name> <operator pos:line="12" pos:column="39">!=<pos:position pos:line="12" pos:column="41"/></operator> <literal type="char" pos:line="12" pos:column="42">'{'<pos:position pos:line="12" pos:column="45"/></literal> <operator pos:line="12" pos:column="46">||<pos:position pos:line="12" pos:column="48"/></operator> <name><name pos:line="12" pos:column="49">name<pos:position pos:line="12" pos:column="53"/></name><index pos:line="12" pos:column="53">[<expr><literal type="number" pos:line="12" pos:column="54">2<pos:position pos:line="12" pos:column="55"/></literal></expr>]<pos:position pos:line="12" pos:column="56"/></index></name> <operator pos:line="12" pos:column="57">!=<pos:position pos:line="12" pos:column="59"/></operator> <literal type="char" pos:line="12" pos:column="60">'-'<pos:position pos:line="12" pos:column="63"/></literal></expr>)<pos:position pos:line="12" pos:column="64"/></condition><then pos:line="12" pos:column="64">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">-<pos:position pos:line="13" pos:column="25"/></operator><literal type="number" pos:line="13" pos:column="25">1<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="14" pos:column="9">brace<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <call><name pos:line="14" pos:column="17">memchr<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">name<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="30">'}'<pos:position pos:line="14" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">namelen<pos:position pos:line="14" pos:column="42"/></name></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">brace<pos:position pos:line="15" pos:column="19"/></name></expr>)<pos:position pos:line="15" pos:column="20"/></condition><then pos:line="15" pos:column="20">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">nth<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">strtol<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">name<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">+<pos:position pos:line="17" pos:column="28"/></operator> <literal type="number" pos:line="17" pos:column="29">3<pos:position pos:line="17" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="32">&amp;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="33">num_end<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="42">10<pos:position pos:line="17" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">num_end<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">!=<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">brace<pos:position pos:line="18" pos:column="29"/></name></expr>)<pos:position pos:line="18" pos:column="30"/></condition><then pos:line="18" pos:column="30">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">-<pos:position pos:line="19" pos:column="25"/></operator><literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></return></block></then></if>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">nth<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">&lt;=<pos:position pos:line="20" pos:column="22"/></operator> <literal type="number" pos:line="20" pos:column="20">0<pos:position pos:line="20" pos:column="21"/></literal></expr>)<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22">
		<block type="pseudo"><return pos:line="21" pos:column="17">return <expr><operator pos:line="21" pos:column="24">-<pos:position pos:line="21" pos:column="25"/></operator><literal type="number" pos:line="21" pos:column="25">1<pos:position pos:line="21" pos:column="26"/></literal></expr>;<pos:position pos:line="21" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">cb<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">.<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">remaining<pos:position pos:line="22" pos:column="21"/></name></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">nth<pos:position pos:line="22" pos:column="27"/></name></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">strbuf_init<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><operator pos:line="23" pos:column="21">&amp;<pos:position pos:line="23" pos:column="26"/></operator><name><name pos:line="23" pos:column="22">cb<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">.<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="25">buf<pos:position pos:line="23" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="30">20<pos:position pos:line="23" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><name pos:line="25" pos:column="9">retval<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><literal type="number" pos:line="26" pos:column="13">0<pos:position pos:line="26" pos:column="14"/></literal> <operator pos:line="26" pos:column="15">&lt;<pos:position pos:line="26" pos:column="19"/></operator> <call><name pos:line="26" pos:column="17">for_each_reflog_ent_reverse<pos:position pos:line="26" pos:column="44"/></name><argument_list pos:line="26" pos:column="44">(<argument><expr><literal type="string" pos:line="26" pos:column="45">"HEAD"<pos:position pos:line="26" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="53">grab_nth_branch_switch<pos:position pos:line="26" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="77">&amp;<pos:position pos:line="26" pos:column="82"/></operator><name pos:line="26" pos:column="78">cb<pos:position pos:line="26" pos:column="80"/></name></expr></argument>)<pos:position pos:line="26" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="82"/></condition><then pos:line="26" pos:column="82"> <block pos:line="26" pos:column="83">{
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">strbuf_reset<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">buf<pos:position pos:line="27" pos:column="33"/></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">strbuf_addbuf<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">buf<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="36">&amp;<pos:position pos:line="28" pos:column="41"/></operator><name><name pos:line="28" pos:column="37">cb<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">.<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="40">buf<pos:position pos:line="28" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">retval<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="26">brace<pos:position pos:line="29" pos:column="31"/></name> <operator pos:line="29" pos:column="32">-<pos:position pos:line="29" pos:column="33"/></operator> <name pos:line="29" pos:column="34">name<pos:position pos:line="29" pos:column="38"/></name> <operator pos:line="29" pos:column="39">+<pos:position pos:line="29" pos:column="40"/></operator> <literal type="number" pos:line="29" pos:column="41">1<pos:position pos:line="29" pos:column="42"/></literal></expr>;<pos:position pos:line="29" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">strbuf_release<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><operator pos:line="32" pos:column="24">&amp;<pos:position pos:line="32" pos:column="29"/></operator><name><name pos:line="32" pos:column="25">cb<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">.<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="28">buf<pos:position pos:line="32" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
	<return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">retval<pos:position pos:line="33" pos:column="22"/></name></expr>;<pos:position pos:line="33" pos:column="23"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

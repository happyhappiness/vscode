<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5334_git-2.10.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">ac<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">av<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">prefix<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">add_opts<pos:position pos:line="3" pos:column="24"/></name></name></type> <name pos:line="3" pos:column="25">opts<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">new_branch_force<pos:position pos:line="4" pos:column="37"/></name> <init pos:line="4" pos:column="38">= <expr><name pos:line="4" pos:column="40">NULL<pos:position pos:line="4" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">path<pos:position pos:line="5" pos:column="25"/></name></decl>, <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="28">branch<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">option<pos:position pos:line="6" pos:column="22"/></name></name></type> <name><name pos:line="6" pos:column="23">options<pos:position pos:line="6" pos:column="30"/></name><index pos:line="6" pos:column="30">[]<pos:position pos:line="6" pos:column="32"/></index></name> <init pos:line="6" pos:column="33">= <expr><block pos:line="6" pos:column="35">{
		<expr><call><name pos:line="7" pos:column="17">OPT__FORCE<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><operator pos:line="7" pos:column="28">&amp;<pos:position pos:line="7" pos:column="33"/></operator><name><name pos:line="7" pos:column="29">opts<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">.<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">force<pos:position pos:line="7" pos:column="39"/></name></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="41">N_<pos:position pos:line="7" pos:column="43"/></name><argument_list pos:line="7" pos:column="43">(<argument><expr><literal type="string" pos:line="7" pos:column="44">"checkout &lt;branch&gt; even if already checked out in other worktree"<pos:position pos:line="7" pos:column="115"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="110"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="111"/></argument_list></call></expr>,
		<expr><call><name pos:line="8" pos:column="17">OPT_STRING<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><literal type="char" pos:line="8" pos:column="28">'b'<pos:position pos:line="8" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="33">NULL<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="39">&amp;<pos:position pos:line="8" pos:column="44"/></operator><name><name pos:line="8" pos:column="40">opts<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">.<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="45">new_branch<pos:position pos:line="8" pos:column="55"/></name></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="57">N_<pos:position pos:line="8" pos:column="59"/></name><argument_list pos:line="8" pos:column="59">(<argument><expr><literal type="string" pos:line="8" pos:column="60">"branch"<pos:position pos:line="8" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr></argument>,
			   <argument><expr><call><name pos:line="9" pos:column="28">N_<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><literal type="string" pos:line="9" pos:column="31">"create a new branch"<pos:position pos:line="9" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>,
		<expr><call><name pos:line="10" pos:column="17">OPT_STRING<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><literal type="char" pos:line="10" pos:column="28">'B'<pos:position pos:line="10" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">NULL<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="39">&amp;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="40">new_branch_force<pos:position pos:line="10" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="58">N_<pos:position pos:line="10" pos:column="60"/></name><argument_list pos:line="10" pos:column="60">(<argument><expr><literal type="string" pos:line="10" pos:column="61">"branch"<pos:position pos:line="10" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr></argument>,
			   <argument><expr><call><name pos:line="11" pos:column="28">N_<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><literal type="string" pos:line="11" pos:column="31">"create or reset a branch"<pos:position pos:line="11" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>,
		<expr><call><name pos:line="12" pos:column="17">OPT_BOOL<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><literal type="number" pos:line="12" pos:column="26">0<pos:position pos:line="12" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="29">"detach"<pos:position pos:line="12" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="39">&amp;<pos:position pos:line="12" pos:column="44"/></operator><name><name pos:line="12" pos:column="40">opts<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">.<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="45">detach<pos:position pos:line="12" pos:column="51"/></name></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="53">N_<pos:position pos:line="12" pos:column="55"/></name><argument_list pos:line="12" pos:column="55">(<argument><expr><literal type="string" pos:line="12" pos:column="56">"detach HEAD at named commit"<pos:position pos:line="12" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="87"/></argument_list></call></expr>,
		<expr><call><name pos:line="13" pos:column="17">OPT_BOOL<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="29">"checkout"<pos:position pos:line="13" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="41">&amp;<pos:position pos:line="13" pos:column="46"/></operator><name><name pos:line="13" pos:column="42">opts<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">.<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="47">checkout<pos:position pos:line="13" pos:column="55"/></name></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="57">N_<pos:position pos:line="13" pos:column="59"/></name><argument_list pos:line="13" pos:column="59">(<argument><expr><literal type="string" pos:line="13" pos:column="60">"populate the new working tree"<pos:position pos:line="13" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="93"/></argument_list></call></expr>,
		<macro><name pos:line="14" pos:column="17">OPT_END<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">()<pos:position pos:line="14" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="15" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="15" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">memset<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><operator pos:line="17" pos:column="16">&amp;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="17">opts<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="23">0<pos:position pos:line="17" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="26">sizeof<argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">opts<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">opts<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">.<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">checkout<pos:position pos:line="18" pos:column="22"/></name></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <literal type="number" pos:line="18" pos:column="25">1<pos:position pos:line="18" pos:column="26"/></literal></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">ac<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">parse_options<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">ac<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">av<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="36">prefix<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="44">options<pos:position pos:line="19" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="53">worktree_usage<pos:position pos:line="19" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="69">0<pos:position pos:line="19" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="72"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><operator pos:line="20" pos:column="14">!<pos:position pos:line="20" pos:column="15"/></operator><name><name pos:line="20" pos:column="15">opts<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">.<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">detach<pos:position pos:line="20" pos:column="26"/></name></name> <operator pos:line="20" pos:column="27">+<pos:position pos:line="20" pos:column="28"/></operator> <operator pos:line="20" pos:column="29">!<pos:position pos:line="20" pos:column="30"/></operator><operator pos:line="20" pos:column="30">!<pos:position pos:line="20" pos:column="31"/></operator><name><name pos:line="20" pos:column="31">opts<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">.<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">new_branch<pos:position pos:line="20" pos:column="46"/></name></name> <operator pos:line="20" pos:column="47">+<pos:position pos:line="20" pos:column="48"/></operator> <operator pos:line="20" pos:column="49">!<pos:position pos:line="20" pos:column="50"/></operator><operator pos:line="20" pos:column="50">!<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="51">new_branch_force<pos:position pos:line="20" pos:column="67"/></name> <operator pos:line="20" pos:column="68">&gt;<pos:position pos:line="20" pos:column="72"/></operator> <literal type="number" pos:line="20" pos:column="70">1<pos:position pos:line="20" pos:column="71"/></literal></expr>)<pos:position pos:line="20" pos:column="72"/></condition><then pos:line="20" pos:column="72">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">die<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><call><name pos:line="21" pos:column="21">_<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><literal type="string" pos:line="21" pos:column="23">"-b, -B, and --detach are mutually exclusive"<pos:position pos:line="21" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="71"/></expr_stmt></block></then></if>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">ac<pos:position pos:line="22" pos:column="15"/></name> <argument_list type="generic" pos:line="22" pos:column="16">&lt; <argument><expr><literal type="number" pos:line="22" pos:column="18">1<pos:position pos:line="22" pos:column="19"/></literal> <operator pos:line="22" pos:column="20">||<pos:position pos:line="22" pos:column="22"/></operator> <name pos:line="22" pos:column="23">ac<pos:position pos:line="22" pos:column="25"/></name></expr></argument> &gt;<pos:position pos:line="22" pos:column="30"/></argument_list></name> <literal type="number" pos:line="22" pos:column="28">2<pos:position pos:line="22" pos:column="29"/></literal></expr>)<pos:position pos:line="22" pos:column="30"/></condition><then pos:line="22" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">usage_with_options<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">worktree_usage<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="52">options<pos:position pos:line="23" pos:column="59"/></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="61"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="25" pos:column="9">path<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">prefix_filename<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name pos:line="25" pos:column="32">prefix<pos:position pos:line="25" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="40">strlen<pos:position pos:line="25" pos:column="46"/></name><argument_list pos:line="25" pos:column="46">(<argument><expr><name pos:line="25" pos:column="47">prefix<pos:position pos:line="25" pos:column="53"/></name></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="56">av<pos:position pos:line="25" pos:column="58"/></name><index pos:line="25" pos:column="58">[<expr><literal type="number" pos:line="25" pos:column="59">0<pos:position pos:line="25" pos:column="60"/></literal></expr>]<pos:position pos:line="25" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">branch<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <ternary><condition><expr><name pos:line="26" pos:column="18">ac<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">&lt;<pos:position pos:line="26" pos:column="25"/></operator> <literal type="number" pos:line="26" pos:column="23">2<pos:position pos:line="26" pos:column="24"/></literal></expr> ?<pos:position pos:line="26" pos:column="26"/></condition><then pos:line="26" pos:column="26"> <expr><literal type="string" pos:line="26" pos:column="27">"HEAD"<pos:position pos:line="26" pos:column="33"/></literal></expr> <pos:position pos:line="26" pos:column="34"/></then><else pos:line="26" pos:column="34">: <expr><name><name pos:line="26" pos:column="36">av<pos:position pos:line="26" pos:column="38"/></name><index pos:line="26" pos:column="38">[<expr><literal type="number" pos:line="26" pos:column="39">1<pos:position pos:line="26" pos:column="40"/></literal></expr>]<pos:position pos:line="26" pos:column="41"/></index></name></expr></else></ternary></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><call><name pos:line="28" pos:column="14">strcmp<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">branch<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="29">"-"<pos:position pos:line="28" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="34"/></condition><then pos:line="28" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="17">branch<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <literal type="string" pos:line="29" pos:column="26">"@{-1}"<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="31" pos:column="9">opts<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">.<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">force_new_branch<pos:position pos:line="31" pos:column="30"/></name></name> <operator pos:line="31" pos:column="31">=<pos:position pos:line="31" pos:column="32"/></operator> <operator pos:line="31" pos:column="33">!<pos:position pos:line="31" pos:column="34"/></operator><operator pos:line="31" pos:column="34">!<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="35">new_branch_force<pos:position pos:line="31" pos:column="51"/></name></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">opts<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">.<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">force_new_branch<pos:position pos:line="32" pos:column="34"/></name></name></expr>)<pos:position pos:line="32" pos:column="35"/></condition><then pos:line="32" pos:column="35"> <block pos:line="32" pos:column="36">{
		<decl_stmt><decl><type><name><name pos:line="33" pos:column="17">struct<pos:position pos:line="33" pos:column="23"/></name> <name pos:line="33" pos:column="24">strbuf<pos:position pos:line="33" pos:column="30"/></name></name></type> <name pos:line="33" pos:column="31">symref<pos:position pos:line="33" pos:column="37"/></name> <init pos:line="33" pos:column="38">= <expr><name pos:line="33" pos:column="40">STRBUF_INIT<pos:position pos:line="33" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="52"/></decl_stmt>

		<expr_stmt><expr><name><name pos:line="35" pos:column="17">opts<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">.<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">new_branch<pos:position pos:line="35" pos:column="32"/></name></name> <operator pos:line="35" pos:column="33">=<pos:position pos:line="35" pos:column="34"/></operator> <name pos:line="35" pos:column="35">new_branch_force<pos:position pos:line="35" pos:column="51"/></name></expr>;<pos:position pos:line="35" pos:column="52"/></expr_stmt>

		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><operator pos:line="37" pos:column="21">!<pos:position pos:line="37" pos:column="22"/></operator><name><name pos:line="37" pos:column="22">opts<pos:position pos:line="37" pos:column="26"/></name><operator pos:line="37" pos:column="26">.<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="27">force<pos:position pos:line="37" pos:column="32"/></name></name> <operator pos:line="37" pos:column="33">&amp;&amp;<pos:position pos:line="37" pos:column="43"/></operator>
		    <operator pos:line="38" pos:column="21">!<pos:position pos:line="38" pos:column="22"/></operator><call><name pos:line="38" pos:column="22">strbuf_check_branch_ref<pos:position pos:line="38" pos:column="45"/></name><argument_list pos:line="38" pos:column="45">(<argument><expr><operator pos:line="38" pos:column="46">&amp;<pos:position pos:line="38" pos:column="51"/></operator><name pos:line="38" pos:column="47">symref<pos:position pos:line="38" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="55">opts<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">.<pos:position pos:line="38" pos:column="60"/></operator><name pos:line="38" pos:column="60">new_branch<pos:position pos:line="38" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="71"/></argument_list></call> <operator pos:line="38" pos:column="72">&amp;&amp;<pos:position pos:line="38" pos:column="82"/></operator>
		    <call><name pos:line="39" pos:column="21">ref_exists<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><name><name pos:line="39" pos:column="32">symref<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">.<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="39">buf<pos:position pos:line="39" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="44"/></condition><then pos:line="39" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="25">die_if_checked_out<pos:position pos:line="40" pos:column="43"/></name><argument_list pos:line="40" pos:column="43">(<argument><expr><name><name pos:line="40" pos:column="44">symref<pos:position pos:line="40" pos:column="50"/></name><operator pos:line="40" pos:column="50">.<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="51">buf<pos:position pos:line="40" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="56">0<pos:position pos:line="40" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="59"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">strbuf_release<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><operator pos:line="41" pos:column="32">&amp;<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="33">symref<pos:position pos:line="41" pos:column="39"/></name></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">ac<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">&lt;<pos:position pos:line="44" pos:column="20"/></operator> <literal type="number" pos:line="44" pos:column="18">2<pos:position pos:line="44" pos:column="19"/></literal> <operator pos:line="44" pos:column="20">&amp;&amp;<pos:position pos:line="44" pos:column="30"/></operator> <operator pos:line="44" pos:column="23">!<pos:position pos:line="44" pos:column="24"/></operator><name><name pos:line="44" pos:column="24">opts<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">.<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="29">new_branch<pos:position pos:line="44" pos:column="39"/></name></name> <operator pos:line="44" pos:column="40">&amp;&amp;<pos:position pos:line="44" pos:column="50"/></operator> <operator pos:line="44" pos:column="43">!<pos:position pos:line="44" pos:column="44"/></operator><name><name pos:line="44" pos:column="44">opts<pos:position pos:line="44" pos:column="48"/></name><operator pos:line="44" pos:column="48">.<pos:position pos:line="44" pos:column="49"/></operator><name pos:line="44" pos:column="49">detach<pos:position pos:line="44" pos:column="55"/></name></name></expr>)<pos:position pos:line="44" pos:column="56"/></condition><then pos:line="44" pos:column="56"> <block pos:line="44" pos:column="57">{
		<decl_stmt><decl><type><name pos:line="45" pos:column="17">int<pos:position pos:line="45" pos:column="20"/></name></type> <name pos:line="45" pos:column="21">n<pos:position pos:line="45" pos:column="22"/></name></decl>;<pos:position pos:line="45" pos:column="23"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="46" pos:column="17">const<pos:position pos:line="46" pos:column="22"/></specifier> <name pos:line="46" pos:column="23">char<pos:position pos:line="46" pos:column="27"/></name> <modifier pos:line="46" pos:column="28">*<pos:position pos:line="46" pos:column="29"/></modifier></type><name pos:line="46" pos:column="29">s<pos:position pos:line="46" pos:column="30"/></name> <init pos:line="46" pos:column="31">= <expr><call><name pos:line="46" pos:column="33">worktree_basename<pos:position pos:line="46" pos:column="50"/></name><argument_list pos:line="46" pos:column="50">(<argument><expr><name pos:line="46" pos:column="51">path<pos:position pos:line="46" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="57">&amp;<pos:position pos:line="46" pos:column="62"/></operator><name pos:line="46" pos:column="58">n<pos:position pos:line="46" pos:column="59"/></name></expr></argument>)<pos:position pos:line="46" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="61"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="47" pos:column="17">opts<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">.<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="22">new_branch<pos:position pos:line="47" pos:column="32"/></name></name> <operator pos:line="47" pos:column="33">=<pos:position pos:line="47" pos:column="34"/></operator> <call><name pos:line="47" pos:column="35">xstrndup<pos:position pos:line="47" pos:column="43"/></name><argument_list pos:line="47" pos:column="43">(<argument><expr><name pos:line="47" pos:column="44">s<pos:position pos:line="47" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="47">n<pos:position pos:line="47" pos:column="48"/></name></expr></argument>)<pos:position pos:line="47" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>

	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name><name pos:line="50" pos:column="13">opts<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">.<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="18">new_branch<pos:position pos:line="50" pos:column="28"/></name></name></expr>)<pos:position pos:line="50" pos:column="29"/></condition><then pos:line="50" pos:column="29"> <block pos:line="50" pos:column="30">{
		<decl_stmt><decl><type><name><name pos:line="51" pos:column="17">struct<pos:position pos:line="51" pos:column="23"/></name> <name pos:line="51" pos:column="24">child_process<pos:position pos:line="51" pos:column="37"/></name></name></type> <name pos:line="51" pos:column="38">cp<pos:position pos:line="51" pos:column="40"/></name> <init pos:line="51" pos:column="41">= <expr><name pos:line="51" pos:column="43">CHILD_PROCESS_INIT<pos:position pos:line="51" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="51" pos:column="62"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="52" pos:column="17">cp<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">.<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="20">git_cmd<pos:position pos:line="52" pos:column="27"/></name></name> <operator pos:line="52" pos:column="28">=<pos:position pos:line="52" pos:column="29"/></operator> <literal type="number" pos:line="52" pos:column="30">1<pos:position pos:line="52" pos:column="31"/></literal></expr>;<pos:position pos:line="52" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">argv_array_push<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><operator pos:line="53" pos:column="33">&amp;<pos:position pos:line="53" pos:column="38"/></operator><name><name pos:line="53" pos:column="34">cp<pos:position pos:line="53" pos:column="36"/></name><operator pos:line="53" pos:column="36">.<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="37">args<pos:position pos:line="53" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="43">"branch"<pos:position pos:line="53" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="53"/></expr_stmt>
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><name><name pos:line="54" pos:column="21">opts<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">.<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="26">force_new_branch<pos:position pos:line="54" pos:column="42"/></name></name></expr>)<pos:position pos:line="54" pos:column="43"/></condition><then pos:line="54" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="25">argv_array_push<pos:position pos:line="55" pos:column="40"/></name><argument_list pos:line="55" pos:column="40">(<argument><expr><operator pos:line="55" pos:column="41">&amp;<pos:position pos:line="55" pos:column="46"/></operator><name><name pos:line="55" pos:column="42">cp<pos:position pos:line="55" pos:column="44"/></name><operator pos:line="55" pos:column="44">.<pos:position pos:line="55" pos:column="45"/></operator><name pos:line="55" pos:column="45">args<pos:position pos:line="55" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="51">"--force"<pos:position pos:line="55" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="62"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">argv_array_push<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><operator pos:line="56" pos:column="33">&amp;<pos:position pos:line="56" pos:column="38"/></operator><name><name pos:line="56" pos:column="34">cp<pos:position pos:line="56" pos:column="36"/></name><operator pos:line="56" pos:column="36">.<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="37">args<pos:position pos:line="56" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="43">opts<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">.<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="48">new_branch<pos:position pos:line="56" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">argv_array_push<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><operator pos:line="57" pos:column="33">&amp;<pos:position pos:line="57" pos:column="38"/></operator><name><name pos:line="57" pos:column="34">cp<pos:position pos:line="57" pos:column="36"/></name><operator pos:line="57" pos:column="36">.<pos:position pos:line="57" pos:column="37"/></operator><name pos:line="57" pos:column="37">args<pos:position pos:line="57" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="43">branch<pos:position pos:line="57" pos:column="49"/></name></expr></argument>)<pos:position pos:line="57" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="51"/></expr_stmt>
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><call><name pos:line="58" pos:column="21">run_command<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">(<argument><expr><operator pos:line="58" pos:column="33">&amp;<pos:position pos:line="58" pos:column="38"/></operator><name pos:line="58" pos:column="34">cp<pos:position pos:line="58" pos:column="36"/></name></expr></argument>)<pos:position pos:line="58" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="38"/></condition><then pos:line="58" pos:column="38">
			<block type="pseudo"><return pos:line="59" pos:column="25">return <expr><operator pos:line="59" pos:column="32">-<pos:position pos:line="59" pos:column="33"/></operator><literal type="number" pos:line="59" pos:column="33">1<pos:position pos:line="59" pos:column="34"/></literal></expr>;<pos:position pos:line="59" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="60" pos:column="17">branch<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">=<pos:position pos:line="60" pos:column="25"/></operator> <name><name pos:line="60" pos:column="26">opts<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">.<pos:position pos:line="60" pos:column="31"/></operator><name pos:line="60" pos:column="31">new_branch<pos:position pos:line="60" pos:column="41"/></name></name></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="61" pos:column="10"/></block></then></if>

	<return pos:line="63" pos:column="9">return <expr><call><name pos:line="63" pos:column="16">add_worktree<pos:position pos:line="63" pos:column="28"/></name><argument_list pos:line="63" pos:column="28">(<argument><expr><name pos:line="63" pos:column="29">path<pos:position pos:line="63" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="35">branch<pos:position pos:line="63" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="43">&amp;<pos:position pos:line="63" pos:column="48"/></operator><name pos:line="63" pos:column="44">opts<pos:position pos:line="63" pos:column="48"/></name></expr></argument>)<pos:position pos:line="63" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="50"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

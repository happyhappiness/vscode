<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3006_git-2.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sequencer_continue<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">replay_opts<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">opts<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">todo_list<pos:position pos:line="3" pos:column="25"/></name></name></type> <name pos:line="3" pos:column="26">todo_list<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><name pos:line="3" pos:column="38">TODO_LIST_INIT<pos:position pos:line="3" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">res<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">read_and_refresh_cache<pos:position pos:line="6" pos:column="35"/></name><argument_list pos:line="6" pos:column="35">(<argument><expr><name pos:line="6" pos:column="36">opts<pos:position pos:line="6" pos:column="40"/></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="42"/></condition><then pos:line="6" pos:column="42">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">-<pos:position pos:line="7" pos:column="25"/></operator><literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal></expr>;<pos:position pos:line="7" pos:column="27"/></return></block></then></if>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">is_rebase_i<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">opts<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31"> <block pos:line="9" pos:column="32">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><call><name pos:line="10" pos:column="21">commit_staged_changes<pos:position pos:line="10" pos:column="42"/></name><argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">opts<pos:position pos:line="10" pos:column="47"/></name></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="49"/></condition><then pos:line="10" pos:column="49">
			<block type="pseudo"><return pos:line="11" pos:column="25">return <expr><operator pos:line="11" pos:column="32">-<pos:position pos:line="11" pos:column="33"/></operator><literal type="number" pos:line="11" pos:column="33">1<pos:position pos:line="11" pos:column="34"/></literal></expr>;<pos:position pos:line="11" pos:column="35"/></return></block></then></if>
	}<pos:position pos:line="12" pos:column="10"/></block></then> <elseif pos:line="12" pos:column="11">else <if pos:line="12" pos:column="16">if <condition pos:line="12" pos:column="19">(<expr><operator pos:line="12" pos:column="20">!<pos:position pos:line="12" pos:column="21"/></operator><call><name pos:line="12" pos:column="21">file_exists<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><call><name pos:line="12" pos:column="33">get_todo_path<pos:position pos:line="12" pos:column="46"/></name><argument_list pos:line="12" pos:column="46">(<argument><expr><name pos:line="12" pos:column="47">opts<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="54"/></condition><then pos:line="12" pos:column="54">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><call><name pos:line="13" pos:column="24">continue_single_pick<pos:position pos:line="13" pos:column="44"/></name><argument_list pos:line="13" pos:column="44">()<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="47"/></return></block></then></if></elseif></if>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">read_populate_opts<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name pos:line="14" pos:column="32">opts<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="38"/></condition><then pos:line="14" pos:column="38">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">-<pos:position pos:line="15" pos:column="25"/></operator><literal type="number" pos:line="15" pos:column="25">1<pos:position pos:line="15" pos:column="26"/></literal></expr>;<pos:position pos:line="15" pos:column="27"/></return></block></then></if>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">res<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <call><name pos:line="16" pos:column="20">read_populate_todo<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><operator pos:line="16" pos:column="39">&amp;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="40">todo_list<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="51">opts<pos:position pos:line="16" pos:column="55"/></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call><operator pos:line="16" pos:column="56">)<pos:position pos:line="16" pos:column="57"/></operator></expr>)<pos:position pos:line="16" pos:column="58"/></condition><then pos:line="16" pos:column="58">
		<block type="pseudo"><goto pos:line="17" pos:column="17">goto <name pos:line="17" pos:column="22">release_todo_list<pos:position pos:line="17" pos:column="39"/></name>;<pos:position pos:line="17" pos:column="40"/></goto></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">is_rebase_i<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">opts<pos:position pos:line="19" pos:column="30"/></name></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="32"/></condition><then pos:line="19" pos:column="32"> <block pos:line="19" pos:column="33">{
		<comment type="block" pos:line="20" pos:column="17">/* Verify that the conflict has been resolved */</comment>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><call><name pos:line="21" pos:column="21">file_exists<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><call><name pos:line="21" pos:column="33">git_path_cherry_pick_head<pos:position pos:line="21" pos:column="58"/></name><argument_list pos:line="21" pos:column="58">()<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call> <operator pos:line="21" pos:column="62">||<pos:position pos:line="21" pos:column="64"/></operator>
		    <call><name pos:line="22" pos:column="21">file_exists<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><call><name pos:line="22" pos:column="33">git_path_revert_head<pos:position pos:line="22" pos:column="53"/></name><argument_list pos:line="22" pos:column="53">()<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="57"/></condition><then pos:line="22" pos:column="57"> <block pos:line="22" pos:column="58">{
			<expr_stmt><expr><name pos:line="23" pos:column="25">res<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <call><name pos:line="23" pos:column="31">continue_single_pick<pos:position pos:line="23" pos:column="51"/></name><argument_list pos:line="23" pos:column="51">()<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><name pos:line="24" pos:column="29">res<pos:position pos:line="24" pos:column="32"/></name></expr>)<pos:position pos:line="24" pos:column="33"/></condition><then pos:line="24" pos:column="33">
				<block type="pseudo"><goto pos:line="25" pos:column="33">goto <name pos:line="25" pos:column="38">release_todo_list<pos:position pos:line="25" pos:column="55"/></name>;<pos:position pos:line="25" pos:column="56"/></goto></block></then></if>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><call><name pos:line="27" pos:column="21">index_differs_from<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><literal type="string" pos:line="27" pos:column="40">"HEAD"<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="48">0<pos:position pos:line="27" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="51">0<pos:position pos:line="27" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="54"/></condition><then pos:line="27" pos:column="54"> <block pos:line="27" pos:column="55">{
			<expr_stmt><expr><name pos:line="28" pos:column="25">res<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <call><name pos:line="28" pos:column="31">error_dirty_index<pos:position pos:line="28" pos:column="48"/></name><argument_list pos:line="28" pos:column="48">(<argument><expr><name pos:line="28" pos:column="49">opts<pos:position pos:line="28" pos:column="53"/></name></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt>
			<goto pos:line="29" pos:column="25">goto <name pos:line="29" pos:column="30">release_todo_list<pos:position pos:line="29" pos:column="47"/></name>;<pos:position pos:line="29" pos:column="48"/></goto>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">todo_list<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">.<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="27">current<pos:position pos:line="31" pos:column="34"/></name></name><operator pos:line="31" pos:column="34">++<pos:position pos:line="31" pos:column="36"/></operator></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></then> <elseif pos:line="32" pos:column="11">else <if pos:line="32" pos:column="16">if <condition pos:line="32" pos:column="19">(<expr><call><name pos:line="32" pos:column="20">file_exists<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><call><name pos:line="32" pos:column="32">rebase_path_stopped_sha<pos:position pos:line="32" pos:column="55"/></name><argument_list pos:line="32" pos:column="55">()<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="59"/></condition><then pos:line="32" pos:column="59"> <block pos:line="32" pos:column="60">{
		<decl_stmt><decl><type><name><name pos:line="33" pos:column="17">struct<pos:position pos:line="33" pos:column="23"/></name> <name pos:line="33" pos:column="24">strbuf<pos:position pos:line="33" pos:column="30"/></name></name></type> <name pos:line="33" pos:column="31">buf<pos:position pos:line="33" pos:column="34"/></name> <init pos:line="33" pos:column="35">= <expr><name pos:line="33" pos:column="37">STRBUF_INIT<pos:position pos:line="33" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="34" pos:column="17">struct<pos:position pos:line="34" pos:column="23"/></name> <name pos:line="34" pos:column="24">object_id<pos:position pos:line="34" pos:column="33"/></name></name></type> <name pos:line="34" pos:column="34">oid<pos:position pos:line="34" pos:column="37"/></name></decl>;<pos:position pos:line="34" pos:column="38"/></decl_stmt>

		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><call><name pos:line="36" pos:column="21">read_oneliner<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><operator pos:line="36" pos:column="35">&amp;<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="36">buf<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="41">rebase_path_stopped_sha<pos:position pos:line="36" pos:column="64"/></name><argument_list pos:line="36" pos:column="64">()<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="68">1<pos:position pos:line="36" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="70"/></argument_list></call> <operator pos:line="36" pos:column="71">&amp;&amp;<pos:position pos:line="36" pos:column="81"/></operator>
		    <operator pos:line="37" pos:column="21">!<pos:position pos:line="37" pos:column="22"/></operator><call><name pos:line="37" pos:column="22">get_sha1_committish<pos:position pos:line="37" pos:column="41"/></name><argument_list pos:line="37" pos:column="41">(<argument><expr><name><name pos:line="37" pos:column="42">buf<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">.<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="46">buf<pos:position pos:line="37" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="51">oid<pos:position pos:line="37" pos:column="54"/></name><operator pos:line="37" pos:column="54">.<pos:position pos:line="37" pos:column="55"/></operator><name pos:line="37" pos:column="55">hash<pos:position pos:line="37" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="61"/></condition><then pos:line="37" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="25">record_in_rewritten<pos:position pos:line="38" pos:column="44"/></name><argument_list pos:line="38" pos:column="44">(<argument><expr><operator pos:line="38" pos:column="45">&amp;<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="46">oid<pos:position pos:line="38" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="51">peek_command<pos:position pos:line="38" pos:column="63"/></name><argument_list pos:line="38" pos:column="63">(<argument><expr><operator pos:line="38" pos:column="64">&amp;<pos:position pos:line="38" pos:column="69"/></operator><name pos:line="38" pos:column="65">todo_list<pos:position pos:line="38" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="76">0<pos:position pos:line="38" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="80"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">strbuf_release<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><operator pos:line="39" pos:column="32">&amp;<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="33">buf<pos:position pos:line="39" pos:column="36"/></name></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><name pos:line="42" pos:column="9">res<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <call><name pos:line="42" pos:column="15">pick_commits<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><operator pos:line="42" pos:column="28">&amp;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="29">todo_list<pos:position pos:line="42" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="40">opts<pos:position pos:line="42" pos:column="44"/></name></expr></argument>)<pos:position pos:line="42" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>
<label><name pos:line="43" pos:column="1">release_todo_list<pos:position pos:line="43" pos:column="18"/></name>:<pos:position pos:line="43" pos:column="19"/></label>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">todo_list_release<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><operator pos:line="44" pos:column="27">&amp;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="28">todo_list<pos:position pos:line="44" pos:column="37"/></name></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt>
	<return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">res<pos:position pos:line="45" pos:column="19"/></name></expr>;<pos:position pos:line="45" pos:column="20"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

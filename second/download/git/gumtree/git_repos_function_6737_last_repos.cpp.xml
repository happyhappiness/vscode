<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6737_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mingw_getenv<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">name<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">value<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">pos<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">bsearchenv<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">(<argument><expr><name pos:line="4" pos:column="30">environ<pos:position pos:line="4" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="39">name<pos:position pos:line="4" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="45">environ_size<pos:position pos:line="4" pos:column="57"/></name> <operator pos:line="4" pos:column="58">-<pos:position pos:line="4" pos:column="59"/></operator> <literal type="number" pos:line="4" pos:column="60">1<pos:position pos:line="4" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="63"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">pos<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">&lt;<pos:position pos:line="5" pos:column="21"/></operator> <literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr>;<pos:position pos:line="6" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="7" pos:column="9">value<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <call><name pos:line="7" pos:column="17">strchr<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name><name pos:line="7" pos:column="24">environ<pos:position pos:line="7" pos:column="31"/></name><index pos:line="7" pos:column="31">[<expr><name pos:line="7" pos:column="32">pos<pos:position pos:line="7" pos:column="35"/></name></expr>]<pos:position pos:line="7" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="38">'='<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>
	<return pos:line="8" pos:column="9">return <expr><ternary><condition><expr><name pos:line="8" pos:column="16">value<pos:position pos:line="8" pos:column="21"/></name></expr> ?<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23"> <expr><operator pos:line="8" pos:column="24">&amp;<pos:position pos:line="8" pos:column="29"/></operator><name><name pos:line="8" pos:column="25">value<pos:position pos:line="8" pos:column="30"/></name><index pos:line="8" pos:column="30">[<expr><literal type="number" pos:line="8" pos:column="31">1<pos:position pos:line="8" pos:column="32"/></literal></expr>]<pos:position pos:line="8" pos:column="33"/></index></name></expr> <pos:position pos:line="8" pos:column="34"/></then><else pos:line="8" pos:column="34">: <expr><name pos:line="8" pos:column="36">NULL<pos:position pos:line="8" pos:column="40"/></name></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="41"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

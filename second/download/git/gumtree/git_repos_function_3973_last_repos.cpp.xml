<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3973_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">process_ls_object<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">remote_ls_ctx<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">ls<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">int<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">parent<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><operator pos:line="3" pos:column="32">(<pos:position pos:line="3" pos:column="33"/></operator><name pos:line="3" pos:column="33">unsigned<pos:position pos:line="3" pos:column="41"/></name> <name pos:line="3" pos:column="42">int<pos:position pos:line="3" pos:column="45"/></name> <operator pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></operator><operator pos:line="3" pos:column="47">)<pos:position pos:line="3" pos:column="48"/></operator><name><name pos:line="3" pos:column="48">ls<pos:position pos:line="3" pos:column="50"/></name><operator pos:line="3" pos:column="50">-&gt;<pos:position pos:line="3" pos:column="55"/></operator><name pos:line="3" pos:column="52">userData<pos:position pos:line="3" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">path<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">ls<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">-&gt;<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="32">dentry_name<pos:position pos:line="4" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object_id<pos:position pos:line="5" pos:column="25"/></name></name></type> <name pos:line="5" pos:column="26">oid<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name pos:line="7" pos:column="14">strcmp<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name><name pos:line="7" pos:column="21">ls<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">path<pos:position pos:line="7" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="31">ls<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">-&gt;<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="35">dentry_name<pos:position pos:line="7" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call> <operator pos:line="7" pos:column="48">&amp;&amp;<pos:position pos:line="7" pos:column="58"/></operator> <operator pos:line="7" pos:column="51">(<pos:position pos:line="7" pos:column="52"/></operator><name><name pos:line="7" pos:column="52">ls<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">-&gt;<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="56">flags<pos:position pos:line="7" pos:column="61"/></name></name> <operator pos:line="7" pos:column="62">&amp;<pos:position pos:line="7" pos:column="67"/></operator> <name pos:line="7" pos:column="64">IS_DIR<pos:position pos:line="7" pos:column="70"/></name><operator pos:line="7" pos:column="70">)<pos:position pos:line="7" pos:column="71"/></operator></expr>)<pos:position pos:line="7" pos:column="72"/></condition><then pos:line="7" pos:column="72"> <block pos:line="7" pos:column="73">{
		<expr_stmt><expr><name><name pos:line="8" pos:column="17">remote_dir_exists<pos:position pos:line="8" pos:column="34"/></name><index pos:line="8" pos:column="34">[<expr><operator pos:line="8" pos:column="35">*<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">parent<pos:position pos:line="8" pos:column="42"/></name></expr>]<pos:position pos:line="8" pos:column="43"/></index></name> <operator pos:line="8" pos:column="44">=<pos:position pos:line="8" pos:column="45"/></operator> <literal type="number" pos:line="8" pos:column="46">1<pos:position pos:line="8" pos:column="47"/></literal></expr>;<pos:position pos:line="8" pos:column="48"/></expr_stmt>
		<return pos:line="9" pos:column="17">return;<pos:position pos:line="9" pos:column="24"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><call><name pos:line="12" pos:column="14">skip_prefix<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">path<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="32">"objects/"<pos:position pos:line="12" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="44">&amp;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="45">path<pos:position pos:line="12" pos:column="49"/></name></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call> <operator pos:line="12" pos:column="51">||<pos:position pos:line="12" pos:column="53"/></operator>
	    <call><name pos:line="13" pos:column="13">get_oid_hex_from_objpath<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">path<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="44">&amp;<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="45">oid<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="50"/></condition><then pos:line="13" pos:column="50">
		<block type="pseudo"><return pos:line="14" pos:column="17">return;<pos:position pos:line="14" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">one_remote_object<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><operator pos:line="16" pos:column="27">&amp;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="28">oid<pos:position pos:line="16" pos:column="31"/></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

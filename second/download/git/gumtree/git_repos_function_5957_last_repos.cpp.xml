<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5957_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name><name pos:line="1" pos:column="15">struct<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">pack_list<pos:position pos:line="1" pos:column="31"/></name></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type> <name pos:line="1" pos:column="34">pack_list_insert<pos:position pos:line="1" pos:column="50"/></name><parameter_list pos:line="1" pos:column="50">(<parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">pack_list<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier><modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">pl<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
					   <parameter><decl><type><name><name pos:line="2" pos:column="44">struct<pos:position pos:line="2" pos:column="50"/></name> <name pos:line="2" pos:column="51">pack_list<pos:position pos:line="2" pos:column="60"/></name></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">entry<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">pack_list<pos:position pos:line="4" pos:column="25"/></name></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">p<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><call><name pos:line="4" pos:column="31">xmalloc<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><sizeof pos:line="4" pos:column="39">sizeof<argument_list pos:line="4" pos:column="45">(<argument><expr pos:line="4" pos:column="46">struct <name pos:line="4" pos:column="53">pack_list<pos:position pos:line="4" pos:column="62"/></name></expr></argument>)<pos:position pos:line="4" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="65"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">memcpy<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">p<pos:position pos:line="5" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="19">entry<pos:position pos:line="5" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="26">sizeof<argument_list pos:line="5" pos:column="32">(<argument><expr pos:line="5" pos:column="33">struct <name pos:line="5" pos:column="40">pack_list<pos:position pos:line="5" pos:column="49"/></name></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="6" pos:column="9">p<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">next<pos:position pos:line="6" pos:column="16"/></name></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <operator pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">pl<pos:position pos:line="6" pos:column="22"/></name></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">pl<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">p<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>
	<return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">p<pos:position pos:line="8" pos:column="17"/></name></expr>;<pos:position pos:line="8" pos:column="18"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

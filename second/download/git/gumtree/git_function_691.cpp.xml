<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_691.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">decode_tree_entry<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">tree_desc<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">desc<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">buf<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="72">unsigned<pos:position pos:line="1" pos:column="80"/></name> <name pos:line="1" pos:column="81">long<pos:position pos:line="1" pos:column="85"/></name></type> <name pos:line="1" pos:column="86">size<pos:position pos:line="1" pos:column="90"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="91"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">path<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">mode<pos:position pos:line="4" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="28">len<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">size<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">&lt;<pos:position pos:line="6" pos:column="22"/></operator> <literal type="number" pos:line="6" pos:column="20">24<pos:position pos:line="6" pos:column="22"/></literal> <operator pos:line="6" pos:column="23">||<pos:position pos:line="6" pos:column="25"/></operator> <name><name pos:line="6" pos:column="26">buf<pos:position pos:line="6" pos:column="29"/></name><index pos:line="6" pos:column="29">[<expr><name pos:line="6" pos:column="30">size<pos:position pos:line="6" pos:column="34"/></name> <operator pos:line="6" pos:column="35">-<pos:position pos:line="6" pos:column="36"/></operator> <literal type="number" pos:line="6" pos:column="37">21<pos:position pos:line="6" pos:column="39"/></literal></expr>]<pos:position pos:line="6" pos:column="40"/></index></name></expr>)<pos:position pos:line="6" pos:column="41"/></condition><then pos:line="6" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">die<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><literal type="string" pos:line="7" pos:column="21">"corrupt tree file"<pos:position pos:line="7" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="9" pos:column="9">path<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <call><name pos:line="9" pos:column="16">get_mode<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">buf<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="30">&amp;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="31">mode<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">path<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">||<pos:position pos:line="10" pos:column="21"/></operator> <operator pos:line="10" pos:column="22">!<pos:position pos:line="10" pos:column="23"/></operator><operator pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">path<pos:position pos:line="10" pos:column="28"/></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">die<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><literal type="string" pos:line="11" pos:column="21">"corrupt tree file"<pos:position pos:line="11" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="12" pos:column="9">len<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <call><name pos:line="12" pos:column="15">strlen<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">path<pos:position pos:line="12" pos:column="26"/></name></expr></argument>)<pos:position pos:line="12" pos:column="27"/></argument_list></call> <operator pos:line="12" pos:column="28">+<pos:position pos:line="12" pos:column="29"/></operator> <literal type="number" pos:line="12" pos:column="30">1<pos:position pos:line="12" pos:column="31"/></literal></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>

	<comment type="block" pos:line="14" pos:column="9">/* Initialize the descriptor entry */</comment>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">desc<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">entry<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">.<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">path<pos:position pos:line="15" pos:column="25"/></name></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">path<pos:position pos:line="15" pos:column="32"/></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">desc<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">entry<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">mode<pos:position pos:line="16" pos:column="25"/></name></name> <operator pos:line="16" pos:column="26">=<pos:position pos:line="16" pos:column="27"/></operator> <call><name pos:line="16" pos:column="28">canon_mode<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">mode<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">desc<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">entry<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">.<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">oid<pos:position pos:line="17" pos:column="24"/></name></name>  <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <operator pos:line="17" pos:column="28">(<pos:position pos:line="17" pos:column="29"/></operator><specifier pos:line="17" pos:column="29">const<pos:position pos:line="17" pos:column="34"/></specifier> struct <name pos:line="17" pos:column="42">object_id<pos:position pos:line="17" pos:column="51"/></name> <operator pos:line="17" pos:column="52">*<pos:position pos:line="17" pos:column="53"/></operator><operator pos:line="17" pos:column="53">)<pos:position pos:line="17" pos:column="54"/></operator><operator pos:line="17" pos:column="54">(<pos:position pos:line="17" pos:column="55"/></operator><name pos:line="17" pos:column="55">path<pos:position pos:line="17" pos:column="59"/></name> <operator pos:line="17" pos:column="60">+<pos:position pos:line="17" pos:column="61"/></operator> <name pos:line="17" pos:column="62">len<pos:position pos:line="17" pos:column="65"/></name><operator pos:line="17" pos:column="65">)<pos:position pos:line="17" pos:column="66"/></operator></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1119_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_rebase_in_progress<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">wt_status<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">s<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="2" pos:column="33">struct<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">wt_status_state<pos:position pos:line="2" pos:column="55"/></name></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">state<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="3" pos:column="33">const<pos:position pos:line="3" pos:column="38"/></specifier> <name pos:line="3" pos:column="39">char<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">color<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="51"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">stat<pos:position pos:line="5" pos:column="20"/></name></name></type> <name pos:line="5" pos:column="21">st<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">show_rebase_information<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">(<argument><expr><name pos:line="7" pos:column="33">s<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="36">state<pos:position pos:line="7" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="43">color<pos:position pos:line="7" pos:column="48"/></name></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="50"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">has_unmerged<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">s<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29"> <block pos:line="8" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">print_rebase_state<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">s<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="39">state<pos:position pos:line="9" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">color<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name><name pos:line="10" pos:column="21">s<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">-&gt;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="24">hints<pos:position pos:line="10" pos:column="29"/></name></name></expr>)<pos:position pos:line="10" pos:column="30"/></condition><then pos:line="10" pos:column="30"> <block pos:line="10" pos:column="31">{
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">status_printf_ln<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">s<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">color<pos:position pos:line="11" pos:column="50"/></name></expr></argument>,
				<argument><expr><call><name pos:line="12" pos:column="33">_<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><literal type="string" pos:line="12" pos:column="35">"  (fix conflicts and then run \"git rebase --continue\")"<pos:position pos:line="12" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="96"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">status_printf_ln<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><name pos:line="13" pos:column="42">s<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">color<pos:position pos:line="13" pos:column="50"/></name></expr></argument>,
				<argument><expr><call><name pos:line="14" pos:column="33">_<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><literal type="string" pos:line="14" pos:column="35">"  (use \"git rebase --skip\" to skip this patch)"<pos:position pos:line="14" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="88"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">status_printf_ln<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">s<pos:position pos:line="15" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="45">color<pos:position pos:line="15" pos:column="50"/></name></expr></argument>,
				<argument><expr><call><name pos:line="16" pos:column="33">_<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><literal type="string" pos:line="16" pos:column="35">"  (use \"git rebase --abort\" to check out the original branch)"<pos:position pos:line="16" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="101"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="103"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></then> <elseif pos:line="18" pos:column="11">else <if pos:line="18" pos:column="16">if <condition pos:line="18" pos:column="19">(<expr><name><name pos:line="18" pos:column="20">state<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">rebase_in_progress<pos:position pos:line="18" pos:column="45"/></name></name> <operator pos:line="18" pos:column="46">||<pos:position pos:line="18" pos:column="48"/></operator> <operator pos:line="18" pos:column="49">!<pos:position pos:line="18" pos:column="50"/></operator><call><name pos:line="18" pos:column="50">stat<pos:position pos:line="18" pos:column="54"/></name><argument_list pos:line="18" pos:column="54">(<argument><expr><call><name pos:line="18" pos:column="55">git_path_merge_msg<pos:position pos:line="18" pos:column="73"/></name><argument_list pos:line="18" pos:column="73">()<pos:position pos:line="18" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="18" pos:column="77">&amp;<pos:position pos:line="18" pos:column="82"/></operator><name pos:line="18" pos:column="78">st<pos:position pos:line="18" pos:column="80"/></name></expr></argument>)<pos:position pos:line="18" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="82"/></condition><then pos:line="18" pos:column="82"> <block pos:line="18" pos:column="83">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">print_rebase_state<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">s<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="39">state<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">color<pos:position pos:line="19" pos:column="51"/></name></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name><name pos:line="20" pos:column="21">s<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">-&gt;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="24">hints<pos:position pos:line="20" pos:column="29"/></name></name></expr>)<pos:position pos:line="20" pos:column="30"/></condition><then pos:line="20" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">status_printf_ln<pos:position pos:line="21" pos:column="41"/></name><argument_list pos:line="21" pos:column="41">(<argument><expr><name pos:line="21" pos:column="42">s<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="45">color<pos:position pos:line="21" pos:column="50"/></name></expr></argument>,
				<argument><expr><call><name pos:line="22" pos:column="33">_<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><literal type="string" pos:line="22" pos:column="35">"  (all conflicts fixed: run \"git rebase --continue\")"<pos:position pos:line="22" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="94"/></expr_stmt></block></then></if>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if></elseif> <elseif pos:line="23" pos:column="11">else <if pos:line="23" pos:column="16">if <condition pos:line="23" pos:column="19">(<expr><call><name pos:line="23" pos:column="20">split_commit_in_progress<pos:position pos:line="23" pos:column="44"/></name><argument_list pos:line="23" pos:column="44">(<argument><expr><name pos:line="23" pos:column="45">s<pos:position pos:line="23" pos:column="46"/></name></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="48"/></condition><then pos:line="23" pos:column="48"> <block pos:line="23" pos:column="49">{
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name><name pos:line="24" pos:column="21">state<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">branch<pos:position pos:line="24" pos:column="34"/></name></name></expr>)<pos:position pos:line="24" pos:column="35"/></condition><then pos:line="24" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">status_printf_ln<pos:position pos:line="25" pos:column="41"/></name><argument_list pos:line="25" pos:column="41">(<argument><expr><name pos:line="25" pos:column="42">s<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="45">color<pos:position pos:line="25" pos:column="50"/></name></expr></argument>,
					 <argument><expr><call><name pos:line="26" pos:column="42">_<pos:position pos:line="26" pos:column="43"/></name><argument_list pos:line="26" pos:column="43">(<argument><expr><literal type="string" pos:line="26" pos:column="44">"You are currently splitting a commit while rebasing branch '%s' on '%s'."<pos:position pos:line="26" pos:column="118"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="119"/></argument_list></call></expr></argument>,
					 <argument><expr><name><name pos:line="27" pos:column="42">state<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">-&gt;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="49">branch<pos:position pos:line="27" pos:column="55"/></name></name></expr></argument>,
					 <argument><expr><name><name pos:line="28" pos:column="42">state<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">-&gt;<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="49">onto<pos:position pos:line="28" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt></block></then>
		<else pos:line="29" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="25">status_printf_ln<pos:position pos:line="30" pos:column="41"/></name><argument_list pos:line="30" pos:column="41">(<argument><expr><name pos:line="30" pos:column="42">s<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">color<pos:position pos:line="30" pos:column="50"/></name></expr></argument>,
					 <argument><expr><call><name pos:line="31" pos:column="42">_<pos:position pos:line="31" pos:column="43"/></name><argument_list pos:line="31" pos:column="43">(<argument><expr><literal type="string" pos:line="31" pos:column="44">"You are currently splitting a commit during a rebase."<pos:position pos:line="31" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="102"/></expr_stmt></block></else></if>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name><name pos:line="32" pos:column="21">s<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">hints<pos:position pos:line="32" pos:column="29"/></name></name></expr>)<pos:position pos:line="32" pos:column="30"/></condition><then pos:line="32" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="25">status_printf_ln<pos:position pos:line="33" pos:column="41"/></name><argument_list pos:line="33" pos:column="41">(<argument><expr><name pos:line="33" pos:column="42">s<pos:position pos:line="33" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="45">color<pos:position pos:line="33" pos:column="50"/></name></expr></argument>,
				<argument><expr><call><name pos:line="34" pos:column="33">_<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><literal type="string" pos:line="34" pos:column="35">"  (Once your working directory is clean, run \"git rebase --continue\")"<pos:position pos:line="34" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="111"/></expr_stmt></block></then></if>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if></elseif> <else pos:line="35" pos:column="11">else <block pos:line="35" pos:column="16">{
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name><name pos:line="36" pos:column="21">state<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">branch<pos:position pos:line="36" pos:column="34"/></name></name></expr>)<pos:position pos:line="36" pos:column="35"/></condition><then pos:line="36" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">status_printf_ln<pos:position pos:line="37" pos:column="41"/></name><argument_list pos:line="37" pos:column="41">(<argument><expr><name pos:line="37" pos:column="42">s<pos:position pos:line="37" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="45">color<pos:position pos:line="37" pos:column="50"/></name></expr></argument>,
					 <argument><expr><call><name pos:line="38" pos:column="42">_<pos:position pos:line="38" pos:column="43"/></name><argument_list pos:line="38" pos:column="43">(<argument><expr><literal type="string" pos:line="38" pos:column="44">"You are currently editing a commit while rebasing branch '%s' on '%s'."<pos:position pos:line="38" pos:column="116"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="117"/></argument_list></call></expr></argument>,
					 <argument><expr><name><name pos:line="39" pos:column="42">state<pos:position pos:line="39" pos:column="47"/></name><operator pos:line="39" pos:column="47">-&gt;<pos:position pos:line="39" pos:column="52"/></operator><name pos:line="39" pos:column="49">branch<pos:position pos:line="39" pos:column="55"/></name></name></expr></argument>,
					 <argument><expr><name><name pos:line="40" pos:column="42">state<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">-&gt;<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="49">onto<pos:position pos:line="40" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="55"/></expr_stmt></block></then>
		<else pos:line="41" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="25">status_printf_ln<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">s<pos:position pos:line="42" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="45">color<pos:position pos:line="42" pos:column="50"/></name></expr></argument>,
					 <argument><expr><call><name pos:line="43" pos:column="42">_<pos:position pos:line="43" pos:column="43"/></name><argument_list pos:line="43" pos:column="43">(<argument><expr><literal type="string" pos:line="43" pos:column="44">"You are currently editing a commit during a rebase."<pos:position pos:line="43" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="100"/></expr_stmt></block></else></if>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name><name pos:line="44" pos:column="21">s<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">-&gt;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="24">hints<pos:position pos:line="44" pos:column="29"/></name></name> <operator pos:line="44" pos:column="30">&amp;&amp;<pos:position pos:line="44" pos:column="40"/></operator> <operator pos:line="44" pos:column="33">!<pos:position pos:line="44" pos:column="34"/></operator><name><name pos:line="44" pos:column="34">s<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">-&gt;<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="37">amend<pos:position pos:line="44" pos:column="42"/></name></name></expr>)<pos:position pos:line="44" pos:column="43"/></condition><then pos:line="44" pos:column="43"> <block pos:line="44" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="45" pos:column="25">status_printf_ln<pos:position pos:line="45" pos:column="41"/></name><argument_list pos:line="45" pos:column="41">(<argument><expr><name pos:line="45" pos:column="42">s<pos:position pos:line="45" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="45">color<pos:position pos:line="45" pos:column="50"/></name></expr></argument>,
				<argument><expr><call><name pos:line="46" pos:column="33">_<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">(<argument><expr><literal type="string" pos:line="46" pos:column="35">"  (use \"git commit --amend\" to amend the current commit)"<pos:position pos:line="46" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="98"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="47" pos:column="25">status_printf_ln<pos:position pos:line="47" pos:column="41"/></name><argument_list pos:line="47" pos:column="41">(<argument><expr><name pos:line="47" pos:column="42">s<pos:position pos:line="47" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="45">color<pos:position pos:line="47" pos:column="50"/></name></expr></argument>,
				<argument><expr><call><name pos:line="48" pos:column="33">_<pos:position pos:line="48" pos:column="34"/></name><argument_list pos:line="48" pos:column="34">(<argument><expr><literal type="string" pos:line="48" pos:column="35">"  (use \"git rebase --continue\" once you are satisfied with your changes)"<pos:position pos:line="48" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="112"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="114"/></expr_stmt>
		}<pos:position pos:line="49" pos:column="18"/></block></then></if>
	}<pos:position pos:line="50" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">wt_longstatus_print_trailer<pos:position pos:line="51" pos:column="36"/></name><argument_list pos:line="51" pos:column="36">(<argument><expr><name pos:line="51" pos:column="37">s<pos:position pos:line="51" pos:column="38"/></name></expr></argument>)<pos:position pos:line="51" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="40"/></expr_stmt>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

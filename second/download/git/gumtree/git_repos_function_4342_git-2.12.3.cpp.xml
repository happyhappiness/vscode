<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4342_git-2.12.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">ref<pos:position pos:line="1" pos:column="18"/></name></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">do_fetch_pack<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">fetch_pack_args<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">args<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name><name pos:line="2" pos:column="38">fd<pos:position pos:line="2" pos:column="40"/></name><index pos:line="2" pos:column="40">[<expr><literal type="number" pos:line="2" pos:column="41">2<pos:position pos:line="2" pos:column="42"/></literal></expr>]<pos:position pos:line="2" pos:column="43"/></index></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="3" pos:column="34">const<pos:position pos:line="3" pos:column="39"/></specifier> <name><name pos:line="3" pos:column="40">struct<pos:position pos:line="3" pos:column="46"/></name> <name pos:line="3" pos:column="47">ref<pos:position pos:line="3" pos:column="50"/></name></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">orig_ref<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>,
				 <parameter><decl><type><name><name pos:line="4" pos:column="34">struct<pos:position pos:line="4" pos:column="40"/></name> <name pos:line="4" pos:column="41">ref<pos:position pos:line="4" pos:column="44"/></name></name> <modifier pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></modifier><modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier></type><name pos:line="4" pos:column="47">sought<pos:position pos:line="4" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="55">int<pos:position pos:line="4" pos:column="58"/></name></type> <name pos:line="4" pos:column="59">nr_sought<pos:position pos:line="4" pos:column="68"/></name></decl></parameter>,
				 <parameter><decl><type><name><name pos:line="5" pos:column="34">struct<pos:position pos:line="5" pos:column="40"/></name> <name pos:line="5" pos:column="41">shallow_info<pos:position pos:line="5" pos:column="53"/></name></name> <modifier pos:line="5" pos:column="54">*<pos:position pos:line="5" pos:column="55"/></modifier></type><name pos:line="5" pos:column="55">si<pos:position pos:line="5" pos:column="57"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="6" pos:column="34">char<pos:position pos:line="6" pos:column="38"/></name> <modifier pos:line="6" pos:column="39">*<pos:position pos:line="6" pos:column="40"/></modifier><modifier pos:line="6" pos:column="40">*<pos:position pos:line="6" pos:column="41"/></modifier></type><name pos:line="6" pos:column="41">pack_lockfile<pos:position pos:line="6" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="55"/></parameter_list>
<block pos:line="7" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">ref<pos:position pos:line="8" pos:column="19"/></name></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">ref<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><call><name pos:line="8" pos:column="27">copy_ref_list<pos:position pos:line="8" pos:column="40"/></name><argument_list pos:line="8" pos:column="40">(<argument><expr><name pos:line="8" pos:column="41">orig_ref<pos:position pos:line="8" pos:column="49"/></name></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">char<pos:position pos:line="9" pos:column="22"/></name></type> <name><name pos:line="9" pos:column="23">sha1<pos:position pos:line="9" pos:column="27"/></name><index pos:line="9" pos:column="27">[<expr><literal type="number" pos:line="9" pos:column="28">20<pos:position pos:line="9" pos:column="30"/></literal></expr>]<pos:position pos:line="9" pos:column="31"/></index></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">agent_feature<pos:position pos:line="10" pos:column="34"/></name></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">agent_len<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">sort_ref_list<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><operator pos:line="13" pos:column="23">&amp;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="24">ref<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">ref_compare_name<pos:position pos:line="13" pos:column="45"/></name></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">QSORT<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">sought<pos:position pos:line="14" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="23">nr_sought<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">cmp_ref_by_name<pos:position pos:line="14" pos:column="49"/></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><name><name pos:line="16" pos:column="14">args<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">depth<pos:position pos:line="16" pos:column="25"/></name></name> <operator pos:line="16" pos:column="26">&gt;<pos:position pos:line="16" pos:column="30"/></operator> <literal type="number" pos:line="16" pos:column="28">0<pos:position pos:line="16" pos:column="29"/></literal> <operator pos:line="16" pos:column="30">||<pos:position pos:line="16" pos:column="32"/></operator> <call><name pos:line="16" pos:column="33">is_repository_shallow<pos:position pos:line="16" pos:column="54"/></name><argument_list pos:line="16" pos:column="54">()<pos:position pos:line="16" pos:column="56"/></argument_list></call><operator pos:line="16" pos:column="56">)<pos:position pos:line="16" pos:column="57"/></operator> <operator pos:line="16" pos:column="58">&amp;&amp;<pos:position pos:line="16" pos:column="68"/></operator> <operator pos:line="16" pos:column="61">!<pos:position pos:line="16" pos:column="62"/></operator><call><name pos:line="16" pos:column="62">server_supports<pos:position pos:line="16" pos:column="77"/></name><argument_list pos:line="16" pos:column="77">(<argument><expr><literal type="string" pos:line="16" pos:column="78">"shallow"<pos:position pos:line="16" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="88"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="89"/></condition><then pos:line="16" pos:column="89">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">die<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><call><name pos:line="17" pos:column="21">_<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><literal type="string" pos:line="17" pos:column="23">"Server does not support shallow clients"<pos:position pos:line="17" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt></block></then></if>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">args<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">depth<pos:position pos:line="18" pos:column="24"/></name></name> <operator pos:line="18" pos:column="25">&gt;<pos:position pos:line="18" pos:column="29"/></operator> <literal type="number" pos:line="18" pos:column="27">0<pos:position pos:line="18" pos:column="28"/></literal> <operator pos:line="18" pos:column="29">||<pos:position pos:line="18" pos:column="31"/></operator> <name><name pos:line="18" pos:column="32">args<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">-&gt;<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="38">deepen_since<pos:position pos:line="18" pos:column="50"/></name></name> <operator pos:line="18" pos:column="51">||<pos:position pos:line="18" pos:column="53"/></operator> <name><name pos:line="18" pos:column="54">args<pos:position pos:line="18" pos:column="58"/></name><operator pos:line="18" pos:column="58">-&gt;<pos:position pos:line="18" pos:column="63"/></operator><name pos:line="18" pos:column="60">deepen_not<pos:position pos:line="18" pos:column="70"/></name></name></expr>)<pos:position pos:line="18" pos:column="71"/></condition><then pos:line="18" pos:column="71">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="17">args<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">deepen<pos:position pos:line="19" pos:column="29"/></name></name> <operator pos:line="19" pos:column="30">=<pos:position pos:line="19" pos:column="31"/></operator> <literal type="number" pos:line="19" pos:column="32">1<pos:position pos:line="19" pos:column="33"/></literal></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt></block></then></if>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">server_supports<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><literal type="string" pos:line="20" pos:column="29">"multi_ack_detailed"<pos:position pos:line="20" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="51"/></condition><then pos:line="20" pos:column="51"> <block pos:line="20" pos:column="52">{
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">print_verbose<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">args<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="37">_<pos:position pos:line="21" pos:column="38"/></name><argument_list pos:line="21" pos:column="38">(<argument><expr><literal type="string" pos:line="21" pos:column="39">"Server supports multi_ack_detailed"<pos:position pos:line="21" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">multi_ack<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <literal type="number" pos:line="22" pos:column="29">2<pos:position pos:line="22" pos:column="30"/></literal></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><call><name pos:line="23" pos:column="21">server_supports<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><literal type="string" pos:line="23" pos:column="37">"no-done"<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="48"/></condition><then pos:line="23" pos:column="48"> <block pos:line="23" pos:column="49">{
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">print_verbose<pos:position pos:line="24" pos:column="38"/></name><argument_list pos:line="24" pos:column="38">(<argument><expr><name pos:line="24" pos:column="39">args<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="45">_<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">(<argument><expr><literal type="string" pos:line="24" pos:column="47">"Server supports no-done"<pos:position pos:line="24" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="75"/></expr_stmt>
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><name><name pos:line="25" pos:column="29">args<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">stateless_rpc<pos:position pos:line="25" pos:column="48"/></name></name></expr>)<pos:position pos:line="25" pos:column="49"/></condition><then pos:line="25" pos:column="49">
				<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="33">no_done<pos:position pos:line="26" pos:column="40"/></name> <operator pos:line="26" pos:column="41">=<pos:position pos:line="26" pos:column="42"/></operator> <literal type="number" pos:line="26" pos:column="43">1<pos:position pos:line="26" pos:column="44"/></literal></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt></block></then></if>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>
	}<pos:position pos:line="28" pos:column="10"/></block></then>
	<elseif pos:line="29" pos:column="9">else <if pos:line="29" pos:column="14">if <condition pos:line="29" pos:column="17">(<expr><call><name pos:line="29" pos:column="18">server_supports<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><literal type="string" pos:line="29" pos:column="34">"multi_ack"<pos:position pos:line="29" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="47"/></condition><then pos:line="29" pos:column="47"> <block pos:line="29" pos:column="48">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">print_verbose<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name pos:line="30" pos:column="31">args<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="37">_<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">(<argument><expr><literal type="string" pos:line="30" pos:column="39">"Server supports multi_ack"<pos:position pos:line="30" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><name pos:line="31" pos:column="17">multi_ack<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">=<pos:position pos:line="31" pos:column="28"/></operator> <literal type="number" pos:line="31" pos:column="29">1<pos:position pos:line="31" pos:column="30"/></literal></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if></elseif></if>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><call><name pos:line="33" pos:column="13">server_supports<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><literal type="string" pos:line="33" pos:column="29">"side-band-64k"<pos:position pos:line="33" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="46"/></condition><then pos:line="33" pos:column="46"> <block pos:line="33" pos:column="47">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">print_verbose<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">args<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="37">_<pos:position pos:line="34" pos:column="38"/></name><argument_list pos:line="34" pos:column="38">(<argument><expr><literal type="string" pos:line="34" pos:column="39">"Server supports side-band-64k"<pos:position pos:line="34" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">use_sideband<pos:position pos:line="35" pos:column="29"/></name> <operator pos:line="35" pos:column="30">=<pos:position pos:line="35" pos:column="31"/></operator> <literal type="number" pos:line="35" pos:column="32">2<pos:position pos:line="35" pos:column="33"/></literal></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then>
	<elseif pos:line="37" pos:column="9">else <if pos:line="37" pos:column="14">if <condition pos:line="37" pos:column="17">(<expr><call><name pos:line="37" pos:column="18">server_supports<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><literal type="string" pos:line="37" pos:column="34">"side-band"<pos:position pos:line="37" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="47"/></condition><then pos:line="37" pos:column="47"> <block pos:line="37" pos:column="48">{
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">print_verbose<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">args<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="37">_<pos:position pos:line="38" pos:column="38"/></name><argument_list pos:line="38" pos:column="38">(<argument><expr><literal type="string" pos:line="38" pos:column="39">"Server supports side-band"<pos:position pos:line="38" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><name pos:line="39" pos:column="17">use_sideband<pos:position pos:line="39" pos:column="29"/></name> <operator pos:line="39" pos:column="30">=<pos:position pos:line="39" pos:column="31"/></operator> <literal type="number" pos:line="39" pos:column="32">1<pos:position pos:line="39" pos:column="33"/></literal></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if></elseif></if>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><call><name pos:line="41" pos:column="13">server_supports<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><literal type="string" pos:line="41" pos:column="29">"allow-tip-sha1-in-want"<pos:position pos:line="41" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="55"/></condition><then pos:line="41" pos:column="55"> <block pos:line="41" pos:column="56">{
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">print_verbose<pos:position pos:line="42" pos:column="30"/></name><argument_list pos:line="42" pos:column="30">(<argument><expr><name pos:line="42" pos:column="31">args<pos:position pos:line="42" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="37">_<pos:position pos:line="42" pos:column="38"/></name><argument_list pos:line="42" pos:column="38">(<argument><expr><literal type="string" pos:line="42" pos:column="39">"Server supports allow-tip-sha1-in-want"<pos:position pos:line="42" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="82"/></expr_stmt>
		<expr_stmt><expr><name pos:line="43" pos:column="17">allow_unadvertised_object_request<pos:position pos:line="43" pos:column="50"/></name> <operator pos:line="43" pos:column="51">|=<pos:position pos:line="43" pos:column="53"/></operator> <name pos:line="43" pos:column="54">ALLOW_TIP_SHA1<pos:position pos:line="43" pos:column="68"/></name></expr>;<pos:position pos:line="43" pos:column="69"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><call><name pos:line="45" pos:column="13">server_supports<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><literal type="string" pos:line="45" pos:column="29">"allow-reachable-sha1-in-want"<pos:position pos:line="45" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="61"/></condition><then pos:line="45" pos:column="61"> <block pos:line="45" pos:column="62">{
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">print_verbose<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><name pos:line="46" pos:column="31">args<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="37">_<pos:position pos:line="46" pos:column="38"/></name><argument_list pos:line="46" pos:column="38">(<argument><expr><literal type="string" pos:line="46" pos:column="39">"Server supports allow-reachable-sha1-in-want"<pos:position pos:line="46" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="88"/></expr_stmt>
		<expr_stmt><expr><name pos:line="47" pos:column="17">allow_unadvertised_object_request<pos:position pos:line="47" pos:column="50"/></name> <operator pos:line="47" pos:column="51">|=<pos:position pos:line="47" pos:column="53"/></operator> <name pos:line="47" pos:column="54">ALLOW_REACHABLE_SHA1<pos:position pos:line="47" pos:column="74"/></name></expr>;<pos:position pos:line="47" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">!<pos:position pos:line="49" pos:column="14"/></operator><call><name pos:line="49" pos:column="14">server_supports<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><literal type="string" pos:line="49" pos:column="30">"thin-pack"<pos:position pos:line="49" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="43"/></condition><then pos:line="49" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="17">args<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">-&gt;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="23">use_thin_pack<pos:position pos:line="50" pos:column="36"/></name></name> <operator pos:line="50" pos:column="37">=<pos:position pos:line="50" pos:column="38"/></operator> <literal type="number" pos:line="50" pos:column="39">0<pos:position pos:line="50" pos:column="40"/></literal></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt></block></then></if>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">!<pos:position pos:line="51" pos:column="14"/></operator><call><name pos:line="51" pos:column="14">server_supports<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">(<argument><expr><literal type="string" pos:line="51" pos:column="30">"no-progress"<pos:position pos:line="51" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="45"/></condition><then pos:line="51" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="52" pos:column="17">args<pos:position pos:line="52" pos:column="21"/></name><operator pos:line="52" pos:column="21">-&gt;<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="23">no_progress<pos:position pos:line="52" pos:column="34"/></name></name> <operator pos:line="52" pos:column="35">=<pos:position pos:line="52" pos:column="36"/></operator> <literal type="number" pos:line="52" pos:column="37">0<pos:position pos:line="52" pos:column="38"/></literal></expr>;<pos:position pos:line="52" pos:column="39"/></expr_stmt></block></then></if>
	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><operator pos:line="53" pos:column="13">!<pos:position pos:line="53" pos:column="14"/></operator><call><name pos:line="53" pos:column="14">server_supports<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><literal type="string" pos:line="53" pos:column="30">"include-tag"<pos:position pos:line="53" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="45"/></condition><then pos:line="53" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="17">args<pos:position pos:line="54" pos:column="21"/></name><operator pos:line="54" pos:column="21">-&gt;<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="23">include_tag<pos:position pos:line="54" pos:column="34"/></name></name> <operator pos:line="54" pos:column="35">=<pos:position pos:line="54" pos:column="36"/></operator> <literal type="number" pos:line="54" pos:column="37">0<pos:position pos:line="54" pos:column="38"/></literal></expr>;<pos:position pos:line="54" pos:column="39"/></expr_stmt></block></then></if>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><call><name pos:line="55" pos:column="13">server_supports<pos:position pos:line="55" pos:column="28"/></name><argument_list pos:line="55" pos:column="28">(<argument><expr><literal type="string" pos:line="55" pos:column="29">"ofs-delta"<pos:position pos:line="55" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="42"/></condition><then pos:line="55" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="17">print_verbose<pos:position pos:line="56" pos:column="30"/></name><argument_list pos:line="56" pos:column="30">(<argument><expr><name pos:line="56" pos:column="31">args<pos:position pos:line="56" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="37">_<pos:position pos:line="56" pos:column="38"/></name><argument_list pos:line="56" pos:column="38">(<argument><expr><literal type="string" pos:line="56" pos:column="39">"Server supports ofs-delta"<pos:position pos:line="56" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="69"/></expr_stmt></block></then>
	<else pos:line="57" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="17">prefer_ofs_delta<pos:position pos:line="58" pos:column="33"/></name> <operator pos:line="58" pos:column="34">=<pos:position pos:line="58" pos:column="35"/></operator> <literal type="number" pos:line="58" pos:column="36">0<pos:position pos:line="58" pos:column="37"/></literal></expr>;<pos:position pos:line="58" pos:column="38"/></expr_stmt></block></else></if>

	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><operator pos:line="60" pos:column="13">(<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="14">agent_feature<pos:position pos:line="60" pos:column="27"/></name> <operator pos:line="60" pos:column="28">=<pos:position pos:line="60" pos:column="29"/></operator> <call><name pos:line="60" pos:column="30">server_feature_value<pos:position pos:line="60" pos:column="50"/></name><argument_list pos:line="60" pos:column="50">(<argument><expr><literal type="string" pos:line="60" pos:column="51">"agent"<pos:position pos:line="60" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="60" pos:column="60">&amp;<pos:position pos:line="60" pos:column="65"/></operator><name pos:line="60" pos:column="61">agent_len<pos:position pos:line="60" pos:column="70"/></name></expr></argument>)<pos:position pos:line="60" pos:column="71"/></argument_list></call><operator pos:line="60" pos:column="71">)<pos:position pos:line="60" pos:column="72"/></operator></expr>)<pos:position pos:line="60" pos:column="73"/></condition><then pos:line="60" pos:column="73"> <block pos:line="60" pos:column="74">{
		<expr_stmt><expr><name pos:line="61" pos:column="17">agent_supported<pos:position pos:line="61" pos:column="32"/></name> <operator pos:line="61" pos:column="33">=<pos:position pos:line="61" pos:column="34"/></operator> <literal type="number" pos:line="61" pos:column="35">1<pos:position pos:line="61" pos:column="36"/></literal></expr>;<pos:position pos:line="61" pos:column="37"/></expr_stmt>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name pos:line="62" pos:column="21">agent_len<pos:position pos:line="62" pos:column="30"/></name></expr>)<pos:position pos:line="62" pos:column="31"/></condition><then pos:line="62" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="25">print_verbose<pos:position pos:line="63" pos:column="38"/></name><argument_list pos:line="63" pos:column="38">(<argument><expr><name pos:line="63" pos:column="39">args<pos:position pos:line="63" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="45">_<pos:position pos:line="63" pos:column="46"/></name><argument_list pos:line="63" pos:column="46">(<argument><expr><literal type="string" pos:line="63" pos:column="47">"Server version is %.*s"<pos:position pos:line="63" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="72"/></argument_list></call></expr></argument>,
				      <argument><expr><name pos:line="64" pos:column="39">agent_len<pos:position pos:line="64" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="50">agent_feature<pos:position pos:line="64" pos:column="63"/></name></expr></argument>)<pos:position pos:line="64" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="65"/></expr_stmt></block></then></if>
	}<pos:position pos:line="65" pos:column="10"/></block></then></if>
	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><call><name pos:line="66" pos:column="13">server_supports<pos:position pos:line="66" pos:column="28"/></name><argument_list pos:line="66" pos:column="28">(<argument><expr><literal type="string" pos:line="66" pos:column="29">"deepen-since"<pos:position pos:line="66" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="45"/></condition><then pos:line="66" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="17">deepen_since_ok<pos:position pos:line="67" pos:column="32"/></name> <operator pos:line="67" pos:column="33">=<pos:position pos:line="67" pos:column="34"/></operator> <literal type="number" pos:line="67" pos:column="35">1<pos:position pos:line="67" pos:column="36"/></literal></expr>;<pos:position pos:line="67" pos:column="37"/></expr_stmt></block></then>
	<elseif pos:line="68" pos:column="9">else <if pos:line="68" pos:column="14">if <condition pos:line="68" pos:column="17">(<expr><name><name pos:line="68" pos:column="18">args<pos:position pos:line="68" pos:column="22"/></name><operator pos:line="68" pos:column="22">-&gt;<pos:position pos:line="68" pos:column="27"/></operator><name pos:line="68" pos:column="24">deepen_since<pos:position pos:line="68" pos:column="36"/></name></name></expr>)<pos:position pos:line="68" pos:column="37"/></condition><then pos:line="68" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="17">die<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><call><name pos:line="69" pos:column="21">_<pos:position pos:line="69" pos:column="22"/></name><argument_list pos:line="69" pos:column="22">(<argument><expr><literal type="string" pos:line="69" pos:column="23">"Server does not support --shallow-since"<pos:position pos:line="69" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="69" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="67"/></expr_stmt></block></then></if></elseif></if>
	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><call><name pos:line="70" pos:column="13">server_supports<pos:position pos:line="70" pos:column="28"/></name><argument_list pos:line="70" pos:column="28">(<argument><expr><literal type="string" pos:line="70" pos:column="29">"deepen-not"<pos:position pos:line="70" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="43"/></condition><then pos:line="70" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="17">deepen_not_ok<pos:position pos:line="71" pos:column="30"/></name> <operator pos:line="71" pos:column="31">=<pos:position pos:line="71" pos:column="32"/></operator> <literal type="number" pos:line="71" pos:column="33">1<pos:position pos:line="71" pos:column="34"/></literal></expr>;<pos:position pos:line="71" pos:column="35"/></expr_stmt></block></then>
	<elseif pos:line="72" pos:column="9">else <if pos:line="72" pos:column="14">if <condition pos:line="72" pos:column="17">(<expr><name><name pos:line="72" pos:column="18">args<pos:position pos:line="72" pos:column="22"/></name><operator pos:line="72" pos:column="22">-&gt;<pos:position pos:line="72" pos:column="27"/></operator><name pos:line="72" pos:column="24">deepen_not<pos:position pos:line="72" pos:column="34"/></name></name></expr>)<pos:position pos:line="72" pos:column="35"/></condition><then pos:line="72" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="17">die<pos:position pos:line="73" pos:column="20"/></name><argument_list pos:line="73" pos:column="20">(<argument><expr><call><name pos:line="73" pos:column="21">_<pos:position pos:line="73" pos:column="22"/></name><argument_list pos:line="73" pos:column="22">(<argument><expr><literal type="string" pos:line="73" pos:column="23">"Server does not support --shallow-exclude"<pos:position pos:line="73" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="69"/></expr_stmt></block></then></if></elseif></if>
	<if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><operator pos:line="74" pos:column="13">!<pos:position pos:line="74" pos:column="14"/></operator><call><name pos:line="74" pos:column="14">server_supports<pos:position pos:line="74" pos:column="29"/></name><argument_list pos:line="74" pos:column="29">(<argument><expr><literal type="string" pos:line="74" pos:column="30">"deepen-relative"<pos:position pos:line="74" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="48"/></argument_list></call> <operator pos:line="74" pos:column="49">&amp;&amp;<pos:position pos:line="74" pos:column="59"/></operator> <name><name pos:line="74" pos:column="52">args<pos:position pos:line="74" pos:column="56"/></name><operator pos:line="74" pos:column="56">-&gt;<pos:position pos:line="74" pos:column="61"/></operator><name pos:line="74" pos:column="58">deepen_relative<pos:position pos:line="74" pos:column="73"/></name></name></expr>)<pos:position pos:line="74" pos:column="74"/></condition><then pos:line="74" pos:column="74">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="17">die<pos:position pos:line="75" pos:column="20"/></name><argument_list pos:line="75" pos:column="20">(<argument><expr><call><name pos:line="75" pos:column="21">_<pos:position pos:line="75" pos:column="22"/></name><argument_list pos:line="75" pos:column="22">(<argument><expr><literal type="string" pos:line="75" pos:column="23">"Server does not support --deepen"<pos:position pos:line="75" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="60"/></expr_stmt></block></then></if>

	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><call><name pos:line="77" pos:column="13">everything_local<pos:position pos:line="77" pos:column="29"/></name><argument_list pos:line="77" pos:column="29">(<argument><expr><name pos:line="77" pos:column="30">args<pos:position pos:line="77" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="36">&amp;<pos:position pos:line="77" pos:column="41"/></operator><name pos:line="77" pos:column="37">ref<pos:position pos:line="77" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="42">sought<pos:position pos:line="77" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="50">nr_sought<pos:position pos:line="77" pos:column="59"/></name></expr></argument>)<pos:position pos:line="77" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="61"/></condition><then pos:line="77" pos:column="61"> <block pos:line="77" pos:column="62">{
		<expr_stmt><expr><call><name pos:line="78" pos:column="17">packet_flush<pos:position pos:line="78" pos:column="29"/></name><argument_list pos:line="78" pos:column="29">(<argument><expr><name><name pos:line="78" pos:column="30">fd<pos:position pos:line="78" pos:column="32"/></name><index pos:line="78" pos:column="32">[<expr><literal type="number" pos:line="78" pos:column="33">1<pos:position pos:line="78" pos:column="34"/></literal></expr>]<pos:position pos:line="78" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="78" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="37"/></expr_stmt>
		<goto pos:line="79" pos:column="17">goto <name pos:line="79" pos:column="22">all_done<pos:position pos:line="79" pos:column="30"/></name>;<pos:position pos:line="79" pos:column="31"/></goto>
	}<pos:position pos:line="80" pos:column="10"/></block></then></if>
	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><call><name pos:line="81" pos:column="13">find_common<pos:position pos:line="81" pos:column="24"/></name><argument_list pos:line="81" pos:column="24">(<argument><expr><name pos:line="81" pos:column="25">args<pos:position pos:line="81" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="31">fd<pos:position pos:line="81" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="35">sha1<pos:position pos:line="81" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="41">ref<pos:position pos:line="81" pos:column="44"/></name></expr></argument>)<pos:position pos:line="81" pos:column="45"/></argument_list></call> <operator pos:line="81" pos:column="46">&lt;<pos:position pos:line="81" pos:column="50"/></operator> <literal type="number" pos:line="81" pos:column="48">0<pos:position pos:line="81" pos:column="49"/></literal></expr>)<pos:position pos:line="81" pos:column="50"/></condition><then pos:line="81" pos:column="50">
		<block type="pseudo"><if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><operator pos:line="82" pos:column="21">!<pos:position pos:line="82" pos:column="22"/></operator><name><name pos:line="82" pos:column="22">args<pos:position pos:line="82" pos:column="26"/></name><operator pos:line="82" pos:column="26">-&gt;<pos:position pos:line="82" pos:column="31"/></operator><name pos:line="82" pos:column="28">keep_pack<pos:position pos:line="82" pos:column="37"/></name></name></expr>)<pos:position pos:line="82" pos:column="38"/></condition><then pos:line="82" pos:column="38">
			<comment type="block" pos:line="83" pos:column="25">/* When cloning, it is not unusual to have
			 * no common commit.
			 */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="25">warning<pos:position pos:line="86" pos:column="32"/></name><argument_list pos:line="86" pos:column="32">(<argument><expr><call><name pos:line="86" pos:column="33">_<pos:position pos:line="86" pos:column="34"/></name><argument_list pos:line="86" pos:column="34">(<argument><expr><literal type="string" pos:line="86" pos:column="35">"no common commits"<pos:position pos:line="86" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="57"/></expr_stmt></block></then></if></block></then></if>

	<if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><name><name pos:line="88" pos:column="13">args<pos:position pos:line="88" pos:column="17"/></name><operator pos:line="88" pos:column="17">-&gt;<pos:position pos:line="88" pos:column="22"/></operator><name pos:line="88" pos:column="19">stateless_rpc<pos:position pos:line="88" pos:column="32"/></name></name></expr>)<pos:position pos:line="88" pos:column="33"/></condition><then pos:line="88" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="17">packet_flush<pos:position pos:line="89" pos:column="29"/></name><argument_list pos:line="89" pos:column="29">(<argument><expr><name><name pos:line="89" pos:column="30">fd<pos:position pos:line="89" pos:column="32"/></name><index pos:line="89" pos:column="32">[<expr><literal type="number" pos:line="89" pos:column="33">1<pos:position pos:line="89" pos:column="34"/></literal></expr>]<pos:position pos:line="89" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="89" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="37"/></expr_stmt></block></then></if>
	<if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><name><name pos:line="90" pos:column="13">args<pos:position pos:line="90" pos:column="17"/></name><operator pos:line="90" pos:column="17">-&gt;<pos:position pos:line="90" pos:column="22"/></operator><name pos:line="90" pos:column="19">deepen<pos:position pos:line="90" pos:column="25"/></name></name></expr>)<pos:position pos:line="90" pos:column="26"/></condition><then pos:line="90" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="91" pos:column="17">setup_alternate_shallow<pos:position pos:line="91" pos:column="40"/></name><argument_list pos:line="91" pos:column="40">(<argument><expr><operator pos:line="91" pos:column="41">&amp;<pos:position pos:line="91" pos:column="46"/></operator><name pos:line="91" pos:column="42">shallow_lock<pos:position pos:line="91" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="56">&amp;<pos:position pos:line="91" pos:column="61"/></operator><name pos:line="91" pos:column="57">alternate_shallow_file<pos:position pos:line="91" pos:column="79"/></name></expr></argument>,
					<argument><expr><name pos:line="92" pos:column="41">NULL<pos:position pos:line="92" pos:column="45"/></name></expr></argument>)<pos:position pos:line="92" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="47"/></expr_stmt></block></then>
	<elseif pos:line="93" pos:column="9">else <if pos:line="93" pos:column="14">if <condition pos:line="93" pos:column="17">(<expr><name><name pos:line="93" pos:column="18">si<pos:position pos:line="93" pos:column="20"/></name><operator pos:line="93" pos:column="20">-&gt;<pos:position pos:line="93" pos:column="25"/></operator><name pos:line="93" pos:column="22">nr_ours<pos:position pos:line="93" pos:column="29"/></name></name> <operator pos:line="93" pos:column="30">||<pos:position pos:line="93" pos:column="32"/></operator> <name><name pos:line="93" pos:column="33">si<pos:position pos:line="93" pos:column="35"/></name><operator pos:line="93" pos:column="35">-&gt;<pos:position pos:line="93" pos:column="40"/></operator><name pos:line="93" pos:column="37">nr_theirs<pos:position pos:line="93" pos:column="46"/></name></name></expr>)<pos:position pos:line="93" pos:column="47"/></condition><then pos:line="93" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="17">alternate_shallow_file<pos:position pos:line="94" pos:column="39"/></name> <operator pos:line="94" pos:column="40">=<pos:position pos:line="94" pos:column="41"/></operator> <call><name pos:line="94" pos:column="42">setup_temporary_shallow<pos:position pos:line="94" pos:column="65"/></name><argument_list pos:line="94" pos:column="65">(<argument><expr><name><name pos:line="94" pos:column="66">si<pos:position pos:line="94" pos:column="68"/></name><operator pos:line="94" pos:column="68">-&gt;<pos:position pos:line="94" pos:column="73"/></operator><name pos:line="94" pos:column="70">shallow<pos:position pos:line="94" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="79"/></expr_stmt></block></then></if></elseif>
	<else pos:line="95" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="17">alternate_shallow_file<pos:position pos:line="96" pos:column="39"/></name> <operator pos:line="96" pos:column="40">=<pos:position pos:line="96" pos:column="41"/></operator> <name pos:line="96" pos:column="42">NULL<pos:position pos:line="96" pos:column="46"/></name></expr>;<pos:position pos:line="96" pos:column="47"/></expr_stmt></block></else></if>
	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><call><name pos:line="97" pos:column="13">get_pack<pos:position pos:line="97" pos:column="21"/></name><argument_list pos:line="97" pos:column="21">(<argument><expr><name pos:line="97" pos:column="22">args<pos:position pos:line="97" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="28">fd<pos:position pos:line="97" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="32">pack_lockfile<pos:position pos:line="97" pos:column="45"/></name></expr></argument>)<pos:position pos:line="97" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="47"/></condition><then pos:line="97" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="17">die<pos:position pos:line="98" pos:column="20"/></name><argument_list pos:line="98" pos:column="20">(<argument><expr><call><name pos:line="98" pos:column="21">_<pos:position pos:line="98" pos:column="22"/></name><argument_list pos:line="98" pos:column="22">(<argument><expr><literal type="string" pos:line="98" pos:column="23">"git fetch-pack: fetch failed."<pos:position pos:line="98" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="98" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="57"/></expr_stmt></block></then></if>

 <label><name pos:line="100" pos:column="2">all_done<pos:position pos:line="100" pos:column="10"/></name>:<pos:position pos:line="100" pos:column="11"/></label>
	<return pos:line="101" pos:column="9">return <expr><name pos:line="101" pos:column="16">ref<pos:position pos:line="101" pos:column="19"/></name></expr>;<pos:position pos:line="101" pos:column="20"/></return>
}<pos:position pos:line="102" pos:column="2"/></block></function></unit>

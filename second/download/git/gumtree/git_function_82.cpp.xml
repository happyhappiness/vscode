<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_82.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">update_store_new_sha1<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">ref_update<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">update<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
				  <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">newvalue<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">newvalue<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&amp;&amp;<pos:position pos:line="4" pos:column="33"/></operator> <call><name pos:line="4" pos:column="26">get_sha1<pos:position pos:line="4" pos:column="34"/></name><argument_list pos:line="4" pos:column="34">(<argument><expr><name pos:line="4" pos:column="35">newvalue<pos:position pos:line="4" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="45">update<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">-&gt;<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="53">new_sha1<pos:position pos:line="4" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="63"/></condition><then pos:line="4" pos:column="63">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="17">die<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><literal type="string" pos:line="5" pos:column="21">"invalid new value for ref %s: %s"<pos:position pos:line="5" pos:column="55"/></literal></expr></argument>,
		    <argument><expr><name><name pos:line="6" pos:column="21">update<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">ref_name<pos:position pos:line="6" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="39">newvalue<pos:position pos:line="6" pos:column="47"/></name></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="49"/></expr_stmt></block></then></if>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

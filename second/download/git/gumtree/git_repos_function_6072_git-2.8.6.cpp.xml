<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6072_git-2.8.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">pid_t<pos:position pos:line="1" pos:column="6"/></name></type> <name pos:line="1" pos:column="7">waitpid<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">pid_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">pid<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="26">int<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">status<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">options<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">HANDLE<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">h<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><call><name pos:line="3" pos:column="20">OpenProcess<pos:position pos:line="3" pos:column="31"/></name><argument_list pos:line="3" pos:column="31">(<argument><expr><name pos:line="3" pos:column="32">SYNCHRONIZE<pos:position pos:line="3" pos:column="43"/></name> <operator pos:line="3" pos:column="44">|<pos:position pos:line="3" pos:column="45"/></operator> <name pos:line="3" pos:column="46">PROCESS_QUERY_INFORMATION<pos:position pos:line="3" pos:column="71"/></name></expr></argument>,
	    <argument><expr><name pos:line="4" pos:column="13">FALSE<pos:position pos:line="4" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="20">pid<pos:position pos:line="4" pos:column="23"/></name></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">h<pos:position pos:line="5" pos:column="15"/></name></expr>)<pos:position pos:line="5" pos:column="16"/></condition><then pos:line="5" pos:column="16"> <block pos:line="5" pos:column="17">{
		<expr_stmt><expr><name pos:line="6" pos:column="17">errno<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="25">ECHILD<pos:position pos:line="6" pos:column="31"/></name></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>
		<return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">-<pos:position pos:line="7" pos:column="25"/></operator><literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal></expr>;<pos:position pos:line="7" pos:column="27"/></return>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">pid<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">&gt;<pos:position pos:line="10" pos:column="21"/></operator> <literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal> <operator pos:line="10" pos:column="21">&amp;&amp;<pos:position pos:line="10" pos:column="31"/></operator> <name pos:line="10" pos:column="24">options<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">&amp;<pos:position pos:line="10" pos:column="37"/></operator> <name pos:line="10" pos:column="34">WNOHANG<pos:position pos:line="10" pos:column="41"/></name></expr>)<pos:position pos:line="10" pos:column="42"/></condition><then pos:line="10" pos:column="42"> <block pos:line="10" pos:column="43">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">WAIT_OBJECT_0<pos:position pos:line="11" pos:column="34"/></name> <operator pos:line="11" pos:column="35">!=<pos:position pos:line="11" pos:column="37"/></operator> <call><name pos:line="11" pos:column="38">WaitForSingleObject<pos:position pos:line="11" pos:column="57"/></name><argument_list pos:line="11" pos:column="57">(<argument><expr><name pos:line="11" pos:column="58">h<pos:position pos:line="11" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="61">0<pos:position pos:line="11" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="64"/></condition><then pos:line="11" pos:column="64"> <block pos:line="11" pos:column="65">{
			<expr_stmt><expr><call><name pos:line="12" pos:column="25">CloseHandle<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><name pos:line="12" pos:column="37">h<pos:position pos:line="12" pos:column="38"/></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
			<return pos:line="13" pos:column="25">return <expr><literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr>;<pos:position pos:line="13" pos:column="34"/></return>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="15" pos:column="17">options<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">&amp;=<pos:position pos:line="15" pos:column="31"/></operator> <operator pos:line="15" pos:column="28">~<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">WNOHANG<pos:position pos:line="15" pos:column="36"/></name></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">options<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">==<pos:position pos:line="18" pos:column="23"/></operator> <literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>)<pos:position pos:line="18" pos:column="26"/></condition><then pos:line="18" pos:column="26"> <block pos:line="18" pos:column="27">{
		<decl_stmt><decl><type><name><name pos:line="19" pos:column="17">struct<pos:position pos:line="19" pos:column="23"/></name> <name pos:line="19" pos:column="24">pinfo_t<pos:position pos:line="19" pos:column="31"/></name></name> <modifier pos:line="19" pos:column="32">*<pos:position pos:line="19" pos:column="33"/></modifier><modifier pos:line="19" pos:column="33">*<pos:position pos:line="19" pos:column="34"/></modifier></type><name pos:line="19" pos:column="34">ppinfo<pos:position pos:line="19" pos:column="40"/></name></decl>;<pos:position pos:line="19" pos:column="41"/></decl_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">WaitForSingleObject<pos:position pos:line="20" pos:column="40"/></name><argument_list pos:line="20" pos:column="40">(<argument><expr><name pos:line="20" pos:column="41">h<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="44">INFINITE<pos:position pos:line="20" pos:column="52"/></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call> <operator pos:line="20" pos:column="54">!=<pos:position pos:line="20" pos:column="56"/></operator> <name pos:line="20" pos:column="57">WAIT_OBJECT_0<pos:position pos:line="20" pos:column="70"/></name></expr>)<pos:position pos:line="20" pos:column="71"/></condition><then pos:line="20" pos:column="71"> <block pos:line="20" pos:column="72">{
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">CloseHandle<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><name pos:line="21" pos:column="37">h<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
			<return pos:line="22" pos:column="25">return <expr><literal type="number" pos:line="22" pos:column="32">0<pos:position pos:line="22" pos:column="33"/></literal></expr>;<pos:position pos:line="22" pos:column="34"/></return>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">status<pos:position pos:line="25" pos:column="27"/></name></expr>)<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="25">GetExitCodeProcess<pos:position pos:line="26" pos:column="43"/></name><argument_list pos:line="26" pos:column="43">(<argument><expr><name pos:line="26" pos:column="44">h<pos:position pos:line="26" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="47">(<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="48">LPDWORD<pos:position pos:line="26" pos:column="55"/></name><operator pos:line="26" pos:column="55">)<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="56">status<pos:position pos:line="26" pos:column="62"/></name></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="64"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="28" pos:column="17">EnterCriticalSection<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><operator pos:line="28" pos:column="38">&amp;<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="39">pinfo_cs<pos:position pos:line="28" pos:column="47"/></name></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>

		<expr_stmt><expr><name pos:line="30" pos:column="17">ppinfo<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <operator pos:line="30" pos:column="26">&amp;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="27">pinfo<pos:position pos:line="30" pos:column="32"/></name></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
		<while pos:line="31" pos:column="17">while <condition pos:line="31" pos:column="23">(<expr><operator pos:line="31" pos:column="24">*<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">ppinfo<pos:position pos:line="31" pos:column="31"/></name></expr>)<pos:position pos:line="31" pos:column="32"/></condition> <block pos:line="31" pos:column="33">{
			<decl_stmt><decl><type><name><name pos:line="32" pos:column="25">struct<pos:position pos:line="32" pos:column="31"/></name> <name pos:line="32" pos:column="32">pinfo_t<pos:position pos:line="32" pos:column="39"/></name></name> <modifier pos:line="32" pos:column="40">*<pos:position pos:line="32" pos:column="41"/></modifier></type><name pos:line="32" pos:column="41">info<pos:position pos:line="32" pos:column="45"/></name> <init pos:line="32" pos:column="46">= <expr><operator pos:line="32" pos:column="48">*<pos:position pos:line="32" pos:column="49"/></operator><name pos:line="32" pos:column="49">ppinfo<pos:position pos:line="32" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="32" pos:column="56"/></decl_stmt>
			<if pos:line="33" pos:column="25">if <condition pos:line="33" pos:column="28">(<expr><name><name pos:line="33" pos:column="29">info<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">-&gt;<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="35">pid<pos:position pos:line="33" pos:column="38"/></name></name> <operator pos:line="33" pos:column="39">==<pos:position pos:line="33" pos:column="41"/></operator> <name pos:line="33" pos:column="42">pid<pos:position pos:line="33" pos:column="45"/></name></expr>)<pos:position pos:line="33" pos:column="46"/></condition><then pos:line="33" pos:column="46"> <block pos:line="33" pos:column="47">{
				<expr_stmt><expr><call><name pos:line="34" pos:column="33">CloseHandle<pos:position pos:line="34" pos:column="44"/></name><argument_list pos:line="34" pos:column="44">(<argument><expr><name><name pos:line="34" pos:column="45">info<pos:position pos:line="34" pos:column="49"/></name><operator pos:line="34" pos:column="49">-&gt;<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="51">proc<pos:position pos:line="34" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="35" pos:column="33">*<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">ppinfo<pos:position pos:line="35" pos:column="40"/></name> <operator pos:line="35" pos:column="41">=<pos:position pos:line="35" pos:column="42"/></operator> <name><name pos:line="35" pos:column="43">info<pos:position pos:line="35" pos:column="47"/></name><operator pos:line="35" pos:column="47">-&gt;<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="49">next<pos:position pos:line="35" pos:column="53"/></name></name></expr>;<pos:position pos:line="35" pos:column="54"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="36" pos:column="33">free<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">(<argument><expr><name pos:line="36" pos:column="38">info<pos:position pos:line="36" pos:column="42"/></name></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt>
				<break pos:line="37" pos:column="33">break;<pos:position pos:line="37" pos:column="39"/></break>
			}<pos:position pos:line="38" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="39" pos:column="25">ppinfo<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">=<pos:position pos:line="39" pos:column="33"/></operator> <operator pos:line="39" pos:column="34">&amp;<pos:position pos:line="39" pos:column="39"/></operator><name><name pos:line="39" pos:column="35">info<pos:position pos:line="39" pos:column="39"/></name><operator pos:line="39" pos:column="39">-&gt;<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="41">next<pos:position pos:line="39" pos:column="45"/></name></name></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="40" pos:column="18"/></block></while>

		<expr_stmt><expr><call><name pos:line="42" pos:column="17">LeaveCriticalSection<pos:position pos:line="42" pos:column="37"/></name><argument_list pos:line="42" pos:column="37">(<argument><expr><operator pos:line="42" pos:column="38">&amp;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="39">pinfo_cs<pos:position pos:line="42" pos:column="47"/></name></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="44" pos:column="17">CloseHandle<pos:position pos:line="44" pos:column="28"/></name><argument_list pos:line="44" pos:column="28">(<argument><expr><name pos:line="44" pos:column="29">h<pos:position pos:line="44" pos:column="30"/></name></expr></argument>)<pos:position pos:line="44" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="32"/></expr_stmt>
		<return pos:line="45" pos:column="17">return <expr><name pos:line="45" pos:column="24">pid<pos:position pos:line="45" pos:column="27"/></name></expr>;<pos:position pos:line="45" pos:column="28"/></return>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">CloseHandle<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">h<pos:position pos:line="47" pos:column="22"/></name></expr></argument>)<pos:position pos:line="47" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="24"/></expr_stmt>

	<expr_stmt><expr><name pos:line="49" pos:column="9">errno<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">=<pos:position pos:line="49" pos:column="16"/></operator> <name pos:line="49" pos:column="17">EINVAL<pos:position pos:line="49" pos:column="23"/></name></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>
	<return pos:line="50" pos:column="9">return <expr><operator pos:line="50" pos:column="16">-<pos:position pos:line="50" pos:column="17"/></operator><literal type="number" pos:line="50" pos:column="17">1<pos:position pos:line="50" pos:column="18"/></literal></expr>;<pos:position pos:line="50" pos:column="19"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

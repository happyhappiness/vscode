<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5898_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">update_clone_get_next_task<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">child_process<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">child<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
				      <parameter><decl><type><name><name pos:line="2" pos:column="39">struct<pos:position pos:line="2" pos:column="45"/></name> <name pos:line="2" pos:column="46">strbuf<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">err<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="3" pos:column="39">void<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">suc_cb<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="4" pos:column="39">void<pos:position pos:line="4" pos:column="43"/></name> <modifier pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></modifier><modifier pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></modifier></type><name pos:line="4" pos:column="46">idx_task_cb<pos:position pos:line="4" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="58"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">submodule_update_clone<pos:position pos:line="6" pos:column="38"/></name></name> <modifier pos:line="6" pos:column="39">*<pos:position pos:line="6" pos:column="40"/></modifier></type><name pos:line="6" pos:column="40">suc<pos:position pos:line="6" pos:column="43"/></name> <init pos:line="6" pos:column="44">= <expr><name pos:line="6" pos:column="46">suc_cb<pos:position pos:line="6" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name><name pos:line="7" pos:column="15">struct<pos:position pos:line="7" pos:column="21"/></name> <name pos:line="7" pos:column="22">cache_entry<pos:position pos:line="7" pos:column="33"/></name></name> <modifier pos:line="7" pos:column="34">*<pos:position pos:line="7" pos:column="35"/></modifier></type><name pos:line="7" pos:column="35">ce<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">index<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>

	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init pos:line="10" pos:column="14">;<pos:position pos:line="10" pos:column="15"/></init> <condition><expr><name><name pos:line="10" pos:column="16">suc<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">current<pos:position pos:line="10" pos:column="28"/></name></name> <operator pos:line="10" pos:column="29">&lt;<pos:position pos:line="10" pos:column="33"/></operator> <name><name pos:line="10" pos:column="31">suc<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">list<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">.<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="41">nr<pos:position pos:line="10" pos:column="43"/></name></name></expr>;<pos:position pos:line="10" pos:column="44"/></condition> <incr><expr><name><name pos:line="10" pos:column="45">suc<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">-&gt;<pos:position pos:line="10" pos:column="53"/></operator><name pos:line="10" pos:column="50">current<pos:position pos:line="10" pos:column="57"/></name></name><operator pos:line="10" pos:column="57">++<pos:position pos:line="10" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="60"/></control> <block pos:line="10" pos:column="61">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">ce<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name><name pos:line="11" pos:column="22">suc<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">list<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">.<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">entries<pos:position pos:line="11" pos:column="39"/></name><index pos:line="11" pos:column="39">[<expr><name><name pos:line="11" pos:column="40">suc<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">current<pos:position pos:line="11" pos:column="52"/></name></name></expr>]<pos:position pos:line="11" pos:column="53"/></index></name></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><call><name pos:line="12" pos:column="21">prepare_to_clone_next_submodule<pos:position pos:line="12" pos:column="52"/></name><argument_list pos:line="12" pos:column="52">(<argument><expr><name pos:line="12" pos:column="53">ce<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="57">child<pos:position pos:line="12" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="64">suc<pos:position pos:line="12" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="69">err<pos:position pos:line="12" pos:column="72"/></name></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="74"/></condition><then pos:line="12" pos:column="74"> <block pos:line="12" pos:column="75">{
			<decl_stmt><decl><type><name pos:line="13" pos:column="25">int<pos:position pos:line="13" pos:column="28"/></name> <modifier pos:line="13" pos:column="29">*<pos:position pos:line="13" pos:column="30"/></modifier></type><name pos:line="13" pos:column="30">p<pos:position pos:line="13" pos:column="31"/></name> <init pos:line="13" pos:column="32">= <expr><call><name pos:line="13" pos:column="34">xmalloc<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><sizeof pos:line="13" pos:column="42">sizeof<argument_list pos:line="13" pos:column="48">(<argument><expr><operator pos:line="13" pos:column="49">*<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="50">p<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="54"/></decl_stmt>
			<expr_stmt><expr><operator pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">p<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">=<pos:position pos:line="14" pos:column="29"/></operator> <name><name pos:line="14" pos:column="30">suc<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">-&gt;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="35">current<pos:position pos:line="14" pos:column="42"/></name></name></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="15" pos:column="25">*<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">idx_task_cb<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">=<pos:position pos:line="15" pos:column="39"/></operator> <name pos:line="15" pos:column="40">p<pos:position pos:line="15" pos:column="41"/></name></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="16" pos:column="25">suc<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">current<pos:position pos:line="16" pos:column="37"/></name></name><operator pos:line="16" pos:column="37">++<pos:position pos:line="16" pos:column="39"/></operator></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
			<return pos:line="17" pos:column="25">return <expr><literal type="number" pos:line="17" pos:column="32">1<pos:position pos:line="17" pos:column="33"/></literal></expr>;<pos:position pos:line="17" pos:column="34"/></return>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if>
	}<pos:position pos:line="19" pos:column="10"/></block></for>

	<comment type="block" pos:line="21" pos:column="9">/*
	 * The loop above tried cloning each submodule once, now try the
	 * stragglers again, which we can imagine as an extension of the
	 * entry list.
	 */</comment>
	<expr_stmt><expr><name pos:line="26" pos:column="9">index<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <name><name pos:line="26" pos:column="17">suc<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">-&gt;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="22">current<pos:position pos:line="26" pos:column="29"/></name></name> <operator pos:line="26" pos:column="30">-<pos:position pos:line="26" pos:column="31"/></operator> <name><name pos:line="26" pos:column="32">suc<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">-&gt;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="37">list<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">.<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="42">nr<pos:position pos:line="26" pos:column="44"/></name></name></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">index<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">&lt;<pos:position pos:line="27" pos:column="23"/></operator> <name><name pos:line="27" pos:column="21">suc<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">-&gt;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="26">failed_clones_nr<pos:position pos:line="27" pos:column="42"/></name></name></expr>)<pos:position pos:line="27" pos:column="43"/></condition><then pos:line="27" pos:column="43"> <block pos:line="27" pos:column="44">{
		<decl_stmt><decl><type><name pos:line="28" pos:column="17">int<pos:position pos:line="28" pos:column="20"/></name> <modifier pos:line="28" pos:column="21">*<pos:position pos:line="28" pos:column="22"/></modifier></type><name pos:line="28" pos:column="22">p<pos:position pos:line="28" pos:column="23"/></name></decl>;<pos:position pos:line="28" pos:column="24"/></decl_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">ce<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <name><name pos:line="29" pos:column="22">suc<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">failed_clones<pos:position pos:line="29" pos:column="40"/></name><index pos:line="29" pos:column="40">[<expr><name pos:line="29" pos:column="41">index<pos:position pos:line="29" pos:column="46"/></name></expr>]<pos:position pos:line="29" pos:column="47"/></index></name></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><call><name pos:line="30" pos:column="22">prepare_to_clone_next_submodule<pos:position pos:line="30" pos:column="53"/></name><argument_list pos:line="30" pos:column="53">(<argument><expr><name pos:line="30" pos:column="54">ce<pos:position pos:line="30" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">child<pos:position pos:line="30" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="65">suc<pos:position pos:line="30" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="70">err<pos:position pos:line="30" pos:column="73"/></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="75"/></condition><then pos:line="30" pos:column="75"> <block pos:line="30" pos:column="76">{
			<expr_stmt><expr><name><name pos:line="31" pos:column="25">suc<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">-&gt;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="30">current<pos:position pos:line="31" pos:column="37"/></name></name> <operator pos:line="31" pos:column="38">++<pos:position pos:line="31" pos:column="40"/></operator></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">strbuf_addstr<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><name pos:line="32" pos:column="39">err<pos:position pos:line="32" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="44">"BUG: submodule considered for "<pos:position pos:line="32" pos:column="76"/></literal>
					   <literal type="string" pos:line="33" pos:column="44">"cloning, doesn't need cloning "<pos:position pos:line="33" pos:column="76"/></literal>
					   <literal type="string" pos:line="34" pos:column="44">"any more?\n"<pos:position pos:line="34" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="59"/></expr_stmt>
			<return pos:line="35" pos:column="25">return <expr><literal type="number" pos:line="35" pos:column="32">0<pos:position pos:line="35" pos:column="33"/></literal></expr>;<pos:position pos:line="35" pos:column="34"/></return>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="37" pos:column="17">p<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <call><name pos:line="37" pos:column="21">xmalloc<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><sizeof pos:line="37" pos:column="29">sizeof<argument_list pos:line="37" pos:column="35">(<argument><expr><operator pos:line="37" pos:column="36">*<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="37">p<pos:position pos:line="37" pos:column="38"/></name></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="38" pos:column="17">*<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">p<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <name><name pos:line="38" pos:column="22">suc<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">-&gt;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="27">current<pos:position pos:line="38" pos:column="34"/></name></name></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="39" pos:column="17">*<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">idx_task_cb<pos:position pos:line="39" pos:column="29"/></name> <operator pos:line="39" pos:column="30">=<pos:position pos:line="39" pos:column="31"/></operator> <name pos:line="39" pos:column="32">p<pos:position pos:line="39" pos:column="33"/></name></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="40" pos:column="17">suc<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">-&gt;<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="22">current<pos:position pos:line="40" pos:column="29"/></name></name> <operator pos:line="40" pos:column="30">++<pos:position pos:line="40" pos:column="32"/></operator></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt>
		<return pos:line="41" pos:column="17">return <expr><literal type="number" pos:line="41" pos:column="24">1<pos:position pos:line="41" pos:column="25"/></literal></expr>;<pos:position pos:line="41" pos:column="26"/></return>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<return pos:line="44" pos:column="9">return <expr><literal type="number" pos:line="44" pos:column="16">0<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

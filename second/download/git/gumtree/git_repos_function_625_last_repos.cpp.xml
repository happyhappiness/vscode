<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_625_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">prepare_include_condition_pattern<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name><name pos:line="1" pos:column="46">struct<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">strbuf<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">pat<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">path<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><name pos:line="3" pos:column="30">STRBUF_INIT<pos:position pos:line="3" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">expanded<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">prefix<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">expanded<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <call><name pos:line="7" pos:column="20">expand_user_path<pos:position pos:line="7" pos:column="36"/></name><argument_list pos:line="7" pos:column="36">(<argument><expr><name><name pos:line="7" pos:column="37">pat<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">-&gt;<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="42">buf<pos:position pos:line="7" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="47">1<pos:position pos:line="7" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="50"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">expanded<pos:position pos:line="8" pos:column="21"/></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22"> <block pos:line="8" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">strbuf_reset<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">pat<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">strbuf_addstr<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">pat<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="36">expanded<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">free<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">expanded<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">pat<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">buf<pos:position pos:line="14" pos:column="21"/></name><index pos:line="14" pos:column="21">[<expr><literal type="number" pos:line="14" pos:column="22">0<pos:position pos:line="14" pos:column="23"/></literal></expr>]<pos:position pos:line="14" pos:column="24"/></index></name> <operator pos:line="14" pos:column="25">==<pos:position pos:line="14" pos:column="27"/></operator> <literal type="char" pos:line="14" pos:column="28">'.'<pos:position pos:line="14" pos:column="31"/></literal> <operator pos:line="14" pos:column="32">&amp;&amp;<pos:position pos:line="14" pos:column="42"/></operator> <call><name pos:line="14" pos:column="35">is_dir_sep<pos:position pos:line="14" pos:column="45"/></name><argument_list pos:line="14" pos:column="45">(<argument><expr><name><name pos:line="14" pos:column="46">pat<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">-&gt;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="51">buf<pos:position pos:line="14" pos:column="54"/></name><index pos:line="14" pos:column="54">[<expr><literal type="number" pos:line="14" pos:column="55">1<pos:position pos:line="14" pos:column="56"/></literal></expr>]<pos:position pos:line="14" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="59"/></condition><then pos:line="14" pos:column="59"> <block pos:line="14" pos:column="60">{
		<decl_stmt><decl><type><specifier pos:line="15" pos:column="17">const<pos:position pos:line="15" pos:column="22"/></specifier> <name pos:line="15" pos:column="23">char<pos:position pos:line="15" pos:column="27"/></name> <modifier pos:line="15" pos:column="28">*<pos:position pos:line="15" pos:column="29"/></modifier></type><name pos:line="15" pos:column="29">slash<pos:position pos:line="15" pos:column="34"/></name></decl>;<pos:position pos:line="15" pos:column="35"/></decl_stmt>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">cf<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">||<pos:position pos:line="17" pos:column="27"/></operator> <operator pos:line="17" pos:column="28">!<pos:position pos:line="17" pos:column="29"/></operator><name><name pos:line="17" pos:column="29">cf<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">path<pos:position pos:line="17" pos:column="37"/></name></name></expr>)<pos:position pos:line="17" pos:column="38"/></condition><then pos:line="17" pos:column="38">
			<block type="pseudo"><return pos:line="18" pos:column="25">return <expr><call><name pos:line="18" pos:column="32">error<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><call><name pos:line="18" pos:column="38">_<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">(<argument><expr><literal type="string" pos:line="18" pos:column="40">"relative config include "<pos:position pos:line="18" pos:column="66"/></literal>
				       <literal type="string" pos:line="19" pos:column="40">"conditionals must come from files"<pos:position pos:line="19" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="78"/></return></block></then></if>

		<expr_stmt><expr><call><name pos:line="21" pos:column="17">strbuf_realpath<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><operator pos:line="21" pos:column="33">&amp;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="34">path<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="40">cf<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">-&gt;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="44">path<pos:position pos:line="21" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="50">1<pos:position pos:line="21" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">slash<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <call><name pos:line="22" pos:column="25">find_last_dir_sep<pos:position pos:line="22" pos:column="42"/></name><argument_list pos:line="22" pos:column="42">(<argument><expr><name><name pos:line="22" pos:column="43">path<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">.<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="48">buf<pos:position pos:line="22" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">slash<pos:position pos:line="23" pos:column="27"/></name></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="25">die<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><literal type="string" pos:line="24" pos:column="29">"BUG: how is this possible?"<pos:position pos:line="24" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="59"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">strbuf_splice<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">pat<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="36">0<pos:position pos:line="25" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="39">1<pos:position pos:line="25" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="42">path<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">.<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="47">buf<pos:position pos:line="25" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="52">slash<pos:position pos:line="25" pos:column="57"/></name> <operator pos:line="25" pos:column="58">-<pos:position pos:line="25" pos:column="59"/></operator> <name><name pos:line="25" pos:column="60">path<pos:position pos:line="25" pos:column="64"/></name><operator pos:line="25" pos:column="64">.<pos:position pos:line="25" pos:column="65"/></operator><name pos:line="25" pos:column="65">buf<pos:position pos:line="25" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">prefix<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <name pos:line="26" pos:column="26">slash<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">-<pos:position pos:line="26" pos:column="33"/></operator> <name><name pos:line="26" pos:column="34">path<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">.<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="39">buf<pos:position pos:line="26" pos:column="42"/></name></name> <operator pos:line="26" pos:column="43">+<pos:position pos:line="26" pos:column="44"/></operator> <literal type="number" pos:line="26" pos:column="45">1<pos:position pos:line="26" pos:column="46"/></literal></expr> <comment type="block" pos:line="26" pos:column="47">/* slash */</comment>;<pos:position pos:line="26" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then> <elseif pos:line="27" pos:column="11">else <if pos:line="27" pos:column="16">if <condition pos:line="27" pos:column="19">(<expr><operator pos:line="27" pos:column="20">!<pos:position pos:line="27" pos:column="21"/></operator><call><name pos:line="27" pos:column="21">is_absolute_path<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name><name pos:line="27" pos:column="38">pat<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">-&gt;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="43">buf<pos:position pos:line="27" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="48"/></condition><then pos:line="27" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">strbuf_insert<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">pat<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="36">0<pos:position pos:line="28" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="39">"**/"<pos:position pos:line="28" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="46">3<pos:position pos:line="28" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">pat<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">len<pos:position pos:line="30" pos:column="21"/></name></name> <operator pos:line="30" pos:column="22">&amp;&amp;<pos:position pos:line="30" pos:column="32"/></operator> <call><name pos:line="30" pos:column="25">is_dir_sep<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><name><name pos:line="30" pos:column="36">pat<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="41">buf<pos:position pos:line="30" pos:column="44"/></name><index pos:line="30" pos:column="44">[<expr><name><name pos:line="30" pos:column="45">pat<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">-&gt;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="50">len<pos:position pos:line="30" pos:column="53"/></name></name> <operator pos:line="30" pos:column="54">-<pos:position pos:line="30" pos:column="55"/></operator> <literal type="number" pos:line="30" pos:column="56">1<pos:position pos:line="30" pos:column="57"/></literal></expr>]<pos:position pos:line="30" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="60"/></condition><then pos:line="30" pos:column="60">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">strbuf_addstr<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">pat<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="36">"**"<pos:position pos:line="31" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="33" pos:column="9">strbuf_release<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><operator pos:line="33" pos:column="24">&amp;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="25">path<pos:position pos:line="33" pos:column="29"/></name></expr></argument>)<pos:position pos:line="33" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
	<return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">prefix<pos:position pos:line="34" pos:column="22"/></name></expr>;<pos:position pos:line="34" pos:column="23"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

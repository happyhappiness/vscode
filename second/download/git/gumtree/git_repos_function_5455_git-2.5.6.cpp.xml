<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5455_git-2.5.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_pack_objects<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">argc<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">argv<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">prefix<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">use_internal_rev_list<pos:position pos:line="3" pos:column="34"/></name> <init pos:line="3" pos:column="35">= <expr><literal type="number" pos:line="3" pos:column="37">0<pos:position pos:line="3" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">thin<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><literal type="number" pos:line="4" pos:column="20">0<pos:position pos:line="4" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">shallow<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">all_progress_implied<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><literal type="number" pos:line="6" pos:column="36">0<pos:position pos:line="6" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">argv_array<pos:position pos:line="7" pos:column="26"/></name></name></type> <name pos:line="7" pos:column="27">rp<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><name pos:line="7" pos:column="32">ARGV_ARRAY_INIT<pos:position pos:line="7" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">rev_list_unpacked<pos:position pos:line="8" pos:column="30"/></name> <init pos:line="8" pos:column="31">= <expr><literal type="number" pos:line="8" pos:column="33">0<pos:position pos:line="8" pos:column="34"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="36">rev_list_all<pos:position pos:line="8" pos:column="48"/></name> <init pos:line="8" pos:column="49">= <expr><literal type="number" pos:line="8" pos:column="51">0<pos:position pos:line="8" pos:column="52"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="54">rev_list_reflog<pos:position pos:line="8" pos:column="69"/></name> <init pos:line="8" pos:column="70">= <expr><literal type="number" pos:line="8" pos:column="72">0<pos:position pos:line="8" pos:column="73"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="74"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">rev_list_index<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><literal type="number" pos:line="9" pos:column="30">0<pos:position pos:line="9" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">option<pos:position pos:line="10" pos:column="22"/></name></name></type> <name><name pos:line="10" pos:column="23">pack_objects_options<pos:position pos:line="10" pos:column="43"/></name><index pos:line="10" pos:column="43">[]<pos:position pos:line="10" pos:column="45"/></index></name> <init pos:line="10" pos:column="46">= <expr><block pos:line="10" pos:column="48">{
		<expr><call><name pos:line="11" pos:column="17">OPT_SET_INT<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><literal type="char" pos:line="11" pos:column="29">'q'<pos:position pos:line="11" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="34">"quiet"<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="43">&amp;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="44">progress<pos:position pos:line="11" pos:column="52"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="12" pos:column="29">N_<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><literal type="string" pos:line="12" pos:column="32">"do not show progress meter"<pos:position pos:line="12" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="63">0<pos:position pos:line="12" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>,
		<expr><call><name pos:line="13" pos:column="17">OPT_SET_INT<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><literal type="number" pos:line="13" pos:column="29">0<pos:position pos:line="13" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="32">"progress"<pos:position pos:line="13" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="44">&amp;<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="45">progress<pos:position pos:line="13" pos:column="53"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="14" pos:column="29">N_<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><literal type="string" pos:line="14" pos:column="32">"show progress meter"<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="56">1<pos:position pos:line="14" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>,
		<expr><call><name pos:line="15" pos:column="17">OPT_SET_INT<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><literal type="number" pos:line="15" pos:column="29">0<pos:position pos:line="15" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="32">"all-progress"<pos:position pos:line="15" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="48">&amp;<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="49">progress<pos:position pos:line="15" pos:column="57"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="16" pos:column="29">N_<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><literal type="string" pos:line="16" pos:column="32">"show progress meter during object writing phase"<pos:position pos:line="16" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="84">2<pos:position pos:line="16" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="86"/></argument_list></call></expr>,
		<expr><call><name pos:line="17" pos:column="17">OPT_BOOL<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><literal type="number" pos:line="17" pos:column="26">0<pos:position pos:line="17" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="29">"all-progress-implied"<pos:position pos:line="17" pos:column="51"/></literal></expr></argument>,
			 <argument><expr><operator pos:line="18" pos:column="26">&amp;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="27">all_progress_implied<pos:position pos:line="18" pos:column="47"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="19" pos:column="26">N_<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><literal type="string" pos:line="19" pos:column="29">"similar to --all-progress when progress meter is shown"<pos:position pos:line="19" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="87"/></argument_list></call></expr>,
		<expr><block pos:line="20" pos:column="17">{ <expr><name pos:line="20" pos:column="19">OPTION_CALLBACK<pos:position pos:line="20" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="20" pos:column="36">0<pos:position pos:line="20" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="20" pos:column="39">"index-version"<pos:position pos:line="20" pos:column="54"/></literal></expr>, <expr><name pos:line="20" pos:column="56">NULL<pos:position pos:line="20" pos:column="60"/></name></expr>, <expr><call><name pos:line="20" pos:column="62">N_<pos:position pos:line="20" pos:column="64"/></name><argument_list pos:line="20" pos:column="64">(<argument><expr><literal type="string" pos:line="20" pos:column="65">"version[,offset]"<pos:position pos:line="20" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="84"/></argument_list></call></expr>,
		  <expr><call><name pos:line="21" pos:column="19">N_<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><literal type="string" pos:line="21" pos:column="22">"write the pack index file in the specified idx format version"<pos:position pos:line="21" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="86"/></argument_list></call></expr>,
		  <expr><literal type="number" pos:line="22" pos:column="19">0<pos:position pos:line="22" pos:column="20"/></literal></expr>, <expr><name pos:line="22" pos:column="22">option_parse_index_version<pos:position pos:line="22" pos:column="48"/></name></expr> }<pos:position pos:line="22" pos:column="50"/></block></expr>,
		<expr><call><name pos:line="23" pos:column="17">OPT_ULONG<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><literal type="number" pos:line="23" pos:column="27">0<pos:position pos:line="23" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="30">"max-pack-size"<pos:position pos:line="23" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="47">&amp;<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="48">pack_size_limit<pos:position pos:line="23" pos:column="63"/></name></expr></argument>,
			  <argument><expr><call><name pos:line="24" pos:column="27">N_<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><literal type="string" pos:line="24" pos:column="30">"maximum size of each output pack file"<pos:position pos:line="24" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>,
		<expr><call><name pos:line="25" pos:column="17">OPT_BOOL<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><literal type="number" pos:line="25" pos:column="26">0<pos:position pos:line="25" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="29">"local"<pos:position pos:line="25" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="38">&amp;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="39">local<pos:position pos:line="25" pos:column="44"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="26" pos:column="26">N_<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><literal type="string" pos:line="26" pos:column="29">"ignore borrowed objects from alternate object store"<pos:position pos:line="26" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="84"/></argument_list></call></expr>,
		<expr><call><name pos:line="27" pos:column="17">OPT_BOOL<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><literal type="number" pos:line="27" pos:column="26">0<pos:position pos:line="27" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="29">"incremental"<pos:position pos:line="27" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="44">&amp;<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="45">incremental<pos:position pos:line="27" pos:column="56"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="28" pos:column="26">N_<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><literal type="string" pos:line="28" pos:column="29">"ignore packed objects"<pos:position pos:line="28" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr>,
		<expr><call><name pos:line="29" pos:column="17">OPT_INTEGER<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="number" pos:line="29" pos:column="29">0<pos:position pos:line="29" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="32">"window"<pos:position pos:line="29" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="42">&amp;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="43">window<pos:position pos:line="29" pos:column="49"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="30" pos:column="29">N_<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><literal type="string" pos:line="30" pos:column="32">"limit pack window by objects"<pos:position pos:line="30" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="64"/></argument_list></call></expr>,
		<expr><call><name pos:line="31" pos:column="17">OPT_ULONG<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><literal type="number" pos:line="31" pos:column="27">0<pos:position pos:line="31" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="30">"window-memory"<pos:position pos:line="31" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="31" pos:column="47">&amp;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="48">window_memory_limit<pos:position pos:line="31" pos:column="67"/></name></expr></argument>,
			  <argument><expr><call><name pos:line="32" pos:column="27">N_<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><literal type="string" pos:line="32" pos:column="30">"limit pack window by memory in addition to object limit"<pos:position pos:line="32" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="89"/></argument_list></call></expr>,
		<expr><call><name pos:line="33" pos:column="17">OPT_INTEGER<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><literal type="number" pos:line="33" pos:column="29">0<pos:position pos:line="33" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="32">"depth"<pos:position pos:line="33" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="41">&amp;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="42">depth<pos:position pos:line="33" pos:column="47"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="34" pos:column="29">N_<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><literal type="string" pos:line="34" pos:column="32">"maximum length of delta chain allowed in the resulting pack"<pos:position pos:line="34" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="95"/></argument_list></call></expr>,
		<expr><call><name pos:line="35" pos:column="17">OPT_BOOL<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><literal type="number" pos:line="35" pos:column="26">0<pos:position pos:line="35" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="29">"reuse-delta"<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="44">&amp;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="45">reuse_delta<pos:position pos:line="35" pos:column="56"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="36" pos:column="26">N_<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><literal type="string" pos:line="36" pos:column="29">"reuse existing deltas"<pos:position pos:line="36" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr>,
		<expr><call><name pos:line="37" pos:column="17">OPT_BOOL<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><literal type="number" pos:line="37" pos:column="26">0<pos:position pos:line="37" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="29">"reuse-object"<pos:position pos:line="37" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="37" pos:column="45">&amp;<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="46">reuse_object<pos:position pos:line="37" pos:column="58"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="38" pos:column="26">N_<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><literal type="string" pos:line="38" pos:column="29">"reuse existing objects"<pos:position pos:line="38" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr>,
		<expr><call><name pos:line="39" pos:column="17">OPT_BOOL<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><literal type="number" pos:line="39" pos:column="26">0<pos:position pos:line="39" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="29">"delta-base-offset"<pos:position pos:line="39" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="39" pos:column="50">&amp;<pos:position pos:line="39" pos:column="55"/></operator><name pos:line="39" pos:column="51">allow_ofs_delta<pos:position pos:line="39" pos:column="66"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="40" pos:column="26">N_<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><literal type="string" pos:line="40" pos:column="29">"use OFS_DELTA objects"<pos:position pos:line="40" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></call></expr>,
		<expr><call><name pos:line="41" pos:column="17">OPT_INTEGER<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><literal type="number" pos:line="41" pos:column="29">0<pos:position pos:line="41" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="32">"threads"<pos:position pos:line="41" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="43">&amp;<pos:position pos:line="41" pos:column="48"/></operator><name pos:line="41" pos:column="44">delta_search_threads<pos:position pos:line="41" pos:column="64"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="42" pos:column="29">N_<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><literal type="string" pos:line="42" pos:column="32">"use threads when searching for best delta matches"<pos:position pos:line="42" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="85"/></argument_list></call></expr>,
		<expr><call><name pos:line="43" pos:column="17">OPT_BOOL<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><literal type="number" pos:line="43" pos:column="26">0<pos:position pos:line="43" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="29">"non-empty"<pos:position pos:line="43" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="42">&amp;<pos:position pos:line="43" pos:column="47"/></operator><name pos:line="43" pos:column="43">non_empty<pos:position pos:line="43" pos:column="52"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="44" pos:column="26">N_<pos:position pos:line="44" pos:column="28"/></name><argument_list pos:line="44" pos:column="28">(<argument><expr><literal type="string" pos:line="44" pos:column="29">"do not create an empty pack output"<pos:position pos:line="44" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="67"/></argument_list></call></expr>,
		<expr><call><name pos:line="45" pos:column="17">OPT_BOOL<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><literal type="number" pos:line="45" pos:column="26">0<pos:position pos:line="45" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="29">"revs"<pos:position pos:line="45" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="45" pos:column="37">&amp;<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="38">use_internal_rev_list<pos:position pos:line="45" pos:column="59"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="46" pos:column="26">N_<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><literal type="string" pos:line="46" pos:column="29">"read revision arguments from standard input"<pos:position pos:line="46" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="76"/></argument_list></call></expr>,
		<expr><block pos:line="47" pos:column="17">{ <expr><name pos:line="47" pos:column="19">OPTION_SET_INT<pos:position pos:line="47" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="47" pos:column="35">0<pos:position pos:line="47" pos:column="36"/></literal></expr>, <expr><literal type="string" pos:line="47" pos:column="38">"unpacked"<pos:position pos:line="47" pos:column="48"/></literal></expr>, <expr><operator pos:line="47" pos:column="50">&amp;<pos:position pos:line="47" pos:column="55"/></operator><name pos:line="47" pos:column="51">rev_list_unpacked<pos:position pos:line="47" pos:column="68"/></name></expr>, <expr><name pos:line="47" pos:column="70">NULL<pos:position pos:line="47" pos:column="74"/></name></expr>,
		  <expr><call><name pos:line="48" pos:column="19">N_<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><literal type="string" pos:line="48" pos:column="22">"limit the objects to those that are not yet packed"<pos:position pos:line="48" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="75"/></argument_list></call></expr>,
		  <expr><name pos:line="49" pos:column="19">PARSE_OPT_NOARG<pos:position pos:line="49" pos:column="34"/></name> <operator pos:line="49" pos:column="35">|<pos:position pos:line="49" pos:column="36"/></operator> <name pos:line="49" pos:column="37">PARSE_OPT_NONEG<pos:position pos:line="49" pos:column="52"/></name></expr>, <expr><name pos:line="49" pos:column="54">NULL<pos:position pos:line="49" pos:column="58"/></name></expr>, <expr><literal type="number" pos:line="49" pos:column="60">1<pos:position pos:line="49" pos:column="61"/></literal></expr> }<pos:position pos:line="49" pos:column="63"/></block></expr>,
		<expr><block pos:line="50" pos:column="17">{ <expr><name pos:line="50" pos:column="19">OPTION_SET_INT<pos:position pos:line="50" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="50" pos:column="35">0<pos:position pos:line="50" pos:column="36"/></literal></expr>, <expr><literal type="string" pos:line="50" pos:column="38">"all"<pos:position pos:line="50" pos:column="43"/></literal></expr>, <expr><operator pos:line="50" pos:column="45">&amp;<pos:position pos:line="50" pos:column="50"/></operator><name pos:line="50" pos:column="46">rev_list_all<pos:position pos:line="50" pos:column="58"/></name></expr>, <expr><name pos:line="50" pos:column="60">NULL<pos:position pos:line="50" pos:column="64"/></name></expr>,
		  <expr><call><name pos:line="51" pos:column="19">N_<pos:position pos:line="51" pos:column="21"/></name><argument_list pos:line="51" pos:column="21">(<argument><expr><literal type="string" pos:line="51" pos:column="22">"include objects reachable from any reference"<pos:position pos:line="51" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="69"/></argument_list></call></expr>,
		  <expr><name pos:line="52" pos:column="19">PARSE_OPT_NOARG<pos:position pos:line="52" pos:column="34"/></name> <operator pos:line="52" pos:column="35">|<pos:position pos:line="52" pos:column="36"/></operator> <name pos:line="52" pos:column="37">PARSE_OPT_NONEG<pos:position pos:line="52" pos:column="52"/></name></expr>, <expr><name pos:line="52" pos:column="54">NULL<pos:position pos:line="52" pos:column="58"/></name></expr>, <expr><literal type="number" pos:line="52" pos:column="60">1<pos:position pos:line="52" pos:column="61"/></literal></expr> }<pos:position pos:line="52" pos:column="63"/></block></expr>,
		<expr><block pos:line="53" pos:column="17">{ <expr><name pos:line="53" pos:column="19">OPTION_SET_INT<pos:position pos:line="53" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="53" pos:column="35">0<pos:position pos:line="53" pos:column="36"/></literal></expr>, <expr><literal type="string" pos:line="53" pos:column="38">"reflog"<pos:position pos:line="53" pos:column="46"/></literal></expr>, <expr><operator pos:line="53" pos:column="48">&amp;<pos:position pos:line="53" pos:column="53"/></operator><name pos:line="53" pos:column="49">rev_list_reflog<pos:position pos:line="53" pos:column="64"/></name></expr>, <expr><name pos:line="53" pos:column="66">NULL<pos:position pos:line="53" pos:column="70"/></name></expr>,
		  <expr><call><name pos:line="54" pos:column="19">N_<pos:position pos:line="54" pos:column="21"/></name><argument_list pos:line="54" pos:column="21">(<argument><expr><literal type="string" pos:line="54" pos:column="22">"include objects referred by reflog entries"<pos:position pos:line="54" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="67"/></argument_list></call></expr>,
		  <expr><name pos:line="55" pos:column="19">PARSE_OPT_NOARG<pos:position pos:line="55" pos:column="34"/></name> <operator pos:line="55" pos:column="35">|<pos:position pos:line="55" pos:column="36"/></operator> <name pos:line="55" pos:column="37">PARSE_OPT_NONEG<pos:position pos:line="55" pos:column="52"/></name></expr>, <expr><name pos:line="55" pos:column="54">NULL<pos:position pos:line="55" pos:column="58"/></name></expr>, <expr><literal type="number" pos:line="55" pos:column="60">1<pos:position pos:line="55" pos:column="61"/></literal></expr> }<pos:position pos:line="55" pos:column="63"/></block></expr>,
		<expr><block pos:line="56" pos:column="17">{ <expr><name pos:line="56" pos:column="19">OPTION_SET_INT<pos:position pos:line="56" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="56" pos:column="35">0<pos:position pos:line="56" pos:column="36"/></literal></expr>, <expr><literal type="string" pos:line="56" pos:column="38">"indexed-objects"<pos:position pos:line="56" pos:column="55"/></literal></expr>, <expr><operator pos:line="56" pos:column="57">&amp;<pos:position pos:line="56" pos:column="62"/></operator><name pos:line="56" pos:column="58">rev_list_index<pos:position pos:line="56" pos:column="72"/></name></expr>, <expr><name pos:line="56" pos:column="74">NULL<pos:position pos:line="56" pos:column="78"/></name></expr>,
		  <expr><call><name pos:line="57" pos:column="19">N_<pos:position pos:line="57" pos:column="21"/></name><argument_list pos:line="57" pos:column="21">(<argument><expr><literal type="string" pos:line="57" pos:column="22">"include objects referred to by the index"<pos:position pos:line="57" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="65"/></argument_list></call></expr>,
		  <expr><name pos:line="58" pos:column="19">PARSE_OPT_NOARG<pos:position pos:line="58" pos:column="34"/></name> <operator pos:line="58" pos:column="35">|<pos:position pos:line="58" pos:column="36"/></operator> <name pos:line="58" pos:column="37">PARSE_OPT_NONEG<pos:position pos:line="58" pos:column="52"/></name></expr>, <expr><name pos:line="58" pos:column="54">NULL<pos:position pos:line="58" pos:column="58"/></name></expr>, <expr><literal type="number" pos:line="58" pos:column="60">1<pos:position pos:line="58" pos:column="61"/></literal></expr> }<pos:position pos:line="58" pos:column="63"/></block></expr>,
		<expr><call><name pos:line="59" pos:column="17">OPT_BOOL<pos:position pos:line="59" pos:column="25"/></name><argument_list pos:line="59" pos:column="25">(<argument><expr><literal type="number" pos:line="59" pos:column="26">0<pos:position pos:line="59" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="29">"stdout"<pos:position pos:line="59" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="59" pos:column="39">&amp;<pos:position pos:line="59" pos:column="44"/></operator><name pos:line="59" pos:column="40">pack_to_stdout<pos:position pos:line="59" pos:column="54"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="60" pos:column="26">N_<pos:position pos:line="60" pos:column="28"/></name><argument_list pos:line="60" pos:column="28">(<argument><expr><literal type="string" pos:line="60" pos:column="29">"output pack to stdout"<pos:position pos:line="60" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="54"/></argument_list></call></expr>,
		<expr><call><name pos:line="61" pos:column="17">OPT_BOOL<pos:position pos:line="61" pos:column="25"/></name><argument_list pos:line="61" pos:column="25">(<argument><expr><literal type="number" pos:line="61" pos:column="26">0<pos:position pos:line="61" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="29">"include-tag"<pos:position pos:line="61" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="61" pos:column="44">&amp;<pos:position pos:line="61" pos:column="49"/></operator><name pos:line="61" pos:column="45">include_tag<pos:position pos:line="61" pos:column="56"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="62" pos:column="26">N_<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><literal type="string" pos:line="62" pos:column="29">"include tag objects that refer to objects to be packed"<pos:position pos:line="62" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="87"/></argument_list></call></expr>,
		<expr><call><name pos:line="63" pos:column="17">OPT_BOOL<pos:position pos:line="63" pos:column="25"/></name><argument_list pos:line="63" pos:column="25">(<argument><expr><literal type="number" pos:line="63" pos:column="26">0<pos:position pos:line="63" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="29">"keep-unreachable"<pos:position pos:line="63" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="63" pos:column="49">&amp;<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="50">keep_unreachable<pos:position pos:line="63" pos:column="66"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="64" pos:column="26">N_<pos:position pos:line="64" pos:column="28"/></name><argument_list pos:line="64" pos:column="28">(<argument><expr><literal type="string" pos:line="64" pos:column="29">"keep unreachable objects"<pos:position pos:line="64" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="57"/></argument_list></call></expr>,
		<expr><block pos:line="65" pos:column="17">{ <expr><name pos:line="65" pos:column="19">OPTION_CALLBACK<pos:position pos:line="65" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="65" pos:column="36">0<pos:position pos:line="65" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="65" pos:column="39">"unpack-unreachable"<pos:position pos:line="65" pos:column="59"/></literal></expr>, <expr><name pos:line="65" pos:column="61">NULL<pos:position pos:line="65" pos:column="65"/></name></expr>, <expr><call><name pos:line="65" pos:column="67">N_<pos:position pos:line="65" pos:column="69"/></name><argument_list pos:line="65" pos:column="69">(<argument><expr><literal type="string" pos:line="65" pos:column="70">"time"<pos:position pos:line="65" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="77"/></argument_list></call></expr>,
		  <expr><call><name pos:line="66" pos:column="19">N_<pos:position pos:line="66" pos:column="21"/></name><argument_list pos:line="66" pos:column="21">(<argument><expr><literal type="string" pos:line="66" pos:column="22">"unpack unreachable objects newer than &lt;time&gt;"<pos:position pos:line="66" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="69"/></argument_list></call></expr>,
		  <expr><name pos:line="67" pos:column="19">PARSE_OPT_OPTARG<pos:position pos:line="67" pos:column="35"/></name></expr>, <expr><name pos:line="67" pos:column="37">option_parse_unpack_unreachable<pos:position pos:line="67" pos:column="68"/></name></expr> }<pos:position pos:line="67" pos:column="70"/></block></expr>,
		<expr><call><name pos:line="68" pos:column="17">OPT_BOOL<pos:position pos:line="68" pos:column="25"/></name><argument_list pos:line="68" pos:column="25">(<argument><expr><literal type="number" pos:line="68" pos:column="26">0<pos:position pos:line="68" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="29">"thin"<pos:position pos:line="68" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="68" pos:column="37">&amp;<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="38">thin<pos:position pos:line="68" pos:column="42"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="69" pos:column="26">N_<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><literal type="string" pos:line="69" pos:column="29">"create thin packs"<pos:position pos:line="69" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="69" pos:column="50"/></argument_list></call></expr>,
		<expr><call><name pos:line="70" pos:column="17">OPT_BOOL<pos:position pos:line="70" pos:column="25"/></name><argument_list pos:line="70" pos:column="25">(<argument><expr><literal type="number" pos:line="70" pos:column="26">0<pos:position pos:line="70" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="29">"shallow"<pos:position pos:line="70" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="70" pos:column="40">&amp;<pos:position pos:line="70" pos:column="45"/></operator><name pos:line="70" pos:column="41">shallow<pos:position pos:line="70" pos:column="48"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="71" pos:column="26">N_<pos:position pos:line="71" pos:column="28"/></name><argument_list pos:line="71" pos:column="28">(<argument><expr><literal type="string" pos:line="71" pos:column="29">"create packs suitable for shallow fetches"<pos:position pos:line="71" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="74"/></argument_list></call></expr>,
		<expr><call><name pos:line="72" pos:column="17">OPT_BOOL<pos:position pos:line="72" pos:column="25"/></name><argument_list pos:line="72" pos:column="25">(<argument><expr><literal type="number" pos:line="72" pos:column="26">0<pos:position pos:line="72" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="29">"honor-pack-keep"<pos:position pos:line="72" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="72" pos:column="48">&amp;<pos:position pos:line="72" pos:column="53"/></operator><name pos:line="72" pos:column="49">ignore_packed_keep<pos:position pos:line="72" pos:column="67"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="73" pos:column="26">N_<pos:position pos:line="73" pos:column="28"/></name><argument_list pos:line="73" pos:column="28">(<argument><expr><literal type="string" pos:line="73" pos:column="29">"ignore packs that have companion .keep file"<pos:position pos:line="73" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="76"/></argument_list></call></expr>,
		<expr><call><name pos:line="74" pos:column="17">OPT_INTEGER<pos:position pos:line="74" pos:column="28"/></name><argument_list pos:line="74" pos:column="28">(<argument><expr><literal type="number" pos:line="74" pos:column="29">0<pos:position pos:line="74" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="32">"compression"<pos:position pos:line="74" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="74" pos:column="47">&amp;<pos:position pos:line="74" pos:column="52"/></operator><name pos:line="74" pos:column="48">pack_compression_level<pos:position pos:line="74" pos:column="70"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="75" pos:column="29">N_<pos:position pos:line="75" pos:column="31"/></name><argument_list pos:line="75" pos:column="31">(<argument><expr><literal type="string" pos:line="75" pos:column="32">"pack compression level"<pos:position pos:line="75" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="58"/></argument_list></call></expr>,
		<expr><call><name pos:line="76" pos:column="17">OPT_SET_INT<pos:position pos:line="76" pos:column="28"/></name><argument_list pos:line="76" pos:column="28">(<argument><expr><literal type="number" pos:line="76" pos:column="29">0<pos:position pos:line="76" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="32">"keep-true-parents"<pos:position pos:line="76" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="76" pos:column="53">&amp;<pos:position pos:line="76" pos:column="58"/></operator><name pos:line="76" pos:column="54">grafts_replace_parents<pos:position pos:line="76" pos:column="76"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="77" pos:column="29">N_<pos:position pos:line="77" pos:column="31"/></name><argument_list pos:line="77" pos:column="31">(<argument><expr><literal type="string" pos:line="77" pos:column="32">"do not hide commits by grafts"<pos:position pos:line="77" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="66">0<pos:position pos:line="77" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="68"/></argument_list></call></expr>,
		<expr><call><name pos:line="78" pos:column="17">OPT_BOOL<pos:position pos:line="78" pos:column="25"/></name><argument_list pos:line="78" pos:column="25">(<argument><expr><literal type="number" pos:line="78" pos:column="26">0<pos:position pos:line="78" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="29">"use-bitmap-index"<pos:position pos:line="78" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="78" pos:column="49">&amp;<pos:position pos:line="78" pos:column="54"/></operator><name pos:line="78" pos:column="50">use_bitmap_index<pos:position pos:line="78" pos:column="66"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="79" pos:column="26">N_<pos:position pos:line="79" pos:column="28"/></name><argument_list pos:line="79" pos:column="28">(<argument><expr><literal type="string" pos:line="79" pos:column="29">"use a bitmap index if available to speed up counting objects"<pos:position pos:line="79" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="93"/></argument_list></call></expr>,
		<expr><call><name pos:line="80" pos:column="17">OPT_BOOL<pos:position pos:line="80" pos:column="25"/></name><argument_list pos:line="80" pos:column="25">(<argument><expr><literal type="number" pos:line="80" pos:column="26">0<pos:position pos:line="80" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="29">"write-bitmap-index"<pos:position pos:line="80" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="80" pos:column="51">&amp;<pos:position pos:line="80" pos:column="56"/></operator><name pos:line="80" pos:column="52">write_bitmap_index<pos:position pos:line="80" pos:column="70"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="81" pos:column="26">N_<pos:position pos:line="81" pos:column="28"/></name><argument_list pos:line="81" pos:column="28">(<argument><expr><literal type="string" pos:line="81" pos:column="29">"write a bitmap index together with the pack index"<pos:position pos:line="81" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="82"/></argument_list></call></expr>,
		<expr><call><name pos:line="82" pos:column="17">OPT_END<pos:position pos:line="82" pos:column="24"/></name><argument_list pos:line="82" pos:column="24">()<pos:position pos:line="82" pos:column="26"/></argument_list></call></expr>,
	}<pos:position pos:line="83" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="83" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="85" pos:column="9">check_replace_refs<pos:position pos:line="85" pos:column="27"/></name> <operator pos:line="85" pos:column="28">=<pos:position pos:line="85" pos:column="29"/></operator> <literal type="number" pos:line="85" pos:column="30">0<pos:position pos:line="85" pos:column="31"/></literal></expr>;<pos:position pos:line="85" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="87" pos:column="9">reset_pack_idx_option<pos:position pos:line="87" pos:column="30"/></name><argument_list pos:line="87" pos:column="30">(<argument><expr><operator pos:line="87" pos:column="31">&amp;<pos:position pos:line="87" pos:column="36"/></operator><name pos:line="87" pos:column="32">pack_idx_opts<pos:position pos:line="87" pos:column="45"/></name></expr></argument>)<pos:position pos:line="87" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="88" pos:column="9">git_config<pos:position pos:line="88" pos:column="19"/></name><argument_list pos:line="88" pos:column="19">(<argument><expr><name pos:line="88" pos:column="20">git_pack_config<pos:position pos:line="88" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="37">NULL<pos:position pos:line="88" pos:column="41"/></name></expr></argument>)<pos:position pos:line="88" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="43"/></expr_stmt>
	<if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><operator pos:line="89" pos:column="13">!<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="14">pack_compression_seen<pos:position pos:line="89" pos:column="35"/></name> <operator pos:line="89" pos:column="36">&amp;&amp;<pos:position pos:line="89" pos:column="46"/></operator> <name pos:line="89" pos:column="39">core_compression_seen<pos:position pos:line="89" pos:column="60"/></name></expr>)<pos:position pos:line="89" pos:column="61"/></condition><then pos:line="89" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><name pos:line="90" pos:column="17">pack_compression_level<pos:position pos:line="90" pos:column="39"/></name> <operator pos:line="90" pos:column="40">=<pos:position pos:line="90" pos:column="41"/></operator> <name pos:line="90" pos:column="42">core_compression_level<pos:position pos:line="90" pos:column="64"/></name></expr>;<pos:position pos:line="90" pos:column="65"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="92" pos:column="9">progress<pos:position pos:line="92" pos:column="17"/></name> <operator pos:line="92" pos:column="18">=<pos:position pos:line="92" pos:column="19"/></operator> <call><name pos:line="92" pos:column="20">isatty<pos:position pos:line="92" pos:column="26"/></name><argument_list pos:line="92" pos:column="26">(<argument><expr><literal type="number" pos:line="92" pos:column="27">2<pos:position pos:line="92" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="93" pos:column="9">argc<pos:position pos:line="93" pos:column="13"/></name> <operator pos:line="93" pos:column="14">=<pos:position pos:line="93" pos:column="15"/></operator> <call><name pos:line="93" pos:column="16">parse_options<pos:position pos:line="93" pos:column="29"/></name><argument_list pos:line="93" pos:column="29">(<argument><expr><name pos:line="93" pos:column="30">argc<pos:position pos:line="93" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="36">argv<pos:position pos:line="93" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="42">prefix<pos:position pos:line="93" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="50">pack_objects_options<pos:position pos:line="93" pos:column="70"/></name></expr></argument>,
			     <argument><expr><name pos:line="94" pos:column="30">pack_usage<pos:position pos:line="94" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="42">0<pos:position pos:line="94" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="45"/></expr_stmt>

	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name pos:line="96" pos:column="13">argc<pos:position pos:line="96" pos:column="17"/></name></expr>)<pos:position pos:line="96" pos:column="18"/></condition><then pos:line="96" pos:column="18"> <block pos:line="96" pos:column="19">{
		<expr_stmt><expr><name pos:line="97" pos:column="17">base_name<pos:position pos:line="97" pos:column="26"/></name> <operator pos:line="97" pos:column="27">=<pos:position pos:line="97" pos:column="28"/></operator> <name><name pos:line="97" pos:column="29">argv<pos:position pos:line="97" pos:column="33"/></name><index pos:line="97" pos:column="33">[<expr><literal type="number" pos:line="97" pos:column="34">0<pos:position pos:line="97" pos:column="35"/></literal></expr>]<pos:position pos:line="97" pos:column="36"/></index></name></expr>;<pos:position pos:line="97" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="98" pos:column="17">argc<pos:position pos:line="98" pos:column="21"/></name><operator pos:line="98" pos:column="21">--<pos:position pos:line="98" pos:column="23"/></operator></expr>;<pos:position pos:line="98" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="99" pos:column="10"/></block></then></if>
	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">pack_to_stdout<pos:position pos:line="100" pos:column="27"/></name> <operator pos:line="100" pos:column="28">!=<pos:position pos:line="100" pos:column="30"/></operator> <operator pos:line="100" pos:column="31">!<pos:position pos:line="100" pos:column="32"/></operator><name pos:line="100" pos:column="32">base_name<pos:position pos:line="100" pos:column="41"/></name> <operator pos:line="100" pos:column="42">||<pos:position pos:line="100" pos:column="44"/></operator> <name pos:line="100" pos:column="45">argc<pos:position pos:line="100" pos:column="49"/></name></expr>)<pos:position pos:line="100" pos:column="50"/></condition><then pos:line="100" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="101" pos:column="17">usage_with_options<pos:position pos:line="101" pos:column="35"/></name><argument_list pos:line="101" pos:column="35">(<argument><expr><name pos:line="101" pos:column="36">pack_usage<pos:position pos:line="101" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="48">pack_objects_options<pos:position pos:line="101" pos:column="68"/></name></expr></argument>)<pos:position pos:line="101" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="70"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="103" pos:column="9">argv_array_push<pos:position pos:line="103" pos:column="24"/></name><argument_list pos:line="103" pos:column="24">(<argument><expr><operator pos:line="103" pos:column="25">&amp;<pos:position pos:line="103" pos:column="30"/></operator><name pos:line="103" pos:column="26">rp<pos:position pos:line="103" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="30">"pack-objects"<pos:position pos:line="103" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="46"/></expr_stmt>
	<if pos:line="104" pos:column="9">if <condition pos:line="104" pos:column="12">(<expr><name pos:line="104" pos:column="13">thin<pos:position pos:line="104" pos:column="17"/></name></expr>)<pos:position pos:line="104" pos:column="18"/></condition><then pos:line="104" pos:column="18"> <block pos:line="104" pos:column="19">{
		<expr_stmt><expr><name pos:line="105" pos:column="17">use_internal_rev_list<pos:position pos:line="105" pos:column="38"/></name> <operator pos:line="105" pos:column="39">=<pos:position pos:line="105" pos:column="40"/></operator> <literal type="number" pos:line="105" pos:column="41">1<pos:position pos:line="105" pos:column="42"/></literal></expr>;<pos:position pos:line="105" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="106" pos:column="17">argv_array_push<pos:position pos:line="106" pos:column="32"/></name><argument_list pos:line="106" pos:column="32">(<argument><expr><operator pos:line="106" pos:column="33">&amp;<pos:position pos:line="106" pos:column="38"/></operator><name pos:line="106" pos:column="34">rp<pos:position pos:line="106" pos:column="36"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="106" pos:column="38">shallow<pos:position pos:line="106" pos:column="45"/></name></expr>
				?<pos:position pos:line="107" pos:column="34"/></condition><then pos:line="107" pos:column="34"> <expr><literal type="string" pos:line="107" pos:column="35">"--objects-edge-aggressive"<pos:position pos:line="107" pos:column="62"/></literal></expr>
				<pos:position pos:line="108" pos:column="5"/></then><else pos:line="108" pos:column="33">: <expr><literal type="string" pos:line="108" pos:column="35">"--objects-edge"<pos:position pos:line="108" pos:column="51"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="108" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="109" pos:column="10"/></block></then> <else pos:line="109" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="17">argv_array_push<pos:position pos:line="110" pos:column="32"/></name><argument_list pos:line="110" pos:column="32">(<argument><expr><operator pos:line="110" pos:column="33">&amp;<pos:position pos:line="110" pos:column="38"/></operator><name pos:line="110" pos:column="34">rp<pos:position pos:line="110" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="38">"--objects"<pos:position pos:line="110" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="51"/></expr_stmt></block></else></if>

	<if pos:line="112" pos:column="9">if <condition pos:line="112" pos:column="12">(<expr><name pos:line="112" pos:column="13">rev_list_all<pos:position pos:line="112" pos:column="25"/></name></expr>)<pos:position pos:line="112" pos:column="26"/></condition><then pos:line="112" pos:column="26"> <block pos:line="112" pos:column="27">{
		<expr_stmt><expr><name pos:line="113" pos:column="17">use_internal_rev_list<pos:position pos:line="113" pos:column="38"/></name> <operator pos:line="113" pos:column="39">=<pos:position pos:line="113" pos:column="40"/></operator> <literal type="number" pos:line="113" pos:column="41">1<pos:position pos:line="113" pos:column="42"/></literal></expr>;<pos:position pos:line="113" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="114" pos:column="17">argv_array_push<pos:position pos:line="114" pos:column="32"/></name><argument_list pos:line="114" pos:column="32">(<argument><expr><operator pos:line="114" pos:column="33">&amp;<pos:position pos:line="114" pos:column="38"/></operator><name pos:line="114" pos:column="34">rp<pos:position pos:line="114" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="38">"--all"<pos:position pos:line="114" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="115" pos:column="10"/></block></then></if>
	<if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><name pos:line="116" pos:column="13">rev_list_reflog<pos:position pos:line="116" pos:column="28"/></name></expr>)<pos:position pos:line="116" pos:column="29"/></condition><then pos:line="116" pos:column="29"> <block pos:line="116" pos:column="30">{
		<expr_stmt><expr><name pos:line="117" pos:column="17">use_internal_rev_list<pos:position pos:line="117" pos:column="38"/></name> <operator pos:line="117" pos:column="39">=<pos:position pos:line="117" pos:column="40"/></operator> <literal type="number" pos:line="117" pos:column="41">1<pos:position pos:line="117" pos:column="42"/></literal></expr>;<pos:position pos:line="117" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="118" pos:column="17">argv_array_push<pos:position pos:line="118" pos:column="32"/></name><argument_list pos:line="118" pos:column="32">(<argument><expr><operator pos:line="118" pos:column="33">&amp;<pos:position pos:line="118" pos:column="38"/></operator><name pos:line="118" pos:column="34">rp<pos:position pos:line="118" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="38">"--reflog"<pos:position pos:line="118" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="119" pos:column="10"/></block></then></if>
	<if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><name pos:line="120" pos:column="13">rev_list_index<pos:position pos:line="120" pos:column="27"/></name></expr>)<pos:position pos:line="120" pos:column="28"/></condition><then pos:line="120" pos:column="28"> <block pos:line="120" pos:column="29">{
		<expr_stmt><expr><name pos:line="121" pos:column="17">use_internal_rev_list<pos:position pos:line="121" pos:column="38"/></name> <operator pos:line="121" pos:column="39">=<pos:position pos:line="121" pos:column="40"/></operator> <literal type="number" pos:line="121" pos:column="41">1<pos:position pos:line="121" pos:column="42"/></literal></expr>;<pos:position pos:line="121" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="122" pos:column="17">argv_array_push<pos:position pos:line="122" pos:column="32"/></name><argument_list pos:line="122" pos:column="32">(<argument><expr><operator pos:line="122" pos:column="33">&amp;<pos:position pos:line="122" pos:column="38"/></operator><name pos:line="122" pos:column="34">rp<pos:position pos:line="122" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="38">"--indexed-objects"<pos:position pos:line="122" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="123" pos:column="10"/></block></then></if>
	<if pos:line="124" pos:column="9">if <condition pos:line="124" pos:column="12">(<expr><name pos:line="124" pos:column="13">rev_list_unpacked<pos:position pos:line="124" pos:column="30"/></name></expr>)<pos:position pos:line="124" pos:column="31"/></condition><then pos:line="124" pos:column="31"> <block pos:line="124" pos:column="32">{
		<expr_stmt><expr><name pos:line="125" pos:column="17">use_internal_rev_list<pos:position pos:line="125" pos:column="38"/></name> <operator pos:line="125" pos:column="39">=<pos:position pos:line="125" pos:column="40"/></operator> <literal type="number" pos:line="125" pos:column="41">1<pos:position pos:line="125" pos:column="42"/></literal></expr>;<pos:position pos:line="125" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="126" pos:column="17">argv_array_push<pos:position pos:line="126" pos:column="32"/></name><argument_list pos:line="126" pos:column="32">(<argument><expr><operator pos:line="126" pos:column="33">&amp;<pos:position pos:line="126" pos:column="38"/></operator><name pos:line="126" pos:column="34">rp<pos:position pos:line="126" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="38">"--unpacked"<pos:position pos:line="126" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="127" pos:column="10"/></block></then></if>

	<if pos:line="129" pos:column="9">if <condition pos:line="129" pos:column="12">(<expr><operator pos:line="129" pos:column="13">!<pos:position pos:line="129" pos:column="14"/></operator><name pos:line="129" pos:column="14">reuse_object<pos:position pos:line="129" pos:column="26"/></name></expr>)<pos:position pos:line="129" pos:column="27"/></condition><then pos:line="129" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name pos:line="130" pos:column="17">reuse_delta<pos:position pos:line="130" pos:column="28"/></name> <operator pos:line="130" pos:column="29">=<pos:position pos:line="130" pos:column="30"/></operator> <literal type="number" pos:line="130" pos:column="31">0<pos:position pos:line="130" pos:column="32"/></literal></expr>;<pos:position pos:line="130" pos:column="33"/></expr_stmt></block></then></if>
	<if pos:line="131" pos:column="9">if <condition pos:line="131" pos:column="12">(<expr><name pos:line="131" pos:column="13">pack_compression_level<pos:position pos:line="131" pos:column="35"/></name> <operator pos:line="131" pos:column="36">==<pos:position pos:line="131" pos:column="38"/></operator> <operator pos:line="131" pos:column="39">-<pos:position pos:line="131" pos:column="40"/></operator><literal type="number" pos:line="131" pos:column="40">1<pos:position pos:line="131" pos:column="41"/></literal></expr>)<pos:position pos:line="131" pos:column="42"/></condition><then pos:line="131" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name pos:line="132" pos:column="17">pack_compression_level<pos:position pos:line="132" pos:column="39"/></name> <operator pos:line="132" pos:column="40">=<pos:position pos:line="132" pos:column="41"/></operator> <name pos:line="132" pos:column="42">Z_DEFAULT_COMPRESSION<pos:position pos:line="132" pos:column="63"/></name></expr>;<pos:position pos:line="132" pos:column="64"/></expr_stmt></block></then>
	<elseif pos:line="133" pos:column="9">else <if pos:line="133" pos:column="14">if <condition pos:line="133" pos:column="17">(<expr><name><name pos:line="133" pos:column="18">pack_compression_level<pos:position pos:line="133" pos:column="40"/></name> <argument_list type="generic" pos:line="133" pos:column="41">&lt; <argument><expr><literal type="number" pos:line="133" pos:column="43">0<pos:position pos:line="133" pos:column="44"/></literal> <operator pos:line="133" pos:column="45">||<pos:position pos:line="133" pos:column="47"/></operator> <name pos:line="133" pos:column="48">pack_compression_level<pos:position pos:line="133" pos:column="70"/></name></expr></argument> &gt;<pos:position pos:line="133" pos:column="75"/></argument_list></name> <name pos:line="133" pos:column="73">Z_BEST_COMPRESSION<pos:position pos:line="133" pos:column="91"/></name></expr>)<pos:position pos:line="133" pos:column="92"/></condition><then pos:line="133" pos:column="92">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="134" pos:column="17">die<pos:position pos:line="134" pos:column="20"/></name><argument_list pos:line="134" pos:column="20">(<argument><expr><literal type="string" pos:line="134" pos:column="21">"bad pack compression level %d"<pos:position pos:line="134" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="134" pos:column="54">pack_compression_level<pos:position pos:line="134" pos:column="76"/></name></expr></argument>)<pos:position pos:line="134" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="78"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="136" pos:column="9">if <condition pos:line="136" pos:column="12">(<expr><operator pos:line="136" pos:column="13">!<pos:position pos:line="136" pos:column="14"/></operator><name pos:line="136" pos:column="14">delta_search_threads<pos:position pos:line="136" pos:column="34"/></name></expr>)<pos:position pos:line="136" pos:column="35"/></condition><then pos:line="136" pos:column="35">	<comment type="block" pos:line="136" pos:column="41">/* --threads=0 means autodetect */</comment>
		<block type="pseudo"><expr_stmt><expr><name pos:line="137" pos:column="17">delta_search_threads<pos:position pos:line="137" pos:column="37"/></name> <operator pos:line="137" pos:column="38">=<pos:position pos:line="137" pos:column="39"/></operator> <call><name pos:line="137" pos:column="40">online_cpus<pos:position pos:line="137" pos:column="51"/></name><argument_list pos:line="137" pos:column="51">()<pos:position pos:line="137" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="54"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="139" pos:column="1">#<cpp:directive pos:line="139" pos:column="2">ifdef<pos:position pos:line="139" pos:column="7"/></cpp:directive> <name pos:line="139" pos:column="8">NO_PTHREADS<pos:position pos:line="139" pos:column="19"/></name></cpp:ifdef>
	<if pos:line="140" pos:column="9">if <condition pos:line="140" pos:column="12">(<expr><name pos:line="140" pos:column="13">delta_search_threads<pos:position pos:line="140" pos:column="33"/></name> <operator pos:line="140" pos:column="34">!=<pos:position pos:line="140" pos:column="36"/></operator> <literal type="number" pos:line="140" pos:column="37">1<pos:position pos:line="140" pos:column="38"/></literal></expr>)<pos:position pos:line="140" pos:column="39"/></condition><then pos:line="140" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="141" pos:column="17">warning<pos:position pos:line="141" pos:column="24"/></name><argument_list pos:line="141" pos:column="24">(<argument><expr><literal type="string" pos:line="141" pos:column="25">"no threads support, ignoring --threads"<pos:position pos:line="141" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="67"/></expr_stmt></block></then></if>
<cpp:endif pos:line="142" pos:column="1">#<cpp:directive pos:line="142" pos:column="2">endif<pos:position pos:line="142" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="143" pos:column="9">if <condition pos:line="143" pos:column="12">(<expr><operator pos:line="143" pos:column="13">!<pos:position pos:line="143" pos:column="14"/></operator><name pos:line="143" pos:column="14">pack_to_stdout<pos:position pos:line="143" pos:column="28"/></name> <operator pos:line="143" pos:column="29">&amp;&amp;<pos:position pos:line="143" pos:column="39"/></operator> <operator pos:line="143" pos:column="32">!<pos:position pos:line="143" pos:column="33"/></operator><name pos:line="143" pos:column="33">pack_size_limit<pos:position pos:line="143" pos:column="48"/></name></expr>)<pos:position pos:line="143" pos:column="49"/></condition><then pos:line="143" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><name pos:line="144" pos:column="17">pack_size_limit<pos:position pos:line="144" pos:column="32"/></name> <operator pos:line="144" pos:column="33">=<pos:position pos:line="144" pos:column="34"/></operator> <name pos:line="144" pos:column="35">pack_size_limit_cfg<pos:position pos:line="144" pos:column="54"/></name></expr>;<pos:position pos:line="144" pos:column="55"/></expr_stmt></block></then></if>
	<if pos:line="145" pos:column="9">if <condition pos:line="145" pos:column="12">(<expr><name pos:line="145" pos:column="13">pack_to_stdout<pos:position pos:line="145" pos:column="27"/></name> <operator pos:line="145" pos:column="28">&amp;&amp;<pos:position pos:line="145" pos:column="38"/></operator> <name pos:line="145" pos:column="31">pack_size_limit<pos:position pos:line="145" pos:column="46"/></name></expr>)<pos:position pos:line="145" pos:column="47"/></condition><then pos:line="145" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="146" pos:column="17">die<pos:position pos:line="146" pos:column="20"/></name><argument_list pos:line="146" pos:column="20">(<argument><expr><literal type="string" pos:line="146" pos:column="21">"--max-pack-size cannot be used to build a pack for transfer."<pos:position pos:line="146" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="85"/></expr_stmt></block></then></if>
	<if pos:line="147" pos:column="9">if <condition pos:line="147" pos:column="12">(<expr><name pos:line="147" pos:column="13">pack_size_limit<pos:position pos:line="147" pos:column="28"/></name> <operator pos:line="147" pos:column="29">&amp;&amp;<pos:position pos:line="147" pos:column="39"/></operator> <name pos:line="147" pos:column="32">pack_size_limit<pos:position pos:line="147" pos:column="47"/></name> <operator pos:line="147" pos:column="48">&lt;<pos:position pos:line="147" pos:column="52"/></operator> <literal type="number" pos:line="147" pos:column="50">1024<pos:position pos:line="147" pos:column="54"/></literal><operator pos:line="147" pos:column="54">*<pos:position pos:line="147" pos:column="55"/></operator><literal type="number" pos:line="147" pos:column="55">1024<pos:position pos:line="147" pos:column="59"/></literal></expr>)<pos:position pos:line="147" pos:column="60"/></condition><then pos:line="147" pos:column="60"> <block pos:line="147" pos:column="61">{
		<expr_stmt><expr><call><name pos:line="148" pos:column="17">warning<pos:position pos:line="148" pos:column="24"/></name><argument_list pos:line="148" pos:column="24">(<argument><expr><literal type="string" pos:line="148" pos:column="25">"minimum pack size limit is 1 MiB"<pos:position pos:line="148" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name pos:line="149" pos:column="17">pack_size_limit<pos:position pos:line="149" pos:column="32"/></name> <operator pos:line="149" pos:column="33">=<pos:position pos:line="149" pos:column="34"/></operator> <literal type="number" pos:line="149" pos:column="35">1024<pos:position pos:line="149" pos:column="39"/></literal><operator pos:line="149" pos:column="39">*<pos:position pos:line="149" pos:column="40"/></operator><literal type="number" pos:line="149" pos:column="40">1024<pos:position pos:line="149" pos:column="44"/></literal></expr>;<pos:position pos:line="149" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="150" pos:column="10"/></block></then></if>

	<if pos:line="152" pos:column="9">if <condition pos:line="152" pos:column="12">(<expr><operator pos:line="152" pos:column="13">!<pos:position pos:line="152" pos:column="14"/></operator><name pos:line="152" pos:column="14">pack_to_stdout<pos:position pos:line="152" pos:column="28"/></name> <operator pos:line="152" pos:column="29">&amp;&amp;<pos:position pos:line="152" pos:column="39"/></operator> <name pos:line="152" pos:column="32">thin<pos:position pos:line="152" pos:column="36"/></name></expr>)<pos:position pos:line="152" pos:column="37"/></condition><then pos:line="152" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="153" pos:column="17">die<pos:position pos:line="153" pos:column="20"/></name><argument_list pos:line="153" pos:column="20">(<argument><expr><literal type="string" pos:line="153" pos:column="21">"--thin cannot be used to build an indexable pack."<pos:position pos:line="153" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="74"/></expr_stmt></block></then></if>

	<if pos:line="155" pos:column="9">if <condition pos:line="155" pos:column="12">(<expr><name pos:line="155" pos:column="13">keep_unreachable<pos:position pos:line="155" pos:column="29"/></name> <operator pos:line="155" pos:column="30">&amp;&amp;<pos:position pos:line="155" pos:column="40"/></operator> <name pos:line="155" pos:column="33">unpack_unreachable<pos:position pos:line="155" pos:column="51"/></name></expr>)<pos:position pos:line="155" pos:column="52"/></condition><then pos:line="155" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="156" pos:column="17">die<pos:position pos:line="156" pos:column="20"/></name><argument_list pos:line="156" pos:column="20">(<argument><expr><literal type="string" pos:line="156" pos:column="21">"--keep-unreachable and --unpack-unreachable are incompatible."<pos:position pos:line="156" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="86"/></expr_stmt></block></then></if>
	<if pos:line="157" pos:column="9">if <condition pos:line="157" pos:column="12">(<expr><operator pos:line="157" pos:column="13">!<pos:position pos:line="157" pos:column="14"/></operator><name pos:line="157" pos:column="14">rev_list_all<pos:position pos:line="157" pos:column="26"/></name> <operator pos:line="157" pos:column="27">||<pos:position pos:line="157" pos:column="29"/></operator> <operator pos:line="157" pos:column="30">!<pos:position pos:line="157" pos:column="31"/></operator><name pos:line="157" pos:column="31">rev_list_reflog<pos:position pos:line="157" pos:column="46"/></name> <operator pos:line="157" pos:column="47">||<pos:position pos:line="157" pos:column="49"/></operator> <operator pos:line="157" pos:column="50">!<pos:position pos:line="157" pos:column="51"/></operator><name pos:line="157" pos:column="51">rev_list_index<pos:position pos:line="157" pos:column="65"/></name></expr>)<pos:position pos:line="157" pos:column="66"/></condition><then pos:line="157" pos:column="66">
		<block type="pseudo"><expr_stmt><expr><name pos:line="158" pos:column="17">unpack_unreachable_expiration<pos:position pos:line="158" pos:column="46"/></name> <operator pos:line="158" pos:column="47">=<pos:position pos:line="158" pos:column="48"/></operator> <literal type="number" pos:line="158" pos:column="49">0<pos:position pos:line="158" pos:column="50"/></literal></expr>;<pos:position pos:line="158" pos:column="51"/></expr_stmt></block></then></if>

	<if pos:line="160" pos:column="9">if <condition pos:line="160" pos:column="12">(<expr><operator pos:line="160" pos:column="13">!<pos:position pos:line="160" pos:column="14"/></operator><name pos:line="160" pos:column="14">use_internal_rev_list<pos:position pos:line="160" pos:column="35"/></name> <operator pos:line="160" pos:column="36">||<pos:position pos:line="160" pos:column="38"/></operator> <operator pos:line="160" pos:column="39">!<pos:position pos:line="160" pos:column="40"/></operator><name pos:line="160" pos:column="40">pack_to_stdout<pos:position pos:line="160" pos:column="54"/></name> <operator pos:line="160" pos:column="55">||<pos:position pos:line="160" pos:column="57"/></operator> <call><name pos:line="160" pos:column="58">is_repository_shallow<pos:position pos:line="160" pos:column="79"/></name><argument_list pos:line="160" pos:column="79">()<pos:position pos:line="160" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="160" pos:column="82"/></condition><then pos:line="160" pos:column="82">
		<block type="pseudo"><expr_stmt><expr><name pos:line="161" pos:column="17">use_bitmap_index<pos:position pos:line="161" pos:column="33"/></name> <operator pos:line="161" pos:column="34">=<pos:position pos:line="161" pos:column="35"/></operator> <literal type="number" pos:line="161" pos:column="36">0<pos:position pos:line="161" pos:column="37"/></literal></expr>;<pos:position pos:line="161" pos:column="38"/></expr_stmt></block></then></if>

	<if pos:line="163" pos:column="9">if <condition pos:line="163" pos:column="12">(<expr><name pos:line="163" pos:column="13">pack_to_stdout<pos:position pos:line="163" pos:column="27"/></name> <operator pos:line="163" pos:column="28">||<pos:position pos:line="163" pos:column="30"/></operator> <operator pos:line="163" pos:column="31">!<pos:position pos:line="163" pos:column="32"/></operator><name pos:line="163" pos:column="32">rev_list_all<pos:position pos:line="163" pos:column="44"/></name></expr>)<pos:position pos:line="163" pos:column="45"/></condition><then pos:line="163" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name pos:line="164" pos:column="17">write_bitmap_index<pos:position pos:line="164" pos:column="35"/></name> <operator pos:line="164" pos:column="36">=<pos:position pos:line="164" pos:column="37"/></operator> <literal type="number" pos:line="164" pos:column="38">0<pos:position pos:line="164" pos:column="39"/></literal></expr>;<pos:position pos:line="164" pos:column="40"/></expr_stmt></block></then></if>

	<if pos:line="166" pos:column="9">if <condition pos:line="166" pos:column="12">(<expr><name pos:line="166" pos:column="13">progress<pos:position pos:line="166" pos:column="21"/></name> <operator pos:line="166" pos:column="22">&amp;&amp;<pos:position pos:line="166" pos:column="32"/></operator> <name pos:line="166" pos:column="25">all_progress_implied<pos:position pos:line="166" pos:column="45"/></name></expr>)<pos:position pos:line="166" pos:column="46"/></condition><then pos:line="166" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><name pos:line="167" pos:column="17">progress<pos:position pos:line="167" pos:column="25"/></name> <operator pos:line="167" pos:column="26">=<pos:position pos:line="167" pos:column="27"/></operator> <literal type="number" pos:line="167" pos:column="28">2<pos:position pos:line="167" pos:column="29"/></literal></expr>;<pos:position pos:line="167" pos:column="30"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="169" pos:column="9">prepare_packed_git<pos:position pos:line="169" pos:column="27"/></name><argument_list pos:line="169" pos:column="27">()<pos:position pos:line="169" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="30"/></expr_stmt>

	<if pos:line="171" pos:column="9">if <condition pos:line="171" pos:column="12">(<expr><name pos:line="171" pos:column="13">progress<pos:position pos:line="171" pos:column="21"/></name></expr>)<pos:position pos:line="171" pos:column="22"/></condition><then pos:line="171" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="172" pos:column="17">progress_state<pos:position pos:line="172" pos:column="31"/></name> <operator pos:line="172" pos:column="32">=<pos:position pos:line="172" pos:column="33"/></operator> <call><name pos:line="172" pos:column="34">start_progress<pos:position pos:line="172" pos:column="48"/></name><argument_list pos:line="172" pos:column="48">(<argument><expr><call><name pos:line="172" pos:column="49">_<pos:position pos:line="172" pos:column="50"/></name><argument_list pos:line="172" pos:column="50">(<argument><expr><literal type="string" pos:line="172" pos:column="51">"Counting objects"<pos:position pos:line="172" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="172" pos:column="72">0<pos:position pos:line="172" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="75"/></expr_stmt></block></then></if>
	<if pos:line="173" pos:column="9">if <condition pos:line="173" pos:column="12">(<expr><operator pos:line="173" pos:column="13">!<pos:position pos:line="173" pos:column="14"/></operator><name pos:line="173" pos:column="14">use_internal_rev_list<pos:position pos:line="173" pos:column="35"/></name></expr>)<pos:position pos:line="173" pos:column="36"/></condition><then pos:line="173" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="174" pos:column="17">read_object_list_from_stdin<pos:position pos:line="174" pos:column="44"/></name><argument_list pos:line="174" pos:column="44">()<pos:position pos:line="174" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="47"/></expr_stmt></block></then>
	<else pos:line="175" pos:column="9">else <block pos:line="175" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="176" pos:column="17">get_object_list<pos:position pos:line="176" pos:column="32"/></name><argument_list pos:line="176" pos:column="32">(<argument><expr><name><name pos:line="176" pos:column="33">rp<pos:position pos:line="176" pos:column="35"/></name><operator pos:line="176" pos:column="35">.<pos:position pos:line="176" pos:column="36"/></operator><name pos:line="176" pos:column="36">argc<pos:position pos:line="176" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="42">rp<pos:position pos:line="176" pos:column="44"/></name><operator pos:line="176" pos:column="44">.<pos:position pos:line="176" pos:column="45"/></operator><name pos:line="176" pos:column="45">argv<pos:position pos:line="176" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="176" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="177" pos:column="17">argv_array_clear<pos:position pos:line="177" pos:column="33"/></name><argument_list pos:line="177" pos:column="33">(<argument><expr><operator pos:line="177" pos:column="34">&amp;<pos:position pos:line="177" pos:column="39"/></operator><name pos:line="177" pos:column="35">rp<pos:position pos:line="177" pos:column="37"/></name></expr></argument>)<pos:position pos:line="177" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="178" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="179" pos:column="9">cleanup_preferred_base<pos:position pos:line="179" pos:column="31"/></name><argument_list pos:line="179" pos:column="31">()<pos:position pos:line="179" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="34"/></expr_stmt>
	<if pos:line="180" pos:column="9">if <condition pos:line="180" pos:column="12">(<expr><name pos:line="180" pos:column="13">include_tag<pos:position pos:line="180" pos:column="24"/></name> <operator pos:line="180" pos:column="25">&amp;&amp;<pos:position pos:line="180" pos:column="35"/></operator> <name pos:line="180" pos:column="28">nr_result<pos:position pos:line="180" pos:column="37"/></name></expr>)<pos:position pos:line="180" pos:column="38"/></condition><then pos:line="180" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="181" pos:column="17">for_each_ref<pos:position pos:line="181" pos:column="29"/></name><argument_list pos:line="181" pos:column="29">(<argument><expr><name pos:line="181" pos:column="30">add_ref_tag<pos:position pos:line="181" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="43">NULL<pos:position pos:line="181" pos:column="47"/></name></expr></argument>)<pos:position pos:line="181" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="49"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="182" pos:column="9">stop_progress<pos:position pos:line="182" pos:column="22"/></name><argument_list pos:line="182" pos:column="22">(<argument><expr><operator pos:line="182" pos:column="23">&amp;<pos:position pos:line="182" pos:column="28"/></operator><name pos:line="182" pos:column="24">progress_state<pos:position pos:line="182" pos:column="38"/></name></expr></argument>)<pos:position pos:line="182" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="40"/></expr_stmt>

	<if pos:line="184" pos:column="9">if <condition pos:line="184" pos:column="12">(<expr><name pos:line="184" pos:column="13">non_empty<pos:position pos:line="184" pos:column="22"/></name> <operator pos:line="184" pos:column="23">&amp;&amp;<pos:position pos:line="184" pos:column="33"/></operator> <operator pos:line="184" pos:column="26">!<pos:position pos:line="184" pos:column="27"/></operator><name pos:line="184" pos:column="27">nr_result<pos:position pos:line="184" pos:column="36"/></name></expr>)<pos:position pos:line="184" pos:column="37"/></condition><then pos:line="184" pos:column="37">
		<block type="pseudo"><return pos:line="185" pos:column="17">return <expr><literal type="number" pos:line="185" pos:column="24">0<pos:position pos:line="185" pos:column="25"/></literal></expr>;<pos:position pos:line="185" pos:column="26"/></return></block></then></if>
	<if pos:line="186" pos:column="9">if <condition pos:line="186" pos:column="12">(<expr><name pos:line="186" pos:column="13">nr_result<pos:position pos:line="186" pos:column="22"/></name></expr>)<pos:position pos:line="186" pos:column="23"/></condition><then pos:line="186" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="187" pos:column="17">prepare_pack<pos:position pos:line="187" pos:column="29"/></name><argument_list pos:line="187" pos:column="29">(<argument><expr><name pos:line="187" pos:column="30">window<pos:position pos:line="187" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="38">depth<pos:position pos:line="187" pos:column="43"/></name></expr></argument>)<pos:position pos:line="187" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="45"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="188" pos:column="9">write_pack_file<pos:position pos:line="188" pos:column="24"/></name><argument_list pos:line="188" pos:column="24">()<pos:position pos:line="188" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="27"/></expr_stmt>
	<if pos:line="189" pos:column="9">if <condition pos:line="189" pos:column="12">(<expr><name pos:line="189" pos:column="13">progress<pos:position pos:line="189" pos:column="21"/></name></expr>)<pos:position pos:line="189" pos:column="22"/></condition><then pos:line="189" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="190" pos:column="17">fprintf<pos:position pos:line="190" pos:column="24"/></name><argument_list pos:line="190" pos:column="24">(<argument><expr><name pos:line="190" pos:column="25">stderr<pos:position pos:line="190" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="190" pos:column="33">"Total %"<pos:position pos:line="190" pos:column="42"/></literal><name pos:line="190" pos:column="42">PRIu32<pos:position pos:line="190" pos:column="48"/></name><literal type="string" pos:line="190" pos:column="48">" (delta %"<pos:position pos:line="190" pos:column="59"/></literal><name pos:line="190" pos:column="59">PRIu32<pos:position pos:line="190" pos:column="65"/></name><literal type="string" pos:line="190" pos:column="65">"),"<pos:position pos:line="190" pos:column="69"/></literal>
			<literal type="string" pos:line="191" pos:column="25">" reused %"<pos:position pos:line="191" pos:column="36"/></literal><name pos:line="191" pos:column="36">PRIu32<pos:position pos:line="191" pos:column="42"/></name><literal type="string" pos:line="191" pos:column="42">" (delta %"<pos:position pos:line="191" pos:column="53"/></literal><name pos:line="191" pos:column="53">PRIu32<pos:position pos:line="191" pos:column="59"/></name><literal type="string" pos:line="191" pos:column="59">")\n"<pos:position pos:line="191" pos:column="64"/></literal></expr></argument>,
			<argument><expr><name pos:line="192" pos:column="25">written<pos:position pos:line="192" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="34">written_delta<pos:position pos:line="192" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="49">reused<pos:position pos:line="192" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="57">reused_delta<pos:position pos:line="192" pos:column="69"/></name></expr></argument>)<pos:position pos:line="192" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="71"/></expr_stmt></block></then></if>
	<return pos:line="193" pos:column="9">return <expr><literal type="number" pos:line="193" pos:column="16">0<pos:position pos:line="193" pos:column="17"/></literal></expr>;<pos:position pos:line="193" pos:column="18"/></return>
}<pos:position pos:line="194" pos:column="2"/></block></function></unit>

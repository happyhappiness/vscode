<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1101_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">git_path_submodule<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">path<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">fmt<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="61">...<pos:position pos:line="1" pos:column="64"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">pathname<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><call><name pos:line="3" pos:column="26">get_pathname<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">()<pos:position pos:line="3" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">git_dir<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">va_list<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">args<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">len<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">len<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">strlen<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">path<pos:position pos:line="9" pos:column="26"/></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">len<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">&gt;<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="19">PATH_MAX<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-<pos:position pos:line="10" pos:column="28"/></operator><literal type="number" pos:line="10" pos:column="28">100<pos:position pos:line="10" pos:column="31"/></literal></expr>)<pos:position pos:line="10" pos:column="32"/></condition><then pos:line="10" pos:column="32">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><name pos:line="11" pos:column="24">bad_path<pos:position pos:line="11" pos:column="32"/></name></expr>;<pos:position pos:line="11" pos:column="33"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">strbuf_addstr<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><operator pos:line="13" pos:column="23">&amp;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="24">buf<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">path<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">len<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&amp;&amp;<pos:position pos:line="14" pos:column="27"/></operator> <name><name pos:line="14" pos:column="20">path<pos:position pos:line="14" pos:column="24"/></name><index pos:line="14" pos:column="24">[<expr><name pos:line="14" pos:column="25">len<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-<pos:position pos:line="14" pos:column="29"/></operator><literal type="number" pos:line="14" pos:column="29">1<pos:position pos:line="14" pos:column="30"/></literal></expr>]<pos:position pos:line="14" pos:column="31"/></index></name> <operator pos:line="14" pos:column="32">!=<pos:position pos:line="14" pos:column="34"/></operator> <literal type="char" pos:line="14" pos:column="35">'/'<pos:position pos:line="14" pos:column="38"/></literal></expr>)<pos:position pos:line="14" pos:column="39"/></condition><then pos:line="14" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">strbuf_addch<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><operator pos:line="15" pos:column="30">&amp;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="31">buf<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="36">'/'<pos:position pos:line="15" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">strbuf_addstr<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><operator pos:line="16" pos:column="23">&amp;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="24">buf<pos:position pos:line="16" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="29">".git"<pos:position pos:line="16" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><name pos:line="18" pos:column="9">git_dir<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <call><name pos:line="18" pos:column="19">read_gitfile<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><name><name pos:line="18" pos:column="32">buf<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">.<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="36">buf<pos:position pos:line="18" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">git_dir<pos:position pos:line="19" pos:column="20"/></name></expr>)<pos:position pos:line="19" pos:column="21"/></condition><then pos:line="19" pos:column="21"> <block pos:line="19" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">strbuf_reset<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><operator pos:line="20" pos:column="30">&amp;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="31">buf<pos:position pos:line="20" pos:column="34"/></name></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">strbuf_addstr<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><operator pos:line="21" pos:column="31">&amp;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="32">buf<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">git_dir<pos:position pos:line="21" pos:column="44"/></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">strbuf_addch<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><operator pos:line="23" pos:column="22">&amp;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="23">buf<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="28">'/'<pos:position pos:line="23" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">buf<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">.<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">len<pos:position pos:line="25" pos:column="20"/></name></name> <operator pos:line="25" pos:column="21">&gt;=<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="24">PATH_MAX<pos:position pos:line="25" pos:column="32"/></name></expr>)<pos:position pos:line="25" pos:column="33"/></condition><then pos:line="25" pos:column="33">
		<block type="pseudo"><return pos:line="26" pos:column="17">return <expr><name pos:line="26" pos:column="24">bad_path<pos:position pos:line="26" pos:column="32"/></name></expr>;<pos:position pos:line="26" pos:column="33"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">memcpy<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><name pos:line="27" pos:column="16">pathname<pos:position pos:line="27" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="26">buf<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">.<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">buf<pos:position pos:line="27" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="35">buf<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">.<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="39">len<pos:position pos:line="27" pos:column="42"/></name></name> <operator pos:line="27" pos:column="43">+<pos:position pos:line="27" pos:column="44"/></operator> <literal type="number" pos:line="27" pos:column="45">1<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="29" pos:column="9">strbuf_release<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><operator pos:line="29" pos:column="24">&amp;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="25">buf<pos:position pos:line="29" pos:column="28"/></name></expr></argument>)<pos:position pos:line="29" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">len<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <call><name pos:line="30" pos:column="15">strlen<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">pathname<pos:position pos:line="30" pos:column="30"/></name></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">va_start<pos:position pos:line="32" pos:column="17"/></name><argument_list pos:line="32" pos:column="17">(<argument><expr><name pos:line="32" pos:column="18">args<pos:position pos:line="32" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="24">fmt<pos:position pos:line="32" pos:column="27"/></name></expr></argument>)<pos:position pos:line="32" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="33" pos:column="9">len<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">+=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">vsnprintf<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">pathname<pos:position pos:line="33" pos:column="34"/></name> <operator pos:line="33" pos:column="35">+<pos:position pos:line="33" pos:column="36"/></operator> <name pos:line="33" pos:column="37">len<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="42">PATH_MAX<pos:position pos:line="33" pos:column="50"/></name> <operator pos:line="33" pos:column="51">-<pos:position pos:line="33" pos:column="52"/></operator> <name pos:line="33" pos:column="53">len<pos:position pos:line="33" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="58">fmt<pos:position pos:line="33" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="63">args<pos:position pos:line="33" pos:column="67"/></name></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">va_end<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">args<pos:position pos:line="34" pos:column="20"/></name></expr></argument>)<pos:position pos:line="34" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="22"/></expr_stmt>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">len<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">&gt;=<pos:position pos:line="35" pos:column="22"/></operator> <name pos:line="35" pos:column="20">PATH_MAX<pos:position pos:line="35" pos:column="28"/></name></expr>)<pos:position pos:line="35" pos:column="29"/></condition><then pos:line="35" pos:column="29">
		<block type="pseudo"><return pos:line="36" pos:column="17">return <expr><name pos:line="36" pos:column="24">bad_path<pos:position pos:line="36" pos:column="32"/></name></expr>;<pos:position pos:line="36" pos:column="33"/></return></block></then></if>
	<return pos:line="37" pos:column="9">return <expr><call><name pos:line="37" pos:column="16">cleanup_path<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><name pos:line="37" pos:column="29">pathname<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="39"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

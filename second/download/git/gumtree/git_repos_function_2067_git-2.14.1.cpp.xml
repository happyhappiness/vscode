<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2067_git-2.14.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">diff_cache<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">rev_info<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">revs<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name><name pos:line="2" pos:column="29">struct<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">object_id<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">tree_oid<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="3" pos:column="23">const<pos:position pos:line="3" pos:column="28"/></specifier> <name pos:line="3" pos:column="29">char<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">tree_name<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>,
		      <parameter><decl><type><name pos:line="4" pos:column="23">int<pos:position pos:line="4" pos:column="26"/></name></type> <name pos:line="4" pos:column="27">cached<pos:position pos:line="4" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="34"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">tree<pos:position pos:line="6" pos:column="20"/></name></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">tree<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">tree_desc<pos:position pos:line="7" pos:column="25"/></name></name></type> <name pos:line="7" pos:column="26">t<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">unpack_trees_options<pos:position pos:line="8" pos:column="36"/></name></name></type> <name pos:line="8" pos:column="37">opts<pos:position pos:line="8" pos:column="41"/></name></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">tree<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">parse_tree_indirect<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">tree_oid<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">tree<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><call><name pos:line="12" pos:column="24">error<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><literal type="string" pos:line="12" pos:column="30">"bad tree object %s"<pos:position pos:line="12" pos:column="50"/></literal></expr></argument>,
			     <argument><expr><ternary><condition><expr><name pos:line="13" pos:column="30">tree_name<pos:position pos:line="13" pos:column="39"/></name></expr> ?<pos:position pos:line="13" pos:column="41"/></condition><then pos:line="13" pos:column="41"> <expr><name pos:line="13" pos:column="42">tree_name<pos:position pos:line="13" pos:column="51"/></name></expr> <pos:position pos:line="13" pos:column="52"/></then><else pos:line="13" pos:column="52">: <expr><call><name pos:line="13" pos:column="54">oid_to_hex<pos:position pos:line="13" pos:column="64"/></name><argument_list pos:line="13" pos:column="64">(<argument><expr><name pos:line="13" pos:column="65">tree_oid<pos:position pos:line="13" pos:column="73"/></name></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="13" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="76"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">memset<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><operator pos:line="14" pos:column="16">&amp;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="17">opts<pos:position pos:line="14" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="23">0<pos:position pos:line="14" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="26">sizeof<argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">opts<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">opts<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">.<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">head_idx<pos:position pos:line="15" pos:column="22"/></name></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <literal type="number" pos:line="15" pos:column="25">1<pos:position pos:line="15" pos:column="26"/></literal></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">opts<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">.<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">index_only<pos:position pos:line="16" pos:column="24"/></name></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">cached<pos:position pos:line="16" pos:column="33"/></name></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">opts<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">.<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">diff_index_cached<pos:position pos:line="17" pos:column="31"/></name></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator> <operator pos:line="17" pos:column="34">(<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="35">cached<pos:position pos:line="17" pos:column="41"/></name> <operator pos:line="17" pos:column="42">&amp;&amp;<pos:position pos:line="17" pos:column="52"/></operator>
				  <operator pos:line="18" pos:column="35">!<pos:position pos:line="18" pos:column="36"/></operator><call><name pos:line="18" pos:column="36">DIFF_OPT_TST<pos:position pos:line="18" pos:column="48"/></name><argument_list pos:line="18" pos:column="48">(<argument><expr><operator pos:line="18" pos:column="49">&amp;<pos:position pos:line="18" pos:column="54"/></operator><name><name pos:line="18" pos:column="50">revs<pos:position pos:line="18" pos:column="54"/></name><operator pos:line="18" pos:column="54">-&gt;<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="56">diffopt<pos:position pos:line="18" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="65">FIND_COPIES_HARDER<pos:position pos:line="18" pos:column="83"/></name></expr></argument>)<pos:position pos:line="18" pos:column="84"/></argument_list></call><operator pos:line="18" pos:column="84">)<pos:position pos:line="18" pos:column="85"/></operator></expr>;<pos:position pos:line="18" pos:column="86"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">opts<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">.<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">merge<pos:position pos:line="19" pos:column="19"/></name></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <literal type="number" pos:line="19" pos:column="22">1<pos:position pos:line="19" pos:column="23"/></literal></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">opts<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">.<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">fn<pos:position pos:line="20" pos:column="16"/></name></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <name pos:line="20" pos:column="19">oneway_diff<pos:position pos:line="20" pos:column="30"/></name></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">opts<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">.<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">unpack_data<pos:position pos:line="21" pos:column="25"/></name></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="28">revs<pos:position pos:line="21" pos:column="32"/></name></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">opts<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">.<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">src_index<pos:position pos:line="22" pos:column="23"/></name></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <operator pos:line="22" pos:column="26">&amp;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="27">the_index<pos:position pos:line="22" pos:column="36"/></name></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">opts<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">.<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">dst_index<pos:position pos:line="23" pos:column="23"/></name></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="26">NULL<pos:position pos:line="23" pos:column="30"/></name></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">opts<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">.<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">pathspec<pos:position pos:line="24" pos:column="22"/></name></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <operator pos:line="24" pos:column="25">&amp;<pos:position pos:line="24" pos:column="30"/></operator><name><name pos:line="24" pos:column="26">revs<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">-&gt;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="32">diffopt<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">.<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="40">pathspec<pos:position pos:line="24" pos:column="48"/></name></name></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">opts<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">.<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">pathspec<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">recursive<pos:position pos:line="25" pos:column="33"/></name></name> <operator pos:line="25" pos:column="34">=<pos:position pos:line="25" pos:column="35"/></operator> <literal type="number" pos:line="25" pos:column="36">1<pos:position pos:line="25" pos:column="37"/></literal></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="27" pos:column="9">init_tree_desc<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><operator pos:line="27" pos:column="24">&amp;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="25">t<pos:position pos:line="27" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="28">tree<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">buffer<pos:position pos:line="27" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="42">tree<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">-&gt;<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="48">size<pos:position pos:line="27" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt>
	<return pos:line="28" pos:column="9">return <expr><call><name pos:line="28" pos:column="16">unpack_trees<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><literal type="number" pos:line="28" pos:column="29">1<pos:position pos:line="28" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="32">&amp;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="33">t<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="36">&amp;<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="37">opts<pos:position pos:line="28" pos:column="41"/></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="43"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

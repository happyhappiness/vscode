<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1295_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">add_to_trie<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">trie<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">root<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">key<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">void<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">value<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">trie<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">child<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">void<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">old<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><operator pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">key<pos:position pos:line="7" pos:column="18"/></name></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19"> <block pos:line="7" pos:column="20">{
		<comment type="block" pos:line="8" pos:column="17">/* we have reached the end of the key */</comment>
		<expr_stmt><expr><name pos:line="9" pos:column="17">old<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <name><name pos:line="9" pos:column="23">root<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">value<pos:position pos:line="9" pos:column="34"/></name></name></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="10" pos:column="17">root<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">value<pos:position pos:line="10" pos:column="28"/></name></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <name pos:line="10" pos:column="31">value<pos:position pos:line="10" pos:column="36"/></name></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><name pos:line="11" pos:column="24">old<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">i<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>;<pos:position pos:line="14" pos:column="20"/></init> <condition><expr><name pos:line="14" pos:column="21">i<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&lt;<pos:position pos:line="14" pos:column="27"/></operator> <name><name pos:line="14" pos:column="25">root<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">len<pos:position pos:line="14" pos:column="34"/></name></name></expr>;<pos:position pos:line="14" pos:column="35"/></condition> <incr><expr><name pos:line="14" pos:column="36">i<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">++<pos:position pos:line="14" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="40"/></control> <block pos:line="14" pos:column="41">{
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name><name pos:line="15" pos:column="21">root<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">contents<pos:position pos:line="15" pos:column="35"/></name><index pos:line="15" pos:column="35">[<expr><name pos:line="15" pos:column="36">i<pos:position pos:line="15" pos:column="37"/></name></expr>]<pos:position pos:line="15" pos:column="38"/></index></name> <operator pos:line="15" pos:column="39">==<pos:position pos:line="15" pos:column="41"/></operator> <name><name pos:line="15" pos:column="42">key<pos:position pos:line="15" pos:column="45"/></name><index pos:line="15" pos:column="45">[<expr><name pos:line="15" pos:column="46">i<pos:position pos:line="15" pos:column="47"/></name></expr>]<pos:position pos:line="15" pos:column="48"/></index></name></expr>)<pos:position pos:line="15" pos:column="49"/></condition><then pos:line="15" pos:column="49">
			<block type="pseudo"><continue pos:line="16" pos:column="25">continue;<pos:position pos:line="16" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="18" pos:column="17">/*
		 * Split this node: child will contain this node's
		 * existing children.
		 */</comment>
		<expr_stmt><expr><name pos:line="22" pos:column="17">child<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <call><name pos:line="22" pos:column="25">malloc<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><sizeof pos:line="22" pos:column="32">sizeof<argument_list pos:line="22" pos:column="38">(<argument><expr><operator pos:line="22" pos:column="39">*<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="40">child<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">memcpy<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name><name pos:line="23" pos:column="24">child<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">-&gt;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="31">children<pos:position pos:line="23" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="41">root<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">-&gt;<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="47">children<pos:position pos:line="23" pos:column="55"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="57">sizeof<argument_list pos:line="23" pos:column="63">(<argument><expr><name><name pos:line="23" pos:column="64">root<pos:position pos:line="23" pos:column="68"/></name><operator pos:line="23" pos:column="68">-&gt;<pos:position pos:line="23" pos:column="73"/></operator><name pos:line="23" pos:column="70">children<pos:position pos:line="23" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="81"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="25" pos:column="17">child<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">len<pos:position pos:line="25" pos:column="27"/></name></name> <operator pos:line="25" pos:column="28">=<pos:position pos:line="25" pos:column="29"/></operator> <name><name pos:line="25" pos:column="30">root<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">-&gt;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="36">len<pos:position pos:line="25" pos:column="39"/></name></name> <operator pos:line="25" pos:column="40">-<pos:position pos:line="25" pos:column="41"/></operator> <name pos:line="25" pos:column="42">i<pos:position pos:line="25" pos:column="43"/></name> <operator pos:line="25" pos:column="44">-<pos:position pos:line="25" pos:column="45"/></operator> <literal type="number" pos:line="25" pos:column="46">1<pos:position pos:line="25" pos:column="47"/></literal></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name><name pos:line="26" pos:column="21">child<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">len<pos:position pos:line="26" pos:column="31"/></name></name></expr>)<pos:position pos:line="26" pos:column="32"/></condition><then pos:line="26" pos:column="32"> <block pos:line="26" pos:column="33">{
			<expr_stmt><expr><name><name pos:line="27" pos:column="25">child<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">contents<pos:position pos:line="27" pos:column="40"/></name></name> <operator pos:line="27" pos:column="41">=<pos:position pos:line="27" pos:column="42"/></operator> <call><name pos:line="27" pos:column="43">xstrndup<pos:position pos:line="27" pos:column="51"/></name><argument_list pos:line="27" pos:column="51">(<argument><expr><name><name pos:line="27" pos:column="52">root<pos:position pos:line="27" pos:column="56"/></name><operator pos:line="27" pos:column="56">-&gt;<pos:position pos:line="27" pos:column="61"/></operator><name pos:line="27" pos:column="58">contents<pos:position pos:line="27" pos:column="66"/></name></name> <operator pos:line="27" pos:column="67">+<pos:position pos:line="27" pos:column="68"/></operator> <name pos:line="27" pos:column="69">i<pos:position pos:line="27" pos:column="70"/></name> <operator pos:line="27" pos:column="71">+<pos:position pos:line="27" pos:column="72"/></operator> <literal type="number" pos:line="27" pos:column="73">1<pos:position pos:line="27" pos:column="74"/></literal></expr></argument>,
						   <argument><expr><name><name pos:line="28" pos:column="52">child<pos:position pos:line="28" pos:column="57"/></name><operator pos:line="28" pos:column="57">-&gt;<pos:position pos:line="28" pos:column="62"/></operator><name pos:line="28" pos:column="59">len<pos:position pos:line="28" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="30" pos:column="17">child<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">-&gt;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="24">value<pos:position pos:line="30" pos:column="29"/></name></name> <operator pos:line="30" pos:column="30">=<pos:position pos:line="30" pos:column="31"/></operator> <name><name pos:line="30" pos:column="32">root<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">value<pos:position pos:line="30" pos:column="43"/></name></name></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">root<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">value<pos:position pos:line="31" pos:column="28"/></name></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <name pos:line="31" pos:column="31">NULL<pos:position pos:line="31" pos:column="35"/></name></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">root<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">len<pos:position pos:line="32" pos:column="26"/></name></name> <operator pos:line="32" pos:column="27">=<pos:position pos:line="32" pos:column="28"/></operator> <name pos:line="32" pos:column="29">i<pos:position pos:line="32" pos:column="30"/></name></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="34" pos:column="17">memset<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name><name pos:line="34" pos:column="24">root<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">-&gt;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="30">children<pos:position pos:line="34" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="40">0<pos:position pos:line="34" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="43">sizeof<argument_list pos:line="34" pos:column="49">(<argument><expr><name><name pos:line="34" pos:column="50">root<pos:position pos:line="34" pos:column="54"/></name><operator pos:line="34" pos:column="54">-&gt;<pos:position pos:line="34" pos:column="59"/></operator><name pos:line="34" pos:column="56">children<pos:position pos:line="34" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="35" pos:column="17">root<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">-&gt;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="23">children<pos:position pos:line="35" pos:column="31"/></name><index pos:line="35" pos:column="31">[<expr><operator pos:line="35" pos:column="32">(<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="33">unsigned<pos:position pos:line="35" pos:column="41"/></name> <name pos:line="35" pos:column="42">char<pos:position pos:line="35" pos:column="46"/></name><operator pos:line="35" pos:column="46">)<pos:position pos:line="35" pos:column="47"/></operator><name><name pos:line="35" pos:column="47">root<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">-&gt;<pos:position pos:line="35" pos:column="56"/></operator><name pos:line="35" pos:column="53">contents<pos:position pos:line="35" pos:column="61"/></name><index pos:line="35" pos:column="61">[<expr><name pos:line="35" pos:column="62">i<pos:position pos:line="35" pos:column="63"/></name></expr>]<pos:position pos:line="35" pos:column="64"/></index></name></expr>]<pos:position pos:line="35" pos:column="65"/></index></name> <operator pos:line="35" pos:column="66">=<pos:position pos:line="35" pos:column="67"/></operator> <name pos:line="35" pos:column="68">child<pos:position pos:line="35" pos:column="73"/></name></expr>;<pos:position pos:line="35" pos:column="74"/></expr_stmt>

		<comment type="block" pos:line="37" pos:column="17">/* This is the newly-added child. */</comment>
		<expr_stmt><expr><name><name pos:line="38" pos:column="17">root<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">-&gt;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="23">children<pos:position pos:line="38" pos:column="31"/></name><index pos:line="38" pos:column="31">[<expr><operator pos:line="38" pos:column="32">(<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="33">unsigned<pos:position pos:line="38" pos:column="41"/></name> <name pos:line="38" pos:column="42">char<pos:position pos:line="38" pos:column="46"/></name><operator pos:line="38" pos:column="46">)<pos:position pos:line="38" pos:column="47"/></operator><name><name pos:line="38" pos:column="47">key<pos:position pos:line="38" pos:column="50"/></name><index pos:line="38" pos:column="50">[<expr><name pos:line="38" pos:column="51">i<pos:position pos:line="38" pos:column="52"/></name></expr>]<pos:position pos:line="38" pos:column="53"/></index></name></expr>]<pos:position pos:line="38" pos:column="54"/></index></name> <operator pos:line="38" pos:column="55">=<pos:position pos:line="38" pos:column="56"/></operator>
			<call><name pos:line="39" pos:column="25">make_trie_node<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(<argument><expr><name pos:line="39" pos:column="40">key<pos:position pos:line="39" pos:column="43"/></name> <operator pos:line="39" pos:column="44">+<pos:position pos:line="39" pos:column="45"/></operator> <name pos:line="39" pos:column="46">i<pos:position pos:line="39" pos:column="47"/></name> <operator pos:line="39" pos:column="48">+<pos:position pos:line="39" pos:column="49"/></operator> <literal type="number" pos:line="39" pos:column="50">1<pos:position pos:line="39" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="53">value<pos:position pos:line="39" pos:column="58"/></name></expr></argument>)<pos:position pos:line="39" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="60"/></expr_stmt>
		<return pos:line="40" pos:column="17">return <expr><name pos:line="40" pos:column="24">NULL<pos:position pos:line="40" pos:column="28"/></name></expr>;<pos:position pos:line="40" pos:column="29"/></return>
	}<pos:position pos:line="41" pos:column="10"/></block></for>

	<comment type="block" pos:line="43" pos:column="9">/* We have matched the entire compressed section */</comment>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name><name pos:line="44" pos:column="13">key<pos:position pos:line="44" pos:column="16"/></name><index pos:line="44" pos:column="16">[<expr><name pos:line="44" pos:column="17">i<pos:position pos:line="44" pos:column="18"/></name></expr>]<pos:position pos:line="44" pos:column="19"/></index></name></expr>)<pos:position pos:line="44" pos:column="20"/></condition><then pos:line="44" pos:column="20"> <block pos:line="44" pos:column="21">{
		<expr_stmt><expr><name pos:line="45" pos:column="17">child<pos:position pos:line="45" pos:column="22"/></name> <operator pos:line="45" pos:column="23">=<pos:position pos:line="45" pos:column="24"/></operator> <name><name pos:line="45" pos:column="25">root<pos:position pos:line="45" pos:column="29"/></name><operator pos:line="45" pos:column="29">-&gt;<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="31">children<pos:position pos:line="45" pos:column="39"/></name><index pos:line="45" pos:column="39">[<expr><operator pos:line="45" pos:column="40">(<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="41">unsigned<pos:position pos:line="45" pos:column="49"/></name> <name pos:line="45" pos:column="50">char<pos:position pos:line="45" pos:column="54"/></name><operator pos:line="45" pos:column="54">)<pos:position pos:line="45" pos:column="55"/></operator><name><name pos:line="45" pos:column="55">key<pos:position pos:line="45" pos:column="58"/></name><index pos:line="45" pos:column="58">[<expr><name><name pos:line="45" pos:column="59">root<pos:position pos:line="45" pos:column="63"/></name><operator pos:line="45" pos:column="63">-&gt;<pos:position pos:line="45" pos:column="68"/></operator><name pos:line="45" pos:column="65">len<pos:position pos:line="45" pos:column="68"/></name></name></expr>]<pos:position pos:line="45" pos:column="69"/></index></name></expr>]<pos:position pos:line="45" pos:column="70"/></index></name></expr>;<pos:position pos:line="45" pos:column="71"/></expr_stmt>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">child<pos:position pos:line="46" pos:column="26"/></name></expr>)<pos:position pos:line="46" pos:column="27"/></condition><then pos:line="46" pos:column="27"> <block pos:line="46" pos:column="28">{
			<return pos:line="47" pos:column="25">return <expr><call><name pos:line="47" pos:column="32">add_to_trie<pos:position pos:line="47" pos:column="43"/></name><argument_list pos:line="47" pos:column="43">(<argument><expr><name pos:line="47" pos:column="44">child<pos:position pos:line="47" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="51">key<pos:position pos:line="47" pos:column="54"/></name> <operator pos:line="47" pos:column="55">+<pos:position pos:line="47" pos:column="56"/></operator> <name><name pos:line="47" pos:column="57">root<pos:position pos:line="47" pos:column="61"/></name><operator pos:line="47" pos:column="61">-&gt;<pos:position pos:line="47" pos:column="66"/></operator><name pos:line="47" pos:column="63">len<pos:position pos:line="47" pos:column="66"/></name></name> <operator pos:line="47" pos:column="67">+<pos:position pos:line="47" pos:column="68"/></operator> <literal type="number" pos:line="47" pos:column="69">1<pos:position pos:line="47" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="72">value<pos:position pos:line="47" pos:column="77"/></name></expr></argument>)<pos:position pos:line="47" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="79"/></return>
		}<pos:position pos:line="48" pos:column="18"/></block></then> <else pos:line="48" pos:column="19">else <block pos:line="48" pos:column="24">{
			<expr_stmt><expr><name pos:line="49" pos:column="25">child<pos:position pos:line="49" pos:column="30"/></name> <operator pos:line="49" pos:column="31">=<pos:position pos:line="49" pos:column="32"/></operator> <call><name pos:line="49" pos:column="33">make_trie_node<pos:position pos:line="49" pos:column="47"/></name><argument_list pos:line="49" pos:column="47">(<argument><expr><name pos:line="49" pos:column="48">key<pos:position pos:line="49" pos:column="51"/></name> <operator pos:line="49" pos:column="52">+<pos:position pos:line="49" pos:column="53"/></operator> <name><name pos:line="49" pos:column="54">root<pos:position pos:line="49" pos:column="58"/></name><operator pos:line="49" pos:column="58">-&gt;<pos:position pos:line="49" pos:column="63"/></operator><name pos:line="49" pos:column="60">len<pos:position pos:line="49" pos:column="63"/></name></name> <operator pos:line="49" pos:column="64">+<pos:position pos:line="49" pos:column="65"/></operator> <literal type="number" pos:line="49" pos:column="66">1<pos:position pos:line="49" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="69">value<pos:position pos:line="49" pos:column="74"/></name></expr></argument>)<pos:position pos:line="49" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="50" pos:column="25">root<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">-&gt;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="31">children<pos:position pos:line="50" pos:column="39"/></name><index pos:line="50" pos:column="39">[<expr><operator pos:line="50" pos:column="40">(<pos:position pos:line="50" pos:column="41"/></operator><name pos:line="50" pos:column="41">unsigned<pos:position pos:line="50" pos:column="49"/></name> <name pos:line="50" pos:column="50">char<pos:position pos:line="50" pos:column="54"/></name><operator pos:line="50" pos:column="54">)<pos:position pos:line="50" pos:column="55"/></operator><name><name pos:line="50" pos:column="55">key<pos:position pos:line="50" pos:column="58"/></name><index pos:line="50" pos:column="58">[<expr><name><name pos:line="50" pos:column="59">root<pos:position pos:line="50" pos:column="63"/></name><operator pos:line="50" pos:column="63">-&gt;<pos:position pos:line="50" pos:column="68"/></operator><name pos:line="50" pos:column="65">len<pos:position pos:line="50" pos:column="68"/></name></name></expr>]<pos:position pos:line="50" pos:column="69"/></index></name></expr>]<pos:position pos:line="50" pos:column="70"/></index></name> <operator pos:line="50" pos:column="71">=<pos:position pos:line="50" pos:column="72"/></operator> <name pos:line="50" pos:column="73">child<pos:position pos:line="50" pos:column="78"/></name></expr>;<pos:position pos:line="50" pos:column="79"/></expr_stmt>
			<return pos:line="51" pos:column="25">return <expr><name pos:line="51" pos:column="32">NULL<pos:position pos:line="51" pos:column="36"/></name></expr>;<pos:position pos:line="51" pos:column="37"/></return>
		}<pos:position pos:line="52" pos:column="18"/></block></else></if>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="55" pos:column="9">old<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">=<pos:position pos:line="55" pos:column="14"/></operator> <name><name pos:line="55" pos:column="15">root<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">-&gt;<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="21">value<pos:position pos:line="55" pos:column="26"/></name></name></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="56" pos:column="9">root<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">-&gt;<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="15">value<pos:position pos:line="56" pos:column="20"/></name></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <name pos:line="56" pos:column="23">value<pos:position pos:line="56" pos:column="28"/></name></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
	<return pos:line="57" pos:column="9">return <expr><name pos:line="57" pos:column="16">old<pos:position pos:line="57" pos:column="19"/></name></expr>;<pos:position pos:line="57" pos:column="20"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3937_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_trace_fd<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">trace_key<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">key<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name><name pos:line="3" pos:column="16">struct<pos:position pos:line="3" pos:column="22"/></name> <name pos:line="3" pos:column="23">trace_key<pos:position pos:line="3" pos:column="32"/></name></name></type> <name pos:line="3" pos:column="33">trace_default<pos:position pos:line="3" pos:column="46"/></name> <init pos:line="3" pos:column="47">= <expr><block pos:line="3" pos:column="49">{ <expr><literal type="string" pos:line="3" pos:column="51">"GIT_TRACE"<pos:position pos:line="3" pos:column="62"/></literal></expr> }<pos:position pos:line="3" pos:column="64"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="65"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">trace<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* use default "GIT_TRACE" if NULL */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">key<pos:position pos:line="7" pos:column="17"/></name></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">key<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <operator pos:line="8" pos:column="23">&amp;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="24">trace_default<pos:position pos:line="8" pos:column="37"/></name></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="10" pos:column="9">/* don't open twice */</comment>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">key<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">initialized<pos:position pos:line="11" pos:column="29"/></name></name></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><name><name pos:line="12" pos:column="24">key<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">fd<pos:position pos:line="12" pos:column="31"/></name></name></expr>;<pos:position pos:line="12" pos:column="32"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">trace<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <call><name pos:line="14" pos:column="17">getenv<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name><name pos:line="14" pos:column="24">key<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">key<pos:position pos:line="14" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">trace<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">||<pos:position pos:line="16" pos:column="22"/></operator> <operator pos:line="16" pos:column="23">!<pos:position pos:line="16" pos:column="24"/></operator><call><name pos:line="16" pos:column="24">strcmp<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">trace<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="38">""<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call> <operator pos:line="16" pos:column="42">||<pos:position pos:line="16" pos:column="44"/></operator>
	    <operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><call><name pos:line="17" pos:column="14">strcmp<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">trace<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="28">"0"<pos:position pos:line="17" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call> <operator pos:line="17" pos:column="33">||<pos:position pos:line="17" pos:column="35"/></operator> <operator pos:line="17" pos:column="36">!<pos:position pos:line="17" pos:column="37"/></operator><call><name pos:line="17" pos:column="37">strcasecmp<pos:position pos:line="17" pos:column="47"/></name><argument_list pos:line="17" pos:column="47">(<argument><expr><name pos:line="17" pos:column="48">trace<pos:position pos:line="17" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="55">"false"<pos:position pos:line="17" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="64"/></condition><then pos:line="17" pos:column="64">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="17">key<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">fd<pos:position pos:line="18" pos:column="24"/></name></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <literal type="number" pos:line="18" pos:column="27">0<pos:position pos:line="18" pos:column="28"/></literal></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt></block></then>
	<elseif pos:line="19" pos:column="9">else <if pos:line="19" pos:column="14">if <condition pos:line="19" pos:column="17">(<expr><operator pos:line="19" pos:column="18">!<pos:position pos:line="19" pos:column="19"/></operator><call><name pos:line="19" pos:column="19">strcmp<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">trace<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="33">"1"<pos:position pos:line="19" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call> <operator pos:line="19" pos:column="38">||<pos:position pos:line="19" pos:column="40"/></operator> <operator pos:line="19" pos:column="41">!<pos:position pos:line="19" pos:column="42"/></operator><call><name pos:line="19" pos:column="42">strcasecmp<pos:position pos:line="19" pos:column="52"/></name><argument_list pos:line="19" pos:column="52">(<argument><expr><name pos:line="19" pos:column="53">trace<pos:position pos:line="19" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="60">"true"<pos:position pos:line="19" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="68"/></condition><then pos:line="19" pos:column="68">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="17">key<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">-&gt;<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="22">fd<pos:position pos:line="20" pos:column="24"/></name></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">STDERR_FILENO<pos:position pos:line="20" pos:column="40"/></name></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="21" pos:column="9">else <if pos:line="21" pos:column="14">if <condition pos:line="21" pos:column="17">(<expr><call><name pos:line="21" pos:column="18">strlen<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">trace<pos:position pos:line="21" pos:column="30"/></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call> <operator pos:line="21" pos:column="32">==<pos:position pos:line="21" pos:column="34"/></operator> <literal type="number" pos:line="21" pos:column="35">1<pos:position pos:line="21" pos:column="36"/></literal> <operator pos:line="21" pos:column="37">&amp;&amp;<pos:position pos:line="21" pos:column="47"/></operator> <call><name pos:line="21" pos:column="40">isdigit<pos:position pos:line="21" pos:column="47"/></name><argument_list pos:line="21" pos:column="47">(<argument><expr><operator pos:line="21" pos:column="48">*<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="49">trace<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="56"/></condition><then pos:line="21" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="17">key<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">-&gt;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="22">fd<pos:position pos:line="22" pos:column="24"/></name></name> <operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator> <call><name pos:line="22" pos:column="27">atoi<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">trace<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="23" pos:column="9">else <if pos:line="23" pos:column="14">if <condition pos:line="23" pos:column="17">(<expr><call><name pos:line="23" pos:column="18">is_absolute_path<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><name pos:line="23" pos:column="35">trace<pos:position pos:line="23" pos:column="40"/></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="42"/></condition><then pos:line="23" pos:column="42"> <block pos:line="23" pos:column="43">{
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">int<pos:position pos:line="24" pos:column="20"/></name></type> <name pos:line="24" pos:column="21">fd<pos:position pos:line="24" pos:column="23"/></name> <init pos:line="24" pos:column="24">= <expr><call><name pos:line="24" pos:column="26">open<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><name pos:line="24" pos:column="31">trace<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="38">O_WRONLY<pos:position pos:line="24" pos:column="46"/></name> <operator pos:line="24" pos:column="47">|<pos:position pos:line="24" pos:column="48"/></operator> <name pos:line="24" pos:column="49">O_APPEND<pos:position pos:line="24" pos:column="57"/></name> <operator pos:line="24" pos:column="58">|<pos:position pos:line="24" pos:column="59"/></operator> <name pos:line="24" pos:column="60">O_CREAT<pos:position pos:line="24" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="69">0666<pos:position pos:line="24" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="75"/></decl_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">fd<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">==<pos:position pos:line="25" pos:column="26"/></operator> <operator pos:line="25" pos:column="27">-<pos:position pos:line="25" pos:column="28"/></operator><literal type="number" pos:line="25" pos:column="28">1<pos:position pos:line="25" pos:column="29"/></literal></expr>)<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30"> <block pos:line="25" pos:column="31">{
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">fprintf<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">stderr<pos:position pos:line="26" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="27" pos:column="33">"Could not open '%s' for tracing: %s\n"<pos:position pos:line="27" pos:column="72"/></literal>
				<literal type="string" pos:line="28" pos:column="33">"Defaulting to tracing on stderr...\n"<pos:position pos:line="28" pos:column="71"/></literal></expr></argument>,
				<argument><expr><name pos:line="29" pos:column="33">trace<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="40">strerror<pos:position pos:line="29" pos:column="48"/></name><argument_list pos:line="29" pos:column="48">(<argument><expr><name pos:line="29" pos:column="49">errno<pos:position pos:line="29" pos:column="54"/></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="30" pos:column="25">key<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">-&gt;<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="30">fd<pos:position pos:line="30" pos:column="32"/></name></name> <operator pos:line="30" pos:column="33">=<pos:position pos:line="30" pos:column="34"/></operator> <name pos:line="30" pos:column="35">STDERR_FILENO<pos:position pos:line="30" pos:column="48"/></name></expr>;<pos:position pos:line="30" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></then> <else pos:line="31" pos:column="19">else <block pos:line="31" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="32" pos:column="25">key<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">-&gt;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="30">fd<pos:position pos:line="32" pos:column="32"/></name></name> <operator pos:line="32" pos:column="33">=<pos:position pos:line="32" pos:column="34"/></operator> <name pos:line="32" pos:column="35">fd<pos:position pos:line="32" pos:column="37"/></name></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="33" pos:column="25">key<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">-&gt;<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="30">need_close<pos:position pos:line="33" pos:column="40"/></name></name> <operator pos:line="33" pos:column="41">=<pos:position pos:line="33" pos:column="42"/></operator> <literal type="number" pos:line="33" pos:column="43">1<pos:position pos:line="33" pos:column="44"/></literal></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></else></if>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if></elseif> <else pos:line="35" pos:column="11">else <block pos:line="35" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">fprintf<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">stderr<pos:position pos:line="36" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="33">"What does '%s' for %s mean?\n"<pos:position pos:line="36" pos:column="64"/></literal>
			<literal type="string" pos:line="37" pos:column="25">"If you want to trace into a file, then please set "<pos:position pos:line="37" pos:column="77"/></literal>
			<literal type="string" pos:line="38" pos:column="25">"%s to an absolute pathname (starting with /).\n"<pos:position pos:line="38" pos:column="74"/></literal>
			<literal type="string" pos:line="39" pos:column="25">"Defaulting to tracing on stderr...\n"<pos:position pos:line="39" pos:column="63"/></literal></expr></argument>,
			<argument><expr><name pos:line="40" pos:column="25">trace<pos:position pos:line="40" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="32">key<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">-&gt;<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="37">key<pos:position pos:line="40" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="42">key<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">-&gt;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="47">key<pos:position pos:line="40" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="41" pos:column="17">key<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">fd<pos:position pos:line="41" pos:column="24"/></name></name> <operator pos:line="41" pos:column="25">=<pos:position pos:line="41" pos:column="26"/></operator> <name pos:line="41" pos:column="27">STDERR_FILENO<pos:position pos:line="41" pos:column="40"/></name></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name><name pos:line="44" pos:column="9">key<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">-&gt;<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="14">initialized<pos:position pos:line="44" pos:column="25"/></name></name> <operator pos:line="44" pos:column="26">=<pos:position pos:line="44" pos:column="27"/></operator> <literal type="number" pos:line="44" pos:column="28">1<pos:position pos:line="44" pos:column="29"/></literal></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>
	<return pos:line="45" pos:column="9">return <expr><name><name pos:line="45" pos:column="16">key<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">-&gt;<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="21">fd<pos:position pos:line="45" pos:column="23"/></name></name></expr>;<pos:position pos:line="45" pos:column="24"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

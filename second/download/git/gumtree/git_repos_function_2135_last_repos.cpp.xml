<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2135_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_entry_index<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">string_list<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">list<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">string<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">exact_match<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">left<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><operator pos:line="4" pos:column="20">-<pos:position pos:line="4" pos:column="21"/></operator><literal type="number" pos:line="4" pos:column="21">1<pos:position pos:line="4" pos:column="22"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="24">right<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name><name pos:line="4" pos:column="32">list<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">nr<pos:position pos:line="4" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">compare_strings_fn<pos:position pos:line="5" pos:column="27"/></name></type> <name pos:line="5" pos:column="28">cmp<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><ternary><condition><expr><name><name pos:line="5" pos:column="34">list<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">-&gt;<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="40">cmp<pos:position pos:line="5" pos:column="43"/></name></name></expr> ?<pos:position pos:line="5" pos:column="45"/></condition><then pos:line="5" pos:column="45"> <expr><name><name pos:line="5" pos:column="46">list<pos:position pos:line="5" pos:column="50"/></name><operator pos:line="5" pos:column="50">-&gt;<pos:position pos:line="5" pos:column="55"/></operator><name pos:line="5" pos:column="52">cmp<pos:position pos:line="5" pos:column="55"/></name></name></expr> <pos:position pos:line="5" pos:column="56"/></then><else pos:line="5" pos:column="56">: <expr><name pos:line="5" pos:column="58">strcmp<pos:position pos:line="5" pos:column="64"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="65"/></decl_stmt>

	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">left<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">+<pos:position pos:line="7" pos:column="22"/></operator> <literal type="number" pos:line="7" pos:column="23">1<pos:position pos:line="7" pos:column="24"/></literal> <operator pos:line="7" pos:column="25">&lt;<pos:position pos:line="7" pos:column="29"/></operator> <name pos:line="7" pos:column="27">right<pos:position pos:line="7" pos:column="32"/></name></expr>)<pos:position pos:line="7" pos:column="33"/></condition> <block pos:line="7" pos:column="34">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">middle<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><operator pos:line="8" pos:column="30">(<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">left<pos:position pos:line="8" pos:column="35"/></name> <operator pos:line="8" pos:column="36">+<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="38">right<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">)<pos:position pos:line="8" pos:column="44"/></operator> <operator pos:line="8" pos:column="45">/<pos:position pos:line="8" pos:column="46"/></operator> <literal type="number" pos:line="8" pos:column="47">2<pos:position pos:line="8" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">compare<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><call><name pos:line="9" pos:column="31">cmp<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">string<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="43">list<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">-&gt;<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="49">items<pos:position pos:line="9" pos:column="54"/></name><index pos:line="9" pos:column="54">[<expr><name pos:line="9" pos:column="55">middle<pos:position pos:line="9" pos:column="61"/></name></expr>]<pos:position pos:line="9" pos:column="62"/></index></name><operator pos:line="9" pos:column="62">.<pos:position pos:line="9" pos:column="63"/></operator><name pos:line="9" pos:column="63">string<pos:position pos:line="9" pos:column="69"/></name></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="71"/></decl_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">compare<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">&lt;<pos:position pos:line="10" pos:column="33"/></operator> <literal type="number" pos:line="10" pos:column="31">0<pos:position pos:line="10" pos:column="32"/></literal></expr>)<pos:position pos:line="10" pos:column="33"/></condition><then pos:line="10" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">right<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">=<pos:position pos:line="11" pos:column="32"/></operator> <name pos:line="11" pos:column="33">middle<pos:position pos:line="11" pos:column="39"/></name></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt></block></then>
		<elseif pos:line="12" pos:column="17">else <if pos:line="12" pos:column="22">if <condition pos:line="12" pos:column="25">(<expr><name pos:line="12" pos:column="26">compare<pos:position pos:line="12" pos:column="33"/></name> <operator pos:line="12" pos:column="34">&gt;<pos:position pos:line="12" pos:column="38"/></operator> <literal type="number" pos:line="12" pos:column="36">0<pos:position pos:line="12" pos:column="37"/></literal></expr>)<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">left<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">=<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">middle<pos:position pos:line="13" pos:column="38"/></name></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt></block></then></if></elseif>
		<else pos:line="14" pos:column="17">else <block pos:line="14" pos:column="22">{
			<expr_stmt><expr><operator pos:line="15" pos:column="25">*<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">exact_match<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">=<pos:position pos:line="15" pos:column="39"/></operator> <literal type="number" pos:line="15" pos:column="40">1<pos:position pos:line="15" pos:column="41"/></literal></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>
			<return pos:line="16" pos:column="25">return <expr><name pos:line="16" pos:column="32">middle<pos:position pos:line="16" pos:column="38"/></name></expr>;<pos:position pos:line="16" pos:column="39"/></return>
		}<pos:position pos:line="17" pos:column="18"/></block></else></if>
	}<pos:position pos:line="18" pos:column="10"/></block></while>

	<expr_stmt><expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">exact_match<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
	<return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">right<pos:position pos:line="21" pos:column="21"/></name></expr>;<pos:position pos:line="21" pos:column="22"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

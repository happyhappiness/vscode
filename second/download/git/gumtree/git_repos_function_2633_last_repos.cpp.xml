<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2633_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">set_upstreams<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">transport<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">transport<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="56">struct<pos:position pos:line="1" pos:column="62"/></name> <name pos:line="1" pos:column="63">ref<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">refs<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">pretend<pos:position pos:line="2" pos:column="20"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ref<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">ref<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">ref<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">=<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">refs<pos:position pos:line="5" pos:column="24"/></name></expr>;<pos:position pos:line="5" pos:column="25"/></init> <condition><expr><name pos:line="5" pos:column="26">ref<pos:position pos:line="5" pos:column="29"/></name></expr>;<pos:position pos:line="5" pos:column="30"/></condition> <incr><expr><name pos:line="5" pos:column="31">ref<pos:position pos:line="5" pos:column="34"/></name> <operator pos:line="5" pos:column="35">=<pos:position pos:line="5" pos:column="36"/></operator> <name><name pos:line="5" pos:column="37">ref<pos:position pos:line="5" pos:column="40"/></name><operator pos:line="5" pos:column="40">-&gt;<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="42">next<pos:position pos:line="5" pos:column="46"/></name></name></expr></incr>)<pos:position pos:line="5" pos:column="47"/></control> <block pos:line="5" pos:column="48">{
		<decl_stmt><decl><type><specifier pos:line="6" pos:column="17">const<pos:position pos:line="6" pos:column="22"/></specifier> <name pos:line="6" pos:column="23">char<pos:position pos:line="6" pos:column="27"/></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">localname<pos:position pos:line="6" pos:column="38"/></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="7" pos:column="17">const<pos:position pos:line="7" pos:column="22"/></specifier> <name pos:line="7" pos:column="23">char<pos:position pos:line="7" pos:column="27"/></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">tmp<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="8" pos:column="17">const<pos:position pos:line="8" pos:column="22"/></specifier> <name pos:line="8" pos:column="23">char<pos:position pos:line="8" pos:column="27"/></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">remotename<pos:position pos:line="8" pos:column="39"/></name></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">unsigned<pos:position pos:line="9" pos:column="25"/></name> <name pos:line="9" pos:column="26">char<pos:position pos:line="9" pos:column="30"/></name></type> <name><name pos:line="9" pos:column="31">sha<pos:position pos:line="9" pos:column="34"/></name><index pos:line="9" pos:column="34">[<expr><literal type="number" pos:line="9" pos:column="35">20<pos:position pos:line="9" pos:column="37"/></literal></expr>]<pos:position pos:line="9" pos:column="38"/></index></name></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">int<pos:position pos:line="10" pos:column="20"/></name></type> <name pos:line="10" pos:column="21">flag<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><literal type="number" pos:line="10" pos:column="28">0<pos:position pos:line="10" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
		<comment type="block" pos:line="11" pos:column="17">/*
		 * Check suitability for tracking. Must be successful /
		 * already up-to-date ref create/modify (not delete).
		 */</comment>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name><name pos:line="15" pos:column="21">ref<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">status<pos:position pos:line="15" pos:column="32"/></name></name> <operator pos:line="15" pos:column="33">!=<pos:position pos:line="15" pos:column="35"/></operator> <name pos:line="15" pos:column="36">REF_STATUS_OK<pos:position pos:line="15" pos:column="49"/></name> <operator pos:line="15" pos:column="50">&amp;&amp;<pos:position pos:line="15" pos:column="60"/></operator>
			<name><name pos:line="16" pos:column="25">ref<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">status<pos:position pos:line="16" pos:column="36"/></name></name> <operator pos:line="16" pos:column="37">!=<pos:position pos:line="16" pos:column="39"/></operator> <name pos:line="16" pos:column="40">REF_STATUS_UPTODATE<pos:position pos:line="16" pos:column="59"/></name></expr>)<pos:position pos:line="16" pos:column="60"/></condition><then pos:line="16" pos:column="60">
			<block type="pseudo"><continue pos:line="17" pos:column="25">continue;<pos:position pos:line="17" pos:column="34"/></continue></block></then></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><name><name pos:line="18" pos:column="22">ref<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">peer_ref<pos:position pos:line="18" pos:column="35"/></name></name></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36">
			<block type="pseudo"><continue pos:line="19" pos:column="25">continue;<pos:position pos:line="19" pos:column="34"/></continue></block></then></if>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">is_null_oid<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><operator pos:line="20" pos:column="33">&amp;<pos:position pos:line="20" pos:column="38"/></operator><name><name pos:line="20" pos:column="34">ref<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">new_oid<pos:position pos:line="20" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="48"/></condition><then pos:line="20" pos:column="48">
			<block type="pseudo"><continue pos:line="21" pos:column="25">continue;<pos:position pos:line="21" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="23" pos:column="17">/* Follow symbolic refs (mainly for HEAD). */</comment>
		<expr_stmt><expr><name pos:line="24" pos:column="17">localname<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">=<pos:position pos:line="24" pos:column="28"/></operator> <name><name pos:line="24" pos:column="29">ref<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">-&gt;<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="34">peer_ref<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">-&gt;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="44">name<pos:position pos:line="24" pos:column="48"/></name></name></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="25" pos:column="17">remotename<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">=<pos:position pos:line="25" pos:column="29"/></operator> <name><name pos:line="25" pos:column="30">ref<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">name<pos:position pos:line="25" pos:column="39"/></name></name></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">tmp<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <call><name pos:line="26" pos:column="23">resolve_ref_unsafe<pos:position pos:line="26" pos:column="41"/></name><argument_list pos:line="26" pos:column="41">(<argument><expr><name pos:line="26" pos:column="42">localname<pos:position pos:line="26" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="53">RESOLVE_REF_READING<pos:position pos:line="26" pos:column="72"/></name></expr></argument>,
					 <argument><expr><name pos:line="27" pos:column="42">sha<pos:position pos:line="27" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="47">&amp;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="48">flag<pos:position pos:line="27" pos:column="52"/></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">tmp<pos:position pos:line="28" pos:column="24"/></name> <operator pos:line="28" pos:column="25">&amp;&amp;<pos:position pos:line="28" pos:column="35"/></operator> <name pos:line="28" pos:column="28">flag<pos:position pos:line="28" pos:column="32"/></name> <operator pos:line="28" pos:column="33">&amp;<pos:position pos:line="28" pos:column="38"/></operator> <name pos:line="28" pos:column="35">REF_ISSYMREF<pos:position pos:line="28" pos:column="47"/></name> <operator pos:line="28" pos:column="48">&amp;&amp;<pos:position pos:line="28" pos:column="58"/></operator>
			<call><name pos:line="29" pos:column="25">starts_with<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">tmp<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="42">"refs/heads/"<pos:position pos:line="29" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="57"/></condition><then pos:line="29" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="25">localname<pos:position pos:line="30" pos:column="34"/></name> <operator pos:line="30" pos:column="35">=<pos:position pos:line="30" pos:column="36"/></operator> <name pos:line="30" pos:column="37">tmp<pos:position pos:line="30" pos:column="40"/></name></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="32" pos:column="17">/* Both source and destination must be local branches. */</comment>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">!<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">localname<pos:position pos:line="33" pos:column="31"/></name> <operator pos:line="33" pos:column="32">||<pos:position pos:line="33" pos:column="34"/></operator> <operator pos:line="33" pos:column="35">!<pos:position pos:line="33" pos:column="36"/></operator><call><name pos:line="33" pos:column="36">starts_with<pos:position pos:line="33" pos:column="47"/></name><argument_list pos:line="33" pos:column="47">(<argument><expr><name pos:line="33" pos:column="48">localname<pos:position pos:line="33" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="59">"refs/heads/"<pos:position pos:line="33" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="74"/></condition><then pos:line="33" pos:column="74">
			<block type="pseudo"><continue pos:line="34" pos:column="25">continue;<pos:position pos:line="34" pos:column="34"/></continue></block></then></if>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><operator pos:line="35" pos:column="21">!<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">remotename<pos:position pos:line="35" pos:column="32"/></name> <operator pos:line="35" pos:column="33">||<pos:position pos:line="35" pos:column="35"/></operator> <operator pos:line="35" pos:column="36">!<pos:position pos:line="35" pos:column="37"/></operator><call><name pos:line="35" pos:column="37">starts_with<pos:position pos:line="35" pos:column="48"/></name><argument_list pos:line="35" pos:column="48">(<argument><expr><name pos:line="35" pos:column="49">remotename<pos:position pos:line="35" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="61">"refs/heads/"<pos:position pos:line="35" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="76"/></condition><then pos:line="35" pos:column="76">
			<block type="pseudo"><continue pos:line="36" pos:column="25">continue;<pos:position pos:line="36" pos:column="34"/></continue></block></then></if>

		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><operator pos:line="38" pos:column="21">!<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">pretend<pos:position pos:line="38" pos:column="29"/></name></expr>)<pos:position pos:line="38" pos:column="30"/></condition><then pos:line="38" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="25">install_branch_config<pos:position pos:line="39" pos:column="46"/></name><argument_list pos:line="39" pos:column="46">(<argument><expr><name pos:line="39" pos:column="47">BRANCH_CONFIG_VERBOSE<pos:position pos:line="39" pos:column="68"/></name></expr></argument>,
				<argument><expr><name pos:line="40" pos:column="33">localname<pos:position pos:line="40" pos:column="42"/></name> <operator pos:line="40" pos:column="43">+<pos:position pos:line="40" pos:column="44"/></operator> <literal type="number" pos:line="40" pos:column="45">11<pos:position pos:line="40" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="49">transport<pos:position pos:line="40" pos:column="58"/></name><operator pos:line="40" pos:column="58">-&gt;<pos:position pos:line="40" pos:column="63"/></operator><name pos:line="40" pos:column="60">remote<pos:position pos:line="40" pos:column="66"/></name><operator pos:line="40" pos:column="66">-&gt;<pos:position pos:line="40" pos:column="71"/></operator><name pos:line="40" pos:column="68">name<pos:position pos:line="40" pos:column="72"/></name></name></expr></argument>,
				<argument><expr><name pos:line="41" pos:column="33">remotename<pos:position pos:line="41" pos:column="43"/></name></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="45"/></expr_stmt></block></then>
		<else pos:line="42" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="25">printf<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><call><name pos:line="43" pos:column="32">_<pos:position pos:line="43" pos:column="33"/></name><argument_list pos:line="43" pos:column="33">(<argument><expr><literal type="string" pos:line="43" pos:column="34">"Would set upstream of '%s' to '%s' of '%s'\n"<pos:position pos:line="43" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="81"/></argument_list></call></expr></argument>,
				<argument><expr><name pos:line="44" pos:column="33">localname<pos:position pos:line="44" pos:column="42"/></name> <operator pos:line="44" pos:column="43">+<pos:position pos:line="44" pos:column="44"/></operator> <literal type="number" pos:line="44" pos:column="45">11<pos:position pos:line="44" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="49">remotename<pos:position pos:line="44" pos:column="59"/></name> <operator pos:line="44" pos:column="60">+<pos:position pos:line="44" pos:column="61"/></operator> <literal type="number" pos:line="44" pos:column="62">11<pos:position pos:line="44" pos:column="64"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="45" pos:column="33">transport<pos:position pos:line="45" pos:column="42"/></name><operator pos:line="45" pos:column="42">-&gt;<pos:position pos:line="45" pos:column="47"/></operator><name pos:line="45" pos:column="44">remote<pos:position pos:line="45" pos:column="50"/></name><operator pos:line="45" pos:column="50">-&gt;<pos:position pos:line="45" pos:column="55"/></operator><name pos:line="45" pos:column="52">name<pos:position pos:line="45" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="58"/></expr_stmt></block></else></if>
	}<pos:position pos:line="46" pos:column="10"/></block></for>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

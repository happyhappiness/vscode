<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1534_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_dirstat_params<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">diff_options<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">options<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="63">const<pos:position pos:line="1" pos:column="68"/></specifier> <name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">params_string<pos:position pos:line="1" pos:column="88"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="2" pos:column="33">struct<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">strbuf<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">errmsg<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">params_copy<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><call><name pos:line="4" pos:column="29">xstrdup<pos:position pos:line="4" pos:column="36"/></name><argument_list pos:line="4" pos:column="36">(<argument><expr><name pos:line="4" pos:column="37">params_string<pos:position pos:line="4" pos:column="50"/></name></expr></argument>)<pos:position pos:line="4" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">string_list<pos:position pos:line="5" pos:column="27"/></name></name></type> <name pos:line="5" pos:column="28">params<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><name pos:line="5" pos:column="37">STRING_LIST_INIT_NODUP<pos:position pos:line="5" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ret<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">params_copy<pos:position pos:line="9" pos:column="25"/></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">string_list_split_in_place<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><operator pos:line="10" pos:column="44">&amp;<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="45">params<pos:position pos:line="10" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="53">params_copy<pos:position pos:line="10" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="66">','<pos:position pos:line="10" pos:column="69"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="71">-<pos:position pos:line="10" pos:column="72"/></operator><literal type="number" pos:line="10" pos:column="72">1<pos:position pos:line="10" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="75"/></expr_stmt></block></then></if>
	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name><name pos:line="11" pos:column="25">params<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">.<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">nr<pos:position pos:line="11" pos:column="34"/></name></name></expr>;<pos:position pos:line="11" pos:column="35"/></condition> <incr><expr><name pos:line="11" pos:column="36">i<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">++<pos:position pos:line="11" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="40"/></control> <block pos:line="11" pos:column="41">{
		<decl_stmt><decl><type><specifier pos:line="12" pos:column="17">const<pos:position pos:line="12" pos:column="22"/></specifier> <name pos:line="12" pos:column="23">char<pos:position pos:line="12" pos:column="27"/></name> <modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">p<pos:position pos:line="12" pos:column="30"/></name> <init pos:line="12" pos:column="31">= <expr><name><name pos:line="12" pos:column="33">params<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">.<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">items<pos:position pos:line="12" pos:column="45"/></name><index pos:line="12" pos:column="45">[<expr><name pos:line="12" pos:column="46">i<pos:position pos:line="12" pos:column="47"/></name></expr>]<pos:position pos:line="12" pos:column="48"/></index></name><operator pos:line="12" pos:column="48">.<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="49">string<pos:position pos:line="12" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="56"/></decl_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><call><name pos:line="13" pos:column="22">strcmp<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">p<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="32">"changes"<pos:position pos:line="13" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="43"/></condition><then pos:line="13" pos:column="43"> <block pos:line="13" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">DIFF_OPT_CLR<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">options<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">DIRSTAT_BY_LINE<pos:position pos:line="14" pos:column="62"/></name></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">DIFF_OPT_CLR<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">options<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="47">DIRSTAT_BY_FILE<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></then> <elseif pos:line="16" pos:column="19">else <if pos:line="16" pos:column="24">if <condition pos:line="16" pos:column="27">(<expr><operator pos:line="16" pos:column="28">!<pos:position pos:line="16" pos:column="29"/></operator><call><name pos:line="16" pos:column="29">strcmp<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">p<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="39">"lines"<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="48"/></condition><then pos:line="16" pos:column="48"> <block pos:line="16" pos:column="49">{
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">DIFF_OPT_SET<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">options<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="47">DIRSTAT_BY_LINE<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">DIFF_OPT_CLR<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">options<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="47">DIRSTAT_BY_FILE<pos:position pos:line="18" pos:column="62"/></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if></elseif> <elseif pos:line="19" pos:column="19">else <if pos:line="19" pos:column="24">if <condition pos:line="19" pos:column="27">(<expr><operator pos:line="19" pos:column="28">!<pos:position pos:line="19" pos:column="29"/></operator><call><name pos:line="19" pos:column="29">strcmp<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">p<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="39">"files"<pos:position pos:line="19" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="48"/></condition><then pos:line="19" pos:column="48"> <block pos:line="19" pos:column="49">{
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">DIFF_OPT_CLR<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">options<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="47">DIRSTAT_BY_LINE<pos:position pos:line="20" pos:column="62"/></name></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">DIFF_OPT_SET<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">options<pos:position pos:line="21" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">DIRSTAT_BY_FILE<pos:position pos:line="21" pos:column="62"/></name></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if></elseif> <elseif pos:line="22" pos:column="19">else <if pos:line="22" pos:column="24">if <condition pos:line="22" pos:column="27">(<expr><operator pos:line="22" pos:column="28">!<pos:position pos:line="22" pos:column="29"/></operator><call><name pos:line="22" pos:column="29">strcmp<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><name pos:line="22" pos:column="36">p<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="39">"noncumulative"<pos:position pos:line="22" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="56"/></condition><then pos:line="22" pos:column="56"> <block pos:line="22" pos:column="57">{
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">DIFF_OPT_CLR<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><name pos:line="23" pos:column="38">options<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="47">DIRSTAT_CUMULATIVE<pos:position pos:line="23" pos:column="65"/></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if></elseif> <elseif pos:line="24" pos:column="19">else <if pos:line="24" pos:column="24">if <condition pos:line="24" pos:column="27">(<expr><operator pos:line="24" pos:column="28">!<pos:position pos:line="24" pos:column="29"/></operator><call><name pos:line="24" pos:column="29">strcmp<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><name pos:line="24" pos:column="36">p<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="39">"cumulative"<pos:position pos:line="24" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="53"/></condition><then pos:line="24" pos:column="53"> <block pos:line="24" pos:column="54">{
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">DIFF_OPT_SET<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><name pos:line="25" pos:column="38">options<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="47">DIRSTAT_CUMULATIVE<pos:position pos:line="25" pos:column="65"/></name></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if></elseif> <elseif pos:line="26" pos:column="19">else <if pos:line="26" pos:column="24">if <condition pos:line="26" pos:column="27">(<expr><call><name pos:line="26" pos:column="28">isdigit<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><operator pos:line="26" pos:column="36">*<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="37">p<pos:position pos:line="26" pos:column="38"/></name></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="40"/></condition><then pos:line="26" pos:column="40"> <block pos:line="26" pos:column="41">{
			<decl_stmt><decl><type><name pos:line="27" pos:column="25">char<pos:position pos:line="27" pos:column="29"/></name> <modifier pos:line="27" pos:column="30">*<pos:position pos:line="27" pos:column="31"/></modifier></type><name pos:line="27" pos:column="31">end<pos:position pos:line="27" pos:column="34"/></name></decl>;<pos:position pos:line="27" pos:column="35"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="28" pos:column="25">int<pos:position pos:line="28" pos:column="28"/></name></type> <name pos:line="28" pos:column="29">permille<pos:position pos:line="28" pos:column="37"/></name> <init pos:line="28" pos:column="38">= <expr><call><name pos:line="28" pos:column="40">strtoul<pos:position pos:line="28" pos:column="47"/></name><argument_list pos:line="28" pos:column="47">(<argument><expr><name pos:line="28" pos:column="48">p<pos:position pos:line="28" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="51">&amp;<pos:position pos:line="28" pos:column="56"/></operator><name pos:line="28" pos:column="52">end<pos:position pos:line="28" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="57">10<pos:position pos:line="28" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="60"/></argument_list></call> <operator pos:line="28" pos:column="61">*<pos:position pos:line="28" pos:column="62"/></operator> <literal type="number" pos:line="28" pos:column="63">10<pos:position pos:line="28" pos:column="65"/></literal></expr></init></decl>;<pos:position pos:line="28" pos:column="66"/></decl_stmt>
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><operator pos:line="29" pos:column="29">*<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">end<pos:position pos:line="29" pos:column="33"/></name> <operator pos:line="29" pos:column="34">==<pos:position pos:line="29" pos:column="36"/></operator> <literal type="char" pos:line="29" pos:column="37">'.'<pos:position pos:line="29" pos:column="40"/></literal> <operator pos:line="29" pos:column="41">&amp;&amp;<pos:position pos:line="29" pos:column="51"/></operator> <call><name pos:line="29" pos:column="44">isdigit<pos:position pos:line="29" pos:column="51"/></name><argument_list pos:line="29" pos:column="51">(<argument><expr><operator pos:line="29" pos:column="52">*<pos:position pos:line="29" pos:column="53"/></operator><operator pos:line="29" pos:column="53">++<pos:position pos:line="29" pos:column="55"/></operator><name pos:line="29" pos:column="55">end<pos:position pos:line="29" pos:column="58"/></name></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="60"/></condition><then pos:line="29" pos:column="60"> <block pos:line="29" pos:column="61">{
				<comment type="block" pos:line="30" pos:column="33">/* only use first digit */</comment>
				<expr_stmt><expr><name pos:line="31" pos:column="33">permille<pos:position pos:line="31" pos:column="41"/></name> <operator pos:line="31" pos:column="42">+=<pos:position pos:line="31" pos:column="44"/></operator> <operator pos:line="31" pos:column="45">*<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="46">end<pos:position pos:line="31" pos:column="49"/></name> <operator pos:line="31" pos:column="50">-<pos:position pos:line="31" pos:column="51"/></operator> <literal type="char" pos:line="31" pos:column="52">'0'<pos:position pos:line="31" pos:column="55"/></literal></expr>;<pos:position pos:line="31" pos:column="56"/></expr_stmt>
				<comment type="block" pos:line="32" pos:column="33">/* .. and ignore any further digits */</comment>
				<while pos:line="33" pos:column="33">while <condition pos:line="33" pos:column="39">(<expr><call><name pos:line="33" pos:column="40">isdigit<pos:position pos:line="33" pos:column="47"/></name><argument_list pos:line="33" pos:column="47">(<argument><expr><operator pos:line="33" pos:column="48">*<pos:position pos:line="33" pos:column="49"/></operator><operator pos:line="33" pos:column="49">++<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="51">end<pos:position pos:line="33" pos:column="54"/></name></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="56"/></condition>
					<block type="pseudo"><empty_stmt pos:line="34" pos:column="41">;<pos:position pos:line="34" pos:column="42"/></empty_stmt></block></while> <comment type="block" pos:line="34" pos:column="43">/* nothing */</comment>
			}<pos:position pos:line="35" pos:column="26"/></block></then></if>
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><operator pos:line="36" pos:column="29">!<pos:position pos:line="36" pos:column="30"/></operator><operator pos:line="36" pos:column="30">*<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="31">end<pos:position pos:line="36" pos:column="34"/></name></expr>)<pos:position pos:line="36" pos:column="35"/></condition><then pos:line="36" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="33">options<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">-&gt;<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="42">dirstat_permille<pos:position pos:line="37" pos:column="58"/></name></name> <operator pos:line="37" pos:column="59">=<pos:position pos:line="37" pos:column="60"/></operator> <name pos:line="37" pos:column="61">permille<pos:position pos:line="37" pos:column="69"/></name></expr>;<pos:position pos:line="37" pos:column="70"/></expr_stmt></block></then>
			<else pos:line="38" pos:column="25">else <block pos:line="38" pos:column="30">{
				<expr_stmt><expr><call><name pos:line="39" pos:column="33">strbuf_addf<pos:position pos:line="39" pos:column="44"/></name><argument_list pos:line="39" pos:column="44">(<argument><expr><name pos:line="39" pos:column="45">errmsg<pos:position pos:line="39" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="53">_<pos:position pos:line="39" pos:column="54"/></name><argument_list pos:line="39" pos:column="54">(<argument><expr><literal type="string" pos:line="39" pos:column="55">"  Failed to parse dirstat cut-off percentage '%s'\n"<pos:position pos:line="39" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="109"/></argument_list></call></expr></argument>,
					    <argument><expr><name pos:line="40" pos:column="45">p<pos:position pos:line="40" pos:column="46"/></name></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="48"/></expr_stmt>
				<expr_stmt><expr><name pos:line="41" pos:column="33">ret<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">++<pos:position pos:line="41" pos:column="38"/></operator></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>
			}<pos:position pos:line="42" pos:column="26"/></block></else></if>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if></elseif> <else pos:line="43" pos:column="19">else <block pos:line="43" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="44" pos:column="25">strbuf_addf<pos:position pos:line="44" pos:column="36"/></name><argument_list pos:line="44" pos:column="36">(<argument><expr><name pos:line="44" pos:column="37">errmsg<pos:position pos:line="44" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="45">_<pos:position pos:line="44" pos:column="46"/></name><argument_list pos:line="44" pos:column="46">(<argument><expr><literal type="string" pos:line="44" pos:column="47">"  Unknown dirstat parameter '%s'\n"<pos:position pos:line="44" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="44" pos:column="86">p<pos:position pos:line="44" pos:column="87"/></name></expr></argument>)<pos:position pos:line="44" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="89"/></expr_stmt>
			<expr_stmt><expr><name pos:line="45" pos:column="25">ret<pos:position pos:line="45" pos:column="28"/></name><operator pos:line="45" pos:column="28">++<pos:position pos:line="45" pos:column="30"/></operator></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="46" pos:column="18"/></block></else></if>

	}<pos:position pos:line="48" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">string_list_clear<pos:position pos:line="49" pos:column="26"/></name><argument_list pos:line="49" pos:column="26">(<argument><expr><operator pos:line="49" pos:column="27">&amp;<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="28">params<pos:position pos:line="49" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="36">0<pos:position pos:line="49" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">free<pos:position pos:line="50" pos:column="13"/></name><argument_list pos:line="50" pos:column="13">(<argument><expr><name pos:line="50" pos:column="14">params_copy<pos:position pos:line="50" pos:column="25"/></name></expr></argument>)<pos:position pos:line="50" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>
	<return pos:line="51" pos:column="9">return <expr><name pos:line="51" pos:column="16">ret<pos:position pos:line="51" pos:column="19"/></name></expr>;<pos:position pos:line="51" pos:column="20"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

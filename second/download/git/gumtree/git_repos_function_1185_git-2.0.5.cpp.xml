<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1185_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">uintmax_t<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">do_change_note_fanout<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">tree_entry<pos:position pos:line="2" pos:column="34"/></name></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">orig_root<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="47">struct<pos:position pos:line="2" pos:column="53"/></name> <name pos:line="2" pos:column="54">tree_entry<pos:position pos:line="2" pos:column="64"/></name></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">root<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">char<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">hex_sha1<pos:position pos:line="3" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="33">unsigned<pos:position pos:line="3" pos:column="41"/></name> <name pos:line="3" pos:column="42">int<pos:position pos:line="3" pos:column="45"/></name></type> <name pos:line="3" pos:column="46">hex_sha1_len<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">fullpath<pos:position pos:line="4" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="33">unsigned<pos:position pos:line="4" pos:column="41"/></name> <name pos:line="4" pos:column="42">int<pos:position pos:line="4" pos:column="45"/></name></type> <name pos:line="4" pos:column="46">fullpath_len<pos:position pos:line="4" pos:column="58"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="5" pos:column="17">unsigned<pos:position pos:line="5" pos:column="25"/></name> <name pos:line="5" pos:column="26">char<pos:position pos:line="5" pos:column="30"/></name></type> <name pos:line="5" pos:column="31">fanout<pos:position pos:line="5" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="38"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">tree_content<pos:position pos:line="7" pos:column="28"/></name></name> <modifier pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></modifier></type><name pos:line="7" pos:column="30">t<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><name><name pos:line="7" pos:column="34">root<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">-&gt;<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="40">tree<pos:position pos:line="7" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">tree_entry<pos:position pos:line="8" pos:column="26"/></name></name> <modifier pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></modifier></type><name pos:line="8" pos:column="28">e<pos:position pos:line="8" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="31">leaf<pos:position pos:line="8" pos:column="35"/></name></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">int<pos:position pos:line="9" pos:column="21"/></name></type> <name pos:line="9" pos:column="22">i<pos:position pos:line="9" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="25">tmp_hex_sha1_len<pos:position pos:line="9" pos:column="41"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="43">tmp_fullpath_len<pos:position pos:line="9" pos:column="59"/></name></decl>;<pos:position pos:line="9" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">uintmax_t<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">num_notes<pos:position pos:line="10" pos:column="28"/></name> <init pos:line="10" pos:column="29">= <expr><literal type="number" pos:line="10" pos:column="31">0<pos:position pos:line="10" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">unsigned<pos:position pos:line="11" pos:column="17"/></name> <name pos:line="11" pos:column="18">char<pos:position pos:line="11" pos:column="22"/></name></type> <name><name pos:line="11" pos:column="23">sha1<pos:position pos:line="11" pos:column="27"/></name><index pos:line="11" pos:column="27">[<expr><literal type="number" pos:line="11" pos:column="28">20<pos:position pos:line="11" pos:column="30"/></literal></expr>]<pos:position pos:line="11" pos:column="31"/></index></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name></type> <name><name pos:line="12" pos:column="14">realpath<pos:position pos:line="12" pos:column="22"/></name><index pos:line="12" pos:column="22">[<expr><literal type="number" pos:line="12" pos:column="23">60<pos:position pos:line="12" pos:column="25"/></literal></expr>]<pos:position pos:line="12" pos:column="26"/></index></name></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>

	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">i<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>;<pos:position pos:line="14" pos:column="20"/></init> <condition><expr><name pos:line="14" pos:column="21">t<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&amp;&amp;<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="26">i<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">&lt;<pos:position pos:line="14" pos:column="32"/></operator> <name><name pos:line="14" pos:column="30">t<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">entry_count<pos:position pos:line="14" pos:column="44"/></name></name></expr>;<pos:position pos:line="14" pos:column="45"/></condition> <incr><expr><name pos:line="14" pos:column="46">i<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">++<pos:position pos:line="14" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="50"/></control> <block pos:line="14" pos:column="51">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">e<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <name><name pos:line="15" pos:column="21">t<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">entries<pos:position pos:line="15" pos:column="31"/></name><index pos:line="15" pos:column="31">[<expr><name pos:line="15" pos:column="32">i<pos:position pos:line="15" pos:column="33"/></name></expr>]<pos:position pos:line="15" pos:column="34"/></index></name></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">tmp_hex_sha1_len<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">=<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="36">hex_sha1_len<pos:position pos:line="16" pos:column="48"/></name> <operator pos:line="16" pos:column="49">+<pos:position pos:line="16" pos:column="50"/></operator> <name><name pos:line="16" pos:column="51">e<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">-&gt;<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="54">name<pos:position pos:line="16" pos:column="58"/></name><operator pos:line="16" pos:column="58">-&gt;<pos:position pos:line="16" pos:column="63"/></operator><name pos:line="16" pos:column="60">str_len<pos:position pos:line="16" pos:column="67"/></name></name></expr>;<pos:position pos:line="16" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">tmp_fullpath_len<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">=<pos:position pos:line="17" pos:column="35"/></operator> <name pos:line="17" pos:column="36">fullpath_len<pos:position pos:line="17" pos:column="48"/></name></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>

		<comment type="block" pos:line="19" pos:column="17">/*
		 * We're interested in EITHER existing note entries (entries
		 * with exactly 40 hex chars in path, not including directory
		 * separators), OR directory entries that may contain note
		 * entries (with &lt; 40 hex chars in path).
		 * Also, each path component in a note entry must be a multiple
		 * of 2 chars.
		 */</comment>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><name><name pos:line="27" pos:column="22">e<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">-&gt;<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="25">versions<pos:position pos:line="27" pos:column="33"/></name><index pos:line="27" pos:column="33">[<expr><literal type="number" pos:line="27" pos:column="34">1<pos:position pos:line="27" pos:column="35"/></literal></expr>]<pos:position pos:line="27" pos:column="36"/></index></name><operator pos:line="27" pos:column="36">.<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="37">mode<pos:position pos:line="27" pos:column="41"/></name> <operator pos:line="27" pos:column="42">||<pos:position pos:line="27" pos:column="44"/></operator>
		    <name pos:line="28" pos:column="21">tmp_hex_sha1_len<pos:position pos:line="28" pos:column="37"/></name> <operator pos:line="28" pos:column="38">&gt;<pos:position pos:line="28" pos:column="42"/></operator> <literal type="number" pos:line="28" pos:column="40">40<pos:position pos:line="28" pos:column="42"/></literal> <operator pos:line="28" pos:column="43">||<pos:position pos:line="28" pos:column="45"/></operator>
		    <name><name pos:line="29" pos:column="21">e<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">name<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">-&gt;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="30">str_len<pos:position pos:line="29" pos:column="37"/></name></name> <operator pos:line="29" pos:column="38">%<pos:position pos:line="29" pos:column="39"/></operator> <literal type="number" pos:line="29" pos:column="40">2<pos:position pos:line="29" pos:column="41"/></literal></expr>)<pos:position pos:line="29" pos:column="42"/></condition><then pos:line="29" pos:column="42">
			<block type="pseudo"><continue pos:line="30" pos:column="25">continue;<pos:position pos:line="30" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="32" pos:column="17">/* This _may_ be a note entry, or a subdir containing notes */</comment>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">memcpy<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">hex_sha1<pos:position pos:line="33" pos:column="32"/></name> <operator pos:line="33" pos:column="33">+<pos:position pos:line="33" pos:column="34"/></operator> <name pos:line="33" pos:column="35">hex_sha1_len<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="49">e<pos:position pos:line="33" pos:column="50"/></name><operator pos:line="33" pos:column="50">-&gt;<pos:position pos:line="33" pos:column="55"/></operator><name pos:line="33" pos:column="52">name<pos:position pos:line="33" pos:column="56"/></name><operator pos:line="33" pos:column="56">-&gt;<pos:position pos:line="33" pos:column="61"/></operator><name pos:line="33" pos:column="58">str_dat<pos:position pos:line="33" pos:column="65"/></name></name></expr></argument>,
		       <argument><expr><name><name pos:line="34" pos:column="24">e<pos:position pos:line="34" pos:column="25"/></name><operator pos:line="34" pos:column="25">-&gt;<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="27">name<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">-&gt;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="33">str_len<pos:position pos:line="34" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">tmp_fullpath_len<pos:position pos:line="35" pos:column="37"/></name></expr>)<pos:position pos:line="35" pos:column="38"/></condition><then pos:line="35" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="25">fullpath<pos:position pos:line="36" pos:column="33"/></name><index pos:line="36" pos:column="33">[<expr><name pos:line="36" pos:column="34">tmp_fullpath_len<pos:position pos:line="36" pos:column="50"/></name><operator pos:line="36" pos:column="50">++<pos:position pos:line="36" pos:column="52"/></operator></expr>]<pos:position pos:line="36" pos:column="53"/></index></name> <operator pos:line="36" pos:column="54">=<pos:position pos:line="36" pos:column="55"/></operator> <literal type="char" pos:line="36" pos:column="56">'/'<pos:position pos:line="36" pos:column="59"/></literal></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">memcpy<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><name pos:line="37" pos:column="24">fullpath<pos:position pos:line="37" pos:column="32"/></name> <operator pos:line="37" pos:column="33">+<pos:position pos:line="37" pos:column="34"/></operator> <name pos:line="37" pos:column="35">tmp_fullpath_len<pos:position pos:line="37" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="53">e<pos:position pos:line="37" pos:column="54"/></name><operator pos:line="37" pos:column="54">-&gt;<pos:position pos:line="37" pos:column="59"/></operator><name pos:line="37" pos:column="56">name<pos:position pos:line="37" pos:column="60"/></name><operator pos:line="37" pos:column="60">-&gt;<pos:position pos:line="37" pos:column="65"/></operator><name pos:line="37" pos:column="62">str_dat<pos:position pos:line="37" pos:column="69"/></name></name></expr></argument>,
		       <argument><expr><name><name pos:line="38" pos:column="24">e<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">-&gt;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="27">name<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">-&gt;<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="33">str_len<pos:position pos:line="38" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="39" pos:column="17">tmp_fullpath_len<pos:position pos:line="39" pos:column="33"/></name> <operator pos:line="39" pos:column="34">+=<pos:position pos:line="39" pos:column="36"/></operator> <name><name pos:line="39" pos:column="37">e<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">-&gt;<pos:position pos:line="39" pos:column="43"/></operator><name pos:line="39" pos:column="40">name<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">-&gt;<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="46">str_len<pos:position pos:line="39" pos:column="53"/></name></name></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="40" pos:column="17">fullpath<pos:position pos:line="40" pos:column="25"/></name><index pos:line="40" pos:column="25">[<expr><name pos:line="40" pos:column="26">tmp_fullpath_len<pos:position pos:line="40" pos:column="42"/></name></expr>]<pos:position pos:line="40" pos:column="43"/></index></name> <operator pos:line="40" pos:column="44">=<pos:position pos:line="40" pos:column="45"/></operator> <literal type="char" pos:line="40" pos:column="46">'\0'<pos:position pos:line="40" pos:column="50"/></literal></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt>

		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">tmp_hex_sha1_len<pos:position pos:line="42" pos:column="37"/></name> <operator pos:line="42" pos:column="38">==<pos:position pos:line="42" pos:column="40"/></operator> <literal type="number" pos:line="42" pos:column="41">40<pos:position pos:line="42" pos:column="43"/></literal> <operator pos:line="42" pos:column="44">&amp;&amp;<pos:position pos:line="42" pos:column="54"/></operator> <operator pos:line="42" pos:column="47">!<pos:position pos:line="42" pos:column="48"/></operator><call><name pos:line="42" pos:column="48">get_sha1_hex<pos:position pos:line="42" pos:column="60"/></name><argument_list pos:line="42" pos:column="60">(<argument><expr><name pos:line="42" pos:column="61">hex_sha1<pos:position pos:line="42" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="71">sha1<pos:position pos:line="42" pos:column="75"/></name></expr></argument>)<pos:position pos:line="42" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="77"/></condition><then pos:line="42" pos:column="77"> <block pos:line="42" pos:column="78">{
			<comment type="block" pos:line="43" pos:column="25">/* This is a note entry */</comment>
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><name pos:line="44" pos:column="29">fanout<pos:position pos:line="44" pos:column="35"/></name> <operator pos:line="44" pos:column="36">==<pos:position pos:line="44" pos:column="38"/></operator> <literal type="number" pos:line="44" pos:column="39">0xff<pos:position pos:line="44" pos:column="43"/></literal></expr>)<pos:position pos:line="44" pos:column="44"/></condition><then pos:line="44" pos:column="44"> <block pos:line="44" pos:column="45">{
				<comment type="block" pos:line="45" pos:column="33">/* Counting mode, no rename */</comment>
				<expr_stmt><expr><name pos:line="46" pos:column="33">num_notes<pos:position pos:line="46" pos:column="42"/></name><operator pos:line="46" pos:column="42">++<pos:position pos:line="46" pos:column="44"/></operator></expr>;<pos:position pos:line="46" pos:column="45"/></expr_stmt>
				<continue pos:line="47" pos:column="33">continue;<pos:position pos:line="47" pos:column="42"/></continue>
			}<pos:position pos:line="48" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="49" pos:column="25">construct_path_with_fanout<pos:position pos:line="49" pos:column="51"/></name><argument_list pos:line="49" pos:column="51">(<argument><expr><name pos:line="49" pos:column="52">hex_sha1<pos:position pos:line="49" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="62">fanout<pos:position pos:line="49" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="70">realpath<pos:position pos:line="49" pos:column="78"/></name></expr></argument>)<pos:position pos:line="49" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="80"/></expr_stmt>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><operator pos:line="50" pos:column="29">!<pos:position pos:line="50" pos:column="30"/></operator><call><name pos:line="50" pos:column="30">strcmp<pos:position pos:line="50" pos:column="36"/></name><argument_list pos:line="50" pos:column="36">(<argument><expr><name pos:line="50" pos:column="37">fullpath<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">realpath<pos:position pos:line="50" pos:column="55"/></name></expr></argument>)<pos:position pos:line="50" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="57"/></condition><then pos:line="50" pos:column="57"> <block pos:line="50" pos:column="58">{
				<comment type="block" pos:line="51" pos:column="33">/* Note entry is in correct location */</comment>
				<expr_stmt><expr><name pos:line="52" pos:column="33">num_notes<pos:position pos:line="52" pos:column="42"/></name><operator pos:line="52" pos:column="42">++<pos:position pos:line="52" pos:column="44"/></operator></expr>;<pos:position pos:line="52" pos:column="45"/></expr_stmt>
				<continue pos:line="53" pos:column="33">continue;<pos:position pos:line="53" pos:column="42"/></continue>
			}<pos:position pos:line="54" pos:column="26"/></block></then></if>

			<comment type="block" pos:line="56" pos:column="25">/* Rename fullpath to realpath */</comment>
			<if pos:line="57" pos:column="25">if <condition pos:line="57" pos:column="28">(<expr><operator pos:line="57" pos:column="29">!<pos:position pos:line="57" pos:column="30"/></operator><call><name pos:line="57" pos:column="30">tree_content_remove<pos:position pos:line="57" pos:column="49"/></name><argument_list pos:line="57" pos:column="49">(<argument><expr><name pos:line="57" pos:column="50">orig_root<pos:position pos:line="57" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="61">fullpath<pos:position pos:line="57" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="71">&amp;<pos:position pos:line="57" pos:column="76"/></operator><name pos:line="57" pos:column="72">leaf<pos:position pos:line="57" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="78">0<pos:position pos:line="57" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="81"/></condition><then pos:line="57" pos:column="81">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="33">die<pos:position pos:line="58" pos:column="36"/></name><argument_list pos:line="58" pos:column="36">(<argument><expr><literal type="string" pos:line="58" pos:column="37">"Failed to remove path %s"<pos:position pos:line="58" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="65">fullpath<pos:position pos:line="58" pos:column="73"/></name></expr></argument>)<pos:position pos:line="58" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="75"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">tree_content_set<pos:position pos:line="59" pos:column="41"/></name><argument_list pos:line="59" pos:column="41">(<argument><expr><name pos:line="59" pos:column="42">orig_root<pos:position pos:line="59" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="53">realpath<pos:position pos:line="59" pos:column="61"/></name></expr></argument>,
				<argument><expr><name><name pos:line="60" pos:column="33">leaf<pos:position pos:line="60" pos:column="37"/></name><operator pos:line="60" pos:column="37">.<pos:position pos:line="60" pos:column="38"/></operator><name pos:line="60" pos:column="38">versions<pos:position pos:line="60" pos:column="46"/></name><index pos:line="60" pos:column="46">[<expr><literal type="number" pos:line="60" pos:column="47">1<pos:position pos:line="60" pos:column="48"/></literal></expr>]<pos:position pos:line="60" pos:column="49"/></index></name><operator pos:line="60" pos:column="49">.<pos:position pos:line="60" pos:column="50"/></operator><name pos:line="60" pos:column="50">sha1<pos:position pos:line="60" pos:column="54"/></name></expr></argument>,
				<argument><expr><name><name pos:line="61" pos:column="33">leaf<pos:position pos:line="61" pos:column="37"/></name><operator pos:line="61" pos:column="37">.<pos:position pos:line="61" pos:column="38"/></operator><name pos:line="61" pos:column="38">versions<pos:position pos:line="61" pos:column="46"/></name><index pos:line="61" pos:column="46">[<expr><literal type="number" pos:line="61" pos:column="47">1<pos:position pos:line="61" pos:column="48"/></literal></expr>]<pos:position pos:line="61" pos:column="49"/></index></name><operator pos:line="61" pos:column="49">.<pos:position pos:line="61" pos:column="50"/></operator><name pos:line="61" pos:column="50">mode<pos:position pos:line="61" pos:column="54"/></name></expr></argument>,
				<argument><expr><name><name pos:line="62" pos:column="33">leaf<pos:position pos:line="62" pos:column="37"/></name><operator pos:line="62" pos:column="37">.<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="38">tree<pos:position pos:line="62" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="63" pos:column="18"/></block></then> <elseif pos:line="63" pos:column="19">else <if pos:line="63" pos:column="24">if <condition pos:line="63" pos:column="27">(<expr><call><name pos:line="63" pos:column="28">S_ISDIR<pos:position pos:line="63" pos:column="35"/></name><argument_list pos:line="63" pos:column="35">(<argument><expr><name><name pos:line="63" pos:column="36">e<pos:position pos:line="63" pos:column="37"/></name><operator pos:line="63" pos:column="37">-&gt;<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="39">versions<pos:position pos:line="63" pos:column="47"/></name><index pos:line="63" pos:column="47">[<expr><literal type="number" pos:line="63" pos:column="48">1<pos:position pos:line="63" pos:column="49"/></literal></expr>]<pos:position pos:line="63" pos:column="50"/></index></name><operator pos:line="63" pos:column="50">.<pos:position pos:line="63" pos:column="51"/></operator><name pos:line="63" pos:column="51">mode<pos:position pos:line="63" pos:column="55"/></name></expr></argument>)<pos:position pos:line="63" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="57"/></condition><then pos:line="63" pos:column="57"> <block pos:line="63" pos:column="58">{
			<comment type="block" pos:line="64" pos:column="25">/* This is a subdir that may contain note entries */</comment>
			<if pos:line="65" pos:column="25">if <condition pos:line="65" pos:column="28">(<expr><operator pos:line="65" pos:column="29">!<pos:position pos:line="65" pos:column="30"/></operator><name><name pos:line="65" pos:column="30">e<pos:position pos:line="65" pos:column="31"/></name><operator pos:line="65" pos:column="31">-&gt;<pos:position pos:line="65" pos:column="36"/></operator><name pos:line="65" pos:column="33">tree<pos:position pos:line="65" pos:column="37"/></name></name></expr>)<pos:position pos:line="65" pos:column="38"/></condition><then pos:line="65" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="33">load_tree<pos:position pos:line="66" pos:column="42"/></name><argument_list pos:line="66" pos:column="42">(<argument><expr><name pos:line="66" pos:column="43">e<pos:position pos:line="66" pos:column="44"/></name></expr></argument>)<pos:position pos:line="66" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="46"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="67" pos:column="25">num_notes<pos:position pos:line="67" pos:column="34"/></name> <operator pos:line="67" pos:column="35">+=<pos:position pos:line="67" pos:column="37"/></operator> <call><name pos:line="67" pos:column="38">do_change_note_fanout<pos:position pos:line="67" pos:column="59"/></name><argument_list pos:line="67" pos:column="59">(<argument><expr><name pos:line="67" pos:column="60">orig_root<pos:position pos:line="67" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="71">e<pos:position pos:line="67" pos:column="72"/></name></expr></argument>,
				<argument><expr><name pos:line="68" pos:column="33">hex_sha1<pos:position pos:line="68" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="43">tmp_hex_sha1_len<pos:position pos:line="68" pos:column="59"/></name></expr></argument>,
				<argument><expr><name pos:line="69" pos:column="33">fullpath<pos:position pos:line="69" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="43">tmp_fullpath_len<pos:position pos:line="69" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="61">fanout<pos:position pos:line="69" pos:column="67"/></name></expr></argument>)<pos:position pos:line="69" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="70" pos:column="18"/></block></then></if></elseif></if>

		<comment type="block" pos:line="72" pos:column="17">/* The above may have reallocated the current tree_content */</comment>
		<expr_stmt><expr><name pos:line="73" pos:column="17">t<pos:position pos:line="73" pos:column="18"/></name> <operator pos:line="73" pos:column="19">=<pos:position pos:line="73" pos:column="20"/></operator> <name><name pos:line="73" pos:column="21">root<pos:position pos:line="73" pos:column="25"/></name><operator pos:line="73" pos:column="25">-&gt;<pos:position pos:line="73" pos:column="30"/></operator><name pos:line="73" pos:column="27">tree<pos:position pos:line="73" pos:column="31"/></name></name></expr>;<pos:position pos:line="73" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="74" pos:column="10"/></block></for>
	<return pos:line="75" pos:column="9">return <expr><name pos:line="75" pos:column="16">num_notes<pos:position pos:line="75" pos:column="25"/></name></expr>;<pos:position pos:line="75" pos:column="26"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

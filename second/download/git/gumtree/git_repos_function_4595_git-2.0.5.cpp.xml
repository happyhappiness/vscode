<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4595_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_remote_group<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">key<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">value<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">void<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">priv<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">remote_group_data<pos:position pos:line="3" pos:column="33"/></name></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">g<pos:position pos:line="3" pos:column="36"/></name> <init pos:line="3" pos:column="37">= <expr><name pos:line="3" pos:column="39">priv<pos:position pos:line="3" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">starts_with<pos:position pos:line="5" pos:column="24"/></name><argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">key<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="30">"remotes."<pos:position pos:line="5" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call> <operator pos:line="5" pos:column="42">&amp;&amp;<pos:position pos:line="5" pos:column="52"/></operator>
			<operator pos:line="6" pos:column="25">!<pos:position pos:line="6" pos:column="26"/></operator><call><name pos:line="6" pos:column="26">strcmp<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">key<pos:position pos:line="6" pos:column="36"/></name> <operator pos:line="6" pos:column="37">+<pos:position pos:line="6" pos:column="38"/></operator> <literal type="number" pos:line="6" pos:column="39">8<pos:position pos:line="6" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="42">g<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">-&gt;<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="45">name<pos:position pos:line="6" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="51"/></condition><then pos:line="6" pos:column="51"> <block pos:line="6" pos:column="52">{
		<comment type="block" pos:line="7" pos:column="17">/* split list by white space */</comment>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">space<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><call><name pos:line="8" pos:column="29">strcspn<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">value<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="44">" \t\n"<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="53"/></decl_stmt>
		<while pos:line="9" pos:column="17">while <condition pos:line="9" pos:column="23">(<expr><operator pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">value<pos:position pos:line="9" pos:column="30"/></name></expr>)<pos:position pos:line="9" pos:column="31"/></condition> <block pos:line="9" pos:column="32">{
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><name pos:line="10" pos:column="29">space<pos:position pos:line="10" pos:column="34"/></name> <operator pos:line="10" pos:column="35">&gt;<pos:position pos:line="10" pos:column="39"/></operator> <literal type="number" pos:line="10" pos:column="37">1<pos:position pos:line="10" pos:column="38"/></literal></expr>)<pos:position pos:line="10" pos:column="39"/></condition><then pos:line="10" pos:column="39"> <block pos:line="10" pos:column="40">{
				<expr_stmt><expr><call><name pos:line="11" pos:column="33">string_list_append<pos:position pos:line="11" pos:column="51"/></name><argument_list pos:line="11" pos:column="51">(<argument><expr><name><name pos:line="11" pos:column="52">g<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">-&gt;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="55">list<pos:position pos:line="11" pos:column="59"/></name></name></expr></argument>,
						   <argument><expr><call><name pos:line="12" pos:column="52">xstrndup<pos:position pos:line="12" pos:column="60"/></name><argument_list pos:line="12" pos:column="60">(<argument><expr><name pos:line="12" pos:column="61">value<pos:position pos:line="12" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="68">space<pos:position pos:line="12" pos:column="73"/></name></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="76"/></expr_stmt>
			}<pos:position pos:line="13" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="14" pos:column="25">value<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">+=<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="34">space<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">+<pos:position pos:line="14" pos:column="41"/></operator> <operator pos:line="14" pos:column="42">(<pos:position pos:line="14" pos:column="43"/></operator><name><name pos:line="14" pos:column="43">value<pos:position pos:line="14" pos:column="48"/></name><index pos:line="14" pos:column="48">[<expr><name pos:line="14" pos:column="49">space<pos:position pos:line="14" pos:column="54"/></name></expr>]<pos:position pos:line="14" pos:column="55"/></index></name> <operator pos:line="14" pos:column="56">!=<pos:position pos:line="14" pos:column="58"/></operator> <literal type="char" pos:line="14" pos:column="59">'\0'<pos:position pos:line="14" pos:column="63"/></literal><operator pos:line="14" pos:column="63">)<pos:position pos:line="14" pos:column="64"/></operator></expr>;<pos:position pos:line="14" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><name pos:line="15" pos:column="25">space<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">=<pos:position pos:line="15" pos:column="32"/></operator> <call><name pos:line="15" pos:column="33">strcspn<pos:position pos:line="15" pos:column="40"/></name><argument_list pos:line="15" pos:column="40">(<argument><expr><name pos:line="15" pos:column="41">value<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="48">" \t\n"<pos:position pos:line="15" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></while>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<return pos:line="19" pos:column="9">return <expr><literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

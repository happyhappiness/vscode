<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6131_git-2.13.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_strategies<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">string<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">unsigned<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">attr<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">string<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20"> <block pos:line="5" pos:column="21">{
		<decl_stmt><decl><type><name><name pos:line="6" pos:column="17">struct<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">string_list<pos:position pos:line="6" pos:column="35"/></name></name></type> <name pos:line="6" pos:column="36">list<pos:position pos:line="6" pos:column="40"/></name> <init pos:line="6" pos:column="41">= <expr><name pos:line="6" pos:column="43">STRING_LIST_INIT_DUP<pos:position pos:line="6" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="64"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">string_list_item<pos:position pos:line="7" pos:column="40"/></name></name> <modifier pos:line="7" pos:column="41">*<pos:position pos:line="7" pos:column="42"/></modifier></type><name pos:line="7" pos:column="42">item<pos:position pos:line="7" pos:column="46"/></name></decl>;<pos:position pos:line="7" pos:column="47"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">string_list_split<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><operator pos:line="8" pos:column="35">&amp;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="36">list<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">string<pos:position pos:line="8" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="50">' '<pos:position pos:line="8" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="55">-<pos:position pos:line="8" pos:column="56"/></operator><literal type="number" pos:line="8" pos:column="56">1<pos:position pos:line="8" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>
		<macro><name pos:line="9" pos:column="17">for_each_string_list_item<pos:position pos:line="9" pos:column="42"/></name><argument_list pos:line="9" pos:column="42">(<argument pos:line="9" pos:column="43">item<pos:position pos:line="9" pos:column="47"/></argument>, <argument pos:line="9" pos:column="49">&amp;list<pos:position pos:line="9" pos:column="54"/></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></macro>
			<expr_stmt><expr><call><name pos:line="10" pos:column="25">append_strategy<pos:position pos:line="10" pos:column="40"/></name><argument_list pos:line="10" pos:column="40">(<argument><expr><call><name pos:line="10" pos:column="41">get_strategy<pos:position pos:line="10" pos:column="53"/></name><argument_list pos:line="10" pos:column="53">(<argument><expr><name><name pos:line="10" pos:column="54">item<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">-&gt;<pos:position pos:line="10" pos:column="63"/></operator><name pos:line="10" pos:column="60">string<pos:position pos:line="10" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">string_list_clear<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><operator pos:line="11" pos:column="35">&amp;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="36">list<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="42">0<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
		<return pos:line="12" pos:column="17">return;<pos:position pos:line="12" pos:column="24"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>
	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">i<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>;<pos:position pos:line="14" pos:column="20"/></init> <condition><expr><name pos:line="14" pos:column="21">i<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&lt;<pos:position pos:line="14" pos:column="27"/></operator> <call><name pos:line="14" pos:column="25">ARRAY_SIZE<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><name pos:line="14" pos:column="36">all_strategy<pos:position pos:line="14" pos:column="48"/></name></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="50"/></condition> <incr><expr><name pos:line="14" pos:column="51">i<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">++<pos:position pos:line="14" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="55"/></control>
		<block type="pseudo"><if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name><name pos:line="15" pos:column="21">all_strategy<pos:position pos:line="15" pos:column="33"/></name><index pos:line="15" pos:column="33">[<expr><name pos:line="15" pos:column="34">i<pos:position pos:line="15" pos:column="35"/></name></expr>]<pos:position pos:line="15" pos:column="36"/></index></name><operator pos:line="15" pos:column="36">.<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="37">attr<pos:position pos:line="15" pos:column="41"/></name> <operator pos:line="15" pos:column="42">&amp;<pos:position pos:line="15" pos:column="47"/></operator> <name pos:line="15" pos:column="44">attr<pos:position pos:line="15" pos:column="48"/></name></expr>)<pos:position pos:line="15" pos:column="49"/></condition><then pos:line="15" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">append_strategy<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><operator pos:line="16" pos:column="41">&amp;<pos:position pos:line="16" pos:column="46"/></operator><name><name pos:line="16" pos:column="42">all_strategy<pos:position pos:line="16" pos:column="54"/></name><index pos:line="16" pos:column="54">[<expr><name pos:line="16" pos:column="55">i<pos:position pos:line="16" pos:column="56"/></name></expr>]<pos:position pos:line="16" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt></block></then></if></block></for>

}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4513_git-2.11.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">xdl_simplify_non_conflicts<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">xdfenv_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">xe1<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">xdmerge_t<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">m<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="2" pos:column="39">int<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">simplify_if_no_alnum<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">result<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">m<pos:position pos:line="6" pos:column="15"/></name></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><name pos:line="7" pos:column="24">result<pos:position pos:line="7" pos:column="30"/></name></expr>;<pos:position pos:line="7" pos:column="31"/></return></block></then></if>
	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init pos:line="8" pos:column="14">;<pos:position pos:line="8" pos:column="15"/></init><condition pos:line="8" pos:column="15">;<pos:position pos:line="8" pos:column="16"/></condition><incr/>)<pos:position pos:line="8" pos:column="17"/></control> <block pos:line="8" pos:column="18">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">xdmerge_t<pos:position pos:line="9" pos:column="26"/></name> <modifier pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></modifier></type><name pos:line="9" pos:column="28">next_m<pos:position pos:line="9" pos:column="34"/></name> <init pos:line="9" pos:column="35">= <expr><name><name pos:line="9" pos:column="37">m<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">next<pos:position pos:line="9" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">int<pos:position pos:line="10" pos:column="20"/></name></type> <name pos:line="10" pos:column="21">begin<pos:position pos:line="10" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="28">end<pos:position pos:line="10" pos:column="31"/></name></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">next_m<pos:position pos:line="12" pos:column="28"/></name></expr>)<pos:position pos:line="12" pos:column="29"/></condition><then pos:line="12" pos:column="29">
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><name pos:line="13" pos:column="32">result<pos:position pos:line="13" pos:column="38"/></name></expr>;<pos:position pos:line="13" pos:column="39"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="15" pos:column="17">begin<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <name><name pos:line="15" pos:column="25">m<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">i1<pos:position pos:line="15" pos:column="30"/></name></name> <operator pos:line="15" pos:column="31">+<pos:position pos:line="15" pos:column="32"/></operator> <name><name pos:line="15" pos:column="33">m<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">chg1<pos:position pos:line="15" pos:column="40"/></name></name></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">end<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <name><name pos:line="16" pos:column="23">next_m<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">i1<pos:position pos:line="16" pos:column="33"/></name></name></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>

		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">m<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">mode<pos:position pos:line="18" pos:column="28"/></name></name> <operator pos:line="18" pos:column="29">!=<pos:position pos:line="18" pos:column="31"/></operator> <literal type="number" pos:line="18" pos:column="32">0<pos:position pos:line="18" pos:column="33"/></literal> <operator pos:line="18" pos:column="34">||<pos:position pos:line="18" pos:column="36"/></operator> <name><name pos:line="18" pos:column="37">next_m<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">-&gt;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="45">mode<pos:position pos:line="18" pos:column="49"/></name></name> <operator pos:line="18" pos:column="50">!=<pos:position pos:line="18" pos:column="52"/></operator> <literal type="number" pos:line="18" pos:column="53">0<pos:position pos:line="18" pos:column="54"/></literal> <operator pos:line="18" pos:column="55">||<pos:position pos:line="18" pos:column="57"/></operator>
		    <operator pos:line="19" pos:column="21">(<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">end<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">-<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="28">begin<pos:position pos:line="19" pos:column="33"/></name> <operator pos:line="19" pos:column="34">&gt;<pos:position pos:line="19" pos:column="38"/></operator> <literal type="number" pos:line="19" pos:column="36">3<pos:position pos:line="19" pos:column="37"/></literal> <operator pos:line="19" pos:column="38">&amp;&amp;<pos:position pos:line="19" pos:column="48"/></operator>
		     <operator pos:line="20" pos:column="22">(<pos:position pos:line="20" pos:column="23"/></operator><operator pos:line="20" pos:column="23">!<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="24">simplify_if_no_alnum<pos:position pos:line="20" pos:column="44"/></name> <operator pos:line="20" pos:column="45">||<pos:position pos:line="20" pos:column="47"/></operator>
		      <call><name pos:line="21" pos:column="23">lines_contain_alnum<pos:position pos:line="21" pos:column="42"/></name><argument_list pos:line="21" pos:column="42">(<argument><expr><name pos:line="21" pos:column="43">xe1<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="48">begin<pos:position pos:line="21" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="55">end<pos:position pos:line="21" pos:column="58"/></name> <operator pos:line="21" pos:column="59">-<pos:position pos:line="21" pos:column="60"/></operator> <name pos:line="21" pos:column="61">begin<pos:position pos:line="21" pos:column="66"/></name></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></call><operator pos:line="21" pos:column="67">)<pos:position pos:line="21" pos:column="68"/></operator><operator pos:line="21" pos:column="68">)<pos:position pos:line="21" pos:column="69"/></operator></expr>)<pos:position pos:line="21" pos:column="70"/></condition><then pos:line="21" pos:column="70"> <block pos:line="21" pos:column="71">{
			<expr_stmt><expr><name pos:line="22" pos:column="25">m<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="29">next_m<pos:position pos:line="22" pos:column="35"/></name></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></then> <else pos:line="23" pos:column="19">else <block pos:line="23" pos:column="24">{
			<expr_stmt><expr><name pos:line="24" pos:column="25">result<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">++<pos:position pos:line="24" pos:column="33"/></operator></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">xdl_merge_two_conflicts<pos:position pos:line="25" pos:column="48"/></name><argument_list pos:line="25" pos:column="48">(<argument><expr><name pos:line="25" pos:column="49">m<pos:position pos:line="25" pos:column="50"/></name></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></else></if>
	}<pos:position pos:line="27" pos:column="10"/></block></for>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6402_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">ref_cache<pos:position pos:line="1" pos:column="24"/></name></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">get_loose_ref_cache<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name><name pos:line="1" pos:column="46">struct<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">files_ref_store<pos:position pos:line="1" pos:column="68"/></name></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">refs<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name><name pos:line="3" pos:column="14">refs<pos:position pos:line="3" pos:column="18"/></name><operator pos:line="3" pos:column="18">-&gt;<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="20">loose<pos:position pos:line="3" pos:column="25"/></name></name></expr>)<pos:position pos:line="3" pos:column="26"/></condition><then pos:line="3" pos:column="26"> <block pos:line="3" pos:column="27">{
		<comment type="block" pos:line="4" pos:column="17">/*
		 * Mark the top-level directory complete because we
		 * are about to read the only subdirectory that can
		 * hold references:
		 */</comment>
		<expr_stmt><expr><name><name pos:line="9" pos:column="17">refs<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">loose<pos:position pos:line="9" pos:column="28"/></name></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <call><name pos:line="9" pos:column="31">create_ref_cache<pos:position pos:line="9" pos:column="47"/></name><argument_list pos:line="9" pos:column="47">(<argument><expr><operator pos:line="9" pos:column="48">&amp;<pos:position pos:line="9" pos:column="53"/></operator><name><name pos:line="9" pos:column="49">refs<pos:position pos:line="9" pos:column="53"/></name><operator pos:line="9" pos:column="53">-&gt;<pos:position pos:line="9" pos:column="58"/></operator><name pos:line="9" pos:column="55">base<pos:position pos:line="9" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="61">loose_fill_ref_dir<pos:position pos:line="9" pos:column="79"/></name></expr></argument>)<pos:position pos:line="9" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="81"/></expr_stmt>

		<comment type="block" pos:line="11" pos:column="17">/* We're going to fill the top level ourselves: */</comment>
		<expr_stmt><expr><name><name pos:line="12" pos:column="17">refs<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">-&gt;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="23">loose<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">root<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">flag<pos:position pos:line="12" pos:column="40"/></name></name> <operator pos:line="12" pos:column="41">&amp;=<pos:position pos:line="12" pos:column="47"/></operator> <operator pos:line="12" pos:column="44">~<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="45">REF_INCOMPLETE<pos:position pos:line="12" pos:column="59"/></name></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>

		<comment type="block" pos:line="14" pos:column="17">/*
		 * Add an incomplete entry for "refs/" (to be filled
		 * lazily):
		 */</comment>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">add_entry_to_dir<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><call><name pos:line="18" pos:column="34">get_ref_dir<pos:position pos:line="18" pos:column="45"/></name><argument_list pos:line="18" pos:column="45">(<argument><expr><name><name pos:line="18" pos:column="46">refs<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">-&gt;<pos:position pos:line="18" pos:column="55"/></operator><name pos:line="18" pos:column="52">loose<pos:position pos:line="18" pos:column="57"/></name><operator pos:line="18" pos:column="57">-&gt;<pos:position pos:line="18" pos:column="62"/></operator><name pos:line="18" pos:column="59">root<pos:position pos:line="18" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr></argument>,
				 <argument><expr><call><name pos:line="19" pos:column="34">create_dir_entry<pos:position pos:line="19" pos:column="50"/></name><argument_list pos:line="19" pos:column="50">(<argument><expr><name><name pos:line="19" pos:column="51">refs<pos:position pos:line="19" pos:column="55"/></name><operator pos:line="19" pos:column="55">-&gt;<pos:position pos:line="19" pos:column="60"/></operator><name pos:line="19" pos:column="57">loose<pos:position pos:line="19" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="64">"refs/"<pos:position pos:line="19" pos:column="71"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="73">5<pos:position pos:line="19" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="76">1<pos:position pos:line="19" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="80"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>
	<return pos:line="21" pos:column="9">return <expr><name><name pos:line="21" pos:column="16">refs<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">loose<pos:position pos:line="21" pos:column="27"/></name></name></expr>;<pos:position pos:line="21" pos:column="28"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

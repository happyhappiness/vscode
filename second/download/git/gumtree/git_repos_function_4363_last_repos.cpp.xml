<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4363_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">free_grep_patterns<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">grep_opt<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">opt<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">grep_pat<pos:position pos:line="3" pos:column="24"/></name></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">p<pos:position pos:line="3" pos:column="27"/></name></decl>, <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="30">n<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">p<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <name><name pos:line="5" pos:column="18">opt<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">-&gt;<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="23">pattern_list<pos:position pos:line="5" pos:column="35"/></name></name></expr>;<pos:position pos:line="5" pos:column="36"/></init> <condition><expr><name pos:line="5" pos:column="37">p<pos:position pos:line="5" pos:column="38"/></name></expr>;<pos:position pos:line="5" pos:column="39"/></condition> <incr><expr><name pos:line="5" pos:column="40">p<pos:position pos:line="5" pos:column="41"/></name> <operator pos:line="5" pos:column="42">=<pos:position pos:line="5" pos:column="43"/></operator> <name pos:line="5" pos:column="44">n<pos:position pos:line="5" pos:column="45"/></name></expr></incr>)<pos:position pos:line="5" pos:column="46"/></control> <block pos:line="5" pos:column="47">{
		<expr_stmt><expr><name pos:line="6" pos:column="17">n<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <name><name pos:line="6" pos:column="21">p<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">-&gt;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="24">next<pos:position pos:line="6" pos:column="28"/></name></name></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>
		<switch pos:line="7" pos:column="17">switch <condition pos:line="7" pos:column="24">(<expr><name><name pos:line="7" pos:column="25">p<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">token<pos:position pos:line="7" pos:column="33"/></name></name></expr>)<pos:position pos:line="7" pos:column="34"/></condition> <block pos:line="7" pos:column="35">{
		<case pos:line="8" pos:column="17">case <expr><name pos:line="8" pos:column="22">GREP_PATTERN<pos:position pos:line="8" pos:column="34"/></name></expr>:<pos:position pos:line="8" pos:column="35"/></case> <comment type="block" pos:line="8" pos:column="36">/* atom */</comment>
		<case pos:line="9" pos:column="17">case <expr><name pos:line="9" pos:column="22">GREP_PATTERN_HEAD<pos:position pos:line="9" pos:column="39"/></name></expr>:<pos:position pos:line="9" pos:column="40"/></case>
		<case pos:line="10" pos:column="17">case <expr><name pos:line="10" pos:column="22">GREP_PATTERN_BODY<pos:position pos:line="10" pos:column="39"/></name></expr>:<pos:position pos:line="10" pos:column="40"/></case>
			<if pos:line="11" pos:column="25">if <condition pos:line="11" pos:column="28">(<expr><name><name pos:line="11" pos:column="29">p<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">kws<pos:position pos:line="11" pos:column="35"/></name></name></expr>)<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="33">kwsfree<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><name><name pos:line="12" pos:column="41">p<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">kws<pos:position pos:line="12" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt></block></then>
			<elseif pos:line="13" pos:column="25">else <if pos:line="13" pos:column="30">if <condition pos:line="13" pos:column="33">(<expr><name><name pos:line="13" pos:column="34">p<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">pcre1_regexp<pos:position pos:line="13" pos:column="49"/></name></name></expr>)<pos:position pos:line="13" pos:column="50"/></condition><then pos:line="13" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="33">free_pcre1_regexp<pos:position pos:line="14" pos:column="50"/></name><argument_list pos:line="14" pos:column="50">(<argument><expr><name pos:line="14" pos:column="51">p<pos:position pos:line="14" pos:column="52"/></name></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="54"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="15" pos:column="25">else <if pos:line="15" pos:column="30">if <condition pos:line="15" pos:column="33">(<expr><name><name pos:line="15" pos:column="34">p<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">pcre2_pattern<pos:position pos:line="15" pos:column="50"/></name></name></expr>)<pos:position pos:line="15" pos:column="51"/></condition><then pos:line="15" pos:column="51">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="33">free_pcre2_pattern<pos:position pos:line="16" pos:column="51"/></name><argument_list pos:line="16" pos:column="51">(<argument><expr><name pos:line="16" pos:column="52">p<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt></block></then></if></elseif>
			<else pos:line="17" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="33">regfree<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><operator pos:line="18" pos:column="41">&amp;<pos:position pos:line="18" pos:column="46"/></operator><name><name pos:line="18" pos:column="42">p<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">-&gt;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="45">regexp<pos:position pos:line="18" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt></block></else></if>
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">free<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name><name pos:line="19" pos:column="30">p<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">pattern<pos:position pos:line="19" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
			<break pos:line="20" pos:column="25">break;<pos:position pos:line="20" pos:column="31"/></break>
		<default pos:line="21" pos:column="17">default:<pos:position pos:line="21" pos:column="25"/></default>
			<break pos:line="22" pos:column="25">break;<pos:position pos:line="22" pos:column="31"/></break>
		}<pos:position pos:line="23" pos:column="18"/></block></switch>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">free<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><name pos:line="24" pos:column="22">p<pos:position pos:line="24" pos:column="23"/></name></expr></argument>)<pos:position pos:line="24" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></for>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><name><name pos:line="27" pos:column="14">opt<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">extended<pos:position pos:line="27" pos:column="27"/></name></name></expr>)<pos:position pos:line="27" pos:column="28"/></condition><then pos:line="27" pos:column="28">
		<block type="pseudo"><return pos:line="28" pos:column="17">return;<pos:position pos:line="28" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">free_pattern_expr<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><name><name pos:line="29" pos:column="27">opt<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">pattern_expression<pos:position pos:line="29" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7005_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">init_word_char<pos:position pos:line="3" pos:column="15"/></name> <parameter_list pos:line="3" pos:column="16">(<parameter><decl><type><name pos:line="3" pos:column="17">re_dfa_t<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">dfa<pos:position pos:line="3" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="31"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="10">j<pos:position pos:line="5" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="13">ch<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <expr_stmt><expr><name><name pos:line="6" pos:column="3">dfa<pos:position pos:line="6" pos:column="6"/></name><operator pos:line="6" pos:column="6">-&gt;<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="8">word_ops_used<pos:position pos:line="6" pos:column="21"/></name></name> <operator pos:line="6" pos:column="22">=<pos:position pos:line="6" pos:column="23"/></operator> <literal type="number" pos:line="6" pos:column="24">1<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
  <for pos:line="7" pos:column="3">for <control pos:line="7" pos:column="7">(<init><expr><name pos:line="7" pos:column="8">i<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr><operator pos:line="7" pos:column="13">,<pos:position pos:line="7" pos:column="14"/></operator> <expr><name pos:line="7" pos:column="15">ch<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr>;<pos:position pos:line="7" pos:column="22"/></init> <condition><expr><name pos:line="7" pos:column="23">i<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">&lt;<pos:position pos:line="7" pos:column="29"/></operator> <name pos:line="7" pos:column="27">BITSET_WORDS<pos:position pos:line="7" pos:column="39"/></name></expr>;<pos:position pos:line="7" pos:column="40"/></condition> <incr><expr><operator pos:line="7" pos:column="41">++<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">i<pos:position pos:line="7" pos:column="44"/></name></expr></incr>)<pos:position pos:line="7" pos:column="45"/></control>
    <block type="pseudo"><for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">j<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>;<pos:position pos:line="8" pos:column="16"/></init> <condition><expr><name pos:line="8" pos:column="17">j<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="21">BITSET_WORD_BITS<pos:position pos:line="8" pos:column="37"/></name></expr>;<pos:position pos:line="8" pos:column="38"/></condition> <incr><expr><operator pos:line="8" pos:column="39">++<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="41">j<pos:position pos:line="8" pos:column="42"/></name></expr><operator pos:line="8" pos:column="42">,<pos:position pos:line="8" pos:column="43"/></operator> <expr><operator pos:line="8" pos:column="44">++<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="46">ch<pos:position pos:line="8" pos:column="48"/></name></expr></incr>)<pos:position pos:line="8" pos:column="49"/></control>
      <block type="pseudo"><if pos:line="9" pos:column="7">if <condition pos:line="9" pos:column="10">(<expr><call><name pos:line="9" pos:column="11">isalnum<pos:position pos:line="9" pos:column="18"/></name> <argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">ch<pos:position pos:line="9" pos:column="22"/></name></expr></argument>)<pos:position pos:line="9" pos:column="23"/></argument_list></call> <operator pos:line="9" pos:column="24">||<pos:position pos:line="9" pos:column="26"/></operator> <name pos:line="9" pos:column="27">ch<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">==<pos:position pos:line="9" pos:column="32"/></operator> <literal type="char" pos:line="9" pos:column="33">'_'<pos:position pos:line="9" pos:column="36"/></literal></expr>)<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="10" pos:column="9">dfa<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">word_char<pos:position pos:line="10" pos:column="23"/></name><index pos:line="10" pos:column="23">[<expr><name pos:line="10" pos:column="24">i<pos:position pos:line="10" pos:column="25"/></name></expr>]<pos:position pos:line="10" pos:column="26"/></index></name> <operator pos:line="10" pos:column="27">|=<pos:position pos:line="10" pos:column="29"/></operator> <operator pos:line="10" pos:column="30">(<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">bitset_word_t<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">)<pos:position pos:line="10" pos:column="45"/></operator> <literal type="number" pos:line="10" pos:column="46">1<pos:position pos:line="10" pos:column="47"/></literal> <operator pos:line="10" pos:column="48">&lt;&lt;<pos:position pos:line="10" pos:column="56"/></operator> <name pos:line="10" pos:column="51">j<pos:position pos:line="10" pos:column="52"/></name></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt></block></then></if></block></for></block></for>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

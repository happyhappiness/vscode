<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_779_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">packet_length<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">linelen<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">val<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">hex2chr<pos:position pos:line="3" pos:column="26"/></name><argument_list pos:line="3" pos:column="26">(<argument><expr><name pos:line="3" pos:column="27">linelen<pos:position pos:line="3" pos:column="34"/></name></expr></argument>)<pos:position pos:line="3" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
	<return pos:line="4" pos:column="9">return <expr><ternary><condition><expr><operator pos:line="4" pos:column="16">(<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">val<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">&lt;<pos:position pos:line="4" pos:column="25"/></operator> <literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal><operator pos:line="4" pos:column="24">)<pos:position pos:line="4" pos:column="25"/></operator></expr> ?<pos:position pos:line="4" pos:column="27"/></condition><then pos:line="4" pos:column="27"> <expr><name pos:line="4" pos:column="28">val<pos:position pos:line="4" pos:column="31"/></name></expr> <pos:position pos:line="4" pos:column="32"/></then><else pos:line="4" pos:column="32">: <expr><operator pos:line="4" pos:column="34">(<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">val<pos:position pos:line="4" pos:column="38"/></name> <operator pos:line="4" pos:column="39">&lt;&lt;<pos:position pos:line="4" pos:column="47"/></operator> <literal type="number" pos:line="4" pos:column="42">8<pos:position pos:line="4" pos:column="43"/></literal><operator pos:line="4" pos:column="43">)<pos:position pos:line="4" pos:column="44"/></operator> <operator pos:line="4" pos:column="45">|<pos:position pos:line="4" pos:column="46"/></operator> <call><name pos:line="4" pos:column="47">hex2chr<pos:position pos:line="4" pos:column="54"/></name><argument_list pos:line="4" pos:column="54">(<argument><expr><name pos:line="4" pos:column="55">linelen<pos:position pos:line="4" pos:column="62"/></name> <operator pos:line="4" pos:column="63">+<pos:position pos:line="4" pos:column="64"/></operator> <literal type="number" pos:line="4" pos:column="65">2<pos:position pos:line="4" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="67"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="4" pos:column="68"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

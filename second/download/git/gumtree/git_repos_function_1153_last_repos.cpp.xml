<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1153_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">utf8_strnwidth<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">string<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">len<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">skip_ansi<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">width<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">orig<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name pos:line="4" pos:column="28">string<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">len<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">==<pos:position pos:line="6" pos:column="19"/></operator> <operator pos:line="6" pos:column="20">-<pos:position pos:line="6" pos:column="21"/></operator><literal type="number" pos:line="6" pos:column="21">1<pos:position pos:line="6" pos:column="22"/></literal></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">len<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <call><name pos:line="7" pos:column="23">strlen<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">string<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt></block></then></if>
	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><name pos:line="8" pos:column="16">string<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&amp;&amp;<pos:position pos:line="8" pos:column="33"/></operator> <name pos:line="8" pos:column="26">string<pos:position pos:line="8" pos:column="32"/></name> <operator pos:line="8" pos:column="33">&lt;<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="35">orig<pos:position pos:line="8" pos:column="39"/></name> <operator pos:line="8" pos:column="40">+<pos:position pos:line="8" pos:column="41"/></operator> <name pos:line="8" pos:column="42">len<pos:position pos:line="8" pos:column="45"/></name></expr>)<pos:position pos:line="8" pos:column="46"/></condition> <block pos:line="8" pos:column="47">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">skip<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
		<while pos:line="10" pos:column="17">while <condition pos:line="10" pos:column="23">(<expr><name pos:line="10" pos:column="24">skip_ansi<pos:position pos:line="10" pos:column="33"/></name> <operator pos:line="10" pos:column="34">&amp;&amp;<pos:position pos:line="10" pos:column="44"/></operator>
		       <operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">skip<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">=<pos:position pos:line="11" pos:column="31"/></operator> <call><name pos:line="11" pos:column="32">display_mode_esc_sequence_len<pos:position pos:line="11" pos:column="61"/></name><argument_list pos:line="11" pos:column="61">(<argument><expr><name pos:line="11" pos:column="62">string<pos:position pos:line="11" pos:column="68"/></name></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call><operator pos:line="11" pos:column="69">)<pos:position pos:line="11" pos:column="70"/></operator> <operator pos:line="11" pos:column="71">!=<pos:position pos:line="11" pos:column="73"/></operator> <literal type="number" pos:line="11" pos:column="74">0<pos:position pos:line="11" pos:column="75"/></literal></expr>)<pos:position pos:line="11" pos:column="76"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">string<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">+=<pos:position pos:line="12" pos:column="34"/></operator> <name pos:line="12" pos:column="35">skip<pos:position pos:line="12" pos:column="39"/></name></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt></block></while>
		<expr_stmt><expr><name pos:line="13" pos:column="17">width<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">+=<pos:position pos:line="13" pos:column="25"/></operator> <call><name pos:line="13" pos:column="26">utf8_width<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><operator pos:line="13" pos:column="37">&amp;<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="38">string<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">NULL<pos:position pos:line="13" pos:column="50"/></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></while>
	<return pos:line="15" pos:column="9">return <expr><ternary><condition><expr><name pos:line="15" pos:column="16">string<pos:position pos:line="15" pos:column="22"/></name></expr> ?<pos:position pos:line="15" pos:column="24"/></condition><then pos:line="15" pos:column="24"> <expr><name pos:line="15" pos:column="25">width<pos:position pos:line="15" pos:column="30"/></name></expr> <pos:position pos:line="15" pos:column="31"/></then><else pos:line="15" pos:column="31">: <expr><name pos:line="15" pos:column="33">len<pos:position pos:line="15" pos:column="36"/></name></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="37"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

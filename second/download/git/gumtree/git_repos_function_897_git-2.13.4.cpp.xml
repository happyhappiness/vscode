<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_897_git-2.13.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">child_err_spew<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">child_process<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">cmd<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="55">struct<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">child_err<pos:position pos:line="1" pos:column="71"/></name></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">cerr<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<function_decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">void<pos:position pos:line="3" pos:column="20"/></name></type> (<modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier><name pos:line="3" pos:column="23">old_errfn<pos:position pos:line="3" pos:column="32"/></name>)<parameter_list pos:line="3" pos:column="33">(<parameter><decl><type><specifier pos:line="3" pos:column="34">const<pos:position pos:line="3" pos:column="39"/></specifier> <name pos:line="3" pos:column="40">char<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">err<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="51">va_list<pos:position pos:line="3" pos:column="58"/></name></type> <name pos:line="3" pos:column="59">params<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="66"/></parameter_list>;<pos:position pos:line="3" pos:column="67"/></function_decl>

	<expr_stmt><expr><name pos:line="5" pos:column="9">old_errfn<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">=<pos:position pos:line="5" pos:column="20"/></operator> <call><name pos:line="5" pos:column="21">get_error_routine<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">()<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">set_error_routine<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">fake_fatal<pos:position pos:line="6" pos:column="37"/></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">errno<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <name><name pos:line="7" pos:column="17">cerr<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">-&gt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">syserr<pos:position pos:line="7" pos:column="29"/></name></name></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>

	<switch pos:line="9" pos:column="9">switch <condition pos:line="9" pos:column="16">(<expr><name><name pos:line="9" pos:column="17">cerr<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">err<pos:position pos:line="9" pos:column="26"/></name></name></expr>)<pos:position pos:line="9" pos:column="27"/></condition> <block pos:line="9" pos:column="28">{
	<case pos:line="10" pos:column="9">case <expr><name pos:line="10" pos:column="14">CHILD_ERR_CHDIR<pos:position pos:line="10" pos:column="29"/></name></expr>:<pos:position pos:line="10" pos:column="30"/></case>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">error_errno<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><literal type="string" pos:line="11" pos:column="29">"exec '%s': cd to '%s' failed"<pos:position pos:line="11" pos:column="59"/></literal></expr></argument>,
			    <argument><expr><name><name pos:line="12" pos:column="29">cmd<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">argv<pos:position pos:line="12" pos:column="38"/></name><index pos:line="12" pos:column="38">[<expr><literal type="number" pos:line="12" pos:column="39">0<pos:position pos:line="12" pos:column="40"/></literal></expr>]<pos:position pos:line="12" pos:column="41"/></index></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="43">cmd<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">-&gt;<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="48">dir<pos:position pos:line="12" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
		<break pos:line="13" pos:column="17">break;<pos:position pos:line="13" pos:column="23"/></break>
	<case pos:line="14" pos:column="9">case <expr><name pos:line="14" pos:column="14">CHILD_ERR_DUP2<pos:position pos:line="14" pos:column="28"/></name></expr>:<pos:position pos:line="14" pos:column="29"/></case>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">error_errno<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><literal type="string" pos:line="15" pos:column="29">"dup2() in child failed"<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
		<break pos:line="16" pos:column="17">break;<pos:position pos:line="16" pos:column="23"/></break>
	<case pos:line="17" pos:column="9">case <expr><name pos:line="17" pos:column="14">CHILD_ERR_CLOSE<pos:position pos:line="17" pos:column="29"/></name></expr>:<pos:position pos:line="17" pos:column="30"/></case>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">error_errno<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><literal type="string" pos:line="18" pos:column="29">"close() in child failed"<pos:position pos:line="18" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>
		<break pos:line="19" pos:column="17">break;<pos:position pos:line="19" pos:column="23"/></break>
	<case pos:line="20" pos:column="9">case <expr><name pos:line="20" pos:column="14">CHILD_ERR_SIGPROCMASK<pos:position pos:line="20" pos:column="35"/></name></expr>:<pos:position pos:line="20" pos:column="36"/></case>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">error_errno<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><literal type="string" pos:line="21" pos:column="29">"sigprocmask failed restoring signals"<pos:position pos:line="21" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="69"/></expr_stmt>
		<break pos:line="22" pos:column="17">break;<pos:position pos:line="22" pos:column="23"/></break>
	<case pos:line="23" pos:column="9">case <expr><name pos:line="23" pos:column="14">CHILD_ERR_ENOENT<pos:position pos:line="23" pos:column="30"/></name></expr>:<pos:position pos:line="23" pos:column="31"/></case>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">error_errno<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><literal type="string" pos:line="24" pos:column="29">"cannot run %s"<pos:position pos:line="24" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="46">cmd<pos:position pos:line="24" pos:column="49"/></name><operator pos:line="24" pos:column="49">-&gt;<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="51">argv<pos:position pos:line="24" pos:column="55"/></name><index pos:line="24" pos:column="55">[<expr><literal type="number" pos:line="24" pos:column="56">0<pos:position pos:line="24" pos:column="57"/></literal></expr>]<pos:position pos:line="24" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="60"/></expr_stmt>
		<break pos:line="25" pos:column="17">break;<pos:position pos:line="25" pos:column="23"/></break>
	<case pos:line="26" pos:column="9">case <expr><name pos:line="26" pos:column="14">CHILD_ERR_SILENT<pos:position pos:line="26" pos:column="30"/></name></expr>:<pos:position pos:line="26" pos:column="31"/></case>
		<break pos:line="27" pos:column="17">break;<pos:position pos:line="27" pos:column="23"/></break>
	<case pos:line="28" pos:column="9">case <expr><name pos:line="28" pos:column="14">CHILD_ERR_ERRNO<pos:position pos:line="28" pos:column="29"/></name></expr>:<pos:position pos:line="28" pos:column="30"/></case>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">error_errno<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="string" pos:line="29" pos:column="29">"cannot exec '%s'"<pos:position pos:line="29" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="49">cmd<pos:position pos:line="29" pos:column="52"/></name><operator pos:line="29" pos:column="52">-&gt;<pos:position pos:line="29" pos:column="57"/></operator><name pos:line="29" pos:column="54">argv<pos:position pos:line="29" pos:column="58"/></name><index pos:line="29" pos:column="58">[<expr><literal type="number" pos:line="29" pos:column="59">0<pos:position pos:line="29" pos:column="60"/></literal></expr>]<pos:position pos:line="29" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="63"/></expr_stmt>
		<break pos:line="30" pos:column="17">break;<pos:position pos:line="30" pos:column="23"/></break>
	}<pos:position pos:line="31" pos:column="10"/></block></switch>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">set_error_routine<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">old_errfn<pos:position pos:line="32" pos:column="36"/></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

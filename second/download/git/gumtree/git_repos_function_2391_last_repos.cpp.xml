<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2391_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">setup_explicit_git_dir<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">gitdirenv<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
					  <parameter><decl><type><name><name pos:line="2" pos:column="43">struct<pos:position pos:line="2" pos:column="49"/></name> <name pos:line="2" pos:column="50">strbuf<pos:position pos:line="2" pos:column="56"/></name></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">cwd<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
					  <parameter><decl><type><name pos:line="3" pos:column="43">int<pos:position pos:line="3" pos:column="46"/></name> <modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type><name pos:line="3" pos:column="48">nongit_ok<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="58"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">work_tree_env<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><call><name pos:line="5" pos:column="37">getenv<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">(<argument><expr><name pos:line="5" pos:column="44">GIT_WORK_TREE_ENVIRONMENT<pos:position pos:line="5" pos:column="69"/></name></expr></argument>)<pos:position pos:line="5" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="71"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">worktree<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">gitfile<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">offset<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">PATH_MAX<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">-<pos:position pos:line="10" pos:column="23"/></operator> <literal type="number" pos:line="10" pos:column="24">40<pos:position pos:line="10" pos:column="26"/></literal> <operator pos:line="10" pos:column="27">&lt;<pos:position pos:line="10" pos:column="31"/></operator> <call><name pos:line="10" pos:column="29">strlen<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">gitdirenv<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="47"/></condition><then pos:line="10" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">die<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><literal type="string" pos:line="11" pos:column="21">"'$%s' too big"<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="38">GIT_DIR_ENVIRONMENT<pos:position pos:line="11" pos:column="57"/></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="13" pos:column="9">gitfile<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <operator pos:line="13" pos:column="19">(<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">char<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></operator><operator pos:line="13" pos:column="25">)<pos:position pos:line="13" pos:column="26"/></operator><call><name pos:line="13" pos:column="26">read_gitfile<pos:position pos:line="13" pos:column="38"/></name><argument_list pos:line="13" pos:column="38">(<argument><expr><name pos:line="13" pos:column="39">gitdirenv<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">gitfile<pos:position pos:line="14" pos:column="20"/></name></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21"> <block pos:line="14" pos:column="22">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">gitfile<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <call><name pos:line="15" pos:column="27">xstrdup<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">gitfile<pos:position pos:line="15" pos:column="42"/></name></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">gitdirenv<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">=<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">gitfile<pos:position pos:line="16" pos:column="36"/></name></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">is_git_directory<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">gitdirenv<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="42"/></condition><then pos:line="19" pos:column="42"> <block pos:line="19" pos:column="43">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">nongit_ok<pos:position pos:line="20" pos:column="30"/></name></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31"> <block pos:line="20" pos:column="32">{
			<expr_stmt><expr><operator pos:line="21" pos:column="25">*<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">nongit_ok<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">=<pos:position pos:line="21" pos:column="37"/></operator> <literal type="number" pos:line="21" pos:column="38">1<pos:position pos:line="21" pos:column="39"/></literal></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">free<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">gitfile<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
			<return pos:line="23" pos:column="25">return <expr><name pos:line="23" pos:column="32">NULL<pos:position pos:line="23" pos:column="36"/></name></expr>;<pos:position pos:line="23" pos:column="37"/></return>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">die<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><literal type="string" pos:line="25" pos:column="21">"Not a git repository: '%s'"<pos:position pos:line="25" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">gitdirenv<pos:position pos:line="25" pos:column="60"/></name></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name pos:line="28" pos:column="13">check_repository_format_gently<pos:position pos:line="28" pos:column="43"/></name><argument_list pos:line="28" pos:column="43">(<argument><expr><name pos:line="28" pos:column="44">gitdirenv<pos:position pos:line="28" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="55">nongit_ok<pos:position pos:line="28" pos:column="64"/></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="66"/></condition><then pos:line="28" pos:column="66"> <block pos:line="28" pos:column="67">{
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">free<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><name pos:line="29" pos:column="22">gitfile<pos:position pos:line="29" pos:column="29"/></name></expr></argument>)<pos:position pos:line="29" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
		<return pos:line="30" pos:column="17">return <expr><name pos:line="30" pos:column="24">NULL<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="33" pos:column="9">/* #3, #7, #11, #15, #19, #23, #27, #31 (see t1510) */</comment>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">work_tree_env<pos:position pos:line="34" pos:column="26"/></name></expr>)<pos:position pos:line="34" pos:column="27"/></condition><then pos:line="34" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="17">set_git_work_tree<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">work_tree_env<pos:position pos:line="35" pos:column="48"/></name></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt></block></then>
	<elseif pos:line="36" pos:column="9">else <if pos:line="36" pos:column="14">if <condition pos:line="36" pos:column="17">(<expr><name pos:line="36" pos:column="18">is_bare_repository_cfg<pos:position pos:line="36" pos:column="40"/></name> <operator pos:line="36" pos:column="41">&gt;<pos:position pos:line="36" pos:column="45"/></operator> <literal type="number" pos:line="36" pos:column="43">0<pos:position pos:line="36" pos:column="44"/></literal></expr>)<pos:position pos:line="36" pos:column="45"/></condition><then pos:line="36" pos:column="45"> <block pos:line="36" pos:column="46">{
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">git_work_tree_cfg<pos:position pos:line="37" pos:column="38"/></name></expr>)<pos:position pos:line="37" pos:column="39"/></condition><then pos:line="37" pos:column="39"> <block pos:line="37" pos:column="40">{
			<comment type="block" pos:line="38" pos:column="25">/* #22.2, #30 */</comment>
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">warning<pos:position pos:line="39" pos:column="32"/></name><argument_list pos:line="39" pos:column="32">(<argument><expr><literal type="string" pos:line="39" pos:column="33">"core.bare and core.worktree do not make sense"<pos:position pos:line="39" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="82"/></expr_stmt>
			<expr_stmt><expr><name pos:line="40" pos:column="25">work_tree_config_is_bogus<pos:position pos:line="40" pos:column="50"/></name> <operator pos:line="40" pos:column="51">=<pos:position pos:line="40" pos:column="52"/></operator> <literal type="number" pos:line="40" pos:column="53">1<pos:position pos:line="40" pos:column="54"/></literal></expr>;<pos:position pos:line="40" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="43" pos:column="17">/* #18, #26 */</comment>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">set_git_dir<pos:position pos:line="44" pos:column="28"/></name><argument_list pos:line="44" pos:column="28">(<argument><expr><name pos:line="44" pos:column="29">gitdirenv<pos:position pos:line="44" pos:column="38"/></name></expr></argument>)<pos:position pos:line="44" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">free<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">gitfile<pos:position pos:line="45" pos:column="29"/></name></expr></argument>)<pos:position pos:line="45" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt>
		<return pos:line="46" pos:column="17">return <expr><name pos:line="46" pos:column="24">NULL<pos:position pos:line="46" pos:column="28"/></name></expr>;<pos:position pos:line="46" pos:column="29"/></return>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="48" pos:column="9">else <if pos:line="48" pos:column="14">if <condition pos:line="48" pos:column="17">(<expr><name pos:line="48" pos:column="18">git_work_tree_cfg<pos:position pos:line="48" pos:column="35"/></name></expr>)<pos:position pos:line="48" pos:column="36"/></condition><then pos:line="48" pos:column="36"> <block pos:line="48" pos:column="37">{ <comment type="block" pos:line="48" pos:column="39">/* #6, #14 */</comment>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><call><name pos:line="49" pos:column="21">is_absolute_path<pos:position pos:line="49" pos:column="37"/></name><argument_list pos:line="49" pos:column="37">(<argument><expr><name pos:line="49" pos:column="38">git_work_tree_cfg<pos:position pos:line="49" pos:column="55"/></name></expr></argument>)<pos:position pos:line="49" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="57"/></condition><then pos:line="49" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="25">set_git_work_tree<pos:position pos:line="50" pos:column="42"/></name><argument_list pos:line="50" pos:column="42">(<argument><expr><name pos:line="50" pos:column="43">git_work_tree_cfg<pos:position pos:line="50" pos:column="60"/></name></expr></argument>)<pos:position pos:line="50" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="62"/></expr_stmt></block></then>
		<else pos:line="51" pos:column="17">else <block pos:line="51" pos:column="22">{
			<decl_stmt><decl><type><name pos:line="52" pos:column="25">char<pos:position pos:line="52" pos:column="29"/></name> <modifier pos:line="52" pos:column="30">*<pos:position pos:line="52" pos:column="31"/></modifier></type><name pos:line="52" pos:column="31">core_worktree<pos:position pos:line="52" pos:column="44"/></name></decl>;<pos:position pos:line="52" pos:column="45"/></decl_stmt>
			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><call><name pos:line="53" pos:column="29">chdir<pos:position pos:line="53" pos:column="34"/></name><argument_list pos:line="53" pos:column="34">(<argument><expr><name pos:line="53" pos:column="35">gitdirenv<pos:position pos:line="53" pos:column="44"/></name></expr></argument>)<pos:position pos:line="53" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="46"/></condition><then pos:line="53" pos:column="46">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="33">die_errno<pos:position pos:line="54" pos:column="42"/></name><argument_list pos:line="54" pos:column="42">(<argument><expr><literal type="string" pos:line="54" pos:column="43">"Could not chdir to '%s'"<pos:position pos:line="54" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="70">gitdirenv<pos:position pos:line="54" pos:column="79"/></name></expr></argument>)<pos:position pos:line="54" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="81"/></expr_stmt></block></then></if>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><call><name pos:line="55" pos:column="29">chdir<pos:position pos:line="55" pos:column="34"/></name><argument_list pos:line="55" pos:column="34">(<argument><expr><name pos:line="55" pos:column="35">git_work_tree_cfg<pos:position pos:line="55" pos:column="52"/></name></expr></argument>)<pos:position pos:line="55" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="54"/></condition><then pos:line="55" pos:column="54">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="33">die_errno<pos:position pos:line="56" pos:column="42"/></name><argument_list pos:line="56" pos:column="42">(<argument><expr><literal type="string" pos:line="56" pos:column="43">"Could not chdir to '%s'"<pos:position pos:line="56" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="70">git_work_tree_cfg<pos:position pos:line="56" pos:column="87"/></name></expr></argument>)<pos:position pos:line="56" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="89"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="57" pos:column="25">core_worktree<pos:position pos:line="57" pos:column="38"/></name> <operator pos:line="57" pos:column="39">=<pos:position pos:line="57" pos:column="40"/></operator> <call><name pos:line="57" pos:column="41">xgetcwd<pos:position pos:line="57" pos:column="48"/></name><argument_list pos:line="57" pos:column="48">()<pos:position pos:line="57" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="51"/></expr_stmt>
			<if pos:line="58" pos:column="25">if <condition pos:line="58" pos:column="28">(<expr><call><name pos:line="58" pos:column="29">chdir<pos:position pos:line="58" pos:column="34"/></name><argument_list pos:line="58" pos:column="34">(<argument><expr><name><name pos:line="58" pos:column="35">cwd<pos:position pos:line="58" pos:column="38"/></name><operator pos:line="58" pos:column="38">-&gt;<pos:position pos:line="58" pos:column="43"/></operator><name pos:line="58" pos:column="40">buf<pos:position pos:line="58" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="45"/></condition><then pos:line="58" pos:column="45">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="33">die_errno<pos:position pos:line="59" pos:column="42"/></name><argument_list pos:line="59" pos:column="42">(<argument><expr><literal type="string" pos:line="59" pos:column="43">"Could not come back to cwd"<pos:position pos:line="59" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="73"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="60" pos:column="25">set_git_work_tree<pos:position pos:line="60" pos:column="42"/></name><argument_list pos:line="60" pos:column="42">(<argument><expr><name pos:line="60" pos:column="43">core_worktree<pos:position pos:line="60" pos:column="56"/></name></expr></argument>)<pos:position pos:line="60" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="61" pos:column="25">free<pos:position pos:line="61" pos:column="29"/></name><argument_list pos:line="61" pos:column="29">(<argument><expr><name pos:line="61" pos:column="30">core_worktree<pos:position pos:line="61" pos:column="43"/></name></expr></argument>)<pos:position pos:line="61" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="62" pos:column="18"/></block></else></if>
	}<pos:position pos:line="63" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="64" pos:column="9">else <if pos:line="64" pos:column="14">if <condition pos:line="64" pos:column="17">(<expr><operator pos:line="64" pos:column="18">!<pos:position pos:line="64" pos:column="19"/></operator><call><name pos:line="64" pos:column="19">git_env_bool<pos:position pos:line="64" pos:column="31"/></name><argument_list pos:line="64" pos:column="31">(<argument><expr><name pos:line="64" pos:column="32">GIT_IMPLICIT_WORK_TREE_ENVIRONMENT<pos:position pos:line="64" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="68">1<pos:position pos:line="64" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="71"/></condition><then pos:line="64" pos:column="71"> <block pos:line="64" pos:column="72">{
		<comment type="block" pos:line="65" pos:column="17">/* #16d */</comment>
		<expr_stmt><expr><call><name pos:line="66" pos:column="17">set_git_dir<pos:position pos:line="66" pos:column="28"/></name><argument_list pos:line="66" pos:column="28">(<argument><expr><name pos:line="66" pos:column="29">gitdirenv<pos:position pos:line="66" pos:column="38"/></name></expr></argument>)<pos:position pos:line="66" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">free<pos:position pos:line="67" pos:column="21"/></name><argument_list pos:line="67" pos:column="21">(<argument><expr><name pos:line="67" pos:column="22">gitfile<pos:position pos:line="67" pos:column="29"/></name></expr></argument>)<pos:position pos:line="67" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="31"/></expr_stmt>
		<return pos:line="68" pos:column="17">return <expr><name pos:line="68" pos:column="24">NULL<pos:position pos:line="68" pos:column="28"/></name></expr>;<pos:position pos:line="68" pos:column="29"/></return>
	}<pos:position pos:line="69" pos:column="10"/></block></then></if></elseif>
	<else pos:line="70" pos:column="9">else <comment type="block" pos:line="70" pos:column="14">/* #2, #10 */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="17">set_git_work_tree<pos:position pos:line="71" pos:column="34"/></name><argument_list pos:line="71" pos:column="34">(<argument><expr><literal type="string" pos:line="71" pos:column="35">"."<pos:position pos:line="71" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="40"/></expr_stmt></block></else></if>

	<comment type="block" pos:line="73" pos:column="9">/* set_git_work_tree() must have been called by now */</comment>
	<expr_stmt><expr><name pos:line="74" pos:column="9">worktree<pos:position pos:line="74" pos:column="17"/></name> <operator pos:line="74" pos:column="18">=<pos:position pos:line="74" pos:column="19"/></operator> <call><name pos:line="74" pos:column="20">get_git_work_tree<pos:position pos:line="74" pos:column="37"/></name><argument_list pos:line="74" pos:column="37">()<pos:position pos:line="74" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="40"/></expr_stmt>

	<comment type="block" pos:line="76" pos:column="9">/* both get_git_work_tree() and cwd are already normalized */</comment>
	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><operator pos:line="77" pos:column="13">!<pos:position pos:line="77" pos:column="14"/></operator><call><name pos:line="77" pos:column="14">strcmp<pos:position pos:line="77" pos:column="20"/></name><argument_list pos:line="77" pos:column="20">(<argument><expr><name><name pos:line="77" pos:column="21">cwd<pos:position pos:line="77" pos:column="24"/></name><operator pos:line="77" pos:column="24">-&gt;<pos:position pos:line="77" pos:column="29"/></operator><name pos:line="77" pos:column="26">buf<pos:position pos:line="77" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="31">worktree<pos:position pos:line="77" pos:column="39"/></name></expr></argument>)<pos:position pos:line="77" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="41"/></condition><then pos:line="77" pos:column="41"> <block pos:line="77" pos:column="42">{ <comment type="block" pos:line="77" pos:column="44">/* cwd == worktree */</comment>
		<expr_stmt><expr><call><name pos:line="78" pos:column="17">set_git_dir<pos:position pos:line="78" pos:column="28"/></name><argument_list pos:line="78" pos:column="28">(<argument><expr><name pos:line="78" pos:column="29">gitdirenv<pos:position pos:line="78" pos:column="38"/></name></expr></argument>)<pos:position pos:line="78" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="79" pos:column="17">free<pos:position pos:line="79" pos:column="21"/></name><argument_list pos:line="79" pos:column="21">(<argument><expr><name pos:line="79" pos:column="22">gitfile<pos:position pos:line="79" pos:column="29"/></name></expr></argument>)<pos:position pos:line="79" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="31"/></expr_stmt>
		<return pos:line="80" pos:column="17">return <expr><name pos:line="80" pos:column="24">NULL<pos:position pos:line="80" pos:column="28"/></name></expr>;<pos:position pos:line="80" pos:column="29"/></return>
	}<pos:position pos:line="81" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="83" pos:column="9">offset<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">=<pos:position pos:line="83" pos:column="17"/></operator> <call><name pos:line="83" pos:column="18">dir_inside_of<pos:position pos:line="83" pos:column="31"/></name><argument_list pos:line="83" pos:column="31">(<argument><expr><name><name pos:line="83" pos:column="32">cwd<pos:position pos:line="83" pos:column="35"/></name><operator pos:line="83" pos:column="35">-&gt;<pos:position pos:line="83" pos:column="40"/></operator><name pos:line="83" pos:column="37">buf<pos:position pos:line="83" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="42">worktree<pos:position pos:line="83" pos:column="50"/></name></expr></argument>)<pos:position pos:line="83" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="52"/></expr_stmt>
	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name pos:line="84" pos:column="13">offset<pos:position pos:line="84" pos:column="19"/></name> <operator pos:line="84" pos:column="20">&gt;=<pos:position pos:line="84" pos:column="25"/></operator> <literal type="number" pos:line="84" pos:column="23">0<pos:position pos:line="84" pos:column="24"/></literal></expr>)<pos:position pos:line="84" pos:column="25"/></condition><then pos:line="84" pos:column="25"> <block pos:line="84" pos:column="26">{	<comment type="block" pos:line="84" pos:column="33">/* cwd inside worktree? */</comment>
		<expr_stmt><expr><call><name pos:line="85" pos:column="17">set_git_dir<pos:position pos:line="85" pos:column="28"/></name><argument_list pos:line="85" pos:column="28">(<argument><expr><call><name pos:line="85" pos:column="29">real_path<pos:position pos:line="85" pos:column="38"/></name><argument_list pos:line="85" pos:column="38">(<argument><expr><name pos:line="85" pos:column="39">gitdirenv<pos:position pos:line="85" pos:column="48"/></name></expr></argument>)<pos:position pos:line="85" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="85" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="51"/></expr_stmt>
		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><call><name pos:line="86" pos:column="21">chdir<pos:position pos:line="86" pos:column="26"/></name><argument_list pos:line="86" pos:column="26">(<argument><expr><name pos:line="86" pos:column="27">worktree<pos:position pos:line="86" pos:column="35"/></name></expr></argument>)<pos:position pos:line="86" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="37"/></condition><then pos:line="86" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="25">die_errno<pos:position pos:line="87" pos:column="34"/></name><argument_list pos:line="87" pos:column="34">(<argument><expr><literal type="string" pos:line="87" pos:column="35">"Could not chdir to '%s'"<pos:position pos:line="87" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="62">worktree<pos:position pos:line="87" pos:column="70"/></name></expr></argument>)<pos:position pos:line="87" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="72"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="88" pos:column="17">strbuf_addch<pos:position pos:line="88" pos:column="29"/></name><argument_list pos:line="88" pos:column="29">(<argument><expr><name pos:line="88" pos:column="30">cwd<pos:position pos:line="88" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="88" pos:column="35">'/'<pos:position pos:line="88" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="89" pos:column="17">free<pos:position pos:line="89" pos:column="21"/></name><argument_list pos:line="89" pos:column="21">(<argument><expr><name pos:line="89" pos:column="22">gitfile<pos:position pos:line="89" pos:column="29"/></name></expr></argument>)<pos:position pos:line="89" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="31"/></expr_stmt>
		<return pos:line="90" pos:column="17">return <expr><name><name pos:line="90" pos:column="24">cwd<pos:position pos:line="90" pos:column="27"/></name><operator pos:line="90" pos:column="27">-&gt;<pos:position pos:line="90" pos:column="32"/></operator><name pos:line="90" pos:column="29">buf<pos:position pos:line="90" pos:column="32"/></name></name> <operator pos:line="90" pos:column="33">+<pos:position pos:line="90" pos:column="34"/></operator> <name pos:line="90" pos:column="35">offset<pos:position pos:line="90" pos:column="41"/></name></expr>;<pos:position pos:line="90" pos:column="42"/></return>
	}<pos:position pos:line="91" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="93" pos:column="9">/* cwd outside worktree */</comment>
	<expr_stmt><expr><call><name pos:line="94" pos:column="9">set_git_dir<pos:position pos:line="94" pos:column="20"/></name><argument_list pos:line="94" pos:column="20">(<argument><expr><name pos:line="94" pos:column="21">gitdirenv<pos:position pos:line="94" pos:column="30"/></name></expr></argument>)<pos:position pos:line="94" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="95" pos:column="9">free<pos:position pos:line="95" pos:column="13"/></name><argument_list pos:line="95" pos:column="13">(<argument><expr><name pos:line="95" pos:column="14">gitfile<pos:position pos:line="95" pos:column="21"/></name></expr></argument>)<pos:position pos:line="95" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="23"/></expr_stmt>
	<return pos:line="96" pos:column="9">return <expr><name pos:line="96" pos:column="16">NULL<pos:position pos:line="96" pos:column="20"/></name></expr>;<pos:position pos:line="96" pos:column="21"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

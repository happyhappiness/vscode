<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6540_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">fast_export_begin_note<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">uint32_t<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">revision<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">author<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">log<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">timestamp_t<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">timestamp<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="57">const<pos:position pos:line="2" pos:column="62"/></specifier> <name pos:line="2" pos:column="63">char<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">note_ref<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">int<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">firstnote<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><literal type="number" pos:line="4" pos:column="32">1<pos:position pos:line="4" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">loglen<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><call><name pos:line="5" pos:column="25">strlen<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">(<argument><expr><name pos:line="5" pos:column="32">log<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">printf<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="string" pos:line="6" pos:column="16">"commit %s\n"<pos:position pos:line="6" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="31">note_ref<pos:position pos:line="6" pos:column="39"/></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">printf<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="string" pos:line="7" pos:column="16">"committer %s &lt;%s@%s&gt; %"<pos:position pos:line="7" pos:column="46"/></literal><name pos:line="7" pos:column="40">PRItime<pos:position pos:line="7" pos:column="47"/></name><literal type="string" pos:line="7" pos:column="47">" +0000\n"<pos:position pos:line="7" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="59">author<pos:position pos:line="7" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="67">author<pos:position pos:line="7" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="75">"local"<pos:position pos:line="7" pos:column="82"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="84">timestamp<pos:position pos:line="7" pos:column="93"/></name></expr></argument>)<pos:position pos:line="7" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="95"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">printf<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="string" pos:line="8" pos:column="16">"data %"<pos:position pos:line="8" pos:column="24"/></literal><name pos:line="8" pos:column="24">PRIuMAX<pos:position pos:line="8" pos:column="31"/></name><literal type="string" pos:line="8" pos:column="31">"\n"<pos:position pos:line="8" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="37">(<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="38">uintmax_t<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">)<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="48">loglen<pos:position pos:line="8" pos:column="54"/></name></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">fwrite<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">log<pos:position pos:line="9" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="21">loglen<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="29">1<pos:position pos:line="9" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="32">stdout<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">firstnote<pos:position pos:line="10" pos:column="22"/></name></expr>)<pos:position pos:line="10" pos:column="23"/></condition><then pos:line="10" pos:column="23"> <block pos:line="10" pos:column="24">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">revision<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">&gt;<pos:position pos:line="11" pos:column="34"/></operator> <literal type="number" pos:line="11" pos:column="32">1<pos:position pos:line="11" pos:column="33"/></literal></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">printf<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><literal type="string" pos:line="12" pos:column="32">"from %s^0"<pos:position pos:line="12" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">note_ref<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="13" pos:column="17">firstnote<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">=<pos:position pos:line="13" pos:column="28"/></operator> <literal type="number" pos:line="13" pos:column="29">0<pos:position pos:line="13" pos:column="30"/></literal></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">fputc<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><literal type="char" pos:line="15" pos:column="15">'\n'<pos:position pos:line="15" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="21">stdout<pos:position pos:line="15" pos:column="27"/></name></expr></argument>)<pos:position pos:line="15" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_394_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">clean_shared_index_files<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">current_hex<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">dirent<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">de<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">DIR<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">dir<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><call><name pos:line="4" pos:column="20">opendir<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">(<argument><expr><call><name pos:line="4" pos:column="28">get_git_dir<pos:position pos:line="4" pos:column="39"/></name><argument_list pos:line="4" pos:column="39">()<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">dir<pos:position pos:line="6" pos:column="17"/></name></expr>)<pos:position pos:line="6" pos:column="18"/></condition><then pos:line="6" pos:column="18">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><call><name pos:line="7" pos:column="24">error_errno<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<argument><expr><call><name pos:line="7" pos:column="36">_<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">(<argument><expr><literal type="string" pos:line="7" pos:column="38">"unable to open git dir: %s"<pos:position pos:line="7" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="69">get_git_dir<pos:position pos:line="7" pos:column="80"/></name><argument_list pos:line="7" pos:column="80">()<pos:position pos:line="7" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="84"/></return></block></then></if>

	<while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><operator pos:line="9" pos:column="16">(<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">de<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <call><name pos:line="9" pos:column="22">readdir<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">dir<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call><operator pos:line="9" pos:column="34">)<pos:position pos:line="9" pos:column="35"/></operator> <operator pos:line="9" pos:column="36">!=<pos:position pos:line="9" pos:column="38"/></operator> <name pos:line="9" pos:column="39">NULL<pos:position pos:line="9" pos:column="43"/></name></expr>)<pos:position pos:line="9" pos:column="44"/></condition> <block pos:line="9" pos:column="45">{
		<decl_stmt><decl><type><specifier pos:line="10" pos:column="17">const<pos:position pos:line="10" pos:column="22"/></specifier> <name pos:line="10" pos:column="23">char<pos:position pos:line="10" pos:column="27"/></name> <modifier pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></modifier></type><name pos:line="10" pos:column="29">sha1_hex<pos:position pos:line="10" pos:column="37"/></name></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="11" pos:column="17">const<pos:position pos:line="11" pos:column="22"/></specifier> <name pos:line="11" pos:column="23">char<pos:position pos:line="11" pos:column="27"/></name> <modifier pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></modifier></type><name pos:line="11" pos:column="29">shared_index_path<pos:position pos:line="11" pos:column="46"/></name></decl>;<pos:position pos:line="11" pos:column="47"/></decl_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><call><name pos:line="12" pos:column="22">skip_prefix<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name><name pos:line="12" pos:column="34">de<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">d_name<pos:position pos:line="12" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="46">"sharedindex."<pos:position pos:line="12" pos:column="60"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="62">&amp;<pos:position pos:line="12" pos:column="67"/></operator><name pos:line="12" pos:column="63">sha1_hex<pos:position pos:line="12" pos:column="71"/></name></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="73"/></condition><then pos:line="12" pos:column="73">
			<block type="pseudo"><continue pos:line="13" pos:column="25">continue;<pos:position pos:line="13" pos:column="34"/></continue></block></then></if>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><call><name pos:line="14" pos:column="22">strcmp<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">sha1_hex<pos:position pos:line="14" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="39">current_hex<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="52"/></condition><then pos:line="14" pos:column="52">
			<block type="pseudo"><continue pos:line="15" pos:column="25">continue;<pos:position pos:line="15" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="16" pos:column="17">shared_index_path<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">=<pos:position pos:line="16" pos:column="36"/></operator> <call><name pos:line="16" pos:column="37">git_path<pos:position pos:line="16" pos:column="45"/></name><argument_list pos:line="16" pos:column="45">(<argument><expr><literal type="string" pos:line="16" pos:column="46">"%s"<pos:position pos:line="16" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="52">de<pos:position pos:line="16" pos:column="54"/></name><operator pos:line="16" pos:column="54">-&gt;<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="56">d_name<pos:position pos:line="16" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">should_delete_shared_index<pos:position pos:line="17" pos:column="47"/></name><argument_list pos:line="17" pos:column="47">(<argument><expr><name pos:line="17" pos:column="48">shared_index_path<pos:position pos:line="17" pos:column="65"/></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call> <operator pos:line="17" pos:column="67">&gt;<pos:position pos:line="17" pos:column="71"/></operator> <literal type="number" pos:line="17" pos:column="69">0<pos:position pos:line="17" pos:column="70"/></literal> <operator pos:line="17" pos:column="71">&amp;&amp;<pos:position pos:line="17" pos:column="81"/></operator>
		    <call><name pos:line="18" pos:column="21">unlink<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">shared_index_path<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="47"/></condition><then pos:line="18" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">warning_errno<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><call><name pos:line="19" pos:column="39">_<pos:position pos:line="19" pos:column="40"/></name><argument_list pos:line="19" pos:column="40">(<argument><expr><literal type="string" pos:line="19" pos:column="41">"unable to unlink: %s"<pos:position pos:line="19" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="19" pos:column="66">shared_index_path<pos:position pos:line="19" pos:column="83"/></name></expr></argument>)<pos:position pos:line="19" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="85"/></expr_stmt></block></then></if>
	}<pos:position pos:line="20" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">closedir<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><name pos:line="21" pos:column="18">dir<pos:position pos:line="21" pos:column="21"/></name></expr></argument>)<pos:position pos:line="21" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>

	<return pos:line="23" pos:column="9">return <expr><literal type="number" pos:line="23" pos:column="16">0<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_235_git-2.11.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">load_bitmap_entries_v1<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">bitmap_index<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">index<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">uint32_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">i<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">stored_bitmap<pos:position pos:line="4" pos:column="29"/></name></name> <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name><name pos:line="4" pos:column="31">recent_bitmaps<pos:position pos:line="4" pos:column="45"/></name><index pos:line="4" pos:column="45">[<expr><name pos:line="4" pos:column="46">MAX_XOR_OFFSET<pos:position pos:line="4" pos:column="60"/></name></expr>]<pos:position pos:line="4" pos:column="61"/></index></name> <init pos:line="4" pos:column="62">= <expr><block pos:line="4" pos:column="64">{ <expr><name pos:line="4" pos:column="66">NULL<pos:position pos:line="4" pos:column="70"/></name></expr> }<pos:position pos:line="4" pos:column="72"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="73"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name><name pos:line="6" pos:column="25">index<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">-&gt;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="32">entry_count<pos:position pos:line="6" pos:column="43"/></name></name></expr>;<pos:position pos:line="6" pos:column="44"/></condition> <incr><expr><operator pos:line="6" pos:column="45">++<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="47">i<pos:position pos:line="6" pos:column="48"/></name></expr></incr>)<pos:position pos:line="6" pos:column="49"/></control> <block pos:line="6" pos:column="50">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">xor_offset<pos:position pos:line="7" pos:column="31"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="33">flags<pos:position pos:line="7" pos:column="38"/></name></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">ewah_bitmap<pos:position pos:line="8" pos:column="35"/></name></name> <modifier pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></modifier></type><name pos:line="8" pos:column="37">bitmap<pos:position pos:line="8" pos:column="43"/></name> <init pos:line="8" pos:column="44">= <expr><name pos:line="8" pos:column="46">NULL<pos:position pos:line="8" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="51"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="9" pos:column="17">struct<pos:position pos:line="9" pos:column="23"/></name> <name pos:line="9" pos:column="24">stored_bitmap<pos:position pos:line="9" pos:column="37"/></name></name> <modifier pos:line="9" pos:column="38">*<pos:position pos:line="9" pos:column="39"/></modifier></type><name pos:line="9" pos:column="39">xor_bitmap<pos:position pos:line="9" pos:column="49"/></name> <init pos:line="9" pos:column="50">= <expr><name pos:line="9" pos:column="52">NULL<pos:position pos:line="9" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="57"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">uint32_t<pos:position pos:line="10" pos:column="25"/></name></type> <name pos:line="10" pos:column="26">commit_idx_pos<pos:position pos:line="10" pos:column="40"/></name></decl>;<pos:position pos:line="10" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="11" pos:column="17">const<pos:position pos:line="11" pos:column="22"/></specifier> <name pos:line="11" pos:column="23">unsigned<pos:position pos:line="11" pos:column="31"/></name> <name pos:line="11" pos:column="32">char<pos:position pos:line="11" pos:column="36"/></name> <modifier pos:line="11" pos:column="37">*<pos:position pos:line="11" pos:column="38"/></modifier></type><name pos:line="11" pos:column="38">sha1<pos:position pos:line="11" pos:column="42"/></name></decl>;<pos:position pos:line="11" pos:column="43"/></decl_stmt>

		<expr_stmt><expr><name pos:line="13" pos:column="17">commit_idx_pos<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">=<pos:position pos:line="13" pos:column="33"/></operator> <call><name pos:line="13" pos:column="34">read_be32<pos:position pos:line="13" pos:column="43"/></name><argument_list pos:line="13" pos:column="43">(<argument><expr><name><name pos:line="13" pos:column="44">index<pos:position pos:line="13" pos:column="49"/></name><operator pos:line="13" pos:column="49">-&gt;<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="51">map<pos:position pos:line="13" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="56">&amp;<pos:position pos:line="13" pos:column="61"/></operator><name><name pos:line="13" pos:column="57">index<pos:position pos:line="13" pos:column="62"/></name><operator pos:line="13" pos:column="62">-&gt;<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="64">map_pos<pos:position pos:line="13" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><name pos:line="14" pos:column="17">xor_offset<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">=<pos:position pos:line="14" pos:column="29"/></operator> <call><name pos:line="14" pos:column="30">read_u8<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name><name pos:line="14" pos:column="38">index<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">-&gt;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="45">map<pos:position pos:line="14" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="50">&amp;<pos:position pos:line="14" pos:column="55"/></operator><name><name pos:line="14" pos:column="51">index<pos:position pos:line="14" pos:column="56"/></name><operator pos:line="14" pos:column="56">-&gt;<pos:position pos:line="14" pos:column="61"/></operator><name pos:line="14" pos:column="58">map_pos<pos:position pos:line="14" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">flags<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <call><name pos:line="15" pos:column="25">read_u8<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name><name pos:line="15" pos:column="33">index<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">map<pos:position pos:line="15" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="45">&amp;<pos:position pos:line="15" pos:column="50"/></operator><name><name pos:line="15" pos:column="46">index<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">map_pos<pos:position pos:line="15" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>

		<expr_stmt><expr><name pos:line="17" pos:column="17">sha1<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <call><name pos:line="17" pos:column="24">nth_packed_object_sha1<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><name><name pos:line="17" pos:column="47">index<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">-&gt;<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="54">pack<pos:position pos:line="17" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="60">commit_idx_pos<pos:position pos:line="17" pos:column="74"/></name></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="76"/></expr_stmt>

		<expr_stmt><expr><name pos:line="19" pos:column="17">bitmap<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <call><name pos:line="19" pos:column="26">read_bitmap_1<pos:position pos:line="19" pos:column="39"/></name><argument_list pos:line="19" pos:column="39">(<argument><expr><name pos:line="19" pos:column="40">index<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">bitmap<pos:position pos:line="20" pos:column="28"/></name></expr>)<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29">
			<block type="pseudo"><return pos:line="21" pos:column="25">return <expr><operator pos:line="21" pos:column="32">-<pos:position pos:line="21" pos:column="33"/></operator><literal type="number" pos:line="21" pos:column="33">1<pos:position pos:line="21" pos:column="34"/></literal></expr>;<pos:position pos:line="21" pos:column="35"/></return></block></then></if>

		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">xor_offset<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">&gt;<pos:position pos:line="23" pos:column="36"/></operator> <name pos:line="23" pos:column="34">MAX_XOR_OFFSET<pos:position pos:line="23" pos:column="48"/></name> <operator pos:line="23" pos:column="49">||<pos:position pos:line="23" pos:column="51"/></operator> <name pos:line="23" pos:column="52">xor_offset<pos:position pos:line="23" pos:column="62"/></name> <operator pos:line="23" pos:column="63">&gt;<pos:position pos:line="23" pos:column="67"/></operator> <name pos:line="23" pos:column="65">i<pos:position pos:line="23" pos:column="66"/></name></expr>)<pos:position pos:line="23" pos:column="67"/></condition><then pos:line="23" pos:column="67">
			<block type="pseudo"><return pos:line="24" pos:column="25">return <expr><call><name pos:line="24" pos:column="32">error<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><literal type="string" pos:line="24" pos:column="38">"Corrupted bitmap pack index"<pos:position pos:line="24" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="69"/></return></block></then></if>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">xor_offset<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">&gt;<pos:position pos:line="26" pos:column="36"/></operator> <literal type="number" pos:line="26" pos:column="34">0<pos:position pos:line="26" pos:column="35"/></literal></expr>)<pos:position pos:line="26" pos:column="36"/></condition><then pos:line="26" pos:column="36"> <block pos:line="26" pos:column="37">{
			<expr_stmt><expr><name pos:line="27" pos:column="25">xor_bitmap<pos:position pos:line="27" pos:column="35"/></name> <operator pos:line="27" pos:column="36">=<pos:position pos:line="27" pos:column="37"/></operator> <name><name pos:line="27" pos:column="38">recent_bitmaps<pos:position pos:line="27" pos:column="52"/></name><index pos:line="27" pos:column="52">[<expr><operator pos:line="27" pos:column="53">(<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="54">i<pos:position pos:line="27" pos:column="55"/></name> <operator pos:line="27" pos:column="56">-<pos:position pos:line="27" pos:column="57"/></operator> <name pos:line="27" pos:column="58">xor_offset<pos:position pos:line="27" pos:column="68"/></name><operator pos:line="27" pos:column="68">)<pos:position pos:line="27" pos:column="69"/></operator> <operator pos:line="27" pos:column="70">%<pos:position pos:line="27" pos:column="71"/></operator> <name pos:line="27" pos:column="72">MAX_XOR_OFFSET<pos:position pos:line="27" pos:column="86"/></name></expr>]<pos:position pos:line="27" pos:column="87"/></index></name></expr>;<pos:position pos:line="27" pos:column="88"/></expr_stmt>

			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><name pos:line="29" pos:column="29">xor_bitmap<pos:position pos:line="29" pos:column="39"/></name> <operator pos:line="29" pos:column="40">==<pos:position pos:line="29" pos:column="42"/></operator> <name pos:line="29" pos:column="43">NULL<pos:position pos:line="29" pos:column="47"/></name></expr>)<pos:position pos:line="29" pos:column="48"/></condition><then pos:line="29" pos:column="48">
				<block type="pseudo"><return pos:line="30" pos:column="33">return <expr><call><name pos:line="30" pos:column="40">error<pos:position pos:line="30" pos:column="45"/></name><argument_list pos:line="30" pos:column="45">(<argument><expr><literal type="string" pos:line="30" pos:column="46">"Invalid XOR offset in bitmap pack index"<pos:position pos:line="30" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="89"/></return></block></then></if>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="33" pos:column="17">recent_bitmaps<pos:position pos:line="33" pos:column="31"/></name><index pos:line="33" pos:column="31">[<expr><name pos:line="33" pos:column="32">i<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">%<pos:position pos:line="33" pos:column="35"/></operator> <name pos:line="33" pos:column="36">MAX_XOR_OFFSET<pos:position pos:line="33" pos:column="50"/></name></expr>]<pos:position pos:line="33" pos:column="51"/></index></name> <operator pos:line="33" pos:column="52">=<pos:position pos:line="33" pos:column="53"/></operator> <call><name pos:line="33" pos:column="54">store_bitmap<pos:position pos:line="33" pos:column="66"/></name><argument_list pos:line="33" pos:column="66">(
			<argument><expr><name pos:line="34" pos:column="25">index<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="32">bitmap<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="40">sha1<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="46">xor_bitmap<pos:position pos:line="34" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="58">flags<pos:position pos:line="34" pos:column="63"/></name></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></for>

	<return pos:line="37" pos:column="9">return <expr><literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7012_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bin_tree_t<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">lower_subexp<pos:position pos:line="2" pos:column="13"/></name> <parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">reg_errcode_t<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">err<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">regex_t<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">preg<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">bin_tree_t<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">node<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">re_dfa_t<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">dfa<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><operator pos:line="4" pos:column="19">(<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">re_dfa_t<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></operator><operator pos:line="4" pos:column="30">)<pos:position pos:line="4" pos:column="31"/></operator> <name><name pos:line="4" pos:column="32">preg<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">buffer<pos:position pos:line="4" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">bin_tree_t<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">body<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name><name pos:line="5" pos:column="22">node<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">left<pos:position pos:line="5" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">bin_tree_t<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">op<pos:position pos:line="6" pos:column="17"/></name></decl>, <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="20">cls<pos:position pos:line="6" pos:column="23"/></name></decl>, <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="26">tree1<pos:position pos:line="6" pos:column="31"/></name></decl>, <modifier pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="34">tree<pos:position pos:line="6" pos:column="38"/></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">preg<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">no_sub<pos:position pos:line="8" pos:column="19"/></name></name>
      <comment type="block" pos:line="9" pos:column="7">/* We do not optimize empty subexpressions, because otherwise we may
	 have bad CONCAT nodes with NULL children.  This is obviously not
	 very common, so we do not lose much.  An example that triggers
	 this case is the sed "script" /\(\)/x.  */</comment>
      <operator pos:line="13" pos:column="7">&amp;&amp;<pos:position pos:line="13" pos:column="17"/></operator> <name><name pos:line="13" pos:column="10">node<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">left<pos:position pos:line="13" pos:column="20"/></name></name> <operator pos:line="13" pos:column="21">!=<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">NULL<pos:position pos:line="13" pos:column="28"/></name>
      <operator pos:line="14" pos:column="7">&amp;&amp;<pos:position pos:line="14" pos:column="17"/></operator> <operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator><name><name pos:line="14" pos:column="11">node<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">token<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">.<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="23">opr<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">.<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="27">idx<pos:position pos:line="14" pos:column="30"/></name></name> <operator pos:line="14" pos:column="31">&gt;=<pos:position pos:line="14" pos:column="36"/></operator> <name pos:line="14" pos:column="34">BITSET_WORD_BITS<pos:position pos:line="14" pos:column="50"/></name>
	  <operator pos:line="15" pos:column="11">||<pos:position pos:line="15" pos:column="13"/></operator> <operator pos:line="15" pos:column="14">!<pos:position pos:line="15" pos:column="15"/></operator><operator pos:line="15" pos:column="15">(<pos:position pos:line="15" pos:column="16"/></operator><name><name pos:line="15" pos:column="16">dfa<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">-&gt;<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="21">used_bkref_map<pos:position pos:line="15" pos:column="35"/></name></name>
	       <operator pos:line="16" pos:column="16">&amp;<pos:position pos:line="16" pos:column="21"/></operator> <operator pos:line="16" pos:column="18">(<pos:position pos:line="16" pos:column="19"/></operator><operator pos:line="16" pos:column="19">(<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="20">bitset_word_t<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">)<pos:position pos:line="16" pos:column="34"/></operator> <literal type="number" pos:line="16" pos:column="35">1<pos:position pos:line="16" pos:column="36"/></literal> <operator pos:line="16" pos:column="37">&lt;&lt;<pos:position pos:line="16" pos:column="45"/></operator> <name><name pos:line="16" pos:column="40">node<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">-&gt;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="46">token<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">.<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="52">opr<pos:position pos:line="16" pos:column="55"/></name><operator pos:line="16" pos:column="55">.<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="56">idx<pos:position pos:line="16" pos:column="59"/></name></name><operator pos:line="16" pos:column="59">)<pos:position pos:line="16" pos:column="60"/></operator><operator pos:line="16" pos:column="60">)<pos:position pos:line="16" pos:column="61"/></operator><operator pos:line="16" pos:column="61">)<pos:position pos:line="16" pos:column="62"/></operator></expr>)<pos:position pos:line="16" pos:column="63"/></condition><then pos:line="16" pos:column="63">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><name><name pos:line="17" pos:column="12">node<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">left<pos:position pos:line="17" pos:column="22"/></name></name></expr>;<pos:position pos:line="17" pos:column="23"/></return></block></then></if>

  <comment type="block" pos:line="19" pos:column="3">/* Convert the SUBEXP node to the concatenation of an
     OP_OPEN_SUBEXP, the contents, and an OP_CLOSE_SUBEXP.  */</comment>
  <expr_stmt><expr><name pos:line="21" pos:column="3">op<pos:position pos:line="21" pos:column="5"/></name> <operator pos:line="21" pos:column="6">=<pos:position pos:line="21" pos:column="7"/></operator> <call><name pos:line="21" pos:column="8">create_tree<pos:position pos:line="21" pos:column="19"/></name> <argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">dfa<pos:position pos:line="21" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="26">NULL<pos:position pos:line="21" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="32">NULL<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">OP_OPEN_SUBEXP<pos:position pos:line="21" pos:column="52"/></name></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">cls<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <call><name pos:line="22" pos:column="9">create_tree<pos:position pos:line="22" pos:column="20"/></name> <argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">dfa<pos:position pos:line="22" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="27">NULL<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="33">NULL<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="39">OP_CLOSE_SUBEXP<pos:position pos:line="22" pos:column="54"/></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><name pos:line="23" pos:column="3">tree1<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <ternary><condition><expr><name pos:line="23" pos:column="11">body<pos:position pos:line="23" pos:column="15"/></name></expr> ?<pos:position pos:line="23" pos:column="17"/></condition><then pos:line="23" pos:column="17"> <expr><call><name pos:line="23" pos:column="18">create_tree<pos:position pos:line="23" pos:column="29"/></name> <argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">dfa<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="36">body<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">cls<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="47">CONCAT<pos:position pos:line="23" pos:column="53"/></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr> <pos:position pos:line="23" pos:column="55"/></then><else pos:line="23" pos:column="55">: <expr><name pos:line="23" pos:column="57">cls<pos:position pos:line="23" pos:column="60"/></name></expr></else></ternary></expr>;<pos:position pos:line="23" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><name pos:line="24" pos:column="3">tree<pos:position pos:line="24" pos:column="7"/></name> <operator pos:line="24" pos:column="8">=<pos:position pos:line="24" pos:column="9"/></operator> <call><name pos:line="24" pos:column="10">create_tree<pos:position pos:line="24" pos:column="21"/></name> <argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">dfa<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="28">op<pos:position pos:line="24" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="32">tree1<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="39">CONCAT<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><call><name pos:line="25" pos:column="7">BE<pos:position pos:line="25" pos:column="9"/></name> <argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">tree<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">==<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">NULL<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">||<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">tree1<pos:position pos:line="25" pos:column="32"/></name> <operator pos:line="25" pos:column="33">==<pos:position pos:line="25" pos:column="35"/></operator> <name pos:line="25" pos:column="36">NULL<pos:position pos:line="25" pos:column="40"/></name> <operator pos:line="25" pos:column="41">||<pos:position pos:line="25" pos:column="43"/></operator> <name pos:line="25" pos:column="44">op<pos:position pos:line="25" pos:column="46"/></name> <operator pos:line="25" pos:column="47">==<pos:position pos:line="25" pos:column="49"/></operator> <name pos:line="25" pos:column="50">NULL<pos:position pos:line="25" pos:column="54"/></name> <operator pos:line="25" pos:column="55">||<pos:position pos:line="25" pos:column="57"/></operator> <name pos:line="25" pos:column="58">cls<pos:position pos:line="25" pos:column="61"/></name> <operator pos:line="25" pos:column="62">==<pos:position pos:line="25" pos:column="64"/></operator> <name pos:line="25" pos:column="65">NULL<pos:position pos:line="25" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="71">0<pos:position pos:line="25" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="74"/></condition><then pos:line="25" pos:column="74">
    <block pos:line="26" pos:column="5">{
      <expr_stmt><expr><operator pos:line="27" pos:column="7">*<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">err<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <name pos:line="27" pos:column="14">REG_ESPACE<pos:position pos:line="27" pos:column="24"/></name></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
      <return pos:line="28" pos:column="7">return <expr><name pos:line="28" pos:column="14">NULL<pos:position pos:line="28" pos:column="18"/></name></expr>;<pos:position pos:line="28" pos:column="19"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="31" pos:column="3">op<pos:position pos:line="31" pos:column="5"/></name><operator pos:line="31" pos:column="5">-&gt;<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="7">token<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">.<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">opr<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">.<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">idx<pos:position pos:line="31" pos:column="20"/></name></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <name><name pos:line="31" pos:column="23">cls<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">-&gt;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="28">token<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">.<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="34">opr<pos:position pos:line="31" pos:column="37"/></name><operator pos:line="31" pos:column="37">.<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">idx<pos:position pos:line="31" pos:column="41"/></name></name> <operator pos:line="31" pos:column="42">=<pos:position pos:line="31" pos:column="43"/></operator> <name><name pos:line="31" pos:column="44">node<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">-&gt;<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="50">token<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">.<pos:position pos:line="31" pos:column="56"/></operator><name pos:line="31" pos:column="56">opr<pos:position pos:line="31" pos:column="59"/></name><operator pos:line="31" pos:column="59">.<pos:position pos:line="31" pos:column="60"/></operator><name pos:line="31" pos:column="60">idx<pos:position pos:line="31" pos:column="63"/></name></name></expr>;<pos:position pos:line="31" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">op<pos:position pos:line="32" pos:column="5"/></name><operator pos:line="32" pos:column="5">-&gt;<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="7">token<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">.<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">opt_subexp<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <name><name pos:line="32" pos:column="26">cls<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">-&gt;<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="31">token<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">.<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="37">opt_subexp<pos:position pos:line="32" pos:column="47"/></name></name> <operator pos:line="32" pos:column="48">=<pos:position pos:line="32" pos:column="49"/></operator> <name><name pos:line="32" pos:column="50">node<pos:position pos:line="32" pos:column="54"/></name><operator pos:line="32" pos:column="54">-&gt;<pos:position pos:line="32" pos:column="59"/></operator><name pos:line="32" pos:column="56">token<pos:position pos:line="32" pos:column="61"/></name><operator pos:line="32" pos:column="61">.<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="62">opt_subexp<pos:position pos:line="32" pos:column="72"/></name></name></expr>;<pos:position pos:line="32" pos:column="73"/></expr_stmt>
  <return pos:line="33" pos:column="3">return <expr><name pos:line="33" pos:column="10">tree<pos:position pos:line="33" pos:column="14"/></name></expr>;<pos:position pos:line="33" pos:column="15"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

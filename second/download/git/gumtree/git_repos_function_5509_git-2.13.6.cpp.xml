<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5509_git-2.13.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">resolve_deltas<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">nr_ofs_deltas<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">&amp;&amp;<pos:position pos:line="5" pos:column="38"/></operator> <operator pos:line="5" pos:column="31">!<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">nr_ref_deltas<pos:position pos:line="5" pos:column="45"/></name></expr>)<pos:position pos:line="5" pos:column="46"/></condition><then pos:line="5" pos:column="46">
		<block type="pseudo"><return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return></block></then></if>

	<comment type="block" pos:line="8" pos:column="9">/* Sort deltas by base SHA1/offset for fast searching */</comment>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">QSORT<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><name pos:line="9" pos:column="15">ofs_deltas<pos:position pos:line="9" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="27">nr_ofs_deltas<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">compare_ofs_delta_entry<pos:position pos:line="9" pos:column="65"/></name></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">QSORT<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">ref_deltas<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="27">nr_ref_deltas<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">compare_ref_delta_entry<pos:position pos:line="10" pos:column="65"/></name></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="67"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">verbose<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">||<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">show_resolving_progress<pos:position pos:line="12" pos:column="47"/></name></expr>)<pos:position pos:line="12" pos:column="48"/></condition><then pos:line="12" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">progress<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">=<pos:position pos:line="13" pos:column="27"/></operator> <call><name pos:line="13" pos:column="28">start_progress<pos:position pos:line="13" pos:column="42"/></name><argument_list pos:line="13" pos:column="42">(<argument><expr><call><name pos:line="13" pos:column="43">_<pos:position pos:line="13" pos:column="44"/></name><argument_list pos:line="13" pos:column="44">(<argument><expr><literal type="string" pos:line="13" pos:column="45">"Resolving deltas"<pos:position pos:line="13" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr></argument>,
					  <argument><expr><name pos:line="14" pos:column="43">nr_ref_deltas<pos:position pos:line="14" pos:column="56"/></name> <operator pos:line="14" pos:column="57">+<pos:position pos:line="14" pos:column="58"/></operator> <name pos:line="14" pos:column="59">nr_ofs_deltas<pos:position pos:line="14" pos:column="72"/></name></expr></argument>)<pos:position pos:line="14" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="74"/></expr_stmt></block></then></if>

<cpp:ifndef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifndef<pos:position pos:line="16" pos:column="8"/></cpp:directive> <name pos:line="16" pos:column="9">NO_PTHREADS<pos:position pos:line="16" pos:column="20"/></name></cpp:ifndef>
	<expr_stmt><expr><name pos:line="17" pos:column="9">nr_dispatched<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <literal type="number" pos:line="17" pos:column="25">0<pos:position pos:line="17" pos:column="26"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">nr_threads<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">&gt;<pos:position pos:line="18" pos:column="28"/></operator> <literal type="number" pos:line="18" pos:column="26">1<pos:position pos:line="18" pos:column="27"/></literal> <operator pos:line="18" pos:column="28">||<pos:position pos:line="18" pos:column="30"/></operator> <call><name pos:line="18" pos:column="31">getenv<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><literal type="string" pos:line="18" pos:column="38">"GIT_FORCE_THREADS"<pos:position pos:line="18" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="59"/></condition><then pos:line="18" pos:column="59"> <block pos:line="18" pos:column="60">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">init_thread<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">()<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
		<for pos:line="20" pos:column="17">for <control pos:line="20" pos:column="21">(<init><expr><name pos:line="20" pos:column="22">i<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="26">0<pos:position pos:line="20" pos:column="27"/></literal></expr>;<pos:position pos:line="20" pos:column="28"/></init> <condition><expr><name pos:line="20" pos:column="29">i<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">&lt;<pos:position pos:line="20" pos:column="35"/></operator> <name pos:line="20" pos:column="33">nr_threads<pos:position pos:line="20" pos:column="43"/></name></expr>;<pos:position pos:line="20" pos:column="44"/></condition> <incr><expr><name pos:line="20" pos:column="45">i<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">++<pos:position pos:line="20" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="49"/></control> <block pos:line="20" pos:column="50">{
			<decl_stmt><decl><type><name pos:line="21" pos:column="25">int<pos:position pos:line="21" pos:column="28"/></name></type> <name pos:line="21" pos:column="29">ret<pos:position pos:line="21" pos:column="32"/></name> <init pos:line="21" pos:column="33">= <expr><call><name pos:line="21" pos:column="35">pthread_create<pos:position pos:line="21" pos:column="49"/></name><argument_list pos:line="21" pos:column="49">(<argument><expr><operator pos:line="21" pos:column="50">&amp;<pos:position pos:line="21" pos:column="55"/></operator><name><name pos:line="21" pos:column="51">thread_data<pos:position pos:line="21" pos:column="62"/></name><index pos:line="21" pos:column="62">[<expr><name pos:line="21" pos:column="63">i<pos:position pos:line="21" pos:column="64"/></name></expr>]<pos:position pos:line="21" pos:column="65"/></index></name><operator pos:line="21" pos:column="65">.<pos:position pos:line="21" pos:column="66"/></operator><name pos:line="21" pos:column="66">thread<pos:position pos:line="21" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="74">NULL<pos:position pos:line="21" pos:column="78"/></name></expr></argument>,
						 <argument><expr><name pos:line="22" pos:column="50">threaded_second_pass<pos:position pos:line="22" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="72">thread_data<pos:position pos:line="22" pos:column="83"/></name> <operator pos:line="22" pos:column="84">+<pos:position pos:line="22" pos:column="85"/></operator> <name pos:line="22" pos:column="86">i<pos:position pos:line="22" pos:column="87"/></name></expr></argument>)<pos:position pos:line="22" pos:column="88"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="89"/></decl_stmt>
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><name pos:line="23" pos:column="29">ret<pos:position pos:line="23" pos:column="32"/></name></expr>)<pos:position pos:line="23" pos:column="33"/></condition><then pos:line="23" pos:column="33">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="33">die<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><call><name pos:line="24" pos:column="37">_<pos:position pos:line="24" pos:column="38"/></name><argument_list pos:line="24" pos:column="38">(<argument><expr><literal type="string" pos:line="24" pos:column="39">"unable to create thread: %s"<pos:position pos:line="24" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr></argument>,
				    <argument><expr><call><name pos:line="25" pos:column="37">strerror<pos:position pos:line="25" pos:column="45"/></name><argument_list pos:line="25" pos:column="45">(<argument><expr><name pos:line="25" pos:column="46">ret<pos:position pos:line="25" pos:column="49"/></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt></block></then></if>
		}<pos:position pos:line="26" pos:column="18"/></block></for>
		<for pos:line="27" pos:column="17">for <control pos:line="27" pos:column="21">(<init><expr><name pos:line="27" pos:column="22">i<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <literal type="number" pos:line="27" pos:column="26">0<pos:position pos:line="27" pos:column="27"/></literal></expr>;<pos:position pos:line="27" pos:column="28"/></init> <condition><expr><name pos:line="27" pos:column="29">i<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">&lt;<pos:position pos:line="27" pos:column="35"/></operator> <name pos:line="27" pos:column="33">nr_threads<pos:position pos:line="27" pos:column="43"/></name></expr>;<pos:position pos:line="27" pos:column="44"/></condition> <incr><expr><name pos:line="27" pos:column="45">i<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">++<pos:position pos:line="27" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="49"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">pthread_join<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><name><name pos:line="28" pos:column="38">thread_data<pos:position pos:line="28" pos:column="49"/></name><index pos:line="28" pos:column="49">[<expr><name pos:line="28" pos:column="50">i<pos:position pos:line="28" pos:column="51"/></name></expr>]<pos:position pos:line="28" pos:column="52"/></index></name><operator pos:line="28" pos:column="52">.<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="53">thread<pos:position pos:line="28" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="61">NULL<pos:position pos:line="28" pos:column="65"/></name></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="67"/></expr_stmt></block></for>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">cleanup_thread<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">()<pos:position pos:line="29" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
		<return pos:line="30" pos:column="17">return;<pos:position pos:line="30" pos:column="24"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>

	<for pos:line="34" pos:column="9">for <control pos:line="34" pos:column="13">(<init><expr><name pos:line="34" pos:column="14">i<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <literal type="number" pos:line="34" pos:column="18">0<pos:position pos:line="34" pos:column="19"/></literal></expr>;<pos:position pos:line="34" pos:column="20"/></init> <condition><expr><name pos:line="34" pos:column="21">i<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">&lt;<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="25">nr_objects<pos:position pos:line="34" pos:column="35"/></name></expr>;<pos:position pos:line="34" pos:column="36"/></condition> <incr><expr><name pos:line="34" pos:column="37">i<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">++<pos:position pos:line="34" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="41"/></control> <block pos:line="34" pos:column="42">{
		<decl_stmt><decl><type><name><name pos:line="35" pos:column="17">struct<pos:position pos:line="35" pos:column="23"/></name> <name pos:line="35" pos:column="24">object_entry<pos:position pos:line="35" pos:column="36"/></name></name> <modifier pos:line="35" pos:column="37">*<pos:position pos:line="35" pos:column="38"/></modifier></type><name pos:line="35" pos:column="38">obj<pos:position pos:line="35" pos:column="41"/></name> <init pos:line="35" pos:column="42">= <expr><operator pos:line="35" pos:column="44">&amp;<pos:position pos:line="35" pos:column="49"/></operator><name><name pos:line="35" pos:column="45">objects<pos:position pos:line="35" pos:column="52"/></name><index pos:line="35" pos:column="52">[<expr><name pos:line="35" pos:column="53">i<pos:position pos:line="35" pos:column="54"/></name></expr>]<pos:position pos:line="35" pos:column="55"/></index></name></expr></init></decl>;<pos:position pos:line="35" pos:column="56"/></decl_stmt>

		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><call><name pos:line="37" pos:column="21">is_delta_type<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><name><name pos:line="37" pos:column="35">obj<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">-&gt;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="40">type<pos:position pos:line="37" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="46"/></condition><then pos:line="37" pos:column="46">
			<block type="pseudo"><continue pos:line="38" pos:column="25">continue;<pos:position pos:line="38" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">resolve_base<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">obj<pos:position pos:line="39" pos:column="33"/></name></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">display_progress<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">progress<pos:position pos:line="40" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="44">nr_resolved_deltas<pos:position pos:line="40" pos:column="62"/></name></expr></argument>)<pos:position pos:line="40" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="64"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></for>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

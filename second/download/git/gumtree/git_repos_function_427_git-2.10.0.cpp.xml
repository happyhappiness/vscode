<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_427_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">remove_credential<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">string_list<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">fns<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="62">struct<pos:position pos:line="1" pos:column="68"/></name> <name pos:line="1" pos:column="69">credential<pos:position pos:line="1" pos:column="79"/></name></name> <modifier pos:line="1" pos:column="80">*<pos:position pos:line="1" pos:column="81"/></modifier></type><name pos:line="1" pos:column="81">c<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="83"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">string_list_item<pos:position pos:line="3" pos:column="32"/></name></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">fn<pos:position pos:line="3" pos:column="36"/></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/*
	 * Sanity check that we actually have something to match
	 * against. The input we get is a restrictive pattern,
	 * so technically a blank credential means "erase everything".
	 * But it is too easy to accidentally send this, since it is equivalent
	 * to empty input. So explicitly disallow it, and require that the
	 * pattern have some actual content to match.
	 */</comment>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name><name pos:line="13" pos:column="14">c<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">protocol<pos:position pos:line="13" pos:column="25"/></name></name> <operator pos:line="13" pos:column="26">&amp;&amp;<pos:position pos:line="13" pos:column="36"/></operator> <operator pos:line="13" pos:column="29">!<pos:position pos:line="13" pos:column="30"/></operator><name><name pos:line="13" pos:column="30">c<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">host<pos:position pos:line="13" pos:column="37"/></name></name> <operator pos:line="13" pos:column="38">&amp;&amp;<pos:position pos:line="13" pos:column="48"/></operator> <operator pos:line="13" pos:column="41">!<pos:position pos:line="13" pos:column="42"/></operator><name><name pos:line="13" pos:column="42">c<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">-&gt;<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="45">path<pos:position pos:line="13" pos:column="49"/></name></name> <operator pos:line="13" pos:column="50">&amp;&amp;<pos:position pos:line="13" pos:column="60"/></operator> <operator pos:line="13" pos:column="53">!<pos:position pos:line="13" pos:column="54"/></operator><name><name pos:line="13" pos:column="54">c<pos:position pos:line="13" pos:column="55"/></name><operator pos:line="13" pos:column="55">-&gt;<pos:position pos:line="13" pos:column="60"/></operator><name pos:line="13" pos:column="57">username<pos:position pos:line="13" pos:column="65"/></name></name></expr>)<pos:position pos:line="13" pos:column="66"/></condition><then pos:line="13" pos:column="66">
		<block type="pseudo"><return pos:line="14" pos:column="17">return;<pos:position pos:line="14" pos:column="24"/></return></block></then></if>
	<macro><name pos:line="15" pos:column="9">for_each_string_list_item<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument pos:line="15" pos:column="35">fn<pos:position pos:line="15" pos:column="37"/></argument>, <argument pos:line="15" pos:column="39">fns<pos:position pos:line="15" pos:column="42"/></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></macro>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><call><name pos:line="16" pos:column="22">access<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name><name pos:line="16" pos:column="29">fn<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">string<pos:position pos:line="16" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="41">F_OK<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="47"/></condition><then pos:line="16" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">rewrite_credential_file<pos:position pos:line="17" pos:column="48"/></name><argument_list pos:line="17" pos:column="48">(<argument><expr><name><name pos:line="17" pos:column="49">fn<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">-&gt;<pos:position pos:line="17" pos:column="56"/></operator><name pos:line="17" pos:column="53">string<pos:position pos:line="17" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="61">c<pos:position pos:line="17" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="64">NULL<pos:position pos:line="17" pos:column="68"/></name></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="70"/></expr_stmt></block></then></if>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3277_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">line_log_data_insert<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">line_log_data<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier><modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">list<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">path<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="3" pos:column="34">long<pos:position pos:line="3" pos:column="38"/></name></type> <name pos:line="3" pos:column="39">begin<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="46">long<pos:position pos:line="3" pos:column="50"/></name></type> <name pos:line="3" pos:column="51">end<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="55"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">line_log_data<pos:position pos:line="5" pos:column="29"/></name></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">ip<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">line_log_data<pos:position pos:line="6" pos:column="29"/></name></name> <modifier pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></modifier></type><name pos:line="6" pos:column="31">p<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><call><name pos:line="6" pos:column="35">search_line_log_data<pos:position pos:line="6" pos:column="55"/></name><argument_list pos:line="6" pos:column="55">(<argument><expr><operator pos:line="6" pos:column="56">*<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="57">list<pos:position pos:line="6" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="63">path<pos:position pos:line="6" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="69">&amp;<pos:position pos:line="6" pos:column="74"/></operator><name pos:line="6" pos:column="70">ip<pos:position pos:line="6" pos:column="72"/></name></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="74"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">p<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition><then pos:line="8" pos:column="15"> <block pos:line="8" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">range_set_append_unsafe<pos:position pos:line="9" pos:column="40"/></name><argument_list pos:line="9" pos:column="40">(<argument><expr><operator pos:line="9" pos:column="41">&amp;<pos:position pos:line="9" pos:column="46"/></operator><name><name pos:line="9" pos:column="42">p<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">-&gt;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="45">ranges<pos:position pos:line="9" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="53">begin<pos:position pos:line="9" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="60">end<pos:position pos:line="9" pos:column="63"/></name></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">free<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">path<pos:position pos:line="10" pos:column="26"/></name></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>
		<return pos:line="11" pos:column="17">return;<pos:position pos:line="11" pos:column="24"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">p<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <call><name pos:line="14" pos:column="13">xcalloc<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><literal type="number" pos:line="14" pos:column="21">1<pos:position pos:line="14" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="24">sizeof<argument_list pos:line="14" pos:column="30">(<argument><expr pos:line="14" pos:column="31">struct <name pos:line="14" pos:column="38">line_log_data<pos:position pos:line="14" pos:column="51"/></name></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">p<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">path<pos:position pos:line="15" pos:column="16"/></name></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">path<pos:position pos:line="15" pos:column="23"/></name></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">range_set_append<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator><name><name pos:line="16" pos:column="27">p<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">ranges<pos:position pos:line="16" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">begin<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">end<pos:position pos:line="16" pos:column="48"/></name></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">ip<pos:position pos:line="17" pos:column="15"/></name></expr>)<pos:position pos:line="17" pos:column="16"/></condition><then pos:line="17" pos:column="16"> <block pos:line="17" pos:column="17">{
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">p<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">next<pos:position pos:line="18" pos:column="24"/></name></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <name><name pos:line="18" pos:column="27">ip<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">next<pos:position pos:line="18" pos:column="35"/></name></name></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">ip<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">next<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="28">p<pos:position pos:line="19" pos:column="29"/></name></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then> <else pos:line="20" pos:column="11">else <block pos:line="20" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">p<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">next<pos:position pos:line="21" pos:column="24"/></name></name> <operator pos:line="21" pos:column="25">=<pos:position pos:line="21" pos:column="26"/></operator> <operator pos:line="21" pos:column="27">*<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">list<pos:position pos:line="21" pos:column="32"/></name></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">list<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">p<pos:position pos:line="22" pos:column="26"/></name></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></else></if>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

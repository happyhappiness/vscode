<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1500_git-2.3.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">add_to_include_set<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name><name pos:line="2" pos:column="20">struct<pos:position pos:line="2" pos:column="26"/></name> <name pos:line="2" pos:column="27">bitmap<pos:position pos:line="2" pos:column="33"/></name></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">base<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="41">struct<pos:position pos:line="2" pos:column="47"/></name> <name pos:line="2" pos:column="48">commit<pos:position pos:line="2" pos:column="54"/></name></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">commit<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">khiter_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">hash_pos<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">uint32_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">bitmap_pos<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><call><name pos:line="5" pos:column="31">find_object_pos<pos:position pos:line="5" pos:column="46"/></name><argument_list pos:line="5" pos:column="46">(<argument><expr><name><name pos:line="5" pos:column="47">commit<pos:position pos:line="5" pos:column="53"/></name><operator pos:line="5" pos:column="53">-&gt;<pos:position pos:line="5" pos:column="58"/></operator><name pos:line="5" pos:column="55">object<pos:position pos:line="5" pos:column="61"/></name><operator pos:line="5" pos:column="61">.<pos:position pos:line="5" pos:column="62"/></operator><name pos:line="5" pos:column="62">sha1<pos:position pos:line="5" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="68"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">bitmap_get<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">base<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="30">bitmap_pos<pos:position pos:line="7" pos:column="40"/></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="42"/></condition><then pos:line="7" pos:column="42">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">hash_pos<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <call><name pos:line="10" pos:column="20">kh_get_sha1<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name><name pos:line="10" pos:column="32">writer<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">.<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="39">bitmaps<pos:position pos:line="10" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="48">commit<pos:position pos:line="10" pos:column="54"/></name><operator pos:line="10" pos:column="54">-&gt;<pos:position pos:line="10" pos:column="59"/></operator><name pos:line="10" pos:column="56">object<pos:position pos:line="10" pos:column="62"/></name><operator pos:line="10" pos:column="62">.<pos:position pos:line="10" pos:column="63"/></operator><name pos:line="10" pos:column="63">sha1<pos:position pos:line="10" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="69"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">hash_pos<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">&lt;<pos:position pos:line="11" pos:column="26"/></operator> <call><name pos:line="11" pos:column="24">kh_end<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name><name pos:line="11" pos:column="31">writer<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">.<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="38">bitmaps<pos:position pos:line="11" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="47"/></condition><then pos:line="11" pos:column="47"> <block pos:line="11" pos:column="48">{
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">bitmapped_commit<pos:position pos:line="12" pos:column="40"/></name></name> <modifier pos:line="12" pos:column="41">*<pos:position pos:line="12" pos:column="42"/></modifier></type><name pos:line="12" pos:column="42">bc<pos:position pos:line="12" pos:column="44"/></name> <init pos:line="12" pos:column="45">= <expr><call><name pos:line="12" pos:column="47">kh_value<pos:position pos:line="12" pos:column="55"/></name><argument_list pos:line="12" pos:column="55">(<argument><expr><name><name pos:line="12" pos:column="56">writer<pos:position pos:line="12" pos:column="62"/></name><operator pos:line="12" pos:column="62">.<pos:position pos:line="12" pos:column="63"/></operator><name pos:line="12" pos:column="63">bitmaps<pos:position pos:line="12" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="72">hash_pos<pos:position pos:line="12" pos:column="80"/></name></expr></argument>)<pos:position pos:line="12" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="82"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">bitmap_or_ewah<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">base<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="38">bc<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">-&gt;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="42">bitmap<pos:position pos:line="13" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">bitmap_set<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">base<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="26">bitmap_pos<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
	<return pos:line="18" pos:column="9">return <expr><literal type="number" pos:line="18" pos:column="16">1<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

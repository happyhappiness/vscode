<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2579_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">strbuf<pos:position pos:line="1" pos:column="21"/></name></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">decode_b_segment<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name><name pos:line="1" pos:column="46">struct<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">strbuf<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">b_seg<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/* Decode in..ep, possibly in-place to ot */</comment>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">c<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">pos<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="25">acc<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><literal type="number" pos:line="4" pos:column="31">0<pos:position pos:line="4" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">in<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><name><name pos:line="5" pos:column="26">b_seg<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">buf<pos:position pos:line="5" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">out<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><call><name pos:line="6" pos:column="30">xmalloc<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><sizeof pos:line="6" pos:column="38">sizeof<argument_list pos:line="6" pos:column="44">(<argument><expr pos:line="6" pos:column="45">struct <name pos:line="6" pos:column="52">strbuf<pos:position pos:line="6" pos:column="58"/></name></expr></argument>)<pos:position pos:line="6" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="61"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">strbuf_init<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">out<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="26">b_seg<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">len<pos:position pos:line="7" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>

	<while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><operator pos:line="9" pos:column="16">(<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">c<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <operator pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">in<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">++<pos:position pos:line="9" pos:column="26"/></operator><operator pos:line="9" pos:column="26">)<pos:position pos:line="9" pos:column="27"/></operator> <operator pos:line="9" pos:column="28">!=<pos:position pos:line="9" pos:column="30"/></operator> <literal type="number" pos:line="9" pos:column="31">0<pos:position pos:line="9" pos:column="32"/></literal></expr>)<pos:position pos:line="9" pos:column="33"/></condition> <block pos:line="9" pos:column="34">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">c<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">==<pos:position pos:line="10" pos:column="25"/></operator> <literal type="char" pos:line="10" pos:column="26">'+'<pos:position pos:line="10" pos:column="29"/></literal></expr>)<pos:position pos:line="10" pos:column="30"/></condition><then pos:line="10" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">c<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">=<pos:position pos:line="11" pos:column="28"/></operator> <literal type="number" pos:line="11" pos:column="29">62<pos:position pos:line="11" pos:column="31"/></literal></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt></block></then>
		<elseif pos:line="12" pos:column="17">else <if pos:line="12" pos:column="22">if <condition pos:line="12" pos:column="25">(<expr><name pos:line="12" pos:column="26">c<pos:position pos:line="12" pos:column="27"/></name> <operator pos:line="12" pos:column="28">==<pos:position pos:line="12" pos:column="30"/></operator> <literal type="char" pos:line="12" pos:column="31">'/'<pos:position pos:line="12" pos:column="34"/></literal></expr>)<pos:position pos:line="12" pos:column="35"/></condition><then pos:line="12" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">c<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">=<pos:position pos:line="13" pos:column="28"/></operator> <literal type="number" pos:line="13" pos:column="29">63<pos:position pos:line="13" pos:column="31"/></literal></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="14" pos:column="17">else <if pos:line="14" pos:column="22">if <condition pos:line="14" pos:column="25">(<expr><literal type="char" pos:line="14" pos:column="26">'A'<pos:position pos:line="14" pos:column="29"/></literal> <operator pos:line="14" pos:column="30">&lt;=<pos:position pos:line="14" pos:column="35"/></operator> <name pos:line="14" pos:column="33">c<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">&amp;&amp;<pos:position pos:line="14" pos:column="45"/></operator> <name pos:line="14" pos:column="38">c<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">&lt;=<pos:position pos:line="14" pos:column="45"/></operator> <literal type="char" pos:line="14" pos:column="43">'Z'<pos:position pos:line="14" pos:column="46"/></literal></expr>)<pos:position pos:line="14" pos:column="47"/></condition><then pos:line="14" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">c<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">-=<pos:position pos:line="15" pos:column="29"/></operator> <literal type="char" pos:line="15" pos:column="30">'A'<pos:position pos:line="15" pos:column="33"/></literal></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="16" pos:column="17">else <if pos:line="16" pos:column="22">if <condition pos:line="16" pos:column="25">(<expr><literal type="char" pos:line="16" pos:column="26">'a'<pos:position pos:line="16" pos:column="29"/></literal> <operator pos:line="16" pos:column="30">&lt;=<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="33">c<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">&amp;&amp;<pos:position pos:line="16" pos:column="45"/></operator> <name pos:line="16" pos:column="38">c<pos:position pos:line="16" pos:column="39"/></name> <operator pos:line="16" pos:column="40">&lt;=<pos:position pos:line="16" pos:column="45"/></operator> <literal type="char" pos:line="16" pos:column="43">'z'<pos:position pos:line="16" pos:column="46"/></literal></expr>)<pos:position pos:line="16" pos:column="47"/></condition><then pos:line="16" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="25">c<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">-=<pos:position pos:line="17" pos:column="29"/></operator> <literal type="char" pos:line="17" pos:column="30">'a'<pos:position pos:line="17" pos:column="33"/></literal> <operator pos:line="17" pos:column="34">-<pos:position pos:line="17" pos:column="35"/></operator> <literal type="number" pos:line="17" pos:column="36">26<pos:position pos:line="17" pos:column="38"/></literal></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="18" pos:column="17">else <if pos:line="18" pos:column="22">if <condition pos:line="18" pos:column="25">(<expr><literal type="char" pos:line="18" pos:column="26">'0'<pos:position pos:line="18" pos:column="29"/></literal> <operator pos:line="18" pos:column="30">&lt;=<pos:position pos:line="18" pos:column="35"/></operator> <name pos:line="18" pos:column="33">c<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">&amp;&amp;<pos:position pos:line="18" pos:column="45"/></operator> <name pos:line="18" pos:column="38">c<pos:position pos:line="18" pos:column="39"/></name> <operator pos:line="18" pos:column="40">&lt;=<pos:position pos:line="18" pos:column="45"/></operator> <literal type="char" pos:line="18" pos:column="43">'9'<pos:position pos:line="18" pos:column="46"/></literal></expr>)<pos:position pos:line="18" pos:column="47"/></condition><then pos:line="18" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="25">c<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">-=<pos:position pos:line="19" pos:column="29"/></operator> <literal type="char" pos:line="19" pos:column="30">'0'<pos:position pos:line="19" pos:column="33"/></literal> <operator pos:line="19" pos:column="34">-<pos:position pos:line="19" pos:column="35"/></operator> <literal type="number" pos:line="19" pos:column="36">52<pos:position pos:line="19" pos:column="38"/></literal></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt></block></then></if></elseif>
		<else pos:line="20" pos:column="17">else
			<block type="pseudo"><continue pos:line="21" pos:column="25">continue;<pos:position pos:line="21" pos:column="34"/></continue></block></else></if> <comment type="block" pos:line="21" pos:column="35">/* garbage */</comment>
		<switch pos:line="22" pos:column="17">switch <condition pos:line="22" pos:column="24">(<expr><name pos:line="22" pos:column="25">pos<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">++<pos:position pos:line="22" pos:column="30"/></operator></expr>)<pos:position pos:line="22" pos:column="31"/></condition> <block pos:line="22" pos:column="32">{
		<case pos:line="23" pos:column="17">case <expr><literal type="number" pos:line="23" pos:column="22">0<pos:position pos:line="23" pos:column="23"/></literal></expr>:<pos:position pos:line="23" pos:column="24"/></case>
			<expr_stmt><expr><name pos:line="24" pos:column="25">acc<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">=<pos:position pos:line="24" pos:column="30"/></operator> <operator pos:line="24" pos:column="31">(<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="32">c<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">&lt;&lt;<pos:position pos:line="24" pos:column="42"/></operator> <literal type="number" pos:line="24" pos:column="37">2<pos:position pos:line="24" pos:column="38"/></literal><operator pos:line="24" pos:column="38">)<pos:position pos:line="24" pos:column="39"/></operator></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>
			<break pos:line="25" pos:column="25">break;<pos:position pos:line="25" pos:column="31"/></break>
		<case pos:line="26" pos:column="17">case <expr><literal type="number" pos:line="26" pos:column="22">1<pos:position pos:line="26" pos:column="23"/></literal></expr>:<pos:position pos:line="26" pos:column="24"/></case>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">strbuf_addch<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name pos:line="27" pos:column="38">out<pos:position pos:line="27" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="43">(<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="44">acc<pos:position pos:line="27" pos:column="47"/></name> <operator pos:line="27" pos:column="48">|<pos:position pos:line="27" pos:column="49"/></operator> <operator pos:line="27" pos:column="50">(<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="51">c<pos:position pos:line="27" pos:column="52"/></name> <operator pos:line="27" pos:column="53">&gt;&gt;<pos:position pos:line="27" pos:column="58"/></operator> <literal type="number" pos:line="27" pos:column="56">4<pos:position pos:line="27" pos:column="57"/></literal><operator pos:line="27" pos:column="57">)<pos:position pos:line="27" pos:column="58"/></operator><operator pos:line="27" pos:column="58">)<pos:position pos:line="27" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><name pos:line="28" pos:column="25">acc<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <operator pos:line="28" pos:column="31">(<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="32">c<pos:position pos:line="28" pos:column="33"/></name> <operator pos:line="28" pos:column="34">&amp;<pos:position pos:line="28" pos:column="39"/></operator> <literal type="number" pos:line="28" pos:column="36">15<pos:position pos:line="28" pos:column="38"/></literal><operator pos:line="28" pos:column="38">)<pos:position pos:line="28" pos:column="39"/></operator> <operator pos:line="28" pos:column="40">&lt;&lt;<pos:position pos:line="28" pos:column="48"/></operator> <literal type="number" pos:line="28" pos:column="43">4<pos:position pos:line="28" pos:column="44"/></literal></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
			<break pos:line="29" pos:column="25">break;<pos:position pos:line="29" pos:column="31"/></break>
		<case pos:line="30" pos:column="17">case <expr><literal type="number" pos:line="30" pos:column="22">2<pos:position pos:line="30" pos:column="23"/></literal></expr>:<pos:position pos:line="30" pos:column="24"/></case>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">strbuf_addch<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">out<pos:position pos:line="31" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="43">(<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="44">acc<pos:position pos:line="31" pos:column="47"/></name> <operator pos:line="31" pos:column="48">|<pos:position pos:line="31" pos:column="49"/></operator> <operator pos:line="31" pos:column="50">(<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="51">c<pos:position pos:line="31" pos:column="52"/></name> <operator pos:line="31" pos:column="53">&gt;&gt;<pos:position pos:line="31" pos:column="58"/></operator> <literal type="number" pos:line="31" pos:column="56">2<pos:position pos:line="31" pos:column="57"/></literal><operator pos:line="31" pos:column="57">)<pos:position pos:line="31" pos:column="58"/></operator><operator pos:line="31" pos:column="58">)<pos:position pos:line="31" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><name pos:line="32" pos:column="25">acc<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <operator pos:line="32" pos:column="31">(<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="32">c<pos:position pos:line="32" pos:column="33"/></name> <operator pos:line="32" pos:column="34">&amp;<pos:position pos:line="32" pos:column="39"/></operator> <literal type="number" pos:line="32" pos:column="36">3<pos:position pos:line="32" pos:column="37"/></literal><operator pos:line="32" pos:column="37">)<pos:position pos:line="32" pos:column="38"/></operator> <operator pos:line="32" pos:column="39">&lt;&lt;<pos:position pos:line="32" pos:column="47"/></operator> <literal type="number" pos:line="32" pos:column="42">6<pos:position pos:line="32" pos:column="43"/></literal></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>
			<break pos:line="33" pos:column="25">break;<pos:position pos:line="33" pos:column="31"/></break>
		<case pos:line="34" pos:column="17">case <expr><literal type="number" pos:line="34" pos:column="22">3<pos:position pos:line="34" pos:column="23"/></literal></expr>:<pos:position pos:line="34" pos:column="24"/></case>
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">strbuf_addch<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">out<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="43">(<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="44">acc<pos:position pos:line="35" pos:column="47"/></name> <operator pos:line="35" pos:column="48">|<pos:position pos:line="35" pos:column="49"/></operator> <name pos:line="35" pos:column="50">c<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">)<pos:position pos:line="35" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><name pos:line="36" pos:column="25">acc<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <name pos:line="36" pos:column="31">pos<pos:position pos:line="36" pos:column="34"/></name> <operator pos:line="36" pos:column="35">=<pos:position pos:line="36" pos:column="36"/></operator> <literal type="number" pos:line="36" pos:column="37">0<pos:position pos:line="36" pos:column="38"/></literal></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>
			<break pos:line="37" pos:column="25">break;<pos:position pos:line="37" pos:column="31"/></break>
		}<pos:position pos:line="38" pos:column="18"/></block></switch>
	}<pos:position pos:line="39" pos:column="10"/></block></while>
	<return pos:line="40" pos:column="9">return <expr><name pos:line="40" pos:column="16">out<pos:position pos:line="40" pos:column="19"/></name></expr>;<pos:position pos:line="40" pos:column="20"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_475_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">blame_coalesce<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">blame_scoreboard<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">sb<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">blame_entry<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">ent<pos:position pos:line="3" pos:column="32"/></name></decl>, <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="35">next<pos:position pos:line="3" pos:column="39"/></name></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">ent<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">=<pos:position pos:line="5" pos:column="19"/></operator> <name><name pos:line="5" pos:column="20">sb<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">ent<pos:position pos:line="5" pos:column="27"/></name></name></expr>;<pos:position pos:line="5" pos:column="28"/></init> <condition><expr><name pos:line="5" pos:column="29">ent<pos:position pos:line="5" pos:column="32"/></name> <operator pos:line="5" pos:column="33">&amp;&amp;<pos:position pos:line="5" pos:column="43"/></operator> <operator pos:line="5" pos:column="36">(<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="37">next<pos:position pos:line="5" pos:column="41"/></name> <operator pos:line="5" pos:column="42">=<pos:position pos:line="5" pos:column="43"/></operator> <name><name pos:line="5" pos:column="44">ent<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">-&gt;<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="49">next<pos:position pos:line="5" pos:column="53"/></name></name><operator pos:line="5" pos:column="53">)<pos:position pos:line="5" pos:column="54"/></operator></expr>;<pos:position pos:line="5" pos:column="55"/></condition> <incr><expr><name pos:line="5" pos:column="56">ent<pos:position pos:line="5" pos:column="59"/></name> <operator pos:line="5" pos:column="60">=<pos:position pos:line="5" pos:column="61"/></operator> <name pos:line="5" pos:column="62">next<pos:position pos:line="5" pos:column="66"/></name></expr></incr>)<pos:position pos:line="5" pos:column="67"/></control> <block pos:line="5" pos:column="68">{
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><name><name pos:line="6" pos:column="21">ent<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">suspect<pos:position pos:line="6" pos:column="33"/></name></name> <operator pos:line="6" pos:column="34">==<pos:position pos:line="6" pos:column="36"/></operator> <name><name pos:line="6" pos:column="37">next<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">-&gt;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="43">suspect<pos:position pos:line="6" pos:column="50"/></name></name> <operator pos:line="6" pos:column="51">&amp;&amp;<pos:position pos:line="6" pos:column="61"/></operator>
		    <name><name pos:line="7" pos:column="21">ent<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">-&gt;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="26">s_lno<pos:position pos:line="7" pos:column="31"/></name></name> <operator pos:line="7" pos:column="32">+<pos:position pos:line="7" pos:column="33"/></operator> <name><name pos:line="7" pos:column="34">ent<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">num_lines<pos:position pos:line="7" pos:column="48"/></name></name> <operator pos:line="7" pos:column="49">==<pos:position pos:line="7" pos:column="51"/></operator> <name><name pos:line="7" pos:column="52">next<pos:position pos:line="7" pos:column="56"/></name><operator pos:line="7" pos:column="56">-&gt;<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="58">s_lno<pos:position pos:line="7" pos:column="63"/></name></name></expr>)<pos:position pos:line="7" pos:column="64"/></condition><then pos:line="7" pos:column="64"> <block pos:line="7" pos:column="65">{
			<expr_stmt><expr><name><name pos:line="8" pos:column="25">ent<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">num_lines<pos:position pos:line="8" pos:column="39"/></name></name> <operator pos:line="8" pos:column="40">+=<pos:position pos:line="8" pos:column="42"/></operator> <name><name pos:line="8" pos:column="43">next<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">-&gt;<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="49">num_lines<pos:position pos:line="8" pos:column="58"/></name></name></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="9" pos:column="25">ent<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">next<pos:position pos:line="9" pos:column="34"/></name></name> <operator pos:line="9" pos:column="35">=<pos:position pos:line="9" pos:column="36"/></operator> <name><name pos:line="9" pos:column="37">next<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">next<pos:position pos:line="9" pos:column="47"/></name></name></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="10" pos:column="25">blame_origin_decref<pos:position pos:line="10" pos:column="44"/></name><argument_list pos:line="10" pos:column="44">(<argument><expr><name><name pos:line="10" pos:column="45">next<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">-&gt;<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="51">suspect<pos:position pos:line="10" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">free<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">next<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="12" pos:column="25">ent<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">score<pos:position pos:line="12" pos:column="35"/></name></name> <operator pos:line="12" pos:column="36">=<pos:position pos:line="12" pos:column="37"/></operator> <literal type="number" pos:line="12" pos:column="38">0<pos:position pos:line="12" pos:column="39"/></literal></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="13" pos:column="25">next<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">=<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">ent<pos:position pos:line="13" pos:column="35"/></name></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt> <comment type="block" pos:line="13" pos:column="37">/* again */</comment>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if>
	}<pos:position pos:line="15" pos:column="10"/></block></for>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">sb<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">debug<pos:position pos:line="17" pos:column="22"/></name></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23"> <comment type="block" pos:line="17" pos:column="24">/* sanity */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">sanity_check_refcnt<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">sb<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt></block></then></if>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

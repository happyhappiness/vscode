<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4567_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_send_pack<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">argc<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">argv<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">prefix<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">nr_refspecs<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><literal type="number" pos:line="3" pos:column="30">0<pos:position pos:line="3" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier><modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">refspecs<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name pos:line="4" pos:column="33">NULL<pos:position pos:line="4" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">remote_name<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><name pos:line="5" pos:column="35">NULL<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">remote<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">remote<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><name pos:line="6" pos:column="33">NULL<pos:position pos:line="6" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">dest<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name pos:line="7" pos:column="28">NULL<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name><name pos:line="8" pos:column="13">fd<pos:position pos:line="8" pos:column="15"/></name><index pos:line="8" pos:column="15">[<expr><literal type="number" pos:line="8" pos:column="16">2<pos:position pos:line="8" pos:column="17"/></literal></expr>]<pos:position pos:line="8" pos:column="18"/></index></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">child_process<pos:position pos:line="9" pos:column="29"/></name></name> <modifier pos:line="9" pos:column="30">*<pos:position pos:line="9" pos:column="31"/></modifier></type><name pos:line="9" pos:column="31">conn<pos:position pos:line="9" pos:column="35"/></name></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">sha1_array<pos:position pos:line="10" pos:column="26"/></name></name></type> <name pos:line="10" pos:column="27">extra_have<pos:position pos:line="10" pos:column="37"/></name> <init pos:line="10" pos:column="38">= <expr><name pos:line="10" pos:column="40">SHA1_ARRAY_INIT<pos:position pos:line="10" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">sha1_array<pos:position pos:line="11" pos:column="26"/></name></name></type> <name pos:line="11" pos:column="27">shallow<pos:position pos:line="11" pos:column="34"/></name> <init pos:line="11" pos:column="35">= <expr><name pos:line="11" pos:column="37">SHA1_ARRAY_INIT<pos:position pos:line="11" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">ref<pos:position pos:line="12" pos:column="19"/></name></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">remote_refs<pos:position pos:line="12" pos:column="32"/></name></decl>, <modifier pos:line="12" pos:column="34">*<pos:position pos:line="12" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="35">local_refs<pos:position pos:line="12" pos:column="45"/></name></decl>;<pos:position pos:line="12" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">ret<pos:position pos:line="13" pos:column="16"/></name></decl>;<pos:position pos:line="13" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">helper_status<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><literal type="number" pos:line="14" pos:column="29">0<pos:position pos:line="14" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">send_all<pos:position pos:line="15" pos:column="21"/></name> <init pos:line="15" pos:column="22">= <expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="16" pos:column="9">const<pos:position pos:line="16" pos:column="14"/></specifier> <name pos:line="16" pos:column="15">char<pos:position pos:line="16" pos:column="19"/></name> <modifier pos:line="16" pos:column="20">*<pos:position pos:line="16" pos:column="21"/></modifier></type><name pos:line="16" pos:column="21">receivepack<pos:position pos:line="16" pos:column="32"/></name> <init pos:line="16" pos:column="33">= <expr><literal type="string" pos:line="16" pos:column="35">"git-receive-pack"<pos:position pos:line="16" pos:column="53"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">int<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">flags<pos:position pos:line="17" pos:column="18"/></name></decl>;<pos:position pos:line="17" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">unsigned<pos:position pos:line="18" pos:column="17"/></name> <name pos:line="18" pos:column="18">int<pos:position pos:line="18" pos:column="21"/></name></type> <name pos:line="18" pos:column="22">reject_reasons<pos:position pos:line="18" pos:column="36"/></name></decl>;<pos:position pos:line="18" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">int<pos:position pos:line="19" pos:column="12"/></name></type> <name pos:line="19" pos:column="13">progress<pos:position pos:line="19" pos:column="21"/></name> <init pos:line="19" pos:column="22">= <expr><operator pos:line="19" pos:column="24">-<pos:position pos:line="19" pos:column="25"/></operator><literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="20" pos:column="9">struct<pos:position pos:line="20" pos:column="15"/></name> <name pos:line="20" pos:column="16">push_cas_option<pos:position pos:line="20" pos:column="31"/></name></name></type> <name pos:line="20" pos:column="32">cas<pos:position pos:line="20" pos:column="35"/></name> <init pos:line="20" pos:column="36">= <expr><block pos:line="20" pos:column="38">{<expr><literal type="number" pos:line="20" pos:column="39">0<pos:position pos:line="20" pos:column="40"/></literal></expr>}<pos:position pos:line="20" pos:column="41"/></block></expr></init></decl>;<pos:position pos:line="20" pos:column="42"/></decl_stmt>

	<expr_stmt><expr><name pos:line="22" pos:column="9">argv<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">++<pos:position pos:line="22" pos:column="15"/></operator></expr>;<pos:position pos:line="22" pos:column="16"/></expr_stmt>
	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">i<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">1<pos:position pos:line="23" pos:column="19"/></literal></expr>;<pos:position pos:line="23" pos:column="20"/></init> <condition><expr><name pos:line="23" pos:column="21">i<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">&lt;<pos:position pos:line="23" pos:column="27"/></operator> <name pos:line="23" pos:column="25">argc<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></condition> <incr><expr><name pos:line="23" pos:column="31">i<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">++<pos:position pos:line="23" pos:column="34"/></operator></expr><operator pos:line="23" pos:column="34">,<pos:position pos:line="23" pos:column="35"/></operator> <expr><name pos:line="23" pos:column="36">argv<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">++<pos:position pos:line="23" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="43"/></control> <block pos:line="23" pos:column="44">{
		<decl_stmt><decl><type><specifier pos:line="24" pos:column="17">const<pos:position pos:line="24" pos:column="22"/></specifier> <name pos:line="24" pos:column="23">char<pos:position pos:line="24" pos:column="27"/></name> <modifier pos:line="24" pos:column="28">*<pos:position pos:line="24" pos:column="29"/></modifier></type><name pos:line="24" pos:column="29">arg<pos:position pos:line="24" pos:column="32"/></name> <init pos:line="24" pos:column="33">= <expr><operator pos:line="24" pos:column="35">*<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="36">argv<pos:position pos:line="24" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="41"/></decl_stmt>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">*<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">arg<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">==<pos:position pos:line="26" pos:column="28"/></operator> <literal type="char" pos:line="26" pos:column="29">'-'<pos:position pos:line="26" pos:column="32"/></literal></expr>)<pos:position pos:line="26" pos:column="33"/></condition><then pos:line="26" pos:column="33"> <block pos:line="26" pos:column="34">{
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><call><name pos:line="27" pos:column="29">starts_with<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name pos:line="27" pos:column="41">arg<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="46">"--receive-pack="<pos:position pos:line="27" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="65"/></condition><then pos:line="27" pos:column="65"> <block pos:line="27" pos:column="66">{
				<expr_stmt><expr><name pos:line="28" pos:column="33">receivepack<pos:position pos:line="28" pos:column="44"/></name> <operator pos:line="28" pos:column="45">=<pos:position pos:line="28" pos:column="46"/></operator> <name pos:line="28" pos:column="47">arg<pos:position pos:line="28" pos:column="50"/></name> <operator pos:line="28" pos:column="51">+<pos:position pos:line="28" pos:column="52"/></operator> <literal type="number" pos:line="28" pos:column="53">15<pos:position pos:line="28" pos:column="55"/></literal></expr>;<pos:position pos:line="28" pos:column="56"/></expr_stmt>
				<continue pos:line="29" pos:column="33">continue;<pos:position pos:line="29" pos:column="42"/></continue>
			}<pos:position pos:line="30" pos:column="26"/></block></then></if>
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><call><name pos:line="31" pos:column="29">starts_with<pos:position pos:line="31" pos:column="40"/></name><argument_list pos:line="31" pos:column="40">(<argument><expr><name pos:line="31" pos:column="41">arg<pos:position pos:line="31" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="46">"--exec="<pos:position pos:line="31" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="57"/></condition><then pos:line="31" pos:column="57"> <block pos:line="31" pos:column="58">{
				<expr_stmt><expr><name pos:line="32" pos:column="33">receivepack<pos:position pos:line="32" pos:column="44"/></name> <operator pos:line="32" pos:column="45">=<pos:position pos:line="32" pos:column="46"/></operator> <name pos:line="32" pos:column="47">arg<pos:position pos:line="32" pos:column="50"/></name> <operator pos:line="32" pos:column="51">+<pos:position pos:line="32" pos:column="52"/></operator> <literal type="number" pos:line="32" pos:column="53">7<pos:position pos:line="32" pos:column="54"/></literal></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt>
				<continue pos:line="33" pos:column="33">continue;<pos:position pos:line="33" pos:column="42"/></continue>
			}<pos:position pos:line="34" pos:column="26"/></block></then></if>
			<if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><call><name pos:line="35" pos:column="29">starts_with<pos:position pos:line="35" pos:column="40"/></name><argument_list pos:line="35" pos:column="40">(<argument><expr><name pos:line="35" pos:column="41">arg<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="46">"--remote="<pos:position pos:line="35" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="59"/></condition><then pos:line="35" pos:column="59"> <block pos:line="35" pos:column="60">{
				<expr_stmt><expr><name pos:line="36" pos:column="33">remote_name<pos:position pos:line="36" pos:column="44"/></name> <operator pos:line="36" pos:column="45">=<pos:position pos:line="36" pos:column="46"/></operator> <name pos:line="36" pos:column="47">arg<pos:position pos:line="36" pos:column="50"/></name> <operator pos:line="36" pos:column="51">+<pos:position pos:line="36" pos:column="52"/></operator> <literal type="number" pos:line="36" pos:column="53">9<pos:position pos:line="36" pos:column="54"/></literal></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt>
				<continue pos:line="37" pos:column="33">continue;<pos:position pos:line="37" pos:column="42"/></continue>
			}<pos:position pos:line="38" pos:column="26"/></block></then></if>
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><operator pos:line="39" pos:column="29">!<pos:position pos:line="39" pos:column="30"/></operator><call><name pos:line="39" pos:column="30">strcmp<pos:position pos:line="39" pos:column="36"/></name><argument_list pos:line="39" pos:column="36">(<argument><expr><name pos:line="39" pos:column="37">arg<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="42">"--all"<pos:position pos:line="39" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="51"/></condition><then pos:line="39" pos:column="51"> <block pos:line="39" pos:column="52">{
				<expr_stmt><expr><name pos:line="40" pos:column="33">send_all<pos:position pos:line="40" pos:column="41"/></name> <operator pos:line="40" pos:column="42">=<pos:position pos:line="40" pos:column="43"/></operator> <literal type="number" pos:line="40" pos:column="44">1<pos:position pos:line="40" pos:column="45"/></literal></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
				<continue pos:line="41" pos:column="33">continue;<pos:position pos:line="41" pos:column="42"/></continue>
			}<pos:position pos:line="42" pos:column="26"/></block></then></if>
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><operator pos:line="43" pos:column="29">!<pos:position pos:line="43" pos:column="30"/></operator><call><name pos:line="43" pos:column="30">strcmp<pos:position pos:line="43" pos:column="36"/></name><argument_list pos:line="43" pos:column="36">(<argument><expr><name pos:line="43" pos:column="37">arg<pos:position pos:line="43" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="42">"--dry-run"<pos:position pos:line="43" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="55"/></condition><then pos:line="43" pos:column="55"> <block pos:line="43" pos:column="56">{
				<expr_stmt><expr><name><name pos:line="44" pos:column="33">args<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">.<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="38">dry_run<pos:position pos:line="44" pos:column="45"/></name></name> <operator pos:line="44" pos:column="46">=<pos:position pos:line="44" pos:column="47"/></operator> <literal type="number" pos:line="44" pos:column="48">1<pos:position pos:line="44" pos:column="49"/></literal></expr>;<pos:position pos:line="44" pos:column="50"/></expr_stmt>
				<continue pos:line="45" pos:column="33">continue;<pos:position pos:line="45" pos:column="42"/></continue>
			}<pos:position pos:line="46" pos:column="26"/></block></then></if>
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><operator pos:line="47" pos:column="29">!<pos:position pos:line="47" pos:column="30"/></operator><call><name pos:line="47" pos:column="30">strcmp<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><name pos:line="47" pos:column="37">arg<pos:position pos:line="47" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="42">"--mirror"<pos:position pos:line="47" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="54"/></condition><then pos:line="47" pos:column="54"> <block pos:line="47" pos:column="55">{
				<expr_stmt><expr><name><name pos:line="48" pos:column="33">args<pos:position pos:line="48" pos:column="37"/></name><operator pos:line="48" pos:column="37">.<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="38">send_mirror<pos:position pos:line="48" pos:column="49"/></name></name> <operator pos:line="48" pos:column="50">=<pos:position pos:line="48" pos:column="51"/></operator> <literal type="number" pos:line="48" pos:column="52">1<pos:position pos:line="48" pos:column="53"/></literal></expr>;<pos:position pos:line="48" pos:column="54"/></expr_stmt>
				<continue pos:line="49" pos:column="33">continue;<pos:position pos:line="49" pos:column="42"/></continue>
			}<pos:position pos:line="50" pos:column="26"/></block></then></if>
			<if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><operator pos:line="51" pos:column="29">!<pos:position pos:line="51" pos:column="30"/></operator><call><name pos:line="51" pos:column="30">strcmp<pos:position pos:line="51" pos:column="36"/></name><argument_list pos:line="51" pos:column="36">(<argument><expr><name pos:line="51" pos:column="37">arg<pos:position pos:line="51" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="42">"--force"<pos:position pos:line="51" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="53"/></condition><then pos:line="51" pos:column="53"> <block pos:line="51" pos:column="54">{
				<expr_stmt><expr><name><name pos:line="52" pos:column="33">args<pos:position pos:line="52" pos:column="37"/></name><operator pos:line="52" pos:column="37">.<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="38">force_update<pos:position pos:line="52" pos:column="50"/></name></name> <operator pos:line="52" pos:column="51">=<pos:position pos:line="52" pos:column="52"/></operator> <literal type="number" pos:line="52" pos:column="53">1<pos:position pos:line="52" pos:column="54"/></literal></expr>;<pos:position pos:line="52" pos:column="55"/></expr_stmt>
				<continue pos:line="53" pos:column="33">continue;<pos:position pos:line="53" pos:column="42"/></continue>
			}<pos:position pos:line="54" pos:column="26"/></block></then></if>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><operator pos:line="55" pos:column="29">!<pos:position pos:line="55" pos:column="30"/></operator><call><name pos:line="55" pos:column="30">strcmp<pos:position pos:line="55" pos:column="36"/></name><argument_list pos:line="55" pos:column="36">(<argument><expr><name pos:line="55" pos:column="37">arg<pos:position pos:line="55" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="42">"--quiet"<pos:position pos:line="55" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="53"/></condition><then pos:line="55" pos:column="53"> <block pos:line="55" pos:column="54">{
				<expr_stmt><expr><name><name pos:line="56" pos:column="33">args<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">.<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="38">quiet<pos:position pos:line="56" pos:column="43"/></name></name> <operator pos:line="56" pos:column="44">=<pos:position pos:line="56" pos:column="45"/></operator> <literal type="number" pos:line="56" pos:column="46">1<pos:position pos:line="56" pos:column="47"/></literal></expr>;<pos:position pos:line="56" pos:column="48"/></expr_stmt>
				<continue pos:line="57" pos:column="33">continue;<pos:position pos:line="57" pos:column="42"/></continue>
			}<pos:position pos:line="58" pos:column="26"/></block></then></if>
			<if pos:line="59" pos:column="25">if <condition pos:line="59" pos:column="28">(<expr><operator pos:line="59" pos:column="29">!<pos:position pos:line="59" pos:column="30"/></operator><call><name pos:line="59" pos:column="30">strcmp<pos:position pos:line="59" pos:column="36"/></name><argument_list pos:line="59" pos:column="36">(<argument><expr><name pos:line="59" pos:column="37">arg<pos:position pos:line="59" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="42">"--verbose"<pos:position pos:line="59" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="55"/></condition><then pos:line="59" pos:column="55"> <block pos:line="59" pos:column="56">{
				<expr_stmt><expr><name><name pos:line="60" pos:column="33">args<pos:position pos:line="60" pos:column="37"/></name><operator pos:line="60" pos:column="37">.<pos:position pos:line="60" pos:column="38"/></operator><name pos:line="60" pos:column="38">verbose<pos:position pos:line="60" pos:column="45"/></name></name> <operator pos:line="60" pos:column="46">=<pos:position pos:line="60" pos:column="47"/></operator> <literal type="number" pos:line="60" pos:column="48">1<pos:position pos:line="60" pos:column="49"/></literal></expr>;<pos:position pos:line="60" pos:column="50"/></expr_stmt>
				<continue pos:line="61" pos:column="33">continue;<pos:position pos:line="61" pos:column="42"/></continue>
			}<pos:position pos:line="62" pos:column="26"/></block></then></if>
			<if pos:line="63" pos:column="25">if <condition pos:line="63" pos:column="28">(<expr><operator pos:line="63" pos:column="29">!<pos:position pos:line="63" pos:column="30"/></operator><call><name pos:line="63" pos:column="30">strcmp<pos:position pos:line="63" pos:column="36"/></name><argument_list pos:line="63" pos:column="36">(<argument><expr><name pos:line="63" pos:column="37">arg<pos:position pos:line="63" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="42">"--progress"<pos:position pos:line="63" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="56"/></condition><then pos:line="63" pos:column="56"> <block pos:line="63" pos:column="57">{
				<expr_stmt><expr><name pos:line="64" pos:column="33">progress<pos:position pos:line="64" pos:column="41"/></name> <operator pos:line="64" pos:column="42">=<pos:position pos:line="64" pos:column="43"/></operator> <literal type="number" pos:line="64" pos:column="44">1<pos:position pos:line="64" pos:column="45"/></literal></expr>;<pos:position pos:line="64" pos:column="46"/></expr_stmt>
				<continue pos:line="65" pos:column="33">continue;<pos:position pos:line="65" pos:column="42"/></continue>
			}<pos:position pos:line="66" pos:column="26"/></block></then></if>
			<if pos:line="67" pos:column="25">if <condition pos:line="67" pos:column="28">(<expr><operator pos:line="67" pos:column="29">!<pos:position pos:line="67" pos:column="30"/></operator><call><name pos:line="67" pos:column="30">strcmp<pos:position pos:line="67" pos:column="36"/></name><argument_list pos:line="67" pos:column="36">(<argument><expr><name pos:line="67" pos:column="37">arg<pos:position pos:line="67" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="42">"--no-progress"<pos:position pos:line="67" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="59"/></condition><then pos:line="67" pos:column="59"> <block pos:line="67" pos:column="60">{
				<expr_stmt><expr><name pos:line="68" pos:column="33">progress<pos:position pos:line="68" pos:column="41"/></name> <operator pos:line="68" pos:column="42">=<pos:position pos:line="68" pos:column="43"/></operator> <literal type="number" pos:line="68" pos:column="44">0<pos:position pos:line="68" pos:column="45"/></literal></expr>;<pos:position pos:line="68" pos:column="46"/></expr_stmt>
				<continue pos:line="69" pos:column="33">continue;<pos:position pos:line="69" pos:column="42"/></continue>
			}<pos:position pos:line="70" pos:column="26"/></block></then></if>
			<if pos:line="71" pos:column="25">if <condition pos:line="71" pos:column="28">(<expr><operator pos:line="71" pos:column="29">!<pos:position pos:line="71" pos:column="30"/></operator><call><name pos:line="71" pos:column="30">strcmp<pos:position pos:line="71" pos:column="36"/></name><argument_list pos:line="71" pos:column="36">(<argument><expr><name pos:line="71" pos:column="37">arg<pos:position pos:line="71" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="42">"--thin"<pos:position pos:line="71" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="52"/></condition><then pos:line="71" pos:column="52"> <block pos:line="71" pos:column="53">{
				<expr_stmt><expr><name><name pos:line="72" pos:column="33">args<pos:position pos:line="72" pos:column="37"/></name><operator pos:line="72" pos:column="37">.<pos:position pos:line="72" pos:column="38"/></operator><name pos:line="72" pos:column="38">use_thin_pack<pos:position pos:line="72" pos:column="51"/></name></name> <operator pos:line="72" pos:column="52">=<pos:position pos:line="72" pos:column="53"/></operator> <literal type="number" pos:line="72" pos:column="54">1<pos:position pos:line="72" pos:column="55"/></literal></expr>;<pos:position pos:line="72" pos:column="56"/></expr_stmt>
				<continue pos:line="73" pos:column="33">continue;<pos:position pos:line="73" pos:column="42"/></continue>
			}<pos:position pos:line="74" pos:column="26"/></block></then></if>
			<if pos:line="75" pos:column="25">if <condition pos:line="75" pos:column="28">(<expr><operator pos:line="75" pos:column="29">!<pos:position pos:line="75" pos:column="30"/></operator><call><name pos:line="75" pos:column="30">strcmp<pos:position pos:line="75" pos:column="36"/></name><argument_list pos:line="75" pos:column="36">(<argument><expr><name pos:line="75" pos:column="37">arg<pos:position pos:line="75" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="42">"--stateless-rpc"<pos:position pos:line="75" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="61"/></condition><then pos:line="75" pos:column="61"> <block pos:line="75" pos:column="62">{
				<expr_stmt><expr><name><name pos:line="76" pos:column="33">args<pos:position pos:line="76" pos:column="37"/></name><operator pos:line="76" pos:column="37">.<pos:position pos:line="76" pos:column="38"/></operator><name pos:line="76" pos:column="38">stateless_rpc<pos:position pos:line="76" pos:column="51"/></name></name> <operator pos:line="76" pos:column="52">=<pos:position pos:line="76" pos:column="53"/></operator> <literal type="number" pos:line="76" pos:column="54">1<pos:position pos:line="76" pos:column="55"/></literal></expr>;<pos:position pos:line="76" pos:column="56"/></expr_stmt>
				<continue pos:line="77" pos:column="33">continue;<pos:position pos:line="77" pos:column="42"/></continue>
			}<pos:position pos:line="78" pos:column="26"/></block></then></if>
			<if pos:line="79" pos:column="25">if <condition pos:line="79" pos:column="28">(<expr><operator pos:line="79" pos:column="29">!<pos:position pos:line="79" pos:column="30"/></operator><call><name pos:line="79" pos:column="30">strcmp<pos:position pos:line="79" pos:column="36"/></name><argument_list pos:line="79" pos:column="36">(<argument><expr><name pos:line="79" pos:column="37">arg<pos:position pos:line="79" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="42">"--helper-status"<pos:position pos:line="79" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="61"/></condition><then pos:line="79" pos:column="61"> <block pos:line="79" pos:column="62">{
				<expr_stmt><expr><name pos:line="80" pos:column="33">helper_status<pos:position pos:line="80" pos:column="46"/></name> <operator pos:line="80" pos:column="47">=<pos:position pos:line="80" pos:column="48"/></operator> <literal type="number" pos:line="80" pos:column="49">1<pos:position pos:line="80" pos:column="50"/></literal></expr>;<pos:position pos:line="80" pos:column="51"/></expr_stmt>
				<continue pos:line="81" pos:column="33">continue;<pos:position pos:line="81" pos:column="42"/></continue>
			}<pos:position pos:line="82" pos:column="26"/></block></then></if>
			<if pos:line="83" pos:column="25">if <condition pos:line="83" pos:column="28">(<expr><operator pos:line="83" pos:column="29">!<pos:position pos:line="83" pos:column="30"/></operator><call><name pos:line="83" pos:column="30">strcmp<pos:position pos:line="83" pos:column="36"/></name><argument_list pos:line="83" pos:column="36">(<argument><expr><name pos:line="83" pos:column="37">arg<pos:position pos:line="83" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="42">"--"<pos:position pos:line="83" pos:column="46"/></literal> <name pos:line="83" pos:column="47">CAS_OPT_NAME<pos:position pos:line="83" pos:column="59"/></name></expr></argument>)<pos:position pos:line="83" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="61"/></condition><then pos:line="83" pos:column="61"> <block pos:line="83" pos:column="62">{
				<if pos:line="84" pos:column="33">if <condition pos:line="84" pos:column="36">(<expr><call><name pos:line="84" pos:column="37">parse_push_cas_option<pos:position pos:line="84" pos:column="58"/></name><argument_list pos:line="84" pos:column="58">(<argument><expr><operator pos:line="84" pos:column="59">&amp;<pos:position pos:line="84" pos:column="64"/></operator><name pos:line="84" pos:column="60">cas<pos:position pos:line="84" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="65">NULL<pos:position pos:line="84" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="71">0<pos:position pos:line="84" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="73"/></argument_list></call> <operator pos:line="84" pos:column="74">&lt;<pos:position pos:line="84" pos:column="78"/></operator> <literal type="number" pos:line="84" pos:column="76">0<pos:position pos:line="84" pos:column="77"/></literal></expr>)<pos:position pos:line="84" pos:column="78"/></condition><then pos:line="84" pos:column="78">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="41">exit<pos:position pos:line="85" pos:column="45"/></name><argument_list pos:line="85" pos:column="45">(<argument><expr><literal type="number" pos:line="85" pos:column="46">1<pos:position pos:line="85" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="49"/></expr_stmt></block></then></if>
				<continue pos:line="86" pos:column="33">continue;<pos:position pos:line="86" pos:column="42"/></continue>
			}<pos:position pos:line="87" pos:column="26"/></block></then></if>
			<if pos:line="88" pos:column="25">if <condition pos:line="88" pos:column="28">(<expr><operator pos:line="88" pos:column="29">!<pos:position pos:line="88" pos:column="30"/></operator><call><name pos:line="88" pos:column="30">strcmp<pos:position pos:line="88" pos:column="36"/></name><argument_list pos:line="88" pos:column="36">(<argument><expr><name pos:line="88" pos:column="37">arg<pos:position pos:line="88" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="42">"--no-"<pos:position pos:line="88" pos:column="49"/></literal> <name pos:line="88" pos:column="50">CAS_OPT_NAME<pos:position pos:line="88" pos:column="62"/></name></expr></argument>)<pos:position pos:line="88" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="64"/></condition><then pos:line="88" pos:column="64"> <block pos:line="88" pos:column="65">{
				<if pos:line="89" pos:column="33">if <condition pos:line="89" pos:column="36">(<expr><call><name pos:line="89" pos:column="37">parse_push_cas_option<pos:position pos:line="89" pos:column="58"/></name><argument_list pos:line="89" pos:column="58">(<argument><expr><operator pos:line="89" pos:column="59">&amp;<pos:position pos:line="89" pos:column="64"/></operator><name pos:line="89" pos:column="60">cas<pos:position pos:line="89" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="65">NULL<pos:position pos:line="89" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="71">1<pos:position pos:line="89" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="73"/></argument_list></call> <operator pos:line="89" pos:column="74">&lt;<pos:position pos:line="89" pos:column="78"/></operator> <literal type="number" pos:line="89" pos:column="76">0<pos:position pos:line="89" pos:column="77"/></literal></expr>)<pos:position pos:line="89" pos:column="78"/></condition><then pos:line="89" pos:column="78">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="41">exit<pos:position pos:line="90" pos:column="45"/></name><argument_list pos:line="90" pos:column="45">(<argument><expr><literal type="number" pos:line="90" pos:column="46">1<pos:position pos:line="90" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="49"/></expr_stmt></block></then></if>
				<continue pos:line="91" pos:column="33">continue;<pos:position pos:line="91" pos:column="42"/></continue>
			}<pos:position pos:line="92" pos:column="26"/></block></then></if>
			<if pos:line="93" pos:column="25">if <condition pos:line="93" pos:column="28">(<expr><call><name pos:line="93" pos:column="29">starts_with<pos:position pos:line="93" pos:column="40"/></name><argument_list pos:line="93" pos:column="40">(<argument><expr><name pos:line="93" pos:column="41">arg<pos:position pos:line="93" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="46">"--"<pos:position pos:line="93" pos:column="50"/></literal> <name pos:line="93" pos:column="51">CAS_OPT_NAME<pos:position pos:line="93" pos:column="63"/></name> <literal type="string" pos:line="93" pos:column="64">"="<pos:position pos:line="93" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="69"/></condition><then pos:line="93" pos:column="69"> <block pos:line="93" pos:column="70">{
				<if pos:line="94" pos:column="33">if <condition pos:line="94" pos:column="36">(<expr><call><name pos:line="94" pos:column="37">parse_push_cas_option<pos:position pos:line="94" pos:column="58"/></name><argument_list pos:line="94" pos:column="58">(<argument><expr><operator pos:line="94" pos:column="59">&amp;<pos:position pos:line="94" pos:column="64"/></operator><name pos:line="94" pos:column="60">cas<pos:position pos:line="94" pos:column="63"/></name></expr></argument>,
							  <argument><expr><call><name pos:line="95" pos:column="59">strchr<pos:position pos:line="95" pos:column="65"/></name><argument_list pos:line="95" pos:column="65">(<argument><expr><name pos:line="95" pos:column="66">arg<pos:position pos:line="95" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="95" pos:column="71">'='<pos:position pos:line="95" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="75"/></argument_list></call> <operator pos:line="95" pos:column="76">+<pos:position pos:line="95" pos:column="77"/></operator> <literal type="number" pos:line="95" pos:column="78">1<pos:position pos:line="95" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="81">0<pos:position pos:line="95" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="83"/></argument_list></call> <operator pos:line="95" pos:column="84">&lt;<pos:position pos:line="95" pos:column="88"/></operator> <literal type="number" pos:line="95" pos:column="86">0<pos:position pos:line="95" pos:column="87"/></literal></expr>)<pos:position pos:line="95" pos:column="88"/></condition><then pos:line="95" pos:column="88">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="96" pos:column="41">exit<pos:position pos:line="96" pos:column="45"/></name><argument_list pos:line="96" pos:column="45">(<argument><expr><literal type="number" pos:line="96" pos:column="46">1<pos:position pos:line="96" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="49"/></expr_stmt></block></then></if>
				<continue pos:line="97" pos:column="33">continue;<pos:position pos:line="97" pos:column="42"/></continue>
			}<pos:position pos:line="98" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="99" pos:column="25">usage<pos:position pos:line="99" pos:column="30"/></name><argument_list pos:line="99" pos:column="30">(<argument><expr><name pos:line="99" pos:column="31">send_pack_usage<pos:position pos:line="99" pos:column="46"/></name></expr></argument>)<pos:position pos:line="99" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="100" pos:column="18"/></block></then></if>
		<if pos:line="101" pos:column="17">if <condition pos:line="101" pos:column="20">(<expr><operator pos:line="101" pos:column="21">!<pos:position pos:line="101" pos:column="22"/></operator><name pos:line="101" pos:column="22">dest<pos:position pos:line="101" pos:column="26"/></name></expr>)<pos:position pos:line="101" pos:column="27"/></condition><then pos:line="101" pos:column="27"> <block pos:line="101" pos:column="28">{
			<expr_stmt><expr><name pos:line="102" pos:column="25">dest<pos:position pos:line="102" pos:column="29"/></name> <operator pos:line="102" pos:column="30">=<pos:position pos:line="102" pos:column="31"/></operator> <name pos:line="102" pos:column="32">arg<pos:position pos:line="102" pos:column="35"/></name></expr>;<pos:position pos:line="102" pos:column="36"/></expr_stmt>
			<continue pos:line="103" pos:column="25">continue;<pos:position pos:line="103" pos:column="34"/></continue>
		}<pos:position pos:line="104" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="105" pos:column="17">refspecs<pos:position pos:line="105" pos:column="25"/></name> <operator pos:line="105" pos:column="26">=<pos:position pos:line="105" pos:column="27"/></operator> <operator pos:line="105" pos:column="28">(<pos:position pos:line="105" pos:column="29"/></operator><specifier pos:line="105" pos:column="29">const<pos:position pos:line="105" pos:column="34"/></specifier> <name pos:line="105" pos:column="35">char<pos:position pos:line="105" pos:column="39"/></name> <operator pos:line="105" pos:column="40">*<pos:position pos:line="105" pos:column="41"/></operator><operator pos:line="105" pos:column="41">*<pos:position pos:line="105" pos:column="42"/></operator><operator pos:line="105" pos:column="42">)<pos:position pos:line="105" pos:column="43"/></operator> <name pos:line="105" pos:column="44">argv<pos:position pos:line="105" pos:column="48"/></name></expr>;<pos:position pos:line="105" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="106" pos:column="17">nr_refspecs<pos:position pos:line="106" pos:column="28"/></name> <operator pos:line="106" pos:column="29">=<pos:position pos:line="106" pos:column="30"/></operator> <name pos:line="106" pos:column="31">argc<pos:position pos:line="106" pos:column="35"/></name> <operator pos:line="106" pos:column="36">-<pos:position pos:line="106" pos:column="37"/></operator> <name pos:line="106" pos:column="38">i<pos:position pos:line="106" pos:column="39"/></name></expr>;<pos:position pos:line="106" pos:column="40"/></expr_stmt>
		<break pos:line="107" pos:column="17">break;<pos:position pos:line="107" pos:column="23"/></break>
	}<pos:position pos:line="108" pos:column="10"/></block></for>
	<if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><operator pos:line="109" pos:column="13">!<pos:position pos:line="109" pos:column="14"/></operator><name pos:line="109" pos:column="14">dest<pos:position pos:line="109" pos:column="18"/></name></expr>)<pos:position pos:line="109" pos:column="19"/></condition><then pos:line="109" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="17">usage<pos:position pos:line="110" pos:column="22"/></name><argument_list pos:line="110" pos:column="22">(<argument><expr><name pos:line="110" pos:column="23">send_pack_usage<pos:position pos:line="110" pos:column="38"/></name></expr></argument>)<pos:position pos:line="110" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="40"/></expr_stmt></block></then></if>
	<comment type="block" pos:line="111" pos:column="9">/*
	 * --all and --mirror are incompatible; neither makes sense
	 * with any refspecs.
	 */</comment>
	<if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><operator pos:line="115" pos:column="13">(<pos:position pos:line="115" pos:column="14"/></operator><name pos:line="115" pos:column="14">refspecs<pos:position pos:line="115" pos:column="22"/></name> <operator pos:line="115" pos:column="23">&amp;&amp;<pos:position pos:line="115" pos:column="33"/></operator> <operator pos:line="115" pos:column="26">(<pos:position pos:line="115" pos:column="27"/></operator><name pos:line="115" pos:column="27">send_all<pos:position pos:line="115" pos:column="35"/></name> <operator pos:line="115" pos:column="36">||<pos:position pos:line="115" pos:column="38"/></operator> <name><name pos:line="115" pos:column="39">args<pos:position pos:line="115" pos:column="43"/></name><operator pos:line="115" pos:column="43">.<pos:position pos:line="115" pos:column="44"/></operator><name pos:line="115" pos:column="44">send_mirror<pos:position pos:line="115" pos:column="55"/></name></name><operator pos:line="115" pos:column="55">)<pos:position pos:line="115" pos:column="56"/></operator><operator pos:line="115" pos:column="56">)<pos:position pos:line="115" pos:column="57"/></operator> <operator pos:line="115" pos:column="58">||<pos:position pos:line="115" pos:column="60"/></operator>
	    <operator pos:line="116" pos:column="13">(<pos:position pos:line="116" pos:column="14"/></operator><name pos:line="116" pos:column="14">send_all<pos:position pos:line="116" pos:column="22"/></name> <operator pos:line="116" pos:column="23">&amp;&amp;<pos:position pos:line="116" pos:column="33"/></operator> <name><name pos:line="116" pos:column="26">args<pos:position pos:line="116" pos:column="30"/></name><operator pos:line="116" pos:column="30">.<pos:position pos:line="116" pos:column="31"/></operator><name pos:line="116" pos:column="31">send_mirror<pos:position pos:line="116" pos:column="42"/></name></name><operator pos:line="116" pos:column="42">)<pos:position pos:line="116" pos:column="43"/></operator></expr>)<pos:position pos:line="116" pos:column="44"/></condition><then pos:line="116" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="117" pos:column="17">usage<pos:position pos:line="117" pos:column="22"/></name><argument_list pos:line="117" pos:column="22">(<argument><expr><name pos:line="117" pos:column="23">send_pack_usage<pos:position pos:line="117" pos:column="38"/></name></expr></argument>)<pos:position pos:line="117" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="40"/></expr_stmt></block></then></if>

	<if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><name pos:line="119" pos:column="13">remote_name<pos:position pos:line="119" pos:column="24"/></name></expr>)<pos:position pos:line="119" pos:column="25"/></condition><then pos:line="119" pos:column="25"> <block pos:line="119" pos:column="26">{
		<expr_stmt><expr><name pos:line="120" pos:column="17">remote<pos:position pos:line="120" pos:column="23"/></name> <operator pos:line="120" pos:column="24">=<pos:position pos:line="120" pos:column="25"/></operator> <call><name pos:line="120" pos:column="26">remote_get<pos:position pos:line="120" pos:column="36"/></name><argument_list pos:line="120" pos:column="36">(<argument><expr><name pos:line="120" pos:column="37">remote_name<pos:position pos:line="120" pos:column="48"/></name></expr></argument>)<pos:position pos:line="120" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="50"/></expr_stmt>
		<if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><operator pos:line="121" pos:column="21">!<pos:position pos:line="121" pos:column="22"/></operator><call><name pos:line="121" pos:column="22">remote_has_url<pos:position pos:line="121" pos:column="36"/></name><argument_list pos:line="121" pos:column="36">(<argument><expr><name pos:line="121" pos:column="37">remote<pos:position pos:line="121" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="45">dest<pos:position pos:line="121" pos:column="49"/></name></expr></argument>)<pos:position pos:line="121" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="121" pos:column="51"/></condition><then pos:line="121" pos:column="51"> <block pos:line="121" pos:column="52">{
			<expr_stmt><expr><call><name pos:line="122" pos:column="25">die<pos:position pos:line="122" pos:column="28"/></name><argument_list pos:line="122" pos:column="28">(<argument><expr><literal type="string" pos:line="122" pos:column="29">"Destination %s is not a uri for %s"<pos:position pos:line="122" pos:column="65"/></literal></expr></argument>,
			    <argument><expr><name pos:line="123" pos:column="29">dest<pos:position pos:line="123" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="35">remote_name<pos:position pos:line="123" pos:column="46"/></name></expr></argument>)<pos:position pos:line="123" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="124" pos:column="18"/></block></then></if>
	}<pos:position pos:line="125" pos:column="10"/></block></then></if>

	<if pos:line="127" pos:column="9">if <condition pos:line="127" pos:column="12">(<expr><name pos:line="127" pos:column="13">progress<pos:position pos:line="127" pos:column="21"/></name> <operator pos:line="127" pos:column="22">==<pos:position pos:line="127" pos:column="24"/></operator> <operator pos:line="127" pos:column="25">-<pos:position pos:line="127" pos:column="26"/></operator><literal type="number" pos:line="127" pos:column="26">1<pos:position pos:line="127" pos:column="27"/></literal></expr>)<pos:position pos:line="127" pos:column="28"/></condition><then pos:line="127" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="128" pos:column="17">progress<pos:position pos:line="128" pos:column="25"/></name> <operator pos:line="128" pos:column="26">=<pos:position pos:line="128" pos:column="27"/></operator> <operator pos:line="128" pos:column="28">!<pos:position pos:line="128" pos:column="29"/></operator><name><name pos:line="128" pos:column="29">args<pos:position pos:line="128" pos:column="33"/></name><operator pos:line="128" pos:column="33">.<pos:position pos:line="128" pos:column="34"/></operator><name pos:line="128" pos:column="34">quiet<pos:position pos:line="128" pos:column="39"/></name></name> <operator pos:line="128" pos:column="40">&amp;&amp;<pos:position pos:line="128" pos:column="50"/></operator> <call><name pos:line="128" pos:column="43">isatty<pos:position pos:line="128" pos:column="49"/></name><argument_list pos:line="128" pos:column="49">(<argument><expr><literal type="number" pos:line="128" pos:column="50">2<pos:position pos:line="128" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="53"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="129" pos:column="9">args<pos:position pos:line="129" pos:column="13"/></name><operator pos:line="129" pos:column="13">.<pos:position pos:line="129" pos:column="14"/></operator><name pos:line="129" pos:column="14">progress<pos:position pos:line="129" pos:column="22"/></name></name> <operator pos:line="129" pos:column="23">=<pos:position pos:line="129" pos:column="24"/></operator> <name pos:line="129" pos:column="25">progress<pos:position pos:line="129" pos:column="33"/></name></expr>;<pos:position pos:line="129" pos:column="34"/></expr_stmt>

	<if pos:line="131" pos:column="9">if <condition pos:line="131" pos:column="12">(<expr><name><name pos:line="131" pos:column="13">args<pos:position pos:line="131" pos:column="17"/></name><operator pos:line="131" pos:column="17">.<pos:position pos:line="131" pos:column="18"/></operator><name pos:line="131" pos:column="18">stateless_rpc<pos:position pos:line="131" pos:column="31"/></name></name></expr>)<pos:position pos:line="131" pos:column="32"/></condition><then pos:line="131" pos:column="32"> <block pos:line="131" pos:column="33">{
		<expr_stmt><expr><name pos:line="132" pos:column="17">conn<pos:position pos:line="132" pos:column="21"/></name> <operator pos:line="132" pos:column="22">=<pos:position pos:line="132" pos:column="23"/></operator> <name pos:line="132" pos:column="24">NULL<pos:position pos:line="132" pos:column="28"/></name></expr>;<pos:position pos:line="132" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="133" pos:column="17">fd<pos:position pos:line="133" pos:column="19"/></name><index pos:line="133" pos:column="19">[<expr><literal type="number" pos:line="133" pos:column="20">0<pos:position pos:line="133" pos:column="21"/></literal></expr>]<pos:position pos:line="133" pos:column="22"/></index></name> <operator pos:line="133" pos:column="23">=<pos:position pos:line="133" pos:column="24"/></operator> <literal type="number" pos:line="133" pos:column="25">0<pos:position pos:line="133" pos:column="26"/></literal></expr>;<pos:position pos:line="133" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="134" pos:column="17">fd<pos:position pos:line="134" pos:column="19"/></name><index pos:line="134" pos:column="19">[<expr><literal type="number" pos:line="134" pos:column="20">1<pos:position pos:line="134" pos:column="21"/></literal></expr>]<pos:position pos:line="134" pos:column="22"/></index></name> <operator pos:line="134" pos:column="23">=<pos:position pos:line="134" pos:column="24"/></operator> <literal type="number" pos:line="134" pos:column="25">1<pos:position pos:line="134" pos:column="26"/></literal></expr>;<pos:position pos:line="134" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="135" pos:column="10"/></block></then> <else pos:line="135" pos:column="11">else <block pos:line="135" pos:column="16">{
		<expr_stmt><expr><name pos:line="136" pos:column="17">conn<pos:position pos:line="136" pos:column="21"/></name> <operator pos:line="136" pos:column="22">=<pos:position pos:line="136" pos:column="23"/></operator> <call><name pos:line="136" pos:column="24">git_connect<pos:position pos:line="136" pos:column="35"/></name><argument_list pos:line="136" pos:column="35">(<argument><expr><name pos:line="136" pos:column="36">fd<pos:position pos:line="136" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="40">dest<pos:position pos:line="136" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="46">receivepack<pos:position pos:line="136" pos:column="57"/></name></expr></argument>,
			<argument><expr><ternary><condition><expr><name><name pos:line="137" pos:column="25">args<pos:position pos:line="137" pos:column="29"/></name><operator pos:line="137" pos:column="29">.<pos:position pos:line="137" pos:column="30"/></operator><name pos:line="137" pos:column="30">verbose<pos:position pos:line="137" pos:column="37"/></name></name></expr> ?<pos:position pos:line="137" pos:column="39"/></condition><then pos:line="137" pos:column="39"> <expr><name pos:line="137" pos:column="40">CONNECT_VERBOSE<pos:position pos:line="137" pos:column="55"/></name></expr> <pos:position pos:line="137" pos:column="56"/></then><else pos:line="137" pos:column="56">: <expr><literal type="number" pos:line="137" pos:column="58">0<pos:position pos:line="137" pos:column="59"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="137" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="138" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="140" pos:column="9">get_remote_heads<pos:position pos:line="140" pos:column="25"/></name><argument_list pos:line="140" pos:column="25">(<argument><expr><name><name pos:line="140" pos:column="26">fd<pos:position pos:line="140" pos:column="28"/></name><index pos:line="140" pos:column="28">[<expr><literal type="number" pos:line="140" pos:column="29">0<pos:position pos:line="140" pos:column="30"/></literal></expr>]<pos:position pos:line="140" pos:column="31"/></index></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="33">NULL<pos:position pos:line="140" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="140" pos:column="39">0<pos:position pos:line="140" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="140" pos:column="42">&amp;<pos:position pos:line="140" pos:column="47"/></operator><name pos:line="140" pos:column="43">remote_refs<pos:position pos:line="140" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="56">REF_NORMAL<pos:position pos:line="140" pos:column="66"/></name></expr></argument>,
			 <argument><expr><operator pos:line="141" pos:column="26">&amp;<pos:position pos:line="141" pos:column="31"/></operator><name pos:line="141" pos:column="27">extra_have<pos:position pos:line="141" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="141" pos:column="39">&amp;<pos:position pos:line="141" pos:column="44"/></operator><name pos:line="141" pos:column="40">shallow<pos:position pos:line="141" pos:column="47"/></name></expr></argument>)<pos:position pos:line="141" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="49"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="143" pos:column="9">transport_verify_remote_names<pos:position pos:line="143" pos:column="38"/></name><argument_list pos:line="143" pos:column="38">(<argument><expr><name pos:line="143" pos:column="39">nr_refspecs<pos:position pos:line="143" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="52">refspecs<pos:position pos:line="143" pos:column="60"/></name></expr></argument>)<pos:position pos:line="143" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="62"/></expr_stmt>

	<expr_stmt><expr><name pos:line="145" pos:column="9">local_refs<pos:position pos:line="145" pos:column="19"/></name> <operator pos:line="145" pos:column="20">=<pos:position pos:line="145" pos:column="21"/></operator> <call><name pos:line="145" pos:column="22">get_local_heads<pos:position pos:line="145" pos:column="37"/></name><argument_list pos:line="145" pos:column="37">()<pos:position pos:line="145" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="40"/></expr_stmt>

	<expr_stmt><expr><name pos:line="147" pos:column="9">flags<pos:position pos:line="147" pos:column="14"/></name> <operator pos:line="147" pos:column="15">=<pos:position pos:line="147" pos:column="16"/></operator> <name pos:line="147" pos:column="17">MATCH_REFS_NONE<pos:position pos:line="147" pos:column="32"/></name></expr>;<pos:position pos:line="147" pos:column="33"/></expr_stmt>

	<if pos:line="149" pos:column="9">if <condition pos:line="149" pos:column="12">(<expr><name pos:line="149" pos:column="13">send_all<pos:position pos:line="149" pos:column="21"/></name></expr>)<pos:position pos:line="149" pos:column="22"/></condition><then pos:line="149" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="150" pos:column="17">flags<pos:position pos:line="150" pos:column="22"/></name> <operator pos:line="150" pos:column="23">|=<pos:position pos:line="150" pos:column="25"/></operator> <name pos:line="150" pos:column="26">MATCH_REFS_ALL<pos:position pos:line="150" pos:column="40"/></name></expr>;<pos:position pos:line="150" pos:column="41"/></expr_stmt></block></then></if>
	<if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><name><name pos:line="151" pos:column="13">args<pos:position pos:line="151" pos:column="17"/></name><operator pos:line="151" pos:column="17">.<pos:position pos:line="151" pos:column="18"/></operator><name pos:line="151" pos:column="18">send_mirror<pos:position pos:line="151" pos:column="29"/></name></name></expr>)<pos:position pos:line="151" pos:column="30"/></condition><then pos:line="151" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="152" pos:column="17">flags<pos:position pos:line="152" pos:column="22"/></name> <operator pos:line="152" pos:column="23">|=<pos:position pos:line="152" pos:column="25"/></operator> <name pos:line="152" pos:column="26">MATCH_REFS_MIRROR<pos:position pos:line="152" pos:column="43"/></name></expr>;<pos:position pos:line="152" pos:column="44"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="154" pos:column="9">/* match them up */</comment>
	<if pos:line="155" pos:column="9">if <condition pos:line="155" pos:column="12">(<expr><call><name pos:line="155" pos:column="13">match_push_refs<pos:position pos:line="155" pos:column="28"/></name><argument_list pos:line="155" pos:column="28">(<argument><expr><name pos:line="155" pos:column="29">local_refs<pos:position pos:line="155" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="155" pos:column="41">&amp;<pos:position pos:line="155" pos:column="46"/></operator><name pos:line="155" pos:column="42">remote_refs<pos:position pos:line="155" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="55">nr_refspecs<pos:position pos:line="155" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="68">refspecs<pos:position pos:line="155" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="78">flags<pos:position pos:line="155" pos:column="83"/></name></expr></argument>)<pos:position pos:line="155" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="155" pos:column="85"/></condition><then pos:line="155" pos:column="85">
		<block type="pseudo"><return pos:line="156" pos:column="17">return <expr><operator pos:line="156" pos:column="24">-<pos:position pos:line="156" pos:column="25"/></operator><literal type="number" pos:line="156" pos:column="25">1<pos:position pos:line="156" pos:column="26"/></literal></expr>;<pos:position pos:line="156" pos:column="27"/></return></block></then></if>

	<if pos:line="158" pos:column="9">if <condition pos:line="158" pos:column="12">(<expr><operator pos:line="158" pos:column="13">!<pos:position pos:line="158" pos:column="14"/></operator><call><name pos:line="158" pos:column="14">is_empty_cas<pos:position pos:line="158" pos:column="26"/></name><argument_list pos:line="158" pos:column="26">(<argument><expr><operator pos:line="158" pos:column="27">&amp;<pos:position pos:line="158" pos:column="32"/></operator><name pos:line="158" pos:column="28">cas<pos:position pos:line="158" pos:column="31"/></name></expr></argument>)<pos:position pos:line="158" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="158" pos:column="33"/></condition><then pos:line="158" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="159" pos:column="17">apply_push_cas<pos:position pos:line="159" pos:column="31"/></name><argument_list pos:line="159" pos:column="31">(<argument><expr><operator pos:line="159" pos:column="32">&amp;<pos:position pos:line="159" pos:column="37"/></operator><name pos:line="159" pos:column="33">cas<pos:position pos:line="159" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="38">remote<pos:position pos:line="159" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="46">remote_refs<pos:position pos:line="159" pos:column="57"/></name></expr></argument>)<pos:position pos:line="159" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="59"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="161" pos:column="9">set_ref_status_for_push<pos:position pos:line="161" pos:column="32"/></name><argument_list pos:line="161" pos:column="32">(<argument><expr><name pos:line="161" pos:column="33">remote_refs<pos:position pos:line="161" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="46">args<pos:position pos:line="161" pos:column="50"/></name><operator pos:line="161" pos:column="50">.<pos:position pos:line="161" pos:column="51"/></operator><name pos:line="161" pos:column="51">send_mirror<pos:position pos:line="161" pos:column="62"/></name></name></expr></argument>,
		<argument><expr><name><name pos:line="162" pos:column="17">args<pos:position pos:line="162" pos:column="21"/></name><operator pos:line="162" pos:column="21">.<pos:position pos:line="162" pos:column="22"/></operator><name pos:line="162" pos:column="22">force_update<pos:position pos:line="162" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="162" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="36"/></expr_stmt>

	<expr_stmt><expr><name pos:line="164" pos:column="9">ret<pos:position pos:line="164" pos:column="12"/></name> <operator pos:line="164" pos:column="13">=<pos:position pos:line="164" pos:column="14"/></operator> <call><name pos:line="164" pos:column="15">send_pack<pos:position pos:line="164" pos:column="24"/></name><argument_list pos:line="164" pos:column="24">(<argument><expr><operator pos:line="164" pos:column="25">&amp;<pos:position pos:line="164" pos:column="30"/></operator><name pos:line="164" pos:column="26">args<pos:position pos:line="164" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="32">fd<pos:position pos:line="164" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="36">conn<pos:position pos:line="164" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="42">remote_refs<pos:position pos:line="164" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="164" pos:column="55">&amp;<pos:position pos:line="164" pos:column="60"/></operator><name pos:line="164" pos:column="56">extra_have<pos:position pos:line="164" pos:column="66"/></name></expr></argument>)<pos:position pos:line="164" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="68"/></expr_stmt>

	<if pos:line="166" pos:column="9">if <condition pos:line="166" pos:column="12">(<expr><name pos:line="166" pos:column="13">helper_status<pos:position pos:line="166" pos:column="26"/></name></expr>)<pos:position pos:line="166" pos:column="27"/></condition><then pos:line="166" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="167" pos:column="17">print_helper_status<pos:position pos:line="167" pos:column="36"/></name><argument_list pos:line="167" pos:column="36">(<argument><expr><name pos:line="167" pos:column="37">remote_refs<pos:position pos:line="167" pos:column="48"/></name></expr></argument>)<pos:position pos:line="167" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="50"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="169" pos:column="9">close<pos:position pos:line="169" pos:column="14"/></name><argument_list pos:line="169" pos:column="14">(<argument><expr><name><name pos:line="169" pos:column="15">fd<pos:position pos:line="169" pos:column="17"/></name><index pos:line="169" pos:column="17">[<expr><literal type="number" pos:line="169" pos:column="18">1<pos:position pos:line="169" pos:column="19"/></literal></expr>]<pos:position pos:line="169" pos:column="20"/></index></name></expr></argument>)<pos:position pos:line="169" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="170" pos:column="9">close<pos:position pos:line="170" pos:column="14"/></name><argument_list pos:line="170" pos:column="14">(<argument><expr><name><name pos:line="170" pos:column="15">fd<pos:position pos:line="170" pos:column="17"/></name><index pos:line="170" pos:column="17">[<expr><literal type="number" pos:line="170" pos:column="18">0<pos:position pos:line="170" pos:column="19"/></literal></expr>]<pos:position pos:line="170" pos:column="20"/></index></name></expr></argument>)<pos:position pos:line="170" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="22"/></expr_stmt>

	<expr_stmt><expr><name pos:line="172" pos:column="9">ret<pos:position pos:line="172" pos:column="12"/></name> <operator pos:line="172" pos:column="13">|=<pos:position pos:line="172" pos:column="15"/></operator> <call><name pos:line="172" pos:column="16">finish_connect<pos:position pos:line="172" pos:column="30"/></name><argument_list pos:line="172" pos:column="30">(<argument><expr><name pos:line="172" pos:column="31">conn<pos:position pos:line="172" pos:column="35"/></name></expr></argument>)<pos:position pos:line="172" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="37"/></expr_stmt>

	<if pos:line="174" pos:column="9">if <condition pos:line="174" pos:column="12">(<expr><operator pos:line="174" pos:column="13">!<pos:position pos:line="174" pos:column="14"/></operator><name pos:line="174" pos:column="14">helper_status<pos:position pos:line="174" pos:column="27"/></name></expr>)<pos:position pos:line="174" pos:column="28"/></condition><then pos:line="174" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="175" pos:column="17">transport_print_push_status<pos:position pos:line="175" pos:column="44"/></name><argument_list pos:line="175" pos:column="44">(<argument><expr><name pos:line="175" pos:column="45">dest<pos:position pos:line="175" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="51">remote_refs<pos:position pos:line="175" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="175" pos:column="64">args<pos:position pos:line="175" pos:column="68"/></name><operator pos:line="175" pos:column="68">.<pos:position pos:line="175" pos:column="69"/></operator><name pos:line="175" pos:column="69">verbose<pos:position pos:line="175" pos:column="76"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="175" pos:column="78">0<pos:position pos:line="175" pos:column="79"/></literal></expr></argument>, <argument><expr><operator pos:line="175" pos:column="81">&amp;<pos:position pos:line="175" pos:column="86"/></operator><name pos:line="175" pos:column="82">reject_reasons<pos:position pos:line="175" pos:column="96"/></name></expr></argument>)<pos:position pos:line="175" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="98"/></expr_stmt></block></then></if>

	<if pos:line="177" pos:column="9">if <condition pos:line="177" pos:column="12">(<expr><operator pos:line="177" pos:column="13">!<pos:position pos:line="177" pos:column="14"/></operator><name><name pos:line="177" pos:column="14">args<pos:position pos:line="177" pos:column="18"/></name><operator pos:line="177" pos:column="18">.<pos:position pos:line="177" pos:column="19"/></operator><name pos:line="177" pos:column="19">dry_run<pos:position pos:line="177" pos:column="26"/></name></name> <operator pos:line="177" pos:column="27">&amp;&amp;<pos:position pos:line="177" pos:column="37"/></operator> <name pos:line="177" pos:column="30">remote<pos:position pos:line="177" pos:column="36"/></name></expr>)<pos:position pos:line="177" pos:column="37"/></condition><then pos:line="177" pos:column="37"> <block pos:line="177" pos:column="38">{
		<decl_stmt><decl><type><name><name pos:line="178" pos:column="17">struct<pos:position pos:line="178" pos:column="23"/></name> <name pos:line="178" pos:column="24">ref<pos:position pos:line="178" pos:column="27"/></name></name> <modifier pos:line="178" pos:column="28">*<pos:position pos:line="178" pos:column="29"/></modifier></type><name pos:line="178" pos:column="29">ref<pos:position pos:line="178" pos:column="32"/></name></decl>;<pos:position pos:line="178" pos:column="33"/></decl_stmt>
		<for pos:line="179" pos:column="17">for <control pos:line="179" pos:column="21">(<init><expr><name pos:line="179" pos:column="22">ref<pos:position pos:line="179" pos:column="25"/></name> <operator pos:line="179" pos:column="26">=<pos:position pos:line="179" pos:column="27"/></operator> <name pos:line="179" pos:column="28">remote_refs<pos:position pos:line="179" pos:column="39"/></name></expr>;<pos:position pos:line="179" pos:column="40"/></init> <condition><expr><name pos:line="179" pos:column="41">ref<pos:position pos:line="179" pos:column="44"/></name></expr>;<pos:position pos:line="179" pos:column="45"/></condition> <incr><expr><name pos:line="179" pos:column="46">ref<pos:position pos:line="179" pos:column="49"/></name> <operator pos:line="179" pos:column="50">=<pos:position pos:line="179" pos:column="51"/></operator> <name><name pos:line="179" pos:column="52">ref<pos:position pos:line="179" pos:column="55"/></name><operator pos:line="179" pos:column="55">-&gt;<pos:position pos:line="179" pos:column="60"/></operator><name pos:line="179" pos:column="57">next<pos:position pos:line="179" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="179" pos:column="62"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="180" pos:column="25">transport_update_tracking_ref<pos:position pos:line="180" pos:column="54"/></name><argument_list pos:line="180" pos:column="54">(<argument><expr><name pos:line="180" pos:column="55">remote<pos:position pos:line="180" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="63">ref<pos:position pos:line="180" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="180" pos:column="68">args<pos:position pos:line="180" pos:column="72"/></name><operator pos:line="180" pos:column="72">.<pos:position pos:line="180" pos:column="73"/></operator><name pos:line="180" pos:column="73">verbose<pos:position pos:line="180" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="180" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="82"/></expr_stmt></block></for>
	}<pos:position pos:line="181" pos:column="10"/></block></then></if>

	<if pos:line="183" pos:column="9">if <condition pos:line="183" pos:column="12">(<expr><operator pos:line="183" pos:column="13">!<pos:position pos:line="183" pos:column="14"/></operator><name pos:line="183" pos:column="14">ret<pos:position pos:line="183" pos:column="17"/></name> <operator pos:line="183" pos:column="18">&amp;&amp;<pos:position pos:line="183" pos:column="28"/></operator> <operator pos:line="183" pos:column="21">!<pos:position pos:line="183" pos:column="22"/></operator><call><name pos:line="183" pos:column="22">transport_refs_pushed<pos:position pos:line="183" pos:column="43"/></name><argument_list pos:line="183" pos:column="43">(<argument><expr><name pos:line="183" pos:column="44">remote_refs<pos:position pos:line="183" pos:column="55"/></name></expr></argument>)<pos:position pos:line="183" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="183" pos:column="57"/></condition><then pos:line="183" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="184" pos:column="17">fprintf<pos:position pos:line="184" pos:column="24"/></name><argument_list pos:line="184" pos:column="24">(<argument><expr><name pos:line="184" pos:column="25">stderr<pos:position pos:line="184" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="33">"Everything up-to-date\n"<pos:position pos:line="184" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="60"/></expr_stmt></block></then></if>

	<return pos:line="186" pos:column="9">return <expr><name pos:line="186" pos:column="16">ret<pos:position pos:line="186" pos:column="19"/></name></expr>;<pos:position pos:line="186" pos:column="20"/></return>
}<pos:position pos:line="187" pos:column="2"/></block></function></unit>

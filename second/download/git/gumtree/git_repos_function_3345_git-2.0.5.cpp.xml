<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3345_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">try_merge_command<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">strategy<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">size_t<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">xopts_nr<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier><modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">xopts<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="43">struct<pos:position pos:line="2" pos:column="49"/></name> <name pos:line="2" pos:column="50">commit_list<pos:position pos:line="2" pos:column="61"/></name></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">common<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="3" pos:column="23">const<pos:position pos:line="3" pos:column="28"/></specifier> <name pos:line="3" pos:column="29">char<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">head_arg<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="3" pos:column="45">struct<pos:position pos:line="3" pos:column="51"/></name> <name pos:line="3" pos:column="52">commit_list<pos:position pos:line="3" pos:column="63"/></name></name> <modifier pos:line="3" pos:column="64">*<pos:position pos:line="3" pos:column="65"/></modifier></type><name pos:line="3" pos:column="65">remotes<pos:position pos:line="3" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="73"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier><modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">args<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="20">x<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="27">ret<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">commit_list<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">j<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">buf<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><name pos:line="8" pos:column="29">STRBUF_INIT<pos:position pos:line="8" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">args<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">xmalloc<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">4<pos:position pos:line="10" pos:column="26"/></literal> <operator pos:line="10" pos:column="27">+<pos:position pos:line="10" pos:column="28"/></operator> <name pos:line="10" pos:column="29">xopts_nr<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">+<pos:position pos:line="10" pos:column="39"/></operator> <call><name pos:line="10" pos:column="40">commit_list_count<pos:position pos:line="10" pos:column="57"/></name><argument_list pos:line="10" pos:column="57">(<argument><expr><name pos:line="10" pos:column="58">common<pos:position pos:line="10" pos:column="64"/></name></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call> <operator pos:line="10" pos:column="66">+<pos:position pos:line="10" pos:column="67"/></operator>
			<call><name pos:line="11" pos:column="25">commit_list_count<pos:position pos:line="11" pos:column="42"/></name><argument_list pos:line="11" pos:column="42">(<argument><expr><name pos:line="11" pos:column="43">remotes<pos:position pos:line="11" pos:column="50"/></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call><operator pos:line="11" pos:column="51">)<pos:position pos:line="11" pos:column="52"/></operator> <operator pos:line="11" pos:column="53">*<pos:position pos:line="11" pos:column="54"/></operator> <sizeof pos:line="11" pos:column="55">sizeof<argument_list pos:line="11" pos:column="61">(<argument><expr><name pos:line="11" pos:column="62">char<pos:position pos:line="11" pos:column="66"/></name> <operator pos:line="11" pos:column="67">*<pos:position pos:line="11" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">strbuf_addf<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><operator pos:line="12" pos:column="21">&amp;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="22">buf<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="27">"merge-%s"<pos:position pos:line="12" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="39">strategy<pos:position pos:line="12" pos:column="47"/></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">args<pos:position pos:line="13" pos:column="13"/></name><index pos:line="13" pos:column="13">[<expr><name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">++<pos:position pos:line="13" pos:column="17"/></operator></expr>]<pos:position pos:line="13" pos:column="18"/></index></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <name><name pos:line="13" pos:column="21">buf<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">.<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">buf<pos:position pos:line="13" pos:column="28"/></name></name></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">x<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>;<pos:position pos:line="14" pos:column="20"/></init> <condition><expr><name pos:line="14" pos:column="21">x<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&lt;<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="25">xopts_nr<pos:position pos:line="14" pos:column="33"/></name></expr>;<pos:position pos:line="14" pos:column="34"/></condition> <incr><expr><name pos:line="14" pos:column="35">x<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">++<pos:position pos:line="14" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="39"/></control> <block pos:line="14" pos:column="40">{
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">char<pos:position pos:line="15" pos:column="21"/></name> <modifier pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></modifier></type><name pos:line="15" pos:column="23">s<pos:position pos:line="15" pos:column="24"/></name> <init pos:line="15" pos:column="25">= <expr><call><name pos:line="15" pos:column="27">xmalloc<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><call><name pos:line="15" pos:column="35">strlen<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><name><name pos:line="15" pos:column="42">xopts<pos:position pos:line="15" pos:column="47"/></name><index pos:line="15" pos:column="47">[<expr><name pos:line="15" pos:column="48">x<pos:position pos:line="15" pos:column="49"/></name></expr>]<pos:position pos:line="15" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call><operator pos:line="15" pos:column="51">+<pos:position pos:line="15" pos:column="52"/></operator><literal type="number" pos:line="15" pos:column="52">2<pos:position pos:line="15" pos:column="53"/></literal><operator pos:line="15" pos:column="53">+<pos:position pos:line="15" pos:column="54"/></operator><literal type="number" pos:line="15" pos:column="54">1<pos:position pos:line="15" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="57"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">strcpy<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">s<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="27">"--"<pos:position pos:line="16" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">strcpy<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">s<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">+<pos:position pos:line="17" pos:column="26"/></operator><literal type="number" pos:line="17" pos:column="26">2<pos:position pos:line="17" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="29">xopts<pos:position pos:line="17" pos:column="34"/></name><index pos:line="17" pos:column="34">[<expr><name pos:line="17" pos:column="35">x<pos:position pos:line="17" pos:column="36"/></name></expr>]<pos:position pos:line="17" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">args<pos:position pos:line="18" pos:column="21"/></name><index pos:line="18" pos:column="21">[<expr><name pos:line="18" pos:column="22">i<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">++<pos:position pos:line="18" pos:column="25"/></operator></expr>]<pos:position pos:line="18" pos:column="26"/></index></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">s<pos:position pos:line="18" pos:column="30"/></name></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></for>
	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">j<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">common<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></init> <condition><expr><name pos:line="20" pos:column="26">j<pos:position pos:line="20" pos:column="27"/></name></expr>;<pos:position pos:line="20" pos:column="28"/></condition> <incr><expr><name pos:line="20" pos:column="29">j<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">=<pos:position pos:line="20" pos:column="32"/></operator> <name><name pos:line="20" pos:column="33">j<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">-&gt;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="36">next<pos:position pos:line="20" pos:column="40"/></name></name></expr></incr>)<pos:position pos:line="20" pos:column="41"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="17">args<pos:position pos:line="21" pos:column="21"/></name><index pos:line="21" pos:column="21">[<expr><name pos:line="21" pos:column="22">i<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">++<pos:position pos:line="21" pos:column="25"/></operator></expr>]<pos:position pos:line="21" pos:column="26"/></index></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <call><name pos:line="21" pos:column="29">xstrdup<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><call><name pos:line="21" pos:column="37">merge_argument<pos:position pos:line="21" pos:column="51"/></name><argument_list pos:line="21" pos:column="51">(<argument><expr><name><name pos:line="21" pos:column="52">j<pos:position pos:line="21" pos:column="53"/></name><operator pos:line="21" pos:column="53">-&gt;<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="55">item<pos:position pos:line="21" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt></block></for>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">args<pos:position pos:line="22" pos:column="13"/></name><index pos:line="22" pos:column="13">[<expr><name pos:line="22" pos:column="14">i<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">++<pos:position pos:line="22" pos:column="17"/></operator></expr>]<pos:position pos:line="22" pos:column="18"/></index></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <literal type="string" pos:line="22" pos:column="21">"--"<pos:position pos:line="22" pos:column="25"/></literal></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">args<pos:position pos:line="23" pos:column="13"/></name><index pos:line="23" pos:column="13">[<expr><name pos:line="23" pos:column="14">i<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">++<pos:position pos:line="23" pos:column="17"/></operator></expr>]<pos:position pos:line="23" pos:column="18"/></index></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <name pos:line="23" pos:column="21">head_arg<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
	<for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><expr><name pos:line="24" pos:column="14">j<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">remotes<pos:position pos:line="24" pos:column="25"/></name></expr>;<pos:position pos:line="24" pos:column="26"/></init> <condition><expr><name pos:line="24" pos:column="27">j<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></condition> <incr><expr><name pos:line="24" pos:column="30">j<pos:position pos:line="24" pos:column="31"/></name> <operator pos:line="24" pos:column="32">=<pos:position pos:line="24" pos:column="33"/></operator> <name><name pos:line="24" pos:column="34">j<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-&gt;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="37">next<pos:position pos:line="24" pos:column="41"/></name></name></expr></incr>)<pos:position pos:line="24" pos:column="42"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="25" pos:column="17">args<pos:position pos:line="25" pos:column="21"/></name><index pos:line="25" pos:column="21">[<expr><name pos:line="25" pos:column="22">i<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">++<pos:position pos:line="25" pos:column="25"/></operator></expr>]<pos:position pos:line="25" pos:column="26"/></index></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <call><name pos:line="25" pos:column="29">xstrdup<pos:position pos:line="25" pos:column="36"/></name><argument_list pos:line="25" pos:column="36">(<argument><expr><call><name pos:line="25" pos:column="37">merge_argument<pos:position pos:line="25" pos:column="51"/></name><argument_list pos:line="25" pos:column="51">(<argument><expr><name><name pos:line="25" pos:column="52">j<pos:position pos:line="25" pos:column="53"/></name><operator pos:line="25" pos:column="53">-&gt;<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="55">item<pos:position pos:line="25" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt></block></for>
	<expr_stmt><expr><name><name pos:line="26" pos:column="9">args<pos:position pos:line="26" pos:column="13"/></name><index pos:line="26" pos:column="13">[<expr><name pos:line="26" pos:column="14">i<pos:position pos:line="26" pos:column="15"/></name></expr>]<pos:position pos:line="26" pos:column="16"/></index></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <name pos:line="26" pos:column="19">NULL<pos:position pos:line="26" pos:column="23"/></name></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="27" pos:column="9">ret<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <call><name pos:line="27" pos:column="15">run_command_v_opt<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">args<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="39">RUN_GIT_CMD<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">strbuf_release<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><operator pos:line="28" pos:column="24">&amp;<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="25">buf<pos:position pos:line="28" pos:column="28"/></name></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="29" pos:column="9">i<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <literal type="number" pos:line="29" pos:column="13">1<pos:position pos:line="29" pos:column="14"/></literal></expr>;<pos:position pos:line="29" pos:column="15"/></expr_stmt>
	<for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">x<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></init> <condition><expr><name pos:line="30" pos:column="21">x<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">&lt;<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="25">xopts_nr<pos:position pos:line="30" pos:column="33"/></name></expr>;<pos:position pos:line="30" pos:column="34"/></condition> <incr><expr><name pos:line="30" pos:column="35">x<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">++<pos:position pos:line="30" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="39"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">free<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><operator pos:line="31" pos:column="22">(<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="23">void<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">*<pos:position pos:line="31" pos:column="29"/></operator><operator pos:line="31" pos:column="29">)<pos:position pos:line="31" pos:column="30"/></operator><name><name pos:line="31" pos:column="30">args<pos:position pos:line="31" pos:column="34"/></name><index pos:line="31" pos:column="34">[<expr><name pos:line="31" pos:column="35">i<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">++<pos:position pos:line="31" pos:column="38"/></operator></expr>]<pos:position pos:line="31" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt></block></for>
	<for pos:line="32" pos:column="9">for <control pos:line="32" pos:column="13">(<init><expr><name pos:line="32" pos:column="14">j<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <name pos:line="32" pos:column="18">common<pos:position pos:line="32" pos:column="24"/></name></expr>;<pos:position pos:line="32" pos:column="25"/></init> <condition><expr><name pos:line="32" pos:column="26">j<pos:position pos:line="32" pos:column="27"/></name></expr>;<pos:position pos:line="32" pos:column="28"/></condition> <incr><expr><name pos:line="32" pos:column="29">j<pos:position pos:line="32" pos:column="30"/></name> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <name><name pos:line="32" pos:column="33">j<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">-&gt;<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="36">next<pos:position pos:line="32" pos:column="40"/></name></name></expr></incr>)<pos:position pos:line="32" pos:column="41"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">free<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><operator pos:line="33" pos:column="22">(<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="23">void<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">*<pos:position pos:line="33" pos:column="29"/></operator><operator pos:line="33" pos:column="29">)<pos:position pos:line="33" pos:column="30"/></operator><name><name pos:line="33" pos:column="30">args<pos:position pos:line="33" pos:column="34"/></name><index pos:line="33" pos:column="34">[<expr><name pos:line="33" pos:column="35">i<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">++<pos:position pos:line="33" pos:column="38"/></operator></expr>]<pos:position pos:line="33" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt></block></for>
	<expr_stmt><expr><name pos:line="34" pos:column="9">i<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">+=<pos:position pos:line="34" pos:column="13"/></operator> <literal type="number" pos:line="34" pos:column="14">2<pos:position pos:line="34" pos:column="15"/></literal></expr>;<pos:position pos:line="34" pos:column="16"/></expr_stmt>
	<for pos:line="35" pos:column="9">for <control pos:line="35" pos:column="13">(<init><expr><name pos:line="35" pos:column="14">j<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <name pos:line="35" pos:column="18">remotes<pos:position pos:line="35" pos:column="25"/></name></expr>;<pos:position pos:line="35" pos:column="26"/></init> <condition><expr><name pos:line="35" pos:column="27">j<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></condition> <incr><expr><name pos:line="35" pos:column="30">j<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">=<pos:position pos:line="35" pos:column="33"/></operator> <name><name pos:line="35" pos:column="34">j<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">-&gt;<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="37">next<pos:position pos:line="35" pos:column="41"/></name></name></expr></incr>)<pos:position pos:line="35" pos:column="42"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">free<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><operator pos:line="36" pos:column="22">(<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="23">void<pos:position pos:line="36" pos:column="27"/></name> <operator pos:line="36" pos:column="28">*<pos:position pos:line="36" pos:column="29"/></operator><operator pos:line="36" pos:column="29">)<pos:position pos:line="36" pos:column="30"/></operator><name><name pos:line="36" pos:column="30">args<pos:position pos:line="36" pos:column="34"/></name><index pos:line="36" pos:column="34">[<expr><name pos:line="36" pos:column="35">i<pos:position pos:line="36" pos:column="36"/></name><operator pos:line="36" pos:column="36">++<pos:position pos:line="36" pos:column="38"/></operator></expr>]<pos:position pos:line="36" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="36" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">free<pos:position pos:line="37" pos:column="13"/></name><argument_list pos:line="37" pos:column="13">(<argument><expr><name pos:line="37" pos:column="14">args<pos:position pos:line="37" pos:column="18"/></name></expr></argument>)<pos:position pos:line="37" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">discard_cache<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">()<pos:position pos:line="38" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="25"/></expr_stmt>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><call><name pos:line="39" pos:column="13">read_cache<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">()<pos:position pos:line="39" pos:column="25"/></argument_list></call> <operator pos:line="39" pos:column="26">&lt;<pos:position pos:line="39" pos:column="30"/></operator> <literal type="number" pos:line="39" pos:column="28">0<pos:position pos:line="39" pos:column="29"/></literal></expr>)<pos:position pos:line="39" pos:column="30"/></condition><then pos:line="39" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="17">die<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><call><name pos:line="40" pos:column="21">_<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><literal type="string" pos:line="40" pos:column="23">"failed to read the cache"<pos:position pos:line="40" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="52"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">resolve_undo_clear<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">()<pos:position pos:line="41" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="30"/></expr_stmt>

	<return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">ret<pos:position pos:line="43" pos:column="19"/></name></expr>;<pos:position pos:line="43" pos:column="20"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4421_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">read_config<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">loaded<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object_id<pos:position pos:line="4" pos:column="25"/></name></name></type> <name pos:line="4" pos:column="26">oid<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">flag<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">loaded<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
		<block type="pseudo"><return pos:line="8" pos:column="17">return;<pos:position pos:line="8" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="9" pos:column="9">loaded<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">1<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">current_branch<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">NULL<pos:position pos:line="11" pos:column="30"/></name></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">startup_info<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">have_repository<pos:position pos:line="12" pos:column="42"/></name></name></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43"> <block pos:line="12" pos:column="44">{
		<decl_stmt><decl><type><specifier pos:line="13" pos:column="17">const<pos:position pos:line="13" pos:column="22"/></specifier> <name pos:line="13" pos:column="23">char<pos:position pos:line="13" pos:column="27"/></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">head_ref<pos:position pos:line="13" pos:column="37"/></name> <init pos:line="13" pos:column="38">= <expr><call><name pos:line="13" pos:column="40">resolve_ref_unsafe<pos:position pos:line="13" pos:column="58"/></name><argument_list pos:line="13" pos:column="58">(<argument><expr><literal type="string" pos:line="13" pos:column="59">"HEAD"<pos:position pos:line="13" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="67">0<pos:position pos:line="13" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="70">oid<pos:position pos:line="13" pos:column="73"/></name><operator pos:line="13" pos:column="73">.<pos:position pos:line="13" pos:column="74"/></operator><name pos:line="13" pos:column="74">hash<pos:position pos:line="13" pos:column="78"/></name></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="80">&amp;<pos:position pos:line="13" pos:column="85"/></operator><name pos:line="13" pos:column="81">flag<pos:position pos:line="13" pos:column="85"/></name></expr></argument>)<pos:position pos:line="13" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="87"/></decl_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">head_ref<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">&amp;&amp;<pos:position pos:line="14" pos:column="40"/></operator> <operator pos:line="14" pos:column="33">(<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="34">flag<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">&amp;<pos:position pos:line="14" pos:column="44"/></operator> <name pos:line="14" pos:column="41">REF_ISSYMREF<pos:position pos:line="14" pos:column="53"/></name><operator pos:line="14" pos:column="53">)<pos:position pos:line="14" pos:column="54"/></operator> <operator pos:line="14" pos:column="55">&amp;&amp;<pos:position pos:line="14" pos:column="65"/></operator>
		    <call><name pos:line="15" pos:column="21">skip_prefix<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">head_ref<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="43">"refs/heads/"<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="58">&amp;<pos:position pos:line="15" pos:column="63"/></operator><name pos:line="15" pos:column="59">head_ref<pos:position pos:line="15" pos:column="67"/></name></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="69"/></condition><then pos:line="15" pos:column="69"> <block pos:line="15" pos:column="70">{
			<expr_stmt><expr><name pos:line="16" pos:column="25">current_branch<pos:position pos:line="16" pos:column="39"/></name> <operator pos:line="16" pos:column="40">=<pos:position pos:line="16" pos:column="41"/></operator> <call><name pos:line="16" pos:column="42">make_branch<pos:position pos:line="16" pos:column="53"/></name><argument_list pos:line="16" pos:column="53">(<argument><expr><name pos:line="16" pos:column="54">head_ref<pos:position pos:line="16" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="64">0<pos:position pos:line="16" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">git_config<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><name pos:line="19" pos:column="20">handle_config<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="35">NULL<pos:position pos:line="19" pos:column="39"/></name></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">alias_all_urls<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">()<pos:position pos:line="20" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_649_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">NORETURN<pos:position pos:line="1" pos:column="9"/></name>
<specifier pos:line="2" pos:column="1">static<pos:position pos:line="2" pos:column="7"/></specifier> <name pos:line="2" pos:column="8">void<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">die_bad_number<pos:position pos:line="2" pos:column="27"/></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">name<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">value<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type> <name pos:line="4" pos:column="22">error_type<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><ternary><condition><expr><operator pos:line="4" pos:column="35">(<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="36">errno<pos:position pos:line="4" pos:column="41"/></name> <operator pos:line="4" pos:column="42">==<pos:position pos:line="4" pos:column="44"/></operator> <name pos:line="4" pos:column="45">ERANGE<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">)<pos:position pos:line="4" pos:column="52"/></operator></expr>?<pos:position pos:line="4" pos:column="53"/></condition><then pos:line="4" pos:column="53"> <expr><call><name pos:line="4" pos:column="54">_<pos:position pos:line="4" pos:column="55"/></name><argument_list pos:line="4" pos:column="55">(<argument><expr><literal type="string" pos:line="4" pos:column="56">"out of range"<pos:position pos:line="4" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="71"/></argument_list></call></expr></then><else pos:line="4" pos:column="71">:<expr><call><name pos:line="4" pos:column="72">_<pos:position pos:line="4" pos:column="73"/></name><argument_list pos:line="4" pos:column="73">(<argument><expr><literal type="string" pos:line="4" pos:column="74">"invalid unit"<pos:position pos:line="4" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="89"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="90"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">value<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">value<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">=<pos:position pos:line="7" pos:column="24"/></operator> <literal type="string" pos:line="7" pos:column="25">""<pos:position pos:line="7" pos:column="27"/></literal></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt></block></then></if>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><operator pos:line="9" pos:column="14">(<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">cf<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">&amp;&amp;<pos:position pos:line="9" pos:column="28"/></operator> <name><name pos:line="9" pos:column="21">cf<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">-&gt;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="25">name<pos:position pos:line="9" pos:column="29"/></name></name><operator pos:line="9" pos:column="29">)<pos:position pos:line="9" pos:column="30"/></operator></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">die<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><call><name pos:line="10" pos:column="21">_<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><literal type="string" pos:line="10" pos:column="23">"bad numeric config value '%s' for '%s': %s"<pos:position pos:line="10" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr></argument>,
		    <argument><expr><name pos:line="11" pos:column="21">value<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">name<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">error_type<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt></block></then></if>

	<switch pos:line="13" pos:column="9">switch <condition pos:line="13" pos:column="16">(<expr><name><name pos:line="13" pos:column="17">cf<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">origin_type<pos:position pos:line="13" pos:column="32"/></name></name></expr>)<pos:position pos:line="13" pos:column="33"/></condition> <block pos:line="13" pos:column="34">{
	<case pos:line="14" pos:column="9">case <expr><name pos:line="14" pos:column="14">CONFIG_ORIGIN_BLOB<pos:position pos:line="14" pos:column="32"/></name></expr>:<pos:position pos:line="14" pos:column="33"/></case>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">die<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><call><name pos:line="15" pos:column="21">_<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><literal type="string" pos:line="15" pos:column="23">"bad numeric config value '%s' for '%s' in blob %s: %s"<pos:position pos:line="15" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="79"/></argument_list></call></expr></argument>,
		    <argument><expr><name pos:line="16" pos:column="21">value<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="28">name<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="34">cf<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">name<pos:position pos:line="16" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">error_type<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
	<case pos:line="17" pos:column="9">case <expr><name pos:line="17" pos:column="14">CONFIG_ORIGIN_FILE<pos:position pos:line="17" pos:column="32"/></name></expr>:<pos:position pos:line="17" pos:column="33"/></case>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">die<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><call><name pos:line="18" pos:column="21">_<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><literal type="string" pos:line="18" pos:column="23">"bad numeric config value '%s' for '%s' in file %s: %s"<pos:position pos:line="18" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="79"/></argument_list></call></expr></argument>,
		    <argument><expr><name pos:line="19" pos:column="21">value<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">name<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="34">cf<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">-&gt;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="38">name<pos:position pos:line="19" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="44">error_type<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
	<case pos:line="20" pos:column="9">case <expr><name pos:line="20" pos:column="14">CONFIG_ORIGIN_STDIN<pos:position pos:line="20" pos:column="33"/></name></expr>:<pos:position pos:line="20" pos:column="34"/></case>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">die<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><call><name pos:line="21" pos:column="21">_<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><literal type="string" pos:line="21" pos:column="23">"bad numeric config value '%s' for '%s' in standard input: %s"<pos:position pos:line="21" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="86"/></argument_list></call></expr></argument>,
		    <argument><expr><name pos:line="22" pos:column="21">value<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="28">name<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">error_type<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>
	<case pos:line="23" pos:column="9">case <expr><name pos:line="23" pos:column="14">CONFIG_ORIGIN_SUBMODULE_BLOB<pos:position pos:line="23" pos:column="42"/></name></expr>:<pos:position pos:line="23" pos:column="43"/></case>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">die<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><call><name pos:line="24" pos:column="21">_<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><literal type="string" pos:line="24" pos:column="23">"bad numeric config value '%s' for '%s' in submodule-blob %s: %s"<pos:position pos:line="24" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="89"/></argument_list></call></expr></argument>,
		    <argument><expr><name pos:line="25" pos:column="21">value<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">name<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="34">cf<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">name<pos:position pos:line="25" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">error_type<pos:position pos:line="25" pos:column="54"/></name></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="56"/></expr_stmt>
	<case pos:line="26" pos:column="9">case <expr><name pos:line="26" pos:column="14">CONFIG_ORIGIN_CMDLINE<pos:position pos:line="26" pos:column="35"/></name></expr>:<pos:position pos:line="26" pos:column="36"/></case>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">die<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><call><name pos:line="27" pos:column="21">_<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><literal type="string" pos:line="27" pos:column="23">"bad numeric config value '%s' for '%s' in command line %s: %s"<pos:position pos:line="27" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="87"/></argument_list></call></expr></argument>,
		    <argument><expr><name pos:line="28" pos:column="21">value<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="28">name<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="34">cf<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">-&gt;<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="38">name<pos:position pos:line="28" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="44">error_type<pos:position pos:line="28" pos:column="54"/></name></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="56"/></expr_stmt>
	<default pos:line="29" pos:column="9">default:<pos:position pos:line="29" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">die<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><call><name pos:line="30" pos:column="21">_<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><literal type="string" pos:line="30" pos:column="23">"bad numeric config value '%s' for '%s' in %s: %s"<pos:position pos:line="30" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr></argument>,
		    <argument><expr><name pos:line="31" pos:column="21">value<pos:position pos:line="31" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="28">name<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="34">cf<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">-&gt;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="38">name<pos:position pos:line="31" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">error_type<pos:position pos:line="31" pos:column="54"/></name></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></switch>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

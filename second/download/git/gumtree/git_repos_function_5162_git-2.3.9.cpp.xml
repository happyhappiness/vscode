<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5162_git-2.3.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_ref_states<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">ref<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">remote_refs<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="58">struct<pos:position pos:line="1" pos:column="64"/></name> <name pos:line="1" pos:column="65">ref_states<pos:position pos:line="1" pos:column="75"/></name></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">states<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">ref<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">fetch_map<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><name pos:line="3" pos:column="33">NULL<pos:position pos:line="3" pos:column="37"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier><modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="41">tail<pos:position pos:line="3" pos:column="45"/></name> <init pos:line="3" pos:column="46">= <expr><operator pos:line="3" pos:column="48">&amp;<pos:position pos:line="3" pos:column="53"/></operator><name pos:line="3" pos:column="49">fetch_map<pos:position pos:line="3" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ref<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">ref<pos:position pos:line="4" pos:column="24"/></name></decl>, <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="27">stale_refs<pos:position pos:line="4" pos:column="37"/></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <name><name pos:line="7" pos:column="25">states<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">remote<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">-&gt;<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="41">fetch_refspec_nr<pos:position pos:line="7" pos:column="57"/></name></name></expr>;<pos:position pos:line="7" pos:column="58"/></condition> <incr><expr><name pos:line="7" pos:column="59">i<pos:position pos:line="7" pos:column="60"/></name><operator pos:line="7" pos:column="60">++<pos:position pos:line="7" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="63"/></control>
		<block type="pseudo"><if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><call><name pos:line="8" pos:column="21">get_fetch_map<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">remote_refs<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="48">states<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">-&gt;<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="56">remote<pos:position pos:line="8" pos:column="62"/></name><operator pos:line="8" pos:column="62">-&gt;<pos:position pos:line="8" pos:column="67"/></operator><name pos:line="8" pos:column="64">fetch<pos:position pos:line="8" pos:column="69"/></name></name> <operator pos:line="8" pos:column="70">+<pos:position pos:line="8" pos:column="71"/></operator> <name pos:line="8" pos:column="72">i<pos:position pos:line="8" pos:column="73"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="75">&amp;<pos:position pos:line="8" pos:column="80"/></operator><name pos:line="8" pos:column="76">tail<pos:position pos:line="8" pos:column="80"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="82">1<pos:position pos:line="8" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="85"/></condition><then pos:line="8" pos:column="85">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="25">die<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><call><name pos:line="9" pos:column="29">_<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><literal type="string" pos:line="9" pos:column="31">"Could not get fetch map for refspec %s"<pos:position pos:line="9" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="10" pos:column="33">states<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">remote<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">-&gt;<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="49">fetch_refspec<pos:position pos:line="10" pos:column="62"/></name><index pos:line="10" pos:column="62">[<expr><name pos:line="10" pos:column="63">i<pos:position pos:line="10" pos:column="64"/></name></expr>]<pos:position pos:line="10" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="67"/></expr_stmt></block></then></if></block></for>

	<expr_stmt><expr><name><name pos:line="12" pos:column="9">states<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator></name><operator pos:line="12" pos:column="17">new<pos:position pos:line="12" pos:column="20"/></operator><operator pos:line="12" pos:column="20">.<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">strdup_strings<pos:position pos:line="12" pos:column="35"/></name> <operator pos:line="12" pos:column="36">=<pos:position pos:line="12" pos:column="37"/></operator> <literal type="number" pos:line="12" pos:column="38">1<pos:position pos:line="12" pos:column="39"/></literal></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">states<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">tracked<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">.<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">strdup_strings<pos:position pos:line="13" pos:column="39"/></name></name> <operator pos:line="13" pos:column="40">=<pos:position pos:line="13" pos:column="41"/></operator> <literal type="number" pos:line="13" pos:column="42">1<pos:position pos:line="13" pos:column="43"/></literal></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">states<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">stale<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">.<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="23">strdup_strings<pos:position pos:line="14" pos:column="37"/></name></name> <operator pos:line="14" pos:column="38">=<pos:position pos:line="14" pos:column="39"/></operator> <literal type="number" pos:line="14" pos:column="40">1<pos:position pos:line="14" pos:column="41"/></literal></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">ref<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">fetch_map<pos:position pos:line="15" pos:column="29"/></name></expr>;<pos:position pos:line="15" pos:column="30"/></init> <condition><expr><name pos:line="15" pos:column="31">ref<pos:position pos:line="15" pos:column="34"/></name></expr>;<pos:position pos:line="15" pos:column="35"/></condition> <incr><expr><name pos:line="15" pos:column="36">ref<pos:position pos:line="15" pos:column="39"/></name> <operator pos:line="15" pos:column="40">=<pos:position pos:line="15" pos:column="41"/></operator> <name><name pos:line="15" pos:column="42">ref<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">-&gt;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="47">next<pos:position pos:line="15" pos:column="51"/></name></name></expr></incr>)<pos:position pos:line="15" pos:column="52"/></control> <block pos:line="15" pos:column="53">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><name><name pos:line="16" pos:column="22">ref<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">peer_ref<pos:position pos:line="16" pos:column="35"/></name></name> <operator pos:line="16" pos:column="36">||<pos:position pos:line="16" pos:column="38"/></operator> <operator pos:line="16" pos:column="39">!<pos:position pos:line="16" pos:column="40"/></operator><call><name pos:line="16" pos:column="40">ref_exists<pos:position pos:line="16" pos:column="50"/></name><argument_list pos:line="16" pos:column="50">(<argument><expr><name><name pos:line="16" pos:column="51">ref<pos:position pos:line="16" pos:column="54"/></name><operator pos:line="16" pos:column="54">-&gt;<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="56">peer_ref<pos:position pos:line="16" pos:column="64"/></name><operator pos:line="16" pos:column="64">-&gt;<pos:position pos:line="16" pos:column="69"/></operator><name pos:line="16" pos:column="66">name<pos:position pos:line="16" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="72"/></condition><then pos:line="16" pos:column="72">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">string_list_append<pos:position pos:line="17" pos:column="43"/></name><argument_list pos:line="17" pos:column="43">(<argument><expr><operator pos:line="17" pos:column="44">&amp;<pos:position pos:line="17" pos:column="49"/></operator><name><name pos:line="17" pos:column="45">states<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">-&gt;<pos:position pos:line="17" pos:column="56"/></operator></name><operator pos:line="17" pos:column="53">new<pos:position pos:line="17" pos:column="56"/></operator></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="58">abbrev_branch<pos:position pos:line="17" pos:column="71"/></name><argument_list pos:line="17" pos:column="71">(<argument><expr><name><name pos:line="17" pos:column="72">ref<pos:position pos:line="17" pos:column="75"/></name><operator pos:line="17" pos:column="75">-&gt;<pos:position pos:line="17" pos:column="80"/></operator><name pos:line="17" pos:column="77">name<pos:position pos:line="17" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="84"/></expr_stmt></block></then>
		<else pos:line="18" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">string_list_append<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><operator pos:line="19" pos:column="44">&amp;<pos:position pos:line="19" pos:column="49"/></operator><name><name pos:line="19" pos:column="45">states<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">-&gt;<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="53">tracked<pos:position pos:line="19" pos:column="60"/></name></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="62">abbrev_branch<pos:position pos:line="19" pos:column="75"/></name><argument_list pos:line="19" pos:column="75">(<argument><expr><name><name pos:line="19" pos:column="76">ref<pos:position pos:line="19" pos:column="79"/></name><operator pos:line="19" pos:column="79">-&gt;<pos:position pos:line="19" pos:column="84"/></operator><name pos:line="19" pos:column="81">name<pos:position pos:line="19" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="88"/></expr_stmt></block></else></if>
	}<pos:position pos:line="20" pos:column="10"/></block></for>
	<expr_stmt><expr><name pos:line="21" pos:column="9">stale_refs<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <call><name pos:line="21" pos:column="22">get_stale_heads<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><name><name pos:line="21" pos:column="38">states<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">remote<pos:position pos:line="21" pos:column="52"/></name><operator pos:line="21" pos:column="52">-&gt;<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="54">fetch<pos:position pos:line="21" pos:column="59"/></name></name></expr></argument>,
				     <argument><expr><name><name pos:line="22" pos:column="38">states<pos:position pos:line="22" pos:column="44"/></name><operator pos:line="22" pos:column="44">-&gt;<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="46">remote<pos:position pos:line="22" pos:column="52"/></name><operator pos:line="22" pos:column="52">-&gt;<pos:position pos:line="22" pos:column="57"/></operator><name pos:line="22" pos:column="54">fetch_refspec_nr<pos:position pos:line="22" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="72">fetch_map<pos:position pos:line="22" pos:column="81"/></name></expr></argument>)<pos:position pos:line="22" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="83"/></expr_stmt>
	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">ref<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">stale_refs<pos:position pos:line="23" pos:column="30"/></name></expr>;<pos:position pos:line="23" pos:column="31"/></init> <condition><expr><name pos:line="23" pos:column="32">ref<pos:position pos:line="23" pos:column="35"/></name></expr>;<pos:position pos:line="23" pos:column="36"/></condition> <incr><expr><name pos:line="23" pos:column="37">ref<pos:position pos:line="23" pos:column="40"/></name> <operator pos:line="23" pos:column="41">=<pos:position pos:line="23" pos:column="42"/></operator> <name><name pos:line="23" pos:column="43">ref<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">-&gt;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="48">next<pos:position pos:line="23" pos:column="52"/></name></name></expr></incr>)<pos:position pos:line="23" pos:column="53"/></control> <block pos:line="23" pos:column="54">{
		<decl_stmt><decl><type><name><name pos:line="24" pos:column="17">struct<pos:position pos:line="24" pos:column="23"/></name> <name pos:line="24" pos:column="24">string_list_item<pos:position pos:line="24" pos:column="40"/></name></name> <modifier pos:line="24" pos:column="41">*<pos:position pos:line="24" pos:column="42"/></modifier></type><name pos:line="24" pos:column="42">item<pos:position pos:line="24" pos:column="46"/></name> <init pos:line="24" pos:column="47">=
			<expr><call><name pos:line="25" pos:column="25">string_list_append<pos:position pos:line="25" pos:column="43"/></name><argument_list pos:line="25" pos:column="43">(<argument><expr><operator pos:line="25" pos:column="44">&amp;<pos:position pos:line="25" pos:column="49"/></operator><name><name pos:line="25" pos:column="45">states<pos:position pos:line="25" pos:column="51"/></name><operator pos:line="25" pos:column="51">-&gt;<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="53">stale<pos:position pos:line="25" pos:column="58"/></name></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="60">abbrev_branch<pos:position pos:line="25" pos:column="73"/></name><argument_list pos:line="25" pos:column="73">(<argument><expr><name><name pos:line="25" pos:column="74">ref<pos:position pos:line="25" pos:column="77"/></name><operator pos:line="25" pos:column="77">-&gt;<pos:position pos:line="25" pos:column="82"/></operator><name pos:line="25" pos:column="79">name<pos:position pos:line="25" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="85"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="86"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">item<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">util<pos:position pos:line="26" pos:column="27"/></name></name> <operator pos:line="26" pos:column="28">=<pos:position pos:line="26" pos:column="29"/></operator> <call><name pos:line="26" pos:column="30">xstrdup<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><name><name pos:line="26" pos:column="38">ref<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">name<pos:position pos:line="26" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">free_refs<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><name pos:line="28" pos:column="19">stale_refs<pos:position pos:line="28" pos:column="29"/></name></expr></argument>)<pos:position pos:line="28" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">free_refs<pos:position pos:line="29" pos:column="18"/></name><argument_list pos:line="29" pos:column="18">(<argument><expr><name pos:line="29" pos:column="19">fetch_map<pos:position pos:line="29" pos:column="28"/></name></expr></argument>)<pos:position pos:line="29" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">string_list_sort<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><operator pos:line="31" pos:column="26">&amp;<pos:position pos:line="31" pos:column="31"/></operator><name><name pos:line="31" pos:column="27">states<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">-&gt;<pos:position pos:line="31" pos:column="38"/></operator></name><operator pos:line="31" pos:column="35">new<pos:position pos:line="31" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">string_list_sort<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><operator pos:line="32" pos:column="26">&amp;<pos:position pos:line="32" pos:column="31"/></operator><name><name pos:line="32" pos:column="27">states<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">-&gt;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="35">tracked<pos:position pos:line="32" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">string_list_sort<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><operator pos:line="33" pos:column="26">&amp;<pos:position pos:line="33" pos:column="31"/></operator><name><name pos:line="33" pos:column="27">states<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">-&gt;<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="35">stale<pos:position pos:line="33" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>

	<return pos:line="35" pos:column="9">return <expr><literal type="number" pos:line="35" pos:column="16">0<pos:position pos:line="35" pos:column="17"/></literal></expr>;<pos:position pos:line="35" pos:column="18"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

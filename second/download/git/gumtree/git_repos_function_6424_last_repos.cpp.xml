<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6424_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">should_pack_ref<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">refname<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,
			   <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name><name pos:line="2" pos:column="34">struct<pos:position pos:line="2" pos:column="40"/></name> <name pos:line="2" pos:column="41">object_id<pos:position pos:line="2" pos:column="50"/></name></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">oid<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">unsigned<pos:position pos:line="2" pos:column="65"/></name> <name pos:line="2" pos:column="66">int<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">ref_flags<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="3" pos:column="28">unsigned<pos:position pos:line="3" pos:column="36"/></name> <name pos:line="3" pos:column="37">int<pos:position pos:line="3" pos:column="40"/></name></type> <name pos:line="3" pos:column="41">pack_flags<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<comment type="block" pos:line="5" pos:column="9">/* Do not pack per-worktree refs: */</comment>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">ref_type<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">refname<pos:position pos:line="6" pos:column="29"/></name></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></call> <operator pos:line="6" pos:column="31">!=<pos:position pos:line="6" pos:column="33"/></operator> <name pos:line="6" pos:column="34">REF_TYPE_NORMAL<pos:position pos:line="6" pos:column="49"/></name></expr>)<pos:position pos:line="6" pos:column="50"/></condition><then pos:line="6" pos:column="50">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr>;<pos:position pos:line="7" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="9" pos:column="9">/* Do not pack non-tags unless PACK_REFS_ALL is set: */</comment>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">pack_flags<pos:position pos:line="10" pos:column="25"/></name> <operator pos:line="10" pos:column="26">&amp;<pos:position pos:line="10" pos:column="31"/></operator> <name pos:line="10" pos:column="28">PACK_REFS_ALL<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">)<pos:position pos:line="10" pos:column="42"/></operator> <operator pos:line="10" pos:column="43">&amp;&amp;<pos:position pos:line="10" pos:column="53"/></operator> <operator pos:line="10" pos:column="46">!<pos:position pos:line="10" pos:column="47"/></operator><call><name pos:line="10" pos:column="47">starts_with<pos:position pos:line="10" pos:column="58"/></name><argument_list pos:line="10" pos:column="58">(<argument><expr><name pos:line="10" pos:column="59">refname<pos:position pos:line="10" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="68">"refs/tags/"<pos:position pos:line="10" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="82"/></condition><then pos:line="10" pos:column="82">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="13" pos:column="9">/* Do not pack symbolic refs: */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">ref_flags<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&amp;<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="25">REF_ISSYMREF<pos:position pos:line="14" pos:column="37"/></name></expr>)<pos:position pos:line="14" pos:column="38"/></condition><then pos:line="14" pos:column="38">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="17" pos:column="9">/* Do not pack broken refs: */</comment>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><call><name pos:line="18" pos:column="14">ref_resolves_to_object<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">refname<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="46">oid<pos:position pos:line="18" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="51">ref_flags<pos:position pos:line="18" pos:column="60"/></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="62"/></condition><then pos:line="18" pos:column="62">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></return></block></then></if>

	<return pos:line="21" pos:column="9">return <expr><literal type="number" pos:line="21" pos:column="16">1<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

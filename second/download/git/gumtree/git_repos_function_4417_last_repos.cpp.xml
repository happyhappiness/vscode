<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4417_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">read_remotes_file<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">remote<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">remote<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">buf<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">STRBUF_INIT<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">FILE<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">f<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">fopen_or_warn<pos:position pos:line="4" pos:column="32"/></name><argument_list pos:line="4" pos:column="32">(<argument><expr><call><name pos:line="4" pos:column="33">git_path<pos:position pos:line="4" pos:column="41"/></name><argument_list pos:line="4" pos:column="41">(<argument><expr><literal type="string" pos:line="4" pos:column="42">"remotes/%s"<pos:position pos:line="4" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="56">remote<pos:position pos:line="4" pos:column="62"/></name><operator pos:line="4" pos:column="62">-&gt;<pos:position pos:line="4" pos:column="67"/></operator><name pos:line="4" pos:column="64">name<pos:position pos:line="4" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="71">"r"<pos:position pos:line="4" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="76"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">f<pos:position pos:line="6" pos:column="15"/></name></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16">
		<block type="pseudo"><return pos:line="7" pos:column="17">return;<pos:position pos:line="7" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">remote<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">configured_in_repo<pos:position pos:line="8" pos:column="35"/></name></name> <operator pos:line="8" pos:column="36">=<pos:position pos:line="8" pos:column="37"/></operator> <literal type="number" pos:line="8" pos:column="38">1<pos:position pos:line="8" pos:column="39"/></literal></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">remote<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">origin<pos:position pos:line="9" pos:column="23"/></name></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="26">REMOTE_REMOTES<pos:position pos:line="9" pos:column="40"/></name></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><call><name pos:line="10" pos:column="16">strbuf_getline<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><operator pos:line="10" pos:column="31">&amp;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="32">buf<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="37">f<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call> <operator pos:line="10" pos:column="40">!=<pos:position pos:line="10" pos:column="42"/></operator> <name pos:line="10" pos:column="43">EOF<pos:position pos:line="10" pos:column="46"/></name></expr>)<pos:position pos:line="10" pos:column="47"/></condition> <block pos:line="10" pos:column="48">{
		<decl_stmt><decl><type><specifier pos:line="11" pos:column="17">const<pos:position pos:line="11" pos:column="22"/></specifier> <name pos:line="11" pos:column="23">char<pos:position pos:line="11" pos:column="27"/></name> <modifier pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></modifier></type><name pos:line="11" pos:column="29">v<pos:position pos:line="11" pos:column="30"/></name></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="13" pos:column="17">strbuf_rtrim<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><operator pos:line="13" pos:column="30">&amp;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="31">buf<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><call><name pos:line="15" pos:column="21">skip_prefix<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name><name pos:line="15" pos:column="33">buf<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">.<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="37">buf<pos:position pos:line="15" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="42">"URL:"<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="50">&amp;<pos:position pos:line="15" pos:column="55"/></operator><name pos:line="15" pos:column="51">v<pos:position pos:line="15" pos:column="52"/></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="54"/></condition><then pos:line="15" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">add_url_alias<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">remote<pos:position pos:line="16" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="47">xstrdup<pos:position pos:line="16" pos:column="54"/></name><argument_list pos:line="16" pos:column="54">(<argument><expr><call><name pos:line="16" pos:column="55">skip_spaces<pos:position pos:line="16" pos:column="66"/></name><argument_list pos:line="16" pos:column="66">(<argument><expr><name pos:line="16" pos:column="67">v<pos:position pos:line="16" pos:column="68"/></name></expr></argument>)<pos:position pos:line="16" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="72"/></expr_stmt></block></then>
		<elseif pos:line="17" pos:column="17">else <if pos:line="17" pos:column="22">if <condition pos:line="17" pos:column="25">(<expr><call><name pos:line="17" pos:column="26">skip_prefix<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name><name pos:line="17" pos:column="38">buf<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">.<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="42">buf<pos:position pos:line="17" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="47">"Push:"<pos:position pos:line="17" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="56">&amp;<pos:position pos:line="17" pos:column="61"/></operator><name pos:line="17" pos:column="57">v<pos:position pos:line="17" pos:column="58"/></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="60"/></condition><then pos:line="17" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="25">add_push_refspec<pos:position pos:line="18" pos:column="41"/></name><argument_list pos:line="18" pos:column="41">(<argument><expr><name pos:line="18" pos:column="42">remote<pos:position pos:line="18" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="50">xstrdup<pos:position pos:line="18" pos:column="57"/></name><argument_list pos:line="18" pos:column="57">(<argument><expr><call><name pos:line="18" pos:column="58">skip_spaces<pos:position pos:line="18" pos:column="69"/></name><argument_list pos:line="18" pos:column="69">(<argument><expr><name pos:line="18" pos:column="70">v<pos:position pos:line="18" pos:column="71"/></name></expr></argument>)<pos:position pos:line="18" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="75"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="19" pos:column="17">else <if pos:line="19" pos:column="22">if <condition pos:line="19" pos:column="25">(<expr><call><name pos:line="19" pos:column="26">skip_prefix<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name><name pos:line="19" pos:column="38">buf<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">.<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">buf<pos:position pos:line="19" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="47">"Pull:"<pos:position pos:line="19" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="56">&amp;<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="57">v<pos:position pos:line="19" pos:column="58"/></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="60"/></condition><then pos:line="19" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="25">add_fetch_refspec<pos:position pos:line="20" pos:column="42"/></name><argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">remote<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="51">xstrdup<pos:position pos:line="20" pos:column="58"/></name><argument_list pos:line="20" pos:column="58">(<argument><expr><call><name pos:line="20" pos:column="59">skip_spaces<pos:position pos:line="20" pos:column="70"/></name><argument_list pos:line="20" pos:column="70">(<argument><expr><name pos:line="20" pos:column="71">v<pos:position pos:line="20" pos:column="72"/></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="76"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="21" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">strbuf_release<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><operator pos:line="22" pos:column="24">&amp;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="25">buf<pos:position pos:line="22" pos:column="28"/></name></expr></argument>)<pos:position pos:line="22" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">fclose<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">f<pos:position pos:line="23" pos:column="17"/></name></expr></argument>)<pos:position pos:line="23" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

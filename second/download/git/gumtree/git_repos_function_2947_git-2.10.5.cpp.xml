<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2947_git-2.10.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">rename_ref_available<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">oldname<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">newname<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">string_list<pos:position pos:line="3" pos:column="27"/></name></name></type> <name pos:line="3" pos:column="28">skip<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name pos:line="3" pos:column="35">STRING_LIST_INIT_NODUP<pos:position pos:line="3" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">err<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">ret<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">string_list_insert<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><operator pos:line="7" pos:column="28">&amp;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="29">skip<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="35">oldname<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">ret<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <operator pos:line="8" pos:column="15">!<pos:position pos:line="8" pos:column="16"/></operator><call><name pos:line="8" pos:column="16">verify_refname_available<pos:position pos:line="8" pos:column="40"/></name><argument_list pos:line="8" pos:column="40">(<argument><expr><name pos:line="8" pos:column="41">newname<pos:position pos:line="8" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="50">NULL<pos:position pos:line="8" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="56">&amp;<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="57">skip<pos:position pos:line="8" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="63">&amp;<pos:position pos:line="8" pos:column="68"/></operator><name pos:line="8" pos:column="64">err<pos:position pos:line="8" pos:column="67"/></name></expr></argument>)<pos:position pos:line="8" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="69"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">ret<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">error<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><literal type="string" pos:line="10" pos:column="23">"%s"<pos:position pos:line="10" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="29">err<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">.<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">buf<pos:position pos:line="10" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">string_list_clear<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><operator pos:line="12" pos:column="27">&amp;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="28">skip<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="34">0<pos:position pos:line="12" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">strbuf_release<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><operator pos:line="13" pos:column="24">&amp;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="25">err<pos:position pos:line="13" pos:column="28"/></name></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
	<return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">ret<pos:position pos:line="14" pos:column="19"/></name></expr>;<pos:position pos:line="14" pos:column="20"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

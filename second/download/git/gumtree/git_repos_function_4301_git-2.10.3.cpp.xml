<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4301_git-2.10.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">create_tag<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">unsigned<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">object<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">tag<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
		       <parameter><decl><type><name><name pos:line="2" pos:column="24">struct<pos:position pos:line="2" pos:column="30"/></name> <name pos:line="2" pos:column="31">strbuf<pos:position pos:line="2" pos:column="37"/></name></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">buf<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="44">struct<pos:position pos:line="2" pos:column="50"/></name> <name pos:line="2" pos:column="51">create_tag_options<pos:position pos:line="2" pos:column="69"/></name></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">opt<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>,
		       <parameter><decl><type><name pos:line="3" pos:column="24">unsigned<pos:position pos:line="3" pos:column="32"/></name> <name pos:line="3" pos:column="33">char<pos:position pos:line="3" pos:column="37"/></name> <modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier></type><name pos:line="3" pos:column="39">prev<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="45">unsigned<pos:position pos:line="3" pos:column="53"/></name> <name pos:line="3" pos:column="54">char<pos:position pos:line="3" pos:column="58"/></name> <modifier pos:line="3" pos:column="59">*<pos:position pos:line="3" pos:column="60"/></modifier></type><name pos:line="3" pos:column="60">result<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="67"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">enum<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">object_type<pos:position pos:line="5" pos:column="25"/></name></name></type> <name pos:line="5" pos:column="26">type<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">header_buf<pos:position pos:line="6" pos:column="24"/></name><index pos:line="6" pos:column="24">[<expr><literal type="number" pos:line="6" pos:column="25">1024<pos:position pos:line="6" pos:column="29"/></literal></expr>]<pos:position pos:line="6" pos:column="30"/></index></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">header_len<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">path<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><name pos:line="8" pos:column="22">NULL<pos:position pos:line="8" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">type<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">sha1_object_info<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">object<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">NULL<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">type<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">&lt;=<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="21">OBJ_NONE<pos:position pos:line="11" pos:column="29"/></name></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="13">die<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><call><name pos:line="12" pos:column="17">_<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><literal type="string" pos:line="12" pos:column="19">"bad object type."<pos:position pos:line="12" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">header_len<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <call><name pos:line="14" pos:column="22">snprintf<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">header_buf<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="43">sizeof<argument_list pos:line="14" pos:column="49">(<argument><expr><name pos:line="14" pos:column="50">header_buf<pos:position pos:line="14" pos:column="60"/></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></sizeof></expr></argument>,
			  <argument><expr><literal type="string" pos:line="15" pos:column="27">"object %s\n"<pos:position pos:line="15" pos:column="40"/></literal>
			  <literal type="string" pos:line="16" pos:column="27">"type %s\n"<pos:position pos:line="16" pos:column="38"/></literal>
			  <literal type="string" pos:line="17" pos:column="27">"tag %s\n"<pos:position pos:line="17" pos:column="37"/></literal>
			  <literal type="string" pos:line="18" pos:column="27">"tagger %s\n\n"<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>,
			  <argument><expr><call><name pos:line="19" pos:column="27">sha1_to_hex<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><name pos:line="19" pos:column="39">object<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr></argument>,
			  <argument><expr><name><typename pos:line="20" pos:column="27">typename<pos:position pos:line="20" pos:column="35"/></typename></name><operator pos:line="20" pos:column="35">(<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">type<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">)<pos:position pos:line="20" pos:column="41"/></operator></expr></argument>,
			  <argument><expr><name pos:line="21" pos:column="27">tag<pos:position pos:line="21" pos:column="30"/></name></expr></argument>,
			  <argument><expr><call><name pos:line="22" pos:column="27">git_committer_info<pos:position pos:line="22" pos:column="45"/></name><argument_list pos:line="22" pos:column="45">(<argument><expr><name pos:line="22" pos:column="46">IDENT_STRICT<pos:position pos:line="22" pos:column="58"/></name></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">header_len<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">&gt;<pos:position pos:line="24" pos:column="28"/></operator> <sizeof pos:line="24" pos:column="26">sizeof<argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">header_buf<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></sizeof> <operator pos:line="24" pos:column="45">-<pos:position pos:line="24" pos:column="46"/></operator> <literal type="number" pos:line="24" pos:column="47">1<pos:position pos:line="24" pos:column="48"/></literal></expr>)<pos:position pos:line="24" pos:column="49"/></condition><then pos:line="24" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">die<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><call><name pos:line="25" pos:column="21">_<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><literal type="string" pos:line="25" pos:column="23">"tag header too big."<pos:position pos:line="25" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="47"/></expr_stmt></block></then></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><name><name pos:line="27" pos:column="14">opt<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">message_given<pos:position pos:line="27" pos:column="32"/></name></name></expr>)<pos:position pos:line="27" pos:column="33"/></condition><then pos:line="27" pos:column="33"> <block pos:line="27" pos:column="34">{
		<decl_stmt><decl><type><name pos:line="28" pos:column="17">int<pos:position pos:line="28" pos:column="20"/></name></type> <name pos:line="28" pos:column="21">fd<pos:position pos:line="28" pos:column="23"/></name></decl>;<pos:position pos:line="28" pos:column="24"/></decl_stmt>

		<comment type="block" pos:line="30" pos:column="17">/* write the template message before editing: */</comment>
		<expr_stmt><expr><name pos:line="31" pos:column="17">path<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <call><name pos:line="31" pos:column="24">git_pathdup<pos:position pos:line="31" pos:column="35"/></name><argument_list pos:line="31" pos:column="35">(<argument><expr><literal type="string" pos:line="31" pos:column="36">"TAG_EDITMSG"<pos:position pos:line="31" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="32" pos:column="17">fd<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <call><name pos:line="32" pos:column="22">open<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">path<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="33">O_CREAT<pos:position pos:line="32" pos:column="40"/></name> <operator pos:line="32" pos:column="41">|<pos:position pos:line="32" pos:column="42"/></operator> <name pos:line="32" pos:column="43">O_TRUNC<pos:position pos:line="32" pos:column="50"/></name> <operator pos:line="32" pos:column="51">|<pos:position pos:line="32" pos:column="52"/></operator> <name pos:line="32" pos:column="53">O_WRONLY<pos:position pos:line="32" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="63">0600<pos:position pos:line="32" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="69"/></expr_stmt>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name pos:line="33" pos:column="21">fd<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">&lt;<pos:position pos:line="33" pos:column="28"/></operator> <literal type="number" pos:line="33" pos:column="26">0<pos:position pos:line="33" pos:column="27"/></literal></expr>)<pos:position pos:line="33" pos:column="28"/></condition><then pos:line="33" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="25">die_errno<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><call><name pos:line="34" pos:column="35">_<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><literal type="string" pos:line="34" pos:column="37">"could not create file '%s'"<pos:position pos:line="34" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="34" pos:column="68">path<pos:position pos:line="34" pos:column="72"/></name></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="74"/></expr_stmt></block></then></if>

		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">!<pos:position pos:line="36" pos:column="22"/></operator><call><name pos:line="36" pos:column="22">is_null_sha1<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">prev<pos:position pos:line="36" pos:column="39"/></name></expr></argument>)<pos:position pos:line="36" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="41"/></condition><then pos:line="36" pos:column="41"> <block pos:line="36" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">write_tag_body<pos:position pos:line="37" pos:column="39"/></name><argument_list pos:line="37" pos:column="39">(<argument><expr><name pos:line="37" pos:column="40">fd<pos:position pos:line="37" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="44">prev<pos:position pos:line="37" pos:column="48"/></name></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></then> <else pos:line="38" pos:column="19">else <block pos:line="38" pos:column="24">{
			<decl_stmt><decl><type><name><name pos:line="39" pos:column="25">struct<pos:position pos:line="39" pos:column="31"/></name> <name pos:line="39" pos:column="32">strbuf<pos:position pos:line="39" pos:column="38"/></name></name></type> <name pos:line="39" pos:column="39">buf<pos:position pos:line="39" pos:column="42"/></name> <init pos:line="39" pos:column="43">= <expr><name pos:line="39" pos:column="45">STRBUF_INIT<pos:position pos:line="39" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="39" pos:column="57"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">strbuf_addch<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><operator pos:line="40" pos:column="38">&amp;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="39">buf<pos:position pos:line="40" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="40" pos:column="44">'\n'<pos:position pos:line="40" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="50"/></expr_stmt>
			<if pos:line="41" pos:column="25">if <condition pos:line="41" pos:column="28">(<expr><name><name pos:line="41" pos:column="29">opt<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">-&gt;<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="34">cleanup_mode<pos:position pos:line="41" pos:column="46"/></name></name> <operator pos:line="41" pos:column="47">==<pos:position pos:line="41" pos:column="49"/></operator> <name pos:line="41" pos:column="50">CLEANUP_ALL<pos:position pos:line="41" pos:column="61"/></name></expr>)<pos:position pos:line="41" pos:column="62"/></condition><then pos:line="41" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="33">strbuf_commented_addf<pos:position pos:line="42" pos:column="54"/></name><argument_list pos:line="42" pos:column="54">(<argument><expr><operator pos:line="42" pos:column="55">&amp;<pos:position pos:line="42" pos:column="60"/></operator><name pos:line="42" pos:column="56">buf<pos:position pos:line="42" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="61">_<pos:position pos:line="42" pos:column="62"/></name><argument_list pos:line="42" pos:column="62">(<argument><expr><name pos:line="42" pos:column="63">tag_template<pos:position pos:line="42" pos:column="75"/></name></expr></argument>)<pos:position pos:line="42" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="42" pos:column="78">tag<pos:position pos:line="42" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="83">comment_line_char<pos:position pos:line="42" pos:column="100"/></name></expr></argument>)<pos:position pos:line="42" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="102"/></expr_stmt></block></then>
			<else pos:line="43" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="33">strbuf_commented_addf<pos:position pos:line="44" pos:column="54"/></name><argument_list pos:line="44" pos:column="54">(<argument><expr><operator pos:line="44" pos:column="55">&amp;<pos:position pos:line="44" pos:column="60"/></operator><name pos:line="44" pos:column="56">buf<pos:position pos:line="44" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="61">_<pos:position pos:line="44" pos:column="62"/></name><argument_list pos:line="44" pos:column="62">(<argument><expr><name pos:line="44" pos:column="63">tag_template_nocleanup<pos:position pos:line="44" pos:column="85"/></name></expr></argument>)<pos:position pos:line="44" pos:column="86"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="44" pos:column="88">tag<pos:position pos:line="44" pos:column="91"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="93">comment_line_char<pos:position pos:line="44" pos:column="110"/></name></expr></argument>)<pos:position pos:line="44" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="112"/></expr_stmt></block></else></if>
			<expr_stmt><expr><call><name pos:line="45" pos:column="25">write_or_die<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><name pos:line="45" pos:column="38">fd<pos:position pos:line="45" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="42">buf<pos:position pos:line="45" pos:column="45"/></name><operator pos:line="45" pos:column="45">.<pos:position pos:line="45" pos:column="46"/></operator><name pos:line="45" pos:column="46">buf<pos:position pos:line="45" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="51">buf<pos:position pos:line="45" pos:column="54"/></name><operator pos:line="45" pos:column="54">.<pos:position pos:line="45" pos:column="55"/></operator><name pos:line="45" pos:column="55">len<pos:position pos:line="45" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">strbuf_release<pos:position pos:line="46" pos:column="39"/></name><argument_list pos:line="46" pos:column="39">(<argument><expr><operator pos:line="46" pos:column="40">&amp;<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="41">buf<pos:position pos:line="46" pos:column="44"/></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="47" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">close<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><name pos:line="48" pos:column="23">fd<pos:position pos:line="48" pos:column="25"/></name></expr></argument>)<pos:position pos:line="48" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="27"/></expr_stmt>

		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><call><name pos:line="50" pos:column="21">launch_editor<pos:position pos:line="50" pos:column="34"/></name><argument_list pos:line="50" pos:column="34">(<argument><expr><name pos:line="50" pos:column="35">path<pos:position pos:line="50" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="41">buf<pos:position pos:line="50" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="46">NULL<pos:position pos:line="50" pos:column="50"/></name></expr></argument>)<pos:position pos:line="50" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="52"/></condition><then pos:line="50" pos:column="52"> <block pos:line="50" pos:column="53">{
			<expr_stmt><expr><call><name pos:line="51" pos:column="25">fprintf<pos:position pos:line="51" pos:column="32"/></name><argument_list pos:line="51" pos:column="32">(<argument><expr><name pos:line="51" pos:column="33">stderr<pos:position pos:line="51" pos:column="39"/></name></expr></argument>,
			<argument><expr><call><name pos:line="52" pos:column="25">_<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">(<argument><expr><literal type="string" pos:line="52" pos:column="27">"Please supply the message using either -m or -F option.\n"<pos:position pos:line="52" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="89"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">exit<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><literal type="number" pos:line="53" pos:column="30">1<pos:position pos:line="53" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="54" pos:column="18"/></block></then></if>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if>

	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name><name pos:line="57" pos:column="13">opt<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">-&gt;<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="18">cleanup_mode<pos:position pos:line="57" pos:column="30"/></name></name> <operator pos:line="57" pos:column="31">!=<pos:position pos:line="57" pos:column="33"/></operator> <name pos:line="57" pos:column="34">CLEANUP_NONE<pos:position pos:line="57" pos:column="46"/></name></expr>)<pos:position pos:line="57" pos:column="47"/></condition><then pos:line="57" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="17">strbuf_stripspace<pos:position pos:line="58" pos:column="34"/></name><argument_list pos:line="58" pos:column="34">(<argument><expr><name pos:line="58" pos:column="35">buf<pos:position pos:line="58" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="40">opt<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">-&gt;<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="45">cleanup_mode<pos:position pos:line="58" pos:column="57"/></name></name> <operator pos:line="58" pos:column="58">==<pos:position pos:line="58" pos:column="60"/></operator> <name pos:line="58" pos:column="61">CLEANUP_ALL<pos:position pos:line="58" pos:column="72"/></name></expr></argument>)<pos:position pos:line="58" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="74"/></expr_stmt></block></then></if>

	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><operator pos:line="60" pos:column="13">!<pos:position pos:line="60" pos:column="14"/></operator><name><name pos:line="60" pos:column="14">opt<pos:position pos:line="60" pos:column="17"/></name><operator pos:line="60" pos:column="17">-&gt;<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="19">message_given<pos:position pos:line="60" pos:column="32"/></name></name> <operator pos:line="60" pos:column="33">&amp;&amp;<pos:position pos:line="60" pos:column="43"/></operator> <operator pos:line="60" pos:column="36">!<pos:position pos:line="60" pos:column="37"/></operator><name><name pos:line="60" pos:column="37">buf<pos:position pos:line="60" pos:column="40"/></name><operator pos:line="60" pos:column="40">-&gt;<pos:position pos:line="60" pos:column="45"/></operator><name pos:line="60" pos:column="42">len<pos:position pos:line="60" pos:column="45"/></name></name></expr>)<pos:position pos:line="60" pos:column="46"/></condition><then pos:line="60" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="17">die<pos:position pos:line="61" pos:column="20"/></name><argument_list pos:line="61" pos:column="20">(<argument><expr><call><name pos:line="61" pos:column="21">_<pos:position pos:line="61" pos:column="22"/></name><argument_list pos:line="61" pos:column="22">(<argument><expr><literal type="string" pos:line="61" pos:column="23">"no tag message?"<pos:position pos:line="61" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="43"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="63" pos:column="9">strbuf_insert<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><name pos:line="63" pos:column="23">buf<pos:position pos:line="63" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="28">0<pos:position pos:line="63" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="31">header_buf<pos:position pos:line="63" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="43">header_len<pos:position pos:line="63" pos:column="53"/></name></expr></argument>)<pos:position pos:line="63" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="55"/></expr_stmt>

	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><call><name pos:line="65" pos:column="13">build_tag_object<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><name pos:line="65" pos:column="30">buf<pos:position pos:line="65" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="35">opt<pos:position pos:line="65" pos:column="38"/></name><operator pos:line="65" pos:column="38">-&gt;<pos:position pos:line="65" pos:column="43"/></operator><name pos:line="65" pos:column="40">sign<pos:position pos:line="65" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="46">result<pos:position pos:line="65" pos:column="52"/></name></expr></argument>)<pos:position pos:line="65" pos:column="53"/></argument_list></call> <operator pos:line="65" pos:column="54">&lt;<pos:position pos:line="65" pos:column="58"/></operator> <literal type="number" pos:line="65" pos:column="56">0<pos:position pos:line="65" pos:column="57"/></literal></expr>)<pos:position pos:line="65" pos:column="58"/></condition><then pos:line="65" pos:column="58"> <block pos:line="65" pos:column="59">{
		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><name pos:line="66" pos:column="21">path<pos:position pos:line="66" pos:column="25"/></name></expr>)<pos:position pos:line="66" pos:column="26"/></condition><then pos:line="66" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="25">fprintf<pos:position pos:line="67" pos:column="32"/></name><argument_list pos:line="67" pos:column="32">(<argument><expr><name pos:line="67" pos:column="33">stderr<pos:position pos:line="67" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="41">_<pos:position pos:line="67" pos:column="42"/></name><argument_list pos:line="67" pos:column="42">(<argument><expr><literal type="string" pos:line="67" pos:column="43">"The tag message has been left in %s\n"<pos:position pos:line="67" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="83"/></argument_list></call></expr></argument>,
				<argument><expr><name pos:line="68" pos:column="33">path<pos:position pos:line="68" pos:column="37"/></name></expr></argument>)<pos:position pos:line="68" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="39"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">exit<pos:position pos:line="69" pos:column="21"/></name><argument_list pos:line="69" pos:column="21">(<argument><expr><literal type="number" pos:line="69" pos:column="22">128<pos:position pos:line="69" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="70" pos:column="10"/></block></then></if>
	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">path<pos:position pos:line="71" pos:column="17"/></name></expr>)<pos:position pos:line="71" pos:column="18"/></condition><then pos:line="71" pos:column="18"> <block pos:line="71" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="72" pos:column="17">unlink_or_warn<pos:position pos:line="72" pos:column="31"/></name><argument_list pos:line="72" pos:column="31">(<argument><expr><name pos:line="72" pos:column="32">path<pos:position pos:line="72" pos:column="36"/></name></expr></argument>)<pos:position pos:line="72" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="73" pos:column="17">free<pos:position pos:line="73" pos:column="21"/></name><argument_list pos:line="73" pos:column="21">(<argument><expr><name pos:line="73" pos:column="22">path<pos:position pos:line="73" pos:column="26"/></name></expr></argument>)<pos:position pos:line="73" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="74" pos:column="10"/></block></then></if>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

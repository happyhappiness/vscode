<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3295_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">line_log_init<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">rev_info<pos:position pos:line="1" pos:column="35"/></name></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">rev<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">prefix<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="62">struct<pos:position pos:line="1" pos:column="68"/></name> <name pos:line="1" pos:column="69">string_list<pos:position pos:line="1" pos:column="80"/></name></name> <modifier pos:line="1" pos:column="81">*<pos:position pos:line="1" pos:column="82"/></modifier></type><name pos:line="1" pos:column="82">args<pos:position pos:line="1" pos:column="86"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="87"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">commit<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><name pos:line="3" pos:column="33">NULL<pos:position pos:line="3" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">line_log_data<pos:position pos:line="4" pos:column="29"/></name></name> <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="31">range<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">commit<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <call><name pos:line="6" pos:column="18">check_single_commit<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><name pos:line="6" pos:column="38">rev<pos:position pos:line="6" pos:column="41"/></name></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">range<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <call><name pos:line="7" pos:column="17">parse_lines<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">commit<pos:position pos:line="7" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="37">prefix<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">args<pos:position pos:line="7" pos:column="49"/></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">add_line_range<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">rev<pos:position pos:line="8" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="29">commit<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="37">range<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name><name pos:line="10" pos:column="14">rev<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">diffopt<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">.<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">detect_rename<pos:position pos:line="10" pos:column="40"/></name></name></expr>)<pos:position pos:line="10" pos:column="41"/></condition><then pos:line="10" pos:column="41"> <block pos:line="10" pos:column="42">{
		<decl_stmt><decl><type><name><name pos:line="11" pos:column="17">struct<pos:position pos:line="11" pos:column="23"/></name> <name pos:line="11" pos:column="24">line_log_data<pos:position pos:line="11" pos:column="37"/></name></name> <modifier pos:line="11" pos:column="38">*<pos:position pos:line="11" pos:column="39"/></modifier></type><name pos:line="11" pos:column="39">r<pos:position pos:line="11" pos:column="40"/></name></decl>;<pos:position pos:line="11" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">argv_array<pos:position pos:line="12" pos:column="34"/></name></name></type> <name pos:line="12" pos:column="35">array<pos:position pos:line="12" pos:column="40"/></name> <init pos:line="12" pos:column="41">= <expr><name pos:line="12" pos:column="43">ARGV_ARRAY_INIT<pos:position pos:line="12" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="59"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="13" pos:column="17">const<pos:position pos:line="13" pos:column="22"/></specifier> <name pos:line="13" pos:column="23">char<pos:position pos:line="13" pos:column="27"/></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier><modifier pos:line="13" pos:column="29">*<pos:position pos:line="13" pos:column="30"/></modifier></type><name pos:line="13" pos:column="30">paths<pos:position pos:line="13" pos:column="35"/></name></decl>;<pos:position pos:line="13" pos:column="36"/></decl_stmt>

		<for pos:line="15" pos:column="17">for <control pos:line="15" pos:column="21">(<init><expr><name pos:line="15" pos:column="22">r<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="26">range<pos:position pos:line="15" pos:column="31"/></name></expr>;<pos:position pos:line="15" pos:column="32"/></init> <condition><expr><name pos:line="15" pos:column="33">r<pos:position pos:line="15" pos:column="34"/></name></expr>;<pos:position pos:line="15" pos:column="35"/></condition> <incr><expr><name pos:line="15" pos:column="36">r<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">=<pos:position pos:line="15" pos:column="39"/></operator> <name><name pos:line="15" pos:column="40">r<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">next<pos:position pos:line="15" pos:column="47"/></name></name></expr></incr>)<pos:position pos:line="15" pos:column="48"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">argv_array_push<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><operator pos:line="16" pos:column="41">&amp;<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="42">array<pos:position pos:line="16" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="49">r<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">path<pos:position pos:line="16" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="58"/></expr_stmt></block></for>
		<expr_stmt><expr><name pos:line="17" pos:column="17">paths<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <call><name pos:line="17" pos:column="25">argv_array_detach<pos:position pos:line="17" pos:column="42"/></name><argument_list pos:line="17" pos:column="42">(<argument><expr><operator pos:line="17" pos:column="43">&amp;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="44">array<pos:position pos:line="17" pos:column="49"/></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="51"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="19" pos:column="17">parse_pathspec<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><operator pos:line="19" pos:column="32">&amp;<pos:position pos:line="19" pos:column="37"/></operator><name><name pos:line="19" pos:column="33">rev<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">-&gt;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="38">diffopt<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">.<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">pathspec<pos:position pos:line="19" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="56">0<pos:position pos:line="19" pos:column="57"/></literal></expr></argument>,
			       <argument><expr><name pos:line="20" pos:column="32">PATHSPEC_PREFER_FULL<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="54">""<pos:position pos:line="20" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="58">paths<pos:position pos:line="20" pos:column="63"/></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>
		<comment type="block" pos:line="21" pos:column="17">/* strings are now owned by pathspec */</comment>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">free<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">paths<pos:position pos:line="22" pos:column="27"/></name></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2586_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">is_scissors_line<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">line<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">c<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">scissors<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="27">gap<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><literal type="number" pos:line="4" pos:column="33">0<pos:position pos:line="4" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">first_nonblank<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><name pos:line="5" pos:column="38">NULL<pos:position pos:line="5" pos:column="42"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="44">*<pos:position pos:line="5" pos:column="45"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="45">last_nonblank<pos:position pos:line="5" pos:column="58"/></name> <init pos:line="5" pos:column="59">= <expr><name pos:line="5" pos:column="61">NULL<pos:position pos:line="5" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="66"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">visible<pos:position pos:line="6" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="22">perforation<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><literal type="number" pos:line="6" pos:column="36">0<pos:position pos:line="6" pos:column="37"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="39">in_perforation<pos:position pos:line="6" pos:column="53"/></name> <init pos:line="6" pos:column="54">= <expr><literal type="number" pos:line="6" pos:column="56">0<pos:position pos:line="6" pos:column="57"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="58"/></decl_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">c<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">line<pos:position pos:line="8" pos:column="22"/></name></expr>;<pos:position pos:line="8" pos:column="23"/></init> <condition><expr><operator pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">c<pos:position pos:line="8" pos:column="26"/></name></expr>;<pos:position pos:line="8" pos:column="27"/></condition> <incr><expr><name pos:line="8" pos:column="28">c<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">++<pos:position pos:line="8" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="32"/></control> <block pos:line="8" pos:column="33">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">isspace<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><operator pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">c<pos:position pos:line="9" pos:column="31"/></name></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33"> <block pos:line="9" pos:column="34">{
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><name pos:line="10" pos:column="29">in_perforation<pos:position pos:line="10" pos:column="43"/></name></expr>)<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44"> <block pos:line="10" pos:column="45">{
				<expr_stmt><expr><name pos:line="11" pos:column="33">perforation<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">++<pos:position pos:line="11" pos:column="46"/></operator></expr>;<pos:position pos:line="11" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="12" pos:column="33">gap<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">++<pos:position pos:line="12" pos:column="38"/></operator></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
			}<pos:position pos:line="13" pos:column="26"/></block></then></if>
			<continue pos:line="14" pos:column="25">continue;<pos:position pos:line="14" pos:column="34"/></continue>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="16" pos:column="17">last_nonblank<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">=<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="33">c<pos:position pos:line="16" pos:column="34"/></name></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">first_nonblank<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">==<pos:position pos:line="17" pos:column="38"/></operator> <name pos:line="17" pos:column="39">NULL<pos:position pos:line="17" pos:column="43"/></name></expr>)<pos:position pos:line="17" pos:column="44"/></condition><then pos:line="17" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">first_nonblank<pos:position pos:line="18" pos:column="39"/></name> <operator pos:line="18" pos:column="40">=<pos:position pos:line="18" pos:column="41"/></operator> <name pos:line="18" pos:column="42">c<pos:position pos:line="18" pos:column="43"/></name></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt></block></then></if>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">*<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">c<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">==<pos:position pos:line="19" pos:column="26"/></operator> <literal type="char" pos:line="19" pos:column="27">'-'<pos:position pos:line="19" pos:column="30"/></literal></expr>)<pos:position pos:line="19" pos:column="31"/></condition><then pos:line="19" pos:column="31"> <block pos:line="19" pos:column="32">{
			<expr_stmt><expr><name pos:line="20" pos:column="25">in_perforation<pos:position pos:line="20" pos:column="39"/></name> <operator pos:line="20" pos:column="40">=<pos:position pos:line="20" pos:column="41"/></operator> <literal type="number" pos:line="20" pos:column="42">1<pos:position pos:line="20" pos:column="43"/></literal></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="21" pos:column="25">perforation<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">++<pos:position pos:line="21" pos:column="38"/></operator></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
			<continue pos:line="22" pos:column="25">continue;<pos:position pos:line="22" pos:column="34"/></continue>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">(<pos:position pos:line="24" pos:column="22"/></operator><operator pos:line="24" pos:column="22">!<pos:position pos:line="24" pos:column="23"/></operator><call><name pos:line="24" pos:column="23">memcmp<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">c<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="33">"&gt;8"<pos:position pos:line="24" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="39">2<pos:position pos:line="24" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call> <operator pos:line="24" pos:column="42">||<pos:position pos:line="24" pos:column="44"/></operator> <operator pos:line="24" pos:column="45">!<pos:position pos:line="24" pos:column="46"/></operator><call><name pos:line="24" pos:column="46">memcmp<pos:position pos:line="24" pos:column="52"/></name><argument_list pos:line="24" pos:column="52">(<argument><expr><name pos:line="24" pos:column="53">c<pos:position pos:line="24" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="56">"8&lt;"<pos:position pos:line="24" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="62">2<pos:position pos:line="24" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call> <operator pos:line="24" pos:column="65">||<pos:position pos:line="24" pos:column="67"/></operator>
		     <operator pos:line="25" pos:column="22">!<pos:position pos:line="25" pos:column="23"/></operator><call><name pos:line="25" pos:column="23">memcmp<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">c<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="33">"&gt;%"<pos:position pos:line="25" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="39">2<pos:position pos:line="25" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call> <operator pos:line="25" pos:column="42">||<pos:position pos:line="25" pos:column="44"/></operator> <operator pos:line="25" pos:column="45">!<pos:position pos:line="25" pos:column="46"/></operator><call><name pos:line="25" pos:column="46">memcmp<pos:position pos:line="25" pos:column="52"/></name><argument_list pos:line="25" pos:column="52">(<argument><expr><name pos:line="25" pos:column="53">c<pos:position pos:line="25" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="56">"%&lt;"<pos:position pos:line="25" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="62">2<pos:position pos:line="25" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call><operator pos:line="25" pos:column="64">)<pos:position pos:line="25" pos:column="65"/></operator></expr>)<pos:position pos:line="25" pos:column="66"/></condition><then pos:line="25" pos:column="66"> <block pos:line="25" pos:column="67">{
			<expr_stmt><expr><name pos:line="26" pos:column="25">in_perforation<pos:position pos:line="26" pos:column="39"/></name> <operator pos:line="26" pos:column="40">=<pos:position pos:line="26" pos:column="41"/></operator> <literal type="number" pos:line="26" pos:column="42">1<pos:position pos:line="26" pos:column="43"/></literal></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="27" pos:column="25">perforation<pos:position pos:line="27" pos:column="36"/></name> <operator pos:line="27" pos:column="37">+=<pos:position pos:line="27" pos:column="39"/></operator> <literal type="number" pos:line="27" pos:column="40">2<pos:position pos:line="27" pos:column="41"/></literal></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="28" pos:column="25">scissors<pos:position pos:line="28" pos:column="33"/></name> <operator pos:line="28" pos:column="34">+=<pos:position pos:line="28" pos:column="36"/></operator> <literal type="number" pos:line="28" pos:column="37">2<pos:position pos:line="28" pos:column="38"/></literal></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><name pos:line="29" pos:column="25">c<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">++<pos:position pos:line="29" pos:column="28"/></operator></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
			<continue pos:line="30" pos:column="25">continue;<pos:position pos:line="30" pos:column="34"/></continue>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="32" pos:column="17">in_perforation<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">=<pos:position pos:line="32" pos:column="33"/></operator> <literal type="number" pos:line="32" pos:column="34">0<pos:position pos:line="32" pos:column="35"/></literal></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></for>

	<comment type="block" pos:line="35" pos:column="9">/*
	 * The mark must be at least 8 bytes long (e.g. "-- &gt;8 --").
	 * Even though there can be arbitrary cruft on the same line
	 * (e.g. "cut here"), in order to avoid misidentification, the
	 * perforation must occupy more than a third of the visible
	 * width of the line, and dashes and scissors must occupy more
	 * than half of the perforation.
	 */</comment>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">first_nonblank<pos:position pos:line="44" pos:column="27"/></name> <operator pos:line="44" pos:column="28">&amp;&amp;<pos:position pos:line="44" pos:column="38"/></operator> <name pos:line="44" pos:column="31">last_nonblank<pos:position pos:line="44" pos:column="44"/></name></expr>)<pos:position pos:line="44" pos:column="45"/></condition><then pos:line="44" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="17">visible<pos:position pos:line="45" pos:column="24"/></name> <operator pos:line="45" pos:column="25">=<pos:position pos:line="45" pos:column="26"/></operator> <name pos:line="45" pos:column="27">last_nonblank<pos:position pos:line="45" pos:column="40"/></name> <operator pos:line="45" pos:column="41">-<pos:position pos:line="45" pos:column="42"/></operator> <name pos:line="45" pos:column="43">first_nonblank<pos:position pos:line="45" pos:column="57"/></name> <operator pos:line="45" pos:column="58">+<pos:position pos:line="45" pos:column="59"/></operator> <literal type="number" pos:line="45" pos:column="60">1<pos:position pos:line="45" pos:column="61"/></literal></expr>;<pos:position pos:line="45" pos:column="62"/></expr_stmt></block></then>
	<else pos:line="46" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="17">visible<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <literal type="number" pos:line="47" pos:column="27">0<pos:position pos:line="47" pos:column="28"/></literal></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt></block></else></if>
	<return pos:line="48" pos:column="9">return <expr><operator pos:line="48" pos:column="16">(<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="17">scissors<pos:position pos:line="48" pos:column="25"/></name> <operator pos:line="48" pos:column="26">&amp;&amp;<pos:position pos:line="48" pos:column="36"/></operator> <literal type="number" pos:line="48" pos:column="29">8<pos:position pos:line="48" pos:column="30"/></literal> <operator pos:line="48" pos:column="31">&lt;=<pos:position pos:line="48" pos:column="36"/></operator> <name pos:line="48" pos:column="34">visible<pos:position pos:line="48" pos:column="41"/></name> <operator pos:line="48" pos:column="42">&amp;&amp;<pos:position pos:line="48" pos:column="52"/></operator>
		<name pos:line="49" pos:column="17">visible<pos:position pos:line="49" pos:column="24"/></name> <operator pos:line="49" pos:column="25">&lt;<pos:position pos:line="49" pos:column="29"/></operator> <name pos:line="49" pos:column="27">perforation<pos:position pos:line="49" pos:column="38"/></name> <operator pos:line="49" pos:column="39">*<pos:position pos:line="49" pos:column="40"/></operator> <literal type="number" pos:line="49" pos:column="41">3<pos:position pos:line="49" pos:column="42"/></literal> <operator pos:line="49" pos:column="43">&amp;&amp;<pos:position pos:line="49" pos:column="53"/></operator>
		<name pos:line="50" pos:column="17">gap<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">*<pos:position pos:line="50" pos:column="22"/></operator> <literal type="number" pos:line="50" pos:column="23">2<pos:position pos:line="50" pos:column="24"/></literal> <operator pos:line="50" pos:column="25">&lt;<pos:position pos:line="50" pos:column="29"/></operator> <name pos:line="50" pos:column="27">perforation<pos:position pos:line="50" pos:column="38"/></name><operator pos:line="50" pos:column="38">)<pos:position pos:line="50" pos:column="39"/></operator></expr>;<pos:position pos:line="50" pos:column="40"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5164_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">remove_temporary_files<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">path<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">DIR<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">dir<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">dirent<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">de<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">dir<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <call><name pos:line="6" pos:column="15">opendir<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">path<pos:position pos:line="6" pos:column="27"/></name></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">dir<pos:position pos:line="7" pos:column="17"/></name></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18"> <block pos:line="7" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">fprintf<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">stderr<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="33">"Unable to open directory %s\n"<pos:position pos:line="8" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="66">path<pos:position pos:line="8" pos:column="70"/></name></expr></argument>)<pos:position pos:line="8" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="72"/></expr_stmt>
		<return pos:line="9" pos:column="17">return;<pos:position pos:line="9" pos:column="24"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>
	<while pos:line="11" pos:column="9">while <condition pos:line="11" pos:column="15">(<expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">de<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <call><name pos:line="11" pos:column="22">readdir<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">dir<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call><operator pos:line="11" pos:column="34">)<pos:position pos:line="11" pos:column="35"/></operator> <operator pos:line="11" pos:column="36">!=<pos:position pos:line="11" pos:column="38"/></operator> <name pos:line="11" pos:column="39">NULL<pos:position pos:line="11" pos:column="43"/></name></expr>)<pos:position pos:line="11" pos:column="44"/></condition>
		<block type="pseudo"><if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><call><name pos:line="12" pos:column="21">starts_with<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name><name pos:line="12" pos:column="33">de<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">d_name<pos:position pos:line="12" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="45">"tmp_"<pos:position pos:line="12" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="25">prune_tmp_file<pos:position pos:line="13" pos:column="39"/></name><argument_list pos:line="13" pos:column="39">(<argument><expr><call><name pos:line="13" pos:column="40">mkpath<pos:position pos:line="13" pos:column="46"/></name><argument_list pos:line="13" pos:column="46">(<argument><expr><literal type="string" pos:line="13" pos:column="47">"%s/%s"<pos:position pos:line="13" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="56">path<pos:position pos:line="13" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="62">de<pos:position pos:line="13" pos:column="64"/></name><operator pos:line="13" pos:column="64">-&gt;<pos:position pos:line="13" pos:column="69"/></operator><name pos:line="13" pos:column="66">d_name<pos:position pos:line="13" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt></block></then></if></block></while>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">closedir<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">dir<pos:position pos:line="14" pos:column="21"/></name></expr></argument>)<pos:position pos:line="14" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

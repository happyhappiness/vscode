<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5404_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">write_state_bool<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">am_state<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">state<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
			     <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">name<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">int<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">value<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">write_state_text<pos:position pos:line="4" pos:column="25"/></name><argument_list pos:line="4" pos:column="25">(<argument><expr><name pos:line="4" pos:column="26">state<pos:position pos:line="4" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="33">name<pos:position pos:line="4" pos:column="37"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="4" pos:column="39">value<pos:position pos:line="4" pos:column="44"/></name></expr> ?<pos:position pos:line="4" pos:column="46"/></condition><then pos:line="4" pos:column="46"> <expr><literal type="string" pos:line="4" pos:column="47">"t"<pos:position pos:line="4" pos:column="50"/></literal></expr> <pos:position pos:line="4" pos:column="51"/></then><else pos:line="4" pos:column="51">: <expr><literal type="string" pos:line="4" pos:column="53">"f"<pos:position pos:line="4" pos:column="56"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="58"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

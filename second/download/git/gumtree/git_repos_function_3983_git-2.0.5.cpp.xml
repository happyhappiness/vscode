<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3983_git-2.0.5.cpp" pos:tabs="8"><expr_stmt><expr><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></expr></expr_stmt> <emit pos:line="1" pos:column="13">emit<expr><operator pos:line="1" pos:column="17">(<pos:position pos:line="1" pos:column="18"/></operator><specifier pos:line="1" pos:column="18">const<pos:position pos:line="1" pos:column="23"/></specifier> <name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <operator pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></operator><name pos:line="1" pos:column="30">cp<pos:position pos:line="1" pos:column="32"/></name><operator pos:line="1" pos:column="32">,<pos:position pos:line="1" pos:column="33"/></operator> <specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <operator pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></operator><name pos:line="1" pos:column="46">ep<pos:position pos:line="1" pos:column="48"/></name><operator pos:line="1" pos:column="48">)<pos:position pos:line="1" pos:column="49"/></operator>
<block pos:line="2" pos:column="1">{
	<while pos:line="3" pos:column="9">while <condition pos:line="3" pos:column="15">(<expr><operator pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="17">cp<pos:position pos:line="3" pos:column="19"/></name> <operator pos:line="3" pos:column="20">&amp;&amp;<pos:position pos:line="3" pos:column="30"/></operator> <operator pos:line="3" pos:column="23">(<pos:position pos:line="3" pos:column="24"/></operator><operator pos:line="3" pos:column="24">!<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="25">ep<pos:position pos:line="3" pos:column="27"/></name> <operator pos:line="3" pos:column="28">||<pos:position pos:line="3" pos:column="30"/></operator> <name pos:line="3" pos:column="31">cp<pos:position pos:line="3" pos:column="33"/></name> <operator pos:line="3" pos:column="34">&lt;<pos:position pos:line="3" pos:column="38"/></operator> <name pos:line="3" pos:column="36">ep<pos:position pos:line="3" pos:column="38"/></name><operator pos:line="3" pos:column="38">)<pos:position pos:line="3" pos:column="39"/></operator></expr>)<pos:position pos:line="3" pos:column="40"/></condition> <block pos:line="3" pos:column="41">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><operator pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">cp<pos:position pos:line="4" pos:column="24"/></name> <operator pos:line="4" pos:column="25">==<pos:position pos:line="4" pos:column="27"/></operator> <literal type="char" pos:line="4" pos:column="28">'%'<pos:position pos:line="4" pos:column="31"/></literal></expr>)<pos:position pos:line="4" pos:column="32"/></condition><then pos:line="4" pos:column="32"> <block pos:line="4" pos:column="33">{
			<if pos:line="5" pos:column="25">if <condition pos:line="5" pos:column="28">(<expr><name><name pos:line="5" pos:column="29">cp<pos:position pos:line="5" pos:column="31"/></name><index pos:line="5" pos:column="31">[<expr><literal type="number" pos:line="5" pos:column="32">1<pos:position pos:line="5" pos:column="33"/></literal></expr>]<pos:position pos:line="5" pos:column="34"/></index></name> <operator pos:line="5" pos:column="35">==<pos:position pos:line="5" pos:column="37"/></operator> <literal type="char" pos:line="5" pos:column="38">'%'<pos:position pos:line="5" pos:column="41"/></literal></expr>)<pos:position pos:line="5" pos:column="42"/></condition><then pos:line="5" pos:column="42">
				<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="33">cp<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">++<pos:position pos:line="6" pos:column="37"/></operator></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt></block></then>
			<else pos:line="7" pos:column="25">else <block pos:line="7" pos:column="30">{
				<decl_stmt><decl><type><name pos:line="8" pos:column="33">int<pos:position pos:line="8" pos:column="36"/></name></type> <name pos:line="8" pos:column="37">ch<pos:position pos:line="8" pos:column="39"/></name> <init pos:line="8" pos:column="40">= <expr><call><name pos:line="8" pos:column="42">hex2<pos:position pos:line="8" pos:column="46"/></name><argument_list pos:line="8" pos:column="46">(<argument><expr><name pos:line="8" pos:column="47">cp<pos:position pos:line="8" pos:column="49"/></name> <operator pos:line="8" pos:column="50">+<pos:position pos:line="8" pos:column="51"/></operator> <literal type="number" pos:line="8" pos:column="52">1<pos:position pos:line="8" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="55"/></decl_stmt>
				<if pos:line="9" pos:column="33">if <condition pos:line="9" pos:column="36">(<expr><literal type="number" pos:line="9" pos:column="37">0<pos:position pos:line="9" pos:column="38"/></literal> <operator pos:line="9" pos:column="39">&lt;=<pos:position pos:line="9" pos:column="44"/></operator> <name pos:line="9" pos:column="42">ch<pos:position pos:line="9" pos:column="44"/></name></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45"> <block pos:line="9" pos:column="46">{
					<expr_stmt><expr><call><name pos:line="10" pos:column="41">putchar<pos:position pos:line="10" pos:column="48"/></name><argument_list pos:line="10" pos:column="48">(<argument><expr><name pos:line="10" pos:column="49">ch<pos:position pos:line="10" pos:column="51"/></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
					<expr_stmt><expr><name pos:line="11" pos:column="41">cp<pos:position pos:line="11" pos:column="43"/></name> <operator pos:line="11" pos:column="44">+=<pos:position pos:line="11" pos:column="46"/></operator> <literal type="number" pos:line="11" pos:column="47">3<pos:position pos:line="11" pos:column="48"/></literal></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
					<continue pos:line="12" pos:column="41">continue;<pos:position pos:line="12" pos:column="50"/></continue>
				<expr_stmt><pos:position pos:line="13" pos:column="5"/></expr_stmt></block></then></if></block></else></if></block></then></if></block></while>}<pos:position pos:line="13" pos:column="34"/></block></expr></emit>
			}
		}
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">putchar<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><operator pos:line="16" pos:column="25">*<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="26">cp<pos:position pos:line="16" pos:column="28"/></name></expr></argument>)<pos:position pos:line="16" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">cp<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">++<pos:position pos:line="17" pos:column="21"/></operator></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
	}
}</unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6242_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">copy_pack_data<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">sha1file<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">f<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">packed_git<pos:position pos:line="2" pos:column="34"/></name></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">p<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="3" pos:column="17">struct<pos:position pos:line="3" pos:column="23"/></name> <name pos:line="3" pos:column="24">pack_window<pos:position pos:line="3" pos:column="35"/></name></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier><modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">w_curs<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="4" pos:column="17">off_t<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">offset<pos:position pos:line="4" pos:column="29"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="5" pos:column="17">off_t<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">len<pos:position pos:line="5" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="27"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">char<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">in<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">unsigned<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">long<pos:position pos:line="8" pos:column="22"/></name></type> <name pos:line="8" pos:column="23">avail<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>

	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><name pos:line="10" pos:column="16">len<pos:position pos:line="10" pos:column="19"/></name></expr>)<pos:position pos:line="10" pos:column="20"/></condition> <block pos:line="10" pos:column="21">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">in<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <call><name pos:line="11" pos:column="22">use_pack<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">p<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">w_curs<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">offset<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="50">&amp;<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="51">avail<pos:position pos:line="11" pos:column="56"/></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">avail<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">&gt;<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="29">len<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">avail<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator> <operator pos:line="13" pos:column="33">(<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">unsigned<pos:position pos:line="13" pos:column="42"/></name> <name pos:line="13" pos:column="43">long<pos:position pos:line="13" pos:column="47"/></name><operator pos:line="13" pos:column="47">)<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="48">len<pos:position pos:line="13" pos:column="51"/></name></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">sha1write<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">f<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="30">in<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">avail<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">offset<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">+=<pos:position pos:line="15" pos:column="26"/></operator> <name pos:line="15" pos:column="27">avail<pos:position pos:line="15" pos:column="32"/></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">len<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">-=<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">avail<pos:position pos:line="16" pos:column="29"/></name></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></while>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

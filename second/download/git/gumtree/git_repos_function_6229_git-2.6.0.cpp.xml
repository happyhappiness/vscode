<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6229_git-2.6.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">build_wcs_buffer<pos:position pos:line="3" pos:column="17"/></name> <parameter_list pos:line="3" pos:column="18">(<parameter><decl><type><name pos:line="3" pos:column="19">re_string_t<pos:position pos:line="3" pos:column="30"/></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier></type><name pos:line="3" pos:column="32">pstr<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="37"/></parameter_list>
<block pos:line="4" pos:column="1">{
<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">_LIBC<pos:position pos:line="5" pos:column="13"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name></type> <name><name pos:line="6" pos:column="17">buf<pos:position pos:line="6" pos:column="20"/></name><index pos:line="6" pos:column="20">[<expr><name pos:line="6" pos:column="21">MB_LEN_MAX<pos:position pos:line="6" pos:column="31"/></name></expr>]<pos:position pos:line="6" pos:column="32"/></index></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">MB_LEN_MAX<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">&gt;=<pos:position pos:line="7" pos:column="27"/></operator> <name><name pos:line="7" pos:column="25">pstr<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">-&gt;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="31">mb_cur_max<pos:position pos:line="7" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>
<cpp:else pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">else<pos:position pos:line="8" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">unsigned<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">char<pos:position pos:line="9" pos:column="16"/></name></type> <name><name pos:line="9" pos:column="17">buf<pos:position pos:line="9" pos:column="20"/></name><index pos:line="9" pos:column="20">[<expr><literal type="number" pos:line="9" pos:column="21">64<pos:position pos:line="9" pos:column="23"/></literal></expr>]<pos:position pos:line="9" pos:column="24"/></index></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">mbstate_t<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">prev_st<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">byte_idx<pos:position pos:line="12" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="17">end_idx<pos:position pos:line="12" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="26">remain_len<pos:position pos:line="12" pos:column="36"/></name></decl>;<pos:position pos:line="12" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">size_t<pos:position pos:line="13" pos:column="9"/></name></type> <name pos:line="13" pos:column="10">mbclen<pos:position pos:line="13" pos:column="16"/></name></decl>;<pos:position pos:line="13" pos:column="17"/></decl_stmt>

  <comment type="block" pos:line="15" pos:column="3">/* Build the buffers from pstr-&gt;valid_len to either pstr-&gt;len or
     pstr-&gt;bufs_len.  */</comment>
  <expr_stmt><expr><name pos:line="17" pos:column="3">end_idx<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <ternary><condition><expr><operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name><name pos:line="17" pos:column="14">pstr<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">bufs_len<pos:position pos:line="17" pos:column="28"/></name></name> <operator pos:line="17" pos:column="29">&gt;<pos:position pos:line="17" pos:column="33"/></operator> <name><name pos:line="17" pos:column="31">pstr<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">len<pos:position pos:line="17" pos:column="40"/></name></name><operator pos:line="17" pos:column="40">)<pos:position pos:line="17" pos:column="41"/></operator></expr> ?<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43"> <expr><name><name pos:line="17" pos:column="44">pstr<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">-&gt;<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="50">len<pos:position pos:line="17" pos:column="53"/></name></name></expr> <pos:position pos:line="17" pos:column="54"/></then><else pos:line="17" pos:column="54">: <expr><name><name pos:line="17" pos:column="56">pstr<pos:position pos:line="17" pos:column="60"/></name><operator pos:line="17" pos:column="60">-&gt;<pos:position pos:line="17" pos:column="65"/></operator><name pos:line="17" pos:column="62">bufs_len<pos:position pos:line="17" pos:column="70"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="17" pos:column="71"/></expr_stmt>
  <for pos:line="18" pos:column="3">for <control pos:line="18" pos:column="7">(<init><expr><name pos:line="18" pos:column="8">byte_idx<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name><name pos:line="18" pos:column="19">pstr<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">-&gt;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="25">valid_len<pos:position pos:line="18" pos:column="34"/></name></name></expr>;<pos:position pos:line="18" pos:column="35"/></init> <condition><expr><name pos:line="18" pos:column="36">byte_idx<pos:position pos:line="18" pos:column="44"/></name> <operator pos:line="18" pos:column="45">&lt;<pos:position pos:line="18" pos:column="49"/></operator> <name pos:line="18" pos:column="47">end_idx<pos:position pos:line="18" pos:column="54"/></name></expr>;<pos:position pos:line="18" pos:column="55"/></condition><incr/>)<pos:position pos:line="18" pos:column="56"/></control>
    <block pos:line="19" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">wchar_t<pos:position pos:line="20" pos:column="14"/></name></type> <name pos:line="20" pos:column="15">wc<pos:position pos:line="20" pos:column="17"/></name></decl>;<pos:position pos:line="20" pos:column="18"/></decl_stmt>
      <decl_stmt><decl><type><specifier pos:line="21" pos:column="7">const<pos:position pos:line="21" pos:column="12"/></specifier> <name pos:line="21" pos:column="13">char<pos:position pos:line="21" pos:column="17"/></name> <modifier pos:line="21" pos:column="18">*<pos:position pos:line="21" pos:column="19"/></modifier></type><name pos:line="21" pos:column="19">p<pos:position pos:line="21" pos:column="20"/></name></decl>;<pos:position pos:line="21" pos:column="21"/></decl_stmt>

      <expr_stmt><expr><name pos:line="23" pos:column="7">remain_len<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">end_idx<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">-<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">byte_idx<pos:position pos:line="23" pos:column="38"/></name></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name pos:line="24" pos:column="7">prev_st<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <name><name pos:line="24" pos:column="17">pstr<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">cur_state<pos:position pos:line="24" pos:column="32"/></name></name></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
      <comment type="block" pos:line="25" pos:column="7">/* Apply the translation if we need.  */</comment>
      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><call><name pos:line="26" pos:column="11">BE<pos:position pos:line="26" pos:column="13"/></name> <argument_list pos:line="26" pos:column="14">(<argument><expr><name><name pos:line="26" pos:column="15">pstr<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">trans<pos:position pos:line="26" pos:column="26"/></name></name> <operator pos:line="26" pos:column="27">!=<pos:position pos:line="26" pos:column="29"/></operator> <name pos:line="26" pos:column="30">NULL<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="36">0<pos:position pos:line="26" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="39"/></condition><then pos:line="26" pos:column="39">
	<block pos:line="27" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="28" pos:column="11">int<pos:position pos:line="28" pos:column="14"/></name></type> <name pos:line="28" pos:column="15">i<pos:position pos:line="28" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="28" pos:column="18">ch<pos:position pos:line="28" pos:column="20"/></name></decl>;<pos:position pos:line="28" pos:column="21"/></decl_stmt>

	  <for pos:line="30" pos:column="11">for <control pos:line="30" pos:column="15">(<init><expr><name pos:line="30" pos:column="16">i<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <literal type="number" pos:line="30" pos:column="20">0<pos:position pos:line="30" pos:column="21"/></literal></expr>;<pos:position pos:line="30" pos:column="22"/></init> <condition><expr><name pos:line="30" pos:column="23">i<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">&lt;<pos:position pos:line="30" pos:column="29"/></operator> <name><name pos:line="30" pos:column="27">pstr<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">-&gt;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="33">mb_cur_max<pos:position pos:line="30" pos:column="43"/></name></name> <operator pos:line="30" pos:column="44">&amp;&amp;<pos:position pos:line="30" pos:column="54"/></operator> <name pos:line="30" pos:column="47">i<pos:position pos:line="30" pos:column="48"/></name> <operator pos:line="30" pos:column="49">&lt;<pos:position pos:line="30" pos:column="53"/></operator> <name pos:line="30" pos:column="51">remain_len<pos:position pos:line="30" pos:column="61"/></name></expr>;<pos:position pos:line="30" pos:column="62"/></condition> <incr><expr><operator pos:line="30" pos:column="63">++<pos:position pos:line="30" pos:column="65"/></operator><name pos:line="30" pos:column="65">i<pos:position pos:line="30" pos:column="66"/></name></expr></incr>)<pos:position pos:line="30" pos:column="67"/></control>
	    <block pos:line="31" pos:column="13">{
	      <expr_stmt><expr><name pos:line="32" pos:column="15">ch<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <name><name pos:line="32" pos:column="20">pstr<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">raw_mbs<pos:position pos:line="32" pos:column="33"/></name> <index pos:line="32" pos:column="34">[<expr><name><name pos:line="32" pos:column="35">pstr<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">-&gt;<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="41">raw_mbs_idx<pos:position pos:line="32" pos:column="52"/></name></name> <operator pos:line="32" pos:column="53">+<pos:position pos:line="32" pos:column="54"/></operator> <name pos:line="32" pos:column="55">byte_idx<pos:position pos:line="32" pos:column="63"/></name> <operator pos:line="32" pos:column="64">+<pos:position pos:line="32" pos:column="65"/></operator> <name pos:line="32" pos:column="66">i<pos:position pos:line="32" pos:column="67"/></name></expr>]<pos:position pos:line="32" pos:column="68"/></index></name></expr>;<pos:position pos:line="32" pos:column="69"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="33" pos:column="15">buf<pos:position pos:line="33" pos:column="18"/></name><index pos:line="33" pos:column="18">[<expr><name pos:line="33" pos:column="19">i<pos:position pos:line="33" pos:column="20"/></name></expr>]<pos:position pos:line="33" pos:column="21"/></index></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <name><name pos:line="33" pos:column="24">pstr<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">-&gt;<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="30">mbs<pos:position pos:line="33" pos:column="33"/></name><index pos:line="33" pos:column="33">[<expr><name pos:line="33" pos:column="34">byte_idx<pos:position pos:line="33" pos:column="42"/></name> <operator pos:line="33" pos:column="43">+<pos:position pos:line="33" pos:column="44"/></operator> <name pos:line="33" pos:column="45">i<pos:position pos:line="33" pos:column="46"/></name></expr>]<pos:position pos:line="33" pos:column="47"/></index></name> <operator pos:line="33" pos:column="48">=<pos:position pos:line="33" pos:column="49"/></operator> <name><name pos:line="33" pos:column="50">pstr<pos:position pos:line="33" pos:column="54"/></name><operator pos:line="33" pos:column="54">-&gt;<pos:position pos:line="33" pos:column="59"/></operator><name pos:line="33" pos:column="56">trans<pos:position pos:line="33" pos:column="61"/></name><index pos:line="33" pos:column="61">[<expr><name pos:line="33" pos:column="62">ch<pos:position pos:line="33" pos:column="64"/></name></expr>]<pos:position pos:line="33" pos:column="65"/></index></name></expr>;<pos:position pos:line="33" pos:column="66"/></expr_stmt>
	    }<pos:position pos:line="34" pos:column="14"/></block></for>
	  <expr_stmt><expr><name pos:line="35" pos:column="11">p<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <operator pos:line="35" pos:column="15">(<pos:position pos:line="35" pos:column="16"/></operator><specifier pos:line="35" pos:column="16">const<pos:position pos:line="35" pos:column="21"/></specifier> <name pos:line="35" pos:column="22">char<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">*<pos:position pos:line="35" pos:column="28"/></operator><operator pos:line="35" pos:column="28">)<pos:position pos:line="35" pos:column="29"/></operator> <name pos:line="35" pos:column="30">buf<pos:position pos:line="35" pos:column="33"/></name></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then>
      <else pos:line="37" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="9">p<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <operator pos:line="38" pos:column="13">(<pos:position pos:line="38" pos:column="14"/></operator><specifier pos:line="38" pos:column="14">const<pos:position pos:line="38" pos:column="19"/></specifier> <name pos:line="38" pos:column="20">char<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">*<pos:position pos:line="38" pos:column="26"/></operator><operator pos:line="38" pos:column="26">)<pos:position pos:line="38" pos:column="27"/></operator> <name><name pos:line="38" pos:column="28">pstr<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">-&gt;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="34">raw_mbs<pos:position pos:line="38" pos:column="41"/></name></name> <operator pos:line="38" pos:column="42">+<pos:position pos:line="38" pos:column="43"/></operator> <name><name pos:line="38" pos:column="44">pstr<pos:position pos:line="38" pos:column="48"/></name><operator pos:line="38" pos:column="48">-&gt;<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="50">raw_mbs_idx<pos:position pos:line="38" pos:column="61"/></name></name> <operator pos:line="38" pos:column="62">+<pos:position pos:line="38" pos:column="63"/></operator> <name pos:line="38" pos:column="64">byte_idx<pos:position pos:line="38" pos:column="72"/></name></expr>;<pos:position pos:line="38" pos:column="73"/></expr_stmt></block></else></if>
      <expr_stmt><expr><name pos:line="39" pos:column="7">mbclen<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name pos:line="39" pos:column="16">__mbrtowc<pos:position pos:line="39" pos:column="25"/></name> <argument_list pos:line="39" pos:column="26">(<argument><expr><operator pos:line="39" pos:column="27">&amp;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="28">wc<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="32">p<pos:position pos:line="39" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="35">remain_len<pos:position pos:line="39" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="47">&amp;<pos:position pos:line="39" pos:column="52"/></operator><name><name pos:line="39" pos:column="48">pstr<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">-&gt;<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="54">cur_state<pos:position pos:line="39" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="65"/></expr_stmt>
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><call><name pos:line="40" pos:column="11">BE<pos:position pos:line="40" pos:column="13"/></name> <argument_list pos:line="40" pos:column="14">(<argument><expr><name pos:line="40" pos:column="15">mbclen<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">==<pos:position pos:line="40" pos:column="24"/></operator> <operator pos:line="40" pos:column="25">(<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="26">size_t<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">)<pos:position pos:line="40" pos:column="33"/></operator> <operator pos:line="40" pos:column="34">-<pos:position pos:line="40" pos:column="35"/></operator><literal type="number" pos:line="40" pos:column="35">2<pos:position pos:line="40" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="38">0<pos:position pos:line="40" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="41"/></condition><then pos:line="40" pos:column="41">
	<block pos:line="41" pos:column="9">{
	  <comment type="block" pos:line="42" pos:column="11">/* The buffer doesn't have enough space, finish to build.  */</comment>
	  <expr_stmt><expr><name><name pos:line="43" pos:column="11">pstr<pos:position pos:line="43" pos:column="15"/></name><operator pos:line="43" pos:column="15">-&gt;<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="17">cur_state<pos:position pos:line="43" pos:column="26"/></name></name> <operator pos:line="43" pos:column="27">=<pos:position pos:line="43" pos:column="28"/></operator> <name pos:line="43" pos:column="29">prev_st<pos:position pos:line="43" pos:column="36"/></name></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
	  <break pos:line="44" pos:column="11">break;<pos:position pos:line="44" pos:column="17"/></break>
	}<pos:position pos:line="45" pos:column="10"/></block></then>
      <elseif pos:line="46" pos:column="7">else <if pos:line="46" pos:column="12">if <condition pos:line="46" pos:column="15">(<expr><call><name pos:line="46" pos:column="16">BE<pos:position pos:line="46" pos:column="18"/></name> <argument_list pos:line="46" pos:column="19">(<argument><expr><name pos:line="46" pos:column="20">mbclen<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">==<pos:position pos:line="46" pos:column="29"/></operator> <operator pos:line="46" pos:column="30">(<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="31">size_t<pos:position pos:line="46" pos:column="37"/></name><operator pos:line="46" pos:column="37">)<pos:position pos:line="46" pos:column="38"/></operator> <operator pos:line="46" pos:column="39">-<pos:position pos:line="46" pos:column="40"/></operator><literal type="number" pos:line="46" pos:column="40">1<pos:position pos:line="46" pos:column="41"/></literal> <operator pos:line="46" pos:column="42">||<pos:position pos:line="46" pos:column="44"/></operator> <name pos:line="46" pos:column="45">mbclen<pos:position pos:line="46" pos:column="51"/></name> <operator pos:line="46" pos:column="52">==<pos:position pos:line="46" pos:column="54"/></operator> <literal type="number" pos:line="46" pos:column="55">0<pos:position pos:line="46" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="58">0<pos:position pos:line="46" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="61"/></condition><then pos:line="46" pos:column="61">
	<block pos:line="47" pos:column="9">{
	  <comment type="block" pos:line="48" pos:column="11">/* We treat these cases as a singlebyte character.  */</comment>
	  <expr_stmt><expr><name pos:line="49" pos:column="11">mbclen<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">=<pos:position pos:line="49" pos:column="19"/></operator> <literal type="number" pos:line="49" pos:column="20">1<pos:position pos:line="49" pos:column="21"/></literal></expr>;<pos:position pos:line="49" pos:column="22"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="50" pos:column="11">wc<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <operator pos:line="50" pos:column="16">(<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="17">wchar_t<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">)<pos:position pos:line="50" pos:column="25"/></operator> <name><name pos:line="50" pos:column="26">pstr<pos:position pos:line="50" pos:column="30"/></name><operator pos:line="50" pos:column="30">-&gt;<pos:position pos:line="50" pos:column="35"/></operator><name pos:line="50" pos:column="32">raw_mbs<pos:position pos:line="50" pos:column="39"/></name><index pos:line="50" pos:column="39">[<expr><name><name pos:line="50" pos:column="40">pstr<pos:position pos:line="50" pos:column="44"/></name><operator pos:line="50" pos:column="44">-&gt;<pos:position pos:line="50" pos:column="49"/></operator><name pos:line="50" pos:column="46">raw_mbs_idx<pos:position pos:line="50" pos:column="57"/></name></name> <operator pos:line="50" pos:column="58">+<pos:position pos:line="50" pos:column="59"/></operator> <name pos:line="50" pos:column="60">byte_idx<pos:position pos:line="50" pos:column="68"/></name></expr>]<pos:position pos:line="50" pos:column="69"/></index></name></expr>;<pos:position pos:line="50" pos:column="70"/></expr_stmt>
	  <if pos:line="51" pos:column="11">if <condition pos:line="51" pos:column="14">(<expr><call><name pos:line="51" pos:column="15">BE<pos:position pos:line="51" pos:column="17"/></name> <argument_list pos:line="51" pos:column="18">(<argument><expr><name><name pos:line="51" pos:column="19">pstr<pos:position pos:line="51" pos:column="23"/></name><operator pos:line="51" pos:column="23">-&gt;<pos:position pos:line="51" pos:column="28"/></operator><name pos:line="51" pos:column="25">trans<pos:position pos:line="51" pos:column="30"/></name></name> <operator pos:line="51" pos:column="31">!=<pos:position pos:line="51" pos:column="33"/></operator> <name pos:line="51" pos:column="34">NULL<pos:position pos:line="51" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="40">0<pos:position pos:line="51" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="43"/></condition><then pos:line="51" pos:column="43">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="13">wc<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <name><name pos:line="52" pos:column="18">pstr<pos:position pos:line="52" pos:column="22"/></name><operator pos:line="52" pos:column="22">-&gt;<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="24">trans<pos:position pos:line="52" pos:column="29"/></name><index pos:line="52" pos:column="29">[<expr><name pos:line="52" pos:column="30">wc<pos:position pos:line="52" pos:column="32"/></name></expr>]<pos:position pos:line="52" pos:column="33"/></index></name></expr>;<pos:position pos:line="52" pos:column="34"/></expr_stmt></block></then></if>
	  <expr_stmt><expr><name><name pos:line="53" pos:column="11">pstr<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">-&gt;<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="17">cur_state<pos:position pos:line="53" pos:column="26"/></name></name> <operator pos:line="53" pos:column="27">=<pos:position pos:line="53" pos:column="28"/></operator> <name pos:line="53" pos:column="29">prev_st<pos:position pos:line="53" pos:column="36"/></name></expr>;<pos:position pos:line="53" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></then></if></elseif></if>

      <comment type="block" pos:line="56" pos:column="7">/* Write wide character and padding.  */</comment>
      <expr_stmt><expr><name><name pos:line="57" pos:column="7">pstr<pos:position pos:line="57" pos:column="11"/></name><operator pos:line="57" pos:column="11">-&gt;<pos:position pos:line="57" pos:column="16"/></operator><name pos:line="57" pos:column="13">wcs<pos:position pos:line="57" pos:column="16"/></name><index pos:line="57" pos:column="16">[<expr><name pos:line="57" pos:column="17">byte_idx<pos:position pos:line="57" pos:column="25"/></name><operator pos:line="57" pos:column="25">++<pos:position pos:line="57" pos:column="27"/></operator></expr>]<pos:position pos:line="57" pos:column="28"/></index></name> <operator pos:line="57" pos:column="29">=<pos:position pos:line="57" pos:column="30"/></operator> <name pos:line="57" pos:column="31">wc<pos:position pos:line="57" pos:column="33"/></name></expr>;<pos:position pos:line="57" pos:column="34"/></expr_stmt>
      <comment type="block" pos:line="58" pos:column="7">/* Write paddings.  */</comment>
      <for pos:line="59" pos:column="7">for <control pos:line="59" pos:column="11">(<init><expr><name pos:line="59" pos:column="12">remain_len<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">=<pos:position pos:line="59" pos:column="24"/></operator> <name pos:line="59" pos:column="25">byte_idx<pos:position pos:line="59" pos:column="33"/></name> <operator pos:line="59" pos:column="34">+<pos:position pos:line="59" pos:column="35"/></operator> <name pos:line="59" pos:column="36">mbclen<pos:position pos:line="59" pos:column="42"/></name> <operator pos:line="59" pos:column="43">-<pos:position pos:line="59" pos:column="44"/></operator> <literal type="number" pos:line="59" pos:column="45">1<pos:position pos:line="59" pos:column="46"/></literal></expr>;<pos:position pos:line="59" pos:column="47"/></init> <condition><expr><name pos:line="59" pos:column="48">byte_idx<pos:position pos:line="59" pos:column="56"/></name> <operator pos:line="59" pos:column="57">&lt;<pos:position pos:line="59" pos:column="61"/></operator> <name pos:line="59" pos:column="59">remain_len<pos:position pos:line="59" pos:column="69"/></name></expr> ;<pos:position pos:line="59" pos:column="71"/></condition><incr/>)<pos:position pos:line="59" pos:column="72"/></control>
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="60" pos:column="9">pstr<pos:position pos:line="60" pos:column="13"/></name><operator pos:line="60" pos:column="13">-&gt;<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="15">wcs<pos:position pos:line="60" pos:column="18"/></name><index pos:line="60" pos:column="18">[<expr><name pos:line="60" pos:column="19">byte_idx<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">++<pos:position pos:line="60" pos:column="29"/></operator></expr>]<pos:position pos:line="60" pos:column="30"/></index></name> <operator pos:line="60" pos:column="31">=<pos:position pos:line="60" pos:column="32"/></operator> <name pos:line="60" pos:column="33">WEOF<pos:position pos:line="60" pos:column="37"/></name></expr>;<pos:position pos:line="60" pos:column="38"/></expr_stmt></block></for>
    }<pos:position pos:line="61" pos:column="6"/></block></for>
  <expr_stmt><expr><name><name pos:line="62" pos:column="3">pstr<pos:position pos:line="62" pos:column="7"/></name><operator pos:line="62" pos:column="7">-&gt;<pos:position pos:line="62" pos:column="12"/></operator><name pos:line="62" pos:column="9">valid_len<pos:position pos:line="62" pos:column="18"/></name></name> <operator pos:line="62" pos:column="19">=<pos:position pos:line="62" pos:column="20"/></operator> <name pos:line="62" pos:column="21">byte_idx<pos:position pos:line="62" pos:column="29"/></name></expr>;<pos:position pos:line="62" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="63" pos:column="3">pstr<pos:position pos:line="63" pos:column="7"/></name><operator pos:line="63" pos:column="7">-&gt;<pos:position pos:line="63" pos:column="12"/></operator><name pos:line="63" pos:column="9">valid_raw_len<pos:position pos:line="63" pos:column="22"/></name></name> <operator pos:line="63" pos:column="23">=<pos:position pos:line="63" pos:column="24"/></operator> <name pos:line="63" pos:column="25">byte_idx<pos:position pos:line="63" pos:column="33"/></name></expr>;<pos:position pos:line="63" pos:column="34"/></expr_stmt>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5474_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">origin<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">merge_list<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">entry<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">unsigned<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">long<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">size<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">enum<pos:position pos:line="3" pos:column="13"/></name> <name pos:line="3" pos:column="14">object_type<pos:position pos:line="3" pos:column="25"/></name></name></type> <name pos:line="3" pos:column="26">type<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<while pos:line="4" pos:column="9">while <condition pos:line="4" pos:column="15">(<expr><name pos:line="4" pos:column="16">entry<pos:position pos:line="4" pos:column="21"/></name></expr>)<pos:position pos:line="4" pos:column="22"/></condition> <block pos:line="4" pos:column="23">{
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><name><name pos:line="5" pos:column="21">entry<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">stage<pos:position pos:line="5" pos:column="33"/></name></name> <operator pos:line="5" pos:column="34">==<pos:position pos:line="5" pos:column="36"/></operator> <literal type="number" pos:line="5" pos:column="37">2<pos:position pos:line="5" pos:column="38"/></literal></expr>)<pos:position pos:line="5" pos:column="39"/></condition><then pos:line="5" pos:column="39">
			<block type="pseudo"><return pos:line="6" pos:column="25">return <expr><call><name pos:line="6" pos:column="32">read_sha1_file<pos:position pos:line="6" pos:column="46"/></name><argument_list pos:line="6" pos:column="46">(<argument><expr><name><name pos:line="6" pos:column="47">entry<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">-&gt;<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="54">blob<pos:position pos:line="6" pos:column="58"/></name><operator pos:line="6" pos:column="58">-&gt;<pos:position pos:line="6" pos:column="63"/></operator><name pos:line="6" pos:column="60">object<pos:position pos:line="6" pos:column="66"/></name><operator pos:line="6" pos:column="66">.<pos:position pos:line="6" pos:column="67"/></operator><name pos:line="6" pos:column="67">oid<pos:position pos:line="6" pos:column="70"/></name><operator pos:line="6" pos:column="70">.<pos:position pos:line="6" pos:column="71"/></operator><name pos:line="6" pos:column="71">hash<pos:position pos:line="6" pos:column="75"/></name></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="77">&amp;<pos:position pos:line="6" pos:column="82"/></operator><name pos:line="6" pos:column="78">type<pos:position pos:line="6" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="84">size<pos:position pos:line="6" pos:column="88"/></name></expr></argument>)<pos:position pos:line="6" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="90"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="7" pos:column="17">entry<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">=<pos:position pos:line="7" pos:column="24"/></operator> <name><name pos:line="7" pos:column="25">entry<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">link<pos:position pos:line="7" pos:column="36"/></name></name></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="8" pos:column="10"/></block></while>
	<return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr>;<pos:position pos:line="9" pos:column="21"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

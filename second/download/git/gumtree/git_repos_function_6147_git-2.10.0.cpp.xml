<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6147_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_yes_no_answer<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">answer<pos:position pos:line="3" pos:column="20"/></name><index pos:line="3" pos:column="20">[<expr><literal type="number" pos:line="3" pos:column="21">1024<pos:position pos:line="3" pos:column="25"/></literal></expr>]<pos:position pos:line="3" pos:column="26"/></index></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">fgets<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">answer<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="27">sizeof<argument_list pos:line="5" pos:column="33">(<argument><expr><name pos:line="5" pos:column="34">answer<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="5" pos:column="43">stdin<pos:position pos:line="5" pos:column="48"/></name></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="50"/></condition><then pos:line="5" pos:column="50"> <block pos:line="5" pos:column="51">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">size_t<pos:position pos:line="6" pos:column="23"/></name></type> <name pos:line="6" pos:column="24">answer_len<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><call><name pos:line="6" pos:column="37">strlen<pos:position pos:line="6" pos:column="43"/></name><argument_list pos:line="6" pos:column="43">(<argument><expr><name pos:line="6" pos:column="44">answer<pos:position pos:line="6" pos:column="50"/></name></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">got_full_line<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><literal type="number" pos:line="7" pos:column="37">0<pos:position pos:line="7" pos:column="38"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="40">c<pos:position pos:line="7" pos:column="41"/></name></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>

		<comment type="block" pos:line="9" pos:column="17">/* remove the newline */</comment>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">answer_len<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">&gt;=<pos:position pos:line="10" pos:column="37"/></operator> <literal type="number" pos:line="10" pos:column="35">2<pos:position pos:line="10" pos:column="36"/></literal> <operator pos:line="10" pos:column="37">&amp;&amp;<pos:position pos:line="10" pos:column="47"/></operator> <name><name pos:line="10" pos:column="40">answer<pos:position pos:line="10" pos:column="46"/></name><index pos:line="10" pos:column="46">[<expr><name pos:line="10" pos:column="47">answer_len<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">-<pos:position pos:line="10" pos:column="58"/></operator><literal type="number" pos:line="10" pos:column="58">2<pos:position pos:line="10" pos:column="59"/></literal></expr>]<pos:position pos:line="10" pos:column="60"/></index></name> <operator pos:line="10" pos:column="61">==<pos:position pos:line="10" pos:column="63"/></operator> <literal type="char" pos:line="10" pos:column="64">'\r'<pos:position pos:line="10" pos:column="68"/></literal></expr>)<pos:position pos:line="10" pos:column="69"/></condition><then pos:line="10" pos:column="69"> <block pos:line="10" pos:column="70">{
			<expr_stmt><expr><name><name pos:line="11" pos:column="25">answer<pos:position pos:line="11" pos:column="31"/></name><index pos:line="11" pos:column="31">[<expr><name pos:line="11" pos:column="32">answer_len<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-<pos:position pos:line="11" pos:column="43"/></operator><literal type="number" pos:line="11" pos:column="43">2<pos:position pos:line="11" pos:column="44"/></literal></expr>]<pos:position pos:line="11" pos:column="45"/></index></name> <operator pos:line="11" pos:column="46">=<pos:position pos:line="11" pos:column="47"/></operator> <literal type="char" pos:line="11" pos:column="48">'\0'<pos:position pos:line="11" pos:column="52"/></literal></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name pos:line="12" pos:column="25">got_full_line<pos:position pos:line="12" pos:column="38"/></name> <operator pos:line="12" pos:column="39">=<pos:position pos:line="12" pos:column="40"/></operator> <literal type="number" pos:line="12" pos:column="41">1<pos:position pos:line="12" pos:column="42"/></literal></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="13" pos:column="18"/></block></then> <elseif pos:line="13" pos:column="19">else <if pos:line="13" pos:column="24">if <condition pos:line="13" pos:column="27">(<expr><name pos:line="13" pos:column="28">answer_len<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">&gt;=<pos:position pos:line="13" pos:column="44"/></operator> <literal type="number" pos:line="13" pos:column="42">1<pos:position pos:line="13" pos:column="43"/></literal> <operator pos:line="13" pos:column="44">&amp;&amp;<pos:position pos:line="13" pos:column="54"/></operator> <name><name pos:line="13" pos:column="47">answer<pos:position pos:line="13" pos:column="53"/></name><index pos:line="13" pos:column="53">[<expr><name pos:line="13" pos:column="54">answer_len<pos:position pos:line="13" pos:column="64"/></name><operator pos:line="13" pos:column="64">-<pos:position pos:line="13" pos:column="65"/></operator><literal type="number" pos:line="13" pos:column="65">1<pos:position pos:line="13" pos:column="66"/></literal></expr>]<pos:position pos:line="13" pos:column="67"/></index></name> <operator pos:line="13" pos:column="68">==<pos:position pos:line="13" pos:column="70"/></operator> <literal type="char" pos:line="13" pos:column="71">'\n'<pos:position pos:line="13" pos:column="75"/></literal></expr>)<pos:position pos:line="13" pos:column="76"/></condition><then pos:line="13" pos:column="76"> <block pos:line="13" pos:column="77">{
			<expr_stmt><expr><name><name pos:line="14" pos:column="25">answer<pos:position pos:line="14" pos:column="31"/></name><index pos:line="14" pos:column="31">[<expr><name pos:line="14" pos:column="32">answer_len<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-<pos:position pos:line="14" pos:column="43"/></operator><literal type="number" pos:line="14" pos:column="43">1<pos:position pos:line="14" pos:column="44"/></literal></expr>]<pos:position pos:line="14" pos:column="45"/></index></name> <operator pos:line="14" pos:column="46">=<pos:position pos:line="14" pos:column="47"/></operator> <literal type="char" pos:line="14" pos:column="48">'\0'<pos:position pos:line="14" pos:column="52"/></literal></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name pos:line="15" pos:column="25">got_full_line<pos:position pos:line="15" pos:column="38"/></name> <operator pos:line="15" pos:column="39">=<pos:position pos:line="15" pos:column="40"/></operator> <literal type="number" pos:line="15" pos:column="41">1<pos:position pos:line="15" pos:column="42"/></literal></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if></elseif></if>
		<comment type="block" pos:line="17" pos:column="17">/* flush the buffer in case we did not get the full line */</comment>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">got_full_line<pos:position pos:line="18" pos:column="35"/></name></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36">
			<block type="pseudo"><while pos:line="19" pos:column="25">while <condition pos:line="19" pos:column="31">(<expr><operator pos:line="19" pos:column="32">(<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="33">c<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">=<pos:position pos:line="19" pos:column="36"/></operator> <call><name pos:line="19" pos:column="37">getchar<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">()<pos:position pos:line="19" pos:column="46"/></argument_list></call><operator pos:line="19" pos:column="46">)<pos:position pos:line="19" pos:column="47"/></operator> <operator pos:line="19" pos:column="48">!=<pos:position pos:line="19" pos:column="50"/></operator> <name pos:line="19" pos:column="51">EOF<pos:position pos:line="19" pos:column="54"/></name> <operator pos:line="19" pos:column="55">&amp;&amp;<pos:position pos:line="19" pos:column="65"/></operator> <name pos:line="19" pos:column="58">c<pos:position pos:line="19" pos:column="59"/></name> <operator pos:line="19" pos:column="60">!=<pos:position pos:line="19" pos:column="62"/></operator> <literal type="char" pos:line="19" pos:column="63">'\n'<pos:position pos:line="19" pos:column="67"/></literal></expr>)<pos:position pos:line="19" pos:column="68"/></condition>
				<block type="pseudo"><empty_stmt pos:line="20" pos:column="33">;<pos:position pos:line="20" pos:column="34"/></empty_stmt></block></while></block></then></if>
	}<pos:position pos:line="21" pos:column="10"/></block></then> <else pos:line="21" pos:column="11">else
		<comment type="block" pos:line="22" pos:column="17">/* we could not read, return the
		 * default answer which is no */</comment>
		<block type="pseudo"><return pos:line="24" pos:column="17">return <expr><literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></return></block></else></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">tolower<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name><name pos:line="26" pos:column="21">answer<pos:position pos:line="26" pos:column="27"/></name><index pos:line="26" pos:column="27">[<expr><literal type="number" pos:line="26" pos:column="28">0<pos:position pos:line="26" pos:column="29"/></literal></expr>]<pos:position pos:line="26" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call> <operator pos:line="26" pos:column="32">==<pos:position pos:line="26" pos:column="34"/></operator> <literal type="char" pos:line="26" pos:column="35">'y'<pos:position pos:line="26" pos:column="38"/></literal> <operator pos:line="26" pos:column="39">&amp;&amp;<pos:position pos:line="26" pos:column="49"/></operator> <operator pos:line="26" pos:column="42">!<pos:position pos:line="26" pos:column="43"/></operator><name><name pos:line="26" pos:column="43">answer<pos:position pos:line="26" pos:column="49"/></name><index pos:line="26" pos:column="49">[<expr><literal type="number" pos:line="26" pos:column="50">1<pos:position pos:line="26" pos:column="51"/></literal></expr>]<pos:position pos:line="26" pos:column="52"/></index></name></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53">
		<block type="pseudo"><return pos:line="27" pos:column="17">return <expr><literal type="number" pos:line="27" pos:column="24">1<pos:position pos:line="27" pos:column="25"/></literal></expr>;<pos:position pos:line="27" pos:column="26"/></return></block></then></if>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><call><name pos:line="28" pos:column="14">strncasecmp<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">answer<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="34">"yes"<pos:position pos:line="28" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="41">sizeof<argument_list pos:line="28" pos:column="47">(<argument><expr><name pos:line="28" pos:column="48">answer<pos:position pos:line="28" pos:column="54"/></name></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="57"/></condition><then pos:line="28" pos:column="57">
		<block type="pseudo"><return pos:line="29" pos:column="17">return <expr><literal type="number" pos:line="29" pos:column="24">1<pos:position pos:line="29" pos:column="25"/></literal></expr>;<pos:position pos:line="29" pos:column="26"/></return></block></then></if>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">tolower<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name><name pos:line="30" pos:column="21">answer<pos:position pos:line="30" pos:column="27"/></name><index pos:line="30" pos:column="27">[<expr><literal type="number" pos:line="30" pos:column="28">0<pos:position pos:line="30" pos:column="29"/></literal></expr>]<pos:position pos:line="30" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call> <operator pos:line="30" pos:column="32">==<pos:position pos:line="30" pos:column="34"/></operator> <literal type="char" pos:line="30" pos:column="35">'n'<pos:position pos:line="30" pos:column="38"/></literal> <operator pos:line="30" pos:column="39">&amp;&amp;<pos:position pos:line="30" pos:column="49"/></operator> <operator pos:line="30" pos:column="42">!<pos:position pos:line="30" pos:column="43"/></operator><name><name pos:line="30" pos:column="43">answer<pos:position pos:line="30" pos:column="49"/></name><index pos:line="30" pos:column="49">[<expr><literal type="number" pos:line="30" pos:column="50">1<pos:position pos:line="30" pos:column="51"/></literal></expr>]<pos:position pos:line="30" pos:column="52"/></index></name></expr>)<pos:position pos:line="30" pos:column="53"/></condition><then pos:line="30" pos:column="53">
		<block type="pseudo"><return pos:line="31" pos:column="17">return <expr><literal type="number" pos:line="31" pos:column="24">0<pos:position pos:line="31" pos:column="25"/></literal></expr>;<pos:position pos:line="31" pos:column="26"/></return></block></then></if>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><call><name pos:line="32" pos:column="14">strncasecmp<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">answer<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="34">"no"<pos:position pos:line="32" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="40">sizeof<argument_list pos:line="32" pos:column="46">(<argument><expr><name pos:line="32" pos:column="47">answer<pos:position pos:line="32" pos:column="53"/></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="56"/></condition><then pos:line="32" pos:column="56">
		<block type="pseudo"><return pos:line="33" pos:column="17">return <expr><literal type="number" pos:line="33" pos:column="24">0<pos:position pos:line="33" pos:column="25"/></literal></expr>;<pos:position pos:line="33" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="35" pos:column="9">/* did not find an answer we understand */</comment>
	<return pos:line="36" pos:column="9">return <expr><operator pos:line="36" pos:column="16">-<pos:position pos:line="36" pos:column="17"/></operator><literal type="number" pos:line="36" pos:column="17">1<pos:position pos:line="36" pos:column="18"/></literal></expr>;<pos:position pos:line="36" pos:column="19"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_111_git-2.7.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">parse_padding_placeholder<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">strbuf<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">sb<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
					<parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">placeholder<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
					<parameter><decl><type><name><name pos:line="3" pos:column="41">struct<pos:position pos:line="3" pos:column="47"/></name> <name pos:line="3" pos:column="48">format_commit_context<pos:position pos:line="3" pos:column="69"/></name></name> <modifier pos:line="3" pos:column="70">*<pos:position pos:line="3" pos:column="71"/></modifier></type><name pos:line="3" pos:column="71">c<pos:position pos:line="3" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="73"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">ch<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><name pos:line="5" pos:column="26">placeholder<pos:position pos:line="5" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">enum<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">flush_type<pos:position pos:line="6" pos:column="24"/></name></name></type> <name pos:line="6" pos:column="25">flush_type<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">to_column<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>

	<switch pos:line="9" pos:column="9">switch <condition pos:line="9" pos:column="16">(<expr><operator pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">ch<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">++<pos:position pos:line="9" pos:column="22"/></operator></expr>)<pos:position pos:line="9" pos:column="23"/></condition> <block pos:line="9" pos:column="24">{
	<case pos:line="10" pos:column="9">case <expr><literal type="char" pos:line="10" pos:column="14">'&lt;'<pos:position pos:line="10" pos:column="20"/></literal></expr>:<pos:position pos:line="10" pos:column="18"/></case>
		<expr_stmt><expr><name pos:line="11" pos:column="17">flush_type<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">flush_right<pos:position pos:line="11" pos:column="41"/></name></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt>
		<break pos:line="12" pos:column="17">break;<pos:position pos:line="12" pos:column="23"/></break>
	<case pos:line="13" pos:column="9">case <expr><literal type="char" pos:line="13" pos:column="14">'&gt;'<pos:position pos:line="13" pos:column="20"/></literal></expr>:<pos:position pos:line="13" pos:column="18"/></case>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">*<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">ch<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">==<pos:position pos:line="14" pos:column="27"/></operator> <literal type="char" pos:line="14" pos:column="28">'&lt;'<pos:position pos:line="14" pos:column="34"/></literal></expr>)<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32"> <block pos:line="14" pos:column="33">{
			<expr_stmt><expr><name pos:line="15" pos:column="25">flush_type<pos:position pos:line="15" pos:column="35"/></name> <operator pos:line="15" pos:column="36">=<pos:position pos:line="15" pos:column="37"/></operator> <name pos:line="15" pos:column="38">flush_both<pos:position pos:line="15" pos:column="48"/></name></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="16" pos:column="25">ch<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">++<pos:position pos:line="16" pos:column="29"/></operator></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></then> <elseif pos:line="17" pos:column="19">else <if pos:line="17" pos:column="24">if <condition pos:line="17" pos:column="27">(<expr><operator pos:line="17" pos:column="28">*<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="29">ch<pos:position pos:line="17" pos:column="31"/></name> <operator pos:line="17" pos:column="32">==<pos:position pos:line="17" pos:column="34"/></operator> <literal type="char" pos:line="17" pos:column="35">'&gt;'<pos:position pos:line="17" pos:column="41"/></literal></expr>)<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39"> <block pos:line="17" pos:column="40">{
			<expr_stmt><expr><name pos:line="18" pos:column="25">flush_type<pos:position pos:line="18" pos:column="35"/></name> <operator pos:line="18" pos:column="36">=<pos:position pos:line="18" pos:column="37"/></operator> <name pos:line="18" pos:column="38">flush_left_and_steal<pos:position pos:line="18" pos:column="58"/></name></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name pos:line="19" pos:column="25">ch<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">++<pos:position pos:line="19" pos:column="29"/></operator></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if></elseif> <else pos:line="20" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="25">flush_type<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">=<pos:position pos:line="21" pos:column="37"/></operator> <name pos:line="21" pos:column="38">flush_left<pos:position pos:line="21" pos:column="48"/></name></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt></block></else></if>
		<break pos:line="22" pos:column="17">break;<pos:position pos:line="22" pos:column="23"/></break>
	<default pos:line="23" pos:column="9">default:<pos:position pos:line="23" pos:column="17"/></default>
		<return pos:line="24" pos:column="17">return <expr><literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></switch>

	<comment type="block" pos:line="27" pos:column="9">/* the next value means "wide enough to that column" */</comment>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">*<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">ch<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">==<pos:position pos:line="28" pos:column="19"/></operator> <literal type="char" pos:line="28" pos:column="20">'|'<pos:position pos:line="28" pos:column="23"/></literal></expr>)<pos:position pos:line="28" pos:column="24"/></condition><then pos:line="28" pos:column="24"> <block pos:line="28" pos:column="25">{
		<expr_stmt><expr><name pos:line="29" pos:column="17">to_column<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <literal type="number" pos:line="29" pos:column="29">1<pos:position pos:line="29" pos:column="30"/></literal></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">ch<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">++<pos:position pos:line="30" pos:column="21"/></operator></expr>;<pos:position pos:line="30" pos:column="22"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">*<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">ch<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">==<pos:position pos:line="33" pos:column="19"/></operator> <literal type="char" pos:line="33" pos:column="20">'('<pos:position pos:line="33" pos:column="23"/></literal></expr>)<pos:position pos:line="33" pos:column="24"/></condition><then pos:line="33" pos:column="24"> <block pos:line="33" pos:column="25">{
		<decl_stmt><decl><type><specifier pos:line="34" pos:column="17">const<pos:position pos:line="34" pos:column="22"/></specifier> <name pos:line="34" pos:column="23">char<pos:position pos:line="34" pos:column="27"/></name> <modifier pos:line="34" pos:column="28">*<pos:position pos:line="34" pos:column="29"/></modifier></type><name pos:line="34" pos:column="29">start<pos:position pos:line="34" pos:column="34"/></name> <init pos:line="34" pos:column="35">= <expr><name pos:line="34" pos:column="37">ch<pos:position pos:line="34" pos:column="39"/></name> <operator pos:line="34" pos:column="40">+<pos:position pos:line="34" pos:column="41"/></operator> <literal type="number" pos:line="34" pos:column="42">1<pos:position pos:line="34" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="34" pos:column="44"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="35" pos:column="17">const<pos:position pos:line="35" pos:column="22"/></specifier> <name pos:line="35" pos:column="23">char<pos:position pos:line="35" pos:column="27"/></name> <modifier pos:line="35" pos:column="28">*<pos:position pos:line="35" pos:column="29"/></modifier></type><name pos:line="35" pos:column="29">end<pos:position pos:line="35" pos:column="32"/></name> <init pos:line="35" pos:column="33">= <expr><name pos:line="35" pos:column="35">start<pos:position pos:line="35" pos:column="40"/></name> <operator pos:line="35" pos:column="41">+<pos:position pos:line="35" pos:column="42"/></operator> <call><name pos:line="35" pos:column="43">strcspn<pos:position pos:line="35" pos:column="50"/></name><argument_list pos:line="35" pos:column="50">(<argument><expr><name pos:line="35" pos:column="51">start<pos:position pos:line="35" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="58">",)"<pos:position pos:line="35" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="64"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="36" pos:column="17">char<pos:position pos:line="36" pos:column="21"/></name> <modifier pos:line="36" pos:column="22">*<pos:position pos:line="36" pos:column="23"/></modifier></type><name pos:line="36" pos:column="23">next<pos:position pos:line="36" pos:column="27"/></name></decl>;<pos:position pos:line="36" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="37" pos:column="17">int<pos:position pos:line="37" pos:column="20"/></name></type> <name pos:line="37" pos:column="21">width<pos:position pos:line="37" pos:column="26"/></name></decl>;<pos:position pos:line="37" pos:column="27"/></decl_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><operator pos:line="38" pos:column="21">!<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">end<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">||<pos:position pos:line="38" pos:column="28"/></operator> <name pos:line="38" pos:column="29">end<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">==<pos:position pos:line="38" pos:column="35"/></operator> <name pos:line="38" pos:column="36">start<pos:position pos:line="38" pos:column="41"/></name></expr>)<pos:position pos:line="38" pos:column="42"/></condition><then pos:line="38" pos:column="42">
			<block type="pseudo"><return pos:line="39" pos:column="25">return <expr><literal type="number" pos:line="39" pos:column="32">0<pos:position pos:line="39" pos:column="33"/></literal></expr>;<pos:position pos:line="39" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="40" pos:column="17">width<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <call><name pos:line="40" pos:column="25">strtoul<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name pos:line="40" pos:column="33">start<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="40">&amp;<pos:position pos:line="40" pos:column="45"/></operator><name pos:line="40" pos:column="41">next<pos:position pos:line="40" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="47">10<pos:position pos:line="40" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">next<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">==<pos:position pos:line="41" pos:column="28"/></operator> <name pos:line="41" pos:column="29">start<pos:position pos:line="41" pos:column="34"/></name> <operator pos:line="41" pos:column="35">||<pos:position pos:line="41" pos:column="37"/></operator> <name pos:line="41" pos:column="38">width<pos:position pos:line="41" pos:column="43"/></name> <operator pos:line="41" pos:column="44">==<pos:position pos:line="41" pos:column="46"/></operator> <literal type="number" pos:line="41" pos:column="47">0<pos:position pos:line="41" pos:column="48"/></literal></expr>)<pos:position pos:line="41" pos:column="49"/></condition><then pos:line="41" pos:column="49">
			<block type="pseudo"><return pos:line="42" pos:column="25">return <expr><literal type="number" pos:line="42" pos:column="32">0<pos:position pos:line="42" pos:column="33"/></literal></expr>;<pos:position pos:line="42" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="43" pos:column="17">c<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">padding<pos:position pos:line="43" pos:column="27"/></name></name> <operator pos:line="43" pos:column="28">=<pos:position pos:line="43" pos:column="29"/></operator> <ternary><condition><expr><name pos:line="43" pos:column="30">to_column<pos:position pos:line="43" pos:column="39"/></name></expr> ?<pos:position pos:line="43" pos:column="41"/></condition><then pos:line="43" pos:column="41"> <expr><operator pos:line="43" pos:column="42">-<pos:position pos:line="43" pos:column="43"/></operator><name pos:line="43" pos:column="43">width<pos:position pos:line="43" pos:column="48"/></name></expr> <pos:position pos:line="43" pos:column="49"/></then><else pos:line="43" pos:column="49">: <expr><name pos:line="43" pos:column="51">width<pos:position pos:line="43" pos:column="56"/></name></expr></else></ternary></expr>;<pos:position pos:line="43" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="44" pos:column="17">c<pos:position pos:line="44" pos:column="18"/></name><operator pos:line="44" pos:column="18">-&gt;<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="20">flush_type<pos:position pos:line="44" pos:column="30"/></name></name> <operator pos:line="44" pos:column="31">=<pos:position pos:line="44" pos:column="32"/></operator> <name pos:line="44" pos:column="33">flush_type<pos:position pos:line="44" pos:column="43"/></name></expr>;<pos:position pos:line="44" pos:column="44"/></expr_stmt>

		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><operator pos:line="46" pos:column="21">*<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="22">end<pos:position pos:line="46" pos:column="25"/></name> <operator pos:line="46" pos:column="26">==<pos:position pos:line="46" pos:column="28"/></operator> <literal type="char" pos:line="46" pos:column="29">','<pos:position pos:line="46" pos:column="32"/></literal></expr>)<pos:position pos:line="46" pos:column="33"/></condition><then pos:line="46" pos:column="33"> <block pos:line="46" pos:column="34">{
			<expr_stmt><expr><name pos:line="47" pos:column="25">start<pos:position pos:line="47" pos:column="30"/></name> <operator pos:line="47" pos:column="31">=<pos:position pos:line="47" pos:column="32"/></operator> <name pos:line="47" pos:column="33">end<pos:position pos:line="47" pos:column="36"/></name> <operator pos:line="47" pos:column="37">+<pos:position pos:line="47" pos:column="38"/></operator> <literal type="number" pos:line="47" pos:column="39">1<pos:position pos:line="47" pos:column="40"/></literal></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="48" pos:column="25">end<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <call><name pos:line="48" pos:column="31">strchr<pos:position pos:line="48" pos:column="37"/></name><argument_list pos:line="48" pos:column="37">(<argument><expr><name pos:line="48" pos:column="38">start<pos:position pos:line="48" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="48" pos:column="45">')'<pos:position pos:line="48" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="50"/></expr_stmt>
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><operator pos:line="49" pos:column="29">!<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="30">end<pos:position pos:line="49" pos:column="33"/></name> <operator pos:line="49" pos:column="34">||<pos:position pos:line="49" pos:column="36"/></operator> <name pos:line="49" pos:column="37">end<pos:position pos:line="49" pos:column="40"/></name> <operator pos:line="49" pos:column="41">==<pos:position pos:line="49" pos:column="43"/></operator> <name pos:line="49" pos:column="44">start<pos:position pos:line="49" pos:column="49"/></name></expr>)<pos:position pos:line="49" pos:column="50"/></condition><then pos:line="49" pos:column="50">
				<block type="pseudo"><return pos:line="50" pos:column="33">return <expr><literal type="number" pos:line="50" pos:column="40">0<pos:position pos:line="50" pos:column="41"/></literal></expr>;<pos:position pos:line="50" pos:column="42"/></return></block></then></if>
			<if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><call><name pos:line="51" pos:column="29">starts_with<pos:position pos:line="51" pos:column="40"/></name><argument_list pos:line="51" pos:column="40">(<argument><expr><name pos:line="51" pos:column="41">start<pos:position pos:line="51" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="48">"trunc)"<pos:position pos:line="51" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="58"/></condition><then pos:line="51" pos:column="58">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="52" pos:column="33">c<pos:position pos:line="52" pos:column="34"/></name><operator pos:line="52" pos:column="34">-&gt;<pos:position pos:line="52" pos:column="39"/></operator><name pos:line="52" pos:column="36">truncate<pos:position pos:line="52" pos:column="44"/></name></name> <operator pos:line="52" pos:column="45">=<pos:position pos:line="52" pos:column="46"/></operator> <name pos:line="52" pos:column="47">trunc_right<pos:position pos:line="52" pos:column="58"/></name></expr>;<pos:position pos:line="52" pos:column="59"/></expr_stmt></block></then>
			<elseif pos:line="53" pos:column="25">else <if pos:line="53" pos:column="30">if <condition pos:line="53" pos:column="33">(<expr><call><name pos:line="53" pos:column="34">starts_with<pos:position pos:line="53" pos:column="45"/></name><argument_list pos:line="53" pos:column="45">(<argument><expr><name pos:line="53" pos:column="46">start<pos:position pos:line="53" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="53">"ltrunc)"<pos:position pos:line="53" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="64"/></condition><then pos:line="53" pos:column="64">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="33">c<pos:position pos:line="54" pos:column="34"/></name><operator pos:line="54" pos:column="34">-&gt;<pos:position pos:line="54" pos:column="39"/></operator><name pos:line="54" pos:column="36">truncate<pos:position pos:line="54" pos:column="44"/></name></name> <operator pos:line="54" pos:column="45">=<pos:position pos:line="54" pos:column="46"/></operator> <name pos:line="54" pos:column="47">trunc_left<pos:position pos:line="54" pos:column="57"/></name></expr>;<pos:position pos:line="54" pos:column="58"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="55" pos:column="25">else <if pos:line="55" pos:column="30">if <condition pos:line="55" pos:column="33">(<expr><call><name pos:line="55" pos:column="34">starts_with<pos:position pos:line="55" pos:column="45"/></name><argument_list pos:line="55" pos:column="45">(<argument><expr><name pos:line="55" pos:column="46">start<pos:position pos:line="55" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="53">"mtrunc)"<pos:position pos:line="55" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="64"/></condition><then pos:line="55" pos:column="64">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="56" pos:column="33">c<pos:position pos:line="56" pos:column="34"/></name><operator pos:line="56" pos:column="34">-&gt;<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="36">truncate<pos:position pos:line="56" pos:column="44"/></name></name> <operator pos:line="56" pos:column="45">=<pos:position pos:line="56" pos:column="46"/></operator> <name pos:line="56" pos:column="47">trunc_middle<pos:position pos:line="56" pos:column="59"/></name></expr>;<pos:position pos:line="56" pos:column="60"/></expr_stmt></block></then></if></elseif>
			<else pos:line="57" pos:column="25">else
				<block type="pseudo"><return pos:line="58" pos:column="33">return <expr><literal type="number" pos:line="58" pos:column="40">0<pos:position pos:line="58" pos:column="41"/></literal></expr>;<pos:position pos:line="58" pos:column="42"/></return></block></else></if>
		}<pos:position pos:line="59" pos:column="18"/></block></then> <else pos:line="59" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="60" pos:column="25">c<pos:position pos:line="60" pos:column="26"/></name><operator pos:line="60" pos:column="26">-&gt;<pos:position pos:line="60" pos:column="31"/></operator><name pos:line="60" pos:column="28">truncate<pos:position pos:line="60" pos:column="36"/></name></name> <operator pos:line="60" pos:column="37">=<pos:position pos:line="60" pos:column="38"/></operator> <name pos:line="60" pos:column="39">trunc_none<pos:position pos:line="60" pos:column="49"/></name></expr>;<pos:position pos:line="60" pos:column="50"/></expr_stmt></block></else></if>

		<return pos:line="62" pos:column="17">return <expr><name pos:line="62" pos:column="24">end<pos:position pos:line="62" pos:column="27"/></name> <operator pos:line="62" pos:column="28">-<pos:position pos:line="62" pos:column="29"/></operator> <name pos:line="62" pos:column="30">placeholder<pos:position pos:line="62" pos:column="41"/></name> <operator pos:line="62" pos:column="42">+<pos:position pos:line="62" pos:column="43"/></operator> <literal type="number" pos:line="62" pos:column="44">1<pos:position pos:line="62" pos:column="45"/></literal></expr>;<pos:position pos:line="62" pos:column="46"/></return>
	}<pos:position pos:line="63" pos:column="10"/></block></then></if>
	<return pos:line="64" pos:column="9">return <expr><literal type="number" pos:line="64" pos:column="16">0<pos:position pos:line="64" pos:column="17"/></literal></expr>;<pos:position pos:line="64" pos:column="18"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

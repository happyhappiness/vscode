<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3788_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">init_tree_desc_from_tree<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">tree_desc<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">desc<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="62">struct<pos:position pos:line="1" pos:column="68"/></name> <name pos:line="1" pos:column="69">tree<pos:position pos:line="1" pos:column="73"/></name></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">tree<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">parse_tree<pos:position pos:line="3" pos:column="19"/></name><argument_list pos:line="3" pos:column="19">(<argument><expr><name pos:line="3" pos:column="20">tree<pos:position pos:line="3" pos:column="24"/></name></expr></argument>)<pos:position pos:line="3" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">init_tree_desc<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">(<argument><expr><name pos:line="4" pos:column="24">desc<pos:position pos:line="4" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="30">tree<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">-&gt;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="36">buffer<pos:position pos:line="4" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="44">tree<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">-&gt;<pos:position pos:line="4" pos:column="53"/></operator><name pos:line="4" pos:column="50">size<pos:position pos:line="4" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="56"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

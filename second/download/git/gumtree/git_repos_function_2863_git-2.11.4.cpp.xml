<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2863_git-2.11.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">post_rpc<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">rpc_state<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">rpc<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">active_request_slot<pos:position pos:line="3" pos:column="35"/></name></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">slot<pos:position pos:line="3" pos:column="41"/></name></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">curl_slist<pos:position pos:line="4" pos:column="26"/></name></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">headers<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><call><name pos:line="4" pos:column="38">http_copy_default_headers<pos:position pos:line="4" pos:column="63"/></name><argument_list pos:line="4" pos:column="63">()<pos:position pos:line="4" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="66"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">use_gzip<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name><name pos:line="5" pos:column="24">rpc<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">gzip_request<pos:position pos:line="5" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">gzip_body<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">NULL<pos:position pos:line="6" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">gzip_size<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><literal type="number" pos:line="7" pos:column="28">0<pos:position pos:line="7" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">err<pos:position pos:line="8" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="18">large_request<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><literal type="number" pos:line="8" pos:column="34">0<pos:position pos:line="8" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">needs_100_continue<pos:position pos:line="9" pos:column="31"/></name> <init pos:line="9" pos:column="32">= <expr><literal type="number" pos:line="9" pos:column="34">0<pos:position pos:line="9" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* Try to load the entire request, if we can fit it into the
	 * allocated buffer space we can use HTTP/1.0 and avoid the
	 * chunked encoding mess.
	 */</comment>
	<while pos:line="15" pos:column="9">while <condition pos:line="15" pos:column="15">(<expr><literal type="number" pos:line="15" pos:column="16">1<pos:position pos:line="15" pos:column="17"/></literal></expr>)<pos:position pos:line="15" pos:column="18"/></condition> <block pos:line="15" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">size_t<pos:position pos:line="16" pos:column="23"/></name></type> <name pos:line="16" pos:column="24">left<pos:position pos:line="16" pos:column="28"/></name> <init pos:line="16" pos:column="29">= <expr><name><name pos:line="16" pos:column="31">rpc<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">-&gt;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="36">alloc<pos:position pos:line="16" pos:column="41"/></name></name> <operator pos:line="16" pos:column="42">-<pos:position pos:line="16" pos:column="43"/></operator> <name><name pos:line="16" pos:column="44">rpc<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">-&gt;<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="49">len<pos:position pos:line="16" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="53"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">char<pos:position pos:line="17" pos:column="21"/></name> <modifier pos:line="17" pos:column="22">*<pos:position pos:line="17" pos:column="23"/></modifier></type><name pos:line="17" pos:column="23">buf<pos:position pos:line="17" pos:column="26"/></name> <init pos:line="17" pos:column="27">= <expr><name><name pos:line="17" pos:column="29">rpc<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">buf<pos:position pos:line="17" pos:column="37"/></name></name> <operator pos:line="17" pos:column="38">+<pos:position pos:line="17" pos:column="39"/></operator> <name><name pos:line="17" pos:column="40">rpc<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">len<pos:position pos:line="17" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="17" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">int<pos:position pos:line="18" pos:column="20"/></name></type> <name pos:line="18" pos:column="21">n<pos:position pos:line="18" pos:column="22"/></name></decl>;<pos:position pos:line="18" pos:column="23"/></decl_stmt>

		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">left<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">&lt;<pos:position pos:line="20" pos:column="30"/></operator> <name pos:line="20" pos:column="28">LARGE_PACKET_MAX<pos:position pos:line="20" pos:column="44"/></name></expr>)<pos:position pos:line="20" pos:column="45"/></condition><then pos:line="20" pos:column="45"> <block pos:line="20" pos:column="46">{
			<expr_stmt><expr><name pos:line="21" pos:column="25">large_request<pos:position pos:line="21" pos:column="38"/></name> <operator pos:line="21" pos:column="39">=<pos:position pos:line="21" pos:column="40"/></operator> <literal type="number" pos:line="21" pos:column="41">1<pos:position pos:line="21" pos:column="42"/></literal></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="22" pos:column="25">use_gzip<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">=<pos:position pos:line="22" pos:column="35"/></operator> <literal type="number" pos:line="22" pos:column="36">0<pos:position pos:line="22" pos:column="37"/></literal></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
			<break pos:line="23" pos:column="25">break;<pos:position pos:line="23" pos:column="31"/></break>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="26" pos:column="17">n<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <call><name pos:line="26" pos:column="21">packet_read<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name><name pos:line="26" pos:column="33">rpc<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">-&gt;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="38">out<pos:position pos:line="26" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">NULL<pos:position pos:line="26" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="49">NULL<pos:position pos:line="26" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="55">buf<pos:position pos:line="26" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="60">left<pos:position pos:line="26" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="66">0<pos:position pos:line="26" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="69"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">n<pos:position pos:line="27" pos:column="23"/></name></expr>)<pos:position pos:line="27" pos:column="24"/></condition><then pos:line="27" pos:column="24">
			<block type="pseudo"><break pos:line="28" pos:column="25">break;<pos:position pos:line="28" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">rpc<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">len<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">+=<pos:position pos:line="29" pos:column="28"/></operator> <name pos:line="29" pos:column="29">n<pos:position pos:line="29" pos:column="30"/></name></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></while>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">large_request<pos:position pos:line="32" pos:column="26"/></name></expr>)<pos:position pos:line="32" pos:column="27"/></condition><then pos:line="32" pos:column="27"> <block pos:line="32" pos:column="28">{
		<decl_stmt><decl><type><name><name pos:line="33" pos:column="17">struct<pos:position pos:line="33" pos:column="23"/></name> <name pos:line="33" pos:column="24">slot_results<pos:position pos:line="33" pos:column="36"/></name></name></type> <name pos:line="33" pos:column="37">results<pos:position pos:line="33" pos:column="44"/></name></decl>;<pos:position pos:line="33" pos:column="45"/></decl_stmt>

		<do pos:line="35" pos:column="17">do <block pos:line="35" pos:column="20">{
			<expr_stmt><expr><name pos:line="36" pos:column="25">err<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <call><name pos:line="36" pos:column="31">probe_rpc<pos:position pos:line="36" pos:column="40"/></name><argument_list pos:line="36" pos:column="40">(<argument><expr><name pos:line="36" pos:column="41">rpc<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="46">&amp;<pos:position pos:line="36" pos:column="51"/></operator><name pos:line="36" pos:column="47">results<pos:position pos:line="36" pos:column="54"/></name></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt>
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><name pos:line="37" pos:column="29">err<pos:position pos:line="37" pos:column="32"/></name> <operator pos:line="37" pos:column="33">==<pos:position pos:line="37" pos:column="35"/></operator> <name pos:line="37" pos:column="36">HTTP_REAUTH<pos:position pos:line="37" pos:column="47"/></name></expr>)<pos:position pos:line="37" pos:column="48"/></condition><then pos:line="37" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="33">credential_fill<pos:position pos:line="38" pos:column="48"/></name><argument_list pos:line="38" pos:column="48">(<argument><expr><operator pos:line="38" pos:column="49">&amp;<pos:position pos:line="38" pos:column="54"/></operator><name pos:line="38" pos:column="50">http_auth<pos:position pos:line="38" pos:column="59"/></name></expr></argument>)<pos:position pos:line="38" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="61"/></expr_stmt></block></then></if>
		}<pos:position pos:line="39" pos:column="18"/></block> while <condition pos:line="39" pos:column="25">(<expr><name pos:line="39" pos:column="26">err<pos:position pos:line="39" pos:column="29"/></name> <operator pos:line="39" pos:column="30">==<pos:position pos:line="39" pos:column="32"/></operator> <name pos:line="39" pos:column="33">HTTP_REAUTH<pos:position pos:line="39" pos:column="44"/></name></expr>)<pos:position pos:line="39" pos:column="45"/></condition>;<pos:position pos:line="39" pos:column="46"/></do>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">err<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">!=<pos:position pos:line="40" pos:column="27"/></operator> <name pos:line="40" pos:column="28">HTTP_OK<pos:position pos:line="40" pos:column="35"/></name></expr>)<pos:position pos:line="40" pos:column="36"/></condition><then pos:line="40" pos:column="36">
			<block type="pseudo"><return pos:line="41" pos:column="25">return <expr><operator pos:line="41" pos:column="32">-<pos:position pos:line="41" pos:column="33"/></operator><literal type="number" pos:line="41" pos:column="33">1<pos:position pos:line="41" pos:column="34"/></literal></expr>;<pos:position pos:line="41" pos:column="35"/></return></block></then></if>

		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name><name pos:line="43" pos:column="21">results<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">.<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="29">auth_avail<pos:position pos:line="43" pos:column="39"/></name></name> <operator pos:line="43" pos:column="40">&amp;<pos:position pos:line="43" pos:column="45"/></operator> <name pos:line="43" pos:column="42">CURLAUTH_GSSNEGOTIATE<pos:position pos:line="43" pos:column="63"/></name></expr>)<pos:position pos:line="43" pos:column="64"/></condition><then pos:line="43" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="25">needs_100_continue<pos:position pos:line="44" pos:column="43"/></name> <operator pos:line="44" pos:column="44">=<pos:position pos:line="44" pos:column="45"/></operator> <literal type="number" pos:line="44" pos:column="46">1<pos:position pos:line="44" pos:column="47"/></literal></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt></block></then></if>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="47" pos:column="9">headers<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">=<pos:position pos:line="47" pos:column="18"/></operator> <call><name pos:line="47" pos:column="19">curl_slist_append<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><name pos:line="47" pos:column="37">headers<pos:position pos:line="47" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="46">rpc<pos:position pos:line="47" pos:column="49"/></name><operator pos:line="47" pos:column="49">-&gt;<pos:position pos:line="47" pos:column="54"/></operator><name pos:line="47" pos:column="51">hdr_content_type<pos:position pos:line="47" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><name pos:line="48" pos:column="9">headers<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <call><name pos:line="48" pos:column="19">curl_slist_append<pos:position pos:line="48" pos:column="36"/></name><argument_list pos:line="48" pos:column="36">(<argument><expr><name pos:line="48" pos:column="37">headers<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="46">rpc<pos:position pos:line="48" pos:column="49"/></name><operator pos:line="48" pos:column="49">-&gt;<pos:position pos:line="48" pos:column="54"/></operator><name pos:line="48" pos:column="51">hdr_accept<pos:position pos:line="48" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><name pos:line="49" pos:column="9">headers<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <call><name pos:line="49" pos:column="19">curl_slist_append<pos:position pos:line="49" pos:column="36"/></name><argument_list pos:line="49" pos:column="36">(<argument><expr><name pos:line="49" pos:column="37">headers<pos:position pos:line="49" pos:column="44"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="49" pos:column="46">needs_100_continue<pos:position pos:line="49" pos:column="64"/></name></expr> ?<pos:position pos:line="49" pos:column="66"/></condition><then pos:line="49" pos:column="66">
		<expr><literal type="string" pos:line="50" pos:column="17">"Expect: 100-continue"<pos:position pos:line="50" pos:column="39"/></literal></expr> <pos:position pos:line="50" pos:column="40"/></then><else pos:line="50" pos:column="40">: <expr><literal type="string" pos:line="50" pos:column="42">"Expect:"<pos:position pos:line="50" pos:column="51"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="53"/></expr_stmt>

<label><name pos:line="52" pos:column="1">retry<pos:position pos:line="52" pos:column="6"/></name>:<pos:position pos:line="52" pos:column="7"/></label>
	<expr_stmt><expr><name pos:line="53" pos:column="9">slot<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <call><name pos:line="53" pos:column="16">get_active_slot<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">()<pos:position pos:line="53" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="55" pos:column="9">curl_easy_setopt<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><name><name pos:line="55" pos:column="26">slot<pos:position pos:line="55" pos:column="30"/></name><operator pos:line="55" pos:column="30">-&gt;<pos:position pos:line="55" pos:column="35"/></operator><name pos:line="55" pos:column="32">curl<pos:position pos:line="55" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="38">CURLOPT_NOBODY<pos:position pos:line="55" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="54">0<pos:position pos:line="55" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">curl_easy_setopt<pos:position pos:line="56" pos:column="25"/></name><argument_list pos:line="56" pos:column="25">(<argument><expr><name><name pos:line="56" pos:column="26">slot<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">-&gt;<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="32">curl<pos:position pos:line="56" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="38">CURLOPT_POST<pos:position pos:line="56" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="52">1<pos:position pos:line="56" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="57" pos:column="9">curl_easy_setopt<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name><name pos:line="57" pos:column="26">slot<pos:position pos:line="57" pos:column="30"/></name><operator pos:line="57" pos:column="30">-&gt;<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="32">curl<pos:position pos:line="57" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="38">CURLOPT_URL<pos:position pos:line="57" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="51">rpc<pos:position pos:line="57" pos:column="54"/></name><operator pos:line="57" pos:column="54">-&gt;<pos:position pos:line="57" pos:column="59"/></operator><name pos:line="57" pos:column="56">service_url<pos:position pos:line="57" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">curl_easy_setopt<pos:position pos:line="58" pos:column="25"/></name><argument_list pos:line="58" pos:column="25">(<argument><expr><name><name pos:line="58" pos:column="26">slot<pos:position pos:line="58" pos:column="30"/></name><operator pos:line="58" pos:column="30">-&gt;<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="32">curl<pos:position pos:line="58" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="38">CURLOPT_ENCODING<pos:position pos:line="58" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="56">"gzip"<pos:position pos:line="58" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="64"/></expr_stmt>

	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">large_request<pos:position pos:line="60" pos:column="26"/></name></expr>)<pos:position pos:line="60" pos:column="27"/></condition><then pos:line="60" pos:column="27"> <block pos:line="60" pos:column="28">{
		<comment type="block" pos:line="61" pos:column="17">/* The request body is large and the size cannot be predicted.
		 * We must use chunked encoding to send it.
		 */</comment>
		<expr_stmt><expr><name pos:line="64" pos:column="17">headers<pos:position pos:line="64" pos:column="24"/></name> <operator pos:line="64" pos:column="25">=<pos:position pos:line="64" pos:column="26"/></operator> <call><name pos:line="64" pos:column="27">curl_slist_append<pos:position pos:line="64" pos:column="44"/></name><argument_list pos:line="64" pos:column="44">(<argument><expr><name pos:line="64" pos:column="45">headers<pos:position pos:line="64" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="54">"Transfer-Encoding: chunked"<pos:position pos:line="64" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="84"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="65" pos:column="17">rpc<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">-&gt;<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="22">initial_buffer<pos:position pos:line="65" pos:column="36"/></name></name> <operator pos:line="65" pos:column="37">=<pos:position pos:line="65" pos:column="38"/></operator> <literal type="number" pos:line="65" pos:column="39">1<pos:position pos:line="65" pos:column="40"/></literal></expr>;<pos:position pos:line="65" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="66" pos:column="17">curl_easy_setopt<pos:position pos:line="66" pos:column="33"/></name><argument_list pos:line="66" pos:column="33">(<argument><expr><name><name pos:line="66" pos:column="34">slot<pos:position pos:line="66" pos:column="38"/></name><operator pos:line="66" pos:column="38">-&gt;<pos:position pos:line="66" pos:column="43"/></operator><name pos:line="66" pos:column="40">curl<pos:position pos:line="66" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="46">CURLOPT_READFUNCTION<pos:position pos:line="66" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="68">rpc_out<pos:position pos:line="66" pos:column="75"/></name></expr></argument>)<pos:position pos:line="66" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">curl_easy_setopt<pos:position pos:line="67" pos:column="33"/></name><argument_list pos:line="67" pos:column="33">(<argument><expr><name><name pos:line="67" pos:column="34">slot<pos:position pos:line="67" pos:column="38"/></name><operator pos:line="67" pos:column="38">-&gt;<pos:position pos:line="67" pos:column="43"/></operator><name pos:line="67" pos:column="40">curl<pos:position pos:line="67" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="46">CURLOPT_INFILE<pos:position pos:line="67" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="62">rpc<pos:position pos:line="67" pos:column="65"/></name></expr></argument>)<pos:position pos:line="67" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="67"/></expr_stmt>
<cpp:ifndef pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">ifndef<pos:position pos:line="68" pos:column="8"/></cpp:directive> <name pos:line="68" pos:column="9">NO_CURL_IOCTL<pos:position pos:line="68" pos:column="22"/></name></cpp:ifndef>
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">curl_easy_setopt<pos:position pos:line="69" pos:column="33"/></name><argument_list pos:line="69" pos:column="33">(<argument><expr><name><name pos:line="69" pos:column="34">slot<pos:position pos:line="69" pos:column="38"/></name><operator pos:line="69" pos:column="38">-&gt;<pos:position pos:line="69" pos:column="43"/></operator><name pos:line="69" pos:column="40">curl<pos:position pos:line="69" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="46">CURLOPT_IOCTLFUNCTION<pos:position pos:line="69" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="69">rpc_ioctl<pos:position pos:line="69" pos:column="78"/></name></expr></argument>)<pos:position pos:line="69" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="70" pos:column="17">curl_easy_setopt<pos:position pos:line="70" pos:column="33"/></name><argument_list pos:line="70" pos:column="33">(<argument><expr><name><name pos:line="70" pos:column="34">slot<pos:position pos:line="70" pos:column="38"/></name><operator pos:line="70" pos:column="38">-&gt;<pos:position pos:line="70" pos:column="43"/></operator><name pos:line="70" pos:column="40">curl<pos:position pos:line="70" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="46">CURLOPT_IOCTLDATA<pos:position pos:line="70" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="65">rpc<pos:position pos:line="70" pos:column="68"/></name></expr></argument>)<pos:position pos:line="70" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="70"/></expr_stmt>
<cpp:endif pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">endif<pos:position pos:line="71" pos:column="7"/></cpp:directive></cpp:endif>
		<if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><name><name pos:line="72" pos:column="21">options<pos:position pos:line="72" pos:column="28"/></name><operator pos:line="72" pos:column="28">.<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="29">verbosity<pos:position pos:line="72" pos:column="38"/></name></name> <operator pos:line="72" pos:column="39">&gt;<pos:position pos:line="72" pos:column="43"/></operator> <literal type="number" pos:line="72" pos:column="41">1<pos:position pos:line="72" pos:column="42"/></literal></expr>)<pos:position pos:line="72" pos:column="43"/></condition><then pos:line="72" pos:column="43"> <block pos:line="72" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="73" pos:column="25">fprintf<pos:position pos:line="73" pos:column="32"/></name><argument_list pos:line="73" pos:column="32">(<argument><expr><name pos:line="73" pos:column="33">stderr<pos:position pos:line="73" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="41">"POST %s (chunked)\n"<pos:position pos:line="73" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="64">rpc<pos:position pos:line="73" pos:column="67"/></name><operator pos:line="73" pos:column="67">-&gt;<pos:position pos:line="73" pos:column="72"/></operator><name pos:line="73" pos:column="69">service_name<pos:position pos:line="73" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="83"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="74" pos:column="25">fflush<pos:position pos:line="74" pos:column="31"/></name><argument_list pos:line="74" pos:column="31">(<argument><expr><name pos:line="74" pos:column="32">stderr<pos:position pos:line="74" pos:column="38"/></name></expr></argument>)<pos:position pos:line="74" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="75" pos:column="18"/></block></then></if>

	}<pos:position pos:line="77" pos:column="10"/></block></then> <elseif pos:line="77" pos:column="11">else <if pos:line="77" pos:column="16">if <condition pos:line="77" pos:column="19">(<expr><name pos:line="77" pos:column="20">gzip_body<pos:position pos:line="77" pos:column="29"/></name></expr>)<pos:position pos:line="77" pos:column="30"/></condition><then pos:line="77" pos:column="30"> <block pos:line="77" pos:column="31">{
		<comment type="block" pos:line="78" pos:column="17">/*
		 * If we are looping to retry authentication, then the previous
		 * run will have set up the headers and gzip buffer already,
		 * and we just need to send it.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="83" pos:column="17">curl_easy_setopt<pos:position pos:line="83" pos:column="33"/></name><argument_list pos:line="83" pos:column="33">(<argument><expr><name><name pos:line="83" pos:column="34">slot<pos:position pos:line="83" pos:column="38"/></name><operator pos:line="83" pos:column="38">-&gt;<pos:position pos:line="83" pos:column="43"/></operator><name pos:line="83" pos:column="40">curl<pos:position pos:line="83" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="46">CURLOPT_POSTFIELDS<pos:position pos:line="83" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="66">gzip_body<pos:position pos:line="83" pos:column="75"/></name></expr></argument>)<pos:position pos:line="83" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="84" pos:column="17">curl_easy_setopt<pos:position pos:line="84" pos:column="33"/></name><argument_list pos:line="84" pos:column="33">(<argument><expr><name><name pos:line="84" pos:column="34">slot<pos:position pos:line="84" pos:column="38"/></name><operator pos:line="84" pos:column="38">-&gt;<pos:position pos:line="84" pos:column="43"/></operator><name pos:line="84" pos:column="40">curl<pos:position pos:line="84" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="46">CURLOPT_POSTFIELDSIZE<pos:position pos:line="84" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="69">gzip_size<pos:position pos:line="84" pos:column="78"/></name></expr></argument>)<pos:position pos:line="84" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="80"/></expr_stmt>

	}<pos:position pos:line="86" pos:column="10"/></block></then></if></elseif> <elseif pos:line="86" pos:column="11">else <if pos:line="86" pos:column="16">if <condition pos:line="86" pos:column="19">(<expr><name pos:line="86" pos:column="20">use_gzip<pos:position pos:line="86" pos:column="28"/></name> <operator pos:line="86" pos:column="29">&amp;&amp;<pos:position pos:line="86" pos:column="39"/></operator> <literal type="number" pos:line="86" pos:column="32">1024<pos:position pos:line="86" pos:column="36"/></literal> <operator pos:line="86" pos:column="37">&lt;<pos:position pos:line="86" pos:column="41"/></operator> <name><name pos:line="86" pos:column="39">rpc<pos:position pos:line="86" pos:column="42"/></name><operator pos:line="86" pos:column="42">-&gt;<pos:position pos:line="86" pos:column="47"/></operator><name pos:line="86" pos:column="44">len<pos:position pos:line="86" pos:column="47"/></name></name></expr>)<pos:position pos:line="86" pos:column="48"/></condition><then pos:line="86" pos:column="48"> <block pos:line="86" pos:column="49">{
		<comment type="block" pos:line="87" pos:column="17">/* The client backend isn't giving us compressed data so
		 * we can try to deflate it ourselves, this may save on.
		 * the transfer time.
		 */</comment>
		<decl_stmt><decl><type><name pos:line="91" pos:column="17">git_zstream<pos:position pos:line="91" pos:column="28"/></name></type> <name pos:line="91" pos:column="29">stream<pos:position pos:line="91" pos:column="35"/></name></decl>;<pos:position pos:line="91" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="92" pos:column="17">int<pos:position pos:line="92" pos:column="20"/></name></type> <name pos:line="92" pos:column="21">ret<pos:position pos:line="92" pos:column="24"/></name></decl>;<pos:position pos:line="92" pos:column="25"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="94" pos:column="17">git_deflate_init_gzip<pos:position pos:line="94" pos:column="38"/></name><argument_list pos:line="94" pos:column="38">(<argument><expr><operator pos:line="94" pos:column="39">&amp;<pos:position pos:line="94" pos:column="44"/></operator><name pos:line="94" pos:column="40">stream<pos:position pos:line="94" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="48">Z_BEST_COMPRESSION<pos:position pos:line="94" pos:column="66"/></name></expr></argument>)<pos:position pos:line="94" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name pos:line="95" pos:column="17">gzip_size<pos:position pos:line="95" pos:column="26"/></name> <operator pos:line="95" pos:column="27">=<pos:position pos:line="95" pos:column="28"/></operator> <call><name pos:line="95" pos:column="29">git_deflate_bound<pos:position pos:line="95" pos:column="46"/></name><argument_list pos:line="95" pos:column="46">(<argument><expr><operator pos:line="95" pos:column="47">&amp;<pos:position pos:line="95" pos:column="52"/></operator><name pos:line="95" pos:column="48">stream<pos:position pos:line="95" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="56">rpc<pos:position pos:line="95" pos:column="59"/></name><operator pos:line="95" pos:column="59">-&gt;<pos:position pos:line="95" pos:column="64"/></operator><name pos:line="95" pos:column="61">len<pos:position pos:line="95" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><name pos:line="96" pos:column="17">gzip_body<pos:position pos:line="96" pos:column="26"/></name> <operator pos:line="96" pos:column="27">=<pos:position pos:line="96" pos:column="28"/></operator> <call><name pos:line="96" pos:column="29">xmalloc<pos:position pos:line="96" pos:column="36"/></name><argument_list pos:line="96" pos:column="36">(<argument><expr><name pos:line="96" pos:column="37">gzip_size<pos:position pos:line="96" pos:column="46"/></name></expr></argument>)<pos:position pos:line="96" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="48"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="98" pos:column="17">stream<pos:position pos:line="98" pos:column="23"/></name><operator pos:line="98" pos:column="23">.<pos:position pos:line="98" pos:column="24"/></operator><name pos:line="98" pos:column="24">next_in<pos:position pos:line="98" pos:column="31"/></name></name> <operator pos:line="98" pos:column="32">=<pos:position pos:line="98" pos:column="33"/></operator> <operator pos:line="98" pos:column="34">(<pos:position pos:line="98" pos:column="35"/></operator><name pos:line="98" pos:column="35">unsigned<pos:position pos:line="98" pos:column="43"/></name> <name pos:line="98" pos:column="44">char<pos:position pos:line="98" pos:column="48"/></name> <operator pos:line="98" pos:column="49">*<pos:position pos:line="98" pos:column="50"/></operator><operator pos:line="98" pos:column="50">)<pos:position pos:line="98" pos:column="51"/></operator><name><name pos:line="98" pos:column="51">rpc<pos:position pos:line="98" pos:column="54"/></name><operator pos:line="98" pos:column="54">-&gt;<pos:position pos:line="98" pos:column="59"/></operator><name pos:line="98" pos:column="56">buf<pos:position pos:line="98" pos:column="59"/></name></name></expr>;<pos:position pos:line="98" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="99" pos:column="17">stream<pos:position pos:line="99" pos:column="23"/></name><operator pos:line="99" pos:column="23">.<pos:position pos:line="99" pos:column="24"/></operator><name pos:line="99" pos:column="24">avail_in<pos:position pos:line="99" pos:column="32"/></name></name> <operator pos:line="99" pos:column="33">=<pos:position pos:line="99" pos:column="34"/></operator> <name><name pos:line="99" pos:column="35">rpc<pos:position pos:line="99" pos:column="38"/></name><operator pos:line="99" pos:column="38">-&gt;<pos:position pos:line="99" pos:column="43"/></operator><name pos:line="99" pos:column="40">len<pos:position pos:line="99" pos:column="43"/></name></name></expr>;<pos:position pos:line="99" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="100" pos:column="17">stream<pos:position pos:line="100" pos:column="23"/></name><operator pos:line="100" pos:column="23">.<pos:position pos:line="100" pos:column="24"/></operator><name pos:line="100" pos:column="24">next_out<pos:position pos:line="100" pos:column="32"/></name></name> <operator pos:line="100" pos:column="33">=<pos:position pos:line="100" pos:column="34"/></operator> <operator pos:line="100" pos:column="35">(<pos:position pos:line="100" pos:column="36"/></operator><name pos:line="100" pos:column="36">unsigned<pos:position pos:line="100" pos:column="44"/></name> <name pos:line="100" pos:column="45">char<pos:position pos:line="100" pos:column="49"/></name> <operator pos:line="100" pos:column="50">*<pos:position pos:line="100" pos:column="51"/></operator><operator pos:line="100" pos:column="51">)<pos:position pos:line="100" pos:column="52"/></operator><name pos:line="100" pos:column="52">gzip_body<pos:position pos:line="100" pos:column="61"/></name></expr>;<pos:position pos:line="100" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="101" pos:column="17">stream<pos:position pos:line="101" pos:column="23"/></name><operator pos:line="101" pos:column="23">.<pos:position pos:line="101" pos:column="24"/></operator><name pos:line="101" pos:column="24">avail_out<pos:position pos:line="101" pos:column="33"/></name></name> <operator pos:line="101" pos:column="34">=<pos:position pos:line="101" pos:column="35"/></operator> <name pos:line="101" pos:column="36">gzip_size<pos:position pos:line="101" pos:column="45"/></name></expr>;<pos:position pos:line="101" pos:column="46"/></expr_stmt>

		<expr_stmt><expr><name pos:line="103" pos:column="17">ret<pos:position pos:line="103" pos:column="20"/></name> <operator pos:line="103" pos:column="21">=<pos:position pos:line="103" pos:column="22"/></operator> <call><name pos:line="103" pos:column="23">git_deflate<pos:position pos:line="103" pos:column="34"/></name><argument_list pos:line="103" pos:column="34">(<argument><expr><operator pos:line="103" pos:column="35">&amp;<pos:position pos:line="103" pos:column="40"/></operator><name pos:line="103" pos:column="36">stream<pos:position pos:line="103" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="44">Z_FINISH<pos:position pos:line="103" pos:column="52"/></name></expr></argument>)<pos:position pos:line="103" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="54"/></expr_stmt>
		<if pos:line="104" pos:column="17">if <condition pos:line="104" pos:column="20">(<expr><name pos:line="104" pos:column="21">ret<pos:position pos:line="104" pos:column="24"/></name> <operator pos:line="104" pos:column="25">!=<pos:position pos:line="104" pos:column="27"/></operator> <name pos:line="104" pos:column="28">Z_STREAM_END<pos:position pos:line="104" pos:column="40"/></name></expr>)<pos:position pos:line="104" pos:column="41"/></condition><then pos:line="104" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="25">die<pos:position pos:line="105" pos:column="28"/></name><argument_list pos:line="105" pos:column="28">(<argument><expr><literal type="string" pos:line="105" pos:column="29">"cannot deflate request; zlib deflate error %d"<pos:position pos:line="105" pos:column="76"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="78">ret<pos:position pos:line="105" pos:column="81"/></name></expr></argument>)<pos:position pos:line="105" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="83"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="107" pos:column="17">ret<pos:position pos:line="107" pos:column="20"/></name> <operator pos:line="107" pos:column="21">=<pos:position pos:line="107" pos:column="22"/></operator> <call><name pos:line="107" pos:column="23">git_deflate_end_gently<pos:position pos:line="107" pos:column="45"/></name><argument_list pos:line="107" pos:column="45">(<argument><expr><operator pos:line="107" pos:column="46">&amp;<pos:position pos:line="107" pos:column="51"/></operator><name pos:line="107" pos:column="47">stream<pos:position pos:line="107" pos:column="53"/></name></expr></argument>)<pos:position pos:line="107" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="55"/></expr_stmt>
		<if pos:line="108" pos:column="17">if <condition pos:line="108" pos:column="20">(<expr><name pos:line="108" pos:column="21">ret<pos:position pos:line="108" pos:column="24"/></name> <operator pos:line="108" pos:column="25">!=<pos:position pos:line="108" pos:column="27"/></operator> <name pos:line="108" pos:column="28">Z_OK<pos:position pos:line="108" pos:column="32"/></name></expr>)<pos:position pos:line="108" pos:column="33"/></condition><then pos:line="108" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="109" pos:column="25">die<pos:position pos:line="109" pos:column="28"/></name><argument_list pos:line="109" pos:column="28">(<argument><expr><literal type="string" pos:line="109" pos:column="29">"cannot deflate request; zlib end error %d"<pos:position pos:line="109" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="74">ret<pos:position pos:line="109" pos:column="77"/></name></expr></argument>)<pos:position pos:line="109" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="79"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="111" pos:column="17">gzip_size<pos:position pos:line="111" pos:column="26"/></name> <operator pos:line="111" pos:column="27">=<pos:position pos:line="111" pos:column="28"/></operator> <name><name pos:line="111" pos:column="29">stream<pos:position pos:line="111" pos:column="35"/></name><operator pos:line="111" pos:column="35">.<pos:position pos:line="111" pos:column="36"/></operator><name pos:line="111" pos:column="36">total_out<pos:position pos:line="111" pos:column="45"/></name></name></expr>;<pos:position pos:line="111" pos:column="46"/></expr_stmt>

		<expr_stmt><expr><name pos:line="113" pos:column="17">headers<pos:position pos:line="113" pos:column="24"/></name> <operator pos:line="113" pos:column="25">=<pos:position pos:line="113" pos:column="26"/></operator> <call><name pos:line="113" pos:column="27">curl_slist_append<pos:position pos:line="113" pos:column="44"/></name><argument_list pos:line="113" pos:column="44">(<argument><expr><name pos:line="113" pos:column="45">headers<pos:position pos:line="113" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="54">"Content-Encoding: gzip"<pos:position pos:line="113" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="114" pos:column="17">curl_easy_setopt<pos:position pos:line="114" pos:column="33"/></name><argument_list pos:line="114" pos:column="33">(<argument><expr><name><name pos:line="114" pos:column="34">slot<pos:position pos:line="114" pos:column="38"/></name><operator pos:line="114" pos:column="38">-&gt;<pos:position pos:line="114" pos:column="43"/></operator><name pos:line="114" pos:column="40">curl<pos:position pos:line="114" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="46">CURLOPT_POSTFIELDS<pos:position pos:line="114" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="66">gzip_body<pos:position pos:line="114" pos:column="75"/></name></expr></argument>)<pos:position pos:line="114" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="115" pos:column="17">curl_easy_setopt<pos:position pos:line="115" pos:column="33"/></name><argument_list pos:line="115" pos:column="33">(<argument><expr><name><name pos:line="115" pos:column="34">slot<pos:position pos:line="115" pos:column="38"/></name><operator pos:line="115" pos:column="38">-&gt;<pos:position pos:line="115" pos:column="43"/></operator><name pos:line="115" pos:column="40">curl<pos:position pos:line="115" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="46">CURLOPT_POSTFIELDSIZE<pos:position pos:line="115" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="69">gzip_size<pos:position pos:line="115" pos:column="78"/></name></expr></argument>)<pos:position pos:line="115" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="80"/></expr_stmt>

		<if pos:line="117" pos:column="17">if <condition pos:line="117" pos:column="20">(<expr><name><name pos:line="117" pos:column="21">options<pos:position pos:line="117" pos:column="28"/></name><operator pos:line="117" pos:column="28">.<pos:position pos:line="117" pos:column="29"/></operator><name pos:line="117" pos:column="29">verbosity<pos:position pos:line="117" pos:column="38"/></name></name> <operator pos:line="117" pos:column="39">&gt;<pos:position pos:line="117" pos:column="43"/></operator> <literal type="number" pos:line="117" pos:column="41">1<pos:position pos:line="117" pos:column="42"/></literal></expr>)<pos:position pos:line="117" pos:column="43"/></condition><then pos:line="117" pos:column="43"> <block pos:line="117" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="118" pos:column="25">fprintf<pos:position pos:line="118" pos:column="32"/></name><argument_list pos:line="118" pos:column="32">(<argument><expr><name pos:line="118" pos:column="33">stderr<pos:position pos:line="118" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="41">"POST %s (gzip %lu to %lu bytes)\n"<pos:position pos:line="118" pos:column="76"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="119" pos:column="33">rpc<pos:position pos:line="119" pos:column="36"/></name><operator pos:line="119" pos:column="36">-&gt;<pos:position pos:line="119" pos:column="41"/></operator><name pos:line="119" pos:column="38">service_name<pos:position pos:line="119" pos:column="50"/></name></name></expr></argument>,
				<argument><expr><operator pos:line="120" pos:column="33">(<pos:position pos:line="120" pos:column="34"/></operator><name pos:line="120" pos:column="34">unsigned<pos:position pos:line="120" pos:column="42"/></name> <name pos:line="120" pos:column="43">long<pos:position pos:line="120" pos:column="47"/></name><operator pos:line="120" pos:column="47">)<pos:position pos:line="120" pos:column="48"/></operator><name><name pos:line="120" pos:column="48">rpc<pos:position pos:line="120" pos:column="51"/></name><operator pos:line="120" pos:column="51">-&gt;<pos:position pos:line="120" pos:column="56"/></operator><name pos:line="120" pos:column="53">len<pos:position pos:line="120" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="120" pos:column="58">(<pos:position pos:line="120" pos:column="59"/></operator><name pos:line="120" pos:column="59">unsigned<pos:position pos:line="120" pos:column="67"/></name> <name pos:line="120" pos:column="68">long<pos:position pos:line="120" pos:column="72"/></name><operator pos:line="120" pos:column="72">)<pos:position pos:line="120" pos:column="73"/></operator><name pos:line="120" pos:column="73">gzip_size<pos:position pos:line="120" pos:column="82"/></name></expr></argument>)<pos:position pos:line="120" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="84"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="121" pos:column="25">fflush<pos:position pos:line="121" pos:column="31"/></name><argument_list pos:line="121" pos:column="31">(<argument><expr><name pos:line="121" pos:column="32">stderr<pos:position pos:line="121" pos:column="38"/></name></expr></argument>)<pos:position pos:line="121" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="122" pos:column="18"/></block></then></if>
	}<pos:position pos:line="123" pos:column="10"/></block></then></if></elseif> <else pos:line="123" pos:column="11">else <block pos:line="123" pos:column="16">{
		<comment type="block" pos:line="124" pos:column="17">/* We know the complete request size in advance, use the
		 * more normal Content-Length approach.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="127" pos:column="17">curl_easy_setopt<pos:position pos:line="127" pos:column="33"/></name><argument_list pos:line="127" pos:column="33">(<argument><expr><name><name pos:line="127" pos:column="34">slot<pos:position pos:line="127" pos:column="38"/></name><operator pos:line="127" pos:column="38">-&gt;<pos:position pos:line="127" pos:column="43"/></operator><name pos:line="127" pos:column="40">curl<pos:position pos:line="127" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="46">CURLOPT_POSTFIELDS<pos:position pos:line="127" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="66">rpc<pos:position pos:line="127" pos:column="69"/></name><operator pos:line="127" pos:column="69">-&gt;<pos:position pos:line="127" pos:column="74"/></operator><name pos:line="127" pos:column="71">buf<pos:position pos:line="127" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="76"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="128" pos:column="17">curl_easy_setopt<pos:position pos:line="128" pos:column="33"/></name><argument_list pos:line="128" pos:column="33">(<argument><expr><name><name pos:line="128" pos:column="34">slot<pos:position pos:line="128" pos:column="38"/></name><operator pos:line="128" pos:column="38">-&gt;<pos:position pos:line="128" pos:column="43"/></operator><name pos:line="128" pos:column="40">curl<pos:position pos:line="128" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="46">CURLOPT_POSTFIELDSIZE<pos:position pos:line="128" pos:column="67"/></name></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="69">rpc<pos:position pos:line="128" pos:column="72"/></name><operator pos:line="128" pos:column="72">-&gt;<pos:position pos:line="128" pos:column="77"/></operator><name pos:line="128" pos:column="74">len<pos:position pos:line="128" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="79"/></expr_stmt>
		<if pos:line="129" pos:column="17">if <condition pos:line="129" pos:column="20">(<expr><name><name pos:line="129" pos:column="21">options<pos:position pos:line="129" pos:column="28"/></name><operator pos:line="129" pos:column="28">.<pos:position pos:line="129" pos:column="29"/></operator><name pos:line="129" pos:column="29">verbosity<pos:position pos:line="129" pos:column="38"/></name></name> <operator pos:line="129" pos:column="39">&gt;<pos:position pos:line="129" pos:column="43"/></operator> <literal type="number" pos:line="129" pos:column="41">1<pos:position pos:line="129" pos:column="42"/></literal></expr>)<pos:position pos:line="129" pos:column="43"/></condition><then pos:line="129" pos:column="43"> <block pos:line="129" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="130" pos:column="25">fprintf<pos:position pos:line="130" pos:column="32"/></name><argument_list pos:line="130" pos:column="32">(<argument><expr><name pos:line="130" pos:column="33">stderr<pos:position pos:line="130" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="41">"POST %s (%lu bytes)\n"<pos:position pos:line="130" pos:column="64"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="131" pos:column="33">rpc<pos:position pos:line="131" pos:column="36"/></name><operator pos:line="131" pos:column="36">-&gt;<pos:position pos:line="131" pos:column="41"/></operator><name pos:line="131" pos:column="38">service_name<pos:position pos:line="131" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="131" pos:column="52">(<pos:position pos:line="131" pos:column="53"/></operator><name pos:line="131" pos:column="53">unsigned<pos:position pos:line="131" pos:column="61"/></name> <name pos:line="131" pos:column="62">long<pos:position pos:line="131" pos:column="66"/></name><operator pos:line="131" pos:column="66">)<pos:position pos:line="131" pos:column="67"/></operator><name><name pos:line="131" pos:column="67">rpc<pos:position pos:line="131" pos:column="70"/></name><operator pos:line="131" pos:column="70">-&gt;<pos:position pos:line="131" pos:column="75"/></operator><name pos:line="131" pos:column="72">len<pos:position pos:line="131" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="131" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="132" pos:column="25">fflush<pos:position pos:line="132" pos:column="31"/></name><argument_list pos:line="132" pos:column="31">(<argument><expr><name pos:line="132" pos:column="32">stderr<pos:position pos:line="132" pos:column="38"/></name></expr></argument>)<pos:position pos:line="132" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="133" pos:column="18"/></block></then></if>
	}<pos:position pos:line="134" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="136" pos:column="9">curl_easy_setopt<pos:position pos:line="136" pos:column="25"/></name><argument_list pos:line="136" pos:column="25">(<argument><expr><name><name pos:line="136" pos:column="26">slot<pos:position pos:line="136" pos:column="30"/></name><operator pos:line="136" pos:column="30">-&gt;<pos:position pos:line="136" pos:column="35"/></operator><name pos:line="136" pos:column="32">curl<pos:position pos:line="136" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="38">CURLOPT_HTTPHEADER<pos:position pos:line="136" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="58">headers<pos:position pos:line="136" pos:column="65"/></name></expr></argument>)<pos:position pos:line="136" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="137" pos:column="9">curl_easy_setopt<pos:position pos:line="137" pos:column="25"/></name><argument_list pos:line="137" pos:column="25">(<argument><expr><name><name pos:line="137" pos:column="26">slot<pos:position pos:line="137" pos:column="30"/></name><operator pos:line="137" pos:column="30">-&gt;<pos:position pos:line="137" pos:column="35"/></operator><name pos:line="137" pos:column="32">curl<pos:position pos:line="137" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="38">CURLOPT_WRITEFUNCTION<pos:position pos:line="137" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="61">rpc_in<pos:position pos:line="137" pos:column="67"/></name></expr></argument>)<pos:position pos:line="137" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="138" pos:column="9">curl_easy_setopt<pos:position pos:line="138" pos:column="25"/></name><argument_list pos:line="138" pos:column="25">(<argument><expr><name><name pos:line="138" pos:column="26">slot<pos:position pos:line="138" pos:column="30"/></name><operator pos:line="138" pos:column="30">-&gt;<pos:position pos:line="138" pos:column="35"/></operator><name pos:line="138" pos:column="32">curl<pos:position pos:line="138" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="38">CURLOPT_FILE<pos:position pos:line="138" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="52">rpc<pos:position pos:line="138" pos:column="55"/></name></expr></argument>)<pos:position pos:line="138" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="57"/></expr_stmt>


	<expr_stmt><expr><name><name pos:line="141" pos:column="9">rpc<pos:position pos:line="141" pos:column="12"/></name><operator pos:line="141" pos:column="12">-&gt;<pos:position pos:line="141" pos:column="17"/></operator><name pos:line="141" pos:column="14">any_written<pos:position pos:line="141" pos:column="25"/></name></name> <operator pos:line="141" pos:column="26">=<pos:position pos:line="141" pos:column="27"/></operator> <literal type="number" pos:line="141" pos:column="28">0<pos:position pos:line="141" pos:column="29"/></literal></expr>;<pos:position pos:line="141" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="142" pos:column="9">err<pos:position pos:line="142" pos:column="12"/></name> <operator pos:line="142" pos:column="13">=<pos:position pos:line="142" pos:column="14"/></operator> <call><name pos:line="142" pos:column="15">run_slot<pos:position pos:line="142" pos:column="23"/></name><argument_list pos:line="142" pos:column="23">(<argument><expr><name pos:line="142" pos:column="24">slot<pos:position pos:line="142" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="30">NULL<pos:position pos:line="142" pos:column="34"/></name></expr></argument>)<pos:position pos:line="142" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="36"/></expr_stmt>
	<if pos:line="143" pos:column="9">if <condition pos:line="143" pos:column="12">(<expr><name pos:line="143" pos:column="13">err<pos:position pos:line="143" pos:column="16"/></name> <operator pos:line="143" pos:column="17">==<pos:position pos:line="143" pos:column="19"/></operator> <name pos:line="143" pos:column="20">HTTP_REAUTH<pos:position pos:line="143" pos:column="31"/></name> <operator pos:line="143" pos:column="32">&amp;&amp;<pos:position pos:line="143" pos:column="42"/></operator> <operator pos:line="143" pos:column="35">!<pos:position pos:line="143" pos:column="36"/></operator><name pos:line="143" pos:column="36">large_request<pos:position pos:line="143" pos:column="49"/></name></expr>)<pos:position pos:line="143" pos:column="50"/></condition><then pos:line="143" pos:column="50"> <block pos:line="143" pos:column="51">{
		<expr_stmt><expr><call><name pos:line="144" pos:column="17">credential_fill<pos:position pos:line="144" pos:column="32"/></name><argument_list pos:line="144" pos:column="32">(<argument><expr><operator pos:line="144" pos:column="33">&amp;<pos:position pos:line="144" pos:column="38"/></operator><name pos:line="144" pos:column="34">http_auth<pos:position pos:line="144" pos:column="43"/></name></expr></argument>)<pos:position pos:line="144" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="45"/></expr_stmt>
		<goto pos:line="145" pos:column="17">goto <name pos:line="145" pos:column="22">retry<pos:position pos:line="145" pos:column="27"/></name>;<pos:position pos:line="145" pos:column="28"/></goto>
	}<pos:position pos:line="146" pos:column="10"/></block></then></if>
	<if pos:line="147" pos:column="9">if <condition pos:line="147" pos:column="12">(<expr><name pos:line="147" pos:column="13">err<pos:position pos:line="147" pos:column="16"/></name> <operator pos:line="147" pos:column="17">!=<pos:position pos:line="147" pos:column="19"/></operator> <name pos:line="147" pos:column="20">HTTP_OK<pos:position pos:line="147" pos:column="27"/></name></expr>)<pos:position pos:line="147" pos:column="28"/></condition><then pos:line="147" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="148" pos:column="17">err<pos:position pos:line="148" pos:column="20"/></name> <operator pos:line="148" pos:column="21">=<pos:position pos:line="148" pos:column="22"/></operator> <operator pos:line="148" pos:column="23">-<pos:position pos:line="148" pos:column="24"/></operator><literal type="number" pos:line="148" pos:column="24">1<pos:position pos:line="148" pos:column="25"/></literal></expr>;<pos:position pos:line="148" pos:column="26"/></expr_stmt></block></then></if>

	<if pos:line="150" pos:column="9">if <condition pos:line="150" pos:column="12">(<expr><operator pos:line="150" pos:column="13">!<pos:position pos:line="150" pos:column="14"/></operator><name><name pos:line="150" pos:column="14">rpc<pos:position pos:line="150" pos:column="17"/></name><operator pos:line="150" pos:column="17">-&gt;<pos:position pos:line="150" pos:column="22"/></operator><name pos:line="150" pos:column="19">any_written<pos:position pos:line="150" pos:column="30"/></name></name></expr>)<pos:position pos:line="150" pos:column="31"/></condition><then pos:line="150" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="151" pos:column="17">err<pos:position pos:line="151" pos:column="20"/></name> <operator pos:line="151" pos:column="21">=<pos:position pos:line="151" pos:column="22"/></operator> <operator pos:line="151" pos:column="23">-<pos:position pos:line="151" pos:column="24"/></operator><literal type="number" pos:line="151" pos:column="24">1<pos:position pos:line="151" pos:column="25"/></literal></expr>;<pos:position pos:line="151" pos:column="26"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="153" pos:column="9">curl_slist_free_all<pos:position pos:line="153" pos:column="28"/></name><argument_list pos:line="153" pos:column="28">(<argument><expr><name pos:line="153" pos:column="29">headers<pos:position pos:line="153" pos:column="36"/></name></expr></argument>)<pos:position pos:line="153" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="154" pos:column="9">free<pos:position pos:line="154" pos:column="13"/></name><argument_list pos:line="154" pos:column="13">(<argument><expr><name pos:line="154" pos:column="14">gzip_body<pos:position pos:line="154" pos:column="23"/></name></expr></argument>)<pos:position pos:line="154" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="25"/></expr_stmt>
	<return pos:line="155" pos:column="9">return <expr><name pos:line="155" pos:column="16">err<pos:position pos:line="155" pos:column="19"/></name></expr>;<pos:position pos:line="155" pos:column="20"/></return>
}<pos:position pos:line="156" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6157_git-2.10.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ask_yes_no_if_possible<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">format<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="55">...<pos:position pos:line="1" pos:column="58"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">question<pos:position pos:line="3" pos:column="22"/></name><index pos:line="3" pos:column="22">[<expr><literal type="number" pos:line="3" pos:column="23">4096<pos:position pos:line="3" pos:column="27"/></literal></expr>]<pos:position pos:line="3" pos:column="28"/></index></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name><name pos:line="4" pos:column="21">retry_hook<pos:position pos:line="4" pos:column="31"/></name><index pos:line="4" pos:column="31">[]<pos:position pos:line="4" pos:column="33"/></index></name> <init pos:line="4" pos:column="34">= <expr><block pos:line="4" pos:column="36">{ <expr><name pos:line="4" pos:column="38">NULL<pos:position pos:line="4" pos:column="42"/></name></expr>, <expr><name pos:line="4" pos:column="44">NULL<pos:position pos:line="4" pos:column="48"/></name></expr>, <expr><name pos:line="4" pos:column="50">NULL<pos:position pos:line="4" pos:column="54"/></name></expr> }<pos:position pos:line="4" pos:column="56"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">va_list<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">args<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">va_start<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">args<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="24">format<pos:position pos:line="7" pos:column="30"/></name></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">vsnprintf<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">question<pos:position pos:line="8" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="29">sizeof<argument_list pos:line="8" pos:column="35">(<argument><expr><name pos:line="8" pos:column="36">question<pos:position pos:line="8" pos:column="44"/></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="8" pos:column="47">format<pos:position pos:line="8" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="55">args<pos:position pos:line="8" pos:column="59"/></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">va_end<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">args<pos:position pos:line="9" pos:column="20"/></name></expr></argument>)<pos:position pos:line="9" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name><name pos:line="11" pos:column="14">retry_hook<pos:position pos:line="11" pos:column="24"/></name><index pos:line="11" pos:column="24">[<expr><literal type="number" pos:line="11" pos:column="25">0<pos:position pos:line="11" pos:column="26"/></literal></expr>]<pos:position pos:line="11" pos:column="27"/></index></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <call><name pos:line="11" pos:column="30">mingw_getenv<pos:position pos:line="11" pos:column="42"/></name><argument_list pos:line="11" pos:column="42">(<argument><expr><literal type="string" pos:line="11" pos:column="43">"GIT_ASK_YESNO"<pos:position pos:line="11" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call><operator pos:line="11" pos:column="59">)<pos:position pos:line="11" pos:column="60"/></operator></expr>)<pos:position pos:line="11" pos:column="61"/></condition><then pos:line="11" pos:column="61"> <block pos:line="11" pos:column="62">{
		<expr_stmt><expr><name><name pos:line="12" pos:column="17">retry_hook<pos:position pos:line="12" pos:column="27"/></name><index pos:line="12" pos:column="27">[<expr><literal type="number" pos:line="12" pos:column="28">1<pos:position pos:line="12" pos:column="29"/></literal></expr>]<pos:position pos:line="12" pos:column="30"/></index></name> <operator pos:line="12" pos:column="31">=<pos:position pos:line="12" pos:column="32"/></operator> <name pos:line="12" pos:column="33">question<pos:position pos:line="12" pos:column="41"/></name></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
		<return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">!<pos:position pos:line="13" pos:column="25"/></operator><call><name pos:line="13" pos:column="25">run_command_v_opt<pos:position pos:line="13" pos:column="42"/></name><argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">retry_hook<pos:position pos:line="13" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="55">0<pos:position pos:line="13" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><call><name pos:line="16" pos:column="14">isatty<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><call><name pos:line="16" pos:column="21">_fileno<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">stdin<pos:position pos:line="16" pos:column="34"/></name></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call> <operator pos:line="16" pos:column="37">||<pos:position pos:line="16" pos:column="39"/></operator> <operator pos:line="16" pos:column="40">!<pos:position pos:line="16" pos:column="41"/></operator><call><name pos:line="16" pos:column="41">isatty<pos:position pos:line="16" pos:column="47"/></name><argument_list pos:line="16" pos:column="47">(<argument><expr><call><name pos:line="16" pos:column="48">_fileno<pos:position pos:line="16" pos:column="55"/></name><argument_list pos:line="16" pos:column="55">(<argument><expr><name pos:line="16" pos:column="56">stderr<pos:position pos:line="16" pos:column="62"/></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="65"/></condition><then pos:line="16" pos:column="65">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return></block></then></if>

	<while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><literal type="number" pos:line="19" pos:column="16">1<pos:position pos:line="19" pos:column="17"/></literal></expr>)<pos:position pos:line="19" pos:column="18"/></condition> <block pos:line="19" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">int<pos:position pos:line="20" pos:column="20"/></name></type> <name pos:line="20" pos:column="21">answer<pos:position pos:line="20" pos:column="27"/></name></decl>;<pos:position pos:line="20" pos:column="28"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">fprintf<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">stderr<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="33">"%s (y/n) "<pos:position pos:line="21" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="46">question<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>

		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">(<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">answer<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <call><name pos:line="23" pos:column="31">read_yes_no_answer<pos:position pos:line="23" pos:column="49"/></name><argument_list pos:line="23" pos:column="49">()<pos:position pos:line="23" pos:column="51"/></argument_list></call><operator pos:line="23" pos:column="51">)<pos:position pos:line="23" pos:column="52"/></operator> <operator pos:line="23" pos:column="53">&gt;=<pos:position pos:line="23" pos:column="58"/></operator> <literal type="number" pos:line="23" pos:column="56">0<pos:position pos:line="23" pos:column="57"/></literal></expr>)<pos:position pos:line="23" pos:column="58"/></condition><then pos:line="23" pos:column="58">
			<block type="pseudo"><return pos:line="24" pos:column="25">return <expr><name pos:line="24" pos:column="32">answer<pos:position pos:line="24" pos:column="38"/></name></expr>;<pos:position pos:line="24" pos:column="39"/></return></block></then></if>

		<expr_stmt><expr><call><name pos:line="26" pos:column="17">fprintf<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">stderr<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="33">"Sorry, I did not understand your answer. "<pos:position pos:line="26" pos:column="76"/></literal>
				<literal type="string" pos:line="27" pos:column="33">"Please type 'y' or 'n'\n"<pos:position pos:line="27" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></while>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

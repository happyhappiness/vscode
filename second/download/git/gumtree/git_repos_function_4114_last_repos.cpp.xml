<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4114_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cleanup_dir_mutex<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">j<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">j<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr>;<pos:position pos:line="5" pos:column="20"/></init> <condition><expr><name pos:line="5" pos:column="21">j<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&lt;<pos:position pos:line="5" pos:column="27"/></operator> <name pos:line="5" pos:column="25">LAZY_MAX_MUTEX<pos:position pos:line="5" pos:column="39"/></name></expr>;<pos:position pos:line="5" pos:column="40"/></condition> <incr><expr><name pos:line="5" pos:column="41">j<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">++<pos:position pos:line="5" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="45"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">pthread_mutex_destroy<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><operator pos:line="6" pos:column="39">&amp;<pos:position pos:line="6" pos:column="44"/></operator><name><name pos:line="6" pos:column="40">lazy_dir_mutex_array<pos:position pos:line="6" pos:column="60"/></name><index pos:line="6" pos:column="60">[<expr><name pos:line="6" pos:column="61">j<pos:position pos:line="6" pos:column="62"/></name></expr>]<pos:position pos:line="6" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="65"/></expr_stmt></block></for>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">free<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><name pos:line="8" pos:column="14">lazy_dir_mutex_array<pos:position pos:line="8" pos:column="34"/></name></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4097_git-2.13.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_archive_entry<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">unsigned<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">sha1<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">base<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">baselen<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">filename<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">unsigned<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">mode<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="67">int<pos:position pos:line="2" pos:column="70"/></name></type> <name pos:line="2" pos:column="71">stage<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">void<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">context<pos:position pos:line="3" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="31"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name><name pos:line="5" pos:column="16">struct<pos:position pos:line="5" pos:column="22"/></name> <name pos:line="5" pos:column="23">strbuf<pos:position pos:line="5" pos:column="29"/></name></name></type> <name pos:line="5" pos:column="30">path<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><name pos:line="5" pos:column="37">STRBUF_INIT<pos:position pos:line="5" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name><name pos:line="6" pos:column="16">struct<pos:position pos:line="6" pos:column="22"/></name> <name pos:line="6" pos:column="23">attr_check<pos:position pos:line="6" pos:column="33"/></name></name> <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier></type><name pos:line="6" pos:column="35">check<pos:position pos:line="6" pos:column="40"/></name></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">archiver_context<pos:position pos:line="7" pos:column="32"/></name></name> <modifier pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></modifier></type><name pos:line="7" pos:column="34">c<pos:position pos:line="7" pos:column="35"/></name> <init pos:line="7" pos:column="36">= <expr><name pos:line="7" pos:column="38">context<pos:position pos:line="7" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">archiver_args<pos:position pos:line="8" pos:column="29"/></name></name> <modifier pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></modifier></type><name pos:line="8" pos:column="31">args<pos:position pos:line="8" pos:column="35"/></name> <init pos:line="8" pos:column="36">= <expr><name><name pos:line="8" pos:column="38">c<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="41">args<pos:position pos:line="8" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">write_archive_entry_fn_t<pos:position pos:line="9" pos:column="33"/></name></type> <name pos:line="9" pos:column="34">write_entry<pos:position pos:line="9" pos:column="45"/></name> <init pos:line="9" pos:column="46">= <expr><name><name pos:line="9" pos:column="48">c<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">-&gt;<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="51">write_entry<pos:position pos:line="9" pos:column="62"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="63"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">path_without_prefix<pos:position pos:line="10" pos:column="40"/></name></decl>;<pos:position pos:line="10" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">err<pos:position pos:line="11" pos:column="16"/></name></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="13" pos:column="9">args<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">convert<pos:position pos:line="13" pos:column="22"/></name></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <literal type="number" pos:line="13" pos:column="25">0<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">strbuf_reset<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><operator pos:line="14" pos:column="22">&amp;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="23">path<pos:position pos:line="14" pos:column="27"/></name></expr></argument>)<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">strbuf_grow<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><operator pos:line="15" pos:column="21">&amp;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="22">path<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="28">PATH_MAX<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">strbuf_add<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><operator pos:line="16" pos:column="20">&amp;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="21">path<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="27">args<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">base<pos:position pos:line="16" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="39">args<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">-&gt;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="45">baselen<pos:position pos:line="16" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">strbuf_add<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><operator pos:line="17" pos:column="20">&amp;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="21">path<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="27">base<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="33">baselen<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">strbuf_addstr<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><operator pos:line="18" pos:column="23">&amp;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="24">path<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="30">filename<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">S_ISDIR<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">mode<pos:position pos:line="19" pos:column="25"/></name></expr></argument>)<pos:position pos:line="19" pos:column="26"/></argument_list></call> <operator pos:line="19" pos:column="27">||<pos:position pos:line="19" pos:column="29"/></operator> <call><name pos:line="19" pos:column="30">S_ISGITLINK<pos:position pos:line="19" pos:column="41"/></name><argument_list pos:line="19" pos:column="41">(<argument><expr><name pos:line="19" pos:column="42">mode<pos:position pos:line="19" pos:column="46"/></name></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="48"/></condition><then pos:line="19" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">strbuf_addch<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><operator pos:line="20" pos:column="30">&amp;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="31">path<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="37">'/'<pos:position pos:line="20" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="21" pos:column="9">path_without_prefix<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">=<pos:position pos:line="21" pos:column="30"/></operator> <name><name pos:line="21" pos:column="31">path<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">.<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="36">buf<pos:position pos:line="21" pos:column="39"/></name></name> <operator pos:line="21" pos:column="40">+<pos:position pos:line="21" pos:column="41"/></operator> <name><name pos:line="21" pos:column="42">args<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">-&gt;<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="48">baselen<pos:position pos:line="21" pos:column="55"/></name></name></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">check<pos:position pos:line="23" pos:column="19"/></name></expr>)<pos:position pos:line="23" pos:column="20"/></condition><then pos:line="23" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="17">check<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <call><name pos:line="24" pos:column="25">attr_check_initl<pos:position pos:line="24" pos:column="41"/></name><argument_list pos:line="24" pos:column="41">(<argument><expr><literal type="string" pos:line="24" pos:column="42">"export-ignore"<pos:position pos:line="24" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="59">"export-subst"<pos:position pos:line="24" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="75">NULL<pos:position pos:line="24" pos:column="79"/></name></expr></argument>)<pos:position pos:line="24" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="81"/></expr_stmt></block></then></if>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><call><name pos:line="25" pos:column="14">git_check_attr<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">path_without_prefix<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">check<pos:position pos:line="25" pos:column="55"/></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="57"/></condition><then pos:line="25" pos:column="57"> <block pos:line="25" pos:column="58">{
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><call><name pos:line="26" pos:column="21">ATTR_TRUE<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name><name pos:line="26" pos:column="31">check<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">-&gt;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="38">items<pos:position pos:line="26" pos:column="43"/></name><index pos:line="26" pos:column="43">[<expr><literal type="number" pos:line="26" pos:column="44">0<pos:position pos:line="26" pos:column="45"/></literal></expr>]<pos:position pos:line="26" pos:column="46"/></index></name><operator pos:line="26" pos:column="46">.<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="47">value<pos:position pos:line="26" pos:column="52"/></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="54"/></condition><then pos:line="26" pos:column="54">
			<block type="pseudo"><return pos:line="27" pos:column="25">return <expr><literal type="number" pos:line="27" pos:column="32">0<pos:position pos:line="27" pos:column="33"/></literal></expr>;<pos:position pos:line="27" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="28" pos:column="17">args<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">-&gt;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="23">convert<pos:position pos:line="28" pos:column="30"/></name></name> <operator pos:line="28" pos:column="31">=<pos:position pos:line="28" pos:column="32"/></operator> <call><name pos:line="28" pos:column="33">ATTR_TRUE<pos:position pos:line="28" pos:column="42"/></name><argument_list pos:line="28" pos:column="42">(<argument><expr><name><name pos:line="28" pos:column="43">check<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">-&gt;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="50">items<pos:position pos:line="28" pos:column="55"/></name><index pos:line="28" pos:column="55">[<expr><literal type="number" pos:line="28" pos:column="56">1<pos:position pos:line="28" pos:column="57"/></literal></expr>]<pos:position pos:line="28" pos:column="58"/></index></name><operator pos:line="28" pos:column="58">.<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="59">value<pos:position pos:line="28" pos:column="64"/></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">S_ISDIR<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><name pos:line="31" pos:column="21">mode<pos:position pos:line="31" pos:column="25"/></name></expr></argument>)<pos:position pos:line="31" pos:column="26"/></argument_list></call> <operator pos:line="31" pos:column="27">||<pos:position pos:line="31" pos:column="29"/></operator> <call><name pos:line="31" pos:column="30">S_ISGITLINK<pos:position pos:line="31" pos:column="41"/></name><argument_list pos:line="31" pos:column="41">(<argument><expr><name pos:line="31" pos:column="42">mode<pos:position pos:line="31" pos:column="46"/></name></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="48"/></condition><then pos:line="31" pos:column="48"> <block pos:line="31" pos:column="49">{
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name><name pos:line="32" pos:column="21">args<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">verbose<pos:position pos:line="32" pos:column="34"/></name></name></expr>)<pos:position pos:line="32" pos:column="35"/></condition><then pos:line="32" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="25">fprintf<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">stderr<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="41">"%.*s\n"<pos:position pos:line="33" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="51">(<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="52">int<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">)<pos:position pos:line="33" pos:column="56"/></operator><name><name pos:line="33" pos:column="56">path<pos:position pos:line="33" pos:column="60"/></name><operator pos:line="33" pos:column="60">.<pos:position pos:line="33" pos:column="61"/></operator><name pos:line="33" pos:column="61">len<pos:position pos:line="33" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="66">path<pos:position pos:line="33" pos:column="70"/></name><operator pos:line="33" pos:column="70">.<pos:position pos:line="33" pos:column="71"/></operator><name pos:line="33" pos:column="71">buf<pos:position pos:line="33" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="76"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="34" pos:column="17">err<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <call><name pos:line="34" pos:column="23">write_entry<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">args<pos:position pos:line="34" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="41">sha1<pos:position pos:line="34" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="47">path<pos:position pos:line="34" pos:column="51"/></name><operator pos:line="34" pos:column="51">.<pos:position pos:line="34" pos:column="52"/></operator><name pos:line="34" pos:column="52">buf<pos:position pos:line="34" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="57">path<pos:position pos:line="34" pos:column="61"/></name><operator pos:line="34" pos:column="61">.<pos:position pos:line="34" pos:column="62"/></operator><name pos:line="34" pos:column="62">len<pos:position pos:line="34" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="67">mode<pos:position pos:line="34" pos:column="71"/></name></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">err<pos:position pos:line="35" pos:column="24"/></name></expr>)<pos:position pos:line="35" pos:column="25"/></condition><then pos:line="35" pos:column="25">
			<block type="pseudo"><return pos:line="36" pos:column="25">return <expr><name pos:line="36" pos:column="32">err<pos:position pos:line="36" pos:column="35"/></name></expr>;<pos:position pos:line="36" pos:column="36"/></return></block></then></if>
		<return pos:line="37" pos:column="17">return <expr><operator pos:line="37" pos:column="24">(<pos:position pos:line="37" pos:column="25"/></operator><ternary><condition><expr><call><name pos:line="37" pos:column="25">S_ISDIR<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">mode<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr> ?<pos:position pos:line="37" pos:column="40"/></condition><then pos:line="37" pos:column="40"> <expr><name pos:line="37" pos:column="41">READ_TREE_RECURSIVE<pos:position pos:line="37" pos:column="60"/></name></expr> <pos:position pos:line="37" pos:column="61"/></then><else pos:line="37" pos:column="61">: <expr><literal type="number" pos:line="37" pos:column="63">0<pos:position pos:line="37" pos:column="64"/></literal></expr></else></ternary><operator pos:line="37" pos:column="64">)<pos:position pos:line="37" pos:column="65"/></operator></expr>;<pos:position pos:line="37" pos:column="66"/></return>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name><name pos:line="40" pos:column="13">args<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">-&gt;<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="19">verbose<pos:position pos:line="40" pos:column="26"/></name></name></expr>)<pos:position pos:line="40" pos:column="27"/></condition><then pos:line="40" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="17">fprintf<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">stderr<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="33">"%.*s\n"<pos:position pos:line="41" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="43">(<pos:position pos:line="41" pos:column="44"/></operator><name pos:line="41" pos:column="44">int<pos:position pos:line="41" pos:column="47"/></name><operator pos:line="41" pos:column="47">)<pos:position pos:line="41" pos:column="48"/></operator><name><name pos:line="41" pos:column="48">path<pos:position pos:line="41" pos:column="52"/></name><operator pos:line="41" pos:column="52">.<pos:position pos:line="41" pos:column="53"/></operator><name pos:line="41" pos:column="53">len<pos:position pos:line="41" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="58">path<pos:position pos:line="41" pos:column="62"/></name><operator pos:line="41" pos:column="62">.<pos:position pos:line="41" pos:column="63"/></operator><name pos:line="41" pos:column="63">buf<pos:position pos:line="41" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="68"/></expr_stmt></block></then></if>
	<return pos:line="42" pos:column="9">return <expr><call><name pos:line="42" pos:column="16">write_entry<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">args<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="34">sha1<pos:position pos:line="42" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="40">path<pos:position pos:line="42" pos:column="44"/></name><operator pos:line="42" pos:column="44">.<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="45">buf<pos:position pos:line="42" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="50">path<pos:position pos:line="42" pos:column="54"/></name><operator pos:line="42" pos:column="54">.<pos:position pos:line="42" pos:column="55"/></operator><name pos:line="42" pos:column="55">len<pos:position pos:line="42" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="60">mode<pos:position pos:line="42" pos:column="64"/></name></expr></argument>)<pos:position pos:line="42" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="66"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3083_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">process_input_file<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">FILE<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">outfile<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">str<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="3" pos:column="31">struct<pos:position pos:line="3" pos:column="37"/></name> <name pos:line="3" pos:column="38">list_head<pos:position pos:line="3" pos:column="47"/></name></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">head<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="54"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">trailer_info<pos:position pos:line="5" pos:column="28"/></name></name></type> <name pos:line="5" pos:column="29">info<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">tok<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">STRBUF_INIT<pos:position pos:line="6" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">val<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name pos:line="7" pos:column="29">STRBUF_INIT<pos:position pos:line="7" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">trailer_info_get<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><operator pos:line="10" pos:column="26">&amp;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="27">info<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">str<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>

	<comment type="block" pos:line="12" pos:column="9">/* Print lines before the trailers as is */</comment>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">fwrite<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">str<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="21">1<pos:position pos:line="13" pos:column="22"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="24">info<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">.<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="29">trailer_start<pos:position pos:line="13" pos:column="42"/></name></name> <operator pos:line="13" pos:column="43">-<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="45">str<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="50">outfile<pos:position pos:line="13" pos:column="57"/></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name><name pos:line="15" pos:column="14">info<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">.<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">blank_line_before_trailer<pos:position pos:line="15" pos:column="44"/></name></name></expr>)<pos:position pos:line="15" pos:column="45"/></condition><then pos:line="15" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">fprintf<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">outfile<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="34">"\n"<pos:position pos:line="16" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt></block></then></if>

	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="25">info<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">.<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">trailer_nr<pos:position pos:line="18" pos:column="40"/></name></name></expr>;<pos:position pos:line="18" pos:column="41"/></condition> <incr><expr><name pos:line="18" pos:column="42">i<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">++<pos:position pos:line="18" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="46"/></control> <block pos:line="18" pos:column="47">{
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">int<pos:position pos:line="19" pos:column="20"/></name></type> <name pos:line="19" pos:column="21">separator_pos<pos:position pos:line="19" pos:column="34"/></name></decl>;<pos:position pos:line="19" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">char<pos:position pos:line="20" pos:column="21"/></name> <modifier pos:line="20" pos:column="22">*<pos:position pos:line="20" pos:column="23"/></modifier></type><name pos:line="20" pos:column="23">trailer<pos:position pos:line="20" pos:column="30"/></name> <init pos:line="20" pos:column="31">= <expr><name><name pos:line="20" pos:column="33">info<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">.<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="38">trailers<pos:position pos:line="20" pos:column="46"/></name><index pos:line="20" pos:column="46">[<expr><name pos:line="20" pos:column="47">i<pos:position pos:line="20" pos:column="48"/></name></expr>]<pos:position pos:line="20" pos:column="49"/></index></name></expr></init></decl>;<pos:position pos:line="20" pos:column="50"/></decl_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name><name pos:line="21" pos:column="21">trailer<pos:position pos:line="21" pos:column="28"/></name><index pos:line="21" pos:column="28">[<expr><literal type="number" pos:line="21" pos:column="29">0<pos:position pos:line="21" pos:column="30"/></literal></expr>]<pos:position pos:line="21" pos:column="31"/></index></name> <operator pos:line="21" pos:column="32">==<pos:position pos:line="21" pos:column="34"/></operator> <name pos:line="21" pos:column="35">comment_line_char<pos:position pos:line="21" pos:column="52"/></name></expr>)<pos:position pos:line="21" pos:column="53"/></condition><then pos:line="21" pos:column="53">
			<block type="pseudo"><continue pos:line="22" pos:column="25">continue;<pos:position pos:line="22" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="23" pos:column="17">separator_pos<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <call><name pos:line="23" pos:column="33">find_separator<pos:position pos:line="23" pos:column="47"/></name><argument_list pos:line="23" pos:column="47">(<argument><expr><name pos:line="23" pos:column="48">trailer<pos:position pos:line="23" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="57">separators<pos:position pos:line="23" pos:column="67"/></name></expr></argument>)<pos:position pos:line="23" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="69"/></expr_stmt>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">separator_pos<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">&gt;=<pos:position pos:line="24" pos:column="40"/></operator> <literal type="number" pos:line="24" pos:column="38">1<pos:position pos:line="24" pos:column="39"/></literal></expr>)<pos:position pos:line="24" pos:column="40"/></condition><then pos:line="24" pos:column="40"> <block pos:line="24" pos:column="41">{
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">parse_trailer<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">(<argument><expr><operator pos:line="25" pos:column="39">&amp;<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="40">tok<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="45">&amp;<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="46">val<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">NULL<pos:position pos:line="25" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="57">trailer<pos:position pos:line="25" pos:column="64"/></name></expr></argument>,
				      <argument><expr><name pos:line="26" pos:column="39">separator_pos<pos:position pos:line="26" pos:column="52"/></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">add_trailer_item<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">head<pos:position pos:line="27" pos:column="46"/></name></expr></argument>,
					 <argument><expr><call><name pos:line="28" pos:column="42">strbuf_detach<pos:position pos:line="28" pos:column="55"/></name><argument_list pos:line="28" pos:column="55">(<argument><expr><operator pos:line="28" pos:column="56">&amp;<pos:position pos:line="28" pos:column="61"/></operator><name pos:line="28" pos:column="57">tok<pos:position pos:line="28" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="62">NULL<pos:position pos:line="28" pos:column="66"/></name></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr></argument>,
					 <argument><expr><call><name pos:line="29" pos:column="42">strbuf_detach<pos:position pos:line="29" pos:column="55"/></name><argument_list pos:line="29" pos:column="55">(<argument><expr><operator pos:line="29" pos:column="56">&amp;<pos:position pos:line="29" pos:column="61"/></operator><name pos:line="29" pos:column="57">val<pos:position pos:line="29" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="62">NULL<pos:position pos:line="29" pos:column="66"/></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="30" pos:column="18"/></block></then> <else pos:line="30" pos:column="19">else <block pos:line="30" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">strbuf_addstr<pos:position pos:line="31" pos:column="38"/></name><argument_list pos:line="31" pos:column="38">(<argument><expr><operator pos:line="31" pos:column="39">&amp;<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="40">val<pos:position pos:line="31" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="45">trailer<pos:position pos:line="31" pos:column="52"/></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">strbuf_strip_suffix<pos:position pos:line="32" pos:column="44"/></name><argument_list pos:line="32" pos:column="44">(<argument><expr><operator pos:line="32" pos:column="45">&amp;<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="46">val<pos:position pos:line="32" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="51">"\n"<pos:position pos:line="32" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">add_trailer_item<pos:position pos:line="33" pos:column="41"/></name><argument_list pos:line="33" pos:column="41">(<argument><expr><name pos:line="33" pos:column="42">head<pos:position pos:line="33" pos:column="46"/></name></expr></argument>,
					 <argument><expr><name pos:line="34" pos:column="42">NULL<pos:position pos:line="34" pos:column="46"/></name></expr></argument>,
					 <argument><expr><call><name pos:line="35" pos:column="42">strbuf_detach<pos:position pos:line="35" pos:column="55"/></name><argument_list pos:line="35" pos:column="55">(<argument><expr><operator pos:line="35" pos:column="56">&amp;<pos:position pos:line="35" pos:column="61"/></operator><name pos:line="35" pos:column="57">val<pos:position pos:line="35" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="62">NULL<pos:position pos:line="35" pos:column="66"/></name></expr></argument>)<pos:position pos:line="35" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></else></if>
	}<pos:position pos:line="37" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="39" pos:column="9">trailer_info_release<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><operator pos:line="39" pos:column="30">&amp;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="31">info<pos:position pos:line="39" pos:column="35"/></name></expr></argument>)<pos:position pos:line="39" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="37"/></expr_stmt>

	<return pos:line="41" pos:column="9">return <expr><name><name pos:line="41" pos:column="16">info<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">.<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">trailer_end<pos:position pos:line="41" pos:column="32"/></name></name> <operator pos:line="41" pos:column="33">-<pos:position pos:line="41" pos:column="34"/></operator> <name pos:line="41" pos:column="35">str<pos:position pos:line="41" pos:column="38"/></name></expr>;<pos:position pos:line="41" pos:column="39"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

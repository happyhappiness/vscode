<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1054_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">subprocess_read_status<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">fd<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">strbuf<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">status<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier><modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">pair<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">line<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init pos:line="7" pos:column="14">;<pos:position pos:line="7" pos:column="15"/></init><condition pos:line="7" pos:column="15">;<pos:position pos:line="7" pos:column="16"/></condition><incr/>)<pos:position pos:line="7" pos:column="17"/></control> <block pos:line="7" pos:column="18">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">len<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <call><name pos:line="8" pos:column="23">packet_read_line_gently<pos:position pos:line="8" pos:column="46"/></name><argument_list pos:line="8" pos:column="46">(<argument><expr><name pos:line="8" pos:column="47">fd<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="51">NULL<pos:position pos:line="8" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="57">&amp;<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="58">line<pos:position pos:line="8" pos:column="62"/></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="64"/></expr_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">(<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">len<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">&lt;<pos:position pos:line="9" pos:column="30"/></operator> <literal type="number" pos:line="9" pos:column="28">0<pos:position pos:line="9" pos:column="29"/></literal><operator pos:line="9" pos:column="29">)<pos:position pos:line="9" pos:column="30"/></operator> <operator pos:line="9" pos:column="31">||<pos:position pos:line="9" pos:column="33"/></operator> <operator pos:line="9" pos:column="34">!<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">line<pos:position pos:line="9" pos:column="39"/></name></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40">
			<block type="pseudo"><break pos:line="10" pos:column="25">break;<pos:position pos:line="10" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="11" pos:column="17">pair<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <call><name pos:line="11" pos:column="24">strbuf_split_str<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">(<argument><expr><name pos:line="11" pos:column="41">line<pos:position pos:line="11" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="47">'='<pos:position pos:line="11" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="52">2<pos:position pos:line="11" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="55"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name><name pos:line="12" pos:column="21">pair<pos:position pos:line="12" pos:column="25"/></name><index pos:line="12" pos:column="25">[<expr><literal type="number" pos:line="12" pos:column="26">0<pos:position pos:line="12" pos:column="27"/></literal></expr>]<pos:position pos:line="12" pos:column="28"/></index></name> <operator pos:line="12" pos:column="29">&amp;&amp;<pos:position pos:line="12" pos:column="39"/></operator> <name><name pos:line="12" pos:column="32">pair<pos:position pos:line="12" pos:column="36"/></name><index pos:line="12" pos:column="36">[<expr><literal type="number" pos:line="12" pos:column="37">0<pos:position pos:line="12" pos:column="38"/></literal></expr>]<pos:position pos:line="12" pos:column="39"/></index></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">len<pos:position pos:line="12" pos:column="44"/></name> <operator pos:line="12" pos:column="45">&amp;&amp;<pos:position pos:line="12" pos:column="55"/></operator> <name><name pos:line="12" pos:column="48">pair<pos:position pos:line="12" pos:column="52"/></name><index pos:line="12" pos:column="52">[<expr><literal type="number" pos:line="12" pos:column="53">1<pos:position pos:line="12" pos:column="54"/></literal></expr>]<pos:position pos:line="12" pos:column="55"/></index></name></expr>)<pos:position pos:line="12" pos:column="56"/></condition><then pos:line="12" pos:column="56"> <block pos:line="12" pos:column="57">{
			<comment type="block" pos:line="13" pos:column="25">/* the last "status=&lt;foo&gt;" line wins */</comment>
			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><operator pos:line="14" pos:column="29">!<pos:position pos:line="14" pos:column="30"/></operator><call><name pos:line="14" pos:column="30">strcmp<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name><name pos:line="14" pos:column="37">pair<pos:position pos:line="14" pos:column="41"/></name><index pos:line="14" pos:column="41">[<expr><literal type="number" pos:line="14" pos:column="42">0<pos:position pos:line="14" pos:column="43"/></literal></expr>]<pos:position pos:line="14" pos:column="44"/></index></name><operator pos:line="14" pos:column="44">-&gt;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="46">buf<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="51">"status="<pos:position pos:line="14" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="62"/></condition><then pos:line="14" pos:column="62"> <block pos:line="14" pos:column="63">{
				<expr_stmt><expr><call><name pos:line="15" pos:column="33">strbuf_reset<pos:position pos:line="15" pos:column="45"/></name><argument_list pos:line="15" pos:column="45">(<argument><expr><name pos:line="15" pos:column="46">status<pos:position pos:line="15" pos:column="52"/></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="16" pos:column="33">strbuf_addbuf<pos:position pos:line="16" pos:column="46"/></name><argument_list pos:line="16" pos:column="46">(<argument><expr><name pos:line="16" pos:column="47">status<pos:position pos:line="16" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="55">pair<pos:position pos:line="16" pos:column="59"/></name><index pos:line="16" pos:column="59">[<expr><literal type="number" pos:line="16" pos:column="60">1<pos:position pos:line="16" pos:column="61"/></literal></expr>]<pos:position pos:line="16" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>
			}<pos:position pos:line="17" pos:column="26"/></block></then></if>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">strbuf_list_free<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">pair<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></for>

	<return pos:line="22" pos:column="9">return <expr><ternary><condition><expr><operator pos:line="22" pos:column="16">(<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">len<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">&lt;<pos:position pos:line="22" pos:column="25"/></operator> <literal type="number" pos:line="22" pos:column="23">0<pos:position pos:line="22" pos:column="24"/></literal><operator pos:line="22" pos:column="24">)<pos:position pos:line="22" pos:column="25"/></operator></expr> ?<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27"> <expr><name pos:line="22" pos:column="28">len<pos:position pos:line="22" pos:column="31"/></name></expr> <pos:position pos:line="22" pos:column="32"/></then><else pos:line="22" pos:column="32">: <expr><literal type="number" pos:line="22" pos:column="34">0<pos:position pos:line="22" pos:column="35"/></literal></expr></else></ternary></expr>;<pos:position pos:line="22" pos:column="36"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

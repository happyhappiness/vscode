<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7095_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">pthread_key_create<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">pthread_key_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">keyp<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><function_decl><type><name pos:line="1" pos:column="59">void<pos:position pos:line="1" pos:column="63"/></name></type> (<modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier><name pos:line="1" pos:column="66">destructor<pos:position pos:line="1" pos:column="76"/></name>)<parameter_list pos:line="1" pos:column="77">(<parameter><decl><type><name pos:line="1" pos:column="78">void<pos:position pos:line="1" pos:column="82"/></name> <modifier pos:line="1" pos:column="83">*<pos:position pos:line="1" pos:column="84"/></modifier></type><name pos:line="1" pos:column="84">value<pos:position pos:line="1" pos:column="89"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="90"/></parameter_list></function_decl></parameter>)<pos:position pos:line="1" pos:column="91"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<return pos:line="3" pos:column="9">return <expr><ternary><condition><expr><operator pos:line="3" pos:column="16">(<pos:position pos:line="3" pos:column="17"/></operator><operator pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">keyp<pos:position pos:line="3" pos:column="22"/></name> <operator pos:line="3" pos:column="23">=<pos:position pos:line="3" pos:column="24"/></operator> <call><name pos:line="3" pos:column="25">TlsAlloc<pos:position pos:line="3" pos:column="33"/></name><argument_list pos:line="3" pos:column="33">()<pos:position pos:line="3" pos:column="35"/></argument_list></call><operator pos:line="3" pos:column="35">)<pos:position pos:line="3" pos:column="36"/></operator> <operator pos:line="3" pos:column="37">==<pos:position pos:line="3" pos:column="39"/></operator> <name pos:line="3" pos:column="40">TLS_OUT_OF_INDEXES<pos:position pos:line="3" pos:column="58"/></name></expr> ?<pos:position pos:line="3" pos:column="60"/></condition><then pos:line="3" pos:column="60"> <expr><name pos:line="3" pos:column="61">EAGAIN<pos:position pos:line="3" pos:column="67"/></name></expr> <pos:position pos:line="3" pos:column="68"/></then><else pos:line="3" pos:column="68">: <expr><literal type="number" pos:line="3" pos:column="70">0<pos:position pos:line="3" pos:column="71"/></literal></expr></else></ternary></expr>;<pos:position pos:line="3" pos:column="72"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

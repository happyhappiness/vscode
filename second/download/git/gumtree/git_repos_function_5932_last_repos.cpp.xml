<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5932_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">anonymize_refname<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">refname<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/*
	 * If any of these prefixes is found, we will leave it intact
	 * so that tags remain tags and so forth.
	 */</comment>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><specifier pos:line="7" pos:column="16">const<pos:position pos:line="7" pos:column="21"/></specifier> <name pos:line="7" pos:column="22">char<pos:position pos:line="7" pos:column="26"/></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name><name pos:line="7" pos:column="28">prefixes<pos:position pos:line="7" pos:column="36"/></name><index pos:line="7" pos:column="36">[]<pos:position pos:line="7" pos:column="38"/></index></name> <init pos:line="7" pos:column="39">= <expr><block pos:line="7" pos:column="41">{
		<expr><literal type="string" pos:line="8" pos:column="17">"refs/heads/"<pos:position pos:line="8" pos:column="30"/></literal></expr>,
		<expr><literal type="string" pos:line="9" pos:column="17">"refs/tags/"<pos:position pos:line="9" pos:column="29"/></literal></expr>,
		<expr><literal type="string" pos:line="10" pos:column="17">"refs/remotes/"<pos:position pos:line="10" pos:column="32"/></literal></expr>,
		<expr><literal type="string" pos:line="11" pos:column="17">"refs/"<pos:position pos:line="11" pos:column="24"/></literal></expr>
	}<pos:position pos:line="12" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="12" pos:column="11"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="13" pos:column="9">static<pos:position pos:line="13" pos:column="15"/></specifier> <type><name><name pos:line="13" pos:column="16">struct<pos:position pos:line="13" pos:column="22"/></name> <name pos:line="13" pos:column="23">hashmap<pos:position pos:line="13" pos:column="30"/></name></name></type> <name pos:line="13" pos:column="31">refs<pos:position pos:line="13" pos:column="35"/></name></decl>;<pos:position pos:line="13" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="14" pos:column="9">static<pos:position pos:line="14" pos:column="15"/></specifier> <type><name><name pos:line="14" pos:column="16">struct<pos:position pos:line="14" pos:column="22"/></name> <name pos:line="14" pos:column="23">strbuf<pos:position pos:line="14" pos:column="29"/></name></name></type> <name pos:line="14" pos:column="30">anon<pos:position pos:line="14" pos:column="34"/></name> <init pos:line="14" pos:column="35">= <expr><name pos:line="14" pos:column="37">STRBUF_INIT<pos:position pos:line="14" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">i<pos:position pos:line="15" pos:column="14"/></name></decl>;<pos:position pos:line="15" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="17" pos:column="9">/*
	 * We also leave "master" as a special case, since it does not reveal
	 * anything interesting.
	 */</comment>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name pos:line="21" pos:column="14">strcmp<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">refname<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="30">"refs/heads/master"<pos:position pos:line="21" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="51"/></condition><then pos:line="21" pos:column="51">
		<block type="pseudo"><return pos:line="22" pos:column="17">return <expr><name pos:line="22" pos:column="24">refname<pos:position pos:line="22" pos:column="31"/></name></expr>;<pos:position pos:line="22" pos:column="32"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="24" pos:column="9">strbuf_reset<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><operator pos:line="24" pos:column="22">&amp;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="23">anon<pos:position pos:line="24" pos:column="27"/></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
	<for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init><expr><name pos:line="25" pos:column="14">i<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal></expr>;<pos:position pos:line="25" pos:column="20"/></init> <condition><expr><name pos:line="25" pos:column="21">i<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">&lt;<pos:position pos:line="25" pos:column="27"/></operator> <call><name pos:line="25" pos:column="25">ARRAY_SIZE<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><name pos:line="25" pos:column="36">prefixes<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></condition> <incr><expr><name pos:line="25" pos:column="47">i<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">++<pos:position pos:line="25" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="51"/></control> <block pos:line="25" pos:column="52">{
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><call><name pos:line="26" pos:column="21">skip_prefix<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">refname<pos:position pos:line="26" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="42">prefixes<pos:position pos:line="26" pos:column="50"/></name><index pos:line="26" pos:column="50">[<expr><name pos:line="26" pos:column="51">i<pos:position pos:line="26" pos:column="52"/></name></expr>]<pos:position pos:line="26" pos:column="53"/></index></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="55">&amp;<pos:position pos:line="26" pos:column="60"/></operator><name pos:line="26" pos:column="56">refname<pos:position pos:line="26" pos:column="63"/></name></expr></argument>)<pos:position pos:line="26" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="65"/></condition><then pos:line="26" pos:column="65"> <block pos:line="26" pos:column="66">{
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">strbuf_addstr<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><operator pos:line="27" pos:column="39">&amp;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="40">anon<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="46">prefixes<pos:position pos:line="27" pos:column="54"/></name><index pos:line="27" pos:column="54">[<expr><name pos:line="27" pos:column="55">i<pos:position pos:line="27" pos:column="56"/></name></expr>]<pos:position pos:line="27" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt>
			<break pos:line="28" pos:column="25">break;<pos:position pos:line="28" pos:column="31"/></break>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
	}<pos:position pos:line="30" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">anonymize_path<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><operator pos:line="32" pos:column="24">&amp;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="25">anon<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="31">refname<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="40">&amp;<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="41">refs<pos:position pos:line="32" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="47">anonymize_ref_component<pos:position pos:line="32" pos:column="70"/></name></expr></argument>)<pos:position pos:line="32" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="72"/></expr_stmt>
	<return pos:line="33" pos:column="9">return <expr><name><name pos:line="33" pos:column="16">anon<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">.<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="21">buf<pos:position pos:line="33" pos:column="24"/></name></name></expr>;<pos:position pos:line="33" pos:column="25"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_3062.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">commit<pos:position pos:line="1" pos:column="21"/></name></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">get_commit_reference<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">unsigned<pos:position pos:line="1" pos:column="58"/></name> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">sha1<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">r<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><call><name pos:line="3" pos:column="28">lookup_commit_reference<pos:position pos:line="3" pos:column="51"/></name><argument_list pos:line="3" pos:column="51">(<argument><expr><name pos:line="3" pos:column="52">sha1<pos:position pos:line="3" pos:column="56"/></name></expr></argument>)<pos:position pos:line="3" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">r<pos:position pos:line="4" pos:column="15"/></name></expr>)<pos:position pos:line="4" pos:column="16"/></condition><then pos:line="4" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="17">die<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><literal type="string" pos:line="5" pos:column="21">"Not a valid commit name %s"<pos:position pos:line="5" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="51">sha1_to_hex<pos:position pos:line="5" pos:column="62"/></name><argument_list pos:line="5" pos:column="62">(<argument><expr><name pos:line="5" pos:column="63">sha1<pos:position pos:line="5" pos:column="67"/></name></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="70"/></expr_stmt></block></then></if>
	<return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">r<pos:position pos:line="6" pos:column="17"/></name></expr>;<pos:position pos:line="6" pos:column="18"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

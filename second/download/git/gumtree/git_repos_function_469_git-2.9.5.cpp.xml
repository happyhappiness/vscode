<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_469_git-2.9.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">grab_tag_values<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">atom_value<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">val<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">deref<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="64">struct<pos:position pos:line="1" pos:column="70"/></name> <name pos:line="1" pos:column="71">object<pos:position pos:line="1" pos:column="77"/></name></name> <modifier pos:line="1" pos:column="78">*<pos:position pos:line="1" pos:column="79"/></modifier></type><name pos:line="1" pos:column="79">obj<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="84">void<pos:position pos:line="1" pos:column="88"/></name> <modifier pos:line="1" pos:column="89">*<pos:position pos:line="1" pos:column="90"/></modifier></type><name pos:line="1" pos:column="90">buf<pos:position pos:line="1" pos:column="93"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="95">unsigned<pos:position pos:line="1" pos:column="103"/></name> <name pos:line="1" pos:column="104">long<pos:position pos:line="1" pos:column="108"/></name></type> <name pos:line="1" pos:column="109">sz<pos:position pos:line="1" pos:column="111"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="112"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">tag<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">tag<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><operator pos:line="4" pos:column="27">(<pos:position pos:line="4" pos:column="28"/></operator>struct <name pos:line="4" pos:column="35">tag<pos:position pos:line="4" pos:column="38"/></name> <operator pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></operator><operator pos:line="4" pos:column="40">)<pos:position pos:line="4" pos:column="41"/></operator> <name pos:line="4" pos:column="42">obj<pos:position pos:line="4" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="25">used_atom_cnt<pos:position pos:line="6" pos:column="38"/></name></expr>;<pos:position pos:line="6" pos:column="39"/></condition> <incr><expr><name pos:line="6" pos:column="40">i<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">++<pos:position pos:line="6" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="44"/></control> <block pos:line="6" pos:column="45">{
		<decl_stmt><decl><type><specifier pos:line="7" pos:column="17">const<pos:position pos:line="7" pos:column="22"/></specifier> <name pos:line="7" pos:column="23">char<pos:position pos:line="7" pos:column="27"/></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">name<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><name><name pos:line="7" pos:column="36">used_atom<pos:position pos:line="7" pos:column="45"/></name><index pos:line="7" pos:column="45">[<expr><name pos:line="7" pos:column="46">i<pos:position pos:line="7" pos:column="47"/></name></expr>]<pos:position pos:line="7" pos:column="48"/></index></name><operator pos:line="7" pos:column="48">.<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="49">name<pos:position pos:line="7" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="54"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">atom_value<pos:position pos:line="8" pos:column="34"/></name></name> <modifier pos:line="8" pos:column="35">*<pos:position pos:line="8" pos:column="36"/></modifier></type><name pos:line="8" pos:column="36">v<pos:position pos:line="8" pos:column="37"/></name> <init pos:line="8" pos:column="38">= <expr><operator pos:line="8" pos:column="40">&amp;<pos:position pos:line="8" pos:column="45"/></operator><name><name pos:line="8" pos:column="41">val<pos:position pos:line="8" pos:column="44"/></name><index pos:line="8" pos:column="44">[<expr><name pos:line="8" pos:column="45">i<pos:position pos:line="8" pos:column="46"/></name></expr>]<pos:position pos:line="8" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="48"/></decl_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><operator pos:line="9" pos:column="22">!<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">deref<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">!=<pos:position pos:line="9" pos:column="31"/></operator> <operator pos:line="9" pos:column="32">(<pos:position pos:line="9" pos:column="33"/></operator><operator pos:line="9" pos:column="33">*<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="34">name<pos:position pos:line="9" pos:column="38"/></name> <operator pos:line="9" pos:column="39">==<pos:position pos:line="9" pos:column="41"/></operator> <literal type="char" pos:line="9" pos:column="42">'*'<pos:position pos:line="9" pos:column="45"/></literal><operator pos:line="9" pos:column="45">)<pos:position pos:line="9" pos:column="46"/></operator></expr>)<pos:position pos:line="9" pos:column="47"/></condition><then pos:line="9" pos:column="47">
			<block type="pseudo"><continue pos:line="10" pos:column="25">continue;<pos:position pos:line="10" pos:column="34"/></continue></block></then></if>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">deref<pos:position pos:line="11" pos:column="26"/></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">name<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">++<pos:position pos:line="12" pos:column="31"/></operator></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt></block></then></if>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><call><name pos:line="13" pos:column="22">strcmp<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">name<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="35">"tag"<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="42"/></condition><then pos:line="13" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="25">v<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">s<pos:position pos:line="14" pos:column="29"/></name></name> <operator pos:line="14" pos:column="30">=<pos:position pos:line="14" pos:column="31"/></operator> <name><name pos:line="14" pos:column="32">tag<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">tag<pos:position pos:line="14" pos:column="40"/></name></name></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt></block></then>
		<elseif pos:line="15" pos:column="17">else <if pos:line="15" pos:column="22">if <condition pos:line="15" pos:column="25">(<expr><operator pos:line="15" pos:column="26">!<pos:position pos:line="15" pos:column="27"/></operator><call><name pos:line="15" pos:column="27">strcmp<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><name pos:line="15" pos:column="34">name<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="40">"type"<pos:position pos:line="15" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call> <operator pos:line="15" pos:column="48">&amp;&amp;<pos:position pos:line="15" pos:column="58"/></operator> <name><name pos:line="15" pos:column="51">tag<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">-&gt;<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="56">tagged<pos:position pos:line="15" pos:column="62"/></name></name></expr>)<pos:position pos:line="15" pos:column="63"/></condition><then pos:line="15" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="25">v<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">s<pos:position pos:line="16" pos:column="29"/></name></name> <operator pos:line="16" pos:column="30">=<pos:position pos:line="16" pos:column="31"/></operator> <name><typename pos:line="16" pos:column="32">typename<pos:position pos:line="16" pos:column="40"/></typename></name><operator pos:line="16" pos:column="40">(<pos:position pos:line="16" pos:column="41"/></operator><name><name pos:line="16" pos:column="41">tag<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">-&gt;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="46">tagged<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">-&gt;<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="54">type<pos:position pos:line="16" pos:column="58"/></name></name><operator pos:line="16" pos:column="58">)<pos:position pos:line="16" pos:column="59"/></operator></expr>;<pos:position pos:line="16" pos:column="60"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="17" pos:column="17">else <if pos:line="17" pos:column="22">if <condition pos:line="17" pos:column="25">(<expr><operator pos:line="17" pos:column="26">!<pos:position pos:line="17" pos:column="27"/></operator><call><name pos:line="17" pos:column="27">strcmp<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">name<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="40">"object"<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call> <operator pos:line="17" pos:column="50">&amp;&amp;<pos:position pos:line="17" pos:column="60"/></operator> <name><name pos:line="17" pos:column="53">tag<pos:position pos:line="17" pos:column="56"/></name><operator pos:line="17" pos:column="56">-&gt;<pos:position pos:line="17" pos:column="61"/></operator><name pos:line="17" pos:column="58">tagged<pos:position pos:line="17" pos:column="64"/></name></name></expr>)<pos:position pos:line="17" pos:column="65"/></condition><then pos:line="17" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="25">v<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">-&gt;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="28">s<pos:position pos:line="18" pos:column="29"/></name></name> <operator pos:line="18" pos:column="30">=<pos:position pos:line="18" pos:column="31"/></operator> <call><name pos:line="18" pos:column="32">xstrdup<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">(<argument><expr><call><name pos:line="18" pos:column="40">oid_to_hex<pos:position pos:line="18" pos:column="50"/></name><argument_list pos:line="18" pos:column="50">(<argument><expr><operator pos:line="18" pos:column="51">&amp;<pos:position pos:line="18" pos:column="56"/></operator><name><name pos:line="18" pos:column="52">tag<pos:position pos:line="18" pos:column="55"/></name><operator pos:line="18" pos:column="55">-&gt;<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="57">tagged<pos:position pos:line="18" pos:column="63"/></name><operator pos:line="18" pos:column="63">-&gt;<pos:position pos:line="18" pos:column="68"/></operator><name pos:line="18" pos:column="65">oid<pos:position pos:line="18" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="71"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="19" pos:column="10"/></block></for>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

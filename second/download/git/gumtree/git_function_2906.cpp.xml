<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2906.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">prune_worktrees<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">reason<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name pos:line="3" pos:column="32">STRBUF_INIT<pos:position pos:line="3" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">path<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">STRBUF_INIT<pos:position pos:line="4" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">DIR<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">dir<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><call><name pos:line="5" pos:column="20">opendir<pos:position pos:line="5" pos:column="27"/></name><argument_list pos:line="5" pos:column="27">(<argument><expr><call><name pos:line="5" pos:column="28">git_path<pos:position pos:line="5" pos:column="36"/></name><argument_list pos:line="5" pos:column="36">(<argument><expr><literal type="string" pos:line="5" pos:column="37">"worktrees"<pos:position pos:line="5" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">dirent<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">d<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">ret<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">dir<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18">
		<block type="pseudo"><return pos:line="9" pos:column="17">return;<pos:position pos:line="9" pos:column="24"/></return></block></then></if>
	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">d<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <call><name pos:line="10" pos:column="21">readdir<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">dir<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call><operator pos:line="10" pos:column="33">)<pos:position pos:line="10" pos:column="34"/></operator> <operator pos:line="10" pos:column="35">!=<pos:position pos:line="10" pos:column="37"/></operator> <name pos:line="10" pos:column="38">NULL<pos:position pos:line="10" pos:column="42"/></name></expr>)<pos:position pos:line="10" pos:column="43"/></condition> <block pos:line="10" pos:column="44">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><call><name pos:line="11" pos:column="22">strcmp<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name><name pos:line="11" pos:column="29">d<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">d_name<pos:position pos:line="11" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="40">"."<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call> <operator pos:line="11" pos:column="45">||<pos:position pos:line="11" pos:column="47"/></operator> <operator pos:line="11" pos:column="48">!<pos:position pos:line="11" pos:column="49"/></operator><call><name pos:line="11" pos:column="49">strcmp<pos:position pos:line="11" pos:column="55"/></name><argument_list pos:line="11" pos:column="55">(<argument><expr><name><name pos:line="11" pos:column="56">d<pos:position pos:line="11" pos:column="57"/></name><operator pos:line="11" pos:column="57">-&gt;<pos:position pos:line="11" pos:column="62"/></operator><name pos:line="11" pos:column="59">d_name<pos:position pos:line="11" pos:column="65"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="67">".."<pos:position pos:line="11" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="73"/></condition><then pos:line="11" pos:column="73">
			<block type="pseudo"><continue pos:line="12" pos:column="25">continue;<pos:position pos:line="12" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">strbuf_reset<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><operator pos:line="13" pos:column="30">&amp;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="31">reason<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><call><name pos:line="14" pos:column="22">prune_worktree<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name><name pos:line="14" pos:column="37">d<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">-&gt;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="40">d_name<pos:position pos:line="14" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="48">&amp;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="49">reason<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="57"/></condition><then pos:line="14" pos:column="57">
			<block type="pseudo"><continue pos:line="15" pos:column="25">continue;<pos:position pos:line="15" pos:column="34"/></continue></block></then></if>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">show_only<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">||<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="34">verbose<pos:position pos:line="16" pos:column="41"/></name></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">printf<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><literal type="string" pos:line="17" pos:column="32">"%s\n"<pos:position pos:line="17" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="40">reason<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">.<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="47">buf<pos:position pos:line="17" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt></block></then></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">show_only<pos:position pos:line="18" pos:column="30"/></name></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31">
			<block type="pseudo"><continue pos:line="19" pos:column="25">continue;<pos:position pos:line="19" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">strbuf_reset<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><operator pos:line="20" pos:column="30">&amp;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="31">path<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">strbuf_addstr<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><operator pos:line="21" pos:column="31">&amp;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="32">path<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="38">git_path<pos:position pos:line="21" pos:column="46"/></name><argument_list pos:line="21" pos:column="46">(<argument><expr><literal type="string" pos:line="21" pos:column="47">"worktrees/%s"<pos:position pos:line="21" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="63">d<pos:position pos:line="21" pos:column="64"/></name><operator pos:line="21" pos:column="64">-&gt;<pos:position pos:line="21" pos:column="69"/></operator><name pos:line="21" pos:column="66">d_name<pos:position pos:line="21" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">ret<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <call><name pos:line="22" pos:column="23">remove_dir_recursively<pos:position pos:line="22" pos:column="45"/></name><argument_list pos:line="22" pos:column="45">(<argument><expr><operator pos:line="22" pos:column="46">&amp;<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="47">path<pos:position pos:line="22" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="53">0<pos:position pos:line="22" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">ret<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">&lt;<pos:position pos:line="23" pos:column="29"/></operator> <literal type="number" pos:line="23" pos:column="27">0<pos:position pos:line="23" pos:column="28"/></literal> <operator pos:line="23" pos:column="29">&amp;&amp;<pos:position pos:line="23" pos:column="39"/></operator> <name pos:line="23" pos:column="32">errno<pos:position pos:line="23" pos:column="37"/></name> <operator pos:line="23" pos:column="38">==<pos:position pos:line="23" pos:column="40"/></operator> <name pos:line="23" pos:column="41">ENOTDIR<pos:position pos:line="23" pos:column="48"/></name></expr>)<pos:position pos:line="23" pos:column="49"/></condition><then pos:line="23" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">ret<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">=<pos:position pos:line="24" pos:column="30"/></operator> <call><name pos:line="24" pos:column="31">unlink<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name><name pos:line="24" pos:column="38">path<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">.<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="43">buf<pos:position pos:line="24" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="48"/></expr_stmt></block></then></if>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">ret<pos:position pos:line="25" pos:column="24"/></name></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="25">error<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><call><name pos:line="26" pos:column="31">_<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><literal type="string" pos:line="26" pos:column="33">"failed to remove: %s"<pos:position pos:line="26" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="58">strerror<pos:position pos:line="26" pos:column="66"/></name><argument_list pos:line="26" pos:column="66">(<argument><expr><name pos:line="26" pos:column="67">errno<pos:position pos:line="26" pos:column="72"/></name></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="75"/></expr_stmt></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">closedir<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">(<argument><expr><name pos:line="28" pos:column="18">dir<pos:position pos:line="28" pos:column="21"/></name></expr></argument>)<pos:position pos:line="28" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">show_only<pos:position pos:line="29" pos:column="23"/></name></expr>)<pos:position pos:line="29" pos:column="24"/></condition><then pos:line="29" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="17">rmdir<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><call><name pos:line="30" pos:column="23">git_path<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><literal type="string" pos:line="30" pos:column="32">"worktrees"<pos:position pos:line="30" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">strbuf_release<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><operator pos:line="31" pos:column="24">&amp;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="25">reason<pos:position pos:line="31" pos:column="31"/></name></expr></argument>)<pos:position pos:line="31" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">strbuf_release<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><operator pos:line="32" pos:column="24">&amp;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="25">path<pos:position pos:line="32" pos:column="29"/></name></expr></argument>)<pos:position pos:line="32" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

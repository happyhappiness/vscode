<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1518_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">report_helper<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">string_list<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">list<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
			  <parameter><decl><type><name pos:line="2" pos:column="27">int<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">seen_bits<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">int<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">first<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">last<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">msg<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<switch pos:line="5" pos:column="9">switch <condition pos:line="5" pos:column="16">(<expr><name pos:line="5" pos:column="17">seen_bits<pos:position pos:line="5" pos:column="26"/></name></expr>)<pos:position pos:line="5" pos:column="27"/></condition> <block pos:line="5" pos:column="28">{
	<case pos:line="6" pos:column="9">case <expr><literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr>:<pos:position pos:line="6" pos:column="16"/></case>
		<expr_stmt><expr><name pos:line="7" pos:column="17">msg<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <literal type="string" pos:line="7" pos:column="23">"no corresponding .idx or .pack"<pos:position pos:line="7" pos:column="55"/></literal></expr>;<pos:position pos:line="7" pos:column="56"/></expr_stmt>
		<break pos:line="8" pos:column="17">break;<pos:position pos:line="8" pos:column="23"/></break>
	<case pos:line="9" pos:column="9">case <expr><literal type="number" pos:line="9" pos:column="14">1<pos:position pos:line="9" pos:column="15"/></literal></expr>:<pos:position pos:line="9" pos:column="16"/></case>
		<expr_stmt><expr><name pos:line="10" pos:column="17">msg<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <literal type="string" pos:line="10" pos:column="23">"no corresponding .idx"<pos:position pos:line="10" pos:column="46"/></literal></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
		<break pos:line="11" pos:column="17">break;<pos:position pos:line="11" pos:column="23"/></break>
	<case pos:line="12" pos:column="9">case <expr><literal type="number" pos:line="12" pos:column="14">2<pos:position pos:line="12" pos:column="15"/></literal></expr>:<pos:position pos:line="12" pos:column="16"/></case>
		<expr_stmt><expr><name pos:line="13" pos:column="17">msg<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <literal type="string" pos:line="13" pos:column="23">"no corresponding .pack"<pos:position pos:line="13" pos:column="47"/></literal></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
		<break pos:line="14" pos:column="17">break;<pos:position pos:line="14" pos:column="23"/></break>
	<default pos:line="15" pos:column="9">default:<pos:position pos:line="15" pos:column="17"/></default>
		<return pos:line="16" pos:column="17">return;<pos:position pos:line="16" pos:column="24"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></switch>
	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init pos:line="18" pos:column="14">;<pos:position pos:line="18" pos:column="15"/></init> <condition><expr><name pos:line="18" pos:column="16">first<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">&lt;<pos:position pos:line="18" pos:column="26"/></operator> <name pos:line="18" pos:column="24">last<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></condition> <incr><expr><name pos:line="18" pos:column="30">first<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">++<pos:position pos:line="18" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="38"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">report_garbage<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">msg<pos:position pos:line="19" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="37">list<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">-&gt;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="43">items<pos:position pos:line="19" pos:column="48"/></name><index pos:line="19" pos:column="48">[<expr><name pos:line="19" pos:column="49">first<pos:position pos:line="19" pos:column="54"/></name></expr>]<pos:position pos:line="19" pos:column="55"/></index></name><operator pos:line="19" pos:column="55">.<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="56">string<pos:position pos:line="19" pos:column="62"/></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt></block></for>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

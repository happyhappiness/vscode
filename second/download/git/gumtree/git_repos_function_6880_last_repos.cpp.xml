<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6880_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name><modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type> <name pos:line="1" pos:column="14">prepend_alloc<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">mstate<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">m<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type> <name pos:line="1" pos:column="44">newbase<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name><modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type> <name pos:line="1" pos:column="59">oldbase<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="2" pos:column="28">size_t<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">nb<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list> <block pos:line="2" pos:column="39">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">mchunkptr<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">p<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><call><name pos:line="3" pos:column="17">align_as_chunk<pos:position pos:line="3" pos:column="31"/></name><argument_list pos:line="3" pos:column="31">(<argument><expr><name pos:line="3" pos:column="32">newbase<pos:position pos:line="3" pos:column="39"/></name></expr></argument>)<pos:position pos:line="3" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">mchunkptr<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">oldfirst<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><call><name pos:line="4" pos:column="24">align_as_chunk<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name pos:line="4" pos:column="39">oldbase<pos:position pos:line="4" pos:column="46"/></name></expr></argument>)<pos:position pos:line="4" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">psize<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><operator pos:line="5" pos:column="18">(<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">char<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></operator><operator pos:line="5" pos:column="24">)<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">oldfirst<pos:position pos:line="5" pos:column="33"/></name> <operator pos:line="5" pos:column="34">-<pos:position pos:line="5" pos:column="35"/></operator> <operator pos:line="5" pos:column="36">(<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="37">char<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">*<pos:position pos:line="5" pos:column="42"/></operator><operator pos:line="5" pos:column="42">)<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="43">p<pos:position pos:line="5" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">mchunkptr<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">q<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><call><name pos:line="6" pos:column="17">chunk_plus_offset<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name pos:line="6" pos:column="35">p<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="38">nb<pos:position pos:line="6" pos:column="40"/></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">qsize<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name pos:line="7" pos:column="18">psize<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">-<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">nb<pos:position pos:line="7" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">set_size_and_pinuse_of_inuse_chunk<pos:position pos:line="8" pos:column="37"/></name><argument_list pos:line="8" pos:column="37">(<argument><expr><name pos:line="8" pos:column="38">m<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="41">p<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="44">nb<pos:position pos:line="8" pos:column="46"/></name></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="48"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">assert<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">(<argument><expr><operator pos:line="10" pos:column="10">(<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">*<pos:position pos:line="10" pos:column="16"/></operator><operator pos:line="10" pos:column="16">)<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">oldfirst<pos:position pos:line="10" pos:column="25"/></name> <operator pos:line="10" pos:column="26">&gt;<pos:position pos:line="10" pos:column="30"/></operator> <operator pos:line="10" pos:column="28">(<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">char<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">*<pos:position pos:line="10" pos:column="34"/></operator><operator pos:line="10" pos:column="34">)<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">q<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">assert<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><call><name pos:line="11" pos:column="10">pinuse<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">oldfirst<pos:position pos:line="11" pos:column="25"/></name></expr></argument>)<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">assert<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><name pos:line="12" pos:column="10">qsize<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">&gt;=<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="19">MIN_CHUNK_SIZE<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* consolidate remainder with first chunk of old base */</comment>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">oldfirst<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <name><name pos:line="15" pos:column="19">m<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">top<pos:position pos:line="15" pos:column="25"/></name></name></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26"> <block pos:line="15" pos:column="27">{
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">size_t<pos:position pos:line="16" pos:column="11"/></name></type> <name pos:line="16" pos:column="12">tsize<pos:position pos:line="16" pos:column="17"/></name> <init pos:line="16" pos:column="18">= <expr><name><name pos:line="16" pos:column="20">m<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">topsize<pos:position pos:line="16" pos:column="30"/></name></name> <operator pos:line="16" pos:column="31">+=<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="34">qsize<pos:position pos:line="16" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="40"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">m<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">-&gt;<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="8">top<pos:position pos:line="17" pos:column="11"/></name></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <name pos:line="17" pos:column="14">q<pos:position pos:line="17" pos:column="15"/></name></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">q<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">-&gt;<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="8">head<pos:position pos:line="18" pos:column="12"/></name></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">tsize<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">|<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">PINUSE_BIT<pos:position pos:line="18" pos:column="33"/></name></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">check_top_chunk<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">m<pos:position pos:line="19" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="24">q<pos:position pos:line="19" pos:column="25"/></name></expr></argument>)<pos:position pos:line="19" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then>
  <elseif pos:line="21" pos:column="3">else <if pos:line="21" pos:column="8">if <condition pos:line="21" pos:column="11">(<expr><name pos:line="21" pos:column="12">oldfirst<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">==<pos:position pos:line="21" pos:column="23"/></operator> <name><name pos:line="21" pos:column="24">m<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">dv<pos:position pos:line="21" pos:column="29"/></name></name></expr>)<pos:position pos:line="21" pos:column="30"/></condition><then pos:line="21" pos:column="30"> <block pos:line="21" pos:column="31">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">size_t<pos:position pos:line="22" pos:column="11"/></name></type> <name pos:line="22" pos:column="12">dsize<pos:position pos:line="22" pos:column="17"/></name> <init pos:line="22" pos:column="18">= <expr><name><name pos:line="22" pos:column="20">m<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">dvsize<pos:position pos:line="22" pos:column="29"/></name></name> <operator pos:line="22" pos:column="30">+=<pos:position pos:line="22" pos:column="32"/></operator> <name pos:line="22" pos:column="33">qsize<pos:position pos:line="22" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="39"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">m<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">dv<pos:position pos:line="23" pos:column="10"/></name></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <name pos:line="23" pos:column="13">q<pos:position pos:line="23" pos:column="14"/></name></expr>;<pos:position pos:line="23" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">set_size_and_pinuse_of_free_chunk<pos:position pos:line="24" pos:column="38"/></name><argument_list pos:line="24" pos:column="38">(<argument><expr><name pos:line="24" pos:column="39">q<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">dsize<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if></elseif>
  <else pos:line="26" pos:column="3">else <block pos:line="26" pos:column="8">{
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><call><name pos:line="27" pos:column="10">cinuse<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><name pos:line="27" pos:column="17">oldfirst<pos:position pos:line="27" pos:column="25"/></name></expr></argument>)<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="27"/></condition><then pos:line="27" pos:column="27"> <block pos:line="27" pos:column="28">{
      <decl_stmt><decl><type><name pos:line="28" pos:column="7">size_t<pos:position pos:line="28" pos:column="13"/></name></type> <name pos:line="28" pos:column="14">nsize<pos:position pos:line="28" pos:column="19"/></name> <init pos:line="28" pos:column="20">= <expr><call><name pos:line="28" pos:column="22">chunksize<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">oldfirst<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="42"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">unlink_chunk<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">m<pos:position pos:line="29" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="23">oldfirst<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">nsize<pos:position pos:line="29" pos:column="38"/></name></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name pos:line="30" pos:column="7">oldfirst<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">chunk_plus_offset<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><name pos:line="30" pos:column="36">oldfirst<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="46">nsize<pos:position pos:line="30" pos:column="51"/></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name pos:line="31" pos:column="7">qsize<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">+=<pos:position pos:line="31" pos:column="15"/></operator> <name pos:line="31" pos:column="16">nsize<pos:position pos:line="31" pos:column="21"/></name></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">set_free_with_pinuse<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">q<pos:position pos:line="33" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="29">qsize<pos:position pos:line="33" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="36">oldfirst<pos:position pos:line="33" pos:column="44"/></name></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">insert_chunk<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><name pos:line="34" pos:column="18">m<pos:position pos:line="34" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="21">q<pos:position pos:line="34" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="24">qsize<pos:position pos:line="34" pos:column="29"/></name></expr></argument>)<pos:position pos:line="34" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">check_free_chunk<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name pos:line="35" pos:column="22">m<pos:position pos:line="35" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="25">q<pos:position pos:line="35" pos:column="26"/></name></expr></argument>)<pos:position pos:line="35" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">check_malloced_chunk<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><name pos:line="38" pos:column="24">m<pos:position pos:line="38" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="27">chunk2mem<pos:position pos:line="38" pos:column="36"/></name><argument_list pos:line="38" pos:column="36">(<argument><expr><name pos:line="38" pos:column="37">p<pos:position pos:line="38" pos:column="38"/></name></expr></argument>)<pos:position pos:line="38" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="38" pos:column="41">nb<pos:position pos:line="38" pos:column="43"/></name></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt>
  <return pos:line="39" pos:column="3">return <expr><call><name pos:line="39" pos:column="10">chunk2mem<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><name pos:line="39" pos:column="20">p<pos:position pos:line="39" pos:column="21"/></name></expr></argument>)<pos:position pos:line="39" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="23"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

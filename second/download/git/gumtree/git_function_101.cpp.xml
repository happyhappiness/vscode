<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_101.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">update_refs_stdin<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">cmd<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">STRBUF_INIT<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* Read each line dispatch its command */</comment>
	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><call><name pos:line="6" pos:column="16">strbuf_getline<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><operator pos:line="6" pos:column="31">&amp;<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="32">cmd<pos:position pos:line="6" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="37">stdin<pos:position pos:line="6" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="44">line_termination<pos:position pos:line="6" pos:column="60"/></name></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call> <operator pos:line="6" pos:column="62">!=<pos:position pos:line="6" pos:column="64"/></operator> <name pos:line="6" pos:column="65">EOF<pos:position pos:line="6" pos:column="68"/></name></expr>)<pos:position pos:line="6" pos:column="69"/></condition>
		<block type="pseudo"><if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">!<pos:position pos:line="7" pos:column="22"/></operator><name><name pos:line="7" pos:column="22">cmd<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">.<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">buf<pos:position pos:line="7" pos:column="29"/></name><index pos:line="7" pos:column="29">[<expr><literal type="number" pos:line="7" pos:column="30">0<pos:position pos:line="7" pos:column="31"/></literal></expr>]<pos:position pos:line="7" pos:column="32"/></index></name></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="25">die<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><literal type="string" pos:line="8" pos:column="29">"empty command in input"<pos:position pos:line="8" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="55"/></expr_stmt></block></then>
		<elseif pos:line="9" pos:column="17">else <if pos:line="9" pos:column="22">if <condition pos:line="9" pos:column="25">(<expr><call><name pos:line="9" pos:column="26">isspace<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><operator pos:line="9" pos:column="34">*<pos:position pos:line="9" pos:column="35"/></operator><name><name pos:line="9" pos:column="35">cmd<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">.<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="39">buf<pos:position pos:line="9" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="44"/></condition><then pos:line="9" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">die<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><literal type="string" pos:line="10" pos:column="29">"whitespace before command: %s"<pos:position pos:line="10" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="62">cmd<pos:position pos:line="10" pos:column="65"/></name><operator pos:line="10" pos:column="65">.<pos:position pos:line="10" pos:column="66"/></operator><name pos:line="10" pos:column="66">buf<pos:position pos:line="10" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="71"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="11" pos:column="17">else <if pos:line="11" pos:column="22">if <condition pos:line="11" pos:column="25">(<expr><call><name pos:line="11" pos:column="26">starts_with<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name><name pos:line="11" pos:column="38">cmd<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">.<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="42">buf<pos:position pos:line="11" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="47">"update "<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="58"/></condition><then pos:line="11" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">parse_cmd_update<pos:position pos:line="12" pos:column="41"/></name><argument_list pos:line="12" pos:column="41">(<argument><expr><name><name pos:line="12" pos:column="42">cmd<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">.<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="46">buf<pos:position pos:line="12" pos:column="49"/></name></name> <operator pos:line="12" pos:column="50">+<pos:position pos:line="12" pos:column="51"/></operator> <literal type="number" pos:line="12" pos:column="52">7<pos:position pos:line="12" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="13" pos:column="17">else <if pos:line="13" pos:column="22">if <condition pos:line="13" pos:column="25">(<expr><call><name pos:line="13" pos:column="26">starts_with<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">(<argument><expr><name><name pos:line="13" pos:column="38">cmd<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">.<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">buf<pos:position pos:line="13" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="47">"create "<pos:position pos:line="13" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="58"/></condition><then pos:line="13" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="25">parse_cmd_create<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">(<argument><expr><name><name pos:line="14" pos:column="42">cmd<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">.<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="46">buf<pos:position pos:line="14" pos:column="49"/></name></name> <operator pos:line="14" pos:column="50">+<pos:position pos:line="14" pos:column="51"/></operator> <literal type="number" pos:line="14" pos:column="52">7<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="15" pos:column="17">else <if pos:line="15" pos:column="22">if <condition pos:line="15" pos:column="25">(<expr><call><name pos:line="15" pos:column="26">starts_with<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name><name pos:line="15" pos:column="38">cmd<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">.<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="42">buf<pos:position pos:line="15" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="47">"delete "<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="58"/></condition><then pos:line="15" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">parse_cmd_delete<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><name><name pos:line="16" pos:column="42">cmd<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">.<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="46">buf<pos:position pos:line="16" pos:column="49"/></name></name> <operator pos:line="16" pos:column="50">+<pos:position pos:line="16" pos:column="51"/></operator> <literal type="number" pos:line="16" pos:column="52">7<pos:position pos:line="16" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="17" pos:column="17">else <if pos:line="17" pos:column="22">if <condition pos:line="17" pos:column="25">(<expr><call><name pos:line="17" pos:column="26">starts_with<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name><name pos:line="17" pos:column="38">cmd<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">.<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="42">buf<pos:position pos:line="17" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="47">"verify "<pos:position pos:line="17" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="58"/></condition><then pos:line="17" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="25">parse_cmd_verify<pos:position pos:line="18" pos:column="41"/></name><argument_list pos:line="18" pos:column="41">(<argument><expr><name><name pos:line="18" pos:column="42">cmd<pos:position pos:line="18" pos:column="45"/></name><operator pos:line="18" pos:column="45">.<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="46">buf<pos:position pos:line="18" pos:column="49"/></name></name> <operator pos:line="18" pos:column="50">+<pos:position pos:line="18" pos:column="51"/></operator> <literal type="number" pos:line="18" pos:column="52">7<pos:position pos:line="18" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="19" pos:column="17">else <if pos:line="19" pos:column="22">if <condition pos:line="19" pos:column="25">(<expr><call><name pos:line="19" pos:column="26">starts_with<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name><name pos:line="19" pos:column="38">cmd<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">.<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">buf<pos:position pos:line="19" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="47">"option "<pos:position pos:line="19" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="58"/></condition><then pos:line="19" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="25">parse_cmd_option<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><expr><name><name pos:line="20" pos:column="42">cmd<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">.<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="46">buf<pos:position pos:line="20" pos:column="49"/></name></name> <operator pos:line="20" pos:column="50">+<pos:position pos:line="20" pos:column="51"/></operator> <literal type="number" pos:line="20" pos:column="52">7<pos:position pos:line="20" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt></block></then></if></elseif>
		<else pos:line="21" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="25">die<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><literal type="string" pos:line="22" pos:column="29">"unknown command: %s"<pos:position pos:line="22" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="52">cmd<pos:position pos:line="22" pos:column="55"/></name><operator pos:line="22" pos:column="55">.<pos:position pos:line="22" pos:column="56"/></operator><name pos:line="22" pos:column="56">buf<pos:position pos:line="22" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt></block></else></if></block></while>

	<expr_stmt><expr><call><name pos:line="24" pos:column="9">strbuf_release<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><operator pos:line="24" pos:column="24">&amp;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="25">cmd<pos:position pos:line="24" pos:column="28"/></name></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4942_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ewah_not<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name><name pos:line="1" pos:column="15">struct<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">ewah_bitmap<pos:position pos:line="1" pos:column="33"/></name></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">self<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">pointer<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><literal type="number" pos:line="3" pos:column="26">0<pos:position pos:line="3" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>

	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><name pos:line="5" pos:column="16">pointer<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">&lt;<pos:position pos:line="5" pos:column="28"/></operator> <name><name pos:line="5" pos:column="26">self<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">-&gt;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="32">buffer_size<pos:position pos:line="5" pos:column="43"/></name></name></expr>)<pos:position pos:line="5" pos:column="44"/></condition> <block pos:line="5" pos:column="45">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">eword_t<pos:position pos:line="6" pos:column="24"/></name> <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier></type><name pos:line="6" pos:column="26">word<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><operator pos:line="6" pos:column="33">&amp;<pos:position pos:line="6" pos:column="38"/></operator><name><name pos:line="6" pos:column="34">self<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">-&gt;<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="40">buffer<pos:position pos:line="6" pos:column="46"/></name><index pos:line="6" pos:column="46">[<expr><name pos:line="6" pos:column="47">pointer<pos:position pos:line="6" pos:column="54"/></name></expr>]<pos:position pos:line="6" pos:column="55"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="56"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">size_t<pos:position pos:line="7" pos:column="23"/></name></type> <name pos:line="7" pos:column="24">literals<pos:position pos:line="7" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="34">k<pos:position pos:line="7" pos:column="35"/></name></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="9" pos:column="17">rlw_xor_run_bit<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">word<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="10" pos:column="17">++<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">pointer<pos:position pos:line="10" pos:column="26"/></name></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>

		<expr_stmt><expr><name pos:line="12" pos:column="17">literals<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <call><name pos:line="12" pos:column="28">rlw_get_literal_words<pos:position pos:line="12" pos:column="49"/></name><argument_list pos:line="12" pos:column="49">(<argument><expr><name pos:line="12" pos:column="50">word<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
		<for pos:line="13" pos:column="17">for <control pos:line="13" pos:column="21">(<init><expr><name pos:line="13" pos:column="22">k<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr>;<pos:position pos:line="13" pos:column="28"/></init> <condition><expr><name pos:line="13" pos:column="29">k<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">&lt;<pos:position pos:line="13" pos:column="35"/></operator> <name pos:line="13" pos:column="33">literals<pos:position pos:line="13" pos:column="41"/></name></expr>;<pos:position pos:line="13" pos:column="42"/></condition> <incr><expr><operator pos:line="13" pos:column="43">++<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="45">k<pos:position pos:line="13" pos:column="46"/></name></expr></incr>)<pos:position pos:line="13" pos:column="47"/></control> <block pos:line="13" pos:column="48">{
			<expr_stmt><expr><name><name pos:line="14" pos:column="25">self<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">buffer<pos:position pos:line="14" pos:column="37"/></name><index pos:line="14" pos:column="37">[<expr><name pos:line="14" pos:column="38">pointer<pos:position pos:line="14" pos:column="45"/></name></expr>]<pos:position pos:line="14" pos:column="46"/></index></name> <operator pos:line="14" pos:column="47">=<pos:position pos:line="14" pos:column="48"/></operator> <operator pos:line="14" pos:column="49">~<pos:position pos:line="14" pos:column="50"/></operator><name><name pos:line="14" pos:column="50">self<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">-&gt;<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="56">buffer<pos:position pos:line="14" pos:column="62"/></name><index pos:line="14" pos:column="62">[<expr><name pos:line="14" pos:column="63">pointer<pos:position pos:line="14" pos:column="70"/></name></expr>]<pos:position pos:line="14" pos:column="71"/></index></name></expr>;<pos:position pos:line="14" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="15" pos:column="25">++<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">pointer<pos:position pos:line="15" pos:column="34"/></name></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></for>
	}<pos:position pos:line="17" pos:column="10"/></block></while>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5519_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">expand_atom<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">strbuf<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">sb<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">atom<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">len<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="2" pos:column="25">void<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">vdata<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">expand_data<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">data<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><name pos:line="4" pos:column="36">vdata<pos:position pos:line="4" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">is_atom<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="string" pos:line="6" pos:column="21">"objectname"<pos:position pos:line="6" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="35">atom<pos:position pos:line="6" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="41">len<pos:position pos:line="6" pos:column="44"/></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="46"/></condition><then pos:line="6" pos:column="46"> <block pos:line="6" pos:column="47">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">!<pos:position pos:line="7" pos:column="22"/></operator><name><name pos:line="7" pos:column="22">data<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">mark_query<pos:position pos:line="7" pos:column="38"/></name></name></expr>)<pos:position pos:line="7" pos:column="39"/></condition><then pos:line="7" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="25">strbuf_addstr<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">sb<pos:position pos:line="8" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="43">oid_to_hex<pos:position pos:line="8" pos:column="53"/></name><argument_list pos:line="8" pos:column="53">(<argument><expr><operator pos:line="8" pos:column="54">&amp;<pos:position pos:line="8" pos:column="59"/></operator><name><name pos:line="8" pos:column="55">data<pos:position pos:line="8" pos:column="59"/></name><operator pos:line="8" pos:column="59">-&gt;<pos:position pos:line="8" pos:column="64"/></operator><name pos:line="8" pos:column="61">oid<pos:position pos:line="8" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="67"/></expr_stmt></block></then></if>
	}<pos:position pos:line="9" pos:column="10"/></block></then> <elseif pos:line="9" pos:column="11">else <if pos:line="9" pos:column="16">if <condition pos:line="9" pos:column="19">(<expr><call><name pos:line="9" pos:column="20">is_atom<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><literal type="string" pos:line="9" pos:column="28">"objecttype"<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">atom<pos:position pos:line="9" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="48">len<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="53"/></condition><then pos:line="9" pos:column="53"> <block pos:line="9" pos:column="54">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name><name pos:line="10" pos:column="21">data<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">mark_query<pos:position pos:line="10" pos:column="37"/></name></name></expr>)<pos:position pos:line="10" pos:column="38"/></condition><then pos:line="10" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="25">data<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">-&gt;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="31">info<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">.<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="36">typep<pos:position pos:line="11" pos:column="41"/></name></name> <operator pos:line="11" pos:column="42">=<pos:position pos:line="11" pos:column="43"/></operator> <operator pos:line="11" pos:column="44">&amp;<pos:position pos:line="11" pos:column="49"/></operator><name><name pos:line="11" pos:column="45">data<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">-&gt;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="51">type<pos:position pos:line="11" pos:column="55"/></name></name></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt></block></then>
		<else pos:line="12" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="25">strbuf_addstr<pos:position pos:line="13" pos:column="38"/></name><argument_list pos:line="13" pos:column="38">(<argument><expr><name pos:line="13" pos:column="39">sb<pos:position pos:line="13" pos:column="41"/></name></expr></argument>, <argument><expr><name><typename pos:line="13" pos:column="43">typename<pos:position pos:line="13" pos:column="51"/></typename></name><operator pos:line="13" pos:column="51">(<pos:position pos:line="13" pos:column="52"/></operator><name><name pos:line="13" pos:column="52">data<pos:position pos:line="13" pos:column="56"/></name><operator pos:line="13" pos:column="56">-&gt;<pos:position pos:line="13" pos:column="61"/></operator><name pos:line="13" pos:column="58">type<pos:position pos:line="13" pos:column="62"/></name></name><operator pos:line="13" pos:column="62">)<pos:position pos:line="13" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt></block></else></if>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if></elseif> <elseif pos:line="14" pos:column="11">else <if pos:line="14" pos:column="16">if <condition pos:line="14" pos:column="19">(<expr><call><name pos:line="14" pos:column="20">is_atom<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><literal type="string" pos:line="14" pos:column="28">"objectsize"<pos:position pos:line="14" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">atom<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="48">len<pos:position pos:line="14" pos:column="51"/></name></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="53"/></condition><then pos:line="14" pos:column="53"> <block pos:line="14" pos:column="54">{
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name><name pos:line="15" pos:column="21">data<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">mark_query<pos:position pos:line="15" pos:column="37"/></name></name></expr>)<pos:position pos:line="15" pos:column="38"/></condition><then pos:line="15" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="25">data<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">info<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">.<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="36">sizep<pos:position pos:line="16" pos:column="41"/></name></name> <operator pos:line="16" pos:column="42">=<pos:position pos:line="16" pos:column="43"/></operator> <operator pos:line="16" pos:column="44">&amp;<pos:position pos:line="16" pos:column="49"/></operator><name><name pos:line="16" pos:column="45">data<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">-&gt;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="51">size<pos:position pos:line="16" pos:column="55"/></name></name></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt></block></then>
		<else pos:line="17" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="25">strbuf_addf<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">sb<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="41">"%lu"<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="48">data<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">-&gt;<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="54">size<pos:position pos:line="18" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt></block></else></if>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if></elseif> <elseif pos:line="19" pos:column="11">else <if pos:line="19" pos:column="16">if <condition pos:line="19" pos:column="19">(<expr><call><name pos:line="19" pos:column="20">is_atom<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><literal type="string" pos:line="19" pos:column="28">"objectsize:disk"<pos:position pos:line="19" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="47">atom<pos:position pos:line="19" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="53">len<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="58"/></condition><then pos:line="19" pos:column="58"> <block pos:line="19" pos:column="59">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name><name pos:line="20" pos:column="21">data<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">-&gt;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="27">mark_query<pos:position pos:line="20" pos:column="37"/></name></name></expr>)<pos:position pos:line="20" pos:column="38"/></condition><then pos:line="20" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="25">data<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">info<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">.<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="36">disk_sizep<pos:position pos:line="21" pos:column="46"/></name></name> <operator pos:line="21" pos:column="47">=<pos:position pos:line="21" pos:column="48"/></operator> <operator pos:line="21" pos:column="49">&amp;<pos:position pos:line="21" pos:column="54"/></operator><name><name pos:line="21" pos:column="50">data<pos:position pos:line="21" pos:column="54"/></name><operator pos:line="21" pos:column="54">-&gt;<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="56">disk_size<pos:position pos:line="21" pos:column="65"/></name></name></expr>;<pos:position pos:line="21" pos:column="66"/></expr_stmt></block></then>
		<else pos:line="22" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="25">strbuf_addf<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name pos:line="23" pos:column="37">sb<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="41">"%"<pos:position pos:line="23" pos:column="44"/></literal><name pos:line="23" pos:column="44">PRIuMAX<pos:position pos:line="23" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="53">(<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="54">uintmax_t<pos:position pos:line="23" pos:column="63"/></name><operator pos:line="23" pos:column="63">)<pos:position pos:line="23" pos:column="64"/></operator><name><name pos:line="23" pos:column="64">data<pos:position pos:line="23" pos:column="68"/></name><operator pos:line="23" pos:column="68">-&gt;<pos:position pos:line="23" pos:column="73"/></operator><name pos:line="23" pos:column="70">disk_size<pos:position pos:line="23" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="81"/></expr_stmt></block></else></if>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if></elseif> <elseif pos:line="24" pos:column="11">else <if pos:line="24" pos:column="16">if <condition pos:line="24" pos:column="19">(<expr><call><name pos:line="24" pos:column="20">is_atom<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><literal type="string" pos:line="24" pos:column="28">"rest"<pos:position pos:line="24" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="36">atom<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">len<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="47"/></condition><then pos:line="24" pos:column="47"> <block pos:line="24" pos:column="48">{
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name><name pos:line="25" pos:column="21">data<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">-&gt;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="27">mark_query<pos:position pos:line="25" pos:column="37"/></name></name></expr>)<pos:position pos:line="25" pos:column="38"/></condition><then pos:line="25" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="25">data<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">split_on_whitespace<pos:position pos:line="26" pos:column="50"/></name></name> <operator pos:line="26" pos:column="51">=<pos:position pos:line="26" pos:column="52"/></operator> <literal type="number" pos:line="26" pos:column="53">1<pos:position pos:line="26" pos:column="54"/></literal></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt></block></then>
		<elseif pos:line="27" pos:column="17">else <if pos:line="27" pos:column="22">if <condition pos:line="27" pos:column="25">(<expr><name><name pos:line="27" pos:column="26">data<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">rest<pos:position pos:line="27" pos:column="36"/></name></name></expr>)<pos:position pos:line="27" pos:column="37"/></condition><then pos:line="27" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">strbuf_addstr<pos:position pos:line="28" pos:column="38"/></name><argument_list pos:line="28" pos:column="38">(<argument><expr><name pos:line="28" pos:column="39">sb<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="43">data<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">-&gt;<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="49">rest<pos:position pos:line="28" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if></elseif> <elseif pos:line="29" pos:column="11">else <if pos:line="29" pos:column="16">if <condition pos:line="29" pos:column="19">(<expr><call><name pos:line="29" pos:column="20">is_atom<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><literal type="string" pos:line="29" pos:column="28">"deltabase"<pos:position pos:line="29" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="41">atom<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="47">len<pos:position pos:line="29" pos:column="50"/></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="52"/></condition><then pos:line="29" pos:column="52"> <block pos:line="29" pos:column="53">{
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name><name pos:line="30" pos:column="21">data<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">mark_query<pos:position pos:line="30" pos:column="37"/></name></name></expr>)<pos:position pos:line="30" pos:column="38"/></condition><then pos:line="30" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="25">data<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">info<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">.<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="36">delta_base_sha1<pos:position pos:line="31" pos:column="51"/></name></name> <operator pos:line="31" pos:column="52">=<pos:position pos:line="31" pos:column="53"/></operator> <name><name pos:line="31" pos:column="54">data<pos:position pos:line="31" pos:column="58"/></name><operator pos:line="31" pos:column="58">-&gt;<pos:position pos:line="31" pos:column="63"/></operator><name pos:line="31" pos:column="60">delta_base_oid<pos:position pos:line="31" pos:column="74"/></name><operator pos:line="31" pos:column="74">.<pos:position pos:line="31" pos:column="75"/></operator><name pos:line="31" pos:column="75">hash<pos:position pos:line="31" pos:column="79"/></name></name></expr>;<pos:position pos:line="31" pos:column="80"/></expr_stmt></block></then>
		<else pos:line="32" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="25">strbuf_addstr<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><name pos:line="33" pos:column="39">sb<pos:position pos:line="33" pos:column="41"/></name></expr></argument>,
				      <argument><expr><call><name pos:line="34" pos:column="39">oid_to_hex<pos:position pos:line="34" pos:column="49"/></name><argument_list pos:line="34" pos:column="49">(<argument><expr><operator pos:line="34" pos:column="50">&amp;<pos:position pos:line="34" pos:column="55"/></operator><name><name pos:line="34" pos:column="51">data<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">-&gt;<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="57">delta_base_oid<pos:position pos:line="34" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="74"/></expr_stmt></block></else></if>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if></elseif> <else pos:line="35" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">die<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><literal type="string" pos:line="36" pos:column="21">"unknown format element: %.*s"<pos:position pos:line="36" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="53">len<pos:position pos:line="36" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="58">atom<pos:position pos:line="36" pos:column="62"/></name></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="64"/></expr_stmt></block></else></if>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

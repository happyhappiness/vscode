<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5883_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">recurse_submodules_cb<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name><name pos:line="1" pos:column="40">struct<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">option<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">opt<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">arg<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">int<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">unset<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">unset<pos:position pos:line="4" pos:column="18"/></name></expr>)<pos:position pos:line="4" pos:column="19"/></condition><then pos:line="4" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="17">string_list_clear<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><operator pos:line="5" pos:column="35">(<pos:position pos:line="5" pos:column="36"/></operator>struct <name pos:line="5" pos:column="43">string_list<pos:position pos:line="5" pos:column="54"/></name> <operator pos:line="5" pos:column="55">*<pos:position pos:line="5" pos:column="56"/></operator><operator pos:line="5" pos:column="56">)<pos:position pos:line="5" pos:column="57"/></operator><name><name pos:line="5" pos:column="57">opt<pos:position pos:line="5" pos:column="60"/></name><operator pos:line="5" pos:column="60">-&gt;<pos:position pos:line="5" pos:column="65"/></operator><name pos:line="5" pos:column="62">value<pos:position pos:line="5" pos:column="67"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="69">0<pos:position pos:line="5" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="72"/></expr_stmt></block></then>
	<elseif pos:line="6" pos:column="9">else <if pos:line="6" pos:column="14">if <condition pos:line="6" pos:column="17">(<expr><name pos:line="6" pos:column="18">arg<pos:position pos:line="6" pos:column="21"/></name></expr>)<pos:position pos:line="6" pos:column="22"/></condition><then pos:line="6" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">string_list_append<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<argument><expr><operator pos:line="7" pos:column="36">(<pos:position pos:line="7" pos:column="37"/></operator>struct <name pos:line="7" pos:column="44">string_list<pos:position pos:line="7" pos:column="55"/></name> <operator pos:line="7" pos:column="56">*<pos:position pos:line="7" pos:column="57"/></operator><operator pos:line="7" pos:column="57">)<pos:position pos:line="7" pos:column="58"/></operator><name><name pos:line="7" pos:column="58">opt<pos:position pos:line="7" pos:column="61"/></name><operator pos:line="7" pos:column="61">-&gt;<pos:position pos:line="7" pos:column="66"/></operator><name pos:line="7" pos:column="63">value<pos:position pos:line="7" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="70">arg<pos:position pos:line="7" pos:column="73"/></name></expr></argument>)<pos:position pos:line="7" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="75"/></expr_stmt></block></then></if></elseif>
	<else pos:line="8" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">string_list_append<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><operator pos:line="9" pos:column="36">(<pos:position pos:line="9" pos:column="37"/></operator>struct <name pos:line="9" pos:column="44">string_list<pos:position pos:line="9" pos:column="55"/></name> <operator pos:line="9" pos:column="56">*<pos:position pos:line="9" pos:column="57"/></operator><operator pos:line="9" pos:column="57">)<pos:position pos:line="9" pos:column="58"/></operator><name><name pos:line="9" pos:column="58">opt<pos:position pos:line="9" pos:column="61"/></name><operator pos:line="9" pos:column="61">-&gt;<pos:position pos:line="9" pos:column="66"/></operator><name pos:line="9" pos:column="63">value<pos:position pos:line="9" pos:column="68"/></name></name></expr></argument>,
				   <argument><expr><operator pos:line="10" pos:column="36">(<pos:position pos:line="10" pos:column="37"/></operator><specifier pos:line="10" pos:column="37">const<pos:position pos:line="10" pos:column="42"/></specifier> <name pos:line="10" pos:column="43">char<pos:position pos:line="10" pos:column="47"/></name> <operator pos:line="10" pos:column="48">*<pos:position pos:line="10" pos:column="49"/></operator><operator pos:line="10" pos:column="49">)<pos:position pos:line="10" pos:column="50"/></operator><name><name pos:line="10" pos:column="50">opt<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">-&gt;<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="55">defval<pos:position pos:line="10" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="63"/></expr_stmt></block></else></if>

	<return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6763_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">setitimer<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">type<pos:position pos:line="1" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">itimerval<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">in<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">itimerval<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">out<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><specifier pos:line="3" pos:column="16">const<pos:position pos:line="3" pos:column="21"/></specifier> <name><name pos:line="3" pos:column="22">struct<pos:position pos:line="3" pos:column="28"/></name> <name pos:line="3" pos:column="29">timeval<pos:position pos:line="3" pos:column="36"/></name></name></type> <name pos:line="3" pos:column="37">zero<pos:position pos:line="3" pos:column="41"/></name></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">int<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">atexit_done<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">out<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">!=<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr>)<pos:position pos:line="6" pos:column="25"/></condition><then pos:line="6" pos:column="25">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><name pos:line="7" pos:column="24">errno<pos:position pos:line="7" pos:column="29"/></name> <operator pos:line="7" pos:column="30">=<pos:position pos:line="7" pos:column="31"/></operator> <name pos:line="7" pos:column="32">EINVAL<pos:position pos:line="7" pos:column="38"/></name></expr><operator pos:line="7" pos:column="38">,<pos:position pos:line="7" pos:column="39"/></operator>
			<expr><call><name pos:line="8" pos:column="25">error<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><literal type="string" pos:line="8" pos:column="31">"setitimer param 3 != NULL not implemented"<pos:position pos:line="8" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="76"/></return></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">is_timeval_eq<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><operator pos:line="9" pos:column="28">&amp;<pos:position pos:line="9" pos:column="33"/></operator><name><name pos:line="9" pos:column="29">in<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">it_interval<pos:position pos:line="9" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="46">&amp;<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="47">zero<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call> <operator pos:line="9" pos:column="53">&amp;&amp;<pos:position pos:line="9" pos:column="63"/></operator>
	    <operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">is_timeval_eq<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><operator pos:line="10" pos:column="28">&amp;<pos:position pos:line="10" pos:column="33"/></operator><name><name pos:line="10" pos:column="29">in<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">it_interval<pos:position pos:line="10" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="46">&amp;<pos:position pos:line="10" pos:column="51"/></operator><name><name pos:line="10" pos:column="47">in<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">-&gt;<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="51">it_value<pos:position pos:line="10" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="61"/></condition><then pos:line="10" pos:column="61">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><name pos:line="11" pos:column="24">errno<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">=<pos:position pos:line="11" pos:column="31"/></operator> <name pos:line="11" pos:column="32">EINVAL<pos:position pos:line="11" pos:column="38"/></name></expr><operator pos:line="11" pos:column="38">,<pos:position pos:line="11" pos:column="39"/></operator>
			<expr><call><name pos:line="12" pos:column="25">error<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><literal type="string" pos:line="12" pos:column="31">"setitimer: it_interval must be zero or eq it_value"<pos:position pos:line="12" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="85"/></return></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">timer_thread<pos:position pos:line="14" pos:column="25"/></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">stop_timer_thread<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">()<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">is_timeval_eq<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><operator pos:line="17" pos:column="27">&amp;<pos:position pos:line="17" pos:column="32"/></operator><name><name pos:line="17" pos:column="28">in<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">it_value<pos:position pos:line="17" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="42">&amp;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="43">zero<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call> <operator pos:line="17" pos:column="49">&amp;&amp;<pos:position pos:line="17" pos:column="59"/></operator>
	    <call><name pos:line="18" pos:column="13">is_timeval_eq<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><operator pos:line="18" pos:column="27">&amp;<pos:position pos:line="18" pos:column="32"/></operator><name><name pos:line="18" pos:column="28">in<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">it_interval<pos:position pos:line="18" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="45">&amp;<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="46">zero<pos:position pos:line="18" pos:column="50"/></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="52"/></condition><then pos:line="18" pos:column="52">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="21" pos:column="9">timer_interval<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <name><name pos:line="21" pos:column="26">in<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">it_value<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">.<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="39">tv_sec<pos:position pos:line="21" pos:column="45"/></name></name> <operator pos:line="21" pos:column="46">*<pos:position pos:line="21" pos:column="47"/></operator> <literal type="number" pos:line="21" pos:column="48">1000<pos:position pos:line="21" pos:column="52"/></literal> <operator pos:line="21" pos:column="53">+<pos:position pos:line="21" pos:column="54"/></operator> <name><name pos:line="21" pos:column="55">in<pos:position pos:line="21" pos:column="57"/></name><operator pos:line="21" pos:column="57">-&gt;<pos:position pos:line="21" pos:column="62"/></operator><name pos:line="21" pos:column="59">it_value<pos:position pos:line="21" pos:column="67"/></name><operator pos:line="21" pos:column="67">.<pos:position pos:line="21" pos:column="68"/></operator><name pos:line="21" pos:column="68">tv_usec<pos:position pos:line="21" pos:column="75"/></name></name> <operator pos:line="21" pos:column="76">/<pos:position pos:line="21" pos:column="77"/></operator> <literal type="number" pos:line="21" pos:column="78">1000<pos:position pos:line="21" pos:column="82"/></literal></expr>;<pos:position pos:line="21" pos:column="83"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">one_shot<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <call><name pos:line="22" pos:column="20">is_timeval_eq<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><operator pos:line="22" pos:column="34">&amp;<pos:position pos:line="22" pos:column="39"/></operator><name><name pos:line="22" pos:column="35">in<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">-&gt;<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="39">it_interval<pos:position pos:line="22" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="52">&amp;<pos:position pos:line="22" pos:column="57"/></operator><name pos:line="22" pos:column="53">zero<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">atexit_done<pos:position pos:line="23" pos:column="25"/></name></expr>)<pos:position pos:line="23" pos:column="26"/></condition><then pos:line="23" pos:column="26"> <block pos:line="23" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">atexit<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">stop_timer_thread<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="25" pos:column="17">atexit_done<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator> <literal type="number" pos:line="25" pos:column="31">1<pos:position pos:line="25" pos:column="32"/></literal></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>
	<return pos:line="27" pos:column="9">return <expr><call><name pos:line="27" pos:column="16">start_timer_thread<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">()<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="37"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

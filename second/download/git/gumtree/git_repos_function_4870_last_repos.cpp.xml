<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4870_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">line_contains_alnum<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ptr<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">long<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">size<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<while pos:line="3" pos:column="9">while <condition pos:line="3" pos:column="15">(<expr><name pos:line="3" pos:column="16">size<pos:position pos:line="3" pos:column="20"/></name><operator pos:line="3" pos:column="20">--<pos:position pos:line="3" pos:column="22"/></operator></expr>)<pos:position pos:line="3" pos:column="23"/></condition>
		<block type="pseudo"><if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><call><name pos:line="4" pos:column="21">isalnum<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><operator pos:line="4" pos:column="29">(<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="30">unsigned<pos:position pos:line="4" pos:column="38"/></name> <name pos:line="4" pos:column="39">char<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">)<pos:position pos:line="4" pos:column="44"/></operator><operator pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></operator><operator pos:line="4" pos:column="45">(<pos:position pos:line="4" pos:column="46"/></operator><name pos:line="4" pos:column="46">ptr<pos:position pos:line="4" pos:column="49"/></name><operator pos:line="4" pos:column="49">++<pos:position pos:line="4" pos:column="51"/></operator><operator pos:line="4" pos:column="51">)<pos:position pos:line="4" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="4" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="54"/></condition><then pos:line="4" pos:column="54">
			<block type="pseudo"><return pos:line="5" pos:column="25">return <expr><literal type="number" pos:line="5" pos:column="32">1<pos:position pos:line="5" pos:column="33"/></literal></expr>;<pos:position pos:line="5" pos:column="34"/></return></block></then></if></block></while>
	<return pos:line="6" pos:column="9">return <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

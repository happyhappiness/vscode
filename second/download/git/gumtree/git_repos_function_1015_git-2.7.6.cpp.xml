<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1015_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">read_pathspec_from_stdin<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">rev_info<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">revs<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="61">struct<pos:position pos:line="1" pos:column="67"/></name> <name pos:line="1" pos:column="68">strbuf<pos:position pos:line="1" pos:column="74"/></name></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">sb<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
				     <parameter><decl><type><name><name pos:line="2" pos:column="38">struct<pos:position pos:line="2" pos:column="44"/></name> <name pos:line="2" pos:column="45">cmdline_pathspec<pos:position pos:line="2" pos:column="61"/></name></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">prune<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<while pos:line="4" pos:column="9">while <condition pos:line="4" pos:column="15">(<expr><call><name pos:line="4" pos:column="16">strbuf_getwholeline<pos:position pos:line="4" pos:column="35"/></name><argument_list pos:line="4" pos:column="35">(<argument><expr><name pos:line="4" pos:column="36">sb<pos:position pos:line="4" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="40">stdin<pos:position pos:line="4" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="4" pos:column="47">'\n'<pos:position pos:line="4" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="52"/></argument_list></call> <operator pos:line="4" pos:column="53">!=<pos:position pos:line="4" pos:column="55"/></operator> <name pos:line="4" pos:column="56">EOF<pos:position pos:line="4" pos:column="59"/></name></expr>)<pos:position pos:line="4" pos:column="60"/></condition> <block pos:line="4" pos:column="61">{
		<decl_stmt><decl><type><name pos:line="5" pos:column="17">int<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">len<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name><name pos:line="5" pos:column="27">sb<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">len<pos:position pos:line="5" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><name pos:line="6" pos:column="21">len<pos:position pos:line="6" pos:column="24"/></name> <operator pos:line="6" pos:column="25">&amp;&amp;<pos:position pos:line="6" pos:column="35"/></operator> <name><name pos:line="6" pos:column="28">sb<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">-&gt;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="32">buf<pos:position pos:line="6" pos:column="35"/></name><index pos:line="6" pos:column="35">[<expr><name pos:line="6" pos:column="36">len<pos:position pos:line="6" pos:column="39"/></name> <operator pos:line="6" pos:column="40">-<pos:position pos:line="6" pos:column="41"/></operator> <literal type="number" pos:line="6" pos:column="42">1<pos:position pos:line="6" pos:column="43"/></literal></expr>]<pos:position pos:line="6" pos:column="44"/></index></name> <operator pos:line="6" pos:column="45">==<pos:position pos:line="6" pos:column="47"/></operator> <literal type="char" pos:line="6" pos:column="48">'\n'<pos:position pos:line="6" pos:column="52"/></literal></expr>)<pos:position pos:line="6" pos:column="53"/></condition><then pos:line="6" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="7" pos:column="25">sb<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">buf<pos:position pos:line="7" pos:column="32"/></name><index pos:line="7" pos:column="32">[<expr><operator pos:line="7" pos:column="33">--<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">len<pos:position pos:line="7" pos:column="38"/></name></expr>]<pos:position pos:line="7" pos:column="39"/></index></name> <operator pos:line="7" pos:column="40">=<pos:position pos:line="7" pos:column="41"/></operator> <literal type="char" pos:line="7" pos:column="42">'\0'<pos:position pos:line="7" pos:column="46"/></literal></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">ALLOC_GROW<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name><name pos:line="8" pos:column="28">prune<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">-&gt;<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="35">path<pos:position pos:line="8" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="41">prune<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">-&gt;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="48">nr<pos:position pos:line="8" pos:column="50"/></name></name> <operator pos:line="8" pos:column="51">+<pos:position pos:line="8" pos:column="52"/></operator> <literal type="number" pos:line="8" pos:column="53">1<pos:position pos:line="8" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="56">prune<pos:position pos:line="8" pos:column="61"/></name><operator pos:line="8" pos:column="61">-&gt;<pos:position pos:line="8" pos:column="66"/></operator><name pos:line="8" pos:column="63">alloc<pos:position pos:line="8" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="9" pos:column="17">prune<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">path<pos:position pos:line="9" pos:column="28"/></name><index pos:line="9" pos:column="28">[<expr><name><name pos:line="9" pos:column="29">prune<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">nr<pos:position pos:line="9" pos:column="38"/></name></name><operator pos:line="9" pos:column="38">++<pos:position pos:line="9" pos:column="40"/></operator></expr>]<pos:position pos:line="9" pos:column="41"/></index></name> <operator pos:line="9" pos:column="42">=<pos:position pos:line="9" pos:column="43"/></operator> <call><name pos:line="9" pos:column="44">xstrdup<pos:position pos:line="9" pos:column="51"/></name><argument_list pos:line="9" pos:column="51">(<argument><expr><name><name pos:line="9" pos:column="52">sb<pos:position pos:line="9" pos:column="54"/></name><operator pos:line="9" pos:column="54">-&gt;<pos:position pos:line="9" pos:column="59"/></operator><name pos:line="9" pos:column="56">buf<pos:position pos:line="9" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></while>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

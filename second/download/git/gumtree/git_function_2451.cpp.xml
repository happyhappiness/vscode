<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2451.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">parse_commit_or_die<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">commit<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">item<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">parse_commit<pos:position pos:line="3" pos:column="25"/></name><argument_list pos:line="3" pos:column="25">(<argument><expr><name pos:line="3" pos:column="26">item<pos:position pos:line="3" pos:column="30"/></name></expr></argument>)<pos:position pos:line="3" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="32"/></condition><then pos:line="3" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="17">die<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><literal type="string" pos:line="4" pos:column="21">"unable to parse commit %s"<pos:position pos:line="4" pos:column="48"/></literal></expr></argument>,
		    <argument><expr><ternary><condition><expr><name pos:line="5" pos:column="21">item<pos:position pos:line="5" pos:column="25"/></name></expr> ?<pos:position pos:line="5" pos:column="27"/></condition><then pos:line="5" pos:column="27"> <expr><call><name pos:line="5" pos:column="28">sha1_to_hex<pos:position pos:line="5" pos:column="39"/></name><argument_list pos:line="5" pos:column="39">(<argument><expr><name><name pos:line="5" pos:column="40">item<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">-&gt;<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="46">object<pos:position pos:line="5" pos:column="52"/></name><operator pos:line="5" pos:column="52">.<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="53">sha1<pos:position pos:line="5" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr> <pos:position pos:line="5" pos:column="59"/></then><else pos:line="5" pos:column="59">: <expr><literal type="string" pos:line="5" pos:column="61">"(null)"<pos:position pos:line="5" pos:column="69"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="5" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="71"/></expr_stmt></block></then></if>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_267_git-2.14.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">test_bitmap_walk<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">rev_info<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">revs<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">object<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">root<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">bitmap<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">result<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name pos:line="4" pos:column="33">NULL<pos:position pos:line="4" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">khiter_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">pos<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">result_popcnt<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">bitmap_test_data<pos:position pos:line="7" pos:column="32"/></name></name></type> <name pos:line="7" pos:column="33">tdata<pos:position pos:line="7" pos:column="38"/></name></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">prepare_bitmap_git<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">()<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">die<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><literal type="string" pos:line="10" pos:column="21">"failed to load bitmap indexes"<pos:position pos:line="10" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">revs<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">pending<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">.<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">nr<pos:position pos:line="12" pos:column="29"/></name></name> <operator pos:line="12" pos:column="30">!=<pos:position pos:line="12" pos:column="32"/></operator> <literal type="number" pos:line="12" pos:column="33">1<pos:position pos:line="12" pos:column="34"/></literal></expr>)<pos:position pos:line="12" pos:column="35"/></condition><then pos:line="12" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">die<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><literal type="string" pos:line="13" pos:column="21">"you must specify exactly one commit to test"<pos:position pos:line="13" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">fprintf<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">stderr<pos:position pos:line="15" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="25">"Bitmap v%d test (%d entries loaded)\n"<pos:position pos:line="15" pos:column="64"/></literal></expr></argument>,
		<argument><expr><name><name pos:line="16" pos:column="17">bitmap_git<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">.<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="28">version<pos:position pos:line="16" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="37">bitmap_git<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">.<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="48">entry_count<pos:position pos:line="16" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt>

	<expr_stmt><expr><name pos:line="18" pos:column="9">root<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name><name pos:line="18" pos:column="16">revs<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">pending<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">.<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">objects<pos:position pos:line="18" pos:column="37"/></name><index pos:line="18" pos:column="37">[<expr><literal type="number" pos:line="18" pos:column="38">0<pos:position pos:line="18" pos:column="39"/></literal></expr>]<pos:position pos:line="18" pos:column="40"/></index></name><operator pos:line="18" pos:column="40">.<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="41">item<pos:position pos:line="18" pos:column="45"/></name></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">pos<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">kh_get_sha1<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name><name pos:line="19" pos:column="27">bitmap_git<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">.<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="38">bitmaps<pos:position pos:line="19" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="47">root<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">-&gt;<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="53">oid<pos:position pos:line="19" pos:column="56"/></name><operator pos:line="19" pos:column="56">.<pos:position pos:line="19" pos:column="57"/></operator><name pos:line="19" pos:column="57">hash<pos:position pos:line="19" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">pos<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">&lt;<pos:position pos:line="21" pos:column="21"/></operator> <call><name pos:line="21" pos:column="19">kh_end<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name><name pos:line="21" pos:column="26">bitmap_git<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">.<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="37">bitmaps<pos:position pos:line="21" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="46"/></condition><then pos:line="21" pos:column="46"> <block pos:line="21" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="22" pos:column="17">struct<pos:position pos:line="22" pos:column="23"/></name> <name pos:line="22" pos:column="24">stored_bitmap<pos:position pos:line="22" pos:column="37"/></name></name> <modifier pos:line="22" pos:column="38">*<pos:position pos:line="22" pos:column="39"/></modifier></type><name pos:line="22" pos:column="39">st<pos:position pos:line="22" pos:column="41"/></name> <init pos:line="22" pos:column="42">= <expr><call><name pos:line="22" pos:column="44">kh_value<pos:position pos:line="22" pos:column="52"/></name><argument_list pos:line="22" pos:column="52">(<argument><expr><name><name pos:line="22" pos:column="53">bitmap_git<pos:position pos:line="22" pos:column="63"/></name><operator pos:line="22" pos:column="63">.<pos:position pos:line="22" pos:column="64"/></operator><name pos:line="22" pos:column="64">bitmaps<pos:position pos:line="22" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="73">pos<pos:position pos:line="22" pos:column="76"/></name></expr></argument>)<pos:position pos:line="22" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="78"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="23" pos:column="17">struct<pos:position pos:line="23" pos:column="23"/></name> <name pos:line="23" pos:column="24">ewah_bitmap<pos:position pos:line="23" pos:column="35"/></name></name> <modifier pos:line="23" pos:column="36">*<pos:position pos:line="23" pos:column="37"/></modifier></type><name pos:line="23" pos:column="37">bm<pos:position pos:line="23" pos:column="39"/></name> <init pos:line="23" pos:column="40">= <expr><call><name pos:line="23" pos:column="42">lookup_stored_bitmap<pos:position pos:line="23" pos:column="62"/></name><argument_list pos:line="23" pos:column="62">(<argument><expr><name pos:line="23" pos:column="63">st<pos:position pos:line="23" pos:column="65"/></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="67"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="25" pos:column="17">fprintf<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">stderr<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="33">"Found bitmap for %s. %d bits / %08x checksum\n"<pos:position pos:line="25" pos:column="81"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="26" pos:column="25">oid_to_hex<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><operator pos:line="26" pos:column="36">&amp;<pos:position pos:line="26" pos:column="41"/></operator><name><name pos:line="26" pos:column="37">root<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">oid<pos:position pos:line="26" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="26" pos:column="49">(<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="50">int<pos:position pos:line="26" pos:column="53"/></name><operator pos:line="26" pos:column="53">)<pos:position pos:line="26" pos:column="54"/></operator><name><name pos:line="26" pos:column="54">bm<pos:position pos:line="26" pos:column="56"/></name><operator pos:line="26" pos:column="56">-&gt;<pos:position pos:line="26" pos:column="61"/></operator><name pos:line="26" pos:column="58">bit_size<pos:position pos:line="26" pos:column="66"/></name></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="68">ewah_checksum<pos:position pos:line="26" pos:column="81"/></name><argument_list pos:line="26" pos:column="81">(<argument><expr><name pos:line="26" pos:column="82">bm<pos:position pos:line="26" pos:column="84"/></name></expr></argument>)<pos:position pos:line="26" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="87"/></expr_stmt>

		<expr_stmt><expr><name pos:line="28" pos:column="17">result<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <call><name pos:line="28" pos:column="26">ewah_to_bitmap<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">bm<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">result<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">==<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">NULL<pos:position pos:line="31" pos:column="27"/></name></expr>)<pos:position pos:line="31" pos:column="28"/></condition><then pos:line="31" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">die<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><literal type="string" pos:line="32" pos:column="21">"Commit %s doesn't have an indexed bitmap"<pos:position pos:line="32" pos:column="63"/></literal></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="65">oid_to_hex<pos:position pos:line="32" pos:column="75"/></name><argument_list pos:line="32" pos:column="75">(<argument><expr><operator pos:line="32" pos:column="76">&amp;<pos:position pos:line="32" pos:column="81"/></operator><name><name pos:line="32" pos:column="77">root<pos:position pos:line="32" pos:column="81"/></name><operator pos:line="32" pos:column="81">-&gt;<pos:position pos:line="32" pos:column="86"/></operator><name pos:line="32" pos:column="83">oid<pos:position pos:line="32" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="89"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="34" pos:column="9">revs<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">-&gt;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="15">tag_objects<pos:position pos:line="34" pos:column="26"/></name></name> <operator pos:line="34" pos:column="27">=<pos:position pos:line="34" pos:column="28"/></operator> <literal type="number" pos:line="34" pos:column="29">1<pos:position pos:line="34" pos:column="30"/></literal></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="35" pos:column="9">revs<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">tree_objects<pos:position pos:line="35" pos:column="27"/></name></name> <operator pos:line="35" pos:column="28">=<pos:position pos:line="35" pos:column="29"/></operator> <literal type="number" pos:line="35" pos:column="30">1<pos:position pos:line="35" pos:column="31"/></literal></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">revs<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">blob_objects<pos:position pos:line="36" pos:column="27"/></name></name> <operator pos:line="36" pos:column="28">=<pos:position pos:line="36" pos:column="29"/></operator> <literal type="number" pos:line="36" pos:column="30">1<pos:position pos:line="36" pos:column="31"/></literal></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><name pos:line="38" pos:column="9">result_popcnt<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <call><name pos:line="38" pos:column="25">bitmap_popcount<pos:position pos:line="38" pos:column="40"/></name><argument_list pos:line="38" pos:column="40">(<argument><expr><name pos:line="38" pos:column="41">result<pos:position pos:line="38" pos:column="47"/></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><call><name pos:line="40" pos:column="13">prepare_revision_walk<pos:position pos:line="40" pos:column="34"/></name><argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">revs<pos:position pos:line="40" pos:column="39"/></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="41"/></condition><then pos:line="40" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="17">die<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><literal type="string" pos:line="41" pos:column="21">"revision walk setup failed"<pos:position pos:line="41" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="43" pos:column="9">tdata<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">.<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">base<pos:position pos:line="43" pos:column="19"/></name></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <call><name pos:line="43" pos:column="22">bitmap_new<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">()<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="44" pos:column="9">tdata<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">.<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">prg<pos:position pos:line="44" pos:column="18"/></name></name> <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <call><name pos:line="44" pos:column="21">start_progress<pos:position pos:line="44" pos:column="35"/></name><argument_list pos:line="44" pos:column="35">(<argument><expr><literal type="string" pos:line="44" pos:column="36">"Verifying bitmap entries"<pos:position pos:line="44" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="64">result_popcnt<pos:position pos:line="44" pos:column="77"/></name></expr></argument>)<pos:position pos:line="44" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="79"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">tdata<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">.<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="15">seen<pos:position pos:line="45" pos:column="19"/></name></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <literal type="number" pos:line="45" pos:column="22">0<pos:position pos:line="45" pos:column="23"/></literal></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="47" pos:column="9">traverse_commit_list<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">revs<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="36">&amp;<pos:position pos:line="47" pos:column="41"/></operator><name pos:line="47" pos:column="37">test_show_commit<pos:position pos:line="47" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="55">&amp;<pos:position pos:line="47" pos:column="60"/></operator><name pos:line="47" pos:column="56">test_show_object<pos:position pos:line="47" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="74">&amp;<pos:position pos:line="47" pos:column="79"/></operator><name pos:line="47" pos:column="75">tdata<pos:position pos:line="47" pos:column="80"/></name></expr></argument>)<pos:position pos:line="47" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="82"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="49" pos:column="9">stop_progress<pos:position pos:line="49" pos:column="22"/></name><argument_list pos:line="49" pos:column="22">(<argument><expr><operator pos:line="49" pos:column="23">&amp;<pos:position pos:line="49" pos:column="28"/></operator><name><name pos:line="49" pos:column="24">tdata<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">.<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="30">prg<pos:position pos:line="49" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="35"/></expr_stmt>

	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><call><name pos:line="51" pos:column="13">bitmap_equals<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">result<pos:position pos:line="51" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="35">tdata<pos:position pos:line="51" pos:column="40"/></name><operator pos:line="51" pos:column="40">.<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="41">base<pos:position pos:line="51" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="47"/></condition><then pos:line="51" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="17">fprintf<pos:position pos:line="52" pos:column="24"/></name><argument_list pos:line="52" pos:column="24">(<argument><expr><name pos:line="52" pos:column="25">stderr<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="33">"OK!\n"<pos:position pos:line="52" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="42"/></expr_stmt></block></then>
	<else pos:line="53" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="17">fprintf<pos:position pos:line="54" pos:column="24"/></name><argument_list pos:line="54" pos:column="24">(<argument><expr><name pos:line="54" pos:column="25">stderr<pos:position pos:line="54" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="33">"Mismatch!\n"<pos:position pos:line="54" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="48"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="56" pos:column="9">bitmap_free<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><name pos:line="56" pos:column="21">result<pos:position pos:line="56" pos:column="27"/></name></expr></argument>)<pos:position pos:line="56" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

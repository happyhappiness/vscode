<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4987_git-2.12.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_remove_files<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">string_list<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">list<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<for pos:line="4" pos:column="9">for <control pos:line="4" pos:column="13">(<init><expr><name pos:line="4" pos:column="14">i<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">=<pos:position pos:line="4" pos:column="17"/></operator> <literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr>;<pos:position pos:line="4" pos:column="20"/></init> <condition><expr><name pos:line="4" pos:column="21">i<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;<pos:position pos:line="4" pos:column="27"/></operator> <name><name pos:line="4" pos:column="25">list<pos:position pos:line="4" pos:column="29"/></name><operator pos:line="4" pos:column="29">-&gt;<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="31">nr<pos:position pos:line="4" pos:column="33"/></name></name></expr>;<pos:position pos:line="4" pos:column="34"/></condition> <incr><expr><name pos:line="4" pos:column="35">i<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">++<pos:position pos:line="4" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="4" pos:column="39"/></control> <block pos:line="4" pos:column="40">{
		<decl_stmt><decl><type><name><name pos:line="5" pos:column="17">struct<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">stat<pos:position pos:line="5" pos:column="28"/></name></name></type> <name pos:line="5" pos:column="29">st<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="6" pos:column="17">struct<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">string_list_item<pos:position pos:line="6" pos:column="40"/></name></name> <modifier pos:line="6" pos:column="41">*<pos:position pos:line="6" pos:column="42"/></modifier></type><name pos:line="6" pos:column="42">p<pos:position pos:line="6" pos:column="43"/></name> <init pos:line="6" pos:column="44">= <expr><operator pos:line="6" pos:column="46">&amp;<pos:position pos:line="6" pos:column="51"/></operator><operator pos:line="6" pos:column="47">(<pos:position pos:line="6" pos:column="48"/></operator><name><name pos:line="6" pos:column="48">list<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">-&gt;<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="54">items<pos:position pos:line="6" pos:column="59"/></name><index pos:line="6" pos:column="59">[<expr><name pos:line="6" pos:column="60">i<pos:position pos:line="6" pos:column="61"/></name></expr>]<pos:position pos:line="6" pos:column="62"/></index></name><operator pos:line="6" pos:column="62">)<pos:position pos:line="6" pos:column="63"/></operator></expr></init></decl>;<pos:position pos:line="6" pos:column="64"/></decl_stmt>

		<comment type="block" pos:line="8" pos:column="17">/* p-&gt;util is skip-worktree */</comment>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name><name pos:line="9" pos:column="21">p<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">util<pos:position pos:line="9" pos:column="28"/></name></name></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29">
			<block type="pseudo"><continue pos:line="10" pos:column="25">continue;<pos:position pos:line="10" pos:column="34"/></continue></block></then></if>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><call><name pos:line="12" pos:column="22">lstat<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name><name pos:line="12" pos:column="28">p<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">string<pos:position pos:line="12" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="39">&amp;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="40">st<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="44"/></condition><then pos:line="12" pos:column="44"> <block pos:line="12" pos:column="45">{
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><call><name pos:line="13" pos:column="29">add_to_cache<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><name><name pos:line="13" pos:column="42">p<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">-&gt;<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="45">string<pos:position pos:line="13" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="53">&amp;<pos:position pos:line="13" pos:column="58"/></operator><name pos:line="13" pos:column="54">st<pos:position pos:line="13" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="58">0<pos:position pos:line="13" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="61"/></condition><then pos:line="13" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="33">die<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><call><name pos:line="14" pos:column="37">_<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><literal type="string" pos:line="14" pos:column="39">"updating files failed"<pos:position pos:line="14" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="65"/></expr_stmt></block></then></if>
		}<pos:position pos:line="15" pos:column="18"/></block></then> <else pos:line="15" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">remove_file_from_cache<pos:position pos:line="16" pos:column="47"/></name><argument_list pos:line="16" pos:column="47">(<argument><expr><name><name pos:line="16" pos:column="48">p<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">-&gt;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="51">string<pos:position pos:line="16" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt></block></else></if>
	}<pos:position pos:line="17" pos:column="10"/></block></for>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3884.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">handle_builtin<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">argc<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">argv<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">cmd<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name><name pos:line="3" pos:column="27">argv<pos:position pos:line="3" pos:column="31"/></name><index pos:line="3" pos:column="31">[<expr><literal type="number" pos:line="3" pos:column="32">0<pos:position pos:line="3" pos:column="33"/></literal></expr>]<pos:position pos:line="3" pos:column="34"/></index></name></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><specifier pos:line="5" pos:column="16">const<pos:position pos:line="5" pos:column="21"/></specifier> <name pos:line="5" pos:column="22">char<pos:position pos:line="5" pos:column="26"/></name></type> <name><name pos:line="5" pos:column="27">ext<pos:position pos:line="5" pos:column="30"/></name><index pos:line="5" pos:column="30">[]<pos:position pos:line="5" pos:column="32"/></index></name> <init pos:line="5" pos:column="33">= <expr><name pos:line="5" pos:column="35">STRIP_EXTENSION<pos:position pos:line="5" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">cmd_struct<pos:position pos:line="6" pos:column="26"/></name></name> <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier></type><name pos:line="6" pos:column="28">builtin<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><sizeof pos:line="8" pos:column="13">sizeof<argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">ext<pos:position pos:line="8" pos:column="23"/></name></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></sizeof> <operator pos:line="8" pos:column="25">&gt;<pos:position pos:line="8" pos:column="29"/></operator> <literal type="number" pos:line="8" pos:column="27">1<pos:position pos:line="8" pos:column="28"/></literal></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29"> <block pos:line="8" pos:column="30">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">i<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <call><name pos:line="9" pos:column="21">strlen<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name><name pos:line="9" pos:column="28">argv<pos:position pos:line="9" pos:column="32"/></name><index pos:line="9" pos:column="32">[<expr><literal type="number" pos:line="9" pos:column="33">0<pos:position pos:line="9" pos:column="34"/></literal></expr>]<pos:position pos:line="9" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call> <operator pos:line="9" pos:column="37">-<pos:position pos:line="9" pos:column="38"/></operator> <call><name pos:line="9" pos:column="39">strlen<pos:position pos:line="9" pos:column="45"/></name><argument_list pos:line="9" pos:column="45">(<argument><expr><name pos:line="9" pos:column="46">ext<pos:position pos:line="9" pos:column="49"/></name></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="51"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">i<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">&gt;<pos:position pos:line="10" pos:column="27"/></operator> <literal type="number" pos:line="10" pos:column="25">0<pos:position pos:line="10" pos:column="26"/></literal> <operator pos:line="10" pos:column="27">&amp;&amp;<pos:position pos:line="10" pos:column="37"/></operator> <operator pos:line="10" pos:column="30">!<pos:position pos:line="10" pos:column="31"/></operator><call><name pos:line="10" pos:column="31">strcmp<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name><name pos:line="10" pos:column="38">argv<pos:position pos:line="10" pos:column="42"/></name><index pos:line="10" pos:column="42">[<expr><literal type="number" pos:line="10" pos:column="43">0<pos:position pos:line="10" pos:column="44"/></literal></expr>]<pos:position pos:line="10" pos:column="45"/></index></name> <operator pos:line="10" pos:column="46">+<pos:position pos:line="10" pos:column="47"/></operator> <name pos:line="10" pos:column="48">i<pos:position pos:line="10" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="51">ext<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="56"/></condition><then pos:line="10" pos:column="56"> <block pos:line="10" pos:column="57">{
			<decl_stmt><decl><type><name pos:line="11" pos:column="25">char<pos:position pos:line="11" pos:column="29"/></name> <modifier pos:line="11" pos:column="30">*<pos:position pos:line="11" pos:column="31"/></modifier></type><name pos:line="11" pos:column="31">argv0<pos:position pos:line="11" pos:column="36"/></name> <init pos:line="11" pos:column="37">= <expr><call><name pos:line="11" pos:column="39">xstrdup<pos:position pos:line="11" pos:column="46"/></name><argument_list pos:line="11" pos:column="46">(<argument><expr><name><name pos:line="11" pos:column="47">argv<pos:position pos:line="11" pos:column="51"/></name><index pos:line="11" pos:column="51">[<expr><literal type="number" pos:line="11" pos:column="52">0<pos:position pos:line="11" pos:column="53"/></literal></expr>]<pos:position pos:line="11" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="56"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="12" pos:column="25">argv<pos:position pos:line="12" pos:column="29"/></name><index pos:line="12" pos:column="29">[<expr><literal type="number" pos:line="12" pos:column="30">0<pos:position pos:line="12" pos:column="31"/></literal></expr>]<pos:position pos:line="12" pos:column="32"/></index></name> <operator pos:line="12" pos:column="33">=<pos:position pos:line="12" pos:column="34"/></operator> <name pos:line="12" pos:column="35">cmd<pos:position pos:line="12" pos:column="38"/></name> <operator pos:line="12" pos:column="39">=<pos:position pos:line="12" pos:column="40"/></operator> <name pos:line="12" pos:column="41">argv0<pos:position pos:line="12" pos:column="46"/></name></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="13" pos:column="25">argv0<pos:position pos:line="13" pos:column="30"/></name><index pos:line="13" pos:column="30">[<expr><name pos:line="13" pos:column="31">i<pos:position pos:line="13" pos:column="32"/></name></expr>]<pos:position pos:line="13" pos:column="33"/></index></name> <operator pos:line="13" pos:column="34">=<pos:position pos:line="13" pos:column="35"/></operator> <literal type="char" pos:line="13" pos:column="36">'\0'<pos:position pos:line="13" pos:column="40"/></literal></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="17" pos:column="9">/* Turn "git cmd --help" into "git help cmd" */</comment>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">argc<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">&gt;<pos:position pos:line="18" pos:column="22"/></operator> <literal type="number" pos:line="18" pos:column="20">1<pos:position pos:line="18" pos:column="21"/></literal> <operator pos:line="18" pos:column="22">&amp;&amp;<pos:position pos:line="18" pos:column="32"/></operator> <operator pos:line="18" pos:column="25">!<pos:position pos:line="18" pos:column="26"/></operator><call><name pos:line="18" pos:column="26">strcmp<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name><name pos:line="18" pos:column="33">argv<pos:position pos:line="18" pos:column="37"/></name><index pos:line="18" pos:column="37">[<expr><literal type="number" pos:line="18" pos:column="38">1<pos:position pos:line="18" pos:column="39"/></literal></expr>]<pos:position pos:line="18" pos:column="40"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="42">"--help"<pos:position pos:line="18" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="52"/></condition><then pos:line="18" pos:column="52"> <block pos:line="18" pos:column="53">{
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">argv<pos:position pos:line="19" pos:column="21"/></name><index pos:line="19" pos:column="21">[<expr><literal type="number" pos:line="19" pos:column="22">1<pos:position pos:line="19" pos:column="23"/></literal></expr>]<pos:position pos:line="19" pos:column="24"/></index></name> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <name><name pos:line="19" pos:column="27">argv<pos:position pos:line="19" pos:column="31"/></name><index pos:line="19" pos:column="31">[<expr><literal type="number" pos:line="19" pos:column="32">0<pos:position pos:line="19" pos:column="33"/></literal></expr>]<pos:position pos:line="19" pos:column="34"/></index></name></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="20" pos:column="17">argv<pos:position pos:line="20" pos:column="21"/></name><index pos:line="20" pos:column="21">[<expr><literal type="number" pos:line="20" pos:column="22">0<pos:position pos:line="20" pos:column="23"/></literal></expr>]<pos:position pos:line="20" pos:column="24"/></index></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">cmd<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">=<pos:position pos:line="20" pos:column="32"/></operator> <literal type="string" pos:line="20" pos:column="33">"help"<pos:position pos:line="20" pos:column="39"/></literal></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="23" pos:column="9">builtin<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <call><name pos:line="23" pos:column="19">get_builtin<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">cmd<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">builtin<pos:position pos:line="24" pos:column="20"/></name></expr>)<pos:position pos:line="24" pos:column="21"/></condition><then pos:line="24" pos:column="21"> <block pos:line="24" pos:column="22">{
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">saved_environment<pos:position pos:line="25" pos:column="38"/></name> <operator pos:line="25" pos:column="39">&amp;&amp;<pos:position pos:line="25" pos:column="49"/></operator> <operator pos:line="25" pos:column="42">(<pos:position pos:line="25" pos:column="43"/></operator><name><name pos:line="25" pos:column="43">builtin<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">-&gt;<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="52">option<pos:position pos:line="25" pos:column="58"/></name></name> <operator pos:line="25" pos:column="59">&amp;<pos:position pos:line="25" pos:column="64"/></operator> <name pos:line="25" pos:column="61">NO_SETUP<pos:position pos:line="25" pos:column="69"/></name><operator pos:line="25" pos:column="69">)<pos:position pos:line="25" pos:column="70"/></operator></expr>)<pos:position pos:line="25" pos:column="71"/></condition><then pos:line="25" pos:column="71">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="25">restore_env<pos:position pos:line="26" pos:column="36"/></name><argument_list pos:line="26" pos:column="36">()<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt></block></then>
		<else pos:line="27" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">exit<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><call><name pos:line="28" pos:column="30">run_builtin<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">builtin<pos:position pos:line="28" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="51">argc<pos:position pos:line="28" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="57">argv<pos:position pos:line="28" pos:column="61"/></name></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt></block></else></if>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

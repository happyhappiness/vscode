<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_3005.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">input_error<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">line_buffer<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">file<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><call><name pos:line="3" pos:column="14">buffer_ferror<pos:position pos:line="3" pos:column="27"/></name><argument_list pos:line="3" pos:column="27">(<argument><expr><name pos:line="3" pos:column="28">file<pos:position pos:line="3" pos:column="32"/></name></expr></argument>)<pos:position pos:line="3" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="34"/></condition><then pos:line="3" pos:column="34">
		<block type="pseudo"><return pos:line="4" pos:column="17">return <expr><call><name pos:line="4" pos:column="24">error<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">(<argument><expr><literal type="string" pos:line="4" pos:column="30">"delta preimage ends early"<pos:position pos:line="4" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="59"/></return></block></then></if>
	<return pos:line="5" pos:column="9">return <expr><call><name pos:line="5" pos:column="16">error<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><literal type="string" pos:line="5" pos:column="22">"cannot read delta preimage: %s"<pos:position pos:line="5" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="56">strerror<pos:position pos:line="5" pos:column="64"/></name><argument_list pos:line="5" pos:column="64">(<argument><expr><name pos:line="5" pos:column="65">errno<pos:position pos:line="5" pos:column="70"/></name></expr></argument>)<pos:position pos:line="5" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="73"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

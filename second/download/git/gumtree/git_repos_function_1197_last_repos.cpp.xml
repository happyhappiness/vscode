<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1197_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">capture_command<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">child_process<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">cmd<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
				  <parameter><decl><type><name><name pos:line="2" pos:column="35">struct<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">strbuf<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">out<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="3" pos:column="35">size_t<pos:position pos:line="3" pos:column="41"/></name></type> <name pos:line="3" pos:column="42">hint<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="47"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<return pos:line="5" pos:column="9">return <expr><call><name pos:line="5" pos:column="16">pipe_command<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name pos:line="5" pos:column="29">cmd<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="34">NULL<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="40">0<pos:position pos:line="5" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="43">out<pos:position pos:line="5" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="48">hint<pos:position pos:line="5" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="54">NULL<pos:position pos:line="5" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="60">0<pos:position pos:line="5" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="63"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6465_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">entry<pos:position pos:line="1" pos:column="20"/></name></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">insert_new<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">unsigned<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">sha1<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">pos<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	struct <expr_stmt><expr><name pos:line="3" pos:column="16">entry<pos:position pos:line="3" pos:column="21"/></name> <operator pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></operator><operator pos:line="3" pos:column="23">new<pos:position pos:line="3" pos:column="26"/></operator> <operator pos:line="3" pos:column="27">=<pos:position pos:line="3" pos:column="28"/></operator> <call><name pos:line="3" pos:column="29">xcalloc<pos:position pos:line="3" pos:column="36"/></name><argument_list pos:line="3" pos:column="36">(<argument><expr><literal type="number" pos:line="3" pos:column="37">1<pos:position pos:line="3" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="40">sizeof<argument_list pos:line="3" pos:column="46">(<argument><expr pos:line="3" pos:column="47">struct <name pos:line="3" pos:column="54">entry<pos:position pos:line="3" pos:column="59"/></name></expr></argument>)<pos:position pos:line="3" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">hashcpy<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><operator pos:line="4" pos:column="17">new<pos:position pos:line="4" pos:column="20"/></operator><operator pos:line="4" pos:column="20">-&gt;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="22">old_sha1<pos:position pos:line="4" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="32">sha1<pos:position pos:line="4" pos:column="36"/></name></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">memmove<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">convert<pos:position pos:line="5" pos:column="24"/></name> <operator pos:line="5" pos:column="25">+<pos:position pos:line="5" pos:column="26"/></operator> <name pos:line="5" pos:column="27">pos<pos:position pos:line="5" pos:column="30"/></name> <operator pos:line="5" pos:column="31">+<pos:position pos:line="5" pos:column="32"/></operator> <literal type="number" pos:line="5" pos:column="33">1<pos:position pos:line="5" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="36">convert<pos:position pos:line="5" pos:column="43"/></name> <operator pos:line="5" pos:column="44">+<pos:position pos:line="5" pos:column="45"/></operator> <name pos:line="5" pos:column="46">pos<pos:position pos:line="5" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="51">(<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="52">nr_convert<pos:position pos:line="5" pos:column="62"/></name> <operator pos:line="5" pos:column="63">-<pos:position pos:line="5" pos:column="64"/></operator> <name pos:line="5" pos:column="65">pos<pos:position pos:line="5" pos:column="68"/></name><operator pos:line="5" pos:column="68">)<pos:position pos:line="5" pos:column="69"/></operator> <operator pos:line="5" pos:column="70">*<pos:position pos:line="5" pos:column="71"/></operator> <sizeof pos:line="5" pos:column="72">sizeof<argument_list pos:line="5" pos:column="78">(<argument><expr pos:line="5" pos:column="79">struct <name pos:line="5" pos:column="86">entry<pos:position pos:line="5" pos:column="91"/></name> <operator pos:line="5" pos:column="92">*<pos:position pos:line="5" pos:column="93"/></operator></expr></argument>)<pos:position pos:line="5" pos:column="94"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="96"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="6" pos:column="9">convert<pos:position pos:line="6" pos:column="16"/></name><index pos:line="6" pos:column="16">[<expr><name pos:line="6" pos:column="17">pos<pos:position pos:line="6" pos:column="20"/></name></expr>]<pos:position pos:line="6" pos:column="21"/></index></name> <operator pos:line="6" pos:column="22">=<pos:position pos:line="6" pos:column="23"/></operator> <operator pos:line="6" pos:column="24">new<pos:position pos:line="6" pos:column="27"/></operator></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">nr_convert<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">++<pos:position pos:line="7" pos:column="21"/></operator></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">nr_convert<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">==<pos:position pos:line="8" pos:column="26"/></operator> <name pos:line="8" pos:column="27">MAXOBJECTS<pos:position pos:line="8" pos:column="37"/></name></expr>)<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">die<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><literal type="string" pos:line="9" pos:column="21">"you're kidding me - hit maximum object limit"<pos:position pos:line="9" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="69"/></expr_stmt></block></then></if>
	<return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">new<pos:position pos:line="10" pos:column="19"/></operator></expr>;<pos:position pos:line="10" pos:column="20"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

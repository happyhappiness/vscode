<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3051_git-2.4.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">start_fetch_packed<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">transfer_request<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">request<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">packed_git<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">target<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">transfer_request<pos:position pos:line="5" pos:column="32"/></name></name> <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></type><name pos:line="5" pos:column="34">check_request<pos:position pos:line="5" pos:column="47"/></name> <init pos:line="5" pos:column="48">= <expr><name pos:line="5" pos:column="50">request_queue_head<pos:position pos:line="5" pos:column="68"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="69"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">http_pack_request<pos:position pos:line="6" pos:column="33"/></name></name> <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier></type><name pos:line="6" pos:column="35">preq<pos:position pos:line="6" pos:column="39"/></name></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">target<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">find_sha1_pack<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name><name pos:line="8" pos:column="33">request<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">obj<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">-&gt;<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="47">sha1<pos:position pos:line="8" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="53">repo<pos:position pos:line="8" pos:column="57"/></name><operator pos:line="8" pos:column="57">-&gt;<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="59">packs<pos:position pos:line="8" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="66"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">target<pos:position pos:line="9" pos:column="20"/></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block pos:line="9" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">fprintf<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">stderr<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="33">"Unable to fetch %s, will not be able to update server info refs\n"<pos:position pos:line="10" pos:column="100"/></literal></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="102">sha1_to_hex<pos:position pos:line="10" pos:column="113"/></name><argument_list pos:line="10" pos:column="113">(<argument><expr><name><name pos:line="10" pos:column="114">request<pos:position pos:line="10" pos:column="121"/></name><operator pos:line="10" pos:column="121">-&gt;<pos:position pos:line="10" pos:column="126"/></operator><name pos:line="10" pos:column="123">obj<pos:position pos:line="10" pos:column="126"/></name><operator pos:line="10" pos:column="126">-&gt;<pos:position pos:line="10" pos:column="131"/></operator><name pos:line="10" pos:column="128">sha1<pos:position pos:line="10" pos:column="132"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="133"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="134"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="135"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="11" pos:column="17">repo<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">can_update_info_refs<pos:position pos:line="11" pos:column="43"/></name></name> <operator pos:line="11" pos:column="44">=<pos:position pos:line="11" pos:column="45"/></operator> <literal type="number" pos:line="11" pos:column="46">0<pos:position pos:line="11" pos:column="47"/></literal></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">release_request<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">request<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
		<return pos:line="13" pos:column="17">return;<pos:position pos:line="13" pos:column="24"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">fprintf<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">stderr<pos:position pos:line="16" pos:column="23"/></name></expr></argument>,	<argument><expr><literal type="string" pos:line="16" pos:column="25">"Fetching pack %s\n"<pos:position pos:line="16" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="47">sha1_to_hex<pos:position pos:line="16" pos:column="58"/></name><argument_list pos:line="16" pos:column="58">(<argument><expr><name><name pos:line="16" pos:column="59">target<pos:position pos:line="16" pos:column="65"/></name><operator pos:line="16" pos:column="65">-&gt;<pos:position pos:line="16" pos:column="70"/></operator><name pos:line="16" pos:column="67">sha1<pos:position pos:line="16" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">fprintf<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">stderr<pos:position pos:line="17" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="25">" which contains %s\n"<pos:position pos:line="17" pos:column="47"/></literal></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="49">sha1_to_hex<pos:position pos:line="17" pos:column="60"/></name><argument_list pos:line="17" pos:column="60">(<argument><expr><name><name pos:line="17" pos:column="61">request<pos:position pos:line="17" pos:column="68"/></name><operator pos:line="17" pos:column="68">-&gt;<pos:position pos:line="17" pos:column="73"/></operator><name pos:line="17" pos:column="70">obj<pos:position pos:line="17" pos:column="73"/></name><operator pos:line="17" pos:column="73">-&gt;<pos:position pos:line="17" pos:column="78"/></operator><name pos:line="17" pos:column="75">sha1<pos:position pos:line="17" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="82"/></expr_stmt>

	<expr_stmt><expr><name pos:line="19" pos:column="9">preq<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <call><name pos:line="19" pos:column="16">new_http_pack_request<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">target<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="46">repo<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">-&gt;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="52">url<pos:position pos:line="19" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">preq<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">==<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">NULL<pos:position pos:line="20" pos:column="25"/></name></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26"> <block pos:line="20" pos:column="27">{
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">repo<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">can_update_info_refs<pos:position pos:line="21" pos:column="43"/></name></name> <operator pos:line="21" pos:column="44">=<pos:position pos:line="21" pos:column="45"/></operator> <literal type="number" pos:line="21" pos:column="46">0<pos:position pos:line="21" pos:column="47"/></literal></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>
		<return pos:line="22" pos:column="17">return;<pos:position pos:line="22" pos:column="24"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">preq<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">lst<pos:position pos:line="24" pos:column="18"/></name></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <operator pos:line="24" pos:column="21">&amp;<pos:position pos:line="24" pos:column="26"/></operator><name><name pos:line="24" pos:column="22">repo<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">packs<pos:position pos:line="24" pos:column="33"/></name></name></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>

	<comment type="block" pos:line="26" pos:column="9">/* Make sure there isn't another open request for this pack */</comment>
	<while pos:line="27" pos:column="9">while <condition pos:line="27" pos:column="15">(<expr><name pos:line="27" pos:column="16">check_request<pos:position pos:line="27" pos:column="29"/></name></expr>)<pos:position pos:line="27" pos:column="30"/></condition> <block pos:line="27" pos:column="31">{
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name><name pos:line="28" pos:column="21">check_request<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">-&gt;<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="36">state<pos:position pos:line="28" pos:column="41"/></name></name> <operator pos:line="28" pos:column="42">==<pos:position pos:line="28" pos:column="44"/></operator> <name pos:line="28" pos:column="45">RUN_FETCH_PACKED<pos:position pos:line="28" pos:column="61"/></name> <operator pos:line="28" pos:column="62">&amp;&amp;<pos:position pos:line="28" pos:column="72"/></operator>
		    <operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><call><name pos:line="29" pos:column="22">strcmp<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name><name pos:line="29" pos:column="29">check_request<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">url<pos:position pos:line="29" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="49">preq<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">-&gt;<pos:position pos:line="29" pos:column="58"/></operator><name pos:line="29" pos:column="55">url<pos:position pos:line="29" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="60"/></condition><then pos:line="29" pos:column="60"> <block pos:line="29" pos:column="61">{
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">release_http_pack_request<pos:position pos:line="30" pos:column="50"/></name><argument_list pos:line="30" pos:column="50">(<argument><expr><name pos:line="30" pos:column="51">preq<pos:position pos:line="30" pos:column="55"/></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">release_request<pos:position pos:line="31" pos:column="40"/></name><argument_list pos:line="31" pos:column="40">(<argument><expr><name pos:line="31" pos:column="41">request<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt>
			<return pos:line="32" pos:column="25">return;<pos:position pos:line="32" pos:column="32"/></return>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="34" pos:column="17">check_request<pos:position pos:line="34" pos:column="30"/></name> <operator pos:line="34" pos:column="31">=<pos:position pos:line="34" pos:column="32"/></operator> <name><name pos:line="34" pos:column="33">check_request<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">-&gt;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="48">next<pos:position pos:line="34" pos:column="52"/></name></name></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></while>

	<expr_stmt><expr><name><name pos:line="37" pos:column="9">preq<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">-&gt;<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="15">slot<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">-&gt;<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="21">callback_func<pos:position pos:line="37" pos:column="34"/></name></name> <operator pos:line="37" pos:column="35">=<pos:position pos:line="37" pos:column="36"/></operator> <name pos:line="37" pos:column="37">process_response<pos:position pos:line="37" pos:column="53"/></name></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="38" pos:column="9">preq<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">slot<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">-&gt;<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="21">callback_data<pos:position pos:line="38" pos:column="34"/></name></name> <operator pos:line="38" pos:column="35">=<pos:position pos:line="38" pos:column="36"/></operator> <name pos:line="38" pos:column="37">request<pos:position pos:line="38" pos:column="44"/></name></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="39" pos:column="9">request<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">-&gt;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="18">slot<pos:position pos:line="39" pos:column="22"/></name></name> <operator pos:line="39" pos:column="23">=<pos:position pos:line="39" pos:column="24"/></operator> <name><name pos:line="39" pos:column="25">preq<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">-&gt;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="31">slot<pos:position pos:line="39" pos:column="35"/></name></name></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="40" pos:column="9">request<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">userData<pos:position pos:line="40" pos:column="26"/></name></name> <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <name pos:line="40" pos:column="29">preq<pos:position pos:line="40" pos:column="33"/></name></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>

	<comment type="block" pos:line="42" pos:column="9">/* Try to get the request started, abort the request on error */</comment>
	<expr_stmt><expr><name><name pos:line="43" pos:column="9">request<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">-&gt;<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="18">state<pos:position pos:line="43" pos:column="23"/></name></name> <operator pos:line="43" pos:column="24">=<pos:position pos:line="43" pos:column="25"/></operator> <name pos:line="43" pos:column="26">RUN_FETCH_PACKED<pos:position pos:line="43" pos:column="42"/></name></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><call><name pos:line="44" pos:column="14">start_active_slot<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><name><name pos:line="44" pos:column="32">preq<pos:position pos:line="44" pos:column="36"/></name><operator pos:line="44" pos:column="36">-&gt;<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="38">slot<pos:position pos:line="44" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="44"/></condition><then pos:line="44" pos:column="44"> <block pos:line="44" pos:column="45">{
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">fprintf<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">stderr<pos:position pos:line="45" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="33">"Unable to start GET request\n"<pos:position pos:line="45" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">release_http_pack_request<pos:position pos:line="46" pos:column="42"/></name><argument_list pos:line="46" pos:column="42">(<argument><expr><name pos:line="46" pos:column="43">preq<pos:position pos:line="46" pos:column="47"/></name></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="47" pos:column="17">repo<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">-&gt;<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="23">can_update_info_refs<pos:position pos:line="47" pos:column="43"/></name></name> <operator pos:line="47" pos:column="44">=<pos:position pos:line="47" pos:column="45"/></operator> <literal type="number" pos:line="47" pos:column="46">0<pos:position pos:line="47" pos:column="47"/></literal></expr>;<pos:position pos:line="47" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">release_request<pos:position pos:line="48" pos:column="32"/></name><argument_list pos:line="48" pos:column="32">(<argument><expr><name pos:line="48" pos:column="33">request<pos:position pos:line="48" pos:column="40"/></name></expr></argument>)<pos:position pos:line="48" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

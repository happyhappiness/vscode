<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1866.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">batch_one_object<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">obj_name<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">batch_options<pos:position pos:line="1" pos:column="71"/></name></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">opt<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
			    <parameter><decl><type><name><name pos:line="2" pos:column="29">struct<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">expand_data<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">data<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object_context<pos:position pos:line="5" pos:column="30"/></name></name></type> <name pos:line="5" pos:column="31">ctx<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">flags<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><ternary><condition><expr><name><name pos:line="6" pos:column="21">opt<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">follow_symlinks<pos:position pos:line="6" pos:column="41"/></name></name></expr> ?<pos:position pos:line="6" pos:column="43"/></condition><then pos:line="6" pos:column="43"> <expr><name pos:line="6" pos:column="44">GET_SHA1_FOLLOW_SYMLINKS<pos:position pos:line="6" pos:column="68"/></name></expr> <pos:position pos:line="6" pos:column="69"/></then><else pos:line="6" pos:column="69">: <expr><literal type="number" pos:line="6" pos:column="71">0<pos:position pos:line="6" pos:column="72"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="73"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">enum<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">follow_symlinks_result<pos:position pos:line="7" pos:column="36"/></name></name></type> <name pos:line="7" pos:column="37">result<pos:position pos:line="7" pos:column="43"/></name></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">obj_name<pos:position pos:line="9" pos:column="22"/></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23">
	   <block type="pseudo"><return pos:line="10" pos:column="12">return <expr><literal type="number" pos:line="10" pos:column="19">1<pos:position pos:line="10" pos:column="20"/></literal></expr>;<pos:position pos:line="10" pos:column="21"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">result<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">get_sha1_with_context<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">obj_name<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">flags<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="57">data<pos:position pos:line="12" pos:column="61"/></name><operator pos:line="12" pos:column="61">-&gt;<pos:position pos:line="12" pos:column="66"/></operator><name pos:line="12" pos:column="63">sha1<pos:position pos:line="12" pos:column="67"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="69">&amp;<pos:position pos:line="12" pos:column="74"/></operator><name pos:line="12" pos:column="70">ctx<pos:position pos:line="12" pos:column="73"/></name></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="75"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">result<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">!=<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">FOUND<pos:position pos:line="13" pos:column="28"/></name></expr>)<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29"> <block pos:line="13" pos:column="30">{
		<switch pos:line="14" pos:column="17">switch <condition pos:line="14" pos:column="24">(<expr><name pos:line="14" pos:column="25">result<pos:position pos:line="14" pos:column="31"/></name></expr>)<pos:position pos:line="14" pos:column="32"/></condition> <block pos:line="14" pos:column="33">{
		<case pos:line="15" pos:column="17">case <expr><name pos:line="15" pos:column="22">MISSING_OBJECT<pos:position pos:line="15" pos:column="36"/></name></expr>:<pos:position pos:line="15" pos:column="37"/></case>
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">printf<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><literal type="string" pos:line="16" pos:column="32">"%s missing\n"<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">obj_name<pos:position pos:line="16" pos:column="56"/></name></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="58"/></expr_stmt>
			<break pos:line="17" pos:column="25">break;<pos:position pos:line="17" pos:column="31"/></break>
		<case pos:line="18" pos:column="17">case <expr><name pos:line="18" pos:column="22">DANGLING_SYMLINK<pos:position pos:line="18" pos:column="38"/></name></expr>:<pos:position pos:line="18" pos:column="39"/></case>
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">printf<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><literal type="string" pos:line="19" pos:column="32">"dangling %"<pos:position pos:line="19" pos:column="44"/></literal><name pos:line="19" pos:column="44">PRIuMAX<pos:position pos:line="19" pos:column="51"/></name><literal type="string" pos:line="19" pos:column="51">"\n%s\n"<pos:position pos:line="19" pos:column="59"/></literal></expr></argument>,
			       <argument><expr><operator pos:line="20" pos:column="32">(<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="33">uintmax_t<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">)<pos:position pos:line="20" pos:column="43"/></operator><call><name pos:line="20" pos:column="43">strlen<pos:position pos:line="20" pos:column="49"/></name><argument_list pos:line="20" pos:column="49">(<argument><expr><name pos:line="20" pos:column="50">obj_name<pos:position pos:line="20" pos:column="58"/></name></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="20" pos:column="61">obj_name<pos:position pos:line="20" pos:column="69"/></name></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="71"/></expr_stmt>
			<break pos:line="21" pos:column="25">break;<pos:position pos:line="21" pos:column="31"/></break>
		<case pos:line="22" pos:column="17">case <expr><name pos:line="22" pos:column="22">SYMLINK_LOOP<pos:position pos:line="22" pos:column="34"/></name></expr>:<pos:position pos:line="22" pos:column="35"/></case>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">printf<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><literal type="string" pos:line="23" pos:column="32">"loop %"<pos:position pos:line="23" pos:column="40"/></literal><name pos:line="23" pos:column="40">PRIuMAX<pos:position pos:line="23" pos:column="47"/></name><literal type="string" pos:line="23" pos:column="47">"\n%s\n"<pos:position pos:line="23" pos:column="55"/></literal></expr></argument>,
			       <argument><expr><operator pos:line="24" pos:column="32">(<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">uintmax_t<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">)<pos:position pos:line="24" pos:column="43"/></operator><call><name pos:line="24" pos:column="43">strlen<pos:position pos:line="24" pos:column="49"/></name><argument_list pos:line="24" pos:column="49">(<argument><expr><name pos:line="24" pos:column="50">obj_name<pos:position pos:line="24" pos:column="58"/></name></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="61">obj_name<pos:position pos:line="24" pos:column="69"/></name></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="71"/></expr_stmt>
			<break pos:line="25" pos:column="25">break;<pos:position pos:line="25" pos:column="31"/></break>
		<case pos:line="26" pos:column="17">case <expr><name pos:line="26" pos:column="22">NOT_DIR<pos:position pos:line="26" pos:column="29"/></name></expr>:<pos:position pos:line="26" pos:column="30"/></case>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">printf<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><literal type="string" pos:line="27" pos:column="32">"notdir %"<pos:position pos:line="27" pos:column="42"/></literal><name pos:line="27" pos:column="42">PRIuMAX<pos:position pos:line="27" pos:column="49"/></name><literal type="string" pos:line="27" pos:column="49">"\n%s\n"<pos:position pos:line="27" pos:column="57"/></literal></expr></argument>,
			       <argument><expr><operator pos:line="28" pos:column="32">(<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="33">uintmax_t<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">)<pos:position pos:line="28" pos:column="43"/></operator><call><name pos:line="28" pos:column="43">strlen<pos:position pos:line="28" pos:column="49"/></name><argument_list pos:line="28" pos:column="49">(<argument><expr><name pos:line="28" pos:column="50">obj_name<pos:position pos:line="28" pos:column="58"/></name></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="28" pos:column="61">obj_name<pos:position pos:line="28" pos:column="69"/></name></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="71"/></expr_stmt>
			<break pos:line="29" pos:column="25">break;<pos:position pos:line="29" pos:column="31"/></break>
		<default pos:line="30" pos:column="17">default:<pos:position pos:line="30" pos:column="25"/></default>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">die<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><literal type="string" pos:line="31" pos:column="29">"BUG: unknown get_sha1_with_context result %d\n"<pos:position pos:line="31" pos:column="77"/></literal></expr></argument>,
			       <argument><expr><name pos:line="32" pos:column="32">result<pos:position pos:line="32" pos:column="38"/></name></expr></argument>)<pos:position pos:line="32" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
			<break pos:line="33" pos:column="25">break;<pos:position pos:line="33" pos:column="31"/></break>
		}<pos:position pos:line="34" pos:column="18"/></block></switch>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">fflush<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">stdout<pos:position pos:line="35" pos:column="30"/></name></expr></argument>)<pos:position pos:line="35" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
		<return pos:line="36" pos:column="17">return <expr><literal type="number" pos:line="36" pos:column="24">0<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></return>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name><name pos:line="39" pos:column="13">ctx<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">.<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">mode<pos:position pos:line="39" pos:column="21"/></name></name> <operator pos:line="39" pos:column="22">==<pos:position pos:line="39" pos:column="24"/></operator> <literal type="number" pos:line="39" pos:column="25">0<pos:position pos:line="39" pos:column="26"/></literal></expr>)<pos:position pos:line="39" pos:column="27"/></condition><then pos:line="39" pos:column="27"> <block pos:line="39" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">printf<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><literal type="string" pos:line="40" pos:column="24">"symlink %"<pos:position pos:line="40" pos:column="35"/></literal><name pos:line="40" pos:column="35">PRIuMAX<pos:position pos:line="40" pos:column="42"/></name><literal type="string" pos:line="40" pos:column="42">"\n%s\n"<pos:position pos:line="40" pos:column="50"/></literal></expr></argument>,
		       <argument><expr><operator pos:line="41" pos:column="24">(<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">uintmax_t<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">)<pos:position pos:line="41" pos:column="35"/></operator><name><name pos:line="41" pos:column="35">ctx<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">.<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="39">symlink_path<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">.<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="52">len<pos:position pos:line="41" pos:column="55"/></name></name></expr></argument>,
		       <argument><expr><name><name pos:line="42" pos:column="24">ctx<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">.<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="28">symlink_path<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">.<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="41">buf<pos:position pos:line="42" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">fflush<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name pos:line="43" pos:column="24">stdout<pos:position pos:line="43" pos:column="30"/></name></expr></argument>)<pos:position pos:line="43" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="32"/></expr_stmt>
		<return pos:line="44" pos:column="17">return <expr><literal type="number" pos:line="44" pos:column="24">0<pos:position pos:line="44" pos:column="25"/></literal></expr>;<pos:position pos:line="44" pos:column="26"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><call><name pos:line="47" pos:column="13">sha1_object_info_extended<pos:position pos:line="47" pos:column="38"/></name><argument_list pos:line="47" pos:column="38">(<argument><expr><name><name pos:line="47" pos:column="39">data<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">-&gt;<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="45">sha1<pos:position pos:line="47" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="51">&amp;<pos:position pos:line="47" pos:column="56"/></operator><name><name pos:line="47" pos:column="52">data<pos:position pos:line="47" pos:column="56"/></name><operator pos:line="47" pos:column="56">-&gt;<pos:position pos:line="47" pos:column="61"/></operator><name pos:line="47" pos:column="58">info<pos:position pos:line="47" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="64">LOOKUP_REPLACE_OBJECT<pos:position pos:line="47" pos:column="85"/></name></expr></argument>)<pos:position pos:line="47" pos:column="86"/></argument_list></call> <operator pos:line="47" pos:column="87">&lt;<pos:position pos:line="47" pos:column="91"/></operator> <literal type="number" pos:line="47" pos:column="89">0<pos:position pos:line="47" pos:column="90"/></literal></expr>)<pos:position pos:line="47" pos:column="91"/></condition><then pos:line="47" pos:column="91"> <block pos:line="47" pos:column="92">{
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">printf<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><literal type="string" pos:line="48" pos:column="24">"%s missing\n"<pos:position pos:line="48" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="40">obj_name<pos:position pos:line="48" pos:column="48"/></name></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">fflush<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><name pos:line="49" pos:column="24">stdout<pos:position pos:line="49" pos:column="30"/></name></expr></argument>)<pos:position pos:line="49" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt>
		<return pos:line="50" pos:column="17">return <expr><literal type="number" pos:line="50" pos:column="24">0<pos:position pos:line="50" pos:column="25"/></literal></expr>;<pos:position pos:line="50" pos:column="26"/></return>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="53" pos:column="9">strbuf_expand<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><operator pos:line="53" pos:column="23">&amp;<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="24">buf<pos:position pos:line="53" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="29">opt<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">-&gt;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="34">format<pos:position pos:line="53" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="42">expand_format<pos:position pos:line="53" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="57">data<pos:position pos:line="53" pos:column="61"/></name></expr></argument>)<pos:position pos:line="53" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">strbuf_addch<pos:position pos:line="54" pos:column="21"/></name><argument_list pos:line="54" pos:column="21">(<argument><expr><operator pos:line="54" pos:column="22">&amp;<pos:position pos:line="54" pos:column="27"/></operator><name pos:line="54" pos:column="23">buf<pos:position pos:line="54" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="54" pos:column="28">'\n'<pos:position pos:line="54" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">write_or_die<pos:position pos:line="55" pos:column="21"/></name><argument_list pos:line="55" pos:column="21">(<argument><expr><literal type="number" pos:line="55" pos:column="22">1<pos:position pos:line="55" pos:column="23"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="25">buf<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">.<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="29">buf<pos:position pos:line="55" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="34">buf<pos:position pos:line="55" pos:column="37"/></name><operator pos:line="55" pos:column="37">.<pos:position pos:line="55" pos:column="38"/></operator><name pos:line="55" pos:column="38">len<pos:position pos:line="55" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">strbuf_release<pos:position pos:line="56" pos:column="23"/></name><argument_list pos:line="56" pos:column="23">(<argument><expr><operator pos:line="56" pos:column="24">&amp;<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="25">buf<pos:position pos:line="56" pos:column="28"/></name></expr></argument>)<pos:position pos:line="56" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt>

	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">opt<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">-&gt;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="18">print_contents<pos:position pos:line="58" pos:column="32"/></name></name></expr>)<pos:position pos:line="58" pos:column="33"/></condition><then pos:line="58" pos:column="33"> <block pos:line="58" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">print_object_or_die<pos:position pos:line="59" pos:column="36"/></name><argument_list pos:line="59" pos:column="36">(<argument><expr><literal type="number" pos:line="59" pos:column="37">1<pos:position pos:line="59" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="40">data<pos:position pos:line="59" pos:column="44"/></name></expr></argument>)<pos:position pos:line="59" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">write_or_die<pos:position pos:line="60" pos:column="29"/></name><argument_list pos:line="60" pos:column="29">(<argument><expr><literal type="number" pos:line="60" pos:column="30">1<pos:position pos:line="60" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="33">"\n"<pos:position pos:line="60" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="39">1<pos:position pos:line="60" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="61" pos:column="10"/></block></then></if>
	<return pos:line="62" pos:column="9">return <expr><literal type="number" pos:line="62" pos:column="16">0<pos:position pos:line="62" pos:column="17"/></literal></expr>;<pos:position pos:line="62" pos:column="18"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

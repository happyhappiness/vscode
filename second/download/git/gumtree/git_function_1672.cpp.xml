<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1672.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fast_forward_to<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">unsigned<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">to<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">unsigned<pos:position pos:line="1" pos:column="67"/></name> <name pos:line="1" pos:column="68">char<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">from<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">unborn<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="37">struct<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">replay_opts<pos:position pos:line="2" pos:column="55"/></name></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">opts<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ref_lock<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">ref_lock<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">sb<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">STRBUF_INIT<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ret<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">read_cache<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">()<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">checkout_fast_forward<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">from<pos:position pos:line="9" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="41">to<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="45">1<pos:position pos:line="9" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="48"/></condition><then pos:line="9" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">exit<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><literal type="number" pos:line="10" pos:column="22">128<pos:position pos:line="10" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt></block></then></if> <comment type="block" pos:line="10" pos:column="28">/* the callee should have complained already */</comment>
	<expr_stmt><expr><name pos:line="11" pos:column="9">ref_lock<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <call><name pos:line="11" pos:column="20">lock_any_ref_for_update<pos:position pos:line="11" pos:column="43"/></name><argument_list pos:line="11" pos:column="43">(<argument><expr><literal type="string" pos:line="11" pos:column="44">"HEAD"<pos:position pos:line="11" pos:column="50"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="11" pos:column="52">unborn<pos:position pos:line="11" pos:column="58"/></name></expr> ?<pos:position pos:line="11" pos:column="60"/></condition><then pos:line="11" pos:column="60"> <expr><name pos:line="11" pos:column="61">null_sha1<pos:position pos:line="11" pos:column="70"/></name></expr> <pos:position pos:line="11" pos:column="71"/></then><else pos:line="11" pos:column="71">: <expr><name pos:line="11" pos:column="73">from<pos:position pos:line="11" pos:column="77"/></name></expr></else></ternary></expr></argument>,
					   <argument><expr><literal type="number" pos:line="12" pos:column="44">0<pos:position pos:line="12" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="47">NULL<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">ref_lock<pos:position pos:line="13" pos:column="22"/></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><call><name pos:line="14" pos:column="24">error<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><call><name pos:line="14" pos:column="30">_<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><literal type="string" pos:line="14" pos:column="32">"Failed to lock HEAD during fast_forward_to"<pos:position pos:line="14" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="79"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">strbuf_addf<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><operator pos:line="16" pos:column="21">&amp;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="22">sb<pos:position pos:line="16" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="26">"%s: fast-forward"<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="46">action_name<pos:position pos:line="16" pos:column="57"/></name><argument_list pos:line="16" pos:column="57">(<argument><expr><name pos:line="16" pos:column="58">opts<pos:position pos:line="16" pos:column="62"/></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">ret<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">write_ref_sha1<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">ref_lock<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">to<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="44">sb<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">.<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="47">buf<pos:position pos:line="17" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">strbuf_release<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><operator pos:line="19" pos:column="24">&amp;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="25">sb<pos:position pos:line="19" pos:column="27"/></name></expr></argument>)<pos:position pos:line="19" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
	<return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">ret<pos:position pos:line="20" pos:column="19"/></name></expr>;<pos:position pos:line="20" pos:column="20"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_588.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">merge_one_change<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">notes_merge_options<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">o<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
			    <parameter><decl><type><name><name pos:line="2" pos:column="29">struct<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">notes_merge_pair<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">p<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="57">struct<pos:position pos:line="2" pos:column="63"/></name> <name pos:line="2" pos:column="64">notes_tree<pos:position pos:line="2" pos:column="74"/></name></name> <modifier pos:line="2" pos:column="75">*<pos:position pos:line="2" pos:column="76"/></modifier></type><name pos:line="2" pos:column="76">t<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<comment type="block" pos:line="4" pos:column="9">/*
	 * Return 0 if change is successfully resolved (stored in notes_tree).
	 * Return 1 is change results in a conflict (NOT stored in notes_tree,
	 * but instead written to NOTES_MERGE_WORKTREE with conflict markers).
	 */</comment>
	<switch pos:line="9" pos:column="9">switch <condition pos:line="9" pos:column="16">(<expr><name><name pos:line="9" pos:column="17">o<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">strategy<pos:position pos:line="9" pos:column="28"/></name></name></expr>)<pos:position pos:line="9" pos:column="29"/></condition> <block pos:line="9" pos:column="30">{
	<case pos:line="10" pos:column="9">case <expr><name pos:line="10" pos:column="14">NOTES_MERGE_RESOLVE_MANUAL<pos:position pos:line="10" pos:column="40"/></name></expr>:<pos:position pos:line="10" pos:column="41"/></case>
		<return pos:line="11" pos:column="17">return <expr><call><name pos:line="11" pos:column="24">merge_one_change_manual<pos:position pos:line="11" pos:column="47"/></name><argument_list pos:line="11" pos:column="47">(<argument><expr><name pos:line="11" pos:column="48">o<pos:position pos:line="11" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="51">p<pos:position pos:line="11" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="54">t<pos:position pos:line="11" pos:column="55"/></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="57"/></return>
	<case pos:line="12" pos:column="9">case <expr><name pos:line="12" pos:column="14">NOTES_MERGE_RESOLVE_OURS<pos:position pos:line="12" pos:column="38"/></name></expr>:<pos:position pos:line="12" pos:column="39"/></case>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name><name pos:line="13" pos:column="21">o<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">verbosity<pos:position pos:line="13" pos:column="33"/></name></name> <operator pos:line="13" pos:column="34">&gt;=<pos:position pos:line="13" pos:column="39"/></operator> <literal type="number" pos:line="13" pos:column="37">2<pos:position pos:line="13" pos:column="38"/></literal></expr>)<pos:position pos:line="13" pos:column="39"/></condition><then pos:line="13" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="25">printf<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><literal type="string" pos:line="14" pos:column="32">"Using local notes for %s\n"<pos:position pos:line="14" pos:column="60"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="15" pos:column="49">sha1_to_hex<pos:position pos:line="15" pos:column="60"/></name><argument_list pos:line="15" pos:column="60">(<argument><expr><name><name pos:line="15" pos:column="61">p<pos:position pos:line="15" pos:column="62"/></name><operator pos:line="15" pos:column="62">-&gt;<pos:position pos:line="15" pos:column="67"/></operator><name pos:line="15" pos:column="64">obj<pos:position pos:line="15" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="70"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="16" pos:column="17">/* nothing to do */</comment>
		<return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return>
	<case pos:line="18" pos:column="9">case <expr><name pos:line="18" pos:column="14">NOTES_MERGE_RESOLVE_THEIRS<pos:position pos:line="18" pos:column="40"/></name></expr>:<pos:position pos:line="18" pos:column="41"/></case>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name><name pos:line="19" pos:column="21">o<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">verbosity<pos:position pos:line="19" pos:column="33"/></name></name> <operator pos:line="19" pos:column="34">&gt;=<pos:position pos:line="19" pos:column="39"/></operator> <literal type="number" pos:line="19" pos:column="37">2<pos:position pos:line="19" pos:column="38"/></literal></expr>)<pos:position pos:line="19" pos:column="39"/></condition><then pos:line="19" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="25">printf<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><literal type="string" pos:line="20" pos:column="32">"Using remote notes for %s\n"<pos:position pos:line="20" pos:column="61"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="21" pos:column="49">sha1_to_hex<pos:position pos:line="21" pos:column="60"/></name><argument_list pos:line="21" pos:column="60">(<argument><expr><name><name pos:line="21" pos:column="61">p<pos:position pos:line="21" pos:column="62"/></name><operator pos:line="21" pos:column="62">-&gt;<pos:position pos:line="21" pos:column="67"/></operator><name pos:line="21" pos:column="64">obj<pos:position pos:line="21" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="70"/></expr_stmt></block></then></if>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><call><name pos:line="22" pos:column="21">add_note<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">t<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="33">p<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">obj<pos:position pos:line="22" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="41">p<pos:position pos:line="22" pos:column="42"/></name><operator pos:line="22" pos:column="42">-&gt;<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="44">remote<pos:position pos:line="22" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="52">combine_notes_overwrite<pos:position pos:line="22" pos:column="75"/></name></expr></argument>)<pos:position pos:line="22" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="77"/></condition><then pos:line="22" pos:column="77">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="25">die<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><literal type="string" pos:line="23" pos:column="29">"BUG: combine_notes_overwrite failed"<pos:position pos:line="23" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt></block></then></if>
		<return pos:line="24" pos:column="17">return <expr><literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></return>
	<case pos:line="25" pos:column="9">case <expr><name pos:line="25" pos:column="14">NOTES_MERGE_RESOLVE_UNION<pos:position pos:line="25" pos:column="39"/></name></expr>:<pos:position pos:line="25" pos:column="40"/></case>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name><name pos:line="26" pos:column="21">o<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">verbosity<pos:position pos:line="26" pos:column="33"/></name></name> <operator pos:line="26" pos:column="34">&gt;=<pos:position pos:line="26" pos:column="39"/></operator> <literal type="number" pos:line="26" pos:column="37">2<pos:position pos:line="26" pos:column="38"/></literal></expr>)<pos:position pos:line="26" pos:column="39"/></condition><then pos:line="26" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="25">printf<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><literal type="string" pos:line="27" pos:column="32">"Concatenating local and remote notes for %s\n"<pos:position pos:line="27" pos:column="79"/></literal></expr></argument>,
							<argument><expr><call><name pos:line="28" pos:column="57">sha1_to_hex<pos:position pos:line="28" pos:column="68"/></name><argument_list pos:line="28" pos:column="68">(<argument><expr><name><name pos:line="28" pos:column="69">p<pos:position pos:line="28" pos:column="70"/></name><operator pos:line="28" pos:column="70">-&gt;<pos:position pos:line="28" pos:column="75"/></operator><name pos:line="28" pos:column="72">obj<pos:position pos:line="28" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="78"/></expr_stmt></block></then></if>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">add_note<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">t<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="33">p<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">-&gt;<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="36">obj<pos:position pos:line="29" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="41">p<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">remote<pos:position pos:line="29" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="52">combine_notes_concatenate<pos:position pos:line="29" pos:column="77"/></name></expr></argument>)<pos:position pos:line="29" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="79"/></condition><then pos:line="29" pos:column="79">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="25">die<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><literal type="string" pos:line="30" pos:column="29">"failed to concatenate notes "<pos:position pos:line="30" pos:column="59"/></literal>
			    <literal type="string" pos:line="31" pos:column="29">"(combine_notes_concatenate)"<pos:position pos:line="31" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="60"/></expr_stmt></block></then></if>
		<return pos:line="32" pos:column="17">return <expr><literal type="number" pos:line="32" pos:column="24">0<pos:position pos:line="32" pos:column="25"/></literal></expr>;<pos:position pos:line="32" pos:column="26"/></return>
	<case pos:line="33" pos:column="9">case <expr><name pos:line="33" pos:column="14">NOTES_MERGE_RESOLVE_CAT_SORT_UNIQ<pos:position pos:line="33" pos:column="47"/></name></expr>:<pos:position pos:line="33" pos:column="48"/></case>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name><name pos:line="34" pos:column="21">o<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">verbosity<pos:position pos:line="34" pos:column="33"/></name></name> <operator pos:line="34" pos:column="34">&gt;=<pos:position pos:line="34" pos:column="39"/></operator> <literal type="number" pos:line="34" pos:column="37">2<pos:position pos:line="34" pos:column="38"/></literal></expr>)<pos:position pos:line="34" pos:column="39"/></condition><then pos:line="34" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="25">printf<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">(<argument><expr><literal type="string" pos:line="35" pos:column="32">"Concatenating unique lines in local and remote "<pos:position pos:line="35" pos:column="81"/></literal>
				<literal type="string" pos:line="36" pos:column="33">"notes for %s\n"<pos:position pos:line="36" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="51">sha1_to_hex<pos:position pos:line="36" pos:column="62"/></name><argument_list pos:line="36" pos:column="62">(<argument><expr><name><name pos:line="36" pos:column="63">p<pos:position pos:line="36" pos:column="64"/></name><operator pos:line="36" pos:column="64">-&gt;<pos:position pos:line="36" pos:column="69"/></operator><name pos:line="36" pos:column="66">obj<pos:position pos:line="36" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="72"/></expr_stmt></block></then></if>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><call><name pos:line="37" pos:column="21">add_note<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">t<pos:position pos:line="37" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="33">p<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">-&gt;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="36">obj<pos:position pos:line="37" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="41">p<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">-&gt;<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="44">remote<pos:position pos:line="37" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="52">combine_notes_cat_sort_uniq<pos:position pos:line="37" pos:column="79"/></name></expr></argument>)<pos:position pos:line="37" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="81"/></condition><then pos:line="37" pos:column="81">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="25">die<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><literal type="string" pos:line="38" pos:column="29">"failed to concatenate notes "<pos:position pos:line="38" pos:column="59"/></literal>
			    <literal type="string" pos:line="39" pos:column="29">"(combine_notes_cat_sort_uniq)"<pos:position pos:line="39" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="62"/></expr_stmt></block></then></if>
		<return pos:line="40" pos:column="17">return <expr><literal type="number" pos:line="40" pos:column="24">0<pos:position pos:line="40" pos:column="25"/></literal></expr>;<pos:position pos:line="40" pos:column="26"/></return>
	}<pos:position pos:line="41" pos:column="10"/></block></switch>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">die<pos:position pos:line="42" pos:column="12"/></name><argument_list pos:line="42" pos:column="12">(<argument><expr><literal type="string" pos:line="42" pos:column="13">"Unknown strategy (%i)."<pos:position pos:line="42" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="39">o<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">-&gt;<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="42">strategy<pos:position pos:line="42" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="52"/></expr_stmt>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1544.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_tag<pos:position pos:line="1" pos:column="12"/></name><parameter_list pos:line="1" pos:column="12">(<parameter><decl><type><name pos:line="1" pos:column="13">int<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">argc<pos:position pos:line="1" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier><modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">argv<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">prefix<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">buf<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">STRBUF_INIT<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">ref<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">char<pos:position pos:line="5" pos:column="22"/></name></type> <name><name pos:line="5" pos:column="23">object<pos:position pos:line="5" pos:column="29"/></name><index pos:line="5" pos:column="29">[<expr><literal type="number" pos:line="5" pos:column="30">20<pos:position pos:line="5" pos:column="32"/></literal></expr>]<pos:position pos:line="5" pos:column="33"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="5" pos:column="35">prev<pos:position pos:line="5" pos:column="39"/></name><index pos:line="5" pos:column="39">[<expr><literal type="number" pos:line="5" pos:column="40">20<pos:position pos:line="5" pos:column="42"/></literal></expr>]<pos:position pos:line="5" pos:column="43"/></index></name></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">object_ref<pos:position pos:line="6" pos:column="31"/></name></decl>, <modifier pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="34">tag<pos:position pos:line="6" pos:column="37"/></name></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">ref_lock<pos:position pos:line="7" pos:column="24"/></name></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">lock<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">create_tag_options<pos:position pos:line="8" pos:column="34"/></name></name></type> <name pos:line="8" pos:column="35">opt<pos:position pos:line="8" pos:column="38"/></name></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">cleanup_arg<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><name pos:line="9" pos:column="29">NULL<pos:position pos:line="9" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">annotate<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="27">force<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><literal type="number" pos:line="10" pos:column="35">0<pos:position pos:line="10" pos:column="36"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="38">lines<pos:position pos:line="10" pos:column="43"/></name> <init pos:line="10" pos:column="44">= <expr><operator pos:line="10" pos:column="46">-<pos:position pos:line="10" pos:column="47"/></operator><literal type="number" pos:line="10" pos:column="47">1<pos:position pos:line="10" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">cmdmode<pos:position pos:line="11" pos:column="20"/></name> <init pos:line="11" pos:column="21">= <expr><literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">char<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">msgfile<pos:position pos:line="12" pos:column="28"/></name> <init pos:line="12" pos:column="29">= <expr><name pos:line="12" pos:column="31">NULL<pos:position pos:line="12" pos:column="35"/></name></expr></init></decl>, <modifier pos:line="12" pos:column="37">*<pos:position pos:line="12" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="38">keyid<pos:position pos:line="12" pos:column="43"/></name> <init pos:line="12" pos:column="44">= <expr><name pos:line="12" pos:column="46">NULL<pos:position pos:line="12" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">msg_arg<pos:position pos:line="13" pos:column="23"/></name></name></type> <name pos:line="13" pos:column="24">msg<pos:position pos:line="13" pos:column="27"/></name> <init pos:line="13" pos:column="28">= <expr><block pos:line="13" pos:column="30">{ <expr><literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr>, <expr><name pos:line="13" pos:column="35">STRBUF_INIT<pos:position pos:line="13" pos:column="46"/></name></expr> }<pos:position pos:line="13" pos:column="48"/></block></expr></init></decl>;<pos:position pos:line="13" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="14" pos:column="9">struct<pos:position pos:line="14" pos:column="15"/></name> <name pos:line="14" pos:column="16">commit_list<pos:position pos:line="14" pos:column="27"/></name></name> <modifier pos:line="14" pos:column="28">*<pos:position pos:line="14" pos:column="29"/></modifier></type><name pos:line="14" pos:column="29">with_commit<pos:position pos:line="14" pos:column="40"/></name> <init pos:line="14" pos:column="41">= <expr><name pos:line="14" pos:column="43">NULL<pos:position pos:line="14" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="15" pos:column="9">struct<pos:position pos:line="15" pos:column="15"/></name> <name pos:line="15" pos:column="16">option<pos:position pos:line="15" pos:column="22"/></name></name></type> <name><name pos:line="15" pos:column="23">options<pos:position pos:line="15" pos:column="30"/></name><index pos:line="15" pos:column="30">[]<pos:position pos:line="15" pos:column="32"/></index></name> <init pos:line="15" pos:column="33">= <expr><block pos:line="15" pos:column="35">{
		<expr><call><name pos:line="16" pos:column="17">OPT_CMDMODE<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><literal type="char" pos:line="16" pos:column="29">'l'<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="34">"list"<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="42">&amp;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="43">cmdmode<pos:position pos:line="16" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="52">N_<pos:position pos:line="16" pos:column="54"/></name><argument_list pos:line="16" pos:column="54">(<argument><expr><literal type="string" pos:line="16" pos:column="55">"list tag names"<pos:position pos:line="16" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="74">'l'<pos:position pos:line="16" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="78"/></argument_list></call></expr>,
		<expr><block pos:line="17" pos:column="17">{ <expr><name pos:line="17" pos:column="19">OPTION_INTEGER<pos:position pos:line="17" pos:column="33"/></name></expr>, <expr><literal type="char" pos:line="17" pos:column="35">'n'<pos:position pos:line="17" pos:column="38"/></literal></expr>, <expr><name pos:line="17" pos:column="40">NULL<pos:position pos:line="17" pos:column="44"/></name></expr>, <expr><operator pos:line="17" pos:column="46">&amp;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="47">lines<pos:position pos:line="17" pos:column="52"/></name></expr>, <expr><call><name pos:line="17" pos:column="54">N_<pos:position pos:line="17" pos:column="56"/></name><argument_list pos:line="17" pos:column="56">(<argument><expr><literal type="string" pos:line="17" pos:column="57">"n"<pos:position pos:line="17" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>,
				<expr><call><name pos:line="18" pos:column="33">N_<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><literal type="string" pos:line="18" pos:column="36">"print &lt;n&gt; lines of each tag message"<pos:position pos:line="18" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="74"/></argument_list></call></expr>,
				<expr><name pos:line="19" pos:column="33">PARSE_OPT_OPTARG<pos:position pos:line="19" pos:column="49"/></name></expr>, <expr><name pos:line="19" pos:column="51">NULL<pos:position pos:line="19" pos:column="55"/></name></expr>, <expr><literal type="number" pos:line="19" pos:column="57">1<pos:position pos:line="19" pos:column="58"/></literal></expr> }<pos:position pos:line="19" pos:column="60"/></block></expr>,
		<expr><call><name pos:line="20" pos:column="17">OPT_CMDMODE<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><literal type="char" pos:line="20" pos:column="29">'d'<pos:position pos:line="20" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="34">"delete"<pos:position pos:line="20" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="44">&amp;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="45">cmdmode<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="54">N_<pos:position pos:line="20" pos:column="56"/></name><argument_list pos:line="20" pos:column="56">(<argument><expr><literal type="string" pos:line="20" pos:column="57">"delete tags"<pos:position pos:line="20" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="73">'d'<pos:position pos:line="20" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr>,
		<expr><call><name pos:line="21" pos:column="17">OPT_CMDMODE<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><literal type="char" pos:line="21" pos:column="29">'v'<pos:position pos:line="21" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="34">"verify"<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="44">&amp;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="45">cmdmode<pos:position pos:line="21" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="54">N_<pos:position pos:line="21" pos:column="56"/></name><argument_list pos:line="21" pos:column="56">(<argument><expr><literal type="string" pos:line="21" pos:column="57">"verify tags"<pos:position pos:line="21" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="73">'v'<pos:position pos:line="21" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></call></expr>,

		<expr><call><name pos:line="23" pos:column="17">OPT_GROUP<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><call><name pos:line="23" pos:column="27">N_<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><literal type="string" pos:line="23" pos:column="30">"Tag creation options"<pos:position pos:line="23" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>,
		<expr><call><name pos:line="24" pos:column="17">OPT_BOOL<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><literal type="char" pos:line="24" pos:column="26">'a'<pos:position pos:line="24" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="31">"annotate"<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="43">&amp;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="44">annotate<pos:position pos:line="24" pos:column="52"/></name></expr></argument>,
					<argument><expr><call><name pos:line="25" pos:column="41">N_<pos:position pos:line="25" pos:column="43"/></name><argument_list pos:line="25" pos:column="43">(<argument><expr><literal type="string" pos:line="25" pos:column="44">"annotated tag, needs a message"<pos:position pos:line="25" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="78"/></argument_list></call></expr>,
		<expr><call><name pos:line="26" pos:column="17">OPT_CALLBACK<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><literal type="char" pos:line="26" pos:column="30">'m'<pos:position pos:line="26" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="35">"message"<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="46">&amp;<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="47">msg<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="52">N_<pos:position pos:line="26" pos:column="54"/></name><argument_list pos:line="26" pos:column="54">(<argument><expr><literal type="string" pos:line="26" pos:column="55">"message"<pos:position pos:line="26" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr></argument>,
			     <argument><expr><call><name pos:line="27" pos:column="30">N_<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><literal type="string" pos:line="27" pos:column="33">"tag message"<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="27" pos:column="49">parse_msg_arg<pos:position pos:line="27" pos:column="62"/></name></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call></expr>,
		<expr><call><name pos:line="28" pos:column="17">OPT_FILENAME<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><literal type="char" pos:line="28" pos:column="30">'F'<pos:position pos:line="28" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="35">"file"<pos:position pos:line="28" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="43">&amp;<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="44">msgfile<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="53">N_<pos:position pos:line="28" pos:column="55"/></name><argument_list pos:line="28" pos:column="55">(<argument><expr><literal type="string" pos:line="28" pos:column="56">"read message from file"<pos:position pos:line="28" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="82"/></argument_list></call></expr>,
		<expr><call><name pos:line="29" pos:column="17">OPT_BOOL<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><literal type="char" pos:line="29" pos:column="26">'s'<pos:position pos:line="29" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="31">"sign"<pos:position pos:line="29" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="39">&amp;<pos:position pos:line="29" pos:column="44"/></operator><name><name pos:line="29" pos:column="40">opt<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">.<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="44">sign<pos:position pos:line="29" pos:column="48"/></name></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="50">N_<pos:position pos:line="29" pos:column="52"/></name><argument_list pos:line="29" pos:column="52">(<argument><expr><literal type="string" pos:line="29" pos:column="53">"annotated and GPG-signed tag"<pos:position pos:line="29" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="85"/></argument_list></call></expr>,
		<expr><call><name pos:line="30" pos:column="17">OPT_STRING<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><literal type="number" pos:line="30" pos:column="28">0<pos:position pos:line="30" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="31">"cleanup"<pos:position pos:line="30" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="42">&amp;<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="43">cleanup_arg<pos:position pos:line="30" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="56">N_<pos:position pos:line="30" pos:column="58"/></name><argument_list pos:line="30" pos:column="58">(<argument><expr><literal type="string" pos:line="30" pos:column="59">"mode"<pos:position pos:line="30" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="31" pos:column="25">N_<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><literal type="string" pos:line="31" pos:column="28">"how to strip spaces and #comments from message"<pos:position pos:line="31" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="78"/></argument_list></call></expr>,
		<expr><call><name pos:line="32" pos:column="17">OPT_STRING<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><literal type="char" pos:line="32" pos:column="28">'u'<pos:position pos:line="32" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="33">"local-user"<pos:position pos:line="32" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="47">&amp;<pos:position pos:line="32" pos:column="52"/></operator><name pos:line="32" pos:column="48">keyid<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="55">N_<pos:position pos:line="32" pos:column="57"/></name><argument_list pos:line="32" pos:column="57">(<argument><expr><literal type="string" pos:line="32" pos:column="58">"key-id"<pos:position pos:line="32" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr></argument>,
					<argument><expr><call><name pos:line="33" pos:column="41">N_<pos:position pos:line="33" pos:column="43"/></name><argument_list pos:line="33" pos:column="43">(<argument><expr><literal type="string" pos:line="33" pos:column="44">"use another key to sign the tag"<pos:position pos:line="33" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="79"/></argument_list></call></expr>,
		<expr><call><name pos:line="34" pos:column="17">OPT__FORCE<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><operator pos:line="34" pos:column="28">&amp;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="29">force<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="36">N_<pos:position pos:line="34" pos:column="38"/></name><argument_list pos:line="34" pos:column="38">(<argument><expr><literal type="string" pos:line="34" pos:column="39">"replace the tag if exists"<pos:position pos:line="34" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="68"/></argument_list></call></expr>,
		<expr><call><name pos:line="35" pos:column="17">OPT_COLUMN<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><literal type="number" pos:line="35" pos:column="28">0<pos:position pos:line="35" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="31">"column"<pos:position pos:line="35" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="41">&amp;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="42">colopts<pos:position pos:line="35" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="51">N_<pos:position pos:line="35" pos:column="53"/></name><argument_list pos:line="35" pos:column="53">(<argument><expr><literal type="string" pos:line="35" pos:column="54">"show tag list in columns"<pos:position pos:line="35" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="82"/></argument_list></call></expr>,
		<expr><block pos:line="36" pos:column="17">{
			<expr><name pos:line="37" pos:column="25">OPTION_CALLBACK<pos:position pos:line="37" pos:column="40"/></name></expr>, <expr><literal type="number" pos:line="37" pos:column="42">0<pos:position pos:line="37" pos:column="43"/></literal></expr>, <expr><literal type="string" pos:line="37" pos:column="45">"sort"<pos:position pos:line="37" pos:column="51"/></literal></expr>, <expr><operator pos:line="37" pos:column="53">&amp;<pos:position pos:line="37" pos:column="58"/></operator><name pos:line="37" pos:column="54">tag_sort<pos:position pos:line="37" pos:column="62"/></name></expr>, <expr><call><name pos:line="37" pos:column="64">N_<pos:position pos:line="37" pos:column="66"/></name><argument_list pos:line="37" pos:column="66">(<argument><expr><literal type="string" pos:line="37" pos:column="67">"type"<pos:position pos:line="37" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="74"/></argument_list></call></expr>, <expr><call><name pos:line="37" pos:column="76">N_<pos:position pos:line="37" pos:column="78"/></name><argument_list pos:line="37" pos:column="78">(<argument><expr><literal type="string" pos:line="37" pos:column="79">"sort tags"<pos:position pos:line="37" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="91"/></argument_list></call></expr>,
			<expr><name pos:line="38" pos:column="25">PARSE_OPT_NONEG<pos:position pos:line="38" pos:column="40"/></name></expr>, <expr><name pos:line="38" pos:column="42">parse_opt_sort<pos:position pos:line="38" pos:column="56"/></name></expr>
		}<pos:position pos:line="39" pos:column="18"/></block></expr>,

		<expr><call><name pos:line="41" pos:column="17">OPT_GROUP<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">(<argument><expr><call><name pos:line="41" pos:column="27">N_<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><literal type="string" pos:line="41" pos:column="30">"Tag listing options"<pos:position pos:line="41" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>,
		<expr><block pos:line="42" pos:column="17">{
			<expr><name pos:line="43" pos:column="25">OPTION_CALLBACK<pos:position pos:line="43" pos:column="40"/></name></expr>, <expr><literal type="number" pos:line="43" pos:column="42">0<pos:position pos:line="43" pos:column="43"/></literal></expr>, <expr><literal type="string" pos:line="43" pos:column="45">"contains"<pos:position pos:line="43" pos:column="55"/></literal></expr>, <expr><operator pos:line="43" pos:column="57">&amp;<pos:position pos:line="43" pos:column="62"/></operator><name pos:line="43" pos:column="58">with_commit<pos:position pos:line="43" pos:column="69"/></name></expr>, <expr><call><name pos:line="43" pos:column="71">N_<pos:position pos:line="43" pos:column="73"/></name><argument_list pos:line="43" pos:column="73">(<argument><expr><literal type="string" pos:line="43" pos:column="74">"commit"<pos:position pos:line="43" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="83"/></argument_list></call></expr>,
			<expr><call><name pos:line="44" pos:column="25">N_<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><literal type="string" pos:line="44" pos:column="28">"print only tags that contain the commit"<pos:position pos:line="44" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="70"/></argument_list></call></expr>,
			<expr><name pos:line="45" pos:column="25">PARSE_OPT_LASTARG_DEFAULT<pos:position pos:line="45" pos:column="50"/></name></expr>,
			<expr><name pos:line="46" pos:column="25">parse_opt_with_commit<pos:position pos:line="46" pos:column="46"/></name></expr>, <expr><operator pos:line="46" pos:column="48">(<pos:position pos:line="46" pos:column="49"/></operator><name pos:line="46" pos:column="49">intptr_t<pos:position pos:line="46" pos:column="57"/></name><operator pos:line="46" pos:column="57">)<pos:position pos:line="46" pos:column="58"/></operator><literal type="string" pos:line="46" pos:column="58">"HEAD"<pos:position pos:line="46" pos:column="64"/></literal></expr>,
		}<pos:position pos:line="47" pos:column="18"/></block></expr>,
		<expr><block pos:line="48" pos:column="17">{
			<expr><name pos:line="49" pos:column="25">OPTION_CALLBACK<pos:position pos:line="49" pos:column="40"/></name></expr>, <expr><literal type="number" pos:line="49" pos:column="42">0<pos:position pos:line="49" pos:column="43"/></literal></expr>, <expr><literal type="string" pos:line="49" pos:column="45">"with"<pos:position pos:line="49" pos:column="51"/></literal></expr>, <expr><operator pos:line="49" pos:column="53">&amp;<pos:position pos:line="49" pos:column="58"/></operator><name pos:line="49" pos:column="54">with_commit<pos:position pos:line="49" pos:column="65"/></name></expr>, <expr><call><name pos:line="49" pos:column="67">N_<pos:position pos:line="49" pos:column="69"/></name><argument_list pos:line="49" pos:column="69">(<argument><expr><literal type="string" pos:line="49" pos:column="70">"commit"<pos:position pos:line="49" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="79"/></argument_list></call></expr>,
			<expr><call><name pos:line="50" pos:column="25">N_<pos:position pos:line="50" pos:column="27"/></name><argument_list pos:line="50" pos:column="27">(<argument><expr><literal type="string" pos:line="50" pos:column="28">"print only tags that contain the commit"<pos:position pos:line="50" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="70"/></argument_list></call></expr>,
			<expr><name pos:line="51" pos:column="25">PARSE_OPT_HIDDEN<pos:position pos:line="51" pos:column="41"/></name> <operator pos:line="51" pos:column="42">|<pos:position pos:line="51" pos:column="43"/></operator> <name pos:line="51" pos:column="44">PARSE_OPT_LASTARG_DEFAULT<pos:position pos:line="51" pos:column="69"/></name></expr>,
			<expr><name pos:line="52" pos:column="25">parse_opt_with_commit<pos:position pos:line="52" pos:column="46"/></name></expr>, <expr><operator pos:line="52" pos:column="48">(<pos:position pos:line="52" pos:column="49"/></operator><name pos:line="52" pos:column="49">intptr_t<pos:position pos:line="52" pos:column="57"/></name><operator pos:line="52" pos:column="57">)<pos:position pos:line="52" pos:column="58"/></operator><literal type="string" pos:line="52" pos:column="58">"HEAD"<pos:position pos:line="52" pos:column="64"/></literal></expr>,
		}<pos:position pos:line="53" pos:column="18"/></block></expr>,
		<expr><block pos:line="54" pos:column="17">{
			<expr><name pos:line="55" pos:column="25">OPTION_CALLBACK<pos:position pos:line="55" pos:column="40"/></name></expr>, <expr><literal type="number" pos:line="55" pos:column="42">0<pos:position pos:line="55" pos:column="43"/></literal></expr>, <expr><literal type="string" pos:line="55" pos:column="45">"points-at"<pos:position pos:line="55" pos:column="56"/></literal></expr>, <expr><name pos:line="55" pos:column="58">NULL<pos:position pos:line="55" pos:column="62"/></name></expr>, <expr><call><name pos:line="55" pos:column="64">N_<pos:position pos:line="55" pos:column="66"/></name><argument_list pos:line="55" pos:column="66">(<argument><expr><literal type="string" pos:line="55" pos:column="67">"object"<pos:position pos:line="55" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="76"/></argument_list></call></expr>,
			<expr><call><name pos:line="56" pos:column="25">N_<pos:position pos:line="56" pos:column="27"/></name><argument_list pos:line="56" pos:column="27">(<argument><expr><literal type="string" pos:line="56" pos:column="28">"print only tags of the object"<pos:position pos:line="56" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="60"/></argument_list></call></expr>, <expr><literal type="number" pos:line="56" pos:column="62">0<pos:position pos:line="56" pos:column="63"/></literal></expr>, <expr><name pos:line="56" pos:column="65">parse_opt_points_at<pos:position pos:line="56" pos:column="84"/></name></expr>
		}<pos:position pos:line="57" pos:column="18"/></block></expr>,
		<macro><name pos:line="58" pos:column="17">OPT_END<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">()<pos:position pos:line="58" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="59" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="59" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="61" pos:column="9">git_config<pos:position pos:line="61" pos:column="19"/></name><argument_list pos:line="61" pos:column="19">(<argument><expr><name pos:line="61" pos:column="20">git_tag_config<pos:position pos:line="61" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="36">NULL<pos:position pos:line="61" pos:column="40"/></name></expr></argument>)<pos:position pos:line="61" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="63" pos:column="9">memset<pos:position pos:line="63" pos:column="15"/></name><argument_list pos:line="63" pos:column="15">(<argument><expr><operator pos:line="63" pos:column="16">&amp;<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="17">opt<pos:position pos:line="63" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="22">0<pos:position pos:line="63" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="63" pos:column="25">sizeof<argument_list pos:line="63" pos:column="31">(<argument><expr><name pos:line="63" pos:column="32">opt<pos:position pos:line="63" pos:column="35"/></name></expr></argument>)<pos:position pos:line="63" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="63" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><name pos:line="65" pos:column="9">argc<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">=<pos:position pos:line="65" pos:column="15"/></operator> <call><name pos:line="65" pos:column="16">parse_options<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><name pos:line="65" pos:column="30">argc<pos:position pos:line="65" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="36">argv<pos:position pos:line="65" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="42">prefix<pos:position pos:line="65" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="50">options<pos:position pos:line="65" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="59">git_tag_usage<pos:position pos:line="65" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="74">0<pos:position pos:line="65" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="77"/></expr_stmt>

	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">keyid<pos:position pos:line="67" pos:column="18"/></name></expr>)<pos:position pos:line="67" pos:column="19"/></condition><then pos:line="67" pos:column="19"> <block pos:line="67" pos:column="20">{
		<expr_stmt><expr><name><name pos:line="68" pos:column="17">opt<pos:position pos:line="68" pos:column="20"/></name><operator pos:line="68" pos:column="20">.<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="21">sign<pos:position pos:line="68" pos:column="25"/></name></name> <operator pos:line="68" pos:column="26">=<pos:position pos:line="68" pos:column="27"/></operator> <literal type="number" pos:line="68" pos:column="28">1<pos:position pos:line="68" pos:column="29"/></literal></expr>;<pos:position pos:line="68" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">set_signing_key<pos:position pos:line="69" pos:column="32"/></name><argument_list pos:line="69" pos:column="32">(<argument><expr><name pos:line="69" pos:column="33">keyid<pos:position pos:line="69" pos:column="38"/></name></expr></argument>)<pos:position pos:line="69" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="70" pos:column="10"/></block></then></if>
	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name><name pos:line="71" pos:column="13">opt<pos:position pos:line="71" pos:column="16"/></name><operator pos:line="71" pos:column="16">.<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="17">sign<pos:position pos:line="71" pos:column="21"/></name></name></expr>)<pos:position pos:line="71" pos:column="22"/></condition><then pos:line="71" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="17">annotate<pos:position pos:line="72" pos:column="25"/></name> <operator pos:line="72" pos:column="26">=<pos:position pos:line="72" pos:column="27"/></operator> <literal type="number" pos:line="72" pos:column="28">1<pos:position pos:line="72" pos:column="29"/></literal></expr>;<pos:position pos:line="72" pos:column="30"/></expr_stmt></block></then></if>
	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">argc<pos:position pos:line="73" pos:column="17"/></name> <operator pos:line="73" pos:column="18">==<pos:position pos:line="73" pos:column="20"/></operator> <literal type="number" pos:line="73" pos:column="21">0<pos:position pos:line="73" pos:column="22"/></literal> <operator pos:line="73" pos:column="23">&amp;&amp;<pos:position pos:line="73" pos:column="33"/></operator> <operator pos:line="73" pos:column="26">!<pos:position pos:line="73" pos:column="27"/></operator><name pos:line="73" pos:column="27">cmdmode<pos:position pos:line="73" pos:column="34"/></name></expr>)<pos:position pos:line="73" pos:column="35"/></condition><then pos:line="73" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name pos:line="74" pos:column="17">cmdmode<pos:position pos:line="74" pos:column="24"/></name> <operator pos:line="74" pos:column="25">=<pos:position pos:line="74" pos:column="26"/></operator> <literal type="char" pos:line="74" pos:column="27">'l'<pos:position pos:line="74" pos:column="30"/></literal></expr>;<pos:position pos:line="74" pos:column="31"/></expr_stmt></block></then></if>

	<if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><operator pos:line="76" pos:column="13">(<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="14">annotate<pos:position pos:line="76" pos:column="22"/></name> <operator pos:line="76" pos:column="23">||<pos:position pos:line="76" pos:column="25"/></operator> <name><name pos:line="76" pos:column="26">msg<pos:position pos:line="76" pos:column="29"/></name><operator pos:line="76" pos:column="29">.<pos:position pos:line="76" pos:column="30"/></operator><name pos:line="76" pos:column="30">given<pos:position pos:line="76" pos:column="35"/></name></name> <operator pos:line="76" pos:column="36">||<pos:position pos:line="76" pos:column="38"/></operator> <name pos:line="76" pos:column="39">msgfile<pos:position pos:line="76" pos:column="46"/></name> <operator pos:line="76" pos:column="47">||<pos:position pos:line="76" pos:column="49"/></operator> <name pos:line="76" pos:column="50">force<pos:position pos:line="76" pos:column="55"/></name><operator pos:line="76" pos:column="55">)<pos:position pos:line="76" pos:column="56"/></operator> <operator pos:line="76" pos:column="57">&amp;&amp;<pos:position pos:line="76" pos:column="67"/></operator> <operator pos:line="76" pos:column="60">(<pos:position pos:line="76" pos:column="61"/></operator><name pos:line="76" pos:column="61">cmdmode<pos:position pos:line="76" pos:column="68"/></name> <operator pos:line="76" pos:column="69">!=<pos:position pos:line="76" pos:column="71"/></operator> <literal type="number" pos:line="76" pos:column="72">0<pos:position pos:line="76" pos:column="73"/></literal><operator pos:line="76" pos:column="73">)<pos:position pos:line="76" pos:column="74"/></operator></expr>)<pos:position pos:line="76" pos:column="75"/></condition><then pos:line="76" pos:column="75">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="17">usage_with_options<pos:position pos:line="77" pos:column="35"/></name><argument_list pos:line="77" pos:column="35">(<argument><expr><name pos:line="77" pos:column="36">git_tag_usage<pos:position pos:line="77" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="51">options<pos:position pos:line="77" pos:column="58"/></name></expr></argument>)<pos:position pos:line="77" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="60"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="79" pos:column="9">finalize_colopts<pos:position pos:line="79" pos:column="25"/></name><argument_list pos:line="79" pos:column="25">(<argument><expr><operator pos:line="79" pos:column="26">&amp;<pos:position pos:line="79" pos:column="31"/></operator><name pos:line="79" pos:column="27">colopts<pos:position pos:line="79" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="36">-<pos:position pos:line="79" pos:column="37"/></operator><literal type="number" pos:line="79" pos:column="37">1<pos:position pos:line="79" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="40"/></expr_stmt>
	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name pos:line="80" pos:column="13">cmdmode<pos:position pos:line="80" pos:column="20"/></name> <operator pos:line="80" pos:column="21">==<pos:position pos:line="80" pos:column="23"/></operator> <literal type="char" pos:line="80" pos:column="24">'l'<pos:position pos:line="80" pos:column="27"/></literal> <operator pos:line="80" pos:column="28">&amp;&amp;<pos:position pos:line="80" pos:column="38"/></operator> <name pos:line="80" pos:column="31">lines<pos:position pos:line="80" pos:column="36"/></name> <operator pos:line="80" pos:column="37">!=<pos:position pos:line="80" pos:column="39"/></operator> <operator pos:line="80" pos:column="40">-<pos:position pos:line="80" pos:column="41"/></operator><literal type="number" pos:line="80" pos:column="41">1<pos:position pos:line="80" pos:column="42"/></literal></expr>)<pos:position pos:line="80" pos:column="43"/></condition><then pos:line="80" pos:column="43"> <block pos:line="80" pos:column="44">{
		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><call><name pos:line="81" pos:column="21">explicitly_enable_column<pos:position pos:line="81" pos:column="45"/></name><argument_list pos:line="81" pos:column="45">(<argument><expr><name pos:line="81" pos:column="46">colopts<pos:position pos:line="81" pos:column="53"/></name></expr></argument>)<pos:position pos:line="81" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="55"/></condition><then pos:line="81" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="25">die<pos:position pos:line="82" pos:column="28"/></name><argument_list pos:line="82" pos:column="28">(<argument><expr><call><name pos:line="82" pos:column="29">_<pos:position pos:line="82" pos:column="30"/></name><argument_list pos:line="82" pos:column="30">(<argument><expr><literal type="string" pos:line="82" pos:column="31">"--column and -n are incompatible"<pos:position pos:line="82" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="68"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="83" pos:column="17">colopts<pos:position pos:line="83" pos:column="24"/></name> <operator pos:line="83" pos:column="25">=<pos:position pos:line="83" pos:column="26"/></operator> <literal type="number" pos:line="83" pos:column="27">0<pos:position pos:line="83" pos:column="28"/></literal></expr>;<pos:position pos:line="83" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="84" pos:column="10"/></block></then></if>
	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name pos:line="85" pos:column="13">cmdmode<pos:position pos:line="85" pos:column="20"/></name> <operator pos:line="85" pos:column="21">==<pos:position pos:line="85" pos:column="23"/></operator> <literal type="char" pos:line="85" pos:column="24">'l'<pos:position pos:line="85" pos:column="27"/></literal></expr>)<pos:position pos:line="85" pos:column="28"/></condition><then pos:line="85" pos:column="28"> <block pos:line="85" pos:column="29">{
		<decl_stmt><decl><type><name pos:line="86" pos:column="17">int<pos:position pos:line="86" pos:column="20"/></name></type> <name pos:line="86" pos:column="21">ret<pos:position pos:line="86" pos:column="24"/></name></decl>;<pos:position pos:line="86" pos:column="25"/></decl_stmt>
		<if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><call><name pos:line="87" pos:column="21">column_active<pos:position pos:line="87" pos:column="34"/></name><argument_list pos:line="87" pos:column="34">(<argument><expr><name pos:line="87" pos:column="35">colopts<pos:position pos:line="87" pos:column="42"/></name></expr></argument>)<pos:position pos:line="87" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="44"/></condition><then pos:line="87" pos:column="44"> <block pos:line="87" pos:column="45">{
			<decl_stmt><decl><type><name><name pos:line="88" pos:column="25">struct<pos:position pos:line="88" pos:column="31"/></name> <name pos:line="88" pos:column="32">column_options<pos:position pos:line="88" pos:column="46"/></name></name></type> <name pos:line="88" pos:column="47">copts<pos:position pos:line="88" pos:column="52"/></name></decl>;<pos:position pos:line="88" pos:column="53"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="89" pos:column="25">memset<pos:position pos:line="89" pos:column="31"/></name><argument_list pos:line="89" pos:column="31">(<argument><expr><operator pos:line="89" pos:column="32">&amp;<pos:position pos:line="89" pos:column="37"/></operator><name pos:line="89" pos:column="33">copts<pos:position pos:line="89" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="40">0<pos:position pos:line="89" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="89" pos:column="43">sizeof<argument_list pos:line="89" pos:column="49">(<argument><expr><name pos:line="89" pos:column="50">copts<pos:position pos:line="89" pos:column="55"/></name></expr></argument>)<pos:position pos:line="89" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="89" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="90" pos:column="25">copts<pos:position pos:line="90" pos:column="30"/></name><operator pos:line="90" pos:column="30">.<pos:position pos:line="90" pos:column="31"/></operator><name pos:line="90" pos:column="31">padding<pos:position pos:line="90" pos:column="38"/></name></name> <operator pos:line="90" pos:column="39">=<pos:position pos:line="90" pos:column="40"/></operator> <literal type="number" pos:line="90" pos:column="41">2<pos:position pos:line="90" pos:column="42"/></literal></expr>;<pos:position pos:line="90" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="91" pos:column="25">run_column_filter<pos:position pos:line="91" pos:column="42"/></name><argument_list pos:line="91" pos:column="42">(<argument><expr><name pos:line="91" pos:column="43">colopts<pos:position pos:line="91" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="52">&amp;<pos:position pos:line="91" pos:column="57"/></operator><name pos:line="91" pos:column="53">copts<pos:position pos:line="91" pos:column="58"/></name></expr></argument>)<pos:position pos:line="91" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="60"/></expr_stmt>
		}<pos:position pos:line="92" pos:column="18"/></block></then></if>
		<if pos:line="93" pos:column="17">if <condition pos:line="93" pos:column="20">(<expr><name pos:line="93" pos:column="21">lines<pos:position pos:line="93" pos:column="26"/></name> <operator pos:line="93" pos:column="27">!=<pos:position pos:line="93" pos:column="29"/></operator> <operator pos:line="93" pos:column="30">-<pos:position pos:line="93" pos:column="31"/></operator><literal type="number" pos:line="93" pos:column="31">1<pos:position pos:line="93" pos:column="32"/></literal> <operator pos:line="93" pos:column="33">&amp;&amp;<pos:position pos:line="93" pos:column="43"/></operator> <name pos:line="93" pos:column="36">tag_sort<pos:position pos:line="93" pos:column="44"/></name></expr>)<pos:position pos:line="93" pos:column="45"/></condition><then pos:line="93" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="25">die<pos:position pos:line="94" pos:column="28"/></name><argument_list pos:line="94" pos:column="28">(<argument><expr><call><name pos:line="94" pos:column="29">_<pos:position pos:line="94" pos:column="30"/></name><argument_list pos:line="94" pos:column="30">(<argument><expr><literal type="string" pos:line="94" pos:column="31">"--sort and -n are incompatible"<pos:position pos:line="94" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="66"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="95" pos:column="17">ret<pos:position pos:line="95" pos:column="20"/></name> <operator pos:line="95" pos:column="21">=<pos:position pos:line="95" pos:column="22"/></operator> <call><name pos:line="95" pos:column="23">list_tags<pos:position pos:line="95" pos:column="32"/></name><argument_list pos:line="95" pos:column="32">(<argument><expr><name pos:line="95" pos:column="33">argv<pos:position pos:line="95" pos:column="37"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="95" pos:column="39">lines<pos:position pos:line="95" pos:column="44"/></name> <operator pos:line="95" pos:column="45">==<pos:position pos:line="95" pos:column="47"/></operator> <operator pos:line="95" pos:column="48">-<pos:position pos:line="95" pos:column="49"/></operator><literal type="number" pos:line="95" pos:column="49">1<pos:position pos:line="95" pos:column="50"/></literal></expr> ?<pos:position pos:line="95" pos:column="52"/></condition><then pos:line="95" pos:column="52"> <expr><literal type="number" pos:line="95" pos:column="53">0<pos:position pos:line="95" pos:column="54"/></literal></expr> <pos:position pos:line="95" pos:column="55"/></then><else pos:line="95" pos:column="55">: <expr><name pos:line="95" pos:column="57">lines<pos:position pos:line="95" pos:column="62"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="95" pos:column="64">with_commit<pos:position pos:line="95" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="77">tag_sort<pos:position pos:line="95" pos:column="85"/></name></expr></argument>)<pos:position pos:line="95" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="87"/></expr_stmt>
		<if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><call><name pos:line="96" pos:column="21">column_active<pos:position pos:line="96" pos:column="34"/></name><argument_list pos:line="96" pos:column="34">(<argument><expr><name pos:line="96" pos:column="35">colopts<pos:position pos:line="96" pos:column="42"/></name></expr></argument>)<pos:position pos:line="96" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="44"/></condition><then pos:line="96" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="97" pos:column="25">stop_column_filter<pos:position pos:line="97" pos:column="43"/></name><argument_list pos:line="97" pos:column="43">()<pos:position pos:line="97" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="46"/></expr_stmt></block></then></if>
		<return pos:line="98" pos:column="17">return <expr><name pos:line="98" pos:column="24">ret<pos:position pos:line="98" pos:column="27"/></name></expr>;<pos:position pos:line="98" pos:column="28"/></return>
	}<pos:position pos:line="99" pos:column="10"/></block></then></if>
	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">lines<pos:position pos:line="100" pos:column="18"/></name> <operator pos:line="100" pos:column="19">!=<pos:position pos:line="100" pos:column="21"/></operator> <operator pos:line="100" pos:column="22">-<pos:position pos:line="100" pos:column="23"/></operator><literal type="number" pos:line="100" pos:column="23">1<pos:position pos:line="100" pos:column="24"/></literal></expr>)<pos:position pos:line="100" pos:column="25"/></condition><then pos:line="100" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="101" pos:column="17">die<pos:position pos:line="101" pos:column="20"/></name><argument_list pos:line="101" pos:column="20">(<argument><expr><call><name pos:line="101" pos:column="21">_<pos:position pos:line="101" pos:column="22"/></name><argument_list pos:line="101" pos:column="22">(<argument><expr><literal type="string" pos:line="101" pos:column="23">"-n option is only allowed with -l."<pos:position pos:line="101" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="101" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="62"/></expr_stmt></block></then></if>
	<if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><name pos:line="102" pos:column="13">with_commit<pos:position pos:line="102" pos:column="24"/></name></expr>)<pos:position pos:line="102" pos:column="25"/></condition><then pos:line="102" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="17">die<pos:position pos:line="103" pos:column="20"/></name><argument_list pos:line="103" pos:column="20">(<argument><expr><call><name pos:line="103" pos:column="21">_<pos:position pos:line="103" pos:column="22"/></name><argument_list pos:line="103" pos:column="22">(<argument><expr><literal type="string" pos:line="103" pos:column="23">"--contains option is only allowed with -l."<pos:position pos:line="103" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="103" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="70"/></expr_stmt></block></then></if>
	<if pos:line="104" pos:column="9">if <condition pos:line="104" pos:column="12">(<expr><name><name pos:line="104" pos:column="13">points_at<pos:position pos:line="104" pos:column="22"/></name><operator pos:line="104" pos:column="22">.<pos:position pos:line="104" pos:column="23"/></operator><name pos:line="104" pos:column="23">nr<pos:position pos:line="104" pos:column="25"/></name></name></expr>)<pos:position pos:line="104" pos:column="26"/></condition><then pos:line="104" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="17">die<pos:position pos:line="105" pos:column="20"/></name><argument_list pos:line="105" pos:column="20">(<argument><expr><call><name pos:line="105" pos:column="21">_<pos:position pos:line="105" pos:column="22"/></name><argument_list pos:line="105" pos:column="22">(<argument><expr><literal type="string" pos:line="105" pos:column="23">"--points-at option is only allowed with -l."<pos:position pos:line="105" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="105" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="71"/></expr_stmt></block></then></if>
	<if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><name pos:line="106" pos:column="13">cmdmode<pos:position pos:line="106" pos:column="20"/></name> <operator pos:line="106" pos:column="21">==<pos:position pos:line="106" pos:column="23"/></operator> <literal type="char" pos:line="106" pos:column="24">'d'<pos:position pos:line="106" pos:column="27"/></literal></expr>)<pos:position pos:line="106" pos:column="28"/></condition><then pos:line="106" pos:column="28">
		<block type="pseudo"><return pos:line="107" pos:column="17">return <expr><call><name pos:line="107" pos:column="24">for_each_tag_name<pos:position pos:line="107" pos:column="41"/></name><argument_list pos:line="107" pos:column="41">(<argument><expr><name pos:line="107" pos:column="42">argv<pos:position pos:line="107" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="48">delete_tag<pos:position pos:line="107" pos:column="58"/></name></expr></argument>)<pos:position pos:line="107" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="60"/></return></block></then></if>
	<if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><name pos:line="108" pos:column="13">cmdmode<pos:position pos:line="108" pos:column="20"/></name> <operator pos:line="108" pos:column="21">==<pos:position pos:line="108" pos:column="23"/></operator> <literal type="char" pos:line="108" pos:column="24">'v'<pos:position pos:line="108" pos:column="27"/></literal></expr>)<pos:position pos:line="108" pos:column="28"/></condition><then pos:line="108" pos:column="28">
		<block type="pseudo"><return pos:line="109" pos:column="17">return <expr><call><name pos:line="109" pos:column="24">for_each_tag_name<pos:position pos:line="109" pos:column="41"/></name><argument_list pos:line="109" pos:column="41">(<argument><expr><name pos:line="109" pos:column="42">argv<pos:position pos:line="109" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="48">verify_tag<pos:position pos:line="109" pos:column="58"/></name></expr></argument>)<pos:position pos:line="109" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="60"/></return></block></then></if>

	<if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">(<expr><name><name pos:line="111" pos:column="13">msg<pos:position pos:line="111" pos:column="16"/></name><operator pos:line="111" pos:column="16">.<pos:position pos:line="111" pos:column="17"/></operator><name pos:line="111" pos:column="17">given<pos:position pos:line="111" pos:column="22"/></name></name> <operator pos:line="111" pos:column="23">||<pos:position pos:line="111" pos:column="25"/></operator> <name pos:line="111" pos:column="26">msgfile<pos:position pos:line="111" pos:column="33"/></name></expr>)<pos:position pos:line="111" pos:column="34"/></condition><then pos:line="111" pos:column="34"> <block pos:line="111" pos:column="35">{
		<if pos:line="112" pos:column="17">if <condition pos:line="112" pos:column="20">(<expr><name><name pos:line="112" pos:column="21">msg<pos:position pos:line="112" pos:column="24"/></name><operator pos:line="112" pos:column="24">.<pos:position pos:line="112" pos:column="25"/></operator><name pos:line="112" pos:column="25">given<pos:position pos:line="112" pos:column="30"/></name></name> <operator pos:line="112" pos:column="31">&amp;&amp;<pos:position pos:line="112" pos:column="41"/></operator> <name pos:line="112" pos:column="34">msgfile<pos:position pos:line="112" pos:column="41"/></name></expr>)<pos:position pos:line="112" pos:column="42"/></condition><then pos:line="112" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="113" pos:column="25">die<pos:position pos:line="113" pos:column="28"/></name><argument_list pos:line="113" pos:column="28">(<argument><expr><call><name pos:line="113" pos:column="29">_<pos:position pos:line="113" pos:column="30"/></name><argument_list pos:line="113" pos:column="30">(<argument><expr><literal type="string" pos:line="113" pos:column="31">"only one -F or -m option is allowed."<pos:position pos:line="113" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="113" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="72"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="114" pos:column="17">annotate<pos:position pos:line="114" pos:column="25"/></name> <operator pos:line="114" pos:column="26">=<pos:position pos:line="114" pos:column="27"/></operator> <literal type="number" pos:line="114" pos:column="28">1<pos:position pos:line="114" pos:column="29"/></literal></expr>;<pos:position pos:line="114" pos:column="30"/></expr_stmt>
		<if pos:line="115" pos:column="17">if <condition pos:line="115" pos:column="20">(<expr><name><name pos:line="115" pos:column="21">msg<pos:position pos:line="115" pos:column="24"/></name><operator pos:line="115" pos:column="24">.<pos:position pos:line="115" pos:column="25"/></operator><name pos:line="115" pos:column="25">given<pos:position pos:line="115" pos:column="30"/></name></name></expr>)<pos:position pos:line="115" pos:column="31"/></condition><then pos:line="115" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="25">strbuf_addbuf<pos:position pos:line="116" pos:column="38"/></name><argument_list pos:line="116" pos:column="38">(<argument><expr><operator pos:line="116" pos:column="39">&amp;<pos:position pos:line="116" pos:column="44"/></operator><name pos:line="116" pos:column="40">buf<pos:position pos:line="116" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="116" pos:column="45">&amp;<pos:position pos:line="116" pos:column="50"/></operator><operator pos:line="116" pos:column="46">(<pos:position pos:line="116" pos:column="47"/></operator><name><name pos:line="116" pos:column="47">msg<pos:position pos:line="116" pos:column="50"/></name><operator pos:line="116" pos:column="50">.<pos:position pos:line="116" pos:column="51"/></operator><name pos:line="116" pos:column="51">buf<pos:position pos:line="116" pos:column="54"/></name></name><operator pos:line="116" pos:column="54">)<pos:position pos:line="116" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="116" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="57"/></expr_stmt></block></then>
		<else pos:line="117" pos:column="17">else <block pos:line="117" pos:column="22">{
			<if pos:line="118" pos:column="25">if <condition pos:line="118" pos:column="28">(<expr><operator pos:line="118" pos:column="29">!<pos:position pos:line="118" pos:column="30"/></operator><call><name pos:line="118" pos:column="30">strcmp<pos:position pos:line="118" pos:column="36"/></name><argument_list pos:line="118" pos:column="36">(<argument><expr><name pos:line="118" pos:column="37">msgfile<pos:position pos:line="118" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="46">"-"<pos:position pos:line="118" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="51"/></condition><then pos:line="118" pos:column="51"> <block pos:line="118" pos:column="52">{
				<if pos:line="119" pos:column="33">if <condition pos:line="119" pos:column="36">(<expr><call><name pos:line="119" pos:column="37">strbuf_read<pos:position pos:line="119" pos:column="48"/></name><argument_list pos:line="119" pos:column="48">(<argument><expr><operator pos:line="119" pos:column="49">&amp;<pos:position pos:line="119" pos:column="54"/></operator><name pos:line="119" pos:column="50">buf<pos:position pos:line="119" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="55">0<pos:position pos:line="119" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="58">1024<pos:position pos:line="119" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="63"/></argument_list></call> <operator pos:line="119" pos:column="64">&lt;<pos:position pos:line="119" pos:column="68"/></operator> <literal type="number" pos:line="119" pos:column="66">0<pos:position pos:line="119" pos:column="67"/></literal></expr>)<pos:position pos:line="119" pos:column="68"/></condition><then pos:line="119" pos:column="68">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="120" pos:column="41">die_errno<pos:position pos:line="120" pos:column="50"/></name><argument_list pos:line="120" pos:column="50">(<argument><expr><call><name pos:line="120" pos:column="51">_<pos:position pos:line="120" pos:column="52"/></name><argument_list pos:line="120" pos:column="52">(<argument><expr><literal type="string" pos:line="120" pos:column="53">"cannot read '%s'"<pos:position pos:line="120" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="120" pos:column="74">msgfile<pos:position pos:line="120" pos:column="81"/></name></expr></argument>)<pos:position pos:line="120" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="83"/></expr_stmt></block></then></if>
			}<pos:position pos:line="121" pos:column="26"/></block></then> <else pos:line="121" pos:column="27">else <block pos:line="121" pos:column="32">{
				<if pos:line="122" pos:column="33">if <condition pos:line="122" pos:column="36">(<expr><call><name pos:line="122" pos:column="37">strbuf_read_file<pos:position pos:line="122" pos:column="53"/></name><argument_list pos:line="122" pos:column="53">(<argument><expr><operator pos:line="122" pos:column="54">&amp;<pos:position pos:line="122" pos:column="59"/></operator><name pos:line="122" pos:column="55">buf<pos:position pos:line="122" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="60">msgfile<pos:position pos:line="122" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="69">1024<pos:position pos:line="122" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="74"/></argument_list></call> <operator pos:line="122" pos:column="75">&lt;<pos:position pos:line="122" pos:column="79"/></operator> <literal type="number" pos:line="122" pos:column="77">0<pos:position pos:line="122" pos:column="78"/></literal></expr>)<pos:position pos:line="122" pos:column="79"/></condition><then pos:line="122" pos:column="79">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="123" pos:column="41">die_errno<pos:position pos:line="123" pos:column="50"/></name><argument_list pos:line="123" pos:column="50">(<argument><expr><call><name pos:line="123" pos:column="51">_<pos:position pos:line="123" pos:column="52"/></name><argument_list pos:line="123" pos:column="52">(<argument><expr><literal type="string" pos:line="123" pos:column="53">"could not open or read '%s'"<pos:position pos:line="123" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="83"/></argument_list></call></expr></argument>,
						<argument><expr><name pos:line="124" pos:column="49">msgfile<pos:position pos:line="124" pos:column="56"/></name></expr></argument>)<pos:position pos:line="124" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="58"/></expr_stmt></block></then></if>
			}<pos:position pos:line="125" pos:column="26"/></block></else></if>
		}<pos:position pos:line="126" pos:column="18"/></block></else></if>
	}<pos:position pos:line="127" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="129" pos:column="9">tag<pos:position pos:line="129" pos:column="12"/></name> <operator pos:line="129" pos:column="13">=<pos:position pos:line="129" pos:column="14"/></operator> <name><name pos:line="129" pos:column="15">argv<pos:position pos:line="129" pos:column="19"/></name><index pos:line="129" pos:column="19">[<expr><literal type="number" pos:line="129" pos:column="20">0<pos:position pos:line="129" pos:column="21"/></literal></expr>]<pos:position pos:line="129" pos:column="22"/></index></name></expr>;<pos:position pos:line="129" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><name pos:line="131" pos:column="9">object_ref<pos:position pos:line="131" pos:column="19"/></name> <operator pos:line="131" pos:column="20">=<pos:position pos:line="131" pos:column="21"/></operator> <ternary><condition><expr><name pos:line="131" pos:column="22">argc<pos:position pos:line="131" pos:column="26"/></name> <operator pos:line="131" pos:column="27">==<pos:position pos:line="131" pos:column="29"/></operator> <literal type="number" pos:line="131" pos:column="30">2<pos:position pos:line="131" pos:column="31"/></literal></expr> ?<pos:position pos:line="131" pos:column="33"/></condition><then pos:line="131" pos:column="33"> <expr><name><name pos:line="131" pos:column="34">argv<pos:position pos:line="131" pos:column="38"/></name><index pos:line="131" pos:column="38">[<expr><literal type="number" pos:line="131" pos:column="39">1<pos:position pos:line="131" pos:column="40"/></literal></expr>]<pos:position pos:line="131" pos:column="41"/></index></name></expr> <pos:position pos:line="131" pos:column="42"/></then><else pos:line="131" pos:column="42">: <expr><literal type="string" pos:line="131" pos:column="44">"HEAD"<pos:position pos:line="131" pos:column="50"/></literal></expr></else></ternary></expr>;<pos:position pos:line="131" pos:column="51"/></expr_stmt>
	<if pos:line="132" pos:column="9">if <condition pos:line="132" pos:column="12">(<expr><name pos:line="132" pos:column="13">argc<pos:position pos:line="132" pos:column="17"/></name> <operator pos:line="132" pos:column="18">&gt;<pos:position pos:line="132" pos:column="22"/></operator> <literal type="number" pos:line="132" pos:column="20">2<pos:position pos:line="132" pos:column="21"/></literal></expr>)<pos:position pos:line="132" pos:column="22"/></condition><then pos:line="132" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="133" pos:column="17">die<pos:position pos:line="133" pos:column="20"/></name><argument_list pos:line="133" pos:column="20">(<argument><expr><call><name pos:line="133" pos:column="21">_<pos:position pos:line="133" pos:column="22"/></name><argument_list pos:line="133" pos:column="22">(<argument><expr><literal type="string" pos:line="133" pos:column="23">"too many params"<pos:position pos:line="133" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="133" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="43"/></expr_stmt></block></then></if>

	<if pos:line="135" pos:column="9">if <condition pos:line="135" pos:column="12">(<expr><call><name pos:line="135" pos:column="13">get_sha1<pos:position pos:line="135" pos:column="21"/></name><argument_list pos:line="135" pos:column="21">(<argument><expr><name pos:line="135" pos:column="22">object_ref<pos:position pos:line="135" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="34">object<pos:position pos:line="135" pos:column="40"/></name></expr></argument>)<pos:position pos:line="135" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="135" pos:column="42"/></condition><then pos:line="135" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="136" pos:column="17">die<pos:position pos:line="136" pos:column="20"/></name><argument_list pos:line="136" pos:column="20">(<argument><expr><call><name pos:line="136" pos:column="21">_<pos:position pos:line="136" pos:column="22"/></name><argument_list pos:line="136" pos:column="22">(<argument><expr><literal type="string" pos:line="136" pos:column="23">"Failed to resolve '%s' as a valid ref."<pos:position pos:line="136" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="136" pos:column="66">object_ref<pos:position pos:line="136" pos:column="76"/></name></expr></argument>)<pos:position pos:line="136" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="78"/></expr_stmt></block></then></if>

	<if pos:line="138" pos:column="9">if <condition pos:line="138" pos:column="12">(<expr><call><name pos:line="138" pos:column="13">strbuf_check_tag_ref<pos:position pos:line="138" pos:column="33"/></name><argument_list pos:line="138" pos:column="33">(<argument><expr><operator pos:line="138" pos:column="34">&amp;<pos:position pos:line="138" pos:column="39"/></operator><name pos:line="138" pos:column="35">ref<pos:position pos:line="138" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="40">tag<pos:position pos:line="138" pos:column="43"/></name></expr></argument>)<pos:position pos:line="138" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="138" pos:column="45"/></condition><then pos:line="138" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="139" pos:column="17">die<pos:position pos:line="139" pos:column="20"/></name><argument_list pos:line="139" pos:column="20">(<argument><expr><call><name pos:line="139" pos:column="21">_<pos:position pos:line="139" pos:column="22"/></name><argument_list pos:line="139" pos:column="22">(<argument><expr><literal type="string" pos:line="139" pos:column="23">"'%s' is not a valid tag name."<pos:position pos:line="139" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="139" pos:column="57">tag<pos:position pos:line="139" pos:column="60"/></name></expr></argument>)<pos:position pos:line="139" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="62"/></expr_stmt></block></then></if>

	<if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><call><name pos:line="141" pos:column="13">read_ref<pos:position pos:line="141" pos:column="21"/></name><argument_list pos:line="141" pos:column="21">(<argument><expr><name><name pos:line="141" pos:column="22">ref<pos:position pos:line="141" pos:column="25"/></name><operator pos:line="141" pos:column="25">.<pos:position pos:line="141" pos:column="26"/></operator><name pos:line="141" pos:column="26">buf<pos:position pos:line="141" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="31">prev<pos:position pos:line="141" pos:column="35"/></name></expr></argument>)<pos:position pos:line="141" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="141" pos:column="37"/></condition><then pos:line="141" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="142" pos:column="17">hashclr<pos:position pos:line="142" pos:column="24"/></name><argument_list pos:line="142" pos:column="24">(<argument><expr><name pos:line="142" pos:column="25">prev<pos:position pos:line="142" pos:column="29"/></name></expr></argument>)<pos:position pos:line="142" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="31"/></expr_stmt></block></then>
	<elseif pos:line="143" pos:column="9">else <if pos:line="143" pos:column="14">if <condition pos:line="143" pos:column="17">(<expr><operator pos:line="143" pos:column="18">!<pos:position pos:line="143" pos:column="19"/></operator><name pos:line="143" pos:column="19">force<pos:position pos:line="143" pos:column="24"/></name></expr>)<pos:position pos:line="143" pos:column="25"/></condition><then pos:line="143" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="144" pos:column="17">die<pos:position pos:line="144" pos:column="20"/></name><argument_list pos:line="144" pos:column="20">(<argument><expr><call><name pos:line="144" pos:column="21">_<pos:position pos:line="144" pos:column="22"/></name><argument_list pos:line="144" pos:column="22">(<argument><expr><literal type="string" pos:line="144" pos:column="23">"tag '%s' already exists"<pos:position pos:line="144" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="144" pos:column="51">tag<pos:position pos:line="144" pos:column="54"/></name></expr></argument>)<pos:position pos:line="144" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="56"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><name><name pos:line="146" pos:column="9">opt<pos:position pos:line="146" pos:column="12"/></name><operator pos:line="146" pos:column="12">.<pos:position pos:line="146" pos:column="13"/></operator><name pos:line="146" pos:column="13">message_given<pos:position pos:line="146" pos:column="26"/></name></name> <operator pos:line="146" pos:column="27">=<pos:position pos:line="146" pos:column="28"/></operator> <name><name pos:line="146" pos:column="29">msg<pos:position pos:line="146" pos:column="32"/></name><operator pos:line="146" pos:column="32">.<pos:position pos:line="146" pos:column="33"/></operator><name pos:line="146" pos:column="33">given<pos:position pos:line="146" pos:column="38"/></name></name> <operator pos:line="146" pos:column="39">||<pos:position pos:line="146" pos:column="41"/></operator> <name pos:line="146" pos:column="42">msgfile<pos:position pos:line="146" pos:column="49"/></name></expr>;<pos:position pos:line="146" pos:column="50"/></expr_stmt>

	<if pos:line="148" pos:column="9">if <condition pos:line="148" pos:column="12">(<expr><operator pos:line="148" pos:column="13">!<pos:position pos:line="148" pos:column="14"/></operator><name pos:line="148" pos:column="14">cleanup_arg<pos:position pos:line="148" pos:column="25"/></name> <operator pos:line="148" pos:column="26">||<pos:position pos:line="148" pos:column="28"/></operator> <operator pos:line="148" pos:column="29">!<pos:position pos:line="148" pos:column="30"/></operator><call><name pos:line="148" pos:column="30">strcmp<pos:position pos:line="148" pos:column="36"/></name><argument_list pos:line="148" pos:column="36">(<argument><expr><name pos:line="148" pos:column="37">cleanup_arg<pos:position pos:line="148" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="50">"strip"<pos:position pos:line="148" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="148" pos:column="59"/></condition><then pos:line="148" pos:column="59">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="149" pos:column="17">opt<pos:position pos:line="149" pos:column="20"/></name><operator pos:line="149" pos:column="20">.<pos:position pos:line="149" pos:column="21"/></operator><name pos:line="149" pos:column="21">cleanup_mode<pos:position pos:line="149" pos:column="33"/></name></name> <operator pos:line="149" pos:column="34">=<pos:position pos:line="149" pos:column="35"/></operator> <name pos:line="149" pos:column="36">CLEANUP_ALL<pos:position pos:line="149" pos:column="47"/></name></expr>;<pos:position pos:line="149" pos:column="48"/></expr_stmt></block></then>
	<elseif pos:line="150" pos:column="9">else <if pos:line="150" pos:column="14">if <condition pos:line="150" pos:column="17">(<expr><operator pos:line="150" pos:column="18">!<pos:position pos:line="150" pos:column="19"/></operator><call><name pos:line="150" pos:column="19">strcmp<pos:position pos:line="150" pos:column="25"/></name><argument_list pos:line="150" pos:column="25">(<argument><expr><name pos:line="150" pos:column="26">cleanup_arg<pos:position pos:line="150" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="39">"verbatim"<pos:position pos:line="150" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="150" pos:column="51"/></condition><then pos:line="150" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="151" pos:column="17">opt<pos:position pos:line="151" pos:column="20"/></name><operator pos:line="151" pos:column="20">.<pos:position pos:line="151" pos:column="21"/></operator><name pos:line="151" pos:column="21">cleanup_mode<pos:position pos:line="151" pos:column="33"/></name></name> <operator pos:line="151" pos:column="34">=<pos:position pos:line="151" pos:column="35"/></operator> <name pos:line="151" pos:column="36">CLEANUP_NONE<pos:position pos:line="151" pos:column="48"/></name></expr>;<pos:position pos:line="151" pos:column="49"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="152" pos:column="9">else <if pos:line="152" pos:column="14">if <condition pos:line="152" pos:column="17">(<expr><operator pos:line="152" pos:column="18">!<pos:position pos:line="152" pos:column="19"/></operator><call><name pos:line="152" pos:column="19">strcmp<pos:position pos:line="152" pos:column="25"/></name><argument_list pos:line="152" pos:column="25">(<argument><expr><name pos:line="152" pos:column="26">cleanup_arg<pos:position pos:line="152" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="39">"whitespace"<pos:position pos:line="152" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="152" pos:column="53"/></condition><then pos:line="152" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="153" pos:column="17">opt<pos:position pos:line="153" pos:column="20"/></name><operator pos:line="153" pos:column="20">.<pos:position pos:line="153" pos:column="21"/></operator><name pos:line="153" pos:column="21">cleanup_mode<pos:position pos:line="153" pos:column="33"/></name></name> <operator pos:line="153" pos:column="34">=<pos:position pos:line="153" pos:column="35"/></operator> <name pos:line="153" pos:column="36">CLEANUP_SPACE<pos:position pos:line="153" pos:column="49"/></name></expr>;<pos:position pos:line="153" pos:column="50"/></expr_stmt></block></then></if></elseif>
	<else pos:line="154" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="155" pos:column="17">die<pos:position pos:line="155" pos:column="20"/></name><argument_list pos:line="155" pos:column="20">(<argument><expr><call><name pos:line="155" pos:column="21">_<pos:position pos:line="155" pos:column="22"/></name><argument_list pos:line="155" pos:column="22">(<argument><expr><literal type="string" pos:line="155" pos:column="23">"Invalid cleanup mode %s"<pos:position pos:line="155" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="155" pos:column="51">cleanup_arg<pos:position pos:line="155" pos:column="62"/></name></expr></argument>)<pos:position pos:line="155" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="64"/></expr_stmt></block></else></if>

	<if pos:line="157" pos:column="9">if <condition pos:line="157" pos:column="12">(<expr><name pos:line="157" pos:column="13">annotate<pos:position pos:line="157" pos:column="21"/></name></expr>)<pos:position pos:line="157" pos:column="22"/></condition><then pos:line="157" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="158" pos:column="17">create_tag<pos:position pos:line="158" pos:column="27"/></name><argument_list pos:line="158" pos:column="27">(<argument><expr><name pos:line="158" pos:column="28">object<pos:position pos:line="158" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="36">tag<pos:position pos:line="158" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="158" pos:column="41">&amp;<pos:position pos:line="158" pos:column="46"/></operator><name pos:line="158" pos:column="42">buf<pos:position pos:line="158" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="158" pos:column="47">&amp;<pos:position pos:line="158" pos:column="52"/></operator><name pos:line="158" pos:column="48">opt<pos:position pos:line="158" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="53">prev<pos:position pos:line="158" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="59">object<pos:position pos:line="158" pos:column="65"/></name></expr></argument>)<pos:position pos:line="158" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="67"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="160" pos:column="9">lock<pos:position pos:line="160" pos:column="13"/></name> <operator pos:line="160" pos:column="14">=<pos:position pos:line="160" pos:column="15"/></operator> <call><name pos:line="160" pos:column="16">lock_any_ref_for_update<pos:position pos:line="160" pos:column="39"/></name><argument_list pos:line="160" pos:column="39">(<argument><expr><name><name pos:line="160" pos:column="40">ref<pos:position pos:line="160" pos:column="43"/></name><operator pos:line="160" pos:column="43">.<pos:position pos:line="160" pos:column="44"/></operator><name pos:line="160" pos:column="44">buf<pos:position pos:line="160" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="49">prev<pos:position pos:line="160" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="160" pos:column="55">0<pos:position pos:line="160" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="160" pos:column="58">NULL<pos:position pos:line="160" pos:column="62"/></name></expr></argument>)<pos:position pos:line="160" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="64"/></expr_stmt>
	<if pos:line="161" pos:column="9">if <condition pos:line="161" pos:column="12">(<expr><operator pos:line="161" pos:column="13">!<pos:position pos:line="161" pos:column="14"/></operator><name pos:line="161" pos:column="14">lock<pos:position pos:line="161" pos:column="18"/></name></expr>)<pos:position pos:line="161" pos:column="19"/></condition><then pos:line="161" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="162" pos:column="17">die<pos:position pos:line="162" pos:column="20"/></name><argument_list pos:line="162" pos:column="20">(<argument><expr><call><name pos:line="162" pos:column="21">_<pos:position pos:line="162" pos:column="22"/></name><argument_list pos:line="162" pos:column="22">(<argument><expr><literal type="string" pos:line="162" pos:column="23">"%s: cannot lock the ref"<pos:position pos:line="162" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="162" pos:column="51">ref<pos:position pos:line="162" pos:column="54"/></name><operator pos:line="162" pos:column="54">.<pos:position pos:line="162" pos:column="55"/></operator><name pos:line="162" pos:column="55">buf<pos:position pos:line="162" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="162" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="60"/></expr_stmt></block></then></if>
	<if pos:line="163" pos:column="9">if <condition pos:line="163" pos:column="12">(<expr><call><name pos:line="163" pos:column="13">write_ref_sha1<pos:position pos:line="163" pos:column="27"/></name><argument_list pos:line="163" pos:column="27">(<argument><expr><name pos:line="163" pos:column="28">lock<pos:position pos:line="163" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="34">object<pos:position pos:line="163" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="42">NULL<pos:position pos:line="163" pos:column="46"/></name></expr></argument>)<pos:position pos:line="163" pos:column="47"/></argument_list></call> <operator pos:line="163" pos:column="48">&lt;<pos:position pos:line="163" pos:column="52"/></operator> <literal type="number" pos:line="163" pos:column="50">0<pos:position pos:line="163" pos:column="51"/></literal></expr>)<pos:position pos:line="163" pos:column="52"/></condition><then pos:line="163" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="164" pos:column="17">die<pos:position pos:line="164" pos:column="20"/></name><argument_list pos:line="164" pos:column="20">(<argument><expr><call><name pos:line="164" pos:column="21">_<pos:position pos:line="164" pos:column="22"/></name><argument_list pos:line="164" pos:column="22">(<argument><expr><literal type="string" pos:line="164" pos:column="23">"%s: cannot update the ref"<pos:position pos:line="164" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="164" pos:column="53">ref<pos:position pos:line="164" pos:column="56"/></name><operator pos:line="164" pos:column="56">.<pos:position pos:line="164" pos:column="57"/></operator><name pos:line="164" pos:column="57">buf<pos:position pos:line="164" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="164" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="62"/></expr_stmt></block></then></if>
	<if pos:line="165" pos:column="9">if <condition pos:line="165" pos:column="12">(<expr><name pos:line="165" pos:column="13">force<pos:position pos:line="165" pos:column="18"/></name> <operator pos:line="165" pos:column="19">&amp;&amp;<pos:position pos:line="165" pos:column="29"/></operator> <operator pos:line="165" pos:column="22">!<pos:position pos:line="165" pos:column="23"/></operator><call><name pos:line="165" pos:column="23">is_null_sha1<pos:position pos:line="165" pos:column="35"/></name><argument_list pos:line="165" pos:column="35">(<argument><expr><name pos:line="165" pos:column="36">prev<pos:position pos:line="165" pos:column="40"/></name></expr></argument>)<pos:position pos:line="165" pos:column="41"/></argument_list></call> <operator pos:line="165" pos:column="42">&amp;&amp;<pos:position pos:line="165" pos:column="52"/></operator> <call><name pos:line="165" pos:column="45">hashcmp<pos:position pos:line="165" pos:column="52"/></name><argument_list pos:line="165" pos:column="52">(<argument><expr><name pos:line="165" pos:column="53">prev<pos:position pos:line="165" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="59">object<pos:position pos:line="165" pos:column="65"/></name></expr></argument>)<pos:position pos:line="165" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="165" pos:column="67"/></condition><then pos:line="165" pos:column="67">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="166" pos:column="17">printf<pos:position pos:line="166" pos:column="23"/></name><argument_list pos:line="166" pos:column="23">(<argument><expr><call><name pos:line="166" pos:column="24">_<pos:position pos:line="166" pos:column="25"/></name><argument_list pos:line="166" pos:column="25">(<argument><expr><literal type="string" pos:line="166" pos:column="26">"Updated tag '%s' (was %s)\n"<pos:position pos:line="166" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="166" pos:column="58">tag<pos:position pos:line="166" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="166" pos:column="63">find_unique_abbrev<pos:position pos:line="166" pos:column="81"/></name><argument_list pos:line="166" pos:column="81">(<argument><expr><name pos:line="166" pos:column="82">prev<pos:position pos:line="166" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="88">DEFAULT_ABBREV<pos:position pos:line="166" pos:column="102"/></name></expr></argument>)<pos:position pos:line="166" pos:column="103"/></argument_list></call></expr></argument>)<pos:position pos:line="166" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="105"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="168" pos:column="9">strbuf_release<pos:position pos:line="168" pos:column="23"/></name><argument_list pos:line="168" pos:column="23">(<argument><expr><operator pos:line="168" pos:column="24">&amp;<pos:position pos:line="168" pos:column="29"/></operator><name pos:line="168" pos:column="25">buf<pos:position pos:line="168" pos:column="28"/></name></expr></argument>)<pos:position pos:line="168" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="169" pos:column="9">strbuf_release<pos:position pos:line="169" pos:column="23"/></name><argument_list pos:line="169" pos:column="23">(<argument><expr><operator pos:line="169" pos:column="24">&amp;<pos:position pos:line="169" pos:column="29"/></operator><name pos:line="169" pos:column="25">ref<pos:position pos:line="169" pos:column="28"/></name></expr></argument>)<pos:position pos:line="169" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="30"/></expr_stmt>
	<return pos:line="170" pos:column="9">return <expr><literal type="number" pos:line="170" pos:column="16">0<pos:position pos:line="170" pos:column="17"/></literal></expr>;<pos:position pos:line="170" pos:column="18"/></return>
}<pos:position pos:line="171" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_553_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">if_atom_handler<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">atom_value<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">atomv<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="55">struct<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">ref_formatting_state<pos:position pos:line="1" pos:column="82"/></name></name> <modifier pos:line="1" pos:column="83">*<pos:position pos:line="1" pos:column="84"/></modifier></type><name pos:line="1" pos:column="84">state<pos:position pos:line="1" pos:column="89"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="90"/></parameter_list>
<block pos:line="2" pos:column="1">{
	struct <expr_stmt><expr><name pos:line="3" pos:column="16">ref_formatting_stack<pos:position pos:line="3" pos:column="36"/></name> <operator pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></operator><operator pos:line="3" pos:column="38">new<pos:position pos:line="3" pos:column="41"/></operator></expr>;<pos:position pos:line="3" pos:column="42"/></expr_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">if_then_else<pos:position pos:line="4" pos:column="28"/></name></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">if_then_else<pos:position pos:line="4" pos:column="42"/></name> <init pos:line="4" pos:column="43">= <expr><call><name pos:line="4" pos:column="45">xcalloc<pos:position pos:line="4" pos:column="52"/></name><argument_list pos:line="4" pos:column="52">(<argument><expr><sizeof pos:line="4" pos:column="53">sizeof<argument_list pos:line="4" pos:column="59">(<argument><expr pos:line="4" pos:column="60">struct <name pos:line="4" pos:column="67">if_then_else<pos:position pos:line="4" pos:column="79"/></name></expr></argument>)<pos:position pos:line="4" pos:column="80"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="82">1<pos:position pos:line="4" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="84"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="85"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="6" pos:column="9">if_then_else<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">str<pos:position pos:line="6" pos:column="26"/></name></name> <operator pos:line="6" pos:column="27">=<pos:position pos:line="6" pos:column="28"/></operator> <name><name pos:line="6" pos:column="29">atomv<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="36">atom<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">-&gt;<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="42">u<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">.<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="44">if_then_else<pos:position pos:line="6" pos:column="56"/></name><operator pos:line="6" pos:column="56">.<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="57">str<pos:position pos:line="6" pos:column="60"/></name></name></expr>;<pos:position pos:line="6" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="7" pos:column="9">if_then_else<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">-&gt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">cmp_status<pos:position pos:line="7" pos:column="33"/></name></name> <operator pos:line="7" pos:column="34">=<pos:position pos:line="7" pos:column="35"/></operator> <name><name pos:line="7" pos:column="36">atomv<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">-&gt;<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="43">atom<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">-&gt;<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="49">u<pos:position pos:line="7" pos:column="50"/></name><operator pos:line="7" pos:column="50">.<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="51">if_then_else<pos:position pos:line="7" pos:column="63"/></name><operator pos:line="7" pos:column="63">.<pos:position pos:line="7" pos:column="64"/></operator><name pos:line="7" pos:column="64">cmp_status<pos:position pos:line="7" pos:column="74"/></name></name></expr>;<pos:position pos:line="7" pos:column="75"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">push_stack_element<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><operator pos:line="9" pos:column="28">&amp;<pos:position pos:line="9" pos:column="33"/></operator><name><name pos:line="9" pos:column="29">state<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">stack<pos:position pos:line="9" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="10" pos:column="9">new<pos:position pos:line="10" pos:column="12"/></operator> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <name><name pos:line="10" pos:column="15">state<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">stack<pos:position pos:line="10" pos:column="27"/></name></name></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="11" pos:column="9">new<pos:position pos:line="11" pos:column="12"/></operator><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">at_end<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">if_then_else_handler<pos:position pos:line="11" pos:column="43"/></name></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="12" pos:column="9">new<pos:position pos:line="12" pos:column="12"/></operator><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">at_end_data<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="28">if_then_else<pos:position pos:line="12" pos:column="40"/></name></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5285_git-2.7.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">commit<pos:position pos:line="1" pos:column="21"/></name></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">get_commit<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">rev_cmdline_entry<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">e<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">full_name<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<switch pos:line="3" pos:column="9">switch <condition pos:line="3" pos:column="16">(<expr><name><name pos:line="3" pos:column="17">e<pos:position pos:line="3" pos:column="18"/></name><operator pos:line="3" pos:column="18">-&gt;<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="20">item<pos:position pos:line="3" pos:column="24"/></name><operator pos:line="3" pos:column="24">-&gt;<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="26">type<pos:position pos:line="3" pos:column="30"/></name></name></expr>)<pos:position pos:line="3" pos:column="31"/></condition> <block pos:line="3" pos:column="32">{
	<case pos:line="4" pos:column="9">case <expr><name pos:line="4" pos:column="14">OBJ_COMMIT<pos:position pos:line="4" pos:column="24"/></name></expr>:<pos:position pos:line="4" pos:column="25"/></case>
		<return pos:line="5" pos:column="17">return <expr><operator pos:line="5" pos:column="24">(<pos:position pos:line="5" pos:column="25"/></operator>struct <name pos:line="5" pos:column="32">commit<pos:position pos:line="5" pos:column="38"/></name> <operator pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></operator><operator pos:line="5" pos:column="40">)<pos:position pos:line="5" pos:column="41"/></operator><name><name pos:line="5" pos:column="41">e<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">item<pos:position pos:line="5" pos:column="48"/></name></name></expr>;<pos:position pos:line="5" pos:column="49"/></return>
	<case pos:line="6" pos:column="9">case <expr><name pos:line="6" pos:column="14">OBJ_TAG<pos:position pos:line="6" pos:column="21"/></name></expr>:<pos:position pos:line="6" pos:column="22"/></case> <block pos:line="6" pos:column="23">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">tag<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">tag<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><operator pos:line="7" pos:column="35">(<pos:position pos:line="7" pos:column="36"/></operator>struct <name pos:line="7" pos:column="43">tag<pos:position pos:line="7" pos:column="46"/></name> <operator pos:line="7" pos:column="47">*<pos:position pos:line="7" pos:column="48"/></operator><operator pos:line="7" pos:column="48">)<pos:position pos:line="7" pos:column="49"/></operator><name><name pos:line="7" pos:column="49">e<pos:position pos:line="7" pos:column="50"/></name><operator pos:line="7" pos:column="50">-&gt;<pos:position pos:line="7" pos:column="55"/></operator><name pos:line="7" pos:column="52">item<pos:position pos:line="7" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="57"/></decl_stmt>

		<comment type="block" pos:line="9" pos:column="17">/* handle nested tags */</comment>
		<while pos:line="10" pos:column="17">while <condition pos:line="10" pos:column="23">(<expr><name pos:line="10" pos:column="24">tag<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">&amp;&amp;<pos:position pos:line="10" pos:column="38"/></operator> <name><name pos:line="10" pos:column="31">tag<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">object<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">.<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="43">type<pos:position pos:line="10" pos:column="47"/></name></name> <operator pos:line="10" pos:column="48">==<pos:position pos:line="10" pos:column="50"/></operator> <name pos:line="10" pos:column="51">OBJ_TAG<pos:position pos:line="10" pos:column="58"/></name></expr>)<pos:position pos:line="10" pos:column="59"/></condition> <block pos:line="10" pos:column="60">{
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">parse_object<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name><name pos:line="11" pos:column="38">tag<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">-&gt;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="43">object<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">.<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="50">oid<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">.<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="54">hash<pos:position pos:line="11" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="12" pos:column="25">string_list_append<pos:position pos:line="12" pos:column="43"/></name><argument_list pos:line="12" pos:column="43">(<argument><expr><operator pos:line="12" pos:column="44">&amp;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="45">extra_refs<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="57">full_name<pos:position pos:line="12" pos:column="66"/></name></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call><operator pos:line="12" pos:column="67">-&gt;<pos:position pos:line="12" pos:column="72"/></operator><name pos:line="12" pos:column="69">util<pos:position pos:line="12" pos:column="73"/></name> <operator pos:line="12" pos:column="74">=<pos:position pos:line="12" pos:column="75"/></operator> <name pos:line="12" pos:column="76">tag<pos:position pos:line="12" pos:column="79"/></name></expr>;<pos:position pos:line="12" pos:column="80"/></expr_stmt>
			<expr_stmt><expr><name pos:line="13" pos:column="25">tag<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <operator pos:line="13" pos:column="31">(<pos:position pos:line="13" pos:column="32"/></operator>struct <name pos:line="13" pos:column="39">tag<pos:position pos:line="13" pos:column="42"/></name> <operator pos:line="13" pos:column="43">*<pos:position pos:line="13" pos:column="44"/></operator><operator pos:line="13" pos:column="44">)<pos:position pos:line="13" pos:column="45"/></operator><name><name pos:line="13" pos:column="45">tag<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">-&gt;<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="50">tagged<pos:position pos:line="13" pos:column="56"/></name></name></expr>;<pos:position pos:line="13" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="14" pos:column="18"/></block></while>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">tag<pos:position pos:line="15" pos:column="25"/></name></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">die<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><literal type="string" pos:line="16" pos:column="29">"Tag %s points nowhere?"<pos:position pos:line="16" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="55">e<pos:position pos:line="16" pos:column="56"/></name><operator pos:line="16" pos:column="56">-&gt;<pos:position pos:line="16" pos:column="61"/></operator><name pos:line="16" pos:column="58">name<pos:position pos:line="16" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt></block></then></if>
		<return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator>struct <name pos:line="17" pos:column="32">commit<pos:position pos:line="17" pos:column="38"/></name> <operator pos:line="17" pos:column="39">*<pos:position pos:line="17" pos:column="40"/></operator><operator pos:line="17" pos:column="40">)<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="41">tag<pos:position pos:line="17" pos:column="44"/></name></expr>;<pos:position pos:line="17" pos:column="45"/></return>
		<break pos:line="18" pos:column="17">break;<pos:position pos:line="18" pos:column="23"/></break>
	}<pos:position pos:line="19" pos:column="10"/></block>
	<default pos:line="20" pos:column="9">default:<pos:position pos:line="20" pos:column="17"/></default>
		<return pos:line="21" pos:column="17">return <expr><name pos:line="21" pos:column="24">NULL<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></switch>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

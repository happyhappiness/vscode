<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5142_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">ref<pos:position pos:line="1" pos:column="18"/></name></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">get_ref_map<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">transport<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">transport<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
			       <parameter><decl><type><name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">refspec<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">refspecs<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">int<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">refspec_count<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="3" pos:column="32">int<pos:position pos:line="3" pos:column="35"/></name></type> <name pos:line="3" pos:column="36">tags<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="42">int<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">autotags<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="56"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">ref<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">rm<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">ref<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">ref_map<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><name pos:line="7" pos:column="31">NULL<pos:position pos:line="7" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">ref<pos:position pos:line="8" pos:column="19"/></name></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier><modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">tail<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><operator pos:line="8" pos:column="29">&amp;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="30">ref_map<pos:position pos:line="8" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="38"/></decl_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* opportunistically-updated references: */</comment>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">ref<pos:position pos:line="11" pos:column="19"/></name></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">orefs<pos:position pos:line="11" pos:column="26"/></name> <init pos:line="11" pos:column="27">= <expr><name pos:line="11" pos:column="29">NULL<pos:position pos:line="11" pos:column="33"/></name></expr></init></decl>, <modifier pos:line="11" pos:column="35">*<pos:position pos:line="11" pos:column="36"/></modifier><modifier pos:line="11" pos:column="36">*<pos:position pos:line="11" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="37">oref_tail<pos:position pos:line="11" pos:column="46"/></name> <init pos:line="11" pos:column="47">= <expr><operator pos:line="11" pos:column="49">&amp;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="50">orefs<pos:position pos:line="11" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="56"/></decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name><name pos:line="13" pos:column="15">struct<pos:position pos:line="13" pos:column="21"/></name> <name pos:line="13" pos:column="22">ref<pos:position pos:line="13" pos:column="25"/></name></name> <modifier pos:line="13" pos:column="26">*<pos:position pos:line="13" pos:column="27"/></modifier></type><name pos:line="13" pos:column="27">remote_refs<pos:position pos:line="13" pos:column="38"/></name> <init pos:line="13" pos:column="39">= <expr><call><name pos:line="13" pos:column="41">transport_get_remote_refs<pos:position pos:line="13" pos:column="66"/></name><argument_list pos:line="13" pos:column="66">(<argument><expr><name pos:line="13" pos:column="67">transport<pos:position pos:line="13" pos:column="76"/></name></expr></argument>)<pos:position pos:line="13" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="78"/></decl_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">refspec_count<pos:position pos:line="15" pos:column="26"/></name></expr>)<pos:position pos:line="15" pos:column="27"/></condition><then pos:line="15" pos:column="27"> <block pos:line="15" pos:column="28">{
		<decl_stmt><decl><type><name><name pos:line="16" pos:column="17">struct<pos:position pos:line="16" pos:column="23"/></name> <name pos:line="16" pos:column="24">refspec<pos:position pos:line="16" pos:column="31"/></name></name> <modifier pos:line="16" pos:column="32">*<pos:position pos:line="16" pos:column="33"/></modifier></type><name pos:line="16" pos:column="33">fetch_refspec<pos:position pos:line="16" pos:column="46"/></name></decl>;<pos:position pos:line="16" pos:column="47"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">int<pos:position pos:line="17" pos:column="20"/></name></type> <name pos:line="17" pos:column="21">fetch_refspec_nr<pos:position pos:line="17" pos:column="37"/></name></decl>;<pos:position pos:line="17" pos:column="38"/></decl_stmt>

		<for pos:line="19" pos:column="17">for <control pos:line="19" pos:column="21">(<init><expr><name pos:line="19" pos:column="22">i<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <literal type="number" pos:line="19" pos:column="26">0<pos:position pos:line="19" pos:column="27"/></literal></expr>;<pos:position pos:line="19" pos:column="28"/></init> <condition><expr><name pos:line="19" pos:column="29">i<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">&lt;<pos:position pos:line="19" pos:column="35"/></operator> <name pos:line="19" pos:column="33">refspec_count<pos:position pos:line="19" pos:column="46"/></name></expr>;<pos:position pos:line="19" pos:column="47"/></condition> <incr><expr><name pos:line="19" pos:column="48">i<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">++<pos:position pos:line="19" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="52"/></control> <block pos:line="19" pos:column="53">{
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">get_fetch_map<pos:position pos:line="20" pos:column="38"/></name><argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">remote_refs<pos:position pos:line="20" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="52">&amp;<pos:position pos:line="20" pos:column="57"/></operator><name><name pos:line="20" pos:column="53">refspecs<pos:position pos:line="20" pos:column="61"/></name><index pos:line="20" pos:column="61">[<expr><name pos:line="20" pos:column="62">i<pos:position pos:line="20" pos:column="63"/></name></expr>]<pos:position pos:line="20" pos:column="64"/></index></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="66">&amp;<pos:position pos:line="20" pos:column="71"/></operator><name pos:line="20" pos:column="67">tail<pos:position pos:line="20" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="73">0<pos:position pos:line="20" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="76"/></expr_stmt>
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><name><name pos:line="21" pos:column="29">refspecs<pos:position pos:line="21" pos:column="37"/></name><index pos:line="21" pos:column="37">[<expr><name pos:line="21" pos:column="38">i<pos:position pos:line="21" pos:column="39"/></name></expr>]<pos:position pos:line="21" pos:column="40"/></index></name><operator pos:line="21" pos:column="40">.<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">dst<pos:position pos:line="21" pos:column="44"/></name> <operator pos:line="21" pos:column="45">&amp;&amp;<pos:position pos:line="21" pos:column="55"/></operator> <name><name pos:line="21" pos:column="48">refspecs<pos:position pos:line="21" pos:column="56"/></name><index pos:line="21" pos:column="56">[<expr><name pos:line="21" pos:column="57">i<pos:position pos:line="21" pos:column="58"/></name></expr>]<pos:position pos:line="21" pos:column="59"/></index></name><operator pos:line="21" pos:column="59">.<pos:position pos:line="21" pos:column="60"/></operator><name><name pos:line="21" pos:column="60">dst<pos:position pos:line="21" pos:column="63"/></name><index pos:line="21" pos:column="63">[<expr><literal type="number" pos:line="21" pos:column="64">0<pos:position pos:line="21" pos:column="65"/></literal></expr>]<pos:position pos:line="21" pos:column="66"/></index></name></expr>)<pos:position pos:line="21" pos:column="67"/></condition><then pos:line="21" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="22" pos:column="33">*<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="34">autotags<pos:position pos:line="22" pos:column="42"/></name> <operator pos:line="22" pos:column="43">=<pos:position pos:line="22" pos:column="44"/></operator> <literal type="number" pos:line="22" pos:column="45">1<pos:position pos:line="22" pos:column="46"/></literal></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt></block></then></if>
		}<pos:position pos:line="23" pos:column="18"/></block></for>
		<comment type="block" pos:line="24" pos:column="17">/* Merge everything on the command line (but not --tags) */</comment>
		<for pos:line="25" pos:column="17">for <control pos:line="25" pos:column="21">(<init><expr><name pos:line="25" pos:column="22">rm<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">=<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">ref_map<pos:position pos:line="25" pos:column="34"/></name></expr>;<pos:position pos:line="25" pos:column="35"/></init> <condition><expr><name pos:line="25" pos:column="36">rm<pos:position pos:line="25" pos:column="38"/></name></expr>;<pos:position pos:line="25" pos:column="39"/></condition> <incr><expr><name pos:line="25" pos:column="40">rm<pos:position pos:line="25" pos:column="42"/></name> <operator pos:line="25" pos:column="43">=<pos:position pos:line="25" pos:column="44"/></operator> <name><name pos:line="25" pos:column="45">rm<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">-&gt;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="49">next<pos:position pos:line="25" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="25" pos:column="54"/></control>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="25">rm<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">fetch_head_status<pos:position pos:line="26" pos:column="46"/></name></name> <operator pos:line="26" pos:column="47">=<pos:position pos:line="26" pos:column="48"/></operator> <name pos:line="26" pos:column="49">FETCH_HEAD_MERGE<pos:position pos:line="26" pos:column="65"/></name></expr>;<pos:position pos:line="26" pos:column="66"/></expr_stmt></block></for>

		<comment type="block" pos:line="28" pos:column="17">/*
		 * For any refs that we happen to be fetching via
		 * command-line arguments, the destination ref might
		 * have been missing or have been different than the
		 * remote-tracking ref that would be derived from the
		 * configured refspec.  In these cases, we want to
		 * take the opportunity to update their configured
		 * remote-tracking reference.  However, we do not want
		 * to mention these entries in FETCH_HEAD at all, as
		 * they would simply be duplicates of existing
		 * entries, so we set them FETCH_HEAD_IGNORE below.
		 *
		 * We compute these entries now, based only on the
		 * refspecs specified on the command line.  But we add
		 * them to the list following the refspecs resulting
		 * from the tags option so that one of the latter,
		 * which has FETCH_HEAD_NOT_FOR_MERGE, is not removed
		 * by ref_remove_duplicates() in favor of one of these
		 * opportunistic entries with FETCH_HEAD_IGNORE.
		 */</comment>
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name pos:line="48" pos:column="21">refmap_array<pos:position pos:line="48" pos:column="33"/></name></expr>)<pos:position pos:line="48" pos:column="34"/></condition><then pos:line="48" pos:column="34"> <block pos:line="48" pos:column="35">{
			<expr_stmt><expr><name pos:line="49" pos:column="25">fetch_refspec<pos:position pos:line="49" pos:column="38"/></name> <operator pos:line="49" pos:column="39">=<pos:position pos:line="49" pos:column="40"/></operator> <call><name pos:line="49" pos:column="41">parse_fetch_refspec<pos:position pos:line="49" pos:column="60"/></name><argument_list pos:line="49" pos:column="60">(<argument><expr><name pos:line="49" pos:column="61">refmap_nr<pos:position pos:line="49" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="72">refmap_array<pos:position pos:line="49" pos:column="84"/></name></expr></argument>)<pos:position pos:line="49" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="86"/></expr_stmt>
			<expr_stmt><expr><name pos:line="50" pos:column="25">fetch_refspec_nr<pos:position pos:line="50" pos:column="41"/></name> <operator pos:line="50" pos:column="42">=<pos:position pos:line="50" pos:column="43"/></operator> <name pos:line="50" pos:column="44">refmap_nr<pos:position pos:line="50" pos:column="53"/></name></expr>;<pos:position pos:line="50" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="51" pos:column="18"/></block></then> <else pos:line="51" pos:column="19">else <block pos:line="51" pos:column="24">{
			<expr_stmt><expr><name pos:line="52" pos:column="25">fetch_refspec<pos:position pos:line="52" pos:column="38"/></name> <operator pos:line="52" pos:column="39">=<pos:position pos:line="52" pos:column="40"/></operator> <name><name pos:line="52" pos:column="41">transport<pos:position pos:line="52" pos:column="50"/></name><operator pos:line="52" pos:column="50">-&gt;<pos:position pos:line="52" pos:column="55"/></operator><name pos:line="52" pos:column="52">remote<pos:position pos:line="52" pos:column="58"/></name><operator pos:line="52" pos:column="58">-&gt;<pos:position pos:line="52" pos:column="63"/></operator><name pos:line="52" pos:column="60">fetch<pos:position pos:line="52" pos:column="65"/></name></name></expr>;<pos:position pos:line="52" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><name pos:line="53" pos:column="25">fetch_refspec_nr<pos:position pos:line="53" pos:column="41"/></name> <operator pos:line="53" pos:column="42">=<pos:position pos:line="53" pos:column="43"/></operator> <name><name pos:line="53" pos:column="44">transport<pos:position pos:line="53" pos:column="53"/></name><operator pos:line="53" pos:column="53">-&gt;<pos:position pos:line="53" pos:column="58"/></operator><name pos:line="53" pos:column="55">remote<pos:position pos:line="53" pos:column="61"/></name><operator pos:line="53" pos:column="61">-&gt;<pos:position pos:line="53" pos:column="66"/></operator><name pos:line="53" pos:column="63">fetch_refspec_nr<pos:position pos:line="53" pos:column="79"/></name></name></expr>;<pos:position pos:line="53" pos:column="80"/></expr_stmt>
		}<pos:position pos:line="54" pos:column="18"/></block></else></if>

		<for pos:line="56" pos:column="17">for <control pos:line="56" pos:column="21">(<init><expr><name pos:line="56" pos:column="22">i<pos:position pos:line="56" pos:column="23"/></name> <operator pos:line="56" pos:column="24">=<pos:position pos:line="56" pos:column="25"/></operator> <literal type="number" pos:line="56" pos:column="26">0<pos:position pos:line="56" pos:column="27"/></literal></expr>;<pos:position pos:line="56" pos:column="28"/></init> <condition><expr><name pos:line="56" pos:column="29">i<pos:position pos:line="56" pos:column="30"/></name> <operator pos:line="56" pos:column="31">&lt;<pos:position pos:line="56" pos:column="35"/></operator> <name pos:line="56" pos:column="33">fetch_refspec_nr<pos:position pos:line="56" pos:column="49"/></name></expr>;<pos:position pos:line="56" pos:column="50"/></condition> <incr><expr><name pos:line="56" pos:column="51">i<pos:position pos:line="56" pos:column="52"/></name><operator pos:line="56" pos:column="52">++<pos:position pos:line="56" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="56" pos:column="55"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="25">get_fetch_map<pos:position pos:line="57" pos:column="38"/></name><argument_list pos:line="57" pos:column="38">(<argument><expr><name pos:line="57" pos:column="39">ref_map<pos:position pos:line="57" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="48">&amp;<pos:position pos:line="57" pos:column="53"/></operator><name><name pos:line="57" pos:column="49">fetch_refspec<pos:position pos:line="57" pos:column="62"/></name><index pos:line="57" pos:column="62">[<expr><name pos:line="57" pos:column="63">i<pos:position pos:line="57" pos:column="64"/></name></expr>]<pos:position pos:line="57" pos:column="65"/></index></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="67">&amp;<pos:position pos:line="57" pos:column="72"/></operator><name pos:line="57" pos:column="68">oref_tail<pos:position pos:line="57" pos:column="77"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="79">1<pos:position pos:line="57" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="82"/></expr_stmt></block></for>

		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">tags<pos:position pos:line="59" pos:column="25"/></name> <operator pos:line="59" pos:column="26">==<pos:position pos:line="59" pos:column="28"/></operator> <name pos:line="59" pos:column="29">TAGS_SET<pos:position pos:line="59" pos:column="37"/></name></expr>)<pos:position pos:line="59" pos:column="38"/></condition><then pos:line="59" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="25">get_fetch_map<pos:position pos:line="60" pos:column="38"/></name><argument_list pos:line="60" pos:column="38">(<argument><expr><name pos:line="60" pos:column="39">remote_refs<pos:position pos:line="60" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="52">tag_refspec<pos:position pos:line="60" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="65">&amp;<pos:position pos:line="60" pos:column="70"/></operator><name pos:line="60" pos:column="66">tail<pos:position pos:line="60" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="72">0<pos:position pos:line="60" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="75"/></expr_stmt></block></then></if>
	}<pos:position pos:line="61" pos:column="10"/></block></then> <elseif pos:line="61" pos:column="11">else <if pos:line="61" pos:column="16">if <condition pos:line="61" pos:column="19">(<expr><name pos:line="61" pos:column="20">refmap_array<pos:position pos:line="61" pos:column="32"/></name></expr>)<pos:position pos:line="61" pos:column="33"/></condition><then pos:line="61" pos:column="33"> <block pos:line="61" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">die<pos:position pos:line="62" pos:column="20"/></name><argument_list pos:line="62" pos:column="20">(<argument><expr><literal type="string" pos:line="62" pos:column="21">"--refmap option is only meaningful with command-line refspec(s)."<pos:position pos:line="62" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="89"/></expr_stmt>
	}<pos:position pos:line="63" pos:column="10"/></block></then></if></elseif> <else pos:line="63" pos:column="11">else <block pos:line="63" pos:column="16">{
		<comment type="block" pos:line="64" pos:column="17">/* Use the defaults */</comment>
		<decl_stmt><decl><type><name><name pos:line="65" pos:column="17">struct<pos:position pos:line="65" pos:column="23"/></name> <name pos:line="65" pos:column="24">remote<pos:position pos:line="65" pos:column="30"/></name></name> <modifier pos:line="65" pos:column="31">*<pos:position pos:line="65" pos:column="32"/></modifier></type><name pos:line="65" pos:column="32">remote<pos:position pos:line="65" pos:column="38"/></name> <init pos:line="65" pos:column="39">= <expr><name><name pos:line="65" pos:column="41">transport<pos:position pos:line="65" pos:column="50"/></name><operator pos:line="65" pos:column="50">-&gt;<pos:position pos:line="65" pos:column="55"/></operator><name pos:line="65" pos:column="52">remote<pos:position pos:line="65" pos:column="58"/></name></name></expr></init></decl>;<pos:position pos:line="65" pos:column="59"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="66" pos:column="17">struct<pos:position pos:line="66" pos:column="23"/></name> <name pos:line="66" pos:column="24">branch<pos:position pos:line="66" pos:column="30"/></name></name> <modifier pos:line="66" pos:column="31">*<pos:position pos:line="66" pos:column="32"/></modifier></type><name pos:line="66" pos:column="32">branch<pos:position pos:line="66" pos:column="38"/></name> <init pos:line="66" pos:column="39">= <expr><call><name pos:line="66" pos:column="41">branch_get<pos:position pos:line="66" pos:column="51"/></name><argument_list pos:line="66" pos:column="51">(<argument><expr><name pos:line="66" pos:column="52">NULL<pos:position pos:line="66" pos:column="56"/></name></expr></argument>)<pos:position pos:line="66" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="66" pos:column="58"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="67" pos:column="17">int<pos:position pos:line="67" pos:column="20"/></name></type> <name pos:line="67" pos:column="21">has_merge<pos:position pos:line="67" pos:column="30"/></name> <init pos:line="67" pos:column="31">= <expr><call><name pos:line="67" pos:column="33">branch_has_merge_config<pos:position pos:line="67" pos:column="56"/></name><argument_list pos:line="67" pos:column="56">(<argument><expr><name pos:line="67" pos:column="57">branch<pos:position pos:line="67" pos:column="63"/></name></expr></argument>)<pos:position pos:line="67" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="67" pos:column="65"/></decl_stmt>
		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name pos:line="68" pos:column="21">remote<pos:position pos:line="68" pos:column="27"/></name> <operator pos:line="68" pos:column="28">&amp;&amp;<pos:position pos:line="68" pos:column="38"/></operator>
		    <operator pos:line="69" pos:column="21">(<pos:position pos:line="69" pos:column="22"/></operator><name><name pos:line="69" pos:column="22">remote<pos:position pos:line="69" pos:column="28"/></name><operator pos:line="69" pos:column="28">-&gt;<pos:position pos:line="69" pos:column="33"/></operator><name pos:line="69" pos:column="30">fetch_refspec_nr<pos:position pos:line="69" pos:column="46"/></name></name> <operator pos:line="69" pos:column="47">||<pos:position pos:line="69" pos:column="49"/></operator>
		     <comment type="block" pos:line="70" pos:column="22">/* Note: has_merge implies non-NULL branch-&gt;remote_name */</comment>
		     <operator pos:line="71" pos:column="22">(<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="23">has_merge<pos:position pos:line="71" pos:column="32"/></name> <operator pos:line="71" pos:column="33">&amp;&amp;<pos:position pos:line="71" pos:column="43"/></operator> <operator pos:line="71" pos:column="36">!<pos:position pos:line="71" pos:column="37"/></operator><call><name pos:line="71" pos:column="37">strcmp<pos:position pos:line="71" pos:column="43"/></name><argument_list pos:line="71" pos:column="43">(<argument><expr><name><name pos:line="71" pos:column="44">branch<pos:position pos:line="71" pos:column="50"/></name><operator pos:line="71" pos:column="50">-&gt;<pos:position pos:line="71" pos:column="55"/></operator><name pos:line="71" pos:column="52">remote_name<pos:position pos:line="71" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="65">remote<pos:position pos:line="71" pos:column="71"/></name><operator pos:line="71" pos:column="71">-&gt;<pos:position pos:line="71" pos:column="76"/></operator><name pos:line="71" pos:column="73">name<pos:position pos:line="71" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="78"/></argument_list></call><operator pos:line="71" pos:column="78">)<pos:position pos:line="71" pos:column="79"/></operator><operator pos:line="71" pos:column="79">)<pos:position pos:line="71" pos:column="80"/></operator></expr>)<pos:position pos:line="71" pos:column="81"/></condition><then pos:line="71" pos:column="81"> <block pos:line="71" pos:column="82">{
			<for pos:line="72" pos:column="25">for <control pos:line="72" pos:column="29">(<init><expr><name pos:line="72" pos:column="30">i<pos:position pos:line="72" pos:column="31"/></name> <operator pos:line="72" pos:column="32">=<pos:position pos:line="72" pos:column="33"/></operator> <literal type="number" pos:line="72" pos:column="34">0<pos:position pos:line="72" pos:column="35"/></literal></expr>;<pos:position pos:line="72" pos:column="36"/></init> <condition><expr><name pos:line="72" pos:column="37">i<pos:position pos:line="72" pos:column="38"/></name> <operator pos:line="72" pos:column="39">&lt;<pos:position pos:line="72" pos:column="43"/></operator> <name><name pos:line="72" pos:column="41">remote<pos:position pos:line="72" pos:column="47"/></name><operator pos:line="72" pos:column="47">-&gt;<pos:position pos:line="72" pos:column="52"/></operator><name pos:line="72" pos:column="49">fetch_refspec_nr<pos:position pos:line="72" pos:column="65"/></name></name></expr>;<pos:position pos:line="72" pos:column="66"/></condition> <incr><expr><name pos:line="72" pos:column="67">i<pos:position pos:line="72" pos:column="68"/></name><operator pos:line="72" pos:column="68">++<pos:position pos:line="72" pos:column="70"/></operator></expr></incr>)<pos:position pos:line="72" pos:column="71"/></control> <block pos:line="72" pos:column="72">{
				<expr_stmt><expr><call><name pos:line="73" pos:column="33">get_fetch_map<pos:position pos:line="73" pos:column="46"/></name><argument_list pos:line="73" pos:column="46">(<argument><expr><name pos:line="73" pos:column="47">remote_refs<pos:position pos:line="73" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="60">&amp;<pos:position pos:line="73" pos:column="65"/></operator><name><name pos:line="73" pos:column="61">remote<pos:position pos:line="73" pos:column="67"/></name><operator pos:line="73" pos:column="67">-&gt;<pos:position pos:line="73" pos:column="72"/></operator><name pos:line="73" pos:column="69">fetch<pos:position pos:line="73" pos:column="74"/></name><index pos:line="73" pos:column="74">[<expr><name pos:line="73" pos:column="75">i<pos:position pos:line="73" pos:column="76"/></name></expr>]<pos:position pos:line="73" pos:column="77"/></index></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="79">&amp;<pos:position pos:line="73" pos:column="84"/></operator><name pos:line="73" pos:column="80">tail<pos:position pos:line="73" pos:column="84"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="86">0<pos:position pos:line="73" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="89"/></expr_stmt>
				<if pos:line="74" pos:column="33">if <condition pos:line="74" pos:column="36">(<expr><name><name pos:line="74" pos:column="37">remote<pos:position pos:line="74" pos:column="43"/></name><operator pos:line="74" pos:column="43">-&gt;<pos:position pos:line="74" pos:column="48"/></operator><name pos:line="74" pos:column="45">fetch<pos:position pos:line="74" pos:column="50"/></name><index pos:line="74" pos:column="50">[<expr><name pos:line="74" pos:column="51">i<pos:position pos:line="74" pos:column="52"/></name></expr>]<pos:position pos:line="74" pos:column="53"/></index></name><operator pos:line="74" pos:column="53">.<pos:position pos:line="74" pos:column="54"/></operator><name pos:line="74" pos:column="54">dst<pos:position pos:line="74" pos:column="57"/></name> <operator pos:line="74" pos:column="58">&amp;&amp;<pos:position pos:line="74" pos:column="68"/></operator>
				    <name><name pos:line="75" pos:column="37">remote<pos:position pos:line="75" pos:column="43"/></name><operator pos:line="75" pos:column="43">-&gt;<pos:position pos:line="75" pos:column="48"/></operator><name pos:line="75" pos:column="45">fetch<pos:position pos:line="75" pos:column="50"/></name><index pos:line="75" pos:column="50">[<expr><name pos:line="75" pos:column="51">i<pos:position pos:line="75" pos:column="52"/></name></expr>]<pos:position pos:line="75" pos:column="53"/></index></name><operator pos:line="75" pos:column="53">.<pos:position pos:line="75" pos:column="54"/></operator><name><name pos:line="75" pos:column="54">dst<pos:position pos:line="75" pos:column="57"/></name><index pos:line="75" pos:column="57">[<expr><literal type="number" pos:line="75" pos:column="58">0<pos:position pos:line="75" pos:column="59"/></literal></expr>]<pos:position pos:line="75" pos:column="60"/></index></name></expr>)<pos:position pos:line="75" pos:column="61"/></condition><then pos:line="75" pos:column="61">
					<block type="pseudo"><expr_stmt><expr><operator pos:line="76" pos:column="41">*<pos:position pos:line="76" pos:column="42"/></operator><name pos:line="76" pos:column="42">autotags<pos:position pos:line="76" pos:column="50"/></name> <operator pos:line="76" pos:column="51">=<pos:position pos:line="76" pos:column="52"/></operator> <literal type="number" pos:line="76" pos:column="53">1<pos:position pos:line="76" pos:column="54"/></literal></expr>;<pos:position pos:line="76" pos:column="55"/></expr_stmt></block></then></if>
				<if pos:line="77" pos:column="33">if <condition pos:line="77" pos:column="36">(<expr><operator pos:line="77" pos:column="37">!<pos:position pos:line="77" pos:column="38"/></operator><name pos:line="77" pos:column="38">i<pos:position pos:line="77" pos:column="39"/></name> <operator pos:line="77" pos:column="40">&amp;&amp;<pos:position pos:line="77" pos:column="50"/></operator> <operator pos:line="77" pos:column="43">!<pos:position pos:line="77" pos:column="44"/></operator><name pos:line="77" pos:column="44">has_merge<pos:position pos:line="77" pos:column="53"/></name> <operator pos:line="77" pos:column="54">&amp;&amp;<pos:position pos:line="77" pos:column="64"/></operator> <name pos:line="77" pos:column="57">ref_map<pos:position pos:line="77" pos:column="64"/></name> <operator pos:line="77" pos:column="65">&amp;&amp;<pos:position pos:line="77" pos:column="75"/></operator>
				    <operator pos:line="78" pos:column="37">!<pos:position pos:line="78" pos:column="38"/></operator><name><name pos:line="78" pos:column="38">remote<pos:position pos:line="78" pos:column="44"/></name><operator pos:line="78" pos:column="44">-&gt;<pos:position pos:line="78" pos:column="49"/></operator><name pos:line="78" pos:column="46">fetch<pos:position pos:line="78" pos:column="51"/></name><index pos:line="78" pos:column="51">[<expr><literal type="number" pos:line="78" pos:column="52">0<pos:position pos:line="78" pos:column="53"/></literal></expr>]<pos:position pos:line="78" pos:column="54"/></index></name><operator pos:line="78" pos:column="54">.<pos:position pos:line="78" pos:column="55"/></operator><name pos:line="78" pos:column="55">pattern<pos:position pos:line="78" pos:column="62"/></name></expr>)<pos:position pos:line="78" pos:column="63"/></condition><then pos:line="78" pos:column="63">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="79" pos:column="41">ref_map<pos:position pos:line="79" pos:column="48"/></name><operator pos:line="79" pos:column="48">-&gt;<pos:position pos:line="79" pos:column="53"/></operator><name pos:line="79" pos:column="50">fetch_head_status<pos:position pos:line="79" pos:column="67"/></name></name> <operator pos:line="79" pos:column="68">=<pos:position pos:line="79" pos:column="69"/></operator> <name pos:line="79" pos:column="70">FETCH_HEAD_MERGE<pos:position pos:line="79" pos:column="86"/></name></expr>;<pos:position pos:line="79" pos:column="87"/></expr_stmt></block></then></if>
			}<pos:position pos:line="80" pos:column="26"/></block></for>
			<comment type="block" pos:line="81" pos:column="25">/*
			 * if the remote we're fetching from is the same
			 * as given in branch.&lt;name&gt;.remote, we add the
			 * ref given in branch.&lt;name&gt;.merge, too.
			 *
			 * Note: has_merge implies non-NULL branch-&gt;remote_name
			 */</comment>
			<if pos:line="88" pos:column="25">if <condition pos:line="88" pos:column="28">(<expr><name pos:line="88" pos:column="29">has_merge<pos:position pos:line="88" pos:column="38"/></name> <operator pos:line="88" pos:column="39">&amp;&amp;<pos:position pos:line="88" pos:column="49"/></operator>
			    <operator pos:line="89" pos:column="29">!<pos:position pos:line="89" pos:column="30"/></operator><call><name pos:line="89" pos:column="30">strcmp<pos:position pos:line="89" pos:column="36"/></name><argument_list pos:line="89" pos:column="36">(<argument><expr><name><name pos:line="89" pos:column="37">branch<pos:position pos:line="89" pos:column="43"/></name><operator pos:line="89" pos:column="43">-&gt;<pos:position pos:line="89" pos:column="48"/></operator><name pos:line="89" pos:column="45">remote_name<pos:position pos:line="89" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="58">remote<pos:position pos:line="89" pos:column="64"/></name><operator pos:line="89" pos:column="64">-&gt;<pos:position pos:line="89" pos:column="69"/></operator><name pos:line="89" pos:column="66">name<pos:position pos:line="89" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="89" pos:column="72"/></condition><then pos:line="89" pos:column="72">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="33">add_merge_config<pos:position pos:line="90" pos:column="49"/></name><argument_list pos:line="90" pos:column="49">(<argument><expr><operator pos:line="90" pos:column="50">&amp;<pos:position pos:line="90" pos:column="55"/></operator><name pos:line="90" pos:column="51">ref_map<pos:position pos:line="90" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="60">remote_refs<pos:position pos:line="90" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="73">branch<pos:position pos:line="90" pos:column="79"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="81">&amp;<pos:position pos:line="90" pos:column="86"/></operator><name pos:line="90" pos:column="82">tail<pos:position pos:line="90" pos:column="86"/></name></expr></argument>)<pos:position pos:line="90" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="88"/></expr_stmt></block></then></if>
		}<pos:position pos:line="91" pos:column="18"/></block></then> <else pos:line="91" pos:column="19">else <block pos:line="91" pos:column="24">{
			<expr_stmt><expr><name pos:line="92" pos:column="25">ref_map<pos:position pos:line="92" pos:column="32"/></name> <operator pos:line="92" pos:column="33">=<pos:position pos:line="92" pos:column="34"/></operator> <call><name pos:line="92" pos:column="35">get_remote_ref<pos:position pos:line="92" pos:column="49"/></name><argument_list pos:line="92" pos:column="49">(<argument><expr><name pos:line="92" pos:column="50">remote_refs<pos:position pos:line="92" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="63">"HEAD"<pos:position pos:line="92" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="71"/></expr_stmt>
			<if pos:line="93" pos:column="25">if <condition pos:line="93" pos:column="28">(<expr><operator pos:line="93" pos:column="29">!<pos:position pos:line="93" pos:column="30"/></operator><name pos:line="93" pos:column="30">ref_map<pos:position pos:line="93" pos:column="37"/></name></expr>)<pos:position pos:line="93" pos:column="38"/></condition><then pos:line="93" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="33">die<pos:position pos:line="94" pos:column="36"/></name><argument_list pos:line="94" pos:column="36">(<argument><expr><call><name pos:line="94" pos:column="37">_<pos:position pos:line="94" pos:column="38"/></name><argument_list pos:line="94" pos:column="38">(<argument><expr><literal type="string" pos:line="94" pos:column="39">"Couldn't find remote ref HEAD"<pos:position pos:line="94" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="73"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="95" pos:column="25">ref_map<pos:position pos:line="95" pos:column="32"/></name><operator pos:line="95" pos:column="32">-&gt;<pos:position pos:line="95" pos:column="37"/></operator><name pos:line="95" pos:column="34">fetch_head_status<pos:position pos:line="95" pos:column="51"/></name></name> <operator pos:line="95" pos:column="52">=<pos:position pos:line="95" pos:column="53"/></operator> <name pos:line="95" pos:column="54">FETCH_HEAD_MERGE<pos:position pos:line="95" pos:column="70"/></name></expr>;<pos:position pos:line="95" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><name pos:line="96" pos:column="25">tail<pos:position pos:line="96" pos:column="29"/></name> <operator pos:line="96" pos:column="30">=<pos:position pos:line="96" pos:column="31"/></operator> <operator pos:line="96" pos:column="32">&amp;<pos:position pos:line="96" pos:column="37"/></operator><name><name pos:line="96" pos:column="33">ref_map<pos:position pos:line="96" pos:column="40"/></name><operator pos:line="96" pos:column="40">-&gt;<pos:position pos:line="96" pos:column="45"/></operator><name pos:line="96" pos:column="42">next<pos:position pos:line="96" pos:column="46"/></name></name></expr>;<pos:position pos:line="96" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="97" pos:column="18"/></block></else></if>
	}<pos:position pos:line="98" pos:column="10"/></block></else></if>

	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">tags<pos:position pos:line="100" pos:column="17"/></name> <operator pos:line="100" pos:column="18">==<pos:position pos:line="100" pos:column="20"/></operator> <name pos:line="100" pos:column="21">TAGS_SET<pos:position pos:line="100" pos:column="29"/></name></expr>)<pos:position pos:line="100" pos:column="30"/></condition><then pos:line="100" pos:column="30">
		<comment type="block" pos:line="101" pos:column="17">/* also fetch all tags */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="17">get_fetch_map<pos:position pos:line="102" pos:column="30"/></name><argument_list pos:line="102" pos:column="30">(<argument><expr><name pos:line="102" pos:column="31">remote_refs<pos:position pos:line="102" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="44">tag_refspec<pos:position pos:line="102" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="102" pos:column="57">&amp;<pos:position pos:line="102" pos:column="62"/></operator><name pos:line="102" pos:column="58">tail<pos:position pos:line="102" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="64">0<pos:position pos:line="102" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="67"/></expr_stmt></block></then>
	<elseif pos:line="103" pos:column="9">else <if pos:line="103" pos:column="14">if <condition pos:line="103" pos:column="17">(<expr><name pos:line="103" pos:column="18">tags<pos:position pos:line="103" pos:column="22"/></name> <operator pos:line="103" pos:column="23">==<pos:position pos:line="103" pos:column="25"/></operator> <name pos:line="103" pos:column="26">TAGS_DEFAULT<pos:position pos:line="103" pos:column="38"/></name> <operator pos:line="103" pos:column="39">&amp;&amp;<pos:position pos:line="103" pos:column="49"/></operator> <operator pos:line="103" pos:column="42">*<pos:position pos:line="103" pos:column="43"/></operator><name pos:line="103" pos:column="43">autotags<pos:position pos:line="103" pos:column="51"/></name></expr>)<pos:position pos:line="103" pos:column="52"/></condition><then pos:line="103" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="104" pos:column="17">find_non_local_tags<pos:position pos:line="104" pos:column="36"/></name><argument_list pos:line="104" pos:column="36">(<argument><expr><name pos:line="104" pos:column="37">transport<pos:position pos:line="104" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="48">&amp;<pos:position pos:line="104" pos:column="53"/></operator><name pos:line="104" pos:column="49">ref_map<pos:position pos:line="104" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="58">&amp;<pos:position pos:line="104" pos:column="63"/></operator><name pos:line="104" pos:column="59">tail<pos:position pos:line="104" pos:column="63"/></name></expr></argument>)<pos:position pos:line="104" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="65"/></expr_stmt></block></then></if></elseif></if>

	<comment type="block" pos:line="106" pos:column="9">/* Now append any refs to be updated opportunistically: */</comment>
	<expr_stmt><expr><operator pos:line="107" pos:column="9">*<pos:position pos:line="107" pos:column="10"/></operator><name pos:line="107" pos:column="10">tail<pos:position pos:line="107" pos:column="14"/></name> <operator pos:line="107" pos:column="15">=<pos:position pos:line="107" pos:column="16"/></operator> <name pos:line="107" pos:column="17">orefs<pos:position pos:line="107" pos:column="22"/></name></expr>;<pos:position pos:line="107" pos:column="23"/></expr_stmt>
	<for pos:line="108" pos:column="9">for <control pos:line="108" pos:column="13">(<init><expr><name pos:line="108" pos:column="14">rm<pos:position pos:line="108" pos:column="16"/></name> <operator pos:line="108" pos:column="17">=<pos:position pos:line="108" pos:column="18"/></operator> <name pos:line="108" pos:column="19">orefs<pos:position pos:line="108" pos:column="24"/></name></expr>;<pos:position pos:line="108" pos:column="25"/></init> <condition><expr><name pos:line="108" pos:column="26">rm<pos:position pos:line="108" pos:column="28"/></name></expr>;<pos:position pos:line="108" pos:column="29"/></condition> <incr><expr><name pos:line="108" pos:column="30">rm<pos:position pos:line="108" pos:column="32"/></name> <operator pos:line="108" pos:column="33">=<pos:position pos:line="108" pos:column="34"/></operator> <name><name pos:line="108" pos:column="35">rm<pos:position pos:line="108" pos:column="37"/></name><operator pos:line="108" pos:column="37">-&gt;<pos:position pos:line="108" pos:column="42"/></operator><name pos:line="108" pos:column="39">next<pos:position pos:line="108" pos:column="43"/></name></name></expr></incr>)<pos:position pos:line="108" pos:column="44"/></control> <block pos:line="108" pos:column="45">{
		<expr_stmt><expr><name><name pos:line="109" pos:column="17">rm<pos:position pos:line="109" pos:column="19"/></name><operator pos:line="109" pos:column="19">-&gt;<pos:position pos:line="109" pos:column="24"/></operator><name pos:line="109" pos:column="21">fetch_head_status<pos:position pos:line="109" pos:column="38"/></name></name> <operator pos:line="109" pos:column="39">=<pos:position pos:line="109" pos:column="40"/></operator> <name pos:line="109" pos:column="41">FETCH_HEAD_IGNORE<pos:position pos:line="109" pos:column="58"/></name></expr>;<pos:position pos:line="109" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="110" pos:column="17">tail<pos:position pos:line="110" pos:column="21"/></name> <operator pos:line="110" pos:column="22">=<pos:position pos:line="110" pos:column="23"/></operator> <operator pos:line="110" pos:column="24">&amp;<pos:position pos:line="110" pos:column="29"/></operator><name><name pos:line="110" pos:column="25">rm<pos:position pos:line="110" pos:column="27"/></name><operator pos:line="110" pos:column="27">-&gt;<pos:position pos:line="110" pos:column="32"/></operator><name pos:line="110" pos:column="29">next<pos:position pos:line="110" pos:column="33"/></name></name></expr>;<pos:position pos:line="110" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="111" pos:column="10"/></block></for>

	<return pos:line="113" pos:column="9">return <expr><call><name pos:line="113" pos:column="16">ref_remove_duplicates<pos:position pos:line="113" pos:column="37"/></name><argument_list pos:line="113" pos:column="37">(<argument><expr><name pos:line="113" pos:column="38">ref_map<pos:position pos:line="113" pos:column="45"/></name></expr></argument>)<pos:position pos:line="113" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="47"/></return>
}<pos:position pos:line="114" pos:column="2"/></block></function></unit>

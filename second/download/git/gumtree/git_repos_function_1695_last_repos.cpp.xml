<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1695_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">cleanup_path<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">path<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/* Clean it up */</comment>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><call><name pos:line="4" pos:column="14">memcmp<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">path<pos:position pos:line="4" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="27">"./"<pos:position pos:line="4" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="33">2<pos:position pos:line="4" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="36"/></condition><then pos:line="4" pos:column="36"> <block pos:line="4" pos:column="37">{
		<expr_stmt><expr><name pos:line="5" pos:column="17">path<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">+=<pos:position pos:line="5" pos:column="24"/></operator> <literal type="number" pos:line="5" pos:column="25">2<pos:position pos:line="5" pos:column="26"/></literal></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt>
		<while pos:line="6" pos:column="17">while <condition pos:line="6" pos:column="23">(<expr><operator pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">path<pos:position pos:line="6" pos:column="29"/></name> <operator pos:line="6" pos:column="30">==<pos:position pos:line="6" pos:column="32"/></operator> <literal type="char" pos:line="6" pos:column="33">'/'<pos:position pos:line="6" pos:column="36"/></literal></expr>)<pos:position pos:line="6" pos:column="37"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="25">path<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">++<pos:position pos:line="7" pos:column="31"/></operator></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt></block></while>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>
	<return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">path<pos:position pos:line="9" pos:column="20"/></name></expr>;<pos:position pos:line="9" pos:column="21"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

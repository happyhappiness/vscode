<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2281_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">finalize_object_file<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">tmpfile<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">filename<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">object_creation_mode<pos:position pos:line="5" pos:column="33"/></name> <operator pos:line="5" pos:column="34">==<pos:position pos:line="5" pos:column="36"/></operator> <name pos:line="5" pos:column="37">OBJECT_CREATION_USES_RENAMES<pos:position pos:line="5" pos:column="65"/></name></expr>)<pos:position pos:line="5" pos:column="66"/></condition><then pos:line="5" pos:column="66">
		<block type="pseudo"><goto pos:line="6" pos:column="17">goto <name pos:line="6" pos:column="22">try_rename<pos:position pos:line="6" pos:column="32"/></name>;<pos:position pos:line="6" pos:column="33"/></goto></block></then>
	<elseif pos:line="7" pos:column="9">else <if pos:line="7" pos:column="14">if <condition pos:line="7" pos:column="17">(<expr><call><name pos:line="7" pos:column="18">link<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">tmpfile<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="32">filename<pos:position pos:line="7" pos:column="40"/></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="42"/></condition><then pos:line="7" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">ret<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <name pos:line="8" pos:column="23">errno<pos:position pos:line="8" pos:column="28"/></name></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt></block></then></if></elseif></if>

	<comment type="block" pos:line="10" pos:column="9">/*
	 * Coda hack - coda doesn't like cross-directory links,
	 * so we fall back to a rename, which will mean that it
	 * won't be able to check collisions, but that's not a
	 * big deal.
	 *
	 * The same holds for FAT formatted media.
	 *
	 * When this succeeds, we just return.  We have nothing
	 * left to unlink.
	 */</comment>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">ret<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">&amp;&amp;<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="20">ret<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">!=<pos:position pos:line="21" pos:column="26"/></operator> <name pos:line="21" pos:column="27">EEXIST<pos:position pos:line="21" pos:column="33"/></name></expr>)<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34"> <block pos:line="21" pos:column="35">{
	<label><name pos:line="22" pos:column="9">try_rename<pos:position pos:line="22" pos:column="19"/></name>:<pos:position pos:line="22" pos:column="20"/></label>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><call><name pos:line="23" pos:column="22">rename<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">tmpfile<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">filename<pos:position pos:line="23" pos:column="46"/></name></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="48"/></condition><then pos:line="23" pos:column="48">
			<block type="pseudo"><goto pos:line="24" pos:column="25">goto <name pos:line="24" pos:column="30">out<pos:position pos:line="24" pos:column="33"/></name>;<pos:position pos:line="24" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name pos:line="25" pos:column="17">ret<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">errno<pos:position pos:line="25" pos:column="28"/></name></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">unlink_or_warn<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">tmpfile<pos:position pos:line="27" pos:column="31"/></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">ret<pos:position pos:line="28" pos:column="16"/></name></expr>)<pos:position pos:line="28" pos:column="17"/></condition><then pos:line="28" pos:column="17"> <block pos:line="28" pos:column="18">{
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">ret<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">!=<pos:position pos:line="29" pos:column="27"/></operator> <name pos:line="29" pos:column="28">EEXIST<pos:position pos:line="29" pos:column="34"/></name></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35"> <block pos:line="29" pos:column="36">{
			<return pos:line="30" pos:column="25">return <expr><call><name pos:line="30" pos:column="32">error_errno<pos:position pos:line="30" pos:column="43"/></name><argument_list pos:line="30" pos:column="43">(<argument><expr><literal type="string" pos:line="30" pos:column="44">"unable to write sha1 filename %s"<pos:position pos:line="30" pos:column="78"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="80">filename<pos:position pos:line="30" pos:column="88"/></name></expr></argument>)<pos:position pos:line="30" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="90"/></return>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="32" pos:column="17">/* FIXME!!! Collision check here ? */</comment>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

<label><name pos:line="35" pos:column="1">out<pos:position pos:line="35" pos:column="4"/></name>:<pos:position pos:line="35" pos:column="5"/></label>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><call><name pos:line="36" pos:column="13">adjust_shared_perm<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name pos:line="36" pos:column="32">filename<pos:position pos:line="36" pos:column="40"/></name></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="42"/></condition><then pos:line="36" pos:column="42">
		<block type="pseudo"><return pos:line="37" pos:column="17">return <expr><call><name pos:line="37" pos:column="24">error<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><literal type="string" pos:line="37" pos:column="30">"unable to set permission to '%s'"<pos:position pos:line="37" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="66">filename<pos:position pos:line="37" pos:column="74"/></name></expr></argument>)<pos:position pos:line="37" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="76"/></return></block></then></if>
	<return pos:line="38" pos:column="9">return <expr><literal type="number" pos:line="38" pos:column="16">0<pos:position pos:line="38" pos:column="17"/></literal></expr>;<pos:position pos:line="38" pos:column="18"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2894_git-2.9.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">copy_reflog_msg<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">buf<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">msg<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">cp<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><name pos:line="3" pos:column="20">buf<pos:position pos:line="3" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">c<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">wasspace<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="number" pos:line="5" pos:column="24">1<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

	<expr_stmt><expr><operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">cp<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">++<pos:position pos:line="7" pos:column="14"/></operator> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <literal type="char" pos:line="7" pos:column="17">'\t'<pos:position pos:line="7" pos:column="21"/></literal></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">c<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <operator pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">msg<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">++<pos:position pos:line="8" pos:column="27"/></operator><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator></expr>)<pos:position pos:line="8" pos:column="29"/></condition> <block pos:line="8" pos:column="30">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">wasspace<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">&amp;&amp;<pos:position pos:line="9" pos:column="40"/></operator> <call><name pos:line="9" pos:column="33">isspace<pos:position pos:line="9" pos:column="40"/></name><argument_list pos:line="9" pos:column="40">(<argument><expr><name pos:line="9" pos:column="41">c<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="44"/></condition><then pos:line="9" pos:column="44">
			<block type="pseudo"><continue pos:line="10" pos:column="25">continue;<pos:position pos:line="10" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="11" pos:column="17">wasspace<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">=<pos:position pos:line="11" pos:column="27"/></operator> <call><name pos:line="11" pos:column="28">isspace<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">c<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">wasspace<pos:position pos:line="12" pos:column="29"/></name></expr>)<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">c<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">=<pos:position pos:line="13" pos:column="28"/></operator> <literal type="char" pos:line="13" pos:column="29">' '<pos:position pos:line="13" pos:column="32"/></literal></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt></block></then></if>
		<expr_stmt><expr><operator pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">cp<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">++<pos:position pos:line="14" pos:column="22"/></operator> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">c<pos:position pos:line="14" pos:column="26"/></name></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></while>
	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><name pos:line="16" pos:column="16">buf<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">&lt;<pos:position pos:line="16" pos:column="24"/></operator> <name pos:line="16" pos:column="22">cp<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">&amp;&amp;<pos:position pos:line="16" pos:column="35"/></operator> <call><name pos:line="16" pos:column="28">isspace<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><name><name pos:line="16" pos:column="36">cp<pos:position pos:line="16" pos:column="38"/></name><index pos:line="16" pos:column="38">[<expr><operator pos:line="16" pos:column="39">-<pos:position pos:line="16" pos:column="40"/></operator><literal type="number" pos:line="16" pos:column="40">1<pos:position pos:line="16" pos:column="41"/></literal></expr>]<pos:position pos:line="16" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="44"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">cp<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">--<pos:position pos:line="17" pos:column="21"/></operator></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt></block></while>
	<expr_stmt><expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">cp<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">++<pos:position pos:line="18" pos:column="14"/></operator> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="char" pos:line="18" pos:column="17">'\n'<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
	<return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">cp<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">-<pos:position pos:line="19" pos:column="20"/></operator> <name pos:line="19" pos:column="21">buf<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

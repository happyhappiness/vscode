<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3493_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">refs_reflog_expire<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">ref_store<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">refs<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
		       <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">refname<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <name pos:line="2" pos:column="51">unsigned<pos:position pos:line="2" pos:column="59"/></name> <name pos:line="2" pos:column="60">char<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">sha1<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>,
		       <parameter><decl><type><name pos:line="3" pos:column="24">unsigned<pos:position pos:line="3" pos:column="32"/></name> <name pos:line="3" pos:column="33">int<pos:position pos:line="3" pos:column="36"/></name></type> <name pos:line="3" pos:column="37">flags<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>,
		       <parameter><decl><type><name pos:line="4" pos:column="24">reflog_expiry_prepare_fn<pos:position pos:line="4" pos:column="48"/></name></type> <name pos:line="4" pos:column="49">prepare_fn<pos:position pos:line="4" pos:column="59"/></name></decl></parameter>,
		       <parameter><decl><type><name pos:line="5" pos:column="24">reflog_expiry_should_prune_fn<pos:position pos:line="5" pos:column="53"/></name></type> <name pos:line="5" pos:column="54">should_prune_fn<pos:position pos:line="5" pos:column="69"/></name></decl></parameter>,
		       <parameter><decl><type><name pos:line="6" pos:column="24">reflog_expiry_cleanup_fn<pos:position pos:line="6" pos:column="48"/></name></type> <name pos:line="6" pos:column="49">cleanup_fn<pos:position pos:line="6" pos:column="59"/></name></decl></parameter>,
		       <parameter><decl><type><name pos:line="7" pos:column="24">void<pos:position pos:line="7" pos:column="28"/></name> <modifier pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></modifier></type><name pos:line="7" pos:column="30">policy_cb_data<pos:position pos:line="7" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="45"/></parameter_list>
<block pos:line="8" pos:column="1">{
	<return pos:line="9" pos:column="9">return <expr><call><name><name pos:line="9" pos:column="16">refs<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">be<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">reflog_expire<pos:position pos:line="9" pos:column="39"/></name></name><argument_list pos:line="9" pos:column="39">(<argument><expr><name pos:line="9" pos:column="40">refs<pos:position pos:line="9" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">refname<pos:position pos:line="9" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="55">sha1<pos:position pos:line="9" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="61">flags<pos:position pos:line="9" pos:column="66"/></name></expr></argument>,
				       <argument><expr><name pos:line="10" pos:column="40">prepare_fn<pos:position pos:line="10" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">should_prune_fn<pos:position pos:line="10" pos:column="67"/></name></expr></argument>,
				       <argument><expr><name pos:line="11" pos:column="40">cleanup_fn<pos:position pos:line="11" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">policy_cb_data<pos:position pos:line="11" pos:column="66"/></name></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="68"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1327_git-2.7.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">daemon_avoid_alias<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">p<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">sl<pos:position pos:line="3" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="17">ndot<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/*
	 * This resurrects the belts and suspenders paranoia check by HPA
	 * done in &lt;435560F7.4080006@zytor.com&gt; thread, now enter_repo()
	 * does not do getcwd() based path canonicalization.
	 *
	 * sl becomes true immediately after seeing '/' and continues to
	 * be true as long as dots continue after that without intervening
	 * non-dot character.
	 */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">p<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">||<pos:position pos:line="14" pos:column="18"/></operator> <operator pos:line="14" pos:column="19">(<pos:position pos:line="14" pos:column="20"/></operator><operator pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">p<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">!=<pos:position pos:line="14" pos:column="25"/></operator> <literal type="char" pos:line="14" pos:column="26">'/'<pos:position pos:line="14" pos:column="29"/></literal> <operator pos:line="14" pos:column="30">&amp;&amp;<pos:position pos:line="14" pos:column="40"/></operator> <operator pos:line="14" pos:column="33">*<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="34">p<pos:position pos:line="14" pos:column="35"/></name> <operator pos:line="14" pos:column="36">!=<pos:position pos:line="14" pos:column="38"/></operator> <literal type="char" pos:line="14" pos:column="39">'~'<pos:position pos:line="14" pos:column="42"/></literal><operator pos:line="14" pos:column="42">)<pos:position pos:line="14" pos:column="43"/></operator></expr>)<pos:position pos:line="14" pos:column="44"/></condition><then pos:line="14" pos:column="44">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">-<pos:position pos:line="15" pos:column="25"/></operator><literal type="number" pos:line="15" pos:column="25">1<pos:position pos:line="15" pos:column="26"/></literal></expr>;<pos:position pos:line="15" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="16" pos:column="9">sl<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal></expr>;<pos:position pos:line="16" pos:column="16"/></expr_stmt> <expr_stmt><expr><name pos:line="16" pos:column="17">ndot<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">p<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">++<pos:position pos:line="17" pos:column="12"/></operator></expr>;<pos:position pos:line="17" pos:column="13"/></expr_stmt>

	<while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><literal type="number" pos:line="19" pos:column="16">1<pos:position pos:line="19" pos:column="17"/></literal></expr>)<pos:position pos:line="19" pos:column="18"/></condition> <block pos:line="19" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">char<pos:position pos:line="20" pos:column="21"/></name></type> <name pos:line="20" pos:column="22">ch<pos:position pos:line="20" pos:column="24"/></name> <init pos:line="20" pos:column="25">= <expr><operator pos:line="20" pos:column="27">*<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="28">p<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">++<pos:position pos:line="20" pos:column="31"/></operator></expr></init></decl>;<pos:position pos:line="20" pos:column="32"/></decl_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">sl<pos:position pos:line="21" pos:column="23"/></name></expr>)<pos:position pos:line="21" pos:column="24"/></condition><then pos:line="21" pos:column="24"> <block pos:line="21" pos:column="25">{
			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><name pos:line="22" pos:column="29">ch<pos:position pos:line="22" pos:column="31"/></name> <operator pos:line="22" pos:column="32">==<pos:position pos:line="22" pos:column="34"/></operator> <literal type="char" pos:line="22" pos:column="35">'.'<pos:position pos:line="22" pos:column="38"/></literal></expr>)<pos:position pos:line="22" pos:column="39"/></condition><then pos:line="22" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="33">ndot<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">++<pos:position pos:line="23" pos:column="39"/></operator></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt></block></then>
			<elseif pos:line="24" pos:column="25">else <if pos:line="24" pos:column="30">if <condition pos:line="24" pos:column="33">(<expr><name pos:line="24" pos:column="34">ch<pos:position pos:line="24" pos:column="36"/></name> <operator pos:line="24" pos:column="37">==<pos:position pos:line="24" pos:column="39"/></operator> <literal type="char" pos:line="24" pos:column="40">'/'<pos:position pos:line="24" pos:column="43"/></literal></expr>)<pos:position pos:line="24" pos:column="44"/></condition><then pos:line="24" pos:column="44"> <block pos:line="24" pos:column="45">{
				<if pos:line="25" pos:column="33">if <condition pos:line="25" pos:column="36">(<expr><name pos:line="25" pos:column="37">ndot<pos:position pos:line="25" pos:column="41"/></name> <operator pos:line="25" pos:column="42">&lt;<pos:position pos:line="25" pos:column="46"/></operator> <literal type="number" pos:line="25" pos:column="44">3<pos:position pos:line="25" pos:column="45"/></literal></expr>)<pos:position pos:line="25" pos:column="46"/></condition><then pos:line="25" pos:column="46">
					<comment type="block" pos:line="26" pos:column="41">/* reject //, /./ and /../ */</comment>
					<block type="pseudo"><return pos:line="27" pos:column="41">return <expr><operator pos:line="27" pos:column="48">-<pos:position pos:line="27" pos:column="49"/></operator><literal type="number" pos:line="27" pos:column="49">1<pos:position pos:line="27" pos:column="50"/></literal></expr>;<pos:position pos:line="27" pos:column="51"/></return></block></then></if>
				<expr_stmt><expr><name pos:line="28" pos:column="33">ndot<pos:position pos:line="28" pos:column="37"/></name> <operator pos:line="28" pos:column="38">=<pos:position pos:line="28" pos:column="39"/></operator> <literal type="number" pos:line="28" pos:column="40">0<pos:position pos:line="28" pos:column="41"/></literal></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
			}<pos:position pos:line="29" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="30" pos:column="25">else <if pos:line="30" pos:column="30">if <condition pos:line="30" pos:column="33">(<expr><name pos:line="30" pos:column="34">ch<pos:position pos:line="30" pos:column="36"/></name> <operator pos:line="30" pos:column="37">==<pos:position pos:line="30" pos:column="39"/></operator> <literal type="number" pos:line="30" pos:column="40">0<pos:position pos:line="30" pos:column="41"/></literal></expr>)<pos:position pos:line="30" pos:column="42"/></condition><then pos:line="30" pos:column="42"> <block pos:line="30" pos:column="43">{
				<if pos:line="31" pos:column="33">if <condition pos:line="31" pos:column="36">(<expr><literal type="number" pos:line="31" pos:column="37">0<pos:position pos:line="31" pos:column="38"/></literal> <operator pos:line="31" pos:column="39">&lt;<pos:position pos:line="31" pos:column="43"/></operator> <name pos:line="31" pos:column="41">ndot<pos:position pos:line="31" pos:column="45"/></name> <operator pos:line="31" pos:column="46">&amp;&amp;<pos:position pos:line="31" pos:column="56"/></operator> <name pos:line="31" pos:column="49">ndot<pos:position pos:line="31" pos:column="53"/></name> <operator pos:line="31" pos:column="54">&lt;<pos:position pos:line="31" pos:column="58"/></operator> <literal type="number" pos:line="31" pos:column="56">3<pos:position pos:line="31" pos:column="57"/></literal></expr>)<pos:position pos:line="31" pos:column="58"/></condition><then pos:line="31" pos:column="58">
					<comment type="block" pos:line="32" pos:column="41">/* reject /.$ and /..$ */</comment>
					<block type="pseudo"><return pos:line="33" pos:column="41">return <expr><operator pos:line="33" pos:column="48">-<pos:position pos:line="33" pos:column="49"/></operator><literal type="number" pos:line="33" pos:column="49">1<pos:position pos:line="33" pos:column="50"/></literal></expr>;<pos:position pos:line="33" pos:column="51"/></return></block></then></if>
				<return pos:line="34" pos:column="33">return <expr><literal type="number" pos:line="34" pos:column="40">0<pos:position pos:line="34" pos:column="41"/></literal></expr>;<pos:position pos:line="34" pos:column="42"/></return>
			}<pos:position pos:line="35" pos:column="26"/></block></then></if></elseif>
			<else pos:line="36" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="33">sl<pos:position pos:line="37" pos:column="35"/></name> <operator pos:line="37" pos:column="36">=<pos:position pos:line="37" pos:column="37"/></operator> <name pos:line="37" pos:column="38">ndot<pos:position pos:line="37" pos:column="42"/></name> <operator pos:line="37" pos:column="43">=<pos:position pos:line="37" pos:column="44"/></operator> <literal type="number" pos:line="37" pos:column="45">0<pos:position pos:line="37" pos:column="46"/></literal></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt></block></else></if>
		}<pos:position pos:line="38" pos:column="18"/></block></then>
		<elseif pos:line="39" pos:column="17">else <if pos:line="39" pos:column="22">if <condition pos:line="39" pos:column="25">(<expr><name pos:line="39" pos:column="26">ch<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">==<pos:position pos:line="39" pos:column="31"/></operator> <literal type="number" pos:line="39" pos:column="32">0<pos:position pos:line="39" pos:column="33"/></literal></expr>)<pos:position pos:line="39" pos:column="34"/></condition><then pos:line="39" pos:column="34">
			<block type="pseudo"><return pos:line="40" pos:column="25">return <expr><literal type="number" pos:line="40" pos:column="32">0<pos:position pos:line="40" pos:column="33"/></literal></expr>;<pos:position pos:line="40" pos:column="34"/></return></block></then></if></elseif>
		<elseif pos:line="41" pos:column="17">else <if pos:line="41" pos:column="22">if <condition pos:line="41" pos:column="25">(<expr><name pos:line="41" pos:column="26">ch<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">==<pos:position pos:line="41" pos:column="31"/></operator> <literal type="char" pos:line="41" pos:column="32">'/'<pos:position pos:line="41" pos:column="35"/></literal></expr>)<pos:position pos:line="41" pos:column="36"/></condition><then pos:line="41" pos:column="36"> <block pos:line="41" pos:column="37">{
			<expr_stmt><expr><name pos:line="42" pos:column="25">sl<pos:position pos:line="42" pos:column="27"/></name> <operator pos:line="42" pos:column="28">=<pos:position pos:line="42" pos:column="29"/></operator> <literal type="number" pos:line="42" pos:column="30">1<pos:position pos:line="42" pos:column="31"/></literal></expr>;<pos:position pos:line="42" pos:column="32"/></expr_stmt>
			<expr_stmt><expr><name pos:line="43" pos:column="25">ndot<pos:position pos:line="43" pos:column="29"/></name> <operator pos:line="43" pos:column="30">=<pos:position pos:line="43" pos:column="31"/></operator> <literal type="number" pos:line="43" pos:column="32">0<pos:position pos:line="43" pos:column="33"/></literal></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="45" pos:column="10"/></block></while>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

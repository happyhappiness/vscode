<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5109.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">handle_from<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">strbuf<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">from<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">at<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">el<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">f<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">strbuf_init<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><operator pos:line="7" pos:column="21">&amp;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="22">f<pos:position pos:line="7" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="25">from<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">-&gt;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="31">len<pos:position pos:line="7" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">strbuf_addbuf<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><operator pos:line="8" pos:column="23">&amp;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="24">f<pos:position pos:line="8" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="27">from<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">at<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">strchr<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name><name pos:line="10" pos:column="21">f<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">.<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">buf<pos:position pos:line="10" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="28">'@'<pos:position pos:line="10" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">at<pos:position pos:line="11" pos:column="16"/></name></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17"> <block pos:line="11" pos:column="18">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">parse_bogus_from<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">from<pos:position pos:line="12" pos:column="38"/></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
		<return pos:line="13" pos:column="17">return;<pos:position pos:line="13" pos:column="24"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="16" pos:column="9">/*
	 * If we already have one email, don't take any confusing lines
	 */</comment>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">email<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">.<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">len<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">&amp;&amp;<pos:position pos:line="19" pos:column="33"/></operator> <call><name pos:line="19" pos:column="26">strchr<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">at<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">+<pos:position pos:line="19" pos:column="37"/></operator> <literal type="number" pos:line="19" pos:column="38">1<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="41">'@'<pos:position pos:line="19" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="46"/></condition><then pos:line="19" pos:column="46"> <block pos:line="19" pos:column="47">{
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">strbuf_release<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><operator pos:line="20" pos:column="32">&amp;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="33">f<pos:position pos:line="20" pos:column="34"/></name></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
		<return pos:line="21" pos:column="17">return;<pos:position pos:line="21" pos:column="24"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="24" pos:column="9">/* Pick up the string around '@', possibly delimited with &lt;&gt;
	 * pair; that is the email part.
	 */</comment>
	<while pos:line="27" pos:column="9">while <condition pos:line="27" pos:column="15">(<expr><name pos:line="27" pos:column="16">at<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">&gt;<pos:position pos:line="27" pos:column="23"/></operator> <name><name pos:line="27" pos:column="21">f<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">.<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">buf<pos:position pos:line="27" pos:column="26"/></name></name></expr>)<pos:position pos:line="27" pos:column="27"/></condition> <block pos:line="27" pos:column="28">{
		<decl_stmt><decl><type><name pos:line="28" pos:column="17">char<pos:position pos:line="28" pos:column="21"/></name></type> <name pos:line="28" pos:column="22">c<pos:position pos:line="28" pos:column="23"/></name> <init pos:line="28" pos:column="24">= <expr><name><name pos:line="28" pos:column="26">at<pos:position pos:line="28" pos:column="28"/></name><index pos:line="28" pos:column="28">[<expr><operator pos:line="28" pos:column="29">-<pos:position pos:line="28" pos:column="30"/></operator><literal type="number" pos:line="28" pos:column="30">1<pos:position pos:line="28" pos:column="31"/></literal></expr>]<pos:position pos:line="28" pos:column="32"/></index></name></expr></init></decl>;<pos:position pos:line="28" pos:column="33"/></decl_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">isspace<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name pos:line="29" pos:column="29">c<pos:position pos:line="29" pos:column="30"/></name></expr></argument>)<pos:position pos:line="29" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="32"/></condition><then pos:line="29" pos:column="32">
			<block type="pseudo"><break pos:line="30" pos:column="25">break;<pos:position pos:line="30" pos:column="31"/></break></block></then></if>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">c<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">==<pos:position pos:line="31" pos:column="25"/></operator> <literal type="char" pos:line="31" pos:column="26">'&lt;'<pos:position pos:line="31" pos:column="32"/></literal></expr>)<pos:position pos:line="31" pos:column="30"/></condition><then pos:line="31" pos:column="30"> <block pos:line="31" pos:column="31">{
			<expr_stmt><expr><name><name pos:line="32" pos:column="25">at<pos:position pos:line="32" pos:column="27"/></name><index pos:line="32" pos:column="27">[<expr><operator pos:line="32" pos:column="28">-<pos:position pos:line="32" pos:column="29"/></operator><literal type="number" pos:line="32" pos:column="29">1<pos:position pos:line="32" pos:column="30"/></literal></expr>]<pos:position pos:line="32" pos:column="31"/></index></name> <operator pos:line="32" pos:column="32">=<pos:position pos:line="32" pos:column="33"/></operator> <literal type="char" pos:line="32" pos:column="34">' '<pos:position pos:line="32" pos:column="37"/></literal></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
			<break pos:line="33" pos:column="25">break;<pos:position pos:line="33" pos:column="31"/></break>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="35" pos:column="17">at<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">--<pos:position pos:line="35" pos:column="21"/></operator></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></while>
	<expr_stmt><expr><name pos:line="37" pos:column="9">el<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <call><name pos:line="37" pos:column="14">strcspn<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">at<pos:position pos:line="37" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="26">" \n\t\r\v\f&gt;"<pos:position pos:line="37" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">strbuf_reset<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><operator pos:line="38" pos:column="22">&amp;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="23">email<pos:position pos:line="38" pos:column="28"/></name></expr></argument>)<pos:position pos:line="38" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">strbuf_add<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><operator pos:line="39" pos:column="20">&amp;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="21">email<pos:position pos:line="39" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="28">at<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="32">el<pos:position pos:line="39" pos:column="34"/></name></expr></argument>)<pos:position pos:line="39" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">strbuf_remove<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><operator pos:line="40" pos:column="23">&amp;<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="24">f<pos:position pos:line="40" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="27">at<pos:position pos:line="40" pos:column="29"/></name> <operator pos:line="40" pos:column="30">-<pos:position pos:line="40" pos:column="31"/></operator> <name><name pos:line="40" pos:column="32">f<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">.<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="34">buf<pos:position pos:line="40" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="39">el<pos:position pos:line="40" pos:column="41"/></name> <operator pos:line="40" pos:column="42">+<pos:position pos:line="40" pos:column="43"/></operator> <operator pos:line="40" pos:column="44">(<pos:position pos:line="40" pos:column="45"/></operator><ternary><condition><expr><name><name pos:line="40" pos:column="45">at<pos:position pos:line="40" pos:column="47"/></name><index pos:line="40" pos:column="47">[<expr><name pos:line="40" pos:column="48">el<pos:position pos:line="40" pos:column="50"/></name></expr>]<pos:position pos:line="40" pos:column="51"/></index></name></expr> ?<pos:position pos:line="40" pos:column="53"/></condition><then pos:line="40" pos:column="53"> <expr><literal type="number" pos:line="40" pos:column="54">1<pos:position pos:line="40" pos:column="55"/></literal></expr> <pos:position pos:line="40" pos:column="56"/></then><else pos:line="40" pos:column="56">: <expr><literal type="number" pos:line="40" pos:column="58">0<pos:position pos:line="40" pos:column="59"/></literal></expr></else></ternary><operator pos:line="40" pos:column="59">)<pos:position pos:line="40" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="62"/></expr_stmt>

	<comment type="block" pos:line="42" pos:column="9">/* The remainder is name.  It could be
	 *
	 * - "John Doe &lt;john.doe@xz&gt;"			(a), or
	 * - "john.doe@xz (John Doe)"			(b), or
	 * - "John (zzz) Doe &lt;john.doe@xz&gt; (Comment)"	(c)
	 *
	 * but we have removed the email part, so
	 *
	 * - remove extra spaces which could stay after email (case 'c'), and
	 * - trim from both ends, possibly removing the () pair at the end
	 *   (cases 'a' and 'b').
	 */</comment>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">cleanup_space<pos:position pos:line="54" pos:column="22"/></name><argument_list pos:line="54" pos:column="22">(<argument><expr><operator pos:line="54" pos:column="23">&amp;<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="24">f<pos:position pos:line="54" pos:column="25"/></name></expr></argument>)<pos:position pos:line="54" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">strbuf_trim<pos:position pos:line="55" pos:column="20"/></name><argument_list pos:line="55" pos:column="20">(<argument><expr><operator pos:line="55" pos:column="21">&amp;<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="22">f<pos:position pos:line="55" pos:column="23"/></name></expr></argument>)<pos:position pos:line="55" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="25"/></expr_stmt>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">f<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">.<pos:position pos:line="56" pos:column="15"/></operator><name pos:line="56" pos:column="15">buf<pos:position pos:line="56" pos:column="18"/></name><index pos:line="56" pos:column="18">[<expr><literal type="number" pos:line="56" pos:column="19">0<pos:position pos:line="56" pos:column="20"/></literal></expr>]<pos:position pos:line="56" pos:column="21"/></index></name> <operator pos:line="56" pos:column="22">==<pos:position pos:line="56" pos:column="24"/></operator> <literal type="char" pos:line="56" pos:column="25">'('<pos:position pos:line="56" pos:column="28"/></literal> <operator pos:line="56" pos:column="29">&amp;&amp;<pos:position pos:line="56" pos:column="39"/></operator> <name><name pos:line="56" pos:column="32">f<pos:position pos:line="56" pos:column="33"/></name><operator pos:line="56" pos:column="33">.<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="34">len<pos:position pos:line="56" pos:column="37"/></name></name> <operator pos:line="56" pos:column="38">&amp;&amp;<pos:position pos:line="56" pos:column="48"/></operator> <name><name pos:line="56" pos:column="41">f<pos:position pos:line="56" pos:column="42"/></name><operator pos:line="56" pos:column="42">.<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="43">buf<pos:position pos:line="56" pos:column="46"/></name><index pos:line="56" pos:column="46">[<expr><name><name pos:line="56" pos:column="47">f<pos:position pos:line="56" pos:column="48"/></name><operator pos:line="56" pos:column="48">.<pos:position pos:line="56" pos:column="49"/></operator><name pos:line="56" pos:column="49">len<pos:position pos:line="56" pos:column="52"/></name></name> <operator pos:line="56" pos:column="53">-<pos:position pos:line="56" pos:column="54"/></operator> <literal type="number" pos:line="56" pos:column="55">1<pos:position pos:line="56" pos:column="56"/></literal></expr>]<pos:position pos:line="56" pos:column="57"/></index></name> <operator pos:line="56" pos:column="58">==<pos:position pos:line="56" pos:column="60"/></operator> <literal type="char" pos:line="56" pos:column="61">')'<pos:position pos:line="56" pos:column="64"/></literal></expr>)<pos:position pos:line="56" pos:column="65"/></condition><then pos:line="56" pos:column="65"> <block pos:line="56" pos:column="66">{
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">strbuf_remove<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><operator pos:line="57" pos:column="31">&amp;<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="32">f<pos:position pos:line="57" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="35">0<pos:position pos:line="57" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="38">1<pos:position pos:line="57" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">strbuf_setlen<pos:position pos:line="58" pos:column="30"/></name><argument_list pos:line="58" pos:column="30">(<argument><expr><operator pos:line="58" pos:column="31">&amp;<pos:position pos:line="58" pos:column="36"/></operator><name pos:line="58" pos:column="32">f<pos:position pos:line="58" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="35">f<pos:position pos:line="58" pos:column="36"/></name><operator pos:line="58" pos:column="36">.<pos:position pos:line="58" pos:column="37"/></operator><name pos:line="58" pos:column="37">len<pos:position pos:line="58" pos:column="40"/></name></name> <operator pos:line="58" pos:column="41">-<pos:position pos:line="58" pos:column="42"/></operator> <literal type="number" pos:line="58" pos:column="43">1<pos:position pos:line="58" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="59" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="61" pos:column="9">get_sane_name<pos:position pos:line="61" pos:column="22"/></name><argument_list pos:line="61" pos:column="22">(<argument><expr><operator pos:line="61" pos:column="23">&amp;<pos:position pos:line="61" pos:column="28"/></operator><name pos:line="61" pos:column="24">name<pos:position pos:line="61" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="30">&amp;<pos:position pos:line="61" pos:column="35"/></operator><name pos:line="61" pos:column="31">f<pos:position pos:line="61" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="34">&amp;<pos:position pos:line="61" pos:column="39"/></operator><name pos:line="61" pos:column="35">email<pos:position pos:line="61" pos:column="40"/></name></expr></argument>)<pos:position pos:line="61" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">strbuf_release<pos:position pos:line="62" pos:column="23"/></name><argument_list pos:line="62" pos:column="23">(<argument><expr><operator pos:line="62" pos:column="24">&amp;<pos:position pos:line="62" pos:column="29"/></operator><name pos:line="62" pos:column="25">f<pos:position pos:line="62" pos:column="26"/></name></expr></argument>)<pos:position pos:line="62" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

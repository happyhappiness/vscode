<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5593_git-2.4.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mingw_mktemp<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><specifier pos:line="1" pos:column="26">template<pos:position pos:line="1" pos:column="34"/></specifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">wchar_t<pos:position pos:line="3" pos:column="16"/></name></type> <name><name pos:line="3" pos:column="17">wtemplate<pos:position pos:line="3" pos:column="26"/></name><index pos:line="3" pos:column="26">[<expr><name pos:line="3" pos:column="27">MAX_PATH<pos:position pos:line="3" pos:column="35"/></name></expr>]<pos:position pos:line="3" pos:column="36"/></index></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<macro><name pos:line="4" pos:column="13">xutftowcs_path<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">(<argument pos:line="4" pos:column="28">wtemplate<pos:position pos:line="4" pos:column="37"/></argument>, <argument pos:line="4" pos:column="39">template<pos:position pos:line="4" pos:column="47"/></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></macro> <expr><operator pos:line="4" pos:column="49">&lt;<pos:position pos:line="4" pos:column="53"/></operator> <literal type="number" pos:line="4" pos:column="51">0<pos:position pos:line="4" pos:column="52"/></literal></expr>)<pos:position pos:line="4" pos:column="53"/></condition><then pos:line="4" pos:column="53">
		<block type="pseudo"><return pos:line="5" pos:column="17">return <expr><name pos:line="5" pos:column="24">NULL<pos:position pos:line="5" pos:column="28"/></name></expr>;<pos:position pos:line="5" pos:column="29"/></return></block></then></if>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">_wmktemp<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">wtemplate<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></return></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<macro><name pos:line="8" pos:column="13">xwcstoutf<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument pos:line="8" pos:column="23">template<pos:position pos:line="8" pos:column="31"/></argument>, <argument pos:line="8" pos:column="33">wtemplate<pos:position pos:line="8" pos:column="42"/></argument>, <argument pos:line="8" pos:column="44">strlen(template) + <literal type="number" pos:line="8" pos:column="63">1<pos:position pos:line="8" pos:column="64"/></literal></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></macro> <expr><operator pos:line="8" pos:column="66">&lt;<pos:position pos:line="8" pos:column="70"/></operator> <literal type="number" pos:line="8" pos:column="68">0<pos:position pos:line="8" pos:column="69"/></literal></expr>)<pos:position pos:line="8" pos:column="70"/></condition><then pos:line="8" pos:column="70">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><name pos:line="9" pos:column="24">NULL<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></return></block></then></if>
	<return pos:line="10" pos:column="9">return<pos:position pos:line="10" pos:column="15"/></return> <template pos:line="10" pos:column="16">template<empty_stmt pos:line="10" pos:column="24">;<pos:position pos:line="10" pos:column="25"/></empty_stmt></template>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

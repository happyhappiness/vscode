<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4718_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">uint64_t<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">getnanotime<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">uint64_t<pos:position pos:line="3" pos:column="24"/></name></type> <name pos:line="3" pos:column="25">offset<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">offset<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">&gt;<pos:position pos:line="4" pos:column="24"/></operator> <literal type="number" pos:line="4" pos:column="22">1<pos:position pos:line="4" pos:column="23"/></literal></expr>)<pos:position pos:line="4" pos:column="24"/></condition><then pos:line="4" pos:column="24"> <block pos:line="4" pos:column="25">{
		<comment type="block" pos:line="5" pos:column="17">/* initialization succeeded, return offset + high res time */</comment>
		<return pos:line="6" pos:column="17">return <expr><name pos:line="6" pos:column="24">offset<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">+<pos:position pos:line="6" pos:column="32"/></operator> <call><name pos:line="6" pos:column="33">highres_nanos<pos:position pos:line="6" pos:column="46"/></name><argument_list pos:line="6" pos:column="46">()<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="49"/></return>
	}<pos:position pos:line="7" pos:column="10"/></block></then> <elseif pos:line="7" pos:column="11">else <if pos:line="7" pos:column="16">if <condition pos:line="7" pos:column="19">(<expr><name pos:line="7" pos:column="20">offset<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">==<pos:position pos:line="7" pos:column="29"/></operator> <literal type="number" pos:line="7" pos:column="30">1<pos:position pos:line="7" pos:column="31"/></literal></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32"> <block pos:line="7" pos:column="33">{
		<comment type="block" pos:line="8" pos:column="17">/* initialization failed, fall back to gettimeofday */</comment>
		<return pos:line="9" pos:column="17">return <expr><call><name pos:line="9" pos:column="24">gettimeofday_nanos<pos:position pos:line="9" pos:column="42"/></name><argument_list pos:line="9" pos:column="42">()<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if></elseif> <else pos:line="10" pos:column="11">else <block pos:line="10" pos:column="16">{
		<comment type="block" pos:line="11" pos:column="17">/* initialize offset if high resolution timer works */</comment>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">uint64_t<pos:position pos:line="12" pos:column="25"/></name></type> <name pos:line="12" pos:column="26">now<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><call><name pos:line="12" pos:column="32">gettimeofday_nanos<pos:position pos:line="12" pos:column="50"/></name><argument_list pos:line="12" pos:column="50">()<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="53"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">uint64_t<pos:position pos:line="13" pos:column="25"/></name></type> <name pos:line="13" pos:column="26">highres<pos:position pos:line="13" pos:column="33"/></name> <init pos:line="13" pos:column="34">= <expr><call><name pos:line="13" pos:column="36">highres_nanos<pos:position pos:line="13" pos:column="49"/></name><argument_list pos:line="13" pos:column="49">()<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="52"/></decl_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">highres<pos:position pos:line="14" pos:column="28"/></name></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">offset<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <name pos:line="15" pos:column="34">now<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">-<pos:position pos:line="15" pos:column="39"/></operator> <name pos:line="15" pos:column="40">highres<pos:position pos:line="15" pos:column="47"/></name></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt></block></then>
		<else pos:line="16" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="25">offset<pos:position pos:line="17" pos:column="31"/></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator> <literal type="number" pos:line="17" pos:column="34">1<pos:position pos:line="17" pos:column="35"/></literal></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt></block></else></if>
		<return pos:line="18" pos:column="17">return <expr><name pos:line="18" pos:column="24">now<pos:position pos:line="18" pos:column="27"/></name></expr>;<pos:position pos:line="18" pos:column="28"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></else></if>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1364_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">record_ws_error<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">apply_state<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">state<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="2" pos:column="29">unsigned<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">result<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>,
			    <parameter><decl><type><specifier pos:line="3" pos:column="29">const<pos:position pos:line="3" pos:column="34"/></specifier> <name pos:line="3" pos:column="35">char<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">line<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="4" pos:column="29">int<pos:position pos:line="4" pos:column="32"/></name></type> <name pos:line="4" pos:column="33">len<pos:position pos:line="4" pos:column="36"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="5" pos:column="29">int<pos:position pos:line="5" pos:column="32"/></name></type> <name pos:line="5" pos:column="33">linenr<pos:position pos:line="5" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="40"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">err<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">result<pos:position pos:line="9" pos:column="20"/></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21">
		<block type="pseudo"><return pos:line="10" pos:column="17">return;<pos:position pos:line="10" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name><name pos:line="12" pos:column="9">state<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">whitespace_error<pos:position pos:line="12" pos:column="32"/></name></name><operator pos:line="12" pos:column="32">++<pos:position pos:line="12" pos:column="34"/></operator></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">state<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">squelch_whitespace_errors<pos:position pos:line="13" pos:column="45"/></name></name> <operator pos:line="13" pos:column="46">&amp;&amp;<pos:position pos:line="13" pos:column="56"/></operator>
	    <name><name pos:line="14" pos:column="13">state<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">squelch_whitespace_errors<pos:position pos:line="14" pos:column="45"/></name></name> <operator pos:line="14" pos:column="46">&lt;<pos:position pos:line="14" pos:column="50"/></operator> <name><name pos:line="14" pos:column="48">state<pos:position pos:line="14" pos:column="53"/></name><operator pos:line="14" pos:column="53">-&gt;<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="55">whitespace_error<pos:position pos:line="14" pos:column="71"/></name></name></expr>)<pos:position pos:line="14" pos:column="72"/></condition><then pos:line="14" pos:column="72">
		<block type="pseudo"><return pos:line="15" pos:column="17">return;<pos:position pos:line="15" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="17" pos:column="9">err<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">whitespace_error_string<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">result<pos:position pos:line="17" pos:column="45"/></name></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">state<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">apply_verbosity<pos:position pos:line="18" pos:column="35"/></name></name> <operator pos:line="18" pos:column="36">&gt;<pos:position pos:line="18" pos:column="40"/></operator> <name pos:line="18" pos:column="38">verbosity_silent<pos:position pos:line="18" pos:column="54"/></name></expr>)<pos:position pos:line="18" pos:column="55"/></condition><then pos:line="18" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">fprintf<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">stderr<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="33">"%s:%d: %s.\n%.*s\n"<pos:position pos:line="19" pos:column="53"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="20" pos:column="25">state<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">patch_input_file<pos:position pos:line="20" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="50">linenr<pos:position pos:line="20" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="58">err<pos:position pos:line="20" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="63">len<pos:position pos:line="20" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="68">line<pos:position pos:line="20" pos:column="72"/></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="74"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">free<pos:position pos:line="21" pos:column="13"/></name><argument_list pos:line="21" pos:column="13">(<argument><expr><name pos:line="21" pos:column="14">err<pos:position pos:line="21" pos:column="17"/></name></expr></argument>)<pos:position pos:line="21" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6825_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">nedpool<pos:position pos:line="1" pos:column="8"/></name> <modifier pos:line="1" pos:column="9">*<pos:position pos:line="1" pos:column="10"/></modifier></type><name pos:line="1" pos:column="10">nedcreatepool<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">size_t<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">capacity<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">threads<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list> <name pos:line="1" pos:column="54">THROWSPEC<pos:position pos:line="1" pos:column="63"/></name>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">nedpool<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">ret<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
	<if pos:line="4" pos:column="9">if<condition pos:line="4" pos:column="11">(<expr><operator pos:line="4" pos:column="12">!<pos:position pos:line="4" pos:column="13"/></operator><operator pos:line="4" pos:column="13">(<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">ret<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">=<pos:position pos:line="4" pos:column="18"/></operator><operator pos:line="4" pos:column="18">(<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="19">nedpool<pos:position pos:line="4" pos:column="26"/></name> <operator pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></operator><operator pos:line="4" pos:column="28">)<pos:position pos:line="4" pos:column="29"/></operator> <call><name pos:line="4" pos:column="30">nedpcalloc<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><literal type="number" pos:line="4" pos:column="41">0<pos:position pos:line="4" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="44">1<pos:position pos:line="4" pos:column="45"/></literal></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="47">sizeof<argument_list pos:line="4" pos:column="53">(<argument><expr><name pos:line="4" pos:column="54">nedpool<pos:position pos:line="4" pos:column="61"/></name></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="63"/></argument_list></call><operator pos:line="4" pos:column="63">)<pos:position pos:line="4" pos:column="64"/></operator></expr>)<pos:position pos:line="4" pos:column="65"/></condition><then pos:line="4" pos:column="65"> <block type="pseudo"><return pos:line="4" pos:column="66">return <expr><literal type="number" pos:line="4" pos:column="73">0<pos:position pos:line="4" pos:column="74"/></literal></expr>;<pos:position pos:line="4" pos:column="75"/></return></block></then></if>
	<if pos:line="5" pos:column="9">if<condition pos:line="5" pos:column="11">(<expr><operator pos:line="5" pos:column="12">!<pos:position pos:line="5" pos:column="13"/></operator><call><name pos:line="5" pos:column="13">InitPool<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><name pos:line="5" pos:column="22">ret<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="27">capacity<pos:position pos:line="5" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="37">threads<pos:position pos:line="5" pos:column="44"/></name></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="46"/></condition><then pos:line="5" pos:column="46">
	<block pos:line="6" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">nedpfree<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="29">ret<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
		<return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>
	<return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">ret<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

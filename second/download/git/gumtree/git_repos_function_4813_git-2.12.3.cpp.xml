<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4813_git-2.12.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">find_copy_in_parent<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">scoreboard<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">sb<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="2" pos:column="33">struct<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">blame_entry<pos:position pos:line="2" pos:column="51"/></name></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier><modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier><modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">blamed<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="3" pos:column="33">struct<pos:position pos:line="3" pos:column="39"/></name> <name pos:line="3" pos:column="40">blame_entry<pos:position pos:line="3" pos:column="51"/></name></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier><modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">toosmall<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="4" pos:column="33">struct<pos:position pos:line="4" pos:column="39"/></name> <name pos:line="4" pos:column="40">origin<pos:position pos:line="4" pos:column="46"/></name></name> <modifier pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></modifier></type><name pos:line="4" pos:column="48">target<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="5" pos:column="33">struct<pos:position pos:line="5" pos:column="39"/></name> <name pos:line="5" pos:column="40">commit<pos:position pos:line="5" pos:column="46"/></name></name> <modifier pos:line="5" pos:column="47">*<pos:position pos:line="5" pos:column="48"/></modifier></type><name pos:line="5" pos:column="48">parent<pos:position pos:line="5" pos:column="54"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="6" pos:column="33">struct<pos:position pos:line="6" pos:column="39"/></name> <name pos:line="6" pos:column="40">origin<pos:position pos:line="6" pos:column="46"/></name></name> <modifier pos:line="6" pos:column="47">*<pos:position pos:line="6" pos:column="48"/></modifier></type><name pos:line="6" pos:column="48">porigin<pos:position pos:line="6" pos:column="55"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="7" pos:column="33">int<pos:position pos:line="7" pos:column="36"/></name></type> <name pos:line="7" pos:column="37">opt<pos:position pos:line="7" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="41"/></parameter_list>
<block pos:line="8" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">diff_options<pos:position pos:line="9" pos:column="28"/></name></name></type> <name pos:line="9" pos:column="29">diff_opts<pos:position pos:line="9" pos:column="38"/></name></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">i<pos:position pos:line="10" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="16">j<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">blame_list<pos:position pos:line="11" pos:column="26"/></name></name> <modifier pos:line="11" pos:column="27">*<pos:position pos:line="11" pos:column="28"/></modifier></type><name pos:line="11" pos:column="28">blame_list<pos:position pos:line="11" pos:column="38"/></name></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">num_ents<pos:position pos:line="12" pos:column="21"/></name></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">blame_entry<pos:position pos:line="13" pos:column="27"/></name></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">unblamed<pos:position pos:line="13" pos:column="37"/></name> <init pos:line="13" pos:column="38">= <expr><name><name pos:line="13" pos:column="40">target<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">-&gt;<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="48">suspects<pos:position pos:line="13" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="14" pos:column="9">struct<pos:position pos:line="14" pos:column="15"/></name> <name pos:line="14" pos:column="16">blame_entry<pos:position pos:line="14" pos:column="27"/></name></name> <modifier pos:line="14" pos:column="28">*<pos:position pos:line="14" pos:column="29"/></modifier></type><name pos:line="14" pos:column="29">leftover<pos:position pos:line="14" pos:column="37"/></name> <init pos:line="14" pos:column="38">= <expr><name pos:line="14" pos:column="40">NULL<pos:position pos:line="14" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="45"/></decl_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">unblamed<pos:position pos:line="16" pos:column="22"/></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23">
		<block type="pseudo"><return pos:line="17" pos:column="17">return;<pos:position pos:line="17" pos:column="24"/></return></block></then></if> <comment type="block" pos:line="17" pos:column="25">/* nothing remains for this target */</comment>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">diff_setup<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><operator pos:line="19" pos:column="20">&amp;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="21">diff_opts<pos:position pos:line="19" pos:column="30"/></name></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">DIFF_OPT_SET<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><operator pos:line="20" pos:column="22">&amp;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="23">diff_opts<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">RECURSIVE<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">diff_opts<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">.<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">output_format<pos:position pos:line="21" pos:column="32"/></name></name> <operator pos:line="21" pos:column="33">=<pos:position pos:line="21" pos:column="34"/></operator> <name pos:line="21" pos:column="35">DIFF_FORMAT_NO_OUTPUT<pos:position pos:line="21" pos:column="56"/></name></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">diff_setup_done<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><operator pos:line="23" pos:column="25">&amp;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="26">diff_opts<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>

	<comment type="block" pos:line="25" pos:column="9">/* Try "find copies harder" on new path if requested;
	 * we do not want to use diffcore_rename() actually to
	 * match things up; find_copies_harder is set only to
	 * force diff_tree_sha1() to feed all filepairs to diff_queue,
	 * and this code needs to be after diff_setup_done(), which
	 * usually makes find-copies-harder imply copy detection.
	 */</comment>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">(<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">opt<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">&amp;<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="20">PICKAXE_BLAME_COPY_HARDEST<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">)<pos:position pos:line="32" pos:column="47"/></operator>
	    <operator pos:line="33" pos:column="13">||<pos:position pos:line="33" pos:column="15"/></operator> <operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><operator pos:line="33" pos:column="17">(<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">opt<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">&amp;<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="24">PICKAXE_BLAME_COPY_HARDER<pos:position pos:line="33" pos:column="49"/></name><operator pos:line="33" pos:column="49">)<pos:position pos:line="33" pos:column="50"/></operator>
		<operator pos:line="34" pos:column="17">&amp;&amp;<pos:position pos:line="34" pos:column="27"/></operator> <operator pos:line="34" pos:column="20">(<pos:position pos:line="34" pos:column="21"/></operator><operator pos:line="34" pos:column="21">!<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">porigin<pos:position pos:line="34" pos:column="29"/></name> <operator pos:line="34" pos:column="30">||<pos:position pos:line="34" pos:column="32"/></operator> <call><name pos:line="34" pos:column="33">strcmp<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name><name pos:line="34" pos:column="40">target<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">-&gt;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="48">path<pos:position pos:line="34" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="54">porigin<pos:position pos:line="34" pos:column="61"/></name><operator pos:line="34" pos:column="61">-&gt;<pos:position pos:line="34" pos:column="66"/></operator><name pos:line="34" pos:column="63">path<pos:position pos:line="34" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="68"/></argument_list></call><operator pos:line="34" pos:column="68">)<pos:position pos:line="34" pos:column="69"/></operator><operator pos:line="34" pos:column="69">)<pos:position pos:line="34" pos:column="70"/></operator></expr>)<pos:position pos:line="34" pos:column="71"/></condition><then pos:line="34" pos:column="71">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="17">DIFF_OPT_SET<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><operator pos:line="35" pos:column="30">&amp;<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="31">diff_opts<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">FIND_COPIES_HARDER<pos:position pos:line="35" pos:column="60"/></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt></block></then></if>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">is_null_oid<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><operator pos:line="37" pos:column="25">&amp;<pos:position pos:line="37" pos:column="30"/></operator><name><name pos:line="37" pos:column="26">target<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">-&gt;<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="34">commit<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">-&gt;<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="42">object<pos:position pos:line="37" pos:column="48"/></name><operator pos:line="37" pos:column="48">.<pos:position pos:line="37" pos:column="49"/></operator><name pos:line="37" pos:column="49">oid<pos:position pos:line="37" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="54"/></condition><then pos:line="37" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="17">do_diff_cache<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><name><name pos:line="38" pos:column="31">parent<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">-&gt;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="39">tree<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">-&gt;<pos:position pos:line="38" pos:column="48"/></operator><name pos:line="38" pos:column="45">object<pos:position pos:line="38" pos:column="51"/></name><operator pos:line="38" pos:column="51">.<pos:position pos:line="38" pos:column="52"/></operator><name pos:line="38" pos:column="52">oid<pos:position pos:line="38" pos:column="55"/></name><operator pos:line="38" pos:column="55">.<pos:position pos:line="38" pos:column="56"/></operator><name pos:line="38" pos:column="56">hash<pos:position pos:line="38" pos:column="60"/></name></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="62">&amp;<pos:position pos:line="38" pos:column="67"/></operator><name pos:line="38" pos:column="63">diff_opts<pos:position pos:line="38" pos:column="72"/></name></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="74"/></expr_stmt></block></then>
	<else pos:line="39" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="17">diff_tree_sha1<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name><name pos:line="40" pos:column="32">parent<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">-&gt;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="40">tree<pos:position pos:line="40" pos:column="44"/></name><operator pos:line="40" pos:column="44">-&gt;<pos:position pos:line="40" pos:column="49"/></operator><name pos:line="40" pos:column="46">object<pos:position pos:line="40" pos:column="52"/></name><operator pos:line="40" pos:column="52">.<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="53">oid<pos:position pos:line="40" pos:column="56"/></name><operator pos:line="40" pos:column="56">.<pos:position pos:line="40" pos:column="57"/></operator><name pos:line="40" pos:column="57">hash<pos:position pos:line="40" pos:column="61"/></name></name></expr></argument>,
			       <argument><expr><name><name pos:line="41" pos:column="32">target<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">-&gt;<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="40">commit<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">-&gt;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="48">tree<pos:position pos:line="41" pos:column="52"/></name><operator pos:line="41" pos:column="52">-&gt;<pos:position pos:line="41" pos:column="57"/></operator><name pos:line="41" pos:column="54">object<pos:position pos:line="41" pos:column="60"/></name><operator pos:line="41" pos:column="60">.<pos:position pos:line="41" pos:column="61"/></operator><name pos:line="41" pos:column="61">oid<pos:position pos:line="41" pos:column="64"/></name><operator pos:line="41" pos:column="64">.<pos:position pos:line="41" pos:column="65"/></operator><name pos:line="41" pos:column="65">hash<pos:position pos:line="41" pos:column="69"/></name></name></expr></argument>,
			       <argument><expr><literal type="string" pos:line="42" pos:column="32">""<pos:position pos:line="42" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="42" pos:column="36">&amp;<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="37">diff_opts<pos:position pos:line="42" pos:column="46"/></name></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt></block></else></if>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><call><name pos:line="44" pos:column="14">DIFF_OPT_TST<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><operator pos:line="44" pos:column="27">&amp;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="28">diff_opts<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="39">FIND_COPIES_HARDER<pos:position pos:line="44" pos:column="57"/></name></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="59"/></condition><then pos:line="44" pos:column="59">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="17">diffcore_std<pos:position pos:line="45" pos:column="29"/></name><argument_list pos:line="45" pos:column="29">(<argument><expr><operator pos:line="45" pos:column="30">&amp;<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="31">diff_opts<pos:position pos:line="45" pos:column="40"/></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt></block></then></if>

	<do pos:line="47" pos:column="9">do <block pos:line="47" pos:column="12">{
		<decl_stmt><decl><type><name><name pos:line="48" pos:column="17">struct<pos:position pos:line="48" pos:column="23"/></name> <name pos:line="48" pos:column="24">blame_entry<pos:position pos:line="48" pos:column="35"/></name></name> <modifier pos:line="48" pos:column="36">*<pos:position pos:line="48" pos:column="37"/></modifier><modifier pos:line="48" pos:column="37">*<pos:position pos:line="48" pos:column="38"/></modifier></type><name pos:line="48" pos:column="38">unblamedtail<pos:position pos:line="48" pos:column="50"/></name> <init pos:line="48" pos:column="51">= <expr><operator pos:line="48" pos:column="53">&amp;<pos:position pos:line="48" pos:column="58"/></operator><name pos:line="48" pos:column="54">unblamed<pos:position pos:line="48" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="48" pos:column="63"/></decl_stmt>
		<expr_stmt><expr><name pos:line="49" pos:column="17">blame_list<pos:position pos:line="49" pos:column="27"/></name> <operator pos:line="49" pos:column="28">=<pos:position pos:line="49" pos:column="29"/></operator> <call><name pos:line="49" pos:column="30">setup_blame_list<pos:position pos:line="49" pos:column="46"/></name><argument_list pos:line="49" pos:column="46">(<argument><expr><name pos:line="49" pos:column="47">unblamed<pos:position pos:line="49" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="57">&amp;<pos:position pos:line="49" pos:column="62"/></operator><name pos:line="49" pos:column="58">num_ents<pos:position pos:line="49" pos:column="66"/></name></expr></argument>)<pos:position pos:line="49" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="68"/></expr_stmt>

		<for pos:line="51" pos:column="17">for <control pos:line="51" pos:column="21">(<init><expr><name pos:line="51" pos:column="22">i<pos:position pos:line="51" pos:column="23"/></name> <operator pos:line="51" pos:column="24">=<pos:position pos:line="51" pos:column="25"/></operator> <literal type="number" pos:line="51" pos:column="26">0<pos:position pos:line="51" pos:column="27"/></literal></expr>;<pos:position pos:line="51" pos:column="28"/></init> <condition><expr><name pos:line="51" pos:column="29">i<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">&lt;<pos:position pos:line="51" pos:column="35"/></operator> <name><name pos:line="51" pos:column="33">diff_queued_diff<pos:position pos:line="51" pos:column="49"/></name><operator pos:line="51" pos:column="49">.<pos:position pos:line="51" pos:column="50"/></operator><name pos:line="51" pos:column="50">nr<pos:position pos:line="51" pos:column="52"/></name></name></expr>;<pos:position pos:line="51" pos:column="53"/></condition> <incr><expr><name pos:line="51" pos:column="54">i<pos:position pos:line="51" pos:column="55"/></name><operator pos:line="51" pos:column="55">++<pos:position pos:line="51" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="51" pos:column="58"/></control> <block pos:line="51" pos:column="59">{
			<decl_stmt><decl><type><name><name pos:line="52" pos:column="25">struct<pos:position pos:line="52" pos:column="31"/></name> <name pos:line="52" pos:column="32">diff_filepair<pos:position pos:line="52" pos:column="45"/></name></name> <modifier pos:line="52" pos:column="46">*<pos:position pos:line="52" pos:column="47"/></modifier></type><name pos:line="52" pos:column="47">p<pos:position pos:line="52" pos:column="48"/></name> <init pos:line="52" pos:column="49">= <expr><name><name pos:line="52" pos:column="51">diff_queued_diff<pos:position pos:line="52" pos:column="67"/></name><operator pos:line="52" pos:column="67">.<pos:position pos:line="52" pos:column="68"/></operator><name pos:line="52" pos:column="68">queue<pos:position pos:line="52" pos:column="73"/></name><index pos:line="52" pos:column="73">[<expr><name pos:line="52" pos:column="74">i<pos:position pos:line="52" pos:column="75"/></name></expr>]<pos:position pos:line="52" pos:column="76"/></index></name></expr></init></decl>;<pos:position pos:line="52" pos:column="77"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="53" pos:column="25">struct<pos:position pos:line="53" pos:column="31"/></name> <name pos:line="53" pos:column="32">origin<pos:position pos:line="53" pos:column="38"/></name></name> <modifier pos:line="53" pos:column="39">*<pos:position pos:line="53" pos:column="40"/></modifier></type><name pos:line="53" pos:column="40">norigin<pos:position pos:line="53" pos:column="47"/></name></decl>;<pos:position pos:line="53" pos:column="48"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="54" pos:column="25">mmfile_t<pos:position pos:line="54" pos:column="33"/></name></type> <name pos:line="54" pos:column="34">file_p<pos:position pos:line="54" pos:column="40"/></name></decl>;<pos:position pos:line="54" pos:column="41"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="55" pos:column="25">struct<pos:position pos:line="55" pos:column="31"/></name> <name pos:line="55" pos:column="32">blame_entry<pos:position pos:line="55" pos:column="43"/></name></name></type> <name><name pos:line="55" pos:column="44">this<pos:position pos:line="55" pos:column="48"/></name><index pos:line="55" pos:column="48">[<expr><literal type="number" pos:line="55" pos:column="49">3<pos:position pos:line="55" pos:column="50"/></literal></expr>]<pos:position pos:line="55" pos:column="51"/></index></name></decl>;<pos:position pos:line="55" pos:column="52"/></decl_stmt>

			<if pos:line="57" pos:column="25">if <condition pos:line="57" pos:column="28">(<expr><operator pos:line="57" pos:column="29">!<pos:position pos:line="57" pos:column="30"/></operator><call><name pos:line="57" pos:column="30">DIFF_FILE_VALID<pos:position pos:line="57" pos:column="45"/></name><argument_list pos:line="57" pos:column="45">(<argument><expr><name><name pos:line="57" pos:column="46">p<pos:position pos:line="57" pos:column="47"/></name><operator pos:line="57" pos:column="47">-&gt;<pos:position pos:line="57" pos:column="52"/></operator><name pos:line="57" pos:column="49">one<pos:position pos:line="57" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="54"/></condition><then pos:line="57" pos:column="54">
				<block type="pseudo"><continue pos:line="58" pos:column="33">continue;<pos:position pos:line="58" pos:column="42"/></continue></block></then></if> <comment type="block" pos:line="58" pos:column="43">/* does not exist in parent */</comment>
			<if pos:line="59" pos:column="25">if <condition pos:line="59" pos:column="28">(<expr><call><name pos:line="59" pos:column="29">S_ISGITLINK<pos:position pos:line="59" pos:column="40"/></name><argument_list pos:line="59" pos:column="40">(<argument><expr><name><name pos:line="59" pos:column="41">p<pos:position pos:line="59" pos:column="42"/></name><operator pos:line="59" pos:column="42">-&gt;<pos:position pos:line="59" pos:column="47"/></operator><name pos:line="59" pos:column="44">one<pos:position pos:line="59" pos:column="47"/></name><operator pos:line="59" pos:column="47">-&gt;<pos:position pos:line="59" pos:column="52"/></operator><name pos:line="59" pos:column="49">mode<pos:position pos:line="59" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="55"/></condition><then pos:line="59" pos:column="55">
				<block type="pseudo"><continue pos:line="60" pos:column="33">continue;<pos:position pos:line="60" pos:column="42"/></continue></block></then></if> <comment type="block" pos:line="60" pos:column="43">/* ignore git links */</comment>
			<if pos:line="61" pos:column="25">if <condition pos:line="61" pos:column="28">(<expr><name pos:line="61" pos:column="29">porigin<pos:position pos:line="61" pos:column="36"/></name> <operator pos:line="61" pos:column="37">&amp;&amp;<pos:position pos:line="61" pos:column="47"/></operator> <operator pos:line="61" pos:column="40">!<pos:position pos:line="61" pos:column="41"/></operator><call><name pos:line="61" pos:column="41">strcmp<pos:position pos:line="61" pos:column="47"/></name><argument_list pos:line="61" pos:column="47">(<argument><expr><name><name pos:line="61" pos:column="48">p<pos:position pos:line="61" pos:column="49"/></name><operator pos:line="61" pos:column="49">-&gt;<pos:position pos:line="61" pos:column="54"/></operator><name pos:line="61" pos:column="51">one<pos:position pos:line="61" pos:column="54"/></name><operator pos:line="61" pos:column="54">-&gt;<pos:position pos:line="61" pos:column="59"/></operator><name pos:line="61" pos:column="56">path<pos:position pos:line="61" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="62">porigin<pos:position pos:line="61" pos:column="69"/></name><operator pos:line="61" pos:column="69">-&gt;<pos:position pos:line="61" pos:column="74"/></operator><name pos:line="61" pos:column="71">path<pos:position pos:line="61" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="77"/></condition><then pos:line="61" pos:column="77">
				<comment type="block" pos:line="62" pos:column="33">/* find_move already dealt with this path */</comment>
				<block type="pseudo"><continue pos:line="63" pos:column="33">continue;<pos:position pos:line="63" pos:column="42"/></continue></block></then></if>

			<expr_stmt><expr><name pos:line="65" pos:column="25">norigin<pos:position pos:line="65" pos:column="32"/></name> <operator pos:line="65" pos:column="33">=<pos:position pos:line="65" pos:column="34"/></operator> <call><name pos:line="65" pos:column="35">get_origin<pos:position pos:line="65" pos:column="45"/></name><argument_list pos:line="65" pos:column="45">(<argument><expr><name pos:line="65" pos:column="46">sb<pos:position pos:line="65" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="50">parent<pos:position pos:line="65" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="58">p<pos:position pos:line="65" pos:column="59"/></name><operator pos:line="65" pos:column="59">-&gt;<pos:position pos:line="65" pos:column="64"/></operator><name pos:line="65" pos:column="61">one<pos:position pos:line="65" pos:column="64"/></name><operator pos:line="65" pos:column="64">-&gt;<pos:position pos:line="65" pos:column="69"/></operator><name pos:line="65" pos:column="66">path<pos:position pos:line="65" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="66" pos:column="25">oidcpy<pos:position pos:line="66" pos:column="31"/></name><argument_list pos:line="66" pos:column="31">(<argument><expr><operator pos:line="66" pos:column="32">&amp;<pos:position pos:line="66" pos:column="37"/></operator><name><name pos:line="66" pos:column="33">norigin<pos:position pos:line="66" pos:column="40"/></name><operator pos:line="66" pos:column="40">-&gt;<pos:position pos:line="66" pos:column="45"/></operator><name pos:line="66" pos:column="42">blob_oid<pos:position pos:line="66" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="52">&amp;<pos:position pos:line="66" pos:column="57"/></operator><name><name pos:line="66" pos:column="53">p<pos:position pos:line="66" pos:column="54"/></name><operator pos:line="66" pos:column="54">-&gt;<pos:position pos:line="66" pos:column="59"/></operator><name pos:line="66" pos:column="56">one<pos:position pos:line="66" pos:column="59"/></name><operator pos:line="66" pos:column="59">-&gt;<pos:position pos:line="66" pos:column="64"/></operator><name pos:line="66" pos:column="61">oid<pos:position pos:line="66" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="67" pos:column="25">norigin<pos:position pos:line="67" pos:column="32"/></name><operator pos:line="67" pos:column="32">-&gt;<pos:position pos:line="67" pos:column="37"/></operator><name pos:line="67" pos:column="34">mode<pos:position pos:line="67" pos:column="38"/></name></name> <operator pos:line="67" pos:column="39">=<pos:position pos:line="67" pos:column="40"/></operator> <name><name pos:line="67" pos:column="41">p<pos:position pos:line="67" pos:column="42"/></name><operator pos:line="67" pos:column="42">-&gt;<pos:position pos:line="67" pos:column="47"/></operator><name pos:line="67" pos:column="44">one<pos:position pos:line="67" pos:column="47"/></name><operator pos:line="67" pos:column="47">-&gt;<pos:position pos:line="67" pos:column="52"/></operator><name pos:line="67" pos:column="49">mode<pos:position pos:line="67" pos:column="53"/></name></name></expr>;<pos:position pos:line="67" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="68" pos:column="25">fill_origin_blob<pos:position pos:line="68" pos:column="41"/></name><argument_list pos:line="68" pos:column="41">(<argument><expr><operator pos:line="68" pos:column="42">&amp;<pos:position pos:line="68" pos:column="47"/></operator><name><name pos:line="68" pos:column="43">sb<pos:position pos:line="68" pos:column="45"/></name><operator pos:line="68" pos:column="45">-&gt;<pos:position pos:line="68" pos:column="50"/></operator><name pos:line="68" pos:column="47">revs<pos:position pos:line="68" pos:column="51"/></name><operator pos:line="68" pos:column="51">-&gt;<pos:position pos:line="68" pos:column="56"/></operator><name pos:line="68" pos:column="53">diffopt<pos:position pos:line="68" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="62">norigin<pos:position pos:line="68" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="71">&amp;<pos:position pos:line="68" pos:column="76"/></operator><name pos:line="68" pos:column="72">file_p<pos:position pos:line="68" pos:column="78"/></name></expr></argument>)<pos:position pos:line="68" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="80"/></expr_stmt>
			<if pos:line="69" pos:column="25">if <condition pos:line="69" pos:column="28">(<expr><operator pos:line="69" pos:column="29">!<pos:position pos:line="69" pos:column="30"/></operator><name><name pos:line="69" pos:column="30">file_p<pos:position pos:line="69" pos:column="36"/></name><operator pos:line="69" pos:column="36">.<pos:position pos:line="69" pos:column="37"/></operator><name pos:line="69" pos:column="37">ptr<pos:position pos:line="69" pos:column="40"/></name></name></expr>)<pos:position pos:line="69" pos:column="41"/></condition><then pos:line="69" pos:column="41">
				<block type="pseudo"><continue pos:line="70" pos:column="33">continue;<pos:position pos:line="70" pos:column="42"/></continue></block></then></if>

			<for pos:line="72" pos:column="25">for <control pos:line="72" pos:column="29">(<init><expr><name pos:line="72" pos:column="30">j<pos:position pos:line="72" pos:column="31"/></name> <operator pos:line="72" pos:column="32">=<pos:position pos:line="72" pos:column="33"/></operator> <literal type="number" pos:line="72" pos:column="34">0<pos:position pos:line="72" pos:column="35"/></literal></expr>;<pos:position pos:line="72" pos:column="36"/></init> <condition><expr><name pos:line="72" pos:column="37">j<pos:position pos:line="72" pos:column="38"/></name> <operator pos:line="72" pos:column="39">&lt;<pos:position pos:line="72" pos:column="43"/></operator> <name pos:line="72" pos:column="41">num_ents<pos:position pos:line="72" pos:column="49"/></name></expr>;<pos:position pos:line="72" pos:column="50"/></condition> <incr><expr><name pos:line="72" pos:column="51">j<pos:position pos:line="72" pos:column="52"/></name><operator pos:line="72" pos:column="52">++<pos:position pos:line="72" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="72" pos:column="55"/></control> <block pos:line="72" pos:column="56">{
				<expr_stmt><expr><call><name pos:line="73" pos:column="33">find_copy_in_blob<pos:position pos:line="73" pos:column="50"/></name><argument_list pos:line="73" pos:column="50">(<argument><expr><name pos:line="73" pos:column="51">sb<pos:position pos:line="73" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="55">blame_list<pos:position pos:line="73" pos:column="65"/></name><index pos:line="73" pos:column="65">[<expr><name pos:line="73" pos:column="66">j<pos:position pos:line="73" pos:column="67"/></name></expr>]<pos:position pos:line="73" pos:column="68"/></index></name><operator pos:line="73" pos:column="68">.<pos:position pos:line="73" pos:column="69"/></operator><name pos:line="73" pos:column="69">ent<pos:position pos:line="73" pos:column="72"/></name></expr></argument>,
						  <argument><expr><name pos:line="74" pos:column="51">norigin<pos:position pos:line="74" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="60">this<pos:position pos:line="74" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="66">&amp;<pos:position pos:line="74" pos:column="71"/></operator><name pos:line="74" pos:column="67">file_p<pos:position pos:line="74" pos:column="73"/></name></expr></argument>)<pos:position pos:line="74" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="75"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="75" pos:column="33">copy_split_if_better<pos:position pos:line="75" pos:column="53"/></name><argument_list pos:line="75" pos:column="53">(<argument><expr><name pos:line="75" pos:column="54">sb<pos:position pos:line="75" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="58">blame_list<pos:position pos:line="75" pos:column="68"/></name><index pos:line="75" pos:column="68">[<expr><name pos:line="75" pos:column="69">j<pos:position pos:line="75" pos:column="70"/></name></expr>]<pos:position pos:line="75" pos:column="71"/></index></name><operator pos:line="75" pos:column="71">.<pos:position pos:line="75" pos:column="72"/></operator><name pos:line="75" pos:column="72">split<pos:position pos:line="75" pos:column="77"/></name></expr></argument>,
						     <argument><expr><name pos:line="76" pos:column="54">this<pos:position pos:line="76" pos:column="58"/></name></expr></argument>)<pos:position pos:line="76" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="77" pos:column="33">decref_split<pos:position pos:line="77" pos:column="45"/></name><argument_list pos:line="77" pos:column="45">(<argument><expr><name pos:line="77" pos:column="46">this<pos:position pos:line="77" pos:column="50"/></name></expr></argument>)<pos:position pos:line="77" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="52"/></expr_stmt>
			}<pos:position pos:line="78" pos:column="26"/></block></for>
			<expr_stmt><expr><call><name pos:line="79" pos:column="25">origin_decref<pos:position pos:line="79" pos:column="38"/></name><argument_list pos:line="79" pos:column="38">(<argument><expr><name pos:line="79" pos:column="39">norigin<pos:position pos:line="79" pos:column="46"/></name></expr></argument>)<pos:position pos:line="79" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="80" pos:column="18"/></block></for>

		<for pos:line="82" pos:column="17">for <control pos:line="82" pos:column="21">(<init><expr><name pos:line="82" pos:column="22">j<pos:position pos:line="82" pos:column="23"/></name> <operator pos:line="82" pos:column="24">=<pos:position pos:line="82" pos:column="25"/></operator> <literal type="number" pos:line="82" pos:column="26">0<pos:position pos:line="82" pos:column="27"/></literal></expr>;<pos:position pos:line="82" pos:column="28"/></init> <condition><expr><name pos:line="82" pos:column="29">j<pos:position pos:line="82" pos:column="30"/></name> <operator pos:line="82" pos:column="31">&lt;<pos:position pos:line="82" pos:column="35"/></operator> <name pos:line="82" pos:column="33">num_ents<pos:position pos:line="82" pos:column="41"/></name></expr>;<pos:position pos:line="82" pos:column="42"/></condition> <incr><expr><name pos:line="82" pos:column="43">j<pos:position pos:line="82" pos:column="44"/></name><operator pos:line="82" pos:column="44">++<pos:position pos:line="82" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="82" pos:column="47"/></control> <block pos:line="82" pos:column="48">{
			<decl_stmt><decl><type><name><name pos:line="83" pos:column="25">struct<pos:position pos:line="83" pos:column="31"/></name> <name pos:line="83" pos:column="32">blame_entry<pos:position pos:line="83" pos:column="43"/></name></name> <modifier pos:line="83" pos:column="44">*<pos:position pos:line="83" pos:column="45"/></modifier></type><name pos:line="83" pos:column="45">split<pos:position pos:line="83" pos:column="50"/></name> <init pos:line="83" pos:column="51">= <expr><name><name pos:line="83" pos:column="53">blame_list<pos:position pos:line="83" pos:column="63"/></name><index pos:line="83" pos:column="63">[<expr><name pos:line="83" pos:column="64">j<pos:position pos:line="83" pos:column="65"/></name></expr>]<pos:position pos:line="83" pos:column="66"/></index></name><operator pos:line="83" pos:column="66">.<pos:position pos:line="83" pos:column="67"/></operator><name pos:line="83" pos:column="67">split<pos:position pos:line="83" pos:column="72"/></name></expr></init></decl>;<pos:position pos:line="83" pos:column="73"/></decl_stmt>
			<if pos:line="84" pos:column="25">if <condition pos:line="84" pos:column="28">(<expr><name><name pos:line="84" pos:column="29">split<pos:position pos:line="84" pos:column="34"/></name><index pos:line="84" pos:column="34">[<expr><literal type="number" pos:line="84" pos:column="35">1<pos:position pos:line="84" pos:column="36"/></literal></expr>]<pos:position pos:line="84" pos:column="37"/></index></name><operator pos:line="84" pos:column="37">.<pos:position pos:line="84" pos:column="38"/></operator><name pos:line="84" pos:column="38">suspect<pos:position pos:line="84" pos:column="45"/></name> <operator pos:line="84" pos:column="46">&amp;&amp;<pos:position pos:line="84" pos:column="56"/></operator>
			    <name pos:line="85" pos:column="29">blame_copy_score<pos:position pos:line="85" pos:column="45"/></name> <operator pos:line="85" pos:column="46">&lt;<pos:position pos:line="85" pos:column="50"/></operator> <call><name pos:line="85" pos:column="48">ent_score<pos:position pos:line="85" pos:column="57"/></name><argument_list pos:line="85" pos:column="57">(<argument><expr><name pos:line="85" pos:column="58">sb<pos:position pos:line="85" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="62">&amp;<pos:position pos:line="85" pos:column="67"/></operator><name><name pos:line="85" pos:column="63">split<pos:position pos:line="85" pos:column="68"/></name><index pos:line="85" pos:column="68">[<expr><literal type="number" pos:line="85" pos:column="69">1<pos:position pos:line="85" pos:column="70"/></literal></expr>]<pos:position pos:line="85" pos:column="71"/></index></name></expr></argument>)<pos:position pos:line="85" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="73"/></condition><then pos:line="85" pos:column="73"> <block pos:line="85" pos:column="74">{
				<expr_stmt><expr><call><name pos:line="86" pos:column="33">split_blame<pos:position pos:line="86" pos:column="44"/></name><argument_list pos:line="86" pos:column="44">(<argument><expr><name pos:line="86" pos:column="45">blamed<pos:position pos:line="86" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="53">&amp;<pos:position pos:line="86" pos:column="58"/></operator><name pos:line="86" pos:column="54">unblamedtail<pos:position pos:line="86" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="68">split<pos:position pos:line="86" pos:column="73"/></name></expr></argument>,
					    <argument><expr><name><name pos:line="87" pos:column="45">blame_list<pos:position pos:line="87" pos:column="55"/></name><index pos:line="87" pos:column="55">[<expr><name pos:line="87" pos:column="56">j<pos:position pos:line="87" pos:column="57"/></name></expr>]<pos:position pos:line="87" pos:column="58"/></index></name><operator pos:line="87" pos:column="58">.<pos:position pos:line="87" pos:column="59"/></operator><name pos:line="87" pos:column="59">ent<pos:position pos:line="87" pos:column="62"/></name></expr></argument>)<pos:position pos:line="87" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="64"/></expr_stmt>
			}<pos:position pos:line="88" pos:column="26"/></block></then> <else pos:line="88" pos:column="27">else <block pos:line="88" pos:column="32">{
				<expr_stmt><expr><name><name pos:line="89" pos:column="33">blame_list<pos:position pos:line="89" pos:column="43"/></name><index pos:line="89" pos:column="43">[<expr><name pos:line="89" pos:column="44">j<pos:position pos:line="89" pos:column="45"/></name></expr>]<pos:position pos:line="89" pos:column="46"/></index></name><operator pos:line="89" pos:column="46">.<pos:position pos:line="89" pos:column="47"/></operator><name><name pos:line="89" pos:column="47">ent<pos:position pos:line="89" pos:column="50"/></name><operator pos:line="89" pos:column="50">-&gt;<pos:position pos:line="89" pos:column="55"/></operator><name pos:line="89" pos:column="52">next<pos:position pos:line="89" pos:column="56"/></name></name> <operator pos:line="89" pos:column="57">=<pos:position pos:line="89" pos:column="58"/></operator> <name pos:line="89" pos:column="59">leftover<pos:position pos:line="89" pos:column="67"/></name></expr>;<pos:position pos:line="89" pos:column="68"/></expr_stmt>
				<expr_stmt><expr><name pos:line="90" pos:column="33">leftover<pos:position pos:line="90" pos:column="41"/></name> <operator pos:line="90" pos:column="42">=<pos:position pos:line="90" pos:column="43"/></operator> <name><name pos:line="90" pos:column="44">blame_list<pos:position pos:line="90" pos:column="54"/></name><index pos:line="90" pos:column="54">[<expr><name pos:line="90" pos:column="55">j<pos:position pos:line="90" pos:column="56"/></name></expr>]<pos:position pos:line="90" pos:column="57"/></index></name><operator pos:line="90" pos:column="57">.<pos:position pos:line="90" pos:column="58"/></operator><name pos:line="90" pos:column="58">ent<pos:position pos:line="90" pos:column="61"/></name></expr>;<pos:position pos:line="90" pos:column="62"/></expr_stmt>
			}<pos:position pos:line="91" pos:column="26"/></block></else></if>
			<expr_stmt><expr><call><name pos:line="92" pos:column="25">decref_split<pos:position pos:line="92" pos:column="37"/></name><argument_list pos:line="92" pos:column="37">(<argument><expr><name pos:line="92" pos:column="38">split<pos:position pos:line="92" pos:column="43"/></name></expr></argument>)<pos:position pos:line="92" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="93" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="94" pos:column="17">free<pos:position pos:line="94" pos:column="21"/></name><argument_list pos:line="94" pos:column="21">(<argument><expr><name pos:line="94" pos:column="22">blame_list<pos:position pos:line="94" pos:column="32"/></name></expr></argument>)<pos:position pos:line="94" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="95" pos:column="17">*<pos:position pos:line="95" pos:column="18"/></operator><name pos:line="95" pos:column="18">unblamedtail<pos:position pos:line="95" pos:column="30"/></name> <operator pos:line="95" pos:column="31">=<pos:position pos:line="95" pos:column="32"/></operator> <name pos:line="95" pos:column="33">NULL<pos:position pos:line="95" pos:column="37"/></name></expr>;<pos:position pos:line="95" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="96" pos:column="17">toosmall<pos:position pos:line="96" pos:column="25"/></name> <operator pos:line="96" pos:column="26">=<pos:position pos:line="96" pos:column="27"/></operator> <call><name pos:line="96" pos:column="28">filter_small<pos:position pos:line="96" pos:column="40"/></name><argument_list pos:line="96" pos:column="40">(<argument><expr><name pos:line="96" pos:column="41">sb<pos:position pos:line="96" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="45">toosmall<pos:position pos:line="96" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="55">&amp;<pos:position pos:line="96" pos:column="60"/></operator><name pos:line="96" pos:column="56">unblamed<pos:position pos:line="96" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="66">blame_copy_score<pos:position pos:line="96" pos:column="82"/></name></expr></argument>)<pos:position pos:line="96" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="84"/></expr_stmt>
	}<pos:position pos:line="97" pos:column="10"/></block> while <condition pos:line="97" pos:column="17">(<expr><name pos:line="97" pos:column="18">unblamed<pos:position pos:line="97" pos:column="26"/></name></expr>)<pos:position pos:line="97" pos:column="27"/></condition>;<pos:position pos:line="97" pos:column="28"/></do>
	<expr_stmt><expr><name><name pos:line="98" pos:column="9">target<pos:position pos:line="98" pos:column="15"/></name><operator pos:line="98" pos:column="15">-&gt;<pos:position pos:line="98" pos:column="20"/></operator><name pos:line="98" pos:column="17">suspects<pos:position pos:line="98" pos:column="25"/></name></name> <operator pos:line="98" pos:column="26">=<pos:position pos:line="98" pos:column="27"/></operator> <call><name pos:line="98" pos:column="28">reverse_blame<pos:position pos:line="98" pos:column="41"/></name><argument_list pos:line="98" pos:column="41">(<argument><expr><name pos:line="98" pos:column="42">leftover<pos:position pos:line="98" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="52">NULL<pos:position pos:line="98" pos:column="56"/></name></expr></argument>)<pos:position pos:line="98" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="99" pos:column="9">diff_flush<pos:position pos:line="99" pos:column="19"/></name><argument_list pos:line="99" pos:column="19">(<argument><expr><operator pos:line="99" pos:column="20">&amp;<pos:position pos:line="99" pos:column="25"/></operator><name pos:line="99" pos:column="21">diff_opts<pos:position pos:line="99" pos:column="30"/></name></expr></argument>)<pos:position pos:line="99" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="100" pos:column="9">clear_pathspec<pos:position pos:line="100" pos:column="23"/></name><argument_list pos:line="100" pos:column="23">(<argument><expr><operator pos:line="100" pos:column="24">&amp;<pos:position pos:line="100" pos:column="29"/></operator><name><name pos:line="100" pos:column="25">diff_opts<pos:position pos:line="100" pos:column="34"/></name><operator pos:line="100" pos:column="34">.<pos:position pos:line="100" pos:column="35"/></operator><name pos:line="100" pos:column="35">pathspec<pos:position pos:line="100" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="45"/></expr_stmt>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

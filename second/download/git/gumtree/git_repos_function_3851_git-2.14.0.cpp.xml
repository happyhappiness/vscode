<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3851_git-2.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">setup_pager<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">void<pos:position pos:line="1" pos:column="22"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="23"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">pager<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><call><name pos:line="3" pos:column="29">git_pager<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">(<argument><expr><call><name pos:line="3" pos:column="39">isatty<pos:position pos:line="3" pos:column="45"/></name><argument_list pos:line="3" pos:column="45">(<argument><expr><literal type="number" pos:line="3" pos:column="46">1<pos:position pos:line="3" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="50"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">pager<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20">
		<block type="pseudo"><return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return></block></then></if>

	<comment type="block" pos:line="8" pos:column="9">/*
	 * force computing the width of the terminal before we redirect
	 * the standard output to the pager.
	 */</comment>
	<expr_stmt><expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">void<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">)<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">term_columns<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">()<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">setenv<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="string" pos:line="14" pos:column="16">"GIT_PAGER_IN_USE"<pos:position pos:line="14" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="36">"true"<pos:position pos:line="14" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="44">1<pos:position pos:line="14" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>

	<comment type="block" pos:line="16" pos:column="9">/* spawn the pager */</comment>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">prepare_pager_args<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><operator pos:line="17" pos:column="28">&amp;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="29">pager_process<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">pager<pos:position pos:line="17" pos:column="49"/></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">pager_process<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">.<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="23">in<pos:position pos:line="18" pos:column="25"/></name></name> <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <operator pos:line="18" pos:column="28">-<pos:position pos:line="18" pos:column="29"/></operator><literal type="number" pos:line="18" pos:column="29">1<pos:position pos:line="18" pos:column="30"/></literal></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">argv_array_push<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><operator pos:line="19" pos:column="25">&amp;<pos:position pos:line="19" pos:column="30"/></operator><name><name pos:line="19" pos:column="26">pager_process<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">.<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="40">env_array<pos:position pos:line="19" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="51">"GIT_PAGER_IN_USE"<pos:position pos:line="19" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="71"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">start_command<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><operator pos:line="20" pos:column="27">&amp;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="28">pager_process<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="43"/></condition><then pos:line="20" pos:column="43">
		<block type="pseudo"><return pos:line="21" pos:column="17">return;<pos:position pos:line="21" pos:column="24"/></return></block></then></if>

	<comment type="block" pos:line="23" pos:column="9">/* original process continues, but writes to the pipe */</comment>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">dup2<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name><name pos:line="24" pos:column="14">pager_process<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">.<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="28">in<pos:position pos:line="24" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="32">1<pos:position pos:line="24" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">isatty<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><literal type="number" pos:line="25" pos:column="20">2<pos:position pos:line="25" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="23"/></condition><then pos:line="25" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">dup2<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name><name pos:line="26" pos:column="22">pager_process<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">.<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="36">in<pos:position pos:line="26" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="40">2<pos:position pos:line="26" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">close<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name><name pos:line="27" pos:column="15">pager_process<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">.<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="29">in<pos:position pos:line="27" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>

	<comment type="block" pos:line="29" pos:column="9">/* this makes sure that the parent terminates after the pager */</comment>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">sigchain_push_common<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">wait_for_pager_signal<pos:position pos:line="30" pos:column="51"/></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">atexit<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><name pos:line="31" pos:column="16">wait_for_pager_atexit<pos:position pos:line="31" pos:column="37"/></name></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

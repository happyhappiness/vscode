<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5042_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name><name pos:line="1" pos:column="15">struct<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">commit_name<pos:position pos:line="1" pos:column="33"/></name></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">find_commit_name<pos:position pos:line="1" pos:column="51"/></name><parameter_list pos:line="1" pos:column="51">(<parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name><name pos:line="1" pos:column="58">struct<pos:position pos:line="1" pos:column="64"/></name> <name pos:line="1" pos:column="65">object_id<pos:position pos:line="1" pos:column="74"/></name></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">peeled<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="83"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<return pos:line="3" pos:column="9">return <expr><call><name pos:line="3" pos:column="16">hashmap_get_from_hash<pos:position pos:line="3" pos:column="37"/></name><argument_list pos:line="3" pos:column="37">(<argument><expr><operator pos:line="3" pos:column="38">&amp;<pos:position pos:line="3" pos:column="43"/></operator><name pos:line="3" pos:column="39">names<pos:position pos:line="3" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="3" pos:column="46">sha1hash<pos:position pos:line="3" pos:column="54"/></name><argument_list pos:line="3" pos:column="54">(<argument><expr><name><name pos:line="3" pos:column="55">peeled<pos:position pos:line="3" pos:column="61"/></name><operator pos:line="3" pos:column="61">-&gt;<pos:position pos:line="3" pos:column="66"/></operator><name pos:line="3" pos:column="63">hash<pos:position pos:line="3" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="3" pos:column="70">peeled<pos:position pos:line="3" pos:column="76"/></name><operator pos:line="3" pos:column="76">-&gt;<pos:position pos:line="3" pos:column="81"/></operator><name pos:line="3" pos:column="78">hash<pos:position pos:line="3" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="84"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1107.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">files_ref_path<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">files_ref_store<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">refs<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
			   <parameter><decl><type><name><name pos:line="2" pos:column="28">struct<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">strbuf<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">sb<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>,
			   <parameter><decl><type><specifier pos:line="3" pos:column="28">const<pos:position pos:line="3" pos:column="33"/></specifier> <name pos:line="3" pos:column="34">char<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">refname<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<switch pos:line="5" pos:column="9">switch <condition pos:line="5" pos:column="16">(<expr><call><name pos:line="5" pos:column="17">ref_type<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">refname<pos:position pos:line="5" pos:column="33"/></name></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="35"/></condition> <block pos:line="5" pos:column="36">{
	<case pos:line="6" pos:column="9">case <expr><name pos:line="6" pos:column="14">REF_TYPE_PER_WORKTREE<pos:position pos:line="6" pos:column="35"/></name></expr>:<pos:position pos:line="6" pos:column="36"/></case>
	<case pos:line="7" pos:column="9">case <expr><name pos:line="7" pos:column="14">REF_TYPE_PSEUDOREF<pos:position pos:line="7" pos:column="32"/></name></expr>:<pos:position pos:line="7" pos:column="33"/></case>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">strbuf_addf<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">sb<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="33">"%s/%s"<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="42">refs<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">-&gt;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="48">gitdir<pos:position pos:line="8" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="56">refname<pos:position pos:line="8" pos:column="63"/></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="65"/></expr_stmt>
		<break pos:line="9" pos:column="17">break;<pos:position pos:line="9" pos:column="23"/></break>
	<case pos:line="10" pos:column="9">case <expr><name pos:line="10" pos:column="14">REF_TYPE_NORMAL<pos:position pos:line="10" pos:column="29"/></name></expr>:<pos:position pos:line="10" pos:column="30"/></case>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">strbuf_addf<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">sb<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="33">"%s/%s"<pos:position pos:line="11" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="42">refs<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">-&gt;<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="48">gitcommondir<pos:position pos:line="11" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="62">refname<pos:position pos:line="11" pos:column="69"/></name></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="71"/></expr_stmt>
		<break pos:line="12" pos:column="17">break;<pos:position pos:line="12" pos:column="23"/></break>
	<default pos:line="13" pos:column="9">default:<pos:position pos:line="13" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">die<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><literal type="string" pos:line="14" pos:column="21">"BUG: unknown ref type %d of ref %s"<pos:position pos:line="14" pos:column="57"/></literal></expr></argument>,
		    <argument><expr><call><name pos:line="15" pos:column="21">ref_type<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">refname<pos:position pos:line="15" pos:column="37"/></name></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="40">refname<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></switch>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

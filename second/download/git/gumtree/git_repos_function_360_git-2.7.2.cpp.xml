<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_360_git-2.7.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_write_index<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">index_state<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">istate<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">newfd<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
			  <parameter><decl><type><name pos:line="2" pos:column="27">int<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">strip_extensions<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">git_SHA_CTX<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">c<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">cache_header<pos:position pos:line="5" pos:column="28"/></name></name></type> <name pos:line="5" pos:column="29">hdr<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">err<pos:position pos:line="6" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="21">removed<pos:position pos:line="6" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="30">extended<pos:position pos:line="6" pos:column="38"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="40">hdr_version<pos:position pos:line="6" pos:column="51"/></name></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">cache_entry<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier><modifier pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></modifier></type><name pos:line="7" pos:column="30">cache<pos:position pos:line="7" pos:column="35"/></name> <init pos:line="7" pos:column="36">= <expr><name><name pos:line="7" pos:column="38">istate<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">cache<pos:position pos:line="7" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">entries<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><name><name pos:line="8" pos:column="23">istate<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">cache_nr<pos:position pos:line="8" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">stat<pos:position pos:line="9" pos:column="20"/></name></name></type> <name pos:line="9" pos:column="21">st<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">strbuf<pos:position pos:line="10" pos:column="22"/></name></name></type> <name pos:line="10" pos:column="23">previous_name_buf<pos:position pos:line="10" pos:column="40"/></name> <init pos:line="10" pos:column="41">= <expr><name pos:line="10" pos:column="43">STRBUF_INIT<pos:position pos:line="10" pos:column="54"/></name></expr></init></decl>, <modifier pos:line="10" pos:column="56">*<pos:position pos:line="10" pos:column="57"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="57">previous_name<pos:position pos:line="10" pos:column="70"/></name></decl>;<pos:position pos:line="10" pos:column="71"/></decl_stmt>

	<for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><expr><name pos:line="12" pos:column="14">i<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">removed<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="28">extended<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">=<pos:position pos:line="12" pos:column="38"/></operator> <literal type="number" pos:line="12" pos:column="39">0<pos:position pos:line="12" pos:column="40"/></literal></expr>;<pos:position pos:line="12" pos:column="41"/></init> <condition><expr><name pos:line="12" pos:column="42">i<pos:position pos:line="12" pos:column="43"/></name> <operator pos:line="12" pos:column="44">&lt;<pos:position pos:line="12" pos:column="48"/></operator> <name pos:line="12" pos:column="46">entries<pos:position pos:line="12" pos:column="53"/></name></expr>;<pos:position pos:line="12" pos:column="54"/></condition> <incr><expr><name pos:line="12" pos:column="55">i<pos:position pos:line="12" pos:column="56"/></name><operator pos:line="12" pos:column="56">++<pos:position pos:line="12" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="59"/></control> <block pos:line="12" pos:column="60">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name><name pos:line="13" pos:column="21">cache<pos:position pos:line="13" pos:column="26"/></name><index pos:line="13" pos:column="26">[<expr><name pos:line="13" pos:column="27">i<pos:position pos:line="13" pos:column="28"/></name></expr>]<pos:position pos:line="13" pos:column="29"/></index></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">ce_flags<pos:position pos:line="13" pos:column="39"/></name> <operator pos:line="13" pos:column="40">&amp;<pos:position pos:line="13" pos:column="45"/></operator> <name pos:line="13" pos:column="42">CE_REMOVE<pos:position pos:line="13" pos:column="51"/></name></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="25">removed<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">++<pos:position pos:line="14" pos:column="34"/></operator></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="16" pos:column="17">/* reduce extended entries if possible */</comment>
		<expr_stmt><expr><name><name pos:line="17" pos:column="17">cache<pos:position pos:line="17" pos:column="22"/></name><index pos:line="17" pos:column="22">[<expr><name pos:line="17" pos:column="23">i<pos:position pos:line="17" pos:column="24"/></name></expr>]<pos:position pos:line="17" pos:column="25"/></index></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">ce_flags<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">&amp;=<pos:position pos:line="17" pos:column="42"/></operator> <operator pos:line="17" pos:column="39">~<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="40">CE_EXTENDED<pos:position pos:line="17" pos:column="51"/></name></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">cache<pos:position pos:line="18" pos:column="26"/></name><index pos:line="18" pos:column="26">[<expr><name pos:line="18" pos:column="27">i<pos:position pos:line="18" pos:column="28"/></name></expr>]<pos:position pos:line="18" pos:column="29"/></index></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">ce_flags<pos:position pos:line="18" pos:column="39"/></name> <operator pos:line="18" pos:column="40">&amp;<pos:position pos:line="18" pos:column="45"/></operator> <name pos:line="18" pos:column="42">CE_EXTENDED_FLAGS<pos:position pos:line="18" pos:column="59"/></name></expr>)<pos:position pos:line="18" pos:column="60"/></condition><then pos:line="18" pos:column="60"> <block pos:line="18" pos:column="61">{
			<expr_stmt><expr><name pos:line="19" pos:column="25">extended<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">++<pos:position pos:line="19" pos:column="35"/></operator></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="20" pos:column="25">cache<pos:position pos:line="20" pos:column="30"/></name><index pos:line="20" pos:column="30">[<expr><name pos:line="20" pos:column="31">i<pos:position pos:line="20" pos:column="32"/></name></expr>]<pos:position pos:line="20" pos:column="33"/></index></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">ce_flags<pos:position pos:line="20" pos:column="43"/></name> <operator pos:line="20" pos:column="44">|=<pos:position pos:line="20" pos:column="46"/></operator> <name pos:line="20" pos:column="47">CE_EXTENDED<pos:position pos:line="20" pos:column="58"/></name></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>
	}<pos:position pos:line="22" pos:column="10"/></block></for>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name><name pos:line="24" pos:column="14">istate<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">version<pos:position pos:line="24" pos:column="29"/></name></name></expr>)<pos:position pos:line="24" pos:column="30"/></condition><then pos:line="24" pos:column="30"> <block pos:line="24" pos:column="31">{
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">istate<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">version<pos:position pos:line="25" pos:column="32"/></name></name> <operator pos:line="25" pos:column="33">=<pos:position pos:line="25" pos:column="34"/></operator> <call><name pos:line="25" pos:column="35">get_index_format_default<pos:position pos:line="25" pos:column="59"/></name><argument_list pos:line="25" pos:column="59">()<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><call><name pos:line="26" pos:column="21">getenv<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><literal type="string" pos:line="26" pos:column="28">"GIT_TEST_SPLIT_INDEX"<pos:position pos:line="26" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="52"/></condition><then pos:line="26" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="25">init_split_index<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">istate<pos:position pos:line="27" pos:column="48"/></name></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt></block></then></if>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="30" pos:column="9">/* demote version 3 to version 2 when the latter suffices */</comment>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">istate<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">-&gt;<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="21">version<pos:position pos:line="31" pos:column="28"/></name></name> <operator pos:line="31" pos:column="29">==<pos:position pos:line="31" pos:column="31"/></operator> <literal type="number" pos:line="31" pos:column="32">3<pos:position pos:line="31" pos:column="33"/></literal> <operator pos:line="31" pos:column="34">||<pos:position pos:line="31" pos:column="36"/></operator> <name><name pos:line="31" pos:column="37">istate<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">-&gt;<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="45">version<pos:position pos:line="31" pos:column="52"/></name></name> <operator pos:line="31" pos:column="53">==<pos:position pos:line="31" pos:column="55"/></operator> <literal type="number" pos:line="31" pos:column="56">2<pos:position pos:line="31" pos:column="57"/></literal></expr>)<pos:position pos:line="31" pos:column="58"/></condition><then pos:line="31" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="17">istate<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">version<pos:position pos:line="32" pos:column="32"/></name></name> <operator pos:line="32" pos:column="33">=<pos:position pos:line="32" pos:column="34"/></operator> <ternary><condition><expr><name pos:line="32" pos:column="35">extended<pos:position pos:line="32" pos:column="43"/></name></expr> ?<pos:position pos:line="32" pos:column="45"/></condition><then pos:line="32" pos:column="45"> <expr><literal type="number" pos:line="32" pos:column="46">3<pos:position pos:line="32" pos:column="47"/></literal></expr> <pos:position pos:line="32" pos:column="48"/></then><else pos:line="32" pos:column="48">: <expr><literal type="number" pos:line="32" pos:column="50">2<pos:position pos:line="32" pos:column="51"/></literal></expr></else></ternary></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="34" pos:column="9">hdr_version<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <name><name pos:line="34" pos:column="23">istate<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">version<pos:position pos:line="34" pos:column="38"/></name></name></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="36" pos:column="9">hdr<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">.<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="13">hdr_signature<pos:position pos:line="36" pos:column="26"/></name></name> <operator pos:line="36" pos:column="27">=<pos:position pos:line="36" pos:column="28"/></operator> <call><name pos:line="36" pos:column="29">htonl<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">CACHE_SIGNATURE<pos:position pos:line="36" pos:column="50"/></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="37" pos:column="9">hdr<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">.<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="13">hdr_version<pos:position pos:line="37" pos:column="24"/></name></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <call><name pos:line="37" pos:column="27">htonl<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">hdr_version<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="38" pos:column="9">hdr<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">.<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="13">hdr_entries<pos:position pos:line="38" pos:column="24"/></name></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <call><name pos:line="38" pos:column="27">htonl<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">entries<pos:position pos:line="38" pos:column="40"/></name> <operator pos:line="38" pos:column="41">-<pos:position pos:line="38" pos:column="42"/></operator> <name pos:line="38" pos:column="43">removed<pos:position pos:line="38" pos:column="50"/></name></expr></argument>)<pos:position pos:line="38" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="52"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="40" pos:column="9">git_SHA1_Init<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><operator pos:line="40" pos:column="23">&amp;<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="24">c<pos:position pos:line="40" pos:column="25"/></name></expr></argument>)<pos:position pos:line="40" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><call><name pos:line="41" pos:column="13">ce_write<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><operator pos:line="41" pos:column="22">&amp;<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="23">c<pos:position pos:line="41" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="26">newfd<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="33">&amp;<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="34">hdr<pos:position pos:line="41" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="39">sizeof<argument_list pos:line="41" pos:column="45">(<argument><expr><name pos:line="41" pos:column="46">hdr<pos:position pos:line="41" pos:column="49"/></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></call> <operator pos:line="41" pos:column="52">&lt;<pos:position pos:line="41" pos:column="56"/></operator> <literal type="number" pos:line="41" pos:column="54">0<pos:position pos:line="41" pos:column="55"/></literal></expr>)<pos:position pos:line="41" pos:column="56"/></condition><then pos:line="41" pos:column="56">
		<block type="pseudo"><return pos:line="42" pos:column="17">return <expr><operator pos:line="42" pos:column="24">-<pos:position pos:line="42" pos:column="25"/></operator><literal type="number" pos:line="42" pos:column="25">1<pos:position pos:line="42" pos:column="26"/></literal></expr>;<pos:position pos:line="42" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="44" pos:column="9">previous_name<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">=<pos:position pos:line="44" pos:column="24"/></operator> <ternary><condition><expr><operator pos:line="44" pos:column="25">(<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="26">hdr_version<pos:position pos:line="44" pos:column="37"/></name> <operator pos:line="44" pos:column="38">==<pos:position pos:line="44" pos:column="40"/></operator> <literal type="number" pos:line="44" pos:column="41">4<pos:position pos:line="44" pos:column="42"/></literal><operator pos:line="44" pos:column="42">)<pos:position pos:line="44" pos:column="43"/></operator></expr> ?<pos:position pos:line="44" pos:column="45"/></condition><then pos:line="44" pos:column="45"> <expr><operator pos:line="44" pos:column="46">&amp;<pos:position pos:line="44" pos:column="51"/></operator><name pos:line="44" pos:column="47">previous_name_buf<pos:position pos:line="44" pos:column="64"/></name></expr> <pos:position pos:line="44" pos:column="65"/></then><else pos:line="44" pos:column="65">: <expr><name pos:line="44" pos:column="67">NULL<pos:position pos:line="44" pos:column="71"/></name></expr></else></ternary></expr>;<pos:position pos:line="44" pos:column="72"/></expr_stmt>
	<for pos:line="45" pos:column="9">for <control pos:line="45" pos:column="13">(<init><expr><name pos:line="45" pos:column="14">i<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <literal type="number" pos:line="45" pos:column="18">0<pos:position pos:line="45" pos:column="19"/></literal></expr>;<pos:position pos:line="45" pos:column="20"/></init> <condition><expr><name pos:line="45" pos:column="21">i<pos:position pos:line="45" pos:column="22"/></name> <operator pos:line="45" pos:column="23">&lt;<pos:position pos:line="45" pos:column="27"/></operator> <name pos:line="45" pos:column="25">entries<pos:position pos:line="45" pos:column="32"/></name></expr>;<pos:position pos:line="45" pos:column="33"/></condition> <incr><expr><name pos:line="45" pos:column="34">i<pos:position pos:line="45" pos:column="35"/></name><operator pos:line="45" pos:column="35">++<pos:position pos:line="45" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="45" pos:column="38"/></control> <block pos:line="45" pos:column="39">{
		<decl_stmt><decl><type><name><name pos:line="46" pos:column="17">struct<pos:position pos:line="46" pos:column="23"/></name> <name pos:line="46" pos:column="24">cache_entry<pos:position pos:line="46" pos:column="35"/></name></name> <modifier pos:line="46" pos:column="36">*<pos:position pos:line="46" pos:column="37"/></modifier></type><name pos:line="46" pos:column="37">ce<pos:position pos:line="46" pos:column="39"/></name> <init pos:line="46" pos:column="40">= <expr><name><name pos:line="46" pos:column="42">cache<pos:position pos:line="46" pos:column="47"/></name><index pos:line="46" pos:column="47">[<expr><name pos:line="46" pos:column="48">i<pos:position pos:line="46" pos:column="49"/></name></expr>]<pos:position pos:line="46" pos:column="50"/></index></name></expr></init></decl>;<pos:position pos:line="46" pos:column="51"/></decl_stmt>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name><name pos:line="47" pos:column="21">ce<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">-&gt;<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="25">ce_flags<pos:position pos:line="47" pos:column="33"/></name></name> <operator pos:line="47" pos:column="34">&amp;<pos:position pos:line="47" pos:column="39"/></operator> <name pos:line="47" pos:column="36">CE_REMOVE<pos:position pos:line="47" pos:column="45"/></name></expr>)<pos:position pos:line="47" pos:column="46"/></condition><then pos:line="47" pos:column="46">
			<block type="pseudo"><continue pos:line="48" pos:column="25">continue;<pos:position pos:line="48" pos:column="34"/></continue></block></then></if>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><operator pos:line="49" pos:column="21">!<pos:position pos:line="49" pos:column="22"/></operator><call><name pos:line="49" pos:column="22">ce_uptodate<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><name pos:line="49" pos:column="34">ce<pos:position pos:line="49" pos:column="36"/></name></expr></argument>)<pos:position pos:line="49" pos:column="37"/></argument_list></call> <operator pos:line="49" pos:column="38">&amp;&amp;<pos:position pos:line="49" pos:column="48"/></operator> <call><name pos:line="49" pos:column="41">is_racy_timestamp<pos:position pos:line="49" pos:column="58"/></name><argument_list pos:line="49" pos:column="58">(<argument><expr><name pos:line="49" pos:column="59">istate<pos:position pos:line="49" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="67">ce<pos:position pos:line="49" pos:column="69"/></name></expr></argument>)<pos:position pos:line="49" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="71"/></condition><then pos:line="49" pos:column="71">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="25">ce_smudge_racily_clean_entry<pos:position pos:line="50" pos:column="53"/></name><argument_list pos:line="50" pos:column="53">(<argument><expr><name pos:line="50" pos:column="54">ce<pos:position pos:line="50" pos:column="56"/></name></expr></argument>)<pos:position pos:line="50" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="58"/></expr_stmt></block></then></if>
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><call><name pos:line="51" pos:column="21">is_null_sha1<pos:position pos:line="51" pos:column="33"/></name><argument_list pos:line="51" pos:column="33">(<argument><expr><name><name pos:line="51" pos:column="34">ce<pos:position pos:line="51" pos:column="36"/></name><operator pos:line="51" pos:column="36">-&gt;<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="38">sha1<pos:position pos:line="51" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="44"/></condition><then pos:line="51" pos:column="44"> <block pos:line="51" pos:column="45">{
			<decl_stmt><decl><specifier pos:line="52" pos:column="25">static<pos:position pos:line="52" pos:column="31"/></specifier> <type><specifier pos:line="52" pos:column="32">const<pos:position pos:line="52" pos:column="37"/></specifier> <name pos:line="52" pos:column="38">char<pos:position pos:line="52" pos:column="42"/></name></type> <name><name pos:line="52" pos:column="43">msg<pos:position pos:line="52" pos:column="46"/></name><index pos:line="52" pos:column="46">[]<pos:position pos:line="52" pos:column="48"/></index></name> <init pos:line="52" pos:column="49">= <expr><literal type="string" pos:line="52" pos:column="51">"cache entry has null sha1: %s"<pos:position pos:line="52" pos:column="82"/></literal></expr></init></decl>;<pos:position pos:line="52" pos:column="83"/></decl_stmt>
			<decl_stmt><decl><specifier pos:line="53" pos:column="25">static<pos:position pos:line="53" pos:column="31"/></specifier> <type><name pos:line="53" pos:column="32">int<pos:position pos:line="53" pos:column="35"/></name></type> <name pos:line="53" pos:column="36">allow<pos:position pos:line="53" pos:column="41"/></name> <init pos:line="53" pos:column="42">= <expr><operator pos:line="53" pos:column="44">-<pos:position pos:line="53" pos:column="45"/></operator><literal type="number" pos:line="53" pos:column="45">1<pos:position pos:line="53" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="53" pos:column="47"/></decl_stmt>

			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><name pos:line="55" pos:column="29">allow<pos:position pos:line="55" pos:column="34"/></name> <operator pos:line="55" pos:column="35">&lt;<pos:position pos:line="55" pos:column="39"/></operator> <literal type="number" pos:line="55" pos:column="37">0<pos:position pos:line="55" pos:column="38"/></literal></expr>)<pos:position pos:line="55" pos:column="39"/></condition><then pos:line="55" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="33">allow<pos:position pos:line="56" pos:column="38"/></name> <operator pos:line="56" pos:column="39">=<pos:position pos:line="56" pos:column="40"/></operator> <call><name pos:line="56" pos:column="41">git_env_bool<pos:position pos:line="56" pos:column="53"/></name><argument_list pos:line="56" pos:column="53">(<argument><expr><literal type="string" pos:line="56" pos:column="54">"GIT_ALLOW_NULL_SHA1"<pos:position pos:line="56" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="77">0<pos:position pos:line="56" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="80"/></expr_stmt></block></then></if>
			<if pos:line="57" pos:column="25">if <condition pos:line="57" pos:column="28">(<expr><name pos:line="57" pos:column="29">allow<pos:position pos:line="57" pos:column="34"/></name></expr>)<pos:position pos:line="57" pos:column="35"/></condition><then pos:line="57" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="33">warning<pos:position pos:line="58" pos:column="40"/></name><argument_list pos:line="58" pos:column="40">(<argument><expr><name pos:line="58" pos:column="41">msg<pos:position pos:line="58" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="46">ce<pos:position pos:line="58" pos:column="48"/></name><operator pos:line="58" pos:column="48">-&gt;<pos:position pos:line="58" pos:column="53"/></operator><name pos:line="58" pos:column="50">name<pos:position pos:line="58" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="56"/></expr_stmt></block></then>
			<else pos:line="59" pos:column="25">else
				<block type="pseudo"><return pos:line="60" pos:column="33">return <expr><call><name pos:line="60" pos:column="40">error<pos:position pos:line="60" pos:column="45"/></name><argument_list pos:line="60" pos:column="45">(<argument><expr><name pos:line="60" pos:column="46">msg<pos:position pos:line="60" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="51">ce<pos:position pos:line="60" pos:column="53"/></name><operator pos:line="60" pos:column="53">-&gt;<pos:position pos:line="60" pos:column="58"/></operator><name pos:line="60" pos:column="55">name<pos:position pos:line="60" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="61"/></return></block></else></if>
		}<pos:position pos:line="61" pos:column="18"/></block></then></if>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><call><name pos:line="62" pos:column="21">ce_write_entry<pos:position pos:line="62" pos:column="35"/></name><argument_list pos:line="62" pos:column="35">(<argument><expr><operator pos:line="62" pos:column="36">&amp;<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="37">c<pos:position pos:line="62" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="40">newfd<pos:position pos:line="62" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="47">ce<pos:position pos:line="62" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="51">previous_name<pos:position pos:line="62" pos:column="64"/></name></expr></argument>)<pos:position pos:line="62" pos:column="65"/></argument_list></call> <operator pos:line="62" pos:column="66">&lt;<pos:position pos:line="62" pos:column="70"/></operator> <literal type="number" pos:line="62" pos:column="68">0<pos:position pos:line="62" pos:column="69"/></literal></expr>)<pos:position pos:line="62" pos:column="70"/></condition><then pos:line="62" pos:column="70">
			<block type="pseudo"><return pos:line="63" pos:column="25">return <expr><operator pos:line="63" pos:column="32">-<pos:position pos:line="63" pos:column="33"/></operator><literal type="number" pos:line="63" pos:column="33">1<pos:position pos:line="63" pos:column="34"/></literal></expr>;<pos:position pos:line="63" pos:column="35"/></return></block></then></if>
	}<pos:position pos:line="64" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="65" pos:column="9">strbuf_release<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><operator pos:line="65" pos:column="24">&amp;<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="25">previous_name_buf<pos:position pos:line="65" pos:column="42"/></name></expr></argument>)<pos:position pos:line="65" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="44"/></expr_stmt>

	<comment type="block" pos:line="67" pos:column="9">/* Write extension data here */</comment>
	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><operator pos:line="68" pos:column="13">!<pos:position pos:line="68" pos:column="14"/></operator><name pos:line="68" pos:column="14">strip_extensions<pos:position pos:line="68" pos:column="30"/></name> <operator pos:line="68" pos:column="31">&amp;&amp;<pos:position pos:line="68" pos:column="41"/></operator> <name><name pos:line="68" pos:column="34">istate<pos:position pos:line="68" pos:column="40"/></name><operator pos:line="68" pos:column="40">-&gt;<pos:position pos:line="68" pos:column="45"/></operator><name pos:line="68" pos:column="42">split_index<pos:position pos:line="68" pos:column="53"/></name></name></expr>)<pos:position pos:line="68" pos:column="54"/></condition><then pos:line="68" pos:column="54"> <block pos:line="68" pos:column="55">{
		<decl_stmt><decl><type><name><name pos:line="69" pos:column="17">struct<pos:position pos:line="69" pos:column="23"/></name> <name pos:line="69" pos:column="24">strbuf<pos:position pos:line="69" pos:column="30"/></name></name></type> <name pos:line="69" pos:column="31">sb<pos:position pos:line="69" pos:column="33"/></name> <init pos:line="69" pos:column="34">= <expr><name pos:line="69" pos:column="36">STRBUF_INIT<pos:position pos:line="69" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="69" pos:column="48"/></decl_stmt>

		<expr_stmt><expr><name pos:line="71" pos:column="17">err<pos:position pos:line="71" pos:column="20"/></name> <operator pos:line="71" pos:column="21">=<pos:position pos:line="71" pos:column="22"/></operator> <call><name pos:line="71" pos:column="23">write_link_extension<pos:position pos:line="71" pos:column="43"/></name><argument_list pos:line="71" pos:column="43">(<argument><expr><operator pos:line="71" pos:column="44">&amp;<pos:position pos:line="71" pos:column="49"/></operator><name pos:line="71" pos:column="45">sb<pos:position pos:line="71" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="49">istate<pos:position pos:line="71" pos:column="55"/></name></expr></argument>)<pos:position pos:line="71" pos:column="56"/></argument_list></call> <operator pos:line="71" pos:column="57">&lt;<pos:position pos:line="71" pos:column="61"/></operator> <literal type="number" pos:line="71" pos:column="59">0<pos:position pos:line="71" pos:column="60"/></literal> <operator pos:line="71" pos:column="61">||<pos:position pos:line="71" pos:column="63"/></operator>
			<call><name pos:line="72" pos:column="25">write_index_ext_header<pos:position pos:line="72" pos:column="47"/></name><argument_list pos:line="72" pos:column="47">(<argument><expr><operator pos:line="72" pos:column="48">&amp;<pos:position pos:line="72" pos:column="53"/></operator><name pos:line="72" pos:column="49">c<pos:position pos:line="72" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="52">newfd<pos:position pos:line="72" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="59">CACHE_EXT_LINK<pos:position pos:line="72" pos:column="73"/></name></expr></argument>,
					       <argument><expr><name><name pos:line="73" pos:column="48">sb<pos:position pos:line="73" pos:column="50"/></name><operator pos:line="73" pos:column="50">.<pos:position pos:line="73" pos:column="51"/></operator><name pos:line="73" pos:column="51">len<pos:position pos:line="73" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="55"/></argument_list></call> <operator pos:line="73" pos:column="56">&lt;<pos:position pos:line="73" pos:column="60"/></operator> <literal type="number" pos:line="73" pos:column="58">0<pos:position pos:line="73" pos:column="59"/></literal> <operator pos:line="73" pos:column="60">||<pos:position pos:line="73" pos:column="62"/></operator>
			<call><name pos:line="74" pos:column="25">ce_write<pos:position pos:line="74" pos:column="33"/></name><argument_list pos:line="74" pos:column="33">(<argument><expr><operator pos:line="74" pos:column="34">&amp;<pos:position pos:line="74" pos:column="39"/></operator><name pos:line="74" pos:column="35">c<pos:position pos:line="74" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="38">newfd<pos:position pos:line="74" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="45">sb<pos:position pos:line="74" pos:column="47"/></name><operator pos:line="74" pos:column="47">.<pos:position pos:line="74" pos:column="48"/></operator><name pos:line="74" pos:column="48">buf<pos:position pos:line="74" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="53">sb<pos:position pos:line="74" pos:column="55"/></name><operator pos:line="74" pos:column="55">.<pos:position pos:line="74" pos:column="56"/></operator><name pos:line="74" pos:column="56">len<pos:position pos:line="74" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="60"/></argument_list></call> <operator pos:line="74" pos:column="61">&lt;<pos:position pos:line="74" pos:column="65"/></operator> <literal type="number" pos:line="74" pos:column="63">0<pos:position pos:line="74" pos:column="64"/></literal></expr>;<pos:position pos:line="74" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="75" pos:column="17">strbuf_release<pos:position pos:line="75" pos:column="31"/></name><argument_list pos:line="75" pos:column="31">(<argument><expr><operator pos:line="75" pos:column="32">&amp;<pos:position pos:line="75" pos:column="37"/></operator><name pos:line="75" pos:column="33">sb<pos:position pos:line="75" pos:column="35"/></name></expr></argument>)<pos:position pos:line="75" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="37"/></expr_stmt>
		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name pos:line="76" pos:column="21">err<pos:position pos:line="76" pos:column="24"/></name></expr>)<pos:position pos:line="76" pos:column="25"/></condition><then pos:line="76" pos:column="25">
			<block type="pseudo"><return pos:line="77" pos:column="25">return <expr><operator pos:line="77" pos:column="32">-<pos:position pos:line="77" pos:column="33"/></operator><literal type="number" pos:line="77" pos:column="33">1<pos:position pos:line="77" pos:column="34"/></literal></expr>;<pos:position pos:line="77" pos:column="35"/></return></block></then></if>
	}<pos:position pos:line="78" pos:column="10"/></block></then></if>
	<if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><operator pos:line="79" pos:column="13">!<pos:position pos:line="79" pos:column="14"/></operator><name pos:line="79" pos:column="14">strip_extensions<pos:position pos:line="79" pos:column="30"/></name> <operator pos:line="79" pos:column="31">&amp;&amp;<pos:position pos:line="79" pos:column="41"/></operator> <name><name pos:line="79" pos:column="34">istate<pos:position pos:line="79" pos:column="40"/></name><operator pos:line="79" pos:column="40">-&gt;<pos:position pos:line="79" pos:column="45"/></operator><name pos:line="79" pos:column="42">cache_tree<pos:position pos:line="79" pos:column="52"/></name></name></expr>)<pos:position pos:line="79" pos:column="53"/></condition><then pos:line="79" pos:column="53"> <block pos:line="79" pos:column="54">{
		<decl_stmt><decl><type><name><name pos:line="80" pos:column="17">struct<pos:position pos:line="80" pos:column="23"/></name> <name pos:line="80" pos:column="24">strbuf<pos:position pos:line="80" pos:column="30"/></name></name></type> <name pos:line="80" pos:column="31">sb<pos:position pos:line="80" pos:column="33"/></name> <init pos:line="80" pos:column="34">= <expr><name pos:line="80" pos:column="36">STRBUF_INIT<pos:position pos:line="80" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="80" pos:column="48"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="82" pos:column="17">cache_tree_write<pos:position pos:line="82" pos:column="33"/></name><argument_list pos:line="82" pos:column="33">(<argument><expr><operator pos:line="82" pos:column="34">&amp;<pos:position pos:line="82" pos:column="39"/></operator><name pos:line="82" pos:column="35">sb<pos:position pos:line="82" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="39">istate<pos:position pos:line="82" pos:column="45"/></name><operator pos:line="82" pos:column="45">-&gt;<pos:position pos:line="82" pos:column="50"/></operator><name pos:line="82" pos:column="47">cache_tree<pos:position pos:line="82" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="83" pos:column="17">err<pos:position pos:line="83" pos:column="20"/></name> <operator pos:line="83" pos:column="21">=<pos:position pos:line="83" pos:column="22"/></operator> <call><name pos:line="83" pos:column="23">write_index_ext_header<pos:position pos:line="83" pos:column="45"/></name><argument_list pos:line="83" pos:column="45">(<argument><expr><operator pos:line="83" pos:column="46">&amp;<pos:position pos:line="83" pos:column="51"/></operator><name pos:line="83" pos:column="47">c<pos:position pos:line="83" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="50">newfd<pos:position pos:line="83" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="57">CACHE_EXT_TREE<pos:position pos:line="83" pos:column="71"/></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="73">sb<pos:position pos:line="83" pos:column="75"/></name><operator pos:line="83" pos:column="75">.<pos:position pos:line="83" pos:column="76"/></operator><name pos:line="83" pos:column="76">len<pos:position pos:line="83" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="80"/></argument_list></call> <operator pos:line="83" pos:column="81">&lt;<pos:position pos:line="83" pos:column="85"/></operator> <literal type="number" pos:line="83" pos:column="83">0<pos:position pos:line="83" pos:column="84"/></literal>
			<operator pos:line="84" pos:column="25">||<pos:position pos:line="84" pos:column="27"/></operator> <call><name pos:line="84" pos:column="28">ce_write<pos:position pos:line="84" pos:column="36"/></name><argument_list pos:line="84" pos:column="36">(<argument><expr><operator pos:line="84" pos:column="37">&amp;<pos:position pos:line="84" pos:column="42"/></operator><name pos:line="84" pos:column="38">c<pos:position pos:line="84" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="41">newfd<pos:position pos:line="84" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="48">sb<pos:position pos:line="84" pos:column="50"/></name><operator pos:line="84" pos:column="50">.<pos:position pos:line="84" pos:column="51"/></operator><name pos:line="84" pos:column="51">buf<pos:position pos:line="84" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="56">sb<pos:position pos:line="84" pos:column="58"/></name><operator pos:line="84" pos:column="58">.<pos:position pos:line="84" pos:column="59"/></operator><name pos:line="84" pos:column="59">len<pos:position pos:line="84" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="63"/></argument_list></call> <operator pos:line="84" pos:column="64">&lt;<pos:position pos:line="84" pos:column="68"/></operator> <literal type="number" pos:line="84" pos:column="66">0<pos:position pos:line="84" pos:column="67"/></literal></expr>;<pos:position pos:line="84" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="85" pos:column="17">strbuf_release<pos:position pos:line="85" pos:column="31"/></name><argument_list pos:line="85" pos:column="31">(<argument><expr><operator pos:line="85" pos:column="32">&amp;<pos:position pos:line="85" pos:column="37"/></operator><name pos:line="85" pos:column="33">sb<pos:position pos:line="85" pos:column="35"/></name></expr></argument>)<pos:position pos:line="85" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="37"/></expr_stmt>
		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name pos:line="86" pos:column="21">err<pos:position pos:line="86" pos:column="24"/></name></expr>)<pos:position pos:line="86" pos:column="25"/></condition><then pos:line="86" pos:column="25">
			<block type="pseudo"><return pos:line="87" pos:column="25">return <expr><operator pos:line="87" pos:column="32">-<pos:position pos:line="87" pos:column="33"/></operator><literal type="number" pos:line="87" pos:column="33">1<pos:position pos:line="87" pos:column="34"/></literal></expr>;<pos:position pos:line="87" pos:column="35"/></return></block></then></if>
	}<pos:position pos:line="88" pos:column="10"/></block></then></if>
	<if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><operator pos:line="89" pos:column="13">!<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="14">strip_extensions<pos:position pos:line="89" pos:column="30"/></name> <operator pos:line="89" pos:column="31">&amp;&amp;<pos:position pos:line="89" pos:column="41"/></operator> <name><name pos:line="89" pos:column="34">istate<pos:position pos:line="89" pos:column="40"/></name><operator pos:line="89" pos:column="40">-&gt;<pos:position pos:line="89" pos:column="45"/></operator><name pos:line="89" pos:column="42">resolve_undo<pos:position pos:line="89" pos:column="54"/></name></name></expr>)<pos:position pos:line="89" pos:column="55"/></condition><then pos:line="89" pos:column="55"> <block pos:line="89" pos:column="56">{
		<decl_stmt><decl><type><name><name pos:line="90" pos:column="17">struct<pos:position pos:line="90" pos:column="23"/></name> <name pos:line="90" pos:column="24">strbuf<pos:position pos:line="90" pos:column="30"/></name></name></type> <name pos:line="90" pos:column="31">sb<pos:position pos:line="90" pos:column="33"/></name> <init pos:line="90" pos:column="34">= <expr><name pos:line="90" pos:column="36">STRBUF_INIT<pos:position pos:line="90" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="90" pos:column="48"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="92" pos:column="17">resolve_undo_write<pos:position pos:line="92" pos:column="35"/></name><argument_list pos:line="92" pos:column="35">(<argument><expr><operator pos:line="92" pos:column="36">&amp;<pos:position pos:line="92" pos:column="41"/></operator><name pos:line="92" pos:column="37">sb<pos:position pos:line="92" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="41">istate<pos:position pos:line="92" pos:column="47"/></name><operator pos:line="92" pos:column="47">-&gt;<pos:position pos:line="92" pos:column="52"/></operator><name pos:line="92" pos:column="49">resolve_undo<pos:position pos:line="92" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><name pos:line="93" pos:column="17">err<pos:position pos:line="93" pos:column="20"/></name> <operator pos:line="93" pos:column="21">=<pos:position pos:line="93" pos:column="22"/></operator> <call><name pos:line="93" pos:column="23">write_index_ext_header<pos:position pos:line="93" pos:column="45"/></name><argument_list pos:line="93" pos:column="45">(<argument><expr><operator pos:line="93" pos:column="46">&amp;<pos:position pos:line="93" pos:column="51"/></operator><name pos:line="93" pos:column="47">c<pos:position pos:line="93" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="50">newfd<pos:position pos:line="93" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="57">CACHE_EXT_RESOLVE_UNDO<pos:position pos:line="93" pos:column="79"/></name></expr></argument>,
					     <argument><expr><name><name pos:line="94" pos:column="46">sb<pos:position pos:line="94" pos:column="48"/></name><operator pos:line="94" pos:column="48">.<pos:position pos:line="94" pos:column="49"/></operator><name pos:line="94" pos:column="49">len<pos:position pos:line="94" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="53"/></argument_list></call> <operator pos:line="94" pos:column="54">&lt;<pos:position pos:line="94" pos:column="58"/></operator> <literal type="number" pos:line="94" pos:column="56">0<pos:position pos:line="94" pos:column="57"/></literal>
			<operator pos:line="95" pos:column="25">||<pos:position pos:line="95" pos:column="27"/></operator> <call><name pos:line="95" pos:column="28">ce_write<pos:position pos:line="95" pos:column="36"/></name><argument_list pos:line="95" pos:column="36">(<argument><expr><operator pos:line="95" pos:column="37">&amp;<pos:position pos:line="95" pos:column="42"/></operator><name pos:line="95" pos:column="38">c<pos:position pos:line="95" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="41">newfd<pos:position pos:line="95" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="48">sb<pos:position pos:line="95" pos:column="50"/></name><operator pos:line="95" pos:column="50">.<pos:position pos:line="95" pos:column="51"/></operator><name pos:line="95" pos:column="51">buf<pos:position pos:line="95" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="56">sb<pos:position pos:line="95" pos:column="58"/></name><operator pos:line="95" pos:column="58">.<pos:position pos:line="95" pos:column="59"/></operator><name pos:line="95" pos:column="59">len<pos:position pos:line="95" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="63"/></argument_list></call> <operator pos:line="95" pos:column="64">&lt;<pos:position pos:line="95" pos:column="68"/></operator> <literal type="number" pos:line="95" pos:column="66">0<pos:position pos:line="95" pos:column="67"/></literal></expr>;<pos:position pos:line="95" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="96" pos:column="17">strbuf_release<pos:position pos:line="96" pos:column="31"/></name><argument_list pos:line="96" pos:column="31">(<argument><expr><operator pos:line="96" pos:column="32">&amp;<pos:position pos:line="96" pos:column="37"/></operator><name pos:line="96" pos:column="33">sb<pos:position pos:line="96" pos:column="35"/></name></expr></argument>)<pos:position pos:line="96" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="37"/></expr_stmt>
		<if pos:line="97" pos:column="17">if <condition pos:line="97" pos:column="20">(<expr><name pos:line="97" pos:column="21">err<pos:position pos:line="97" pos:column="24"/></name></expr>)<pos:position pos:line="97" pos:column="25"/></condition><then pos:line="97" pos:column="25">
			<block type="pseudo"><return pos:line="98" pos:column="25">return <expr><operator pos:line="98" pos:column="32">-<pos:position pos:line="98" pos:column="33"/></operator><literal type="number" pos:line="98" pos:column="33">1<pos:position pos:line="98" pos:column="34"/></literal></expr>;<pos:position pos:line="98" pos:column="35"/></return></block></then></if>
	}<pos:position pos:line="99" pos:column="10"/></block></then></if>
	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><operator pos:line="100" pos:column="13">!<pos:position pos:line="100" pos:column="14"/></operator><name pos:line="100" pos:column="14">strip_extensions<pos:position pos:line="100" pos:column="30"/></name> <operator pos:line="100" pos:column="31">&amp;&amp;<pos:position pos:line="100" pos:column="41"/></operator> <name><name pos:line="100" pos:column="34">istate<pos:position pos:line="100" pos:column="40"/></name><operator pos:line="100" pos:column="40">-&gt;<pos:position pos:line="100" pos:column="45"/></operator><name pos:line="100" pos:column="42">untracked<pos:position pos:line="100" pos:column="51"/></name></name></expr>)<pos:position pos:line="100" pos:column="52"/></condition><then pos:line="100" pos:column="52"> <block pos:line="100" pos:column="53">{
		<decl_stmt><decl><type><name><name pos:line="101" pos:column="17">struct<pos:position pos:line="101" pos:column="23"/></name> <name pos:line="101" pos:column="24">strbuf<pos:position pos:line="101" pos:column="30"/></name></name></type> <name pos:line="101" pos:column="31">sb<pos:position pos:line="101" pos:column="33"/></name> <init pos:line="101" pos:column="34">= <expr><name pos:line="101" pos:column="36">STRBUF_INIT<pos:position pos:line="101" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="101" pos:column="48"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="103" pos:column="17">write_untracked_extension<pos:position pos:line="103" pos:column="42"/></name><argument_list pos:line="103" pos:column="42">(<argument><expr><operator pos:line="103" pos:column="43">&amp;<pos:position pos:line="103" pos:column="48"/></operator><name pos:line="103" pos:column="44">sb<pos:position pos:line="103" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="48">istate<pos:position pos:line="103" pos:column="54"/></name><operator pos:line="103" pos:column="54">-&gt;<pos:position pos:line="103" pos:column="59"/></operator><name pos:line="103" pos:column="56">untracked<pos:position pos:line="103" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><name pos:line="104" pos:column="17">err<pos:position pos:line="104" pos:column="20"/></name> <operator pos:line="104" pos:column="21">=<pos:position pos:line="104" pos:column="22"/></operator> <call><name pos:line="104" pos:column="23">write_index_ext_header<pos:position pos:line="104" pos:column="45"/></name><argument_list pos:line="104" pos:column="45">(<argument><expr><operator pos:line="104" pos:column="46">&amp;<pos:position pos:line="104" pos:column="51"/></operator><name pos:line="104" pos:column="47">c<pos:position pos:line="104" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="50">newfd<pos:position pos:line="104" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="57">CACHE_EXT_UNTRACKED<pos:position pos:line="104" pos:column="76"/></name></expr></argument>,
					     <argument><expr><name><name pos:line="105" pos:column="46">sb<pos:position pos:line="105" pos:column="48"/></name><operator pos:line="105" pos:column="48">.<pos:position pos:line="105" pos:column="49"/></operator><name pos:line="105" pos:column="49">len<pos:position pos:line="105" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="53"/></argument_list></call> <operator pos:line="105" pos:column="54">&lt;<pos:position pos:line="105" pos:column="58"/></operator> <literal type="number" pos:line="105" pos:column="56">0<pos:position pos:line="105" pos:column="57"/></literal> <operator pos:line="105" pos:column="58">||<pos:position pos:line="105" pos:column="60"/></operator>
			<call><name pos:line="106" pos:column="25">ce_write<pos:position pos:line="106" pos:column="33"/></name><argument_list pos:line="106" pos:column="33">(<argument><expr><operator pos:line="106" pos:column="34">&amp;<pos:position pos:line="106" pos:column="39"/></operator><name pos:line="106" pos:column="35">c<pos:position pos:line="106" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="38">newfd<pos:position pos:line="106" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="45">sb<pos:position pos:line="106" pos:column="47"/></name><operator pos:line="106" pos:column="47">.<pos:position pos:line="106" pos:column="48"/></operator><name pos:line="106" pos:column="48">buf<pos:position pos:line="106" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="53">sb<pos:position pos:line="106" pos:column="55"/></name><operator pos:line="106" pos:column="55">.<pos:position pos:line="106" pos:column="56"/></operator><name pos:line="106" pos:column="56">len<pos:position pos:line="106" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="60"/></argument_list></call> <operator pos:line="106" pos:column="61">&lt;<pos:position pos:line="106" pos:column="65"/></operator> <literal type="number" pos:line="106" pos:column="63">0<pos:position pos:line="106" pos:column="64"/></literal></expr>;<pos:position pos:line="106" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="107" pos:column="17">strbuf_release<pos:position pos:line="107" pos:column="31"/></name><argument_list pos:line="107" pos:column="31">(<argument><expr><operator pos:line="107" pos:column="32">&amp;<pos:position pos:line="107" pos:column="37"/></operator><name pos:line="107" pos:column="33">sb<pos:position pos:line="107" pos:column="35"/></name></expr></argument>)<pos:position pos:line="107" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="37"/></expr_stmt>
		<if pos:line="108" pos:column="17">if <condition pos:line="108" pos:column="20">(<expr><name pos:line="108" pos:column="21">err<pos:position pos:line="108" pos:column="24"/></name></expr>)<pos:position pos:line="108" pos:column="25"/></condition><then pos:line="108" pos:column="25">
			<block type="pseudo"><return pos:line="109" pos:column="25">return <expr><operator pos:line="109" pos:column="32">-<pos:position pos:line="109" pos:column="33"/></operator><literal type="number" pos:line="109" pos:column="33">1<pos:position pos:line="109" pos:column="34"/></literal></expr>;<pos:position pos:line="109" pos:column="35"/></return></block></then></if>
	}<pos:position pos:line="110" pos:column="10"/></block></then></if>

	<if pos:line="112" pos:column="9">if <condition pos:line="112" pos:column="12">(<expr><call><name pos:line="112" pos:column="13">ce_flush<pos:position pos:line="112" pos:column="21"/></name><argument_list pos:line="112" pos:column="21">(<argument><expr><operator pos:line="112" pos:column="22">&amp;<pos:position pos:line="112" pos:column="27"/></operator><name pos:line="112" pos:column="23">c<pos:position pos:line="112" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="26">newfd<pos:position pos:line="112" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="33">istate<pos:position pos:line="112" pos:column="39"/></name><operator pos:line="112" pos:column="39">-&gt;<pos:position pos:line="112" pos:column="44"/></operator><name pos:line="112" pos:column="41">sha1<pos:position pos:line="112" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="46"/></argument_list></call> <operator pos:line="112" pos:column="47">||<pos:position pos:line="112" pos:column="49"/></operator> <call><name pos:line="112" pos:column="50">fstat<pos:position pos:line="112" pos:column="55"/></name><argument_list pos:line="112" pos:column="55">(<argument><expr><name pos:line="112" pos:column="56">newfd<pos:position pos:line="112" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="112" pos:column="63">&amp;<pos:position pos:line="112" pos:column="68"/></operator><name pos:line="112" pos:column="64">st<pos:position pos:line="112" pos:column="66"/></name></expr></argument>)<pos:position pos:line="112" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="112" pos:column="68"/></condition><then pos:line="112" pos:column="68">
		<block type="pseudo"><return pos:line="113" pos:column="17">return <expr><operator pos:line="113" pos:column="24">-<pos:position pos:line="113" pos:column="25"/></operator><literal type="number" pos:line="113" pos:column="25">1<pos:position pos:line="113" pos:column="26"/></literal></expr>;<pos:position pos:line="113" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="114" pos:column="9">istate<pos:position pos:line="114" pos:column="15"/></name><operator pos:line="114" pos:column="15">-&gt;<pos:position pos:line="114" pos:column="20"/></operator><name pos:line="114" pos:column="17">timestamp<pos:position pos:line="114" pos:column="26"/></name><operator pos:line="114" pos:column="26">.<pos:position pos:line="114" pos:column="27"/></operator><name pos:line="114" pos:column="27">sec<pos:position pos:line="114" pos:column="30"/></name></name> <operator pos:line="114" pos:column="31">=<pos:position pos:line="114" pos:column="32"/></operator> <operator pos:line="114" pos:column="33">(<pos:position pos:line="114" pos:column="34"/></operator><name pos:line="114" pos:column="34">unsigned<pos:position pos:line="114" pos:column="42"/></name> <name pos:line="114" pos:column="43">int<pos:position pos:line="114" pos:column="46"/></name><operator pos:line="114" pos:column="46">)<pos:position pos:line="114" pos:column="47"/></operator><name><name pos:line="114" pos:column="47">st<pos:position pos:line="114" pos:column="49"/></name><operator pos:line="114" pos:column="49">.<pos:position pos:line="114" pos:column="50"/></operator><name pos:line="114" pos:column="50">st_mtime<pos:position pos:line="114" pos:column="58"/></name></name></expr>;<pos:position pos:line="114" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="115" pos:column="9">istate<pos:position pos:line="115" pos:column="15"/></name><operator pos:line="115" pos:column="15">-&gt;<pos:position pos:line="115" pos:column="20"/></operator><name pos:line="115" pos:column="17">timestamp<pos:position pos:line="115" pos:column="26"/></name><operator pos:line="115" pos:column="26">.<pos:position pos:line="115" pos:column="27"/></operator><name pos:line="115" pos:column="27">nsec<pos:position pos:line="115" pos:column="31"/></name></name> <operator pos:line="115" pos:column="32">=<pos:position pos:line="115" pos:column="33"/></operator> <call><name pos:line="115" pos:column="34">ST_MTIME_NSEC<pos:position pos:line="115" pos:column="47"/></name><argument_list pos:line="115" pos:column="47">(<argument><expr><name pos:line="115" pos:column="48">st<pos:position pos:line="115" pos:column="50"/></name></expr></argument>)<pos:position pos:line="115" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="52"/></expr_stmt>
	<return pos:line="116" pos:column="9">return <expr><literal type="number" pos:line="116" pos:column="16">0<pos:position pos:line="116" pos:column="17"/></literal></expr>;<pos:position pos:line="116" pos:column="18"/></return>
}<pos:position pos:line="117" pos:column="2"/></block></function></unit>

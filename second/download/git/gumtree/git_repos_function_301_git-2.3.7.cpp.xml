<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_301_git-2.3.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">refresh_index<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name><name pos:line="1" pos:column="19">struct<pos:position pos:line="1" pos:column="25"/></name> <name pos:line="1" pos:column="26">index_state<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">istate<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">unsigned<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">flags<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
		  <parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">pathspec<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">pathspec<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
		  <parameter><decl><type><name pos:line="3" pos:column="19">char<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">seen<pos:position pos:line="3" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <name pos:line="3" pos:column="37">char<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">header_msg<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="54"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">has_errors<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><literal type="number" pos:line="6" pos:column="26">0<pos:position pos:line="6" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">really<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><operator pos:line="7" pos:column="22">(<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">flags<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">&amp;<pos:position pos:line="7" pos:column="34"/></operator> <name pos:line="7" pos:column="31">REFRESH_REALLY<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">)<pos:position pos:line="7" pos:column="46"/></operator> <operator pos:line="7" pos:column="47">!=<pos:position pos:line="7" pos:column="49"/></operator> <literal type="number" pos:line="7" pos:column="50">0<pos:position pos:line="7" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">allow_unmerged<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><operator pos:line="8" pos:column="30">(<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">flags<pos:position pos:line="8" pos:column="36"/></name> <operator pos:line="8" pos:column="37">&amp;<pos:position pos:line="8" pos:column="42"/></operator> <name pos:line="8" pos:column="39">REFRESH_UNMERGED<pos:position pos:line="8" pos:column="55"/></name><operator pos:line="8" pos:column="55">)<pos:position pos:line="8" pos:column="56"/></operator> <operator pos:line="8" pos:column="57">!=<pos:position pos:line="8" pos:column="59"/></operator> <literal type="number" pos:line="8" pos:column="60">0<pos:position pos:line="8" pos:column="61"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">quiet<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><operator pos:line="9" pos:column="21">(<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">flags<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">&amp;<pos:position pos:line="9" pos:column="33"/></operator> <name pos:line="9" pos:column="30">REFRESH_QUIET<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">)<pos:position pos:line="9" pos:column="44"/></operator> <operator pos:line="9" pos:column="45">!=<pos:position pos:line="9" pos:column="47"/></operator> <literal type="number" pos:line="9" pos:column="48">0<pos:position pos:line="9" pos:column="49"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">not_new<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><operator pos:line="10" pos:column="23">(<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">flags<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">&amp;<pos:position pos:line="10" pos:column="35"/></operator> <name pos:line="10" pos:column="32">REFRESH_IGNORE_MISSING<pos:position pos:line="10" pos:column="54"/></name><operator pos:line="10" pos:column="54">)<pos:position pos:line="10" pos:column="55"/></operator> <operator pos:line="10" pos:column="56">!=<pos:position pos:line="10" pos:column="58"/></operator> <literal type="number" pos:line="10" pos:column="59">0<pos:position pos:line="10" pos:column="60"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">ignore_submodules<pos:position pos:line="11" pos:column="30"/></name> <init pos:line="11" pos:column="31">= <expr><operator pos:line="11" pos:column="33">(<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="34">flags<pos:position pos:line="11" pos:column="39"/></name> <operator pos:line="11" pos:column="40">&amp;<pos:position pos:line="11" pos:column="45"/></operator> <name pos:line="11" pos:column="42">REFRESH_IGNORE_SUBMODULES<pos:position pos:line="11" pos:column="67"/></name><operator pos:line="11" pos:column="67">)<pos:position pos:line="11" pos:column="68"/></operator> <operator pos:line="11" pos:column="69">!=<pos:position pos:line="11" pos:column="71"/></operator> <literal type="number" pos:line="11" pos:column="72">0<pos:position pos:line="11" pos:column="73"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="74"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">first<pos:position pos:line="12" pos:column="18"/></name> <init pos:line="12" pos:column="19">= <expr><literal type="number" pos:line="12" pos:column="21">1<pos:position pos:line="12" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">in_porcelain<pos:position pos:line="13" pos:column="25"/></name> <init pos:line="13" pos:column="26">= <expr><operator pos:line="13" pos:column="28">(<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="29">flags<pos:position pos:line="13" pos:column="34"/></name> <operator pos:line="13" pos:column="35">&amp;<pos:position pos:line="13" pos:column="40"/></operator> <name pos:line="13" pos:column="37">REFRESH_IN_PORCELAIN<pos:position pos:line="13" pos:column="57"/></name><operator pos:line="13" pos:column="57">)<pos:position pos:line="13" pos:column="58"/></operator></expr></init></decl>;<pos:position pos:line="13" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">unsigned<pos:position pos:line="14" pos:column="17"/></name> <name pos:line="14" pos:column="18">int<pos:position pos:line="14" pos:column="21"/></name></type> <name pos:line="14" pos:column="22">options<pos:position pos:line="14" pos:column="29"/></name> <init pos:line="14" pos:column="30">= <expr><operator pos:line="14" pos:column="32">(<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">CE_MATCH_REFRESH<pos:position pos:line="14" pos:column="49"/></name> <operator pos:line="14" pos:column="50">|<pos:position pos:line="14" pos:column="51"/></operator>
				<operator pos:line="15" pos:column="33">(<pos:position pos:line="15" pos:column="34"/></operator><ternary><condition><expr><name pos:line="15" pos:column="34">really<pos:position pos:line="15" pos:column="40"/></name></expr> ?<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42"> <expr><name pos:line="15" pos:column="43">CE_MATCH_IGNORE_VALID<pos:position pos:line="15" pos:column="64"/></name></expr> <pos:position pos:line="15" pos:column="65"/></then><else pos:line="15" pos:column="65">: <expr><literal type="number" pos:line="15" pos:column="67">0<pos:position pos:line="15" pos:column="68"/></literal></expr></else></ternary><operator pos:line="15" pos:column="68">)<pos:position pos:line="15" pos:column="69"/></operator> <operator pos:line="15" pos:column="70">|<pos:position pos:line="15" pos:column="71"/></operator>
				<operator pos:line="16" pos:column="33">(<pos:position pos:line="16" pos:column="34"/></operator><ternary><condition><expr><name pos:line="16" pos:column="34">not_new<pos:position pos:line="16" pos:column="41"/></name></expr> ?<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43"> <expr><name pos:line="16" pos:column="44">CE_MATCH_IGNORE_MISSING<pos:position pos:line="16" pos:column="67"/></name></expr> <pos:position pos:line="16" pos:column="68"/></then><else pos:line="16" pos:column="68">: <expr><literal type="number" pos:line="16" pos:column="70">0<pos:position pos:line="16" pos:column="71"/></literal></expr></else></ternary><operator pos:line="16" pos:column="71">)<pos:position pos:line="16" pos:column="72"/></operator><operator pos:line="16" pos:column="72">)<pos:position pos:line="16" pos:column="73"/></operator></expr></init></decl>;<pos:position pos:line="16" pos:column="74"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="17" pos:column="9">const<pos:position pos:line="17" pos:column="14"/></specifier> <name pos:line="17" pos:column="15">char<pos:position pos:line="17" pos:column="19"/></name> <modifier pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></modifier></type><name pos:line="17" pos:column="21">modified_fmt<pos:position pos:line="17" pos:column="33"/></name></decl>;<pos:position pos:line="17" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="18" pos:column="9">const<pos:position pos:line="18" pos:column="14"/></specifier> <name pos:line="18" pos:column="15">char<pos:position pos:line="18" pos:column="19"/></name> <modifier pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></modifier></type><name pos:line="18" pos:column="21">deleted_fmt<pos:position pos:line="18" pos:column="32"/></name></decl>;<pos:position pos:line="18" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="19" pos:column="9">const<pos:position pos:line="19" pos:column="14"/></specifier> <name pos:line="19" pos:column="15">char<pos:position pos:line="19" pos:column="19"/></name> <modifier pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></modifier></type><name pos:line="19" pos:column="21">typechange_fmt<pos:position pos:line="19" pos:column="35"/></name></decl>;<pos:position pos:line="19" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="20" pos:column="9">const<pos:position pos:line="20" pos:column="14"/></specifier> <name pos:line="20" pos:column="15">char<pos:position pos:line="20" pos:column="19"/></name> <modifier pos:line="20" pos:column="20">*<pos:position pos:line="20" pos:column="21"/></modifier></type><name pos:line="20" pos:column="21">added_fmt<pos:position pos:line="20" pos:column="30"/></name></decl>;<pos:position pos:line="20" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="21" pos:column="9">const<pos:position pos:line="21" pos:column="14"/></specifier> <name pos:line="21" pos:column="15">char<pos:position pos:line="21" pos:column="19"/></name> <modifier pos:line="21" pos:column="20">*<pos:position pos:line="21" pos:column="21"/></modifier></type><name pos:line="21" pos:column="21">unmerged_fmt<pos:position pos:line="21" pos:column="33"/></name></decl>;<pos:position pos:line="21" pos:column="34"/></decl_stmt>

	<expr_stmt><expr><name pos:line="23" pos:column="9">modified_fmt<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <operator pos:line="23" pos:column="24">(<pos:position pos:line="23" pos:column="25"/></operator><ternary><condition><expr><name pos:line="23" pos:column="25">in_porcelain<pos:position pos:line="23" pos:column="37"/></name></expr> ?<pos:position pos:line="23" pos:column="39"/></condition><then pos:line="23" pos:column="39"> <expr><literal type="string" pos:line="23" pos:column="40">"M\t%s\n"<pos:position pos:line="23" pos:column="49"/></literal></expr> <pos:position pos:line="23" pos:column="50"/></then><else pos:line="23" pos:column="50">: <expr><literal type="string" pos:line="23" pos:column="52">"%s: needs update\n"<pos:position pos:line="23" pos:column="72"/></literal></expr></else></ternary><operator pos:line="23" pos:column="72">)<pos:position pos:line="23" pos:column="73"/></operator></expr>;<pos:position pos:line="23" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><name pos:line="24" pos:column="9">deleted_fmt<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <operator pos:line="24" pos:column="23">(<pos:position pos:line="24" pos:column="24"/></operator><ternary><condition><expr><name pos:line="24" pos:column="24">in_porcelain<pos:position pos:line="24" pos:column="36"/></name></expr> ?<pos:position pos:line="24" pos:column="38"/></condition><then pos:line="24" pos:column="38"> <expr><literal type="string" pos:line="24" pos:column="39">"D\t%s\n"<pos:position pos:line="24" pos:column="48"/></literal></expr> <pos:position pos:line="24" pos:column="49"/></then><else pos:line="24" pos:column="49">: <expr><literal type="string" pos:line="24" pos:column="51">"%s: needs update\n"<pos:position pos:line="24" pos:column="71"/></literal></expr></else></ternary><operator pos:line="24" pos:column="71">)<pos:position pos:line="24" pos:column="72"/></operator></expr>;<pos:position pos:line="24" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><name pos:line="25" pos:column="9">typechange_fmt<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <operator pos:line="25" pos:column="26">(<pos:position pos:line="25" pos:column="27"/></operator><ternary><condition><expr><name pos:line="25" pos:column="27">in_porcelain<pos:position pos:line="25" pos:column="39"/></name></expr> ?<pos:position pos:line="25" pos:column="41"/></condition><then pos:line="25" pos:column="41"> <expr><literal type="string" pos:line="25" pos:column="42">"T\t%s\n"<pos:position pos:line="25" pos:column="51"/></literal></expr> <pos:position pos:line="25" pos:column="52"/></then><else pos:line="25" pos:column="52">: <expr><literal type="string" pos:line="25" pos:column="54">"%s needs update\n"<pos:position pos:line="25" pos:column="73"/></literal></expr></else></ternary><operator pos:line="25" pos:column="73">)<pos:position pos:line="25" pos:column="74"/></operator></expr>;<pos:position pos:line="25" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">added_fmt<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <operator pos:line="26" pos:column="21">(<pos:position pos:line="26" pos:column="22"/></operator><ternary><condition><expr><name pos:line="26" pos:column="22">in_porcelain<pos:position pos:line="26" pos:column="34"/></name></expr> ?<pos:position pos:line="26" pos:column="36"/></condition><then pos:line="26" pos:column="36"> <expr><literal type="string" pos:line="26" pos:column="37">"A\t%s\n"<pos:position pos:line="26" pos:column="46"/></literal></expr> <pos:position pos:line="26" pos:column="47"/></then><else pos:line="26" pos:column="47">: <expr><literal type="string" pos:line="26" pos:column="49">"%s needs update\n"<pos:position pos:line="26" pos:column="68"/></literal></expr></else></ternary><operator pos:line="26" pos:column="68">)<pos:position pos:line="26" pos:column="69"/></operator></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><name pos:line="27" pos:column="9">unmerged_fmt<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <operator pos:line="27" pos:column="24">(<pos:position pos:line="27" pos:column="25"/></operator><ternary><condition><expr><name pos:line="27" pos:column="25">in_porcelain<pos:position pos:line="27" pos:column="37"/></name></expr> ?<pos:position pos:line="27" pos:column="39"/></condition><then pos:line="27" pos:column="39"> <expr><literal type="string" pos:line="27" pos:column="40">"U\t%s\n"<pos:position pos:line="27" pos:column="49"/></literal></expr> <pos:position pos:line="27" pos:column="50"/></then><else pos:line="27" pos:column="50">: <expr><literal type="string" pos:line="27" pos:column="52">"%s: needs merge\n"<pos:position pos:line="27" pos:column="71"/></literal></expr></else></ternary><operator pos:line="27" pos:column="71">)<pos:position pos:line="27" pos:column="72"/></operator></expr>;<pos:position pos:line="27" pos:column="73"/></expr_stmt>
	<for pos:line="28" pos:column="9">for <control pos:line="28" pos:column="13">(<init><expr><name pos:line="28" pos:column="14">i<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <literal type="number" pos:line="28" pos:column="18">0<pos:position pos:line="28" pos:column="19"/></literal></expr>;<pos:position pos:line="28" pos:column="20"/></init> <condition><expr><name pos:line="28" pos:column="21">i<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">&lt;<pos:position pos:line="28" pos:column="27"/></operator> <name><name pos:line="28" pos:column="25">istate<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">-&gt;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="33">cache_nr<pos:position pos:line="28" pos:column="41"/></name></name></expr>;<pos:position pos:line="28" pos:column="42"/></condition> <incr><expr><name pos:line="28" pos:column="43">i<pos:position pos:line="28" pos:column="44"/></name><operator pos:line="28" pos:column="44">++<pos:position pos:line="28" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="47"/></control> <block pos:line="28" pos:column="48">{
		<decl_stmt><decl><type><name><name pos:line="29" pos:column="17">struct<pos:position pos:line="29" pos:column="23"/></name> <name pos:line="29" pos:column="24">cache_entry<pos:position pos:line="29" pos:column="35"/></name></name> <modifier pos:line="29" pos:column="36">*<pos:position pos:line="29" pos:column="37"/></modifier></type><name pos:line="29" pos:column="37">ce<pos:position pos:line="29" pos:column="39"/></name></decl>, <modifier pos:line="29" pos:column="41">*<pos:position pos:line="29" pos:column="42"/></modifier>new;<pos:position pos:line="29" pos:column="46"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="30" pos:column="17">int<pos:position pos:line="30" pos:column="20"/></name></type> <name pos:line="30" pos:column="21">cache_errno<pos:position pos:line="30" pos:column="32"/></name> <init pos:line="30" pos:column="33">= <expr><literal type="number" pos:line="30" pos:column="35">0<pos:position pos:line="30" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="31" pos:column="17">int<pos:position pos:line="31" pos:column="20"/></name></type> <name pos:line="31" pos:column="21">changed<pos:position pos:line="31" pos:column="28"/></name> <init pos:line="31" pos:column="29">= <expr><literal type="number" pos:line="31" pos:column="31">0<pos:position pos:line="31" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="31" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="32" pos:column="17">int<pos:position pos:line="32" pos:column="20"/></name></type> <name pos:line="32" pos:column="21">filtered<pos:position pos:line="32" pos:column="29"/></name> <init pos:line="32" pos:column="30">= <expr><literal type="number" pos:line="32" pos:column="32">0<pos:position pos:line="32" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="34"/></decl_stmt>

		<expr_stmt><expr><name pos:line="34" pos:column="17">ce<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <name><name pos:line="34" pos:column="22">istate<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">-&gt;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="30">cache<pos:position pos:line="34" pos:column="35"/></name><index pos:line="34" pos:column="35">[<expr><name pos:line="34" pos:column="36">i<pos:position pos:line="34" pos:column="37"/></name></expr>]<pos:position pos:line="34" pos:column="38"/></index></name></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">ignore_submodules<pos:position pos:line="35" pos:column="38"/></name> <operator pos:line="35" pos:column="39">&amp;&amp;<pos:position pos:line="35" pos:column="49"/></operator> <call><name pos:line="35" pos:column="42">S_ISGITLINK<pos:position pos:line="35" pos:column="53"/></name><argument_list pos:line="35" pos:column="53">(<argument><expr><name><name pos:line="35" pos:column="54">ce<pos:position pos:line="35" pos:column="56"/></name><operator pos:line="35" pos:column="56">-&gt;<pos:position pos:line="35" pos:column="61"/></operator><name pos:line="35" pos:column="58">ce_mode<pos:position pos:line="35" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="67"/></condition><then pos:line="35" pos:column="67">
			<block type="pseudo"><continue pos:line="36" pos:column="25">continue;<pos:position pos:line="36" pos:column="34"/></continue></block></then></if>

		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">pathspec<pos:position pos:line="38" pos:column="29"/></name> <operator pos:line="38" pos:column="30">&amp;&amp;<pos:position pos:line="38" pos:column="40"/></operator> <operator pos:line="38" pos:column="33">!<pos:position pos:line="38" pos:column="34"/></operator><call><name pos:line="38" pos:column="34">ce_path_match<pos:position pos:line="38" pos:column="47"/></name><argument_list pos:line="38" pos:column="47">(<argument><expr><name pos:line="38" pos:column="48">ce<pos:position pos:line="38" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="52">pathspec<pos:position pos:line="38" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="62">seen<pos:position pos:line="38" pos:column="66"/></name></expr></argument>)<pos:position pos:line="38" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="68"/></condition><then pos:line="38" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="25">filtered<pos:position pos:line="39" pos:column="33"/></name> <operator pos:line="39" pos:column="34">=<pos:position pos:line="39" pos:column="35"/></operator> <literal type="number" pos:line="39" pos:column="36">1<pos:position pos:line="39" pos:column="37"/></literal></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt></block></then></if>

		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><call><name pos:line="41" pos:column="21">ce_stage<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name pos:line="41" pos:column="30">ce<pos:position pos:line="41" pos:column="32"/></name></expr></argument>)<pos:position pos:line="41" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="34"/></condition><then pos:line="41" pos:column="34"> <block pos:line="41" pos:column="35">{
			<while pos:line="42" pos:column="25">while <condition pos:line="42" pos:column="31">(<expr><operator pos:line="42" pos:column="32">(<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="33">i<pos:position pos:line="42" pos:column="34"/></name> <operator pos:line="42" pos:column="35">&lt;<pos:position pos:line="42" pos:column="39"/></operator> <name><name pos:line="42" pos:column="37">istate<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">-&gt;<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="45">cache_nr<pos:position pos:line="42" pos:column="53"/></name></name><operator pos:line="42" pos:column="53">)<pos:position pos:line="42" pos:column="54"/></operator> <operator pos:line="42" pos:column="55">&amp;&amp;<pos:position pos:line="42" pos:column="65"/></operator>
			       <operator pos:line="43" pos:column="32">!<pos:position pos:line="43" pos:column="33"/></operator> <call><name pos:line="43" pos:column="34">strcmp<pos:position pos:line="43" pos:column="40"/></name><argument_list pos:line="43" pos:column="40">(<argument><expr><name><name pos:line="43" pos:column="41">istate<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">-&gt;<pos:position pos:line="43" pos:column="52"/></operator><name pos:line="43" pos:column="49">cache<pos:position pos:line="43" pos:column="54"/></name><index pos:line="43" pos:column="54">[<expr><name pos:line="43" pos:column="55">i<pos:position pos:line="43" pos:column="56"/></name></expr>]<pos:position pos:line="43" pos:column="57"/></index></name><operator pos:line="43" pos:column="57">-&gt;<pos:position pos:line="43" pos:column="62"/></operator><name pos:line="43" pos:column="59">name<pos:position pos:line="43" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="65">ce<pos:position pos:line="43" pos:column="67"/></name><operator pos:line="43" pos:column="67">-&gt;<pos:position pos:line="43" pos:column="72"/></operator><name pos:line="43" pos:column="69">name<pos:position pos:line="43" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="75"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="33">i<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">++<pos:position pos:line="44" pos:column="36"/></operator></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt></block></while>
			<expr_stmt><expr><name pos:line="45" pos:column="25">i<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">--<pos:position pos:line="45" pos:column="28"/></operator></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>
			<if pos:line="46" pos:column="25">if <condition pos:line="46" pos:column="28">(<expr><name pos:line="46" pos:column="29">allow_unmerged<pos:position pos:line="46" pos:column="43"/></name></expr>)<pos:position pos:line="46" pos:column="44"/></condition><then pos:line="46" pos:column="44">
				<block type="pseudo"><continue pos:line="47" pos:column="33">continue;<pos:position pos:line="47" pos:column="42"/></continue></block></then></if>
			<if pos:line="48" pos:column="25">if <condition pos:line="48" pos:column="28">(<expr><operator pos:line="48" pos:column="29">!<pos:position pos:line="48" pos:column="30"/></operator><name pos:line="48" pos:column="30">filtered<pos:position pos:line="48" pos:column="38"/></name></expr>)<pos:position pos:line="48" pos:column="39"/></condition><then pos:line="48" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="33">show_file<pos:position pos:line="49" pos:column="42"/></name><argument_list pos:line="49" pos:column="42">(<argument><expr><name pos:line="49" pos:column="43">unmerged_fmt<pos:position pos:line="49" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="57">ce<pos:position pos:line="49" pos:column="59"/></name><operator pos:line="49" pos:column="59">-&gt;<pos:position pos:line="49" pos:column="64"/></operator><name pos:line="49" pos:column="61">name<pos:position pos:line="49" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="67">in_porcelain<pos:position pos:line="49" pos:column="79"/></name></expr></argument>,
					  <argument><expr><operator pos:line="50" pos:column="43">&amp;<pos:position pos:line="50" pos:column="48"/></operator><name pos:line="50" pos:column="44">first<pos:position pos:line="50" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="51">header_msg<pos:position pos:line="50" pos:column="61"/></name></expr></argument>)<pos:position pos:line="50" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="51" pos:column="25">has_errors<pos:position pos:line="51" pos:column="35"/></name> <operator pos:line="51" pos:column="36">=<pos:position pos:line="51" pos:column="37"/></operator> <literal type="number" pos:line="51" pos:column="38">1<pos:position pos:line="51" pos:column="39"/></literal></expr>;<pos:position pos:line="51" pos:column="40"/></expr_stmt>
			<continue pos:line="52" pos:column="25">continue;<pos:position pos:line="52" pos:column="34"/></continue>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if>

		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><name pos:line="55" pos:column="21">filtered<pos:position pos:line="55" pos:column="29"/></name></expr>)<pos:position pos:line="55" pos:column="30"/></condition><then pos:line="55" pos:column="30">
			<block type="pseudo"><continue pos:line="56" pos:column="25">continue;<pos:position pos:line="56" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><operator pos:line="58" pos:column="17">new<pos:position pos:line="58" pos:column="20"/></operator> <operator pos:line="58" pos:column="21">=<pos:position pos:line="58" pos:column="22"/></operator> <call><name pos:line="58" pos:column="23">refresh_cache_ent<pos:position pos:line="58" pos:column="40"/></name><argument_list pos:line="58" pos:column="40">(<argument><expr><name pos:line="58" pos:column="41">istate<pos:position pos:line="58" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="49">ce<pos:position pos:line="58" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="53">options<pos:position pos:line="58" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="62">&amp;<pos:position pos:line="58" pos:column="67"/></operator><name pos:line="58" pos:column="63">cache_errno<pos:position pos:line="58" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="76">&amp;<pos:position pos:line="58" pos:column="81"/></operator><name pos:line="58" pos:column="77">changed<pos:position pos:line="58" pos:column="84"/></name></expr></argument>)<pos:position pos:line="58" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="86"/></expr_stmt>
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><operator pos:line="59" pos:column="21">new<pos:position pos:line="59" pos:column="24"/></operator> <operator pos:line="59" pos:column="25">==<pos:position pos:line="59" pos:column="27"/></operator> <name pos:line="59" pos:column="28">ce<pos:position pos:line="59" pos:column="30"/></name></expr>)<pos:position pos:line="59" pos:column="31"/></condition><then pos:line="59" pos:column="31">
			<block type="pseudo"><continue pos:line="60" pos:column="25">continue;<pos:position pos:line="60" pos:column="34"/></continue></block></then></if>
		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><operator pos:line="61" pos:column="21">!<pos:position pos:line="61" pos:column="22"/></operator><operator pos:line="61" pos:column="22">new<pos:position pos:line="61" pos:column="25"/></operator></expr>)<pos:position pos:line="61" pos:column="26"/></condition><then pos:line="61" pos:column="26"> <block pos:line="61" pos:column="27">{
			<decl_stmt><decl><type><specifier pos:line="62" pos:column="25">const<pos:position pos:line="62" pos:column="30"/></specifier> <name pos:line="62" pos:column="31">char<pos:position pos:line="62" pos:column="35"/></name> <modifier pos:line="62" pos:column="36">*<pos:position pos:line="62" pos:column="37"/></modifier></type><name pos:line="62" pos:column="37">fmt<pos:position pos:line="62" pos:column="40"/></name></decl>;<pos:position pos:line="62" pos:column="41"/></decl_stmt>

			<if pos:line="64" pos:column="25">if <condition pos:line="64" pos:column="28">(<expr><name pos:line="64" pos:column="29">really<pos:position pos:line="64" pos:column="35"/></name> <operator pos:line="64" pos:column="36">&amp;&amp;<pos:position pos:line="64" pos:column="46"/></operator> <name pos:line="64" pos:column="39">cache_errno<pos:position pos:line="64" pos:column="50"/></name> <operator pos:line="64" pos:column="51">==<pos:position pos:line="64" pos:column="53"/></operator> <name pos:line="64" pos:column="54">EINVAL<pos:position pos:line="64" pos:column="60"/></name></expr>)<pos:position pos:line="64" pos:column="61"/></condition><then pos:line="64" pos:column="61"> <block pos:line="64" pos:column="62">{
				<comment type="block" pos:line="65" pos:column="33">/* If we are doing --really-refresh that
				 * means the index is not valid anymore.
				 */</comment>
				<expr_stmt><expr><name><name pos:line="68" pos:column="33">ce<pos:position pos:line="68" pos:column="35"/></name><operator pos:line="68" pos:column="35">-&gt;<pos:position pos:line="68" pos:column="40"/></operator><name pos:line="68" pos:column="37">ce_flags<pos:position pos:line="68" pos:column="45"/></name></name> <operator pos:line="68" pos:column="46">&amp;=<pos:position pos:line="68" pos:column="52"/></operator> <operator pos:line="68" pos:column="49">~<pos:position pos:line="68" pos:column="50"/></operator><name pos:line="68" pos:column="50">CE_VALID<pos:position pos:line="68" pos:column="58"/></name></expr>;<pos:position pos:line="68" pos:column="59"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="69" pos:column="33">ce<pos:position pos:line="69" pos:column="35"/></name><operator pos:line="69" pos:column="35">-&gt;<pos:position pos:line="69" pos:column="40"/></operator><name pos:line="69" pos:column="37">ce_flags<pos:position pos:line="69" pos:column="45"/></name></name> <operator pos:line="69" pos:column="46">|=<pos:position pos:line="69" pos:column="48"/></operator> <name pos:line="69" pos:column="49">CE_UPDATE_IN_BASE<pos:position pos:line="69" pos:column="66"/></name></expr>;<pos:position pos:line="69" pos:column="67"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="70" pos:column="33">istate<pos:position pos:line="70" pos:column="39"/></name><operator pos:line="70" pos:column="39">-&gt;<pos:position pos:line="70" pos:column="44"/></operator><name pos:line="70" pos:column="41">cache_changed<pos:position pos:line="70" pos:column="54"/></name></name> <operator pos:line="70" pos:column="55">|=<pos:position pos:line="70" pos:column="57"/></operator> <name pos:line="70" pos:column="58">CE_ENTRY_CHANGED<pos:position pos:line="70" pos:column="74"/></name></expr>;<pos:position pos:line="70" pos:column="75"/></expr_stmt>
			}<pos:position pos:line="71" pos:column="26"/></block></then></if>
			<if pos:line="72" pos:column="25">if <condition pos:line="72" pos:column="28">(<expr><name pos:line="72" pos:column="29">quiet<pos:position pos:line="72" pos:column="34"/></name></expr>)<pos:position pos:line="72" pos:column="35"/></condition><then pos:line="72" pos:column="35">
				<block type="pseudo"><continue pos:line="73" pos:column="33">continue;<pos:position pos:line="73" pos:column="42"/></continue></block></then></if>

			<if pos:line="75" pos:column="25">if <condition pos:line="75" pos:column="28">(<expr><name pos:line="75" pos:column="29">cache_errno<pos:position pos:line="75" pos:column="40"/></name> <operator pos:line="75" pos:column="41">==<pos:position pos:line="75" pos:column="43"/></operator> <name pos:line="75" pos:column="44">ENOENT<pos:position pos:line="75" pos:column="50"/></name></expr>)<pos:position pos:line="75" pos:column="51"/></condition><then pos:line="75" pos:column="51">
				<block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="33">fmt<pos:position pos:line="76" pos:column="36"/></name> <operator pos:line="76" pos:column="37">=<pos:position pos:line="76" pos:column="38"/></operator> <name pos:line="76" pos:column="39">deleted_fmt<pos:position pos:line="76" pos:column="50"/></name></expr>;<pos:position pos:line="76" pos:column="51"/></expr_stmt></block></then>
			<elseif pos:line="77" pos:column="25">else <if pos:line="77" pos:column="30">if <condition pos:line="77" pos:column="33">(<expr><name><name pos:line="77" pos:column="34">ce<pos:position pos:line="77" pos:column="36"/></name><operator pos:line="77" pos:column="36">-&gt;<pos:position pos:line="77" pos:column="41"/></operator><name pos:line="77" pos:column="38">ce_flags<pos:position pos:line="77" pos:column="46"/></name></name> <operator pos:line="77" pos:column="47">&amp;<pos:position pos:line="77" pos:column="52"/></operator> <name pos:line="77" pos:column="49">CE_INTENT_TO_ADD<pos:position pos:line="77" pos:column="65"/></name></expr>)<pos:position pos:line="77" pos:column="66"/></condition><then pos:line="77" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="33">fmt<pos:position pos:line="78" pos:column="36"/></name> <operator pos:line="78" pos:column="37">=<pos:position pos:line="78" pos:column="38"/></operator> <name pos:line="78" pos:column="39">added_fmt<pos:position pos:line="78" pos:column="48"/></name></expr>;<pos:position pos:line="78" pos:column="49"/></expr_stmt></block></then></if></elseif> <comment type="block" pos:line="78" pos:column="50">/* must be before other checks */</comment>
			<elseif pos:line="79" pos:column="25">else <if pos:line="79" pos:column="30">if <condition pos:line="79" pos:column="33">(<expr><name pos:line="79" pos:column="34">changed<pos:position pos:line="79" pos:column="41"/></name> <operator pos:line="79" pos:column="42">&amp;<pos:position pos:line="79" pos:column="47"/></operator> <name pos:line="79" pos:column="44">TYPE_CHANGED<pos:position pos:line="79" pos:column="56"/></name></expr>)<pos:position pos:line="79" pos:column="57"/></condition><then pos:line="79" pos:column="57">
				<block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="33">fmt<pos:position pos:line="80" pos:column="36"/></name> <operator pos:line="80" pos:column="37">=<pos:position pos:line="80" pos:column="38"/></operator> <name pos:line="80" pos:column="39">typechange_fmt<pos:position pos:line="80" pos:column="53"/></name></expr>;<pos:position pos:line="80" pos:column="54"/></expr_stmt></block></then></if></elseif>
			<else pos:line="81" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="33">fmt<pos:position pos:line="82" pos:column="36"/></name> <operator pos:line="82" pos:column="37">=<pos:position pos:line="82" pos:column="38"/></operator> <name pos:line="82" pos:column="39">modified_fmt<pos:position pos:line="82" pos:column="51"/></name></expr>;<pos:position pos:line="82" pos:column="52"/></expr_stmt></block></else></if>
			<expr_stmt><expr><call><name pos:line="83" pos:column="25">show_file<pos:position pos:line="83" pos:column="34"/></name><argument_list pos:line="83" pos:column="34">(<argument><expr><name pos:line="83" pos:column="35">fmt<pos:position pos:line="83" pos:column="38"/></name></expr></argument>,
				  <argument><expr><name><name pos:line="84" pos:column="35">ce<pos:position pos:line="84" pos:column="37"/></name><operator pos:line="84" pos:column="37">-&gt;<pos:position pos:line="84" pos:column="42"/></operator><name pos:line="84" pos:column="39">name<pos:position pos:line="84" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="45">in_porcelain<pos:position pos:line="84" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="59">&amp;<pos:position pos:line="84" pos:column="64"/></operator><name pos:line="84" pos:column="60">first<pos:position pos:line="84" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="67">header_msg<pos:position pos:line="84" pos:column="77"/></name></expr></argument>)<pos:position pos:line="84" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="79"/></expr_stmt>
			<expr_stmt><expr><name pos:line="85" pos:column="25">has_errors<pos:position pos:line="85" pos:column="35"/></name> <operator pos:line="85" pos:column="36">=<pos:position pos:line="85" pos:column="37"/></operator> <literal type="number" pos:line="85" pos:column="38">1<pos:position pos:line="85" pos:column="39"/></literal></expr>;<pos:position pos:line="85" pos:column="40"/></expr_stmt>
			<continue pos:line="86" pos:column="25">continue;<pos:position pos:line="86" pos:column="34"/></continue>
		}<pos:position pos:line="87" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="89" pos:column="17">replace_index_entry<pos:position pos:line="89" pos:column="36"/></name><argument_list pos:line="89" pos:column="36">(<argument><expr><name pos:line="89" pos:column="37">istate<pos:position pos:line="89" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="45">i<pos:position pos:line="89" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="48">new<pos:position pos:line="89" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="89" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="90" pos:column="10"/></block></for>
	<return pos:line="91" pos:column="9">return <expr><name pos:line="91" pos:column="16">has_errors<pos:position pos:line="91" pos:column="26"/></name></expr>;<pos:position pos:line="91" pos:column="27"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

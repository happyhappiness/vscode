<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5424_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">hg_patch_to_mail<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">FILE<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">out<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">FILE<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">in<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">keep_cr<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">sb<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name pos:line="3" pos:column="28">STRBUF_INIT<pos:position pos:line="3" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>

	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><operator pos:line="5" pos:column="16">!<pos:position pos:line="5" pos:column="17"/></operator><call><name pos:line="5" pos:column="17">strbuf_getline_lf<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><operator pos:line="5" pos:column="35">&amp;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="36">sb<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="40">in<pos:position pos:line="5" pos:column="42"/></name></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="44"/></condition> <block pos:line="5" pos:column="45">{
		<decl_stmt><decl><type><specifier pos:line="6" pos:column="17">const<pos:position pos:line="6" pos:column="22"/></specifier> <name pos:line="6" pos:column="23">char<pos:position pos:line="6" pos:column="27"/></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">str<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>

		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><call><name pos:line="8" pos:column="21">skip_prefix<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name><name pos:line="8" pos:column="33">sb<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">.<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">buf<pos:position pos:line="8" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="41">"# User "<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="52">&amp;<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="53">str<pos:position pos:line="8" pos:column="56"/></name></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="58"/></condition><then pos:line="8" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="25">fprintf<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">out<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="38">"From: %s\n"<pos:position pos:line="9" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="52">str<pos:position pos:line="9" pos:column="55"/></name></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt></block></then>
		<elseif pos:line="10" pos:column="17">else <if pos:line="10" pos:column="22">if <condition pos:line="10" pos:column="25">(<expr><call><name pos:line="10" pos:column="26">skip_prefix<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name><name pos:line="10" pos:column="38">sb<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">.<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="41">buf<pos:position pos:line="10" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="46">"# Date "<pos:position pos:line="10" pos:column="55"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="57">&amp;<pos:position pos:line="10" pos:column="62"/></operator><name pos:line="10" pos:column="58">str<pos:position pos:line="10" pos:column="61"/></name></expr></argument>)<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="63"/></condition><then pos:line="10" pos:column="63"> <block pos:line="10" pos:column="64">{
			<decl_stmt><decl><type><name pos:line="11" pos:column="25">timestamp_t<pos:position pos:line="11" pos:column="36"/></name></type> <name pos:line="11" pos:column="37">timestamp<pos:position pos:line="11" pos:column="46"/></name></decl>;<pos:position pos:line="11" pos:column="47"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="12" pos:column="25">long<pos:position pos:line="12" pos:column="29"/></name></type> <name pos:line="12" pos:column="30">tz<pos:position pos:line="12" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="34">tz2<pos:position pos:line="12" pos:column="37"/></name></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="13" pos:column="25">char<pos:position pos:line="13" pos:column="29"/></name> <modifier pos:line="13" pos:column="30">*<pos:position pos:line="13" pos:column="31"/></modifier></type><name pos:line="13" pos:column="31">end<pos:position pos:line="13" pos:column="34"/></name></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>

			<expr_stmt><expr><name pos:line="15" pos:column="25">errno<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">=<pos:position pos:line="15" pos:column="32"/></operator> <literal type="number" pos:line="15" pos:column="33">0<pos:position pos:line="15" pos:column="34"/></literal></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="16" pos:column="25">timestamp<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">=<pos:position pos:line="16" pos:column="36"/></operator> <call><name pos:line="16" pos:column="37">parse_timestamp<pos:position pos:line="16" pos:column="52"/></name><argument_list pos:line="16" pos:column="52">(<argument><expr><name pos:line="16" pos:column="53">str<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="58">&amp;<pos:position pos:line="16" pos:column="63"/></operator><name pos:line="16" pos:column="59">end<pos:position pos:line="16" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="64">10<pos:position pos:line="16" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="68"/></expr_stmt>
			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><name pos:line="17" pos:column="29">errno<pos:position pos:line="17" pos:column="34"/></name></expr>)<pos:position pos:line="17" pos:column="35"/></condition><then pos:line="17" pos:column="35">
				<block type="pseudo"><return pos:line="18" pos:column="33">return <expr><call><name pos:line="18" pos:column="40">error<pos:position pos:line="18" pos:column="45"/></name><argument_list pos:line="18" pos:column="45">(<argument><expr><call><name pos:line="18" pos:column="46">_<pos:position pos:line="18" pos:column="47"/></name><argument_list pos:line="18" pos:column="47">(<argument><expr><literal type="string" pos:line="18" pos:column="48">"invalid timestamp"<pos:position pos:line="18" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="70"/></return></block></then></if>

			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><operator pos:line="20" pos:column="29">!<pos:position pos:line="20" pos:column="30"/></operator><call><name pos:line="20" pos:column="30">skip_prefix<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><expr><name pos:line="20" pos:column="42">end<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="47">" "<pos:position pos:line="20" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="52">&amp;<pos:position pos:line="20" pos:column="57"/></operator><name pos:line="20" pos:column="53">str<pos:position pos:line="20" pos:column="56"/></name></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="58"/></condition><then pos:line="20" pos:column="58">
				<block type="pseudo"><return pos:line="21" pos:column="33">return <expr><call><name pos:line="21" pos:column="40">error<pos:position pos:line="21" pos:column="45"/></name><argument_list pos:line="21" pos:column="45">(<argument><expr><call><name pos:line="21" pos:column="46">_<pos:position pos:line="21" pos:column="47"/></name><argument_list pos:line="21" pos:column="47">(<argument><expr><literal type="string" pos:line="21" pos:column="48">"invalid Date line"<pos:position pos:line="21" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="70"/></return></block></then></if>

			<expr_stmt><expr><name pos:line="23" pos:column="25">errno<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <literal type="number" pos:line="23" pos:column="33">0<pos:position pos:line="23" pos:column="34"/></literal></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">tz<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <call><name pos:line="24" pos:column="30">strtol<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><name pos:line="24" pos:column="37">str<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="42">&amp;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="43">end<pos:position pos:line="24" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="48">10<pos:position pos:line="24" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><name pos:line="25" pos:column="29">errno<pos:position pos:line="25" pos:column="34"/></name></expr>)<pos:position pos:line="25" pos:column="35"/></condition><then pos:line="25" pos:column="35">
				<block type="pseudo"><return pos:line="26" pos:column="33">return <expr><call><name pos:line="26" pos:column="40">error<pos:position pos:line="26" pos:column="45"/></name><argument_list pos:line="26" pos:column="45">(<argument><expr><call><name pos:line="26" pos:column="46">_<pos:position pos:line="26" pos:column="47"/></name><argument_list pos:line="26" pos:column="47">(<argument><expr><literal type="string" pos:line="26" pos:column="48">"invalid timezone offset"<pos:position pos:line="26" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="76"/></return></block></then></if>

			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><operator pos:line="28" pos:column="29">*<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">end<pos:position pos:line="28" pos:column="33"/></name></expr>)<pos:position pos:line="28" pos:column="34"/></condition><then pos:line="28" pos:column="34">
				<block type="pseudo"><return pos:line="29" pos:column="33">return <expr><call><name pos:line="29" pos:column="40">error<pos:position pos:line="29" pos:column="45"/></name><argument_list pos:line="29" pos:column="45">(<argument><expr><call><name pos:line="29" pos:column="46">_<pos:position pos:line="29" pos:column="47"/></name><argument_list pos:line="29" pos:column="47">(<argument><expr><literal type="string" pos:line="29" pos:column="48">"invalid Date line"<pos:position pos:line="29" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="70"/></return></block></then></if>

			<comment type="block" pos:line="31" pos:column="25">/*
			 * mercurial's timezone is in seconds west of UTC,
			 * however git's timezone is in hours + minutes east of
			 * UTC. Convert it.
			 */</comment>
			<expr_stmt><expr><name pos:line="36" pos:column="25">tz2<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <call><name pos:line="36" pos:column="31">labs<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><name pos:line="36" pos:column="36">tz<pos:position pos:line="36" pos:column="38"/></name></expr></argument>)<pos:position pos:line="36" pos:column="39"/></argument_list></call> <operator pos:line="36" pos:column="40">/<pos:position pos:line="36" pos:column="41"/></operator> <literal type="number" pos:line="36" pos:column="42">3600<pos:position pos:line="36" pos:column="46"/></literal> <operator pos:line="36" pos:column="47">*<pos:position pos:line="36" pos:column="48"/></operator> <literal type="number" pos:line="36" pos:column="49">100<pos:position pos:line="36" pos:column="52"/></literal> <operator pos:line="36" pos:column="53">+<pos:position pos:line="36" pos:column="54"/></operator> <call><name pos:line="36" pos:column="55">labs<pos:position pos:line="36" pos:column="59"/></name><argument_list pos:line="36" pos:column="59">(<argument><expr><name pos:line="36" pos:column="60">tz<pos:position pos:line="36" pos:column="62"/></name></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call> <operator pos:line="36" pos:column="64">%<pos:position pos:line="36" pos:column="65"/></operator> <literal type="number" pos:line="36" pos:column="66">3600<pos:position pos:line="36" pos:column="70"/></literal> <operator pos:line="36" pos:column="71">/<pos:position pos:line="36" pos:column="72"/></operator> <literal type="number" pos:line="36" pos:column="73">60<pos:position pos:line="36" pos:column="75"/></literal></expr>;<pos:position pos:line="36" pos:column="76"/></expr_stmt>
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><name pos:line="37" pos:column="29">tz<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">&gt;<pos:position pos:line="37" pos:column="36"/></operator> <literal type="number" pos:line="37" pos:column="34">0<pos:position pos:line="37" pos:column="35"/></literal></expr>)<pos:position pos:line="37" pos:column="36"/></condition><then pos:line="37" pos:column="36">
				<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="33">tz2<pos:position pos:line="38" pos:column="36"/></name> <operator pos:line="38" pos:column="37">=<pos:position pos:line="38" pos:column="38"/></operator> <operator pos:line="38" pos:column="39">-<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="40">tz2<pos:position pos:line="38" pos:column="43"/></name></expr>;<pos:position pos:line="38" pos:column="44"/></expr_stmt></block></then></if>

			<expr_stmt><expr><call><name pos:line="40" pos:column="25">fprintf<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name pos:line="40" pos:column="33">out<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="38">"Date: %s\n"<pos:position pos:line="40" pos:column="50"/></literal></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="52">show_date<pos:position pos:line="40" pos:column="61"/></name><argument_list pos:line="40" pos:column="61">(<argument><expr><name pos:line="40" pos:column="62">timestamp<pos:position pos:line="40" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="73">tz2<pos:position pos:line="40" pos:column="76"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="78">DATE_MODE<pos:position pos:line="40" pos:column="87"/></name><argument_list pos:line="40" pos:column="87">(<argument><expr><name pos:line="40" pos:column="88">RFC2822<pos:position pos:line="40" pos:column="95"/></name></expr></argument>)<pos:position pos:line="40" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="99"/></expr_stmt>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if></elseif> <elseif pos:line="41" pos:column="19">else <if pos:line="41" pos:column="24">if <condition pos:line="41" pos:column="27">(<expr><call><name pos:line="41" pos:column="28">starts_with<pos:position pos:line="41" pos:column="39"/></name><argument_list pos:line="41" pos:column="39">(<argument><expr><name><name pos:line="41" pos:column="40">sb<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">.<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="43">buf<pos:position pos:line="41" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="48">"# "<pos:position pos:line="41" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="54"/></condition><then pos:line="41" pos:column="54"> <block pos:line="41" pos:column="55">{
			<continue pos:line="42" pos:column="25">continue;<pos:position pos:line="42" pos:column="34"/></continue>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if></elseif> <else pos:line="43" pos:column="19">else <block pos:line="43" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="44" pos:column="25">fprintf<pos:position pos:line="44" pos:column="32"/></name><argument_list pos:line="44" pos:column="32">(<argument><expr><name pos:line="44" pos:column="33">out<pos:position pos:line="44" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="38">"\n%s\n"<pos:position pos:line="44" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="48">sb<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">.<pos:position pos:line="44" pos:column="51"/></operator><name pos:line="44" pos:column="51">buf<pos:position pos:line="44" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="56"/></expr_stmt>
			<break pos:line="45" pos:column="25">break;<pos:position pos:line="45" pos:column="31"/></break>
		}<pos:position pos:line="46" pos:column="18"/></block></else></if>
	}<pos:position pos:line="47" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="49" pos:column="9">strbuf_reset<pos:position pos:line="49" pos:column="21"/></name><argument_list pos:line="49" pos:column="21">(<argument><expr><operator pos:line="49" pos:column="22">&amp;<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="23">sb<pos:position pos:line="49" pos:column="25"/></name></expr></argument>)<pos:position pos:line="49" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="27"/></expr_stmt>
	<while pos:line="50" pos:column="9">while <condition pos:line="50" pos:column="15">(<expr><call><name pos:line="50" pos:column="16">strbuf_fread<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">(<argument><expr><operator pos:line="50" pos:column="29">&amp;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="30">sb<pos:position pos:line="50" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="34">8192<pos:position pos:line="50" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="40">in<pos:position pos:line="50" pos:column="42"/></name></expr></argument>)<pos:position pos:line="50" pos:column="43"/></argument_list></call> <operator pos:line="50" pos:column="44">&gt;<pos:position pos:line="50" pos:column="48"/></operator> <literal type="number" pos:line="50" pos:column="46">0<pos:position pos:line="50" pos:column="47"/></literal></expr>)<pos:position pos:line="50" pos:column="48"/></condition> <block pos:line="50" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">fwrite<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><name><name pos:line="51" pos:column="24">sb<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">.<pos:position pos:line="51" pos:column="27"/></operator><name pos:line="51" pos:column="27">buf<pos:position pos:line="51" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="32">1<pos:position pos:line="51" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="35">sb<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">.<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="38">len<pos:position pos:line="51" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="43">out<pos:position pos:line="51" pos:column="46"/></name></expr></argument>)<pos:position pos:line="51" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">strbuf_reset<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><operator pos:line="52" pos:column="30">&amp;<pos:position pos:line="52" pos:column="35"/></operator><name pos:line="52" pos:column="31">sb<pos:position pos:line="52" pos:column="33"/></name></expr></argument>)<pos:position pos:line="52" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="53" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="55" pos:column="9">strbuf_release<pos:position pos:line="55" pos:column="23"/></name><argument_list pos:line="55" pos:column="23">(<argument><expr><operator pos:line="55" pos:column="24">&amp;<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="25">sb<pos:position pos:line="55" pos:column="27"/></name></expr></argument>)<pos:position pos:line="55" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="29"/></expr_stmt>
	<return pos:line="56" pos:column="9">return <expr><literal type="number" pos:line="56" pos:column="16">0<pos:position pos:line="56" pos:column="17"/></literal></expr>;<pos:position pos:line="56" pos:column="18"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2818_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">init_reflog_walk<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">reflog_walk_info<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier><modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">info<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><operator pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">info<pos:position pos:line="3" pos:column="14"/></name> <operator pos:line="3" pos:column="15">=<pos:position pos:line="3" pos:column="16"/></operator> <call><name pos:line="3" pos:column="17">xcalloc<pos:position pos:line="3" pos:column="24"/></name><argument_list pos:line="3" pos:column="24">(<argument><expr><literal type="number" pos:line="3" pos:column="25">1<pos:position pos:line="3" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="28">sizeof<argument_list pos:line="3" pos:column="34">(<argument><expr pos:line="3" pos:column="35">struct <name pos:line="3" pos:column="42">reflog_walk_info<pos:position pos:line="3" pos:column="58"/></name></expr></argument>)<pos:position pos:line="3" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><name><operator pos:line="4" pos:column="9">(<pos:position pos:line="4" pos:column="10"/></operator><operator pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">info<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">)<pos:position pos:line="4" pos:column="16"/></operator><operator pos:line="4" pos:column="16">-&gt;<pos:position pos:line="4" pos:column="21"/></operator><name><name pos:line="4" pos:column="18">complete_reflogs<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">.<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">strdup_strings<pos:position pos:line="4" pos:column="49"/></name></name></name> <operator pos:line="4" pos:column="50">=<pos:position pos:line="4" pos:column="51"/></operator> <literal type="number" pos:line="4" pos:column="52">1<pos:position pos:line="4" pos:column="53"/></literal></expr>;<pos:position pos:line="4" pos:column="54"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

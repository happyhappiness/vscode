<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2060_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">skip_uninteresting<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">tree_desc<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">t<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="53">struct<pos:position pos:line="1" pos:column="59"/></name> <name pos:line="1" pos:column="60">strbuf<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">base<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
			       <parameter><decl><type><name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">diff_options<pos:position pos:line="2" pos:column="51"/></name></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">opt<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">enum<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">interesting<pos:position pos:line="4" pos:column="25"/></name></name></type> <name pos:line="4" pos:column="26">match<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><name><name pos:line="6" pos:column="16">t<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">size<pos:position pos:line="6" pos:column="23"/></name></name></expr>)<pos:position pos:line="6" pos:column="24"/></condition> <block pos:line="6" pos:column="25">{
		<expr_stmt><expr><name pos:line="7" pos:column="17">match<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">=<pos:position pos:line="7" pos:column="24"/></operator> <call><name pos:line="7" pos:column="25">tree_entry_interesting<pos:position pos:line="7" pos:column="47"/></name><argument_list pos:line="7" pos:column="47">(<argument><expr><operator pos:line="7" pos:column="48">&amp;<pos:position pos:line="7" pos:column="53"/></operator><name><name pos:line="7" pos:column="49">t<pos:position pos:line="7" pos:column="50"/></name><operator pos:line="7" pos:column="50">-&gt;<pos:position pos:line="7" pos:column="55"/></operator><name pos:line="7" pos:column="52">entry<pos:position pos:line="7" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="59">base<pos:position pos:line="7" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="65">0<pos:position pos:line="7" pos:column="66"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="68">&amp;<pos:position pos:line="7" pos:column="73"/></operator><name><name pos:line="7" pos:column="69">opt<pos:position pos:line="7" pos:column="72"/></name><operator pos:line="7" pos:column="72">-&gt;<pos:position pos:line="7" pos:column="77"/></operator><name pos:line="7" pos:column="74">pathspec<pos:position pos:line="7" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="84"/></expr_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">match<pos:position pos:line="8" pos:column="26"/></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27"> <block pos:line="8" pos:column="28">{
			<if pos:line="9" pos:column="25">if <condition pos:line="9" pos:column="28">(<expr><name pos:line="9" pos:column="29">match<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">==<pos:position pos:line="9" pos:column="37"/></operator> <name pos:line="9" pos:column="38">all_entries_not_interesting<pos:position pos:line="9" pos:column="65"/></name></expr>)<pos:position pos:line="9" pos:column="66"/></condition><then pos:line="9" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="10" pos:column="33">t<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">size<pos:position pos:line="10" pos:column="40"/></name></name> <operator pos:line="10" pos:column="41">=<pos:position pos:line="10" pos:column="42"/></operator> <literal type="number" pos:line="10" pos:column="43">0<pos:position pos:line="10" pos:column="44"/></literal></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt></block></then></if>
			<break pos:line="11" pos:column="25">break;<pos:position pos:line="11" pos:column="31"/></break>
		}<pos:position pos:line="12" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">update_tree_entry<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">t<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></while>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5016_git-2.4.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">anonymize_ident_line<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier><modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">beg<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier><modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">end<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name><name pos:line="3" pos:column="16">struct<pos:position pos:line="3" pos:column="22"/></name> <name pos:line="3" pos:column="23">strbuf<pos:position pos:line="3" pos:column="29"/></name></name></type> <name><name pos:line="3" pos:column="30">buffers<pos:position pos:line="3" pos:column="37"/></name><index pos:line="3" pos:column="37">[]<pos:position pos:line="3" pos:column="39"/></index></name> <init pos:line="3" pos:column="40">= <expr><block pos:line="3" pos:column="42">{ <expr><name pos:line="3" pos:column="44">STRBUF_INIT<pos:position pos:line="3" pos:column="55"/></name></expr>, <expr><name pos:line="3" pos:column="57">STRBUF_INIT<pos:position pos:line="3" pos:column="68"/></name></expr> }<pos:position pos:line="3" pos:column="70"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="71"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">unsigned<pos:position pos:line="4" pos:column="24"/></name></type> <name pos:line="4" pos:column="25">which_buffer<pos:position pos:line="4" pos:column="37"/></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">out<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">ident_split<pos:position pos:line="7" pos:column="27"/></name></name></type> <name pos:line="7" pos:column="28">split<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">end_of_header<pos:position pos:line="8" pos:column="34"/></name></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">out<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <operator pos:line="10" pos:column="15">&amp;<pos:position pos:line="10" pos:column="20"/></operator><name><name pos:line="10" pos:column="16">buffers<pos:position pos:line="10" pos:column="23"/></name><index pos:line="10" pos:column="23">[<expr><name pos:line="10" pos:column="24">which_buffer<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">++<pos:position pos:line="10" pos:column="38"/></operator></expr>]<pos:position pos:line="10" pos:column="39"/></index></name></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">which_buffer<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">%=<pos:position pos:line="11" pos:column="24"/></operator> <call><name pos:line="11" pos:column="25">ARRAY_SIZE<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">buffers<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">strbuf_reset<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">out<pos:position pos:line="12" pos:column="25"/></name></expr></argument>)<pos:position pos:line="12" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>

	<comment type="block" pos:line="14" pos:column="9">/* skip "committer", "author", "tagger", etc */</comment>
	<expr_stmt><expr><name pos:line="15" pos:column="9">end_of_header<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <call><name pos:line="15" pos:column="25">strchr<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><operator pos:line="15" pos:column="32">*<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="33">beg<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="38">' '<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">end_of_header<pos:position pos:line="16" pos:column="27"/></name></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">die<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><literal type="string" pos:line="17" pos:column="21">"BUG: malformed line fed to anonymize_ident_line: %.*s"<pos:position pos:line="17" pos:column="76"/></literal></expr></argument>,
		    <argument><expr><call pos:line="18" pos:column="21">(<name pos:line="18" pos:column="22">int<pos:position pos:line="18" pos:column="25"/></name>)<argument_list pos:line="18" pos:column="26">(<argument><expr><operator pos:line="18" pos:column="27">*<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">end<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">-<pos:position pos:line="18" pos:column="33"/></operator> <operator pos:line="18" pos:column="34">*<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="35">beg<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="18" pos:column="41">*<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="42">beg<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="19" pos:column="9">end_of_header<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">++<pos:position pos:line="19" pos:column="24"/></operator></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">strbuf_add<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">out<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="25">*<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">beg<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">end_of_header<pos:position pos:line="20" pos:column="44"/></name> <operator pos:line="20" pos:column="45">-<pos:position pos:line="20" pos:column="46"/></operator> <operator pos:line="20" pos:column="47">*<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="48">beg<pos:position pos:line="20" pos:column="51"/></name></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><call><name pos:line="22" pos:column="14">split_ident_line<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><operator pos:line="22" pos:column="31">&amp;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="32">split<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="39">end_of_header<pos:position pos:line="22" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="54">*<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="55">end<pos:position pos:line="22" pos:column="58"/></name> <operator pos:line="22" pos:column="59">-<pos:position pos:line="22" pos:column="60"/></operator> <name pos:line="22" pos:column="61">end_of_header<pos:position pos:line="22" pos:column="74"/></name></expr></argument>)<pos:position pos:line="22" pos:column="75"/></argument_list></call> <operator pos:line="22" pos:column="76">&amp;&amp;<pos:position pos:line="22" pos:column="86"/></operator>
	    <name><name pos:line="23" pos:column="13">split<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">.<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">date_begin<pos:position pos:line="23" pos:column="29"/></name></name></expr>)<pos:position pos:line="23" pos:column="30"/></condition><then pos:line="23" pos:column="30"> <block pos:line="23" pos:column="31">{
		<decl_stmt><decl><type><specifier pos:line="24" pos:column="17">const<pos:position pos:line="24" pos:column="22"/></specifier> <name pos:line="24" pos:column="23">char<pos:position pos:line="24" pos:column="27"/></name> <modifier pos:line="24" pos:column="28">*<pos:position pos:line="24" pos:column="29"/></modifier></type><name pos:line="24" pos:column="29">ident<pos:position pos:line="24" pos:column="34"/></name></decl>;<pos:position pos:line="24" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">size_t<pos:position pos:line="25" pos:column="23"/></name></type> <name pos:line="25" pos:column="24">len<pos:position pos:line="25" pos:column="27"/></name></decl>;<pos:position pos:line="25" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><name pos:line="27" pos:column="17">len<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <name><name pos:line="27" pos:column="23">split<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">.<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="29">mail_end<pos:position pos:line="27" pos:column="37"/></name></name> <operator pos:line="27" pos:column="38">-<pos:position pos:line="27" pos:column="39"/></operator> <name><name pos:line="27" pos:column="40">split<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">.<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="46">name_begin<pos:position pos:line="27" pos:column="56"/></name></name></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">ident<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <call><name pos:line="28" pos:column="25">anonymize_mem<pos:position pos:line="28" pos:column="38"/></name><argument_list pos:line="28" pos:column="38">(<argument><expr><operator pos:line="28" pos:column="39">&amp;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="40">idents<pos:position pos:line="28" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="48">anonymize_ident<pos:position pos:line="28" pos:column="63"/></name></expr></argument>,
				      <argument><expr><name><name pos:line="29" pos:column="39">split<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">.<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="45">name_begin<pos:position pos:line="29" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="57">&amp;<pos:position pos:line="29" pos:column="62"/></operator><name pos:line="29" pos:column="58">len<pos:position pos:line="29" pos:column="61"/></name></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">strbuf_add<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">out<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="33">ident<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">len<pos:position pos:line="30" pos:column="43"/></name></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">strbuf_addch<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">out<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="31" pos:column="35">' '<pos:position pos:line="31" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">strbuf_add<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">out<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="33">split<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">.<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="39">date_begin<pos:position pos:line="32" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="51">split<pos:position pos:line="32" pos:column="56"/></name><operator pos:line="32" pos:column="56">.<pos:position pos:line="32" pos:column="57"/></operator><name pos:line="32" pos:column="57">tz_end<pos:position pos:line="32" pos:column="63"/></name></name> <operator pos:line="32" pos:column="64">-<pos:position pos:line="32" pos:column="65"/></operator> <name><name pos:line="32" pos:column="66">split<pos:position pos:line="32" pos:column="71"/></name><operator pos:line="32" pos:column="71">.<pos:position pos:line="32" pos:column="72"/></operator><name pos:line="32" pos:column="72">date_begin<pos:position pos:line="32" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="84"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></then> <else pos:line="33" pos:column="11">else <block pos:line="33" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">strbuf_addstr<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">out<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="36">"Malformed Ident &lt;malformed@example.com&gt; 0 -0000"<pos:position pos:line="34" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="87"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></else></if>

	<expr_stmt><expr><operator pos:line="37" pos:column="9">*<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">beg<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <name><name pos:line="37" pos:column="16">out<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">-&gt;<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="21">buf<pos:position pos:line="37" pos:column="24"/></name></name></expr>;<pos:position pos:line="37" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="38" pos:column="9">*<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">end<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <name><name pos:line="38" pos:column="16">out<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">-&gt;<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="21">buf<pos:position pos:line="38" pos:column="24"/></name></name> <operator pos:line="38" pos:column="25">+<pos:position pos:line="38" pos:column="26"/></operator> <name><name pos:line="38" pos:column="27">out<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">-&gt;<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="32">len<pos:position pos:line="38" pos:column="35"/></name></name></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

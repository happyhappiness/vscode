<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2096_git-2.4.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">git_mkstemp<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">path<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">size_t<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">len<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier><specifier pos:line="1" pos:column="53">template<pos:position pos:line="1" pos:column="61"/></specifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">tmp<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">n<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">tmp<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <call><name pos:line="6" pos:column="15">getenv<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><literal type="string" pos:line="6" pos:column="22">"TMPDIR"<pos:position pos:line="6" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">tmp<pos:position pos:line="7" pos:column="17"/></name></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">tmp<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <literal type="string" pos:line="8" pos:column="23">"/tmp"<pos:position pos:line="8" pos:column="29"/></literal></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="9" pos:column="9">n<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <macro><name pos:line="9" pos:column="13">snprintf<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument pos:line="9" pos:column="22">path<pos:position pos:line="9" pos:column="26"/></argument>, <argument pos:line="9" pos:column="28">len<pos:position pos:line="9" pos:column="31"/></argument>, <argument><literal type="string" pos:line="9" pos:column="33">"%s/%s"<pos:position pos:line="9" pos:column="40"/></literal></argument>, <argument pos:line="9" pos:column="42">tmp<pos:position pos:line="9" pos:column="45"/></argument>, <argument pos:line="9" pos:column="47">template<pos:position pos:line="9" pos:column="55"/></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></macro></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">len<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">&lt;=<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="20">n<pos:position pos:line="10" pos:column="21"/></name></expr>)<pos:position pos:line="10" pos:column="22"/></condition><then pos:line="10" pos:column="22"> <block pos:line="10" pos:column="23">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">errno<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">ENAMETOOLONG<pos:position pos:line="11" pos:column="37"/></name></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">-<pos:position pos:line="12" pos:column="25"/></operator><literal type="number" pos:line="12" pos:column="25">1<pos:position pos:line="12" pos:column="26"/></literal></expr>;<pos:position pos:line="12" pos:column="27"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>
	<return pos:line="14" pos:column="9">return <expr><call><name pos:line="14" pos:column="16">mkstemp<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">path<pos:position pos:line="14" pos:column="28"/></name></expr></argument>)<pos:position pos:line="14" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="30"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

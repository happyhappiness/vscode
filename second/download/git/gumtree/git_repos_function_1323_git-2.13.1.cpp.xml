<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1323_git-2.13.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">apply_all_patches<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">apply_state<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">state<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
		      <parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">argc<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="3" pos:column="23">const<pos:position pos:line="3" pos:column="28"/></specifier> <name pos:line="3" pos:column="29">char<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier><modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">argv<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>,
		      <parameter><decl><type><name pos:line="4" pos:column="23">int<pos:position pos:line="4" pos:column="26"/></name></type> <name pos:line="4" pos:column="27">options<pos:position pos:line="4" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="35"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">res<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">errs<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">read_stdin<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><literal type="number" pos:line="9" pos:column="26">1<pos:position pos:line="9" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="25">argc<pos:position pos:line="11" pos:column="29"/></name></expr>;<pos:position pos:line="11" pos:column="30"/></condition> <incr><expr><name pos:line="11" pos:column="31">i<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">++<pos:position pos:line="11" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="35"/></control> <block pos:line="11" pos:column="36">{
		<decl_stmt><decl><type><specifier pos:line="12" pos:column="17">const<pos:position pos:line="12" pos:column="22"/></specifier> <name pos:line="12" pos:column="23">char<pos:position pos:line="12" pos:column="27"/></name> <modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">arg<pos:position pos:line="12" pos:column="32"/></name> <init pos:line="12" pos:column="33">= <expr><name><name pos:line="12" pos:column="35">argv<pos:position pos:line="12" pos:column="39"/></name><index pos:line="12" pos:column="39">[<expr><name pos:line="12" pos:column="40">i<pos:position pos:line="12" pos:column="41"/></name></expr>]<pos:position pos:line="12" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="12" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">char<pos:position pos:line="13" pos:column="21"/></name> <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier></type><name pos:line="13" pos:column="23">to_free<pos:position pos:line="13" pos:column="30"/></name> <init pos:line="13" pos:column="31">= <expr><name pos:line="13" pos:column="33">NULL<pos:position pos:line="13" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name></type> <name pos:line="14" pos:column="21">fd<pos:position pos:line="14" pos:column="23"/></name></decl>;<pos:position pos:line="14" pos:column="24"/></decl_stmt>

		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><call><name pos:line="16" pos:column="22">strcmp<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">arg<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="34">"-"<pos:position pos:line="16" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="39"/></condition><then pos:line="16" pos:column="39"> <block pos:line="16" pos:column="40">{
			<expr_stmt><expr><name pos:line="17" pos:column="25">res<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">=<pos:position pos:line="17" pos:column="30"/></operator> <call><name pos:line="17" pos:column="31">apply_patch<pos:position pos:line="17" pos:column="42"/></name><argument_list pos:line="17" pos:column="42">(<argument><expr><name pos:line="17" pos:column="43">state<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="50">0<pos:position pos:line="17" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="53">"&lt;stdin&gt;"<pos:position pos:line="17" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="64">options<pos:position pos:line="17" pos:column="71"/></name></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="73"/></expr_stmt>
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><name pos:line="18" pos:column="29">res<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">&lt;<pos:position pos:line="18" pos:column="37"/></operator> <literal type="number" pos:line="18" pos:column="35">0<pos:position pos:line="18" pos:column="36"/></literal></expr>)<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37">
				<block type="pseudo"><goto pos:line="19" pos:column="33">goto <name pos:line="19" pos:column="38">end<pos:position pos:line="19" pos:column="41"/></name>;<pos:position pos:line="19" pos:column="42"/></goto></block></then></if>
			<expr_stmt><expr><name pos:line="20" pos:column="25">errs<pos:position pos:line="20" pos:column="29"/></name> <operator pos:line="20" pos:column="30">|=<pos:position pos:line="20" pos:column="32"/></operator> <name pos:line="20" pos:column="33">res<pos:position pos:line="20" pos:column="36"/></name></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="21" pos:column="25">read_stdin<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">=<pos:position pos:line="21" pos:column="37"/></operator> <literal type="number" pos:line="21" pos:column="38">0<pos:position pos:line="21" pos:column="39"/></literal></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
			<continue pos:line="22" pos:column="25">continue;<pos:position pos:line="22" pos:column="34"/></continue>
		}<pos:position pos:line="23" pos:column="18"/></block></then> <else pos:line="23" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">arg<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">=<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="31">to_free<pos:position pos:line="24" pos:column="38"/></name> <operator pos:line="24" pos:column="39">=<pos:position pos:line="24" pos:column="40"/></operator> <call><name pos:line="24" pos:column="41">prefix_filename<pos:position pos:line="24" pos:column="56"/></name><argument_list pos:line="24" pos:column="56">(<argument><expr><name><name pos:line="24" pos:column="57">state<pos:position pos:line="24" pos:column="62"/></name><operator pos:line="24" pos:column="62">-&gt;<pos:position pos:line="24" pos:column="67"/></operator><name pos:line="24" pos:column="64">prefix<pos:position pos:line="24" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="72">arg<pos:position pos:line="24" pos:column="75"/></name></expr></argument>)<pos:position pos:line="24" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="77"/></expr_stmt></block></else></if>

		<expr_stmt><expr><name pos:line="26" pos:column="17">fd<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <call><name pos:line="26" pos:column="22">open<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">arg<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="32">O_RDONLY<pos:position pos:line="26" pos:column="40"/></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">fd<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">&lt;<pos:position pos:line="27" pos:column="28"/></operator> <literal type="number" pos:line="27" pos:column="26">0<pos:position pos:line="27" pos:column="27"/></literal></expr>)<pos:position pos:line="27" pos:column="28"/></condition><then pos:line="27" pos:column="28"> <block pos:line="27" pos:column="29">{
			<expr_stmt><expr><call><name pos:line="28" pos:column="25">error<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><call><name pos:line="28" pos:column="31">_<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><literal type="string" pos:line="28" pos:column="33">"can't open patch '%s': %s"<pos:position pos:line="28" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="28" pos:column="63">arg<pos:position pos:line="28" pos:column="66"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="68">strerror<pos:position pos:line="28" pos:column="76"/></name><argument_list pos:line="28" pos:column="76">(<argument><expr><name pos:line="28" pos:column="77">errno<pos:position pos:line="28" pos:column="82"/></name></expr></argument>)<pos:position pos:line="28" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="85"/></expr_stmt>
			<expr_stmt><expr><name pos:line="29" pos:column="25">res<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">=<pos:position pos:line="29" pos:column="30"/></operator> <operator pos:line="29" pos:column="31">-<pos:position pos:line="29" pos:column="32"/></operator><literal type="number" pos:line="29" pos:column="32">128<pos:position pos:line="29" pos:column="35"/></literal></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">free<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">to_free<pos:position pos:line="30" pos:column="37"/></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
			<goto pos:line="31" pos:column="25">goto <name pos:line="31" pos:column="30">end<pos:position pos:line="31" pos:column="33"/></name>;<pos:position pos:line="31" pos:column="34"/></goto>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="33" pos:column="17">read_stdin<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">=<pos:position pos:line="33" pos:column="29"/></operator> <literal type="number" pos:line="33" pos:column="30">0<pos:position pos:line="33" pos:column="31"/></literal></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">set_default_whitespace_mode<pos:position pos:line="34" pos:column="44"/></name><argument_list pos:line="34" pos:column="44">(<argument><expr><name pos:line="34" pos:column="45">state<pos:position pos:line="34" pos:column="50"/></name></expr></argument>)<pos:position pos:line="34" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">res<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <call><name pos:line="35" pos:column="23">apply_patch<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">state<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">fd<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="46">arg<pos:position pos:line="35" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="51">options<pos:position pos:line="35" pos:column="58"/></name></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">close<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name pos:line="36" pos:column="23">fd<pos:position pos:line="36" pos:column="25"/></name></expr></argument>)<pos:position pos:line="36" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">free<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">to_free<pos:position pos:line="37" pos:column="29"/></name></expr></argument>)<pos:position pos:line="37" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">res<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">&lt;<pos:position pos:line="38" pos:column="29"/></operator> <literal type="number" pos:line="38" pos:column="27">0<pos:position pos:line="38" pos:column="28"/></literal></expr>)<pos:position pos:line="38" pos:column="29"/></condition><then pos:line="38" pos:column="29">
			<block type="pseudo"><goto pos:line="39" pos:column="25">goto <name pos:line="39" pos:column="30">end<pos:position pos:line="39" pos:column="33"/></name>;<pos:position pos:line="39" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name pos:line="40" pos:column="17">errs<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">|=<pos:position pos:line="40" pos:column="24"/></operator> <name pos:line="40" pos:column="25">res<pos:position pos:line="40" pos:column="28"/></name></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">set_default_whitespace_mode<pos:position pos:line="42" pos:column="36"/></name><argument_list pos:line="42" pos:column="36">(<argument><expr><name pos:line="42" pos:column="37">state<pos:position pos:line="42" pos:column="42"/></name></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="44"/></expr_stmt>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">read_stdin<pos:position pos:line="43" pos:column="23"/></name></expr>)<pos:position pos:line="43" pos:column="24"/></condition><then pos:line="43" pos:column="24"> <block pos:line="43" pos:column="25">{
		<expr_stmt><expr><name pos:line="44" pos:column="17">res<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <call><name pos:line="44" pos:column="23">apply_patch<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><name pos:line="44" pos:column="35">state<pos:position pos:line="44" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="42">0<pos:position pos:line="44" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="45">"&lt;stdin&gt;"<pos:position pos:line="44" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="56">options<pos:position pos:line="44" pos:column="63"/></name></expr></argument>)<pos:position pos:line="44" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="65"/></expr_stmt>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">res<pos:position pos:line="45" pos:column="24"/></name> <operator pos:line="45" pos:column="25">&lt;<pos:position pos:line="45" pos:column="29"/></operator> <literal type="number" pos:line="45" pos:column="27">0<pos:position pos:line="45" pos:column="28"/></literal></expr>)<pos:position pos:line="45" pos:column="29"/></condition><then pos:line="45" pos:column="29">
			<block type="pseudo"><goto pos:line="46" pos:column="25">goto <name pos:line="46" pos:column="30">end<pos:position pos:line="46" pos:column="33"/></name>;<pos:position pos:line="46" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name pos:line="47" pos:column="17">errs<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">|=<pos:position pos:line="47" pos:column="24"/></operator> <name pos:line="47" pos:column="25">res<pos:position pos:line="47" pos:column="28"/></name></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>

	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name><name pos:line="50" pos:column="13">state<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">-&gt;<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="20">whitespace_error<pos:position pos:line="50" pos:column="36"/></name></name></expr>)<pos:position pos:line="50" pos:column="37"/></condition><then pos:line="50" pos:column="37"> <block pos:line="50" pos:column="38">{
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name><name pos:line="51" pos:column="21">state<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">-&gt;<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="28">squelch_whitespace_errors<pos:position pos:line="51" pos:column="53"/></name></name> <operator pos:line="51" pos:column="54">&amp;&amp;<pos:position pos:line="51" pos:column="64"/></operator>
		    <name><name pos:line="52" pos:column="21">state<pos:position pos:line="52" pos:column="26"/></name><operator pos:line="52" pos:column="26">-&gt;<pos:position pos:line="52" pos:column="31"/></operator><name pos:line="52" pos:column="28">squelch_whitespace_errors<pos:position pos:line="52" pos:column="53"/></name></name> <operator pos:line="52" pos:column="54">&lt;<pos:position pos:line="52" pos:column="58"/></operator> <name><name pos:line="52" pos:column="56">state<pos:position pos:line="52" pos:column="61"/></name><operator pos:line="52" pos:column="61">-&gt;<pos:position pos:line="52" pos:column="66"/></operator><name pos:line="52" pos:column="63">whitespace_error<pos:position pos:line="52" pos:column="79"/></name></name></expr>)<pos:position pos:line="52" pos:column="80"/></condition><then pos:line="52" pos:column="80"> <block pos:line="52" pos:column="81">{
			<decl_stmt><decl><type><name pos:line="53" pos:column="25">int<pos:position pos:line="53" pos:column="28"/></name></type> <name pos:line="53" pos:column="29">squelched<pos:position pos:line="53" pos:column="38"/></name> <init pos:line="53" pos:column="39">=
				<expr><name><name pos:line="54" pos:column="33">state<pos:position pos:line="54" pos:column="38"/></name><operator pos:line="54" pos:column="38">-&gt;<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="40">whitespace_error<pos:position pos:line="54" pos:column="56"/></name></name> <operator pos:line="54" pos:column="57">-<pos:position pos:line="54" pos:column="58"/></operator> <name><name pos:line="54" pos:column="59">state<pos:position pos:line="54" pos:column="64"/></name><operator pos:line="54" pos:column="64">-&gt;<pos:position pos:line="54" pos:column="69"/></operator><name pos:line="54" pos:column="66">squelch_whitespace_errors<pos:position pos:line="54" pos:column="91"/></name></name></expr></init></decl>;<pos:position pos:line="54" pos:column="92"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="55" pos:column="25">warning<pos:position pos:line="55" pos:column="32"/></name><argument_list pos:line="55" pos:column="32">(<argument><expr><call><name pos:line="55" pos:column="33">Q_<pos:position pos:line="55" pos:column="35"/></name><argument_list pos:line="55" pos:column="35">(<argument><expr><literal type="string" pos:line="55" pos:column="36">"squelched %d whitespace error"<pos:position pos:line="55" pos:column="67"/></literal></expr></argument>,
				   <argument><expr><literal type="string" pos:line="56" pos:column="36">"squelched %d whitespace errors"<pos:position pos:line="56" pos:column="68"/></literal></expr></argument>,
				   <argument><expr><name pos:line="57" pos:column="36">squelched<pos:position pos:line="57" pos:column="45"/></name></expr></argument>)<pos:position pos:line="57" pos:column="46"/></argument_list></call></expr></argument>,
				<argument><expr><name pos:line="58" pos:column="33">squelched<pos:position pos:line="58" pos:column="42"/></name></expr></argument>)<pos:position pos:line="58" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="59" pos:column="18"/></block></then></if>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name><name pos:line="60" pos:column="21">state<pos:position pos:line="60" pos:column="26"/></name><operator pos:line="60" pos:column="26">-&gt;<pos:position pos:line="60" pos:column="31"/></operator><name pos:line="60" pos:column="28">ws_error_action<pos:position pos:line="60" pos:column="43"/></name></name> <operator pos:line="60" pos:column="44">==<pos:position pos:line="60" pos:column="46"/></operator> <name pos:line="60" pos:column="47">die_on_ws_error<pos:position pos:line="60" pos:column="62"/></name></expr>)<pos:position pos:line="60" pos:column="63"/></condition><then pos:line="60" pos:column="63"> <block pos:line="60" pos:column="64">{
			<expr_stmt><expr><call><name pos:line="61" pos:column="25">error<pos:position pos:line="61" pos:column="30"/></name><argument_list pos:line="61" pos:column="30">(<argument><expr><call><name pos:line="61" pos:column="31">Q_<pos:position pos:line="61" pos:column="33"/></name><argument_list pos:line="61" pos:column="33">(<argument><expr><literal type="string" pos:line="61" pos:column="34">"%d line adds whitespace errors."<pos:position pos:line="61" pos:column="67"/></literal></expr></argument>,
				 <argument><expr><literal type="string" pos:line="62" pos:column="34">"%d lines add whitespace errors."<pos:position pos:line="62" pos:column="67"/></literal></expr></argument>,
				 <argument><expr><name><name pos:line="63" pos:column="34">state<pos:position pos:line="63" pos:column="39"/></name><operator pos:line="63" pos:column="39">-&gt;<pos:position pos:line="63" pos:column="44"/></operator><name pos:line="63" pos:column="41">whitespace_error<pos:position pos:line="63" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="58"/></argument_list></call></expr></argument>,
			      <argument><expr><name><name pos:line="64" pos:column="31">state<pos:position pos:line="64" pos:column="36"/></name><operator pos:line="64" pos:column="36">-&gt;<pos:position pos:line="64" pos:column="41"/></operator><name pos:line="64" pos:column="38">whitespace_error<pos:position pos:line="64" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name pos:line="65" pos:column="25">res<pos:position pos:line="65" pos:column="28"/></name> <operator pos:line="65" pos:column="29">=<pos:position pos:line="65" pos:column="30"/></operator> <operator pos:line="65" pos:column="31">-<pos:position pos:line="65" pos:column="32"/></operator><literal type="number" pos:line="65" pos:column="32">128<pos:position pos:line="65" pos:column="35"/></literal></expr>;<pos:position pos:line="65" pos:column="36"/></expr_stmt>
			<goto pos:line="66" pos:column="25">goto <name pos:line="66" pos:column="30">end<pos:position pos:line="66" pos:column="33"/></name>;<pos:position pos:line="66" pos:column="34"/></goto>
		}<pos:position pos:line="67" pos:column="18"/></block></then></if>
		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name><name pos:line="68" pos:column="21">state<pos:position pos:line="68" pos:column="26"/></name><operator pos:line="68" pos:column="26">-&gt;<pos:position pos:line="68" pos:column="31"/></operator><name pos:line="68" pos:column="28">applied_after_fixing_ws<pos:position pos:line="68" pos:column="51"/></name></name> <operator pos:line="68" pos:column="52">&amp;&amp;<pos:position pos:line="68" pos:column="62"/></operator> <name><name pos:line="68" pos:column="55">state<pos:position pos:line="68" pos:column="60"/></name><operator pos:line="68" pos:column="60">-&gt;<pos:position pos:line="68" pos:column="65"/></operator><name pos:line="68" pos:column="62">apply<pos:position pos:line="68" pos:column="67"/></name></name></expr>)<pos:position pos:line="68" pos:column="68"/></condition><then pos:line="68" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="25">warning<pos:position pos:line="69" pos:column="32"/></name><argument_list pos:line="69" pos:column="32">(<argument><expr><call><name pos:line="69" pos:column="33">Q_<pos:position pos:line="69" pos:column="35"/></name><argument_list pos:line="69" pos:column="35">(<argument><expr><literal type="string" pos:line="69" pos:column="36">"%d line applied after"<pos:position pos:line="69" pos:column="59"/></literal>
				   <literal type="string" pos:line="70" pos:column="36">" fixing whitespace errors."<pos:position pos:line="70" pos:column="64"/></literal></expr></argument>,
				   <argument><expr><literal type="string" pos:line="71" pos:column="36">"%d lines applied after"<pos:position pos:line="71" pos:column="60"/></literal>
				   <literal type="string" pos:line="72" pos:column="36">" fixing whitespace errors."<pos:position pos:line="72" pos:column="64"/></literal></expr></argument>,
				   <argument><expr><name><name pos:line="73" pos:column="36">state<pos:position pos:line="73" pos:column="41"/></name><operator pos:line="73" pos:column="41">-&gt;<pos:position pos:line="73" pos:column="46"/></operator><name pos:line="73" pos:column="43">applied_after_fixing_ws<pos:position pos:line="73" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="67"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="74" pos:column="33">state<pos:position pos:line="74" pos:column="38"/></name><operator pos:line="74" pos:column="38">-&gt;<pos:position pos:line="74" pos:column="43"/></operator><name pos:line="74" pos:column="40">applied_after_fixing_ws<pos:position pos:line="74" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="65"/></expr_stmt></block></then>
		<elseif pos:line="75" pos:column="17">else <if pos:line="75" pos:column="22">if <condition pos:line="75" pos:column="25">(<expr><name><name pos:line="75" pos:column="26">state<pos:position pos:line="75" pos:column="31"/></name><operator pos:line="75" pos:column="31">-&gt;<pos:position pos:line="75" pos:column="36"/></operator><name pos:line="75" pos:column="33">whitespace_error<pos:position pos:line="75" pos:column="49"/></name></name></expr>)<pos:position pos:line="75" pos:column="50"/></condition><then pos:line="75" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="25">warning<pos:position pos:line="76" pos:column="32"/></name><argument_list pos:line="76" pos:column="32">(<argument><expr><call><name pos:line="76" pos:column="33">Q_<pos:position pos:line="76" pos:column="35"/></name><argument_list pos:line="76" pos:column="35">(<argument><expr><literal type="string" pos:line="76" pos:column="36">"%d line adds whitespace errors."<pos:position pos:line="76" pos:column="69"/></literal></expr></argument>,
				   <argument><expr><literal type="string" pos:line="77" pos:column="36">"%d lines add whitespace errors."<pos:position pos:line="77" pos:column="69"/></literal></expr></argument>,
				   <argument><expr><name><name pos:line="78" pos:column="36">state<pos:position pos:line="78" pos:column="41"/></name><operator pos:line="78" pos:column="41">-&gt;<pos:position pos:line="78" pos:column="46"/></operator><name pos:line="78" pos:column="43">whitespace_error<pos:position pos:line="78" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="60"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="79" pos:column="33">state<pos:position pos:line="79" pos:column="38"/></name><operator pos:line="79" pos:column="38">-&gt;<pos:position pos:line="79" pos:column="43"/></operator><name pos:line="79" pos:column="40">whitespace_error<pos:position pos:line="79" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="58"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="80" pos:column="10"/></block></then></if>

	<if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name><name pos:line="82" pos:column="13">state<pos:position pos:line="82" pos:column="18"/></name><operator pos:line="82" pos:column="18">-&gt;<pos:position pos:line="82" pos:column="23"/></operator><name pos:line="82" pos:column="20">update_index<pos:position pos:line="82" pos:column="32"/></name></name></expr>)<pos:position pos:line="82" pos:column="33"/></condition><then pos:line="82" pos:column="33"> <block pos:line="82" pos:column="34">{
		<expr_stmt><expr><name pos:line="83" pos:column="17">res<pos:position pos:line="83" pos:column="20"/></name> <operator pos:line="83" pos:column="21">=<pos:position pos:line="83" pos:column="22"/></operator> <call><name pos:line="83" pos:column="23">write_locked_index<pos:position pos:line="83" pos:column="41"/></name><argument_list pos:line="83" pos:column="41">(<argument><expr><operator pos:line="83" pos:column="42">&amp;<pos:position pos:line="83" pos:column="47"/></operator><name pos:line="83" pos:column="43">the_index<pos:position pos:line="83" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="54">state<pos:position pos:line="83" pos:column="59"/></name><operator pos:line="83" pos:column="59">-&gt;<pos:position pos:line="83" pos:column="64"/></operator><name pos:line="83" pos:column="61">lock_file<pos:position pos:line="83" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="72">COMMIT_LOCK<pos:position pos:line="83" pos:column="83"/></name></expr></argument>)<pos:position pos:line="83" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="85"/></expr_stmt>
		<if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><name pos:line="84" pos:column="21">res<pos:position pos:line="84" pos:column="24"/></name></expr>)<pos:position pos:line="84" pos:column="25"/></condition><then pos:line="84" pos:column="25"> <block pos:line="84" pos:column="26">{
			<expr_stmt><expr><call><name pos:line="85" pos:column="25">error<pos:position pos:line="85" pos:column="30"/></name><argument_list pos:line="85" pos:column="30">(<argument><expr><call><name pos:line="85" pos:column="31">_<pos:position pos:line="85" pos:column="32"/></name><argument_list pos:line="85" pos:column="32">(<argument><expr><literal type="string" pos:line="85" pos:column="33">"Unable to write new index file"<pos:position pos:line="85" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="85" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><name pos:line="86" pos:column="25">res<pos:position pos:line="86" pos:column="28"/></name> <operator pos:line="86" pos:column="29">=<pos:position pos:line="86" pos:column="30"/></operator> <operator pos:line="86" pos:column="31">-<pos:position pos:line="86" pos:column="32"/></operator><literal type="number" pos:line="86" pos:column="32">128<pos:position pos:line="86" pos:column="35"/></literal></expr>;<pos:position pos:line="86" pos:column="36"/></expr_stmt>
			<goto pos:line="87" pos:column="25">goto <name pos:line="87" pos:column="30">end<pos:position pos:line="87" pos:column="33"/></name>;<pos:position pos:line="87" pos:column="34"/></goto>
		}<pos:position pos:line="88" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="89" pos:column="17">state<pos:position pos:line="89" pos:column="22"/></name><operator pos:line="89" pos:column="22">-&gt;<pos:position pos:line="89" pos:column="27"/></operator><name pos:line="89" pos:column="24">newfd<pos:position pos:line="89" pos:column="29"/></name></name> <operator pos:line="89" pos:column="30">=<pos:position pos:line="89" pos:column="31"/></operator> <operator pos:line="89" pos:column="32">-<pos:position pos:line="89" pos:column="33"/></operator><literal type="number" pos:line="89" pos:column="33">1<pos:position pos:line="89" pos:column="34"/></literal></expr>;<pos:position pos:line="89" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="90" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="92" pos:column="9">res<pos:position pos:line="92" pos:column="12"/></name> <operator pos:line="92" pos:column="13">=<pos:position pos:line="92" pos:column="14"/></operator> <operator pos:line="92" pos:column="15">!<pos:position pos:line="92" pos:column="16"/></operator><operator pos:line="92" pos:column="16">!<pos:position pos:line="92" pos:column="17"/></operator><name pos:line="92" pos:column="17">errs<pos:position pos:line="92" pos:column="21"/></name></expr>;<pos:position pos:line="92" pos:column="22"/></expr_stmt>

<label><name pos:line="94" pos:column="1">end<pos:position pos:line="94" pos:column="4"/></name>:<pos:position pos:line="94" pos:column="5"/></label>
	<if pos:line="95" pos:column="9">if <condition pos:line="95" pos:column="12">(<expr><name><name pos:line="95" pos:column="13">state<pos:position pos:line="95" pos:column="18"/></name><operator pos:line="95" pos:column="18">-&gt;<pos:position pos:line="95" pos:column="23"/></operator><name pos:line="95" pos:column="20">newfd<pos:position pos:line="95" pos:column="25"/></name></name> <operator pos:line="95" pos:column="26">&gt;=<pos:position pos:line="95" pos:column="31"/></operator> <literal type="number" pos:line="95" pos:column="29">0<pos:position pos:line="95" pos:column="30"/></literal></expr>)<pos:position pos:line="95" pos:column="31"/></condition><then pos:line="95" pos:column="31"> <block pos:line="95" pos:column="32">{
		<expr_stmt><expr><call><name pos:line="96" pos:column="17">rollback_lock_file<pos:position pos:line="96" pos:column="35"/></name><argument_list pos:line="96" pos:column="35">(<argument><expr><name><name pos:line="96" pos:column="36">state<pos:position pos:line="96" pos:column="41"/></name><operator pos:line="96" pos:column="41">-&gt;<pos:position pos:line="96" pos:column="46"/></operator><name pos:line="96" pos:column="43">lock_file<pos:position pos:line="96" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="97" pos:column="17">state<pos:position pos:line="97" pos:column="22"/></name><operator pos:line="97" pos:column="22">-&gt;<pos:position pos:line="97" pos:column="27"/></operator><name pos:line="97" pos:column="24">newfd<pos:position pos:line="97" pos:column="29"/></name></name> <operator pos:line="97" pos:column="30">=<pos:position pos:line="97" pos:column="31"/></operator> <operator pos:line="97" pos:column="32">-<pos:position pos:line="97" pos:column="33"/></operator><literal type="number" pos:line="97" pos:column="33">1<pos:position pos:line="97" pos:column="34"/></literal></expr>;<pos:position pos:line="97" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="98" pos:column="10"/></block></then></if>

	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name><name pos:line="100" pos:column="13">state<pos:position pos:line="100" pos:column="18"/></name><operator pos:line="100" pos:column="18">-&gt;<pos:position pos:line="100" pos:column="23"/></operator><name pos:line="100" pos:column="20">apply_verbosity<pos:position pos:line="100" pos:column="35"/></name></name> <operator pos:line="100" pos:column="36">&lt;=<pos:position pos:line="100" pos:column="41"/></operator> <name pos:line="100" pos:column="39">verbosity_silent<pos:position pos:line="100" pos:column="55"/></name></expr>)<pos:position pos:line="100" pos:column="56"/></condition><then pos:line="100" pos:column="56"> <block pos:line="100" pos:column="57">{
		<expr_stmt><expr><call><name pos:line="101" pos:column="17">set_error_routine<pos:position pos:line="101" pos:column="34"/></name><argument_list pos:line="101" pos:column="34">(<argument><expr><name><name pos:line="101" pos:column="35">state<pos:position pos:line="101" pos:column="40"/></name><operator pos:line="101" pos:column="40">-&gt;<pos:position pos:line="101" pos:column="45"/></operator><name pos:line="101" pos:column="42">saved_error_routine<pos:position pos:line="101" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="102" pos:column="17">set_warn_routine<pos:position pos:line="102" pos:column="33"/></name><argument_list pos:line="102" pos:column="33">(<argument><expr><name><name pos:line="102" pos:column="34">state<pos:position pos:line="102" pos:column="39"/></name><operator pos:line="102" pos:column="39">-&gt;<pos:position pos:line="102" pos:column="44"/></operator><name pos:line="102" pos:column="41">saved_warn_routine<pos:position pos:line="102" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="103" pos:column="10"/></block></then></if>

	<if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name pos:line="105" pos:column="13">res<pos:position pos:line="105" pos:column="16"/></name> <operator pos:line="105" pos:column="17">&gt;<pos:position pos:line="105" pos:column="21"/></operator> <operator pos:line="105" pos:column="19">-<pos:position pos:line="105" pos:column="20"/></operator><literal type="number" pos:line="105" pos:column="20">1<pos:position pos:line="105" pos:column="21"/></literal></expr>)<pos:position pos:line="105" pos:column="22"/></condition><then pos:line="105" pos:column="22">
		<block type="pseudo"><return pos:line="106" pos:column="17">return <expr><name pos:line="106" pos:column="24">res<pos:position pos:line="106" pos:column="27"/></name></expr>;<pos:position pos:line="106" pos:column="28"/></return></block></then></if>
	<return pos:line="107" pos:column="9">return <expr><operator pos:line="107" pos:column="16">(<pos:position pos:line="107" pos:column="17"/></operator><ternary><condition><expr><name pos:line="107" pos:column="17">res<pos:position pos:line="107" pos:column="20"/></name> <operator pos:line="107" pos:column="21">==<pos:position pos:line="107" pos:column="23"/></operator> <operator pos:line="107" pos:column="24">-<pos:position pos:line="107" pos:column="25"/></operator><literal type="number" pos:line="107" pos:column="25">1<pos:position pos:line="107" pos:column="26"/></literal></expr> ?<pos:position pos:line="107" pos:column="28"/></condition><then pos:line="107" pos:column="28"> <expr><literal type="number" pos:line="107" pos:column="29">1<pos:position pos:line="107" pos:column="30"/></literal></expr> <pos:position pos:line="107" pos:column="31"/></then><else pos:line="107" pos:column="31">: <expr><literal type="number" pos:line="107" pos:column="33">128<pos:position pos:line="107" pos:column="36"/></literal></expr></else></ternary><operator pos:line="107" pos:column="36">)<pos:position pos:line="107" pos:column="37"/></operator></expr>;<pos:position pos:line="107" pos:column="38"/></return>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

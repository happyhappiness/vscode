<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6881_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">update_local_ref<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">name<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>,
			    <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">new_head<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
			    <parameter><decl><type><specifier pos:line="3" pos:column="29">const<pos:position pos:line="3" pos:column="34"/></specifier> <name pos:line="3" pos:column="35">char<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">note<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="4" pos:column="29">int<pos:position pos:line="4" pos:column="32"/></name></type> <name pos:line="4" pos:column="33">verbose<pos:position pos:line="4" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="42">int<pos:position pos:line="4" pos:column="45"/></name></type> <name pos:line="4" pos:column="46">force<pos:position pos:line="4" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="52"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">char<pos:position pos:line="6" pos:column="22"/></name></type> <name><name pos:line="6" pos:column="23">sha1_old<pos:position pos:line="6" pos:column="31"/></name><index pos:line="6" pos:column="31">[<expr><literal type="number" pos:line="6" pos:column="32">20<pos:position pos:line="6" pos:column="34"/></literal></expr>]<pos:position pos:line="6" pos:column="35"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="6" pos:column="37">sha1_new<pos:position pos:line="6" pos:column="45"/></name><index pos:line="6" pos:column="45">[<expr><literal type="number" pos:line="6" pos:column="46">20<pos:position pos:line="6" pos:column="48"/></literal></expr>]<pos:position pos:line="6" pos:column="49"/></index></name></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">oldh<pos:position pos:line="7" pos:column="18"/></name><index pos:line="7" pos:column="18">[<expr><literal type="number" pos:line="7" pos:column="19">41<pos:position pos:line="7" pos:column="21"/></literal></expr>]<pos:position pos:line="7" pos:column="22"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="7" pos:column="24">newh<pos:position pos:line="7" pos:column="28"/></name><index pos:line="7" pos:column="28">[<expr><literal type="number" pos:line="7" pos:column="29">41<pos:position pos:line="7" pos:column="31"/></literal></expr>]<pos:position pos:line="7" pos:column="32"/></index></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">commit<pos:position pos:line="8" pos:column="22"/></name></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">current<pos:position pos:line="8" pos:column="31"/></name></decl>, <modifier pos:line="8" pos:column="33">*<pos:position pos:line="8" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="34">updated<pos:position pos:line="8" pos:column="41"/></name></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">enum<pos:position pos:line="9" pos:column="13"/></name> <name pos:line="9" pos:column="14">object_type<pos:position pos:line="9" pos:column="25"/></name></name></type> <name pos:line="9" pos:column="26">type<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">get_sha1_hex<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">new_head<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="36">sha1_new<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="46"/></condition><then pos:line="11" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">die<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><literal type="string" pos:line="12" pos:column="21">"malformed object name %s"<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">new_head<pos:position pos:line="12" pos:column="57"/></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">type<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">sha1_object_info<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">sha1_new<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="43">NULL<pos:position pos:line="14" pos:column="47"/></name></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">type<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">&lt;<pos:position pos:line="15" pos:column="22"/></operator> <literal type="number" pos:line="15" pos:column="20">0<pos:position pos:line="15" pos:column="21"/></literal></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">die<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><literal type="string" pos:line="16" pos:column="21">"object %s not found"<pos:position pos:line="16" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">new_head<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><operator pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">name<pos:position pos:line="18" pos:column="19"/></name></expr>)<pos:position pos:line="18" pos:column="20"/></condition><then pos:line="18" pos:column="20"> <block pos:line="18" pos:column="21">{
		<comment type="block" pos:line="19" pos:column="17">/* Not storing */</comment>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">verbose<pos:position pos:line="20" pos:column="28"/></name></expr>)<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29"> <block pos:line="20" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">fprintf<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">stderr<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="41">"* fetched %s\n"<pos:position pos:line="21" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="59">note<pos:position pos:line="21" pos:column="63"/></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">show_new<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">type<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="40">sha1_new<pos:position pos:line="22" pos:column="48"/></name></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>
		<return pos:line="24" pos:column="17">return <expr><literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">get_sha1<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">name<pos:position pos:line="27" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="28">sha1_old<pos:position pos:line="27" pos:column="36"/></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="38"/></condition><then pos:line="27" pos:column="38"> <block pos:line="27" pos:column="39">{
		<decl_stmt><decl><type><specifier pos:line="28" pos:column="17">const<pos:position pos:line="28" pos:column="22"/></specifier> <name pos:line="28" pos:column="23">char<pos:position pos:line="28" pos:column="27"/></name> <modifier pos:line="28" pos:column="28">*<pos:position pos:line="28" pos:column="29"/></modifier></type><name pos:line="28" pos:column="29">msg<pos:position pos:line="28" pos:column="32"/></name></decl>;<pos:position pos:line="28" pos:column="33"/></decl_stmt>
	<label><name pos:line="29" pos:column="9">just_store<pos:position pos:line="29" pos:column="19"/></name>:<pos:position pos:line="29" pos:column="20"/></label>
		<comment type="block" pos:line="30" pos:column="17">/* new ref */</comment>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><operator pos:line="31" pos:column="21">!<pos:position pos:line="31" pos:column="22"/></operator><call><name pos:line="31" pos:column="22">strncmp<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">name<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="36">"refs/tags/"<pos:position pos:line="31" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="50">10<pos:position pos:line="31" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="54"/></condition><then pos:line="31" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="25">msg<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <literal type="string" pos:line="32" pos:column="31">"storing tag"<pos:position pos:line="32" pos:column="44"/></literal></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt></block></then>
		<else pos:line="33" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="25">msg<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">=<pos:position pos:line="34" pos:column="30"/></operator> <literal type="string" pos:line="34" pos:column="31">"storing head"<pos:position pos:line="34" pos:column="45"/></literal></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">fprintf<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">stderr<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="33">"* %s: storing %s\n"<pos:position pos:line="35" pos:column="53"/></literal></expr></argument>,
			<argument><expr><name pos:line="36" pos:column="25">name<pos:position pos:line="36" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="31">note<pos:position pos:line="36" pos:column="35"/></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">show_new<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">type<pos:position pos:line="37" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="32">sha1_new<pos:position pos:line="37" pos:column="40"/></name></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="42"/></expr_stmt>
		<return pos:line="38" pos:column="17">return <expr><call><name pos:line="38" pos:column="24">update_ref_env<pos:position pos:line="38" pos:column="38"/></name><argument_list pos:line="38" pos:column="38">(<argument><expr><name pos:line="38" pos:column="39">msg<pos:position pos:line="38" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="44">name<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="50">sha1_new<pos:position pos:line="38" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="60">NULL<pos:position pos:line="38" pos:column="64"/></name></expr></argument>)<pos:position pos:line="38" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="66"/></return>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><call><name pos:line="41" pos:column="14">hashcmp<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><name pos:line="41" pos:column="22">sha1_old<pos:position pos:line="41" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="32">sha1_new<pos:position pos:line="41" pos:column="40"/></name></expr></argument>)<pos:position pos:line="41" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="42"/></condition><then pos:line="41" pos:column="42"> <block pos:line="41" pos:column="43">{
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">verbose<pos:position pos:line="42" pos:column="28"/></name></expr>)<pos:position pos:line="42" pos:column="29"/></condition><then pos:line="42" pos:column="29"> <block pos:line="42" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">fprintf<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name pos:line="43" pos:column="33">stderr<pos:position pos:line="43" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="41">"* %s: same as %s\n"<pos:position pos:line="43" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="63">name<pos:position pos:line="43" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="69">note<pos:position pos:line="43" pos:column="73"/></name></expr></argument>)<pos:position pos:line="43" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="44" pos:column="25">show_new<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name pos:line="44" pos:column="34">type<pos:position pos:line="44" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="40">sha1_new<pos:position pos:line="44" pos:column="48"/></name></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="45" pos:column="18"/></block></then></if>
		<return pos:line="46" pos:column="17">return <expr><literal type="number" pos:line="46" pos:column="24">0<pos:position pos:line="46" pos:column="25"/></literal></expr>;<pos:position pos:line="46" pos:column="26"/></return>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>

	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">!<pos:position pos:line="49" pos:column="14"/></operator><call><name pos:line="49" pos:column="14">strncmp<pos:position pos:line="49" pos:column="21"/></name><argument_list pos:line="49" pos:column="21">(<argument><expr><name pos:line="49" pos:column="22">name<pos:position pos:line="49" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="28">"refs/tags/"<pos:position pos:line="49" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="42">10<pos:position pos:line="49" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="46"/></condition><then pos:line="49" pos:column="46"> <block pos:line="49" pos:column="47">{
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">fprintf<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><name pos:line="50" pos:column="25">stderr<pos:position pos:line="50" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="33">"* %s: updating with %s\n"<pos:position pos:line="50" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="61">name<pos:position pos:line="50" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="67">note<pos:position pos:line="50" pos:column="71"/></name></expr></argument>)<pos:position pos:line="50" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">show_new<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><name pos:line="51" pos:column="26">type<pos:position pos:line="51" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="32">sha1_new<pos:position pos:line="51" pos:column="40"/></name></expr></argument>)<pos:position pos:line="51" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="42"/></expr_stmt>
		<return pos:line="52" pos:column="17">return <expr><call><name pos:line="52" pos:column="24">update_ref_env<pos:position pos:line="52" pos:column="38"/></name><argument_list pos:line="52" pos:column="38">(<argument><expr><literal type="string" pos:line="52" pos:column="39">"updating tag"<pos:position pos:line="52" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="55">name<pos:position pos:line="52" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="61">sha1_new<pos:position pos:line="52" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="71">NULL<pos:position pos:line="52" pos:column="75"/></name></expr></argument>)<pos:position pos:line="52" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="77"/></return>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="55" pos:column="9">current<pos:position pos:line="55" pos:column="16"/></name> <operator pos:line="55" pos:column="17">=<pos:position pos:line="55" pos:column="18"/></operator> <call><name pos:line="55" pos:column="19">lookup_commit_reference<pos:position pos:line="55" pos:column="42"/></name><argument_list pos:line="55" pos:column="42">(<argument><expr><name pos:line="55" pos:column="43">sha1_old<pos:position pos:line="55" pos:column="51"/></name></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name pos:line="56" pos:column="9">updated<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">=<pos:position pos:line="56" pos:column="18"/></operator> <call><name pos:line="56" pos:column="19">lookup_commit_reference<pos:position pos:line="56" pos:column="42"/></name><argument_list pos:line="56" pos:column="42">(<argument><expr><name pos:line="56" pos:column="43">sha1_new<pos:position pos:line="56" pos:column="51"/></name></expr></argument>)<pos:position pos:line="56" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="53"/></expr_stmt>
	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><operator pos:line="57" pos:column="13">!<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">current<pos:position pos:line="57" pos:column="21"/></name> <operator pos:line="57" pos:column="22">||<pos:position pos:line="57" pos:column="24"/></operator> <operator pos:line="57" pos:column="25">!<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="26">updated<pos:position pos:line="57" pos:column="33"/></name></expr>)<pos:position pos:line="57" pos:column="34"/></condition><then pos:line="57" pos:column="34">
		<block type="pseudo"><goto pos:line="58" pos:column="17">goto <name pos:line="58" pos:column="22">just_store<pos:position pos:line="58" pos:column="32"/></name>;<pos:position pos:line="58" pos:column="33"/></goto></block></then></if>

	<expr_stmt><expr><call><name pos:line="60" pos:column="9">strcpy<pos:position pos:line="60" pos:column="15"/></name><argument_list pos:line="60" pos:column="15">(<argument><expr><name pos:line="60" pos:column="16">oldh<pos:position pos:line="60" pos:column="20"/></name></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="22">find_unique_abbrev<pos:position pos:line="60" pos:column="40"/></name><argument_list pos:line="60" pos:column="40">(<argument><expr><name><name pos:line="60" pos:column="41">current<pos:position pos:line="60" pos:column="48"/></name><operator pos:line="60" pos:column="48">-&gt;<pos:position pos:line="60" pos:column="53"/></operator><name pos:line="60" pos:column="50">object<pos:position pos:line="60" pos:column="56"/></name><operator pos:line="60" pos:column="56">.<pos:position pos:line="60" pos:column="57"/></operator><name pos:line="60" pos:column="57">sha1<pos:position pos:line="60" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="63">DEFAULT_ABBREV<pos:position pos:line="60" pos:column="77"/></name></expr></argument>)<pos:position pos:line="60" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="80"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="61" pos:column="9">strcpy<pos:position pos:line="61" pos:column="15"/></name><argument_list pos:line="61" pos:column="15">(<argument><expr><name pos:line="61" pos:column="16">newh<pos:position pos:line="61" pos:column="20"/></name></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="22">find_unique_abbrev<pos:position pos:line="61" pos:column="40"/></name><argument_list pos:line="61" pos:column="40">(<argument><expr><name pos:line="61" pos:column="41">sha1_new<pos:position pos:line="61" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="51">DEFAULT_ABBREV<pos:position pos:line="61" pos:column="65"/></name></expr></argument>)<pos:position pos:line="61" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="68"/></expr_stmt>

	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><call><name pos:line="63" pos:column="13">in_merge_bases<pos:position pos:line="63" pos:column="27"/></name><argument_list pos:line="63" pos:column="27">(<argument><expr><name pos:line="63" pos:column="28">current<pos:position pos:line="63" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="37">updated<pos:position pos:line="63" pos:column="44"/></name></expr></argument>)<pos:position pos:line="63" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="46"/></condition><then pos:line="63" pos:column="46"> <block pos:line="63" pos:column="47">{
		<expr_stmt><expr><call><name pos:line="64" pos:column="17">fprintf<pos:position pos:line="64" pos:column="24"/></name><argument_list pos:line="64" pos:column="24">(<argument><expr><name pos:line="64" pos:column="25">stderr<pos:position pos:line="64" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="33">"* %s: fast-forward to %s\n"<pos:position pos:line="64" pos:column="61"/></literal></expr></argument>,
			<argument><expr><name pos:line="65" pos:column="25">name<pos:position pos:line="65" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="31">note<pos:position pos:line="65" pos:column="35"/></name></expr></argument>)<pos:position pos:line="65" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="66" pos:column="17">fprintf<pos:position pos:line="66" pos:column="24"/></name><argument_list pos:line="66" pos:column="24">(<argument><expr><name pos:line="66" pos:column="25">stderr<pos:position pos:line="66" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="33">"  old..new: %s..%s\n"<pos:position pos:line="66" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="57">oldh<pos:position pos:line="66" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="63">newh<pos:position pos:line="66" pos:column="67"/></name></expr></argument>)<pos:position pos:line="66" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="69"/></expr_stmt>
		<return pos:line="67" pos:column="17">return <expr><call><name pos:line="67" pos:column="24">update_ref_env<pos:position pos:line="67" pos:column="38"/></name><argument_list pos:line="67" pos:column="38">(<argument><expr><literal type="string" pos:line="67" pos:column="39">"fast-forward"<pos:position pos:line="67" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="55">name<pos:position pos:line="67" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="61">sha1_new<pos:position pos:line="67" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="71">sha1_old<pos:position pos:line="67" pos:column="79"/></name></expr></argument>)<pos:position pos:line="67" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="81"/></return>
	}<pos:position pos:line="68" pos:column="10"/></block></then></if>
	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><operator pos:line="69" pos:column="13">!<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="14">force<pos:position pos:line="69" pos:column="19"/></name></expr>)<pos:position pos:line="69" pos:column="20"/></condition><then pos:line="69" pos:column="20"> <block pos:line="69" pos:column="21">{
		<expr_stmt><expr><call><name pos:line="70" pos:column="17">fprintf<pos:position pos:line="70" pos:column="24"/></name><argument_list pos:line="70" pos:column="24">(<argument><expr><name pos:line="70" pos:column="25">stderr<pos:position pos:line="70" pos:column="31"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="71" pos:column="25">"* %s: not updating to non-fast-forward %s\n"<pos:position pos:line="71" pos:column="70"/></literal></expr></argument>,
			<argument><expr><name pos:line="72" pos:column="25">name<pos:position pos:line="72" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="31">note<pos:position pos:line="72" pos:column="35"/></name></expr></argument>)<pos:position pos:line="72" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="73" pos:column="17">fprintf<pos:position pos:line="73" pos:column="24"/></name><argument_list pos:line="73" pos:column="24">(<argument><expr><name pos:line="73" pos:column="25">stderr<pos:position pos:line="73" pos:column="31"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="74" pos:column="25">"  old...new: %s...%s\n"<pos:position pos:line="74" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="51">oldh<pos:position pos:line="74" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="57">newh<pos:position pos:line="74" pos:column="61"/></name></expr></argument>)<pos:position pos:line="74" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="63"/></expr_stmt>
		<return pos:line="75" pos:column="17">return <expr><literal type="number" pos:line="75" pos:column="24">1<pos:position pos:line="75" pos:column="25"/></literal></expr>;<pos:position pos:line="75" pos:column="26"/></return>
	}<pos:position pos:line="76" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="77" pos:column="9">fprintf<pos:position pos:line="77" pos:column="16"/></name><argument_list pos:line="77" pos:column="16">(<argument><expr><name pos:line="77" pos:column="17">stderr<pos:position pos:line="77" pos:column="23"/></name></expr></argument>,
		<argument><expr><literal type="string" pos:line="78" pos:column="17">"* %s: forcing update to non-fast-forward %s\n"<pos:position pos:line="78" pos:column="64"/></literal></expr></argument>,
		<argument><expr><name pos:line="79" pos:column="17">name<pos:position pos:line="79" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="23">note<pos:position pos:line="79" pos:column="27"/></name></expr></argument>)<pos:position pos:line="79" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="80" pos:column="9">fprintf<pos:position pos:line="80" pos:column="16"/></name><argument_list pos:line="80" pos:column="16">(<argument><expr><name pos:line="80" pos:column="17">stderr<pos:position pos:line="80" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="25">"  old...new: %s...%s\n"<pos:position pos:line="80" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="51">oldh<pos:position pos:line="80" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="57">newh<pos:position pos:line="80" pos:column="61"/></name></expr></argument>)<pos:position pos:line="80" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="63"/></expr_stmt>
	<return pos:line="81" pos:column="9">return <expr><call><name pos:line="81" pos:column="16">update_ref_env<pos:position pos:line="81" pos:column="30"/></name><argument_list pos:line="81" pos:column="30">(<argument><expr><literal type="string" pos:line="81" pos:column="31">"forced-update"<pos:position pos:line="81" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="48">name<pos:position pos:line="81" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="54">sha1_new<pos:position pos:line="81" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="64">sha1_old<pos:position pos:line="81" pos:column="72"/></name></expr></argument>)<pos:position pos:line="81" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="74"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

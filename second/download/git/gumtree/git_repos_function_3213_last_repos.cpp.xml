<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3213_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">cache_entry<pos:position pos:line="1" pos:column="26"/></name></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">next_cache_entry<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name><name pos:line="1" pos:column="45">struct<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">unpack_trees_options<pos:position pos:line="1" pos:column="72"/></name></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">o<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name><name pos:line="3" pos:column="15">struct<pos:position pos:line="3" pos:column="21"/></name> <name pos:line="3" pos:column="22">index_state<pos:position pos:line="3" pos:column="33"/></name></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">index<pos:position pos:line="3" pos:column="40"/></name> <init pos:line="3" pos:column="41">= <expr><name><name pos:line="3" pos:column="43">o<pos:position pos:line="3" pos:column="44"/></name><operator pos:line="3" pos:column="44">-&gt;<pos:position pos:line="3" pos:column="49"/></operator><name pos:line="3" pos:column="46">src_index<pos:position pos:line="3" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">pos<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name><name pos:line="4" pos:column="19">o<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">-&gt;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="22">cache_bottom<pos:position pos:line="4" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><name pos:line="6" pos:column="16">pos<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">&lt;<pos:position pos:line="6" pos:column="24"/></operator> <name><name pos:line="6" pos:column="22">index<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">cache_nr<pos:position pos:line="6" pos:column="37"/></name></name></expr>)<pos:position pos:line="6" pos:column="38"/></condition> <block pos:line="6" pos:column="39">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">cache_entry<pos:position pos:line="7" pos:column="35"/></name></name> <modifier pos:line="7" pos:column="36">*<pos:position pos:line="7" pos:column="37"/></modifier></type><name pos:line="7" pos:column="37">ce<pos:position pos:line="7" pos:column="39"/></name> <init pos:line="7" pos:column="40">= <expr><name><name pos:line="7" pos:column="42">index<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">-&gt;<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="49">cache<pos:position pos:line="7" pos:column="54"/></name><index pos:line="7" pos:column="54">[<expr><name pos:line="7" pos:column="55">pos<pos:position pos:line="7" pos:column="58"/></name></expr>]<pos:position pos:line="7" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="60"/></decl_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><operator pos:line="8" pos:column="22">(<pos:position pos:line="8" pos:column="23"/></operator><name><name pos:line="8" pos:column="23">ce<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">ce_flags<pos:position pos:line="8" pos:column="35"/></name></name> <operator pos:line="8" pos:column="36">&amp;<pos:position pos:line="8" pos:column="41"/></operator> <name pos:line="8" pos:column="38">CE_UNPACKED<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">)<pos:position pos:line="8" pos:column="50"/></operator></expr>)<pos:position pos:line="8" pos:column="51"/></condition><then pos:line="8" pos:column="51">
			<block type="pseudo"><return pos:line="9" pos:column="25">return <expr><name pos:line="9" pos:column="32">ce<pos:position pos:line="9" pos:column="34"/></name></expr>;<pos:position pos:line="9" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="10" pos:column="17">pos<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">++<pos:position pos:line="10" pos:column="22"/></operator></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></while>
	<return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">NULL<pos:position pos:line="12" pos:column="20"/></name></expr>;<pos:position pos:line="12" pos:column="21"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

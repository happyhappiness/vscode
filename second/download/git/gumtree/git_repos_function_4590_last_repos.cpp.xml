<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4590_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">paint_down<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">paint_info<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">info<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name><name pos:line="1" pos:column="55">struct<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">object_id<pos:position pos:line="1" pos:column="71"/></name></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">oid<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
		       <parameter><decl><type><name pos:line="2" pos:column="24">unsigned<pos:position pos:line="2" pos:column="32"/></name> <name pos:line="2" pos:column="33">int<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">id<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">i<pos:position pos:line="4" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="25">nr<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit_list<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">head<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><name pos:line="5" pos:column="36">NULL<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">bitmap_nr<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><call><name pos:line="6" pos:column="25">DIV_ROUND_UP<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><name><name pos:line="6" pos:column="38">info<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">-&gt;<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="44">nr_bits<pos:position pos:line="6" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="53">32<pos:position pos:line="6" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">bitmap_size<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><call><name pos:line="7" pos:column="30">st_mult<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">(<argument><expr><sizeof pos:line="7" pos:column="38">sizeof<argument_list pos:line="7" pos:column="44">(<argument><expr><name pos:line="7" pos:column="45">uint32_t<pos:position pos:line="7" pos:column="53"/></name></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="7" pos:column="56">bitmap_nr<pos:position pos:line="7" pos:column="65"/></name></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="67"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">commit<pos:position pos:line="8" pos:column="22"/></name></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">c<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><call><name pos:line="8" pos:column="28">lookup_commit_reference_gently<pos:position pos:line="8" pos:column="58"/></name><argument_list pos:line="8" pos:column="58">(<argument><expr><name pos:line="8" pos:column="59">oid<pos:position pos:line="8" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="64">1<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="67"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">uint32_t<pos:position pos:line="9" pos:column="17"/></name> <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier></type><name pos:line="9" pos:column="19">tmp<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt> <comment type="block" pos:line="9" pos:column="24">/* to be freed before return */</comment>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">uint32_t<pos:position pos:line="10" pos:column="17"/></name> <modifier pos:line="10" pos:column="18">*<pos:position pos:line="10" pos:column="19"/></modifier></type><name pos:line="10" pos:column="19">bitmap<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">c<pos:position pos:line="12" pos:column="15"/></name></expr>)<pos:position pos:line="12" pos:column="16"/></condition><then pos:line="12" pos:column="16">
		<block type="pseudo"><return pos:line="13" pos:column="17">return;<pos:position pos:line="13" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="15" pos:column="9">tmp<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">xmalloc<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">bitmap_size<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">bitmap<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">paint_alloc<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">info<pos:position pos:line="16" pos:column="34"/></name></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">memset<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">bitmap<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="27">bitmap_size<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">bitmap<pos:position pos:line="18" pos:column="15"/></name><index pos:line="18" pos:column="15">[<expr><name pos:line="18" pos:column="16">id<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">/<pos:position pos:line="18" pos:column="20"/></operator> <literal type="number" pos:line="18" pos:column="21">32<pos:position pos:line="18" pos:column="23"/></literal></expr>]<pos:position pos:line="18" pos:column="24"/></index></name> <operator pos:line="18" pos:column="25">|=<pos:position pos:line="18" pos:column="27"/></operator> <operator pos:line="18" pos:column="28">(<pos:position pos:line="18" pos:column="29"/></operator><literal type="number" pos:line="18" pos:column="29">1U<pos:position pos:line="18" pos:column="31"/></literal> <operator pos:line="18" pos:column="32">&lt;&lt;<pos:position pos:line="18" pos:column="40"/></operator> <operator pos:line="18" pos:column="35">(<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="36">id<pos:position pos:line="18" pos:column="38"/></name> <operator pos:line="18" pos:column="39">%<pos:position pos:line="18" pos:column="40"/></operator> <literal type="number" pos:line="18" pos:column="41">32<pos:position pos:line="18" pos:column="43"/></literal><operator pos:line="18" pos:column="43">)<pos:position pos:line="18" pos:column="44"/></operator><operator pos:line="18" pos:column="44">)<pos:position pos:line="18" pos:column="45"/></operator></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">commit_list_insert<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">c<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="31">&amp;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="32">head<pos:position pos:line="19" pos:column="36"/></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
	<while pos:line="20" pos:column="9">while <condition pos:line="20" pos:column="15">(<expr><name pos:line="20" pos:column="16">head<pos:position pos:line="20" pos:column="20"/></name></expr>)<pos:position pos:line="20" pos:column="21"/></condition> <block pos:line="20" pos:column="22">{
		<decl_stmt><decl><type><name><name pos:line="21" pos:column="17">struct<pos:position pos:line="21" pos:column="23"/></name> <name pos:line="21" pos:column="24">commit_list<pos:position pos:line="21" pos:column="35"/></name></name> <modifier pos:line="21" pos:column="36">*<pos:position pos:line="21" pos:column="37"/></modifier></type><name pos:line="21" pos:column="37">p<pos:position pos:line="21" pos:column="38"/></name></decl>;<pos:position pos:line="21" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="22" pos:column="17">struct<pos:position pos:line="22" pos:column="23"/></name> <name pos:line="22" pos:column="24">commit<pos:position pos:line="22" pos:column="30"/></name></name> <modifier pos:line="22" pos:column="31">*<pos:position pos:line="22" pos:column="32"/></modifier></type><name pos:line="22" pos:column="32">c<pos:position pos:line="22" pos:column="33"/></name> <init pos:line="22" pos:column="34">= <expr><call><name pos:line="22" pos:column="36">pop_commit<pos:position pos:line="22" pos:column="46"/></name><argument_list pos:line="22" pos:column="46">(<argument><expr><operator pos:line="22" pos:column="47">&amp;<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="48">head<pos:position pos:line="22" pos:column="52"/></name></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="54"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">uint32_t<pos:position pos:line="23" pos:column="25"/></name> <modifier pos:line="23" pos:column="26">*<pos:position pos:line="23" pos:column="27"/></modifier><modifier pos:line="23" pos:column="27">*<pos:position pos:line="23" pos:column="28"/></modifier></type><name pos:line="23" pos:column="28">refs<pos:position pos:line="23" pos:column="32"/></name> <init pos:line="23" pos:column="33">= <expr><call><name pos:line="23" pos:column="35">ref_bitmap_at<pos:position pos:line="23" pos:column="48"/></name><argument_list pos:line="23" pos:column="48">(<argument><expr><operator pos:line="23" pos:column="49">&amp;<pos:position pos:line="23" pos:column="54"/></operator><name><name pos:line="23" pos:column="50">info<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">-&gt;<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="56">ref_bitmap<pos:position pos:line="23" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="68">c<pos:position pos:line="23" pos:column="69"/></name></expr></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="71"/></decl_stmt>

		<comment type="block" pos:line="25" pos:column="17">/* XXX check "UNINTERESTING" from pack bitmaps if available */</comment>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name><name pos:line="26" pos:column="21">c<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">object<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">.<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="31">flags<pos:position pos:line="26" pos:column="36"/></name></name> <operator pos:line="26" pos:column="37">&amp;<pos:position pos:line="26" pos:column="42"/></operator> <operator pos:line="26" pos:column="39">(<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="40">SEEN<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">|<pos:position pos:line="26" pos:column="46"/></operator> <name pos:line="26" pos:column="47">UNINTERESTING<pos:position pos:line="26" pos:column="60"/></name><operator pos:line="26" pos:column="60">)<pos:position pos:line="26" pos:column="61"/></operator></expr>)<pos:position pos:line="26" pos:column="62"/></condition><then pos:line="26" pos:column="62">
			<block type="pseudo"><continue pos:line="27" pos:column="25">continue;<pos:position pos:line="27" pos:column="34"/></continue></block></then>
		<else pos:line="28" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="25">c<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">-&gt;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="28">object<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">.<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="35">flags<pos:position pos:line="29" pos:column="40"/></name></name> <operator pos:line="29" pos:column="41">|=<pos:position pos:line="29" pos:column="43"/></operator> <name pos:line="29" pos:column="44">SEEN<pos:position pos:line="29" pos:column="48"/></name></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt></block></else></if>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><operator pos:line="31" pos:column="21">*<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">refs<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">==<pos:position pos:line="31" pos:column="29"/></operator> <name pos:line="31" pos:column="30">NULL<pos:position pos:line="31" pos:column="34"/></name></expr>)<pos:position pos:line="31" pos:column="35"/></condition><then pos:line="31" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="32" pos:column="25">*<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="26">refs<pos:position pos:line="32" pos:column="30"/></name> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <name pos:line="32" pos:column="33">bitmap<pos:position pos:line="32" pos:column="39"/></name></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt></block></then>
		<else pos:line="33" pos:column="17">else <block pos:line="33" pos:column="22">{
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">memcpy<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">tmp<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="37">*<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="38">refs<pos:position pos:line="34" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="44">bitmap_size<pos:position pos:line="34" pos:column="55"/></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
			<for pos:line="35" pos:column="25">for <control pos:line="35" pos:column="29">(<init><expr><name pos:line="35" pos:column="30">i<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">=<pos:position pos:line="35" pos:column="33"/></operator> <literal type="number" pos:line="35" pos:column="34">0<pos:position pos:line="35" pos:column="35"/></literal></expr>;<pos:position pos:line="35" pos:column="36"/></init> <condition><expr><name pos:line="35" pos:column="37">i<pos:position pos:line="35" pos:column="38"/></name> <operator pos:line="35" pos:column="39">&lt;<pos:position pos:line="35" pos:column="43"/></operator> <name pos:line="35" pos:column="41">bitmap_nr<pos:position pos:line="35" pos:column="50"/></name></expr>;<pos:position pos:line="35" pos:column="51"/></condition> <incr><expr><name pos:line="35" pos:column="52">i<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">++<pos:position pos:line="35" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="56"/></control>
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="33">tmp<pos:position pos:line="36" pos:column="36"/></name><index pos:line="36" pos:column="36">[<expr><name pos:line="36" pos:column="37">i<pos:position pos:line="36" pos:column="38"/></name></expr>]<pos:position pos:line="36" pos:column="39"/></index></name> <operator pos:line="36" pos:column="40">|=<pos:position pos:line="36" pos:column="42"/></operator> <name><name pos:line="36" pos:column="43">bitmap<pos:position pos:line="36" pos:column="49"/></name><index pos:line="36" pos:column="49">[<expr><name pos:line="36" pos:column="50">i<pos:position pos:line="36" pos:column="51"/></name></expr>]<pos:position pos:line="36" pos:column="52"/></index></name></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt></block></for>
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><call><name pos:line="37" pos:column="29">memcmp<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><name pos:line="37" pos:column="36">tmp<pos:position pos:line="37" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="41">*<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="42">refs<pos:position pos:line="37" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="48">bitmap_size<pos:position pos:line="37" pos:column="59"/></name></expr></argument>)<pos:position pos:line="37" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="61"/></condition><then pos:line="37" pos:column="61"> <block pos:line="37" pos:column="62">{
				<expr_stmt><expr><operator pos:line="38" pos:column="33">*<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="34">refs<pos:position pos:line="38" pos:column="38"/></name> <operator pos:line="38" pos:column="39">=<pos:position pos:line="38" pos:column="40"/></operator> <call><name pos:line="38" pos:column="41">paint_alloc<pos:position pos:line="38" pos:column="52"/></name><argument_list pos:line="38" pos:column="52">(<argument><expr><name pos:line="38" pos:column="53">info<pos:position pos:line="38" pos:column="57"/></name></expr></argument>)<pos:position pos:line="38" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="59"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="39" pos:column="33">memcpy<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(<argument><expr><operator pos:line="39" pos:column="40">*<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="41">refs<pos:position pos:line="39" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="47">tmp<pos:position pos:line="39" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="52">bitmap_size<pos:position pos:line="39" pos:column="63"/></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="65"/></expr_stmt>
			}<pos:position pos:line="40" pos:column="26"/></block></then></if>
		}<pos:position pos:line="41" pos:column="18"/></block></else></if>

		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name><name pos:line="43" pos:column="21">c<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">-&gt;<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="24">object<pos:position pos:line="43" pos:column="30"/></name><operator pos:line="43" pos:column="30">.<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="31">flags<pos:position pos:line="43" pos:column="36"/></name></name> <operator pos:line="43" pos:column="37">&amp;<pos:position pos:line="43" pos:column="42"/></operator> <name pos:line="43" pos:column="39">BOTTOM<pos:position pos:line="43" pos:column="45"/></name></expr>)<pos:position pos:line="43" pos:column="46"/></condition><then pos:line="43" pos:column="46">
			<block type="pseudo"><continue pos:line="44" pos:column="25">continue;<pos:position pos:line="44" pos:column="34"/></continue></block></then></if>

		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><call><name pos:line="46" pos:column="21">parse_commit<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">c<pos:position pos:line="46" pos:column="35"/></name></expr></argument>)<pos:position pos:line="46" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="37"/></condition><then pos:line="46" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="25">die<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><literal type="string" pos:line="47" pos:column="29">"unable to parse commit %s"<pos:position pos:line="47" pos:column="56"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="48" pos:column="29">oid_to_hex<pos:position pos:line="48" pos:column="39"/></name><argument_list pos:line="48" pos:column="39">(<argument><expr><operator pos:line="48" pos:column="40">&amp;<pos:position pos:line="48" pos:column="45"/></operator><name><name pos:line="48" pos:column="41">c<pos:position pos:line="48" pos:column="42"/></name><operator pos:line="48" pos:column="42">-&gt;<pos:position pos:line="48" pos:column="47"/></operator><name pos:line="48" pos:column="44">object<pos:position pos:line="48" pos:column="50"/></name><operator pos:line="48" pos:column="50">.<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="51">oid<pos:position pos:line="48" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="57"/></expr_stmt></block></then></if>

		<for pos:line="50" pos:column="17">for <control pos:line="50" pos:column="21">(<init><expr><name pos:line="50" pos:column="22">p<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">=<pos:position pos:line="50" pos:column="25"/></operator> <name><name pos:line="50" pos:column="26">c<pos:position pos:line="50" pos:column="27"/></name><operator pos:line="50" pos:column="27">-&gt;<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="29">parents<pos:position pos:line="50" pos:column="36"/></name></name></expr>;<pos:position pos:line="50" pos:column="37"/></init> <condition><expr><name pos:line="50" pos:column="38">p<pos:position pos:line="50" pos:column="39"/></name></expr>;<pos:position pos:line="50" pos:column="40"/></condition> <incr><expr><name pos:line="50" pos:column="41">p<pos:position pos:line="50" pos:column="42"/></name> <operator pos:line="50" pos:column="43">=<pos:position pos:line="50" pos:column="44"/></operator> <name><name pos:line="50" pos:column="45">p<pos:position pos:line="50" pos:column="46"/></name><operator pos:line="50" pos:column="46">-&gt;<pos:position pos:line="50" pos:column="51"/></operator><name pos:line="50" pos:column="48">next<pos:position pos:line="50" pos:column="52"/></name></name></expr></incr>)<pos:position pos:line="50" pos:column="53"/></control> <block pos:line="50" pos:column="54">{
			<if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><name><name pos:line="51" pos:column="29">p<pos:position pos:line="51" pos:column="30"/></name><operator pos:line="51" pos:column="30">-&gt;<pos:position pos:line="51" pos:column="35"/></operator><name pos:line="51" pos:column="32">item<pos:position pos:line="51" pos:column="36"/></name><operator pos:line="51" pos:column="36">-&gt;<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="38">object<pos:position pos:line="51" pos:column="44"/></name><operator pos:line="51" pos:column="44">.<pos:position pos:line="51" pos:column="45"/></operator><name pos:line="51" pos:column="45">flags<pos:position pos:line="51" pos:column="50"/></name></name> <operator pos:line="51" pos:column="51">&amp;<pos:position pos:line="51" pos:column="56"/></operator> <name pos:line="51" pos:column="53">SEEN<pos:position pos:line="51" pos:column="57"/></name></expr>)<pos:position pos:line="51" pos:column="58"/></condition><then pos:line="51" pos:column="58">
				<block type="pseudo"><continue pos:line="52" pos:column="33">continue;<pos:position pos:line="52" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">commit_list_insert<pos:position pos:line="53" pos:column="43"/></name><argument_list pos:line="53" pos:column="43">(<argument><expr><name><name pos:line="53" pos:column="44">p<pos:position pos:line="53" pos:column="45"/></name><operator pos:line="53" pos:column="45">-&gt;<pos:position pos:line="53" pos:column="50"/></operator><name pos:line="53" pos:column="47">item<pos:position pos:line="53" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="53">&amp;<pos:position pos:line="53" pos:column="58"/></operator><name pos:line="53" pos:column="54">head<pos:position pos:line="53" pos:column="58"/></name></expr></argument>)<pos:position pos:line="53" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="60"/></expr_stmt>
		}<pos:position pos:line="54" pos:column="18"/></block></for>
	}<pos:position pos:line="55" pos:column="10"/></block></while>

	<expr_stmt><expr><name pos:line="57" pos:column="9">nr<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <call><name pos:line="57" pos:column="14">get_max_object_index<pos:position pos:line="57" pos:column="34"/></name><argument_list pos:line="57" pos:column="34">()<pos:position pos:line="57" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="37"/></expr_stmt>
	<for pos:line="58" pos:column="9">for <control pos:line="58" pos:column="13">(<init><expr><name pos:line="58" pos:column="14">i<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <literal type="number" pos:line="58" pos:column="18">0<pos:position pos:line="58" pos:column="19"/></literal></expr>;<pos:position pos:line="58" pos:column="20"/></init> <condition><expr><name pos:line="58" pos:column="21">i<pos:position pos:line="58" pos:column="22"/></name> <operator pos:line="58" pos:column="23">&lt;<pos:position pos:line="58" pos:column="27"/></operator> <name pos:line="58" pos:column="25">nr<pos:position pos:line="58" pos:column="27"/></name></expr>;<pos:position pos:line="58" pos:column="28"/></condition> <incr><expr><name pos:line="58" pos:column="29">i<pos:position pos:line="58" pos:column="30"/></name><operator pos:line="58" pos:column="30">++<pos:position pos:line="58" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="58" pos:column="33"/></control> <block pos:line="58" pos:column="34">{
		<decl_stmt><decl><type><name><name pos:line="59" pos:column="17">struct<pos:position pos:line="59" pos:column="23"/></name> <name pos:line="59" pos:column="24">object<pos:position pos:line="59" pos:column="30"/></name></name> <modifier pos:line="59" pos:column="31">*<pos:position pos:line="59" pos:column="32"/></modifier></type><name pos:line="59" pos:column="32">o<pos:position pos:line="59" pos:column="33"/></name> <init pos:line="59" pos:column="34">= <expr><call><name pos:line="59" pos:column="36">get_indexed_object<pos:position pos:line="59" pos:column="54"/></name><argument_list pos:line="59" pos:column="54">(<argument><expr><name pos:line="59" pos:column="55">i<pos:position pos:line="59" pos:column="56"/></name></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="59" pos:column="58"/></decl_stmt>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name pos:line="60" pos:column="21">o<pos:position pos:line="60" pos:column="22"/></name> <operator pos:line="60" pos:column="23">&amp;&amp;<pos:position pos:line="60" pos:column="33"/></operator> <name><name pos:line="60" pos:column="26">o<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">-&gt;<pos:position pos:line="60" pos:column="32"/></operator><name pos:line="60" pos:column="29">type<pos:position pos:line="60" pos:column="33"/></name></name> <operator pos:line="60" pos:column="34">==<pos:position pos:line="60" pos:column="36"/></operator> <name pos:line="60" pos:column="37">OBJ_COMMIT<pos:position pos:line="60" pos:column="47"/></name></expr>)<pos:position pos:line="60" pos:column="48"/></condition><then pos:line="60" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="61" pos:column="25">o<pos:position pos:line="61" pos:column="26"/></name><operator pos:line="61" pos:column="26">-&gt;<pos:position pos:line="61" pos:column="31"/></operator><name pos:line="61" pos:column="28">flags<pos:position pos:line="61" pos:column="33"/></name></name> <operator pos:line="61" pos:column="34">&amp;=<pos:position pos:line="61" pos:column="40"/></operator> <operator pos:line="61" pos:column="37">~<pos:position pos:line="61" pos:column="38"/></operator><name pos:line="61" pos:column="38">SEEN<pos:position pos:line="61" pos:column="42"/></name></expr>;<pos:position pos:line="61" pos:column="43"/></expr_stmt></block></then></if>
	}<pos:position pos:line="62" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="64" pos:column="9">free<pos:position pos:line="64" pos:column="13"/></name><argument_list pos:line="64" pos:column="13">(<argument><expr><name pos:line="64" pos:column="14">tmp<pos:position pos:line="64" pos:column="17"/></name></expr></argument>)<pos:position pos:line="64" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="19"/></expr_stmt>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

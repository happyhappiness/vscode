<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4557_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">try_merge_command<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">strategy<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">size_t<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">xopts_nr<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier><modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">xopts<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="43">struct<pos:position pos:line="2" pos:column="49"/></name> <name pos:line="2" pos:column="50">commit_list<pos:position pos:line="2" pos:column="61"/></name></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">common<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="3" pos:column="23">const<pos:position pos:line="3" pos:column="28"/></specifier> <name pos:line="3" pos:column="29">char<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">head_arg<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="3" pos:column="45">struct<pos:position pos:line="3" pos:column="51"/></name> <name pos:line="3" pos:column="52">commit_list<pos:position pos:line="3" pos:column="63"/></name></name> <modifier pos:line="3" pos:column="64">*<pos:position pos:line="3" pos:column="65"/></modifier></type><name pos:line="3" pos:column="65">remotes<pos:position pos:line="3" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="73"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">argv_array<pos:position pos:line="5" pos:column="26"/></name></name></type> <name pos:line="5" pos:column="27">args<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><name pos:line="5" pos:column="34">ARGV_ARRAY_INIT<pos:position pos:line="5" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">ret<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">commit_list<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">j<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">argv_array_pushf<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><operator pos:line="9" pos:column="26">&amp;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="27">args<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="33">"merge-%s"<pos:position pos:line="9" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="45">strategy<pos:position pos:line="9" pos:column="53"/></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt>
	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">i<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></init> <condition><expr><name pos:line="10" pos:column="21">i<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">&lt;<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="25">xopts_nr<pos:position pos:line="10" pos:column="33"/></name></expr>;<pos:position pos:line="10" pos:column="34"/></condition> <incr><expr><name pos:line="10" pos:column="35">i<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">++<pos:position pos:line="10" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="39"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">argv_array_pushf<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><operator pos:line="11" pos:column="34">&amp;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="35">args<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="41">"--%s"<pos:position pos:line="11" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="49">xopts<pos:position pos:line="11" pos:column="54"/></name><index pos:line="11" pos:column="54">[<expr><name pos:line="11" pos:column="55">i<pos:position pos:line="11" pos:column="56"/></name></expr>]<pos:position pos:line="11" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt></block></for>
	<for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><expr><name pos:line="12" pos:column="14">j<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">common<pos:position pos:line="12" pos:column="24"/></name></expr>;<pos:position pos:line="12" pos:column="25"/></init> <condition><expr><name pos:line="12" pos:column="26">j<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></condition> <incr><expr><name pos:line="12" pos:column="29">j<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">=<pos:position pos:line="12" pos:column="32"/></operator> <name><name pos:line="12" pos:column="33">j<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">next<pos:position pos:line="12" pos:column="40"/></name></name></expr></incr>)<pos:position pos:line="12" pos:column="41"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">argv_array_push<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><operator pos:line="13" pos:column="33">&amp;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="34">args<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="40">merge_argument<pos:position pos:line="13" pos:column="54"/></name><argument_list pos:line="13" pos:column="54">(<argument><expr><name><name pos:line="13" pos:column="55">j<pos:position pos:line="13" pos:column="56"/></name><operator pos:line="13" pos:column="56">-&gt;<pos:position pos:line="13" pos:column="61"/></operator><name pos:line="13" pos:column="58">item<pos:position pos:line="13" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">argv_array_push<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><operator pos:line="14" pos:column="25">&amp;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="26">args<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="32">"--"<pos:position pos:line="14" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">argv_array_push<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><operator pos:line="15" pos:column="25">&amp;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="26">args<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">head_arg<pos:position pos:line="15" pos:column="40"/></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>
	<for pos:line="16" pos:column="9">for <control pos:line="16" pos:column="13">(<init><expr><name pos:line="16" pos:column="14">j<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="18">remotes<pos:position pos:line="16" pos:column="25"/></name></expr>;<pos:position pos:line="16" pos:column="26"/></init> <condition><expr><name pos:line="16" pos:column="27">j<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></condition> <incr><expr><name pos:line="16" pos:column="30">j<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">=<pos:position pos:line="16" pos:column="33"/></operator> <name><name pos:line="16" pos:column="34">j<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">-&gt;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="37">next<pos:position pos:line="16" pos:column="41"/></name></name></expr></incr>)<pos:position pos:line="16" pos:column="42"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">argv_array_push<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><operator pos:line="17" pos:column="33">&amp;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="34">args<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="40">merge_argument<pos:position pos:line="17" pos:column="54"/></name><argument_list pos:line="17" pos:column="54">(<argument><expr><name><name pos:line="17" pos:column="55">j<pos:position pos:line="17" pos:column="56"/></name><operator pos:line="17" pos:column="56">-&gt;<pos:position pos:line="17" pos:column="61"/></operator><name pos:line="17" pos:column="58">item<pos:position pos:line="17" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="65"/></expr_stmt></block></for>

	<expr_stmt><expr><name pos:line="19" pos:column="9">ret<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">run_command_v_opt<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name><name pos:line="19" pos:column="33">args<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">.<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="38">argv<pos:position pos:line="19" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="44">RUN_GIT_CMD<pos:position pos:line="19" pos:column="55"/></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">argv_array_clear<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><operator pos:line="20" pos:column="26">&amp;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="27">args<pos:position pos:line="20" pos:column="31"/></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">discard_cache<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">()<pos:position pos:line="22" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">read_cache<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">()<pos:position pos:line="23" pos:column="25"/></argument_list></call> <operator pos:line="23" pos:column="26">&lt;<pos:position pos:line="23" pos:column="30"/></operator> <literal type="number" pos:line="23" pos:column="28">0<pos:position pos:line="23" pos:column="29"/></literal></expr>)<pos:position pos:line="23" pos:column="30"/></condition><then pos:line="23" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">die<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><call><name pos:line="24" pos:column="21">_<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><literal type="string" pos:line="24" pos:column="23">"failed to read the cache"<pos:position pos:line="24" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">resolve_undo_clear<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">()<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>

	<return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">ret<pos:position pos:line="27" pos:column="19"/></name></expr>;<pos:position pos:line="27" pos:column="20"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

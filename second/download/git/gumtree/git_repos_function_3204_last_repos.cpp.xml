<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3204_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">unlink_entry<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">cache_entry<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ce<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name><name pos:line="3" pos:column="15">struct<pos:position pos:line="3" pos:column="21"/></name> <name pos:line="3" pos:column="22">submodule<pos:position pos:line="3" pos:column="31"/></name></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">sub<pos:position pos:line="3" pos:column="36"/></name> <init pos:line="3" pos:column="37">= <expr><call><name pos:line="3" pos:column="39">submodule_from_ce<pos:position pos:line="3" pos:column="56"/></name><argument_list pos:line="3" pos:column="56">(<argument><expr><name pos:line="3" pos:column="57">ce<pos:position pos:line="3" pos:column="59"/></name></expr></argument>)<pos:position pos:line="3" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="61"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">sub<pos:position pos:line="4" pos:column="16"/></name></expr>)<pos:position pos:line="4" pos:column="17"/></condition><then pos:line="4" pos:column="17"> <block pos:line="4" pos:column="18">{
		<switch pos:line="5" pos:column="17">switch <condition pos:line="5" pos:column="24">(<expr><name><name pos:line="5" pos:column="25">sub<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">update_strategy<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">.<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">type<pos:position pos:line="5" pos:column="50"/></name></name></expr>)<pos:position pos:line="5" pos:column="51"/></condition> <block pos:line="5" pos:column="52">{
		<case pos:line="6" pos:column="17">case <expr><name pos:line="6" pos:column="22">SM_UPDATE_UNSPECIFIED<pos:position pos:line="6" pos:column="43"/></name></expr>:<pos:position pos:line="6" pos:column="44"/></case>
		<case pos:line="7" pos:column="17">case <expr><name pos:line="7" pos:column="22">SM_UPDATE_CHECKOUT<pos:position pos:line="7" pos:column="40"/></name></expr>:<pos:position pos:line="7" pos:column="41"/></case>
		<case pos:line="8" pos:column="17">case <expr><name pos:line="8" pos:column="22">SM_UPDATE_REBASE<pos:position pos:line="8" pos:column="38"/></name></expr>:<pos:position pos:line="8" pos:column="39"/></case>
		<case pos:line="9" pos:column="17">case <expr><name pos:line="9" pos:column="22">SM_UPDATE_MERGE<pos:position pos:line="9" pos:column="37"/></name></expr>:<pos:position pos:line="9" pos:column="38"/></case>
			<comment type="block" pos:line="10" pos:column="25">/* state.force is set at the caller. */</comment>
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">submodule_move_head<pos:position pos:line="11" pos:column="44"/></name><argument_list pos:line="11" pos:column="44">(<argument><expr><name><name pos:line="11" pos:column="45">ce<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">-&gt;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="49">name<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="55">"HEAD"<pos:position pos:line="11" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="63">NULL<pos:position pos:line="11" pos:column="67"/></name></expr></argument>,
					    <argument><expr><name pos:line="12" pos:column="45">SUBMODULE_MOVE_HEAD_FORCE<pos:position pos:line="12" pos:column="70"/></name></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="72"/></expr_stmt>
			<break pos:line="13" pos:column="25">break;<pos:position pos:line="13" pos:column="31"/></break>
		<case pos:line="14" pos:column="17">case <expr><name pos:line="14" pos:column="22">SM_UPDATE_NONE<pos:position pos:line="14" pos:column="36"/></name></expr>:<pos:position pos:line="14" pos:column="37"/></case>
		<case pos:line="15" pos:column="17">case <expr><name pos:line="15" pos:column="22">SM_UPDATE_COMMAND<pos:position pos:line="15" pos:column="39"/></name></expr>:<pos:position pos:line="15" pos:column="40"/></case>
			<return pos:line="16" pos:column="25">return;<pos:position pos:line="16" pos:column="32"/></return> <comment type="block" pos:line="16" pos:column="33">/* Do not touch the submodule. */</comment>
		}<pos:position pos:line="17" pos:column="18"/></block></switch>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">check_leading_path<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name><name pos:line="19" pos:column="33">ce<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">name<pos:position pos:line="19" pos:column="41"/></name></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="43">ce_namelen<pos:position pos:line="19" pos:column="53"/></name><argument_list pos:line="19" pos:column="53">(<argument><expr><name pos:line="19" pos:column="54">ce<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="59"/></condition><then pos:line="19" pos:column="59">
		<block type="pseudo"><return pos:line="20" pos:column="17">return;<pos:position pos:line="20" pos:column="24"/></return></block></then></if>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">remove_or_warn<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name><name pos:line="21" pos:column="28">ce<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">-&gt;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="32">ce_mode<pos:position pos:line="21" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="41">ce<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">-&gt;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="45">name<pos:position pos:line="21" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="51"/></condition><then pos:line="21" pos:column="51">
		<block type="pseudo"><return pos:line="22" pos:column="17">return;<pos:position pos:line="22" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">schedule_dir_for_removal<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name><name pos:line="23" pos:column="34">ce<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">name<pos:position pos:line="23" pos:column="42"/></name></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="44">ce_namelen<pos:position pos:line="23" pos:column="54"/></name><argument_list pos:line="23" pos:column="54">(<argument><expr><name pos:line="23" pos:column="55">ce<pos:position pos:line="23" pos:column="57"/></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

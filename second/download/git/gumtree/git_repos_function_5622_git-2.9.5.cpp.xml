<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5622_git-2.9.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">squash_message<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">commit<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">commit<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">commit_list<pos:position pos:line="1" pos:column="69"/></name></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">remoteheads<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="83"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">rev_info<pos:position pos:line="3" pos:column="24"/></name></name></type> <name pos:line="3" pos:column="25">rev<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">out<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit_list<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">j<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">filename<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">fd<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">pretty_print_context<pos:position pos:line="8" pos:column="36"/></name></name></type> <name pos:line="8" pos:column="37">ctx<pos:position pos:line="8" pos:column="40"/></name> <init pos:line="8" pos:column="41">= <expr><block pos:line="8" pos:column="43">{<expr><literal type="number" pos:line="8" pos:column="44">0<pos:position pos:line="8" pos:column="45"/></literal></expr>}<pos:position pos:line="8" pos:column="46"/></block></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">printf<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><call><name pos:line="10" pos:column="16">_<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><literal type="string" pos:line="10" pos:column="18">"Squash commit -- not updating HEAD\n"<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">filename<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <call><name pos:line="11" pos:column="20">git_path_squash_msg<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">()<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">fd<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">open<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">filename<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="29">O_WRONLY<pos:position pos:line="12" pos:column="37"/></name> <operator pos:line="12" pos:column="38">|<pos:position pos:line="12" pos:column="39"/></operator> <name pos:line="12" pos:column="40">O_CREAT<pos:position pos:line="12" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="49">0666<pos:position pos:line="12" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">fd<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">&lt;<pos:position pos:line="13" pos:column="20"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">die_errno<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><call><name pos:line="14" pos:column="27">_<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><literal type="string" pos:line="14" pos:column="29">"Could not write to '%s'"<pos:position pos:line="14" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="57">filename<pos:position pos:line="14" pos:column="65"/></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">init_revisions<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><operator pos:line="16" pos:column="24">&amp;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="25">rev<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="30">NULL<pos:position pos:line="16" pos:column="34"/></name></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">rev<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">.<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">ignore_merges<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <literal type="number" pos:line="17" pos:column="29">1<pos:position pos:line="17" pos:column="30"/></literal></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">rev<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">.<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">commit_format<pos:position pos:line="18" pos:column="26"/></name></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">CMIT_FMT_MEDIUM<pos:position pos:line="18" pos:column="44"/></name></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="20" pos:column="9">commit<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">object<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">.<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="24">flags<pos:position pos:line="20" pos:column="29"/></name></name> <operator pos:line="20" pos:column="30">|=<pos:position pos:line="20" pos:column="32"/></operator> <name pos:line="20" pos:column="33">UNINTERESTING<pos:position pos:line="20" pos:column="46"/></name></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">add_pending_object<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><operator pos:line="21" pos:column="28">&amp;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="29">rev<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="34">&amp;<pos:position pos:line="21" pos:column="39"/></operator><name><name pos:line="21" pos:column="35">commit<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">-&gt;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="43">object<pos:position pos:line="21" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="51">NULL<pos:position pos:line="21" pos:column="55"/></name></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt>

	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">j<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">remoteheads<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></init> <condition><expr><name pos:line="23" pos:column="31">j<pos:position pos:line="23" pos:column="32"/></name></expr>;<pos:position pos:line="23" pos:column="33"/></condition> <incr><expr><name pos:line="23" pos:column="34">j<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <name><name pos:line="23" pos:column="38">j<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">-&gt;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="41">next<pos:position pos:line="23" pos:column="45"/></name></name></expr></incr>)<pos:position pos:line="23" pos:column="46"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">add_pending_object<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><operator pos:line="24" pos:column="36">&amp;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="37">rev<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="42">&amp;<pos:position pos:line="24" pos:column="47"/></operator><name><name pos:line="24" pos:column="43">j<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">-&gt;<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="46">item<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">-&gt;<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="52">object<pos:position pos:line="24" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="60">NULL<pos:position pos:line="24" pos:column="64"/></name></expr></argument>)<pos:position pos:line="24" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="66"/></expr_stmt></block></for>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">setup_revisions<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><literal type="number" pos:line="26" pos:column="25">0<pos:position pos:line="26" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="28">NULL<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="34">&amp;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="35">rev<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="40">NULL<pos:position pos:line="26" pos:column="44"/></name></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">prepare_revision_walk<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><operator pos:line="27" pos:column="35">&amp;<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="36">rev<pos:position pos:line="27" pos:column="39"/></name></expr></argument>)<pos:position pos:line="27" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="41"/></condition><then pos:line="27" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">die<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><call><name pos:line="28" pos:column="21">_<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><literal type="string" pos:line="28" pos:column="23">"revision walk setup failed"<pos:position pos:line="28" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="54"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="30" pos:column="9">ctx<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">.<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">abbrev<pos:position pos:line="30" pos:column="19"/></name></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <name><name pos:line="30" pos:column="22">rev<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">.<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="26">abbrev<pos:position pos:line="30" pos:column="32"/></name></name></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">ctx<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">.<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">date_mode<pos:position pos:line="31" pos:column="22"/></name></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <name><name pos:line="31" pos:column="25">rev<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">.<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="29">date_mode<pos:position pos:line="31" pos:column="38"/></name></name></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="32" pos:column="9">ctx<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">.<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">fmt<pos:position pos:line="32" pos:column="16"/></name></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <name><name pos:line="32" pos:column="19">rev<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">.<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">commit_format<pos:position pos:line="32" pos:column="36"/></name></name></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="34" pos:column="9">strbuf_addstr<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><operator pos:line="34" pos:column="23">&amp;<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="24">out<pos:position pos:line="34" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="29">"Squashed commit of the following:\n"<pos:position pos:line="34" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="68"/></expr_stmt>
	<while pos:line="35" pos:column="9">while <condition pos:line="35" pos:column="15">(<expr><operator pos:line="35" pos:column="16">(<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">commit<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <call><name pos:line="35" pos:column="26">get_revision<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><operator pos:line="35" pos:column="39">&amp;<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="40">rev<pos:position pos:line="35" pos:column="43"/></name></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call><operator pos:line="35" pos:column="44">)<pos:position pos:line="35" pos:column="45"/></operator> <operator pos:line="35" pos:column="46">!=<pos:position pos:line="35" pos:column="48"/></operator> <name pos:line="35" pos:column="49">NULL<pos:position pos:line="35" pos:column="53"/></name></expr>)<pos:position pos:line="35" pos:column="54"/></condition> <block pos:line="35" pos:column="55">{
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">strbuf_addch<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><operator pos:line="36" pos:column="30">&amp;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="31">out<pos:position pos:line="36" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="36" pos:column="36">'\n'<pos:position pos:line="36" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">strbuf_addf<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><operator pos:line="37" pos:column="29">&amp;<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="30">out<pos:position pos:line="37" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="35">"commit %s\n"<pos:position pos:line="37" pos:column="48"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="38" pos:column="25">oid_to_hex<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">(<argument><expr><operator pos:line="38" pos:column="36">&amp;<pos:position pos:line="38" pos:column="41"/></operator><name><name pos:line="38" pos:column="37">commit<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">-&gt;<pos:position pos:line="38" pos:column="48"/></operator><name pos:line="38" pos:column="45">object<pos:position pos:line="38" pos:column="51"/></name><operator pos:line="38" pos:column="51">.<pos:position pos:line="38" pos:column="52"/></operator><name pos:line="38" pos:column="52">oid<pos:position pos:line="38" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">pretty_print_commit<pos:position pos:line="39" pos:column="36"/></name><argument_list pos:line="39" pos:column="36">(<argument><expr><operator pos:line="39" pos:column="37">&amp;<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="38">ctx<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="43">commit<pos:position pos:line="39" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="51">&amp;<pos:position pos:line="39" pos:column="56"/></operator><name pos:line="39" pos:column="52">out<pos:position pos:line="39" pos:column="55"/></name></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></while>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><call><name pos:line="41" pos:column="13">write_in_full<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">(<argument><expr><name pos:line="41" pos:column="27">fd<pos:position pos:line="41" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="31">out<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">.<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="35">buf<pos:position pos:line="41" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="40">out<pos:position pos:line="41" pos:column="43"/></name><operator pos:line="41" pos:column="43">.<pos:position pos:line="41" pos:column="44"/></operator><name pos:line="41" pos:column="44">len<pos:position pos:line="41" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call> <operator pos:line="41" pos:column="49">!=<pos:position pos:line="41" pos:column="51"/></operator> <name><name pos:line="41" pos:column="52">out<pos:position pos:line="41" pos:column="55"/></name><operator pos:line="41" pos:column="55">.<pos:position pos:line="41" pos:column="56"/></operator><name pos:line="41" pos:column="56">len<pos:position pos:line="41" pos:column="59"/></name></name></expr>)<pos:position pos:line="41" pos:column="60"/></condition><then pos:line="41" pos:column="60">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="17">die_errno<pos:position pos:line="42" pos:column="26"/></name><argument_list pos:line="42" pos:column="26">(<argument><expr><call><name pos:line="42" pos:column="27">_<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><literal type="string" pos:line="42" pos:column="29">"Writing SQUASH_MSG"<pos:position pos:line="42" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="52"/></expr_stmt></block></then></if>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name pos:line="43" pos:column="13">close<pos:position pos:line="43" pos:column="18"/></name><argument_list pos:line="43" pos:column="18">(<argument><expr><name pos:line="43" pos:column="19">fd<pos:position pos:line="43" pos:column="21"/></name></expr></argument>)<pos:position pos:line="43" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="23"/></condition><then pos:line="43" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="17">die_errno<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><call><name pos:line="44" pos:column="27">_<pos:position pos:line="44" pos:column="28"/></name><argument_list pos:line="44" pos:column="28">(<argument><expr><literal type="string" pos:line="44" pos:column="29">"Finishing SQUASH_MSG"<pos:position pos:line="44" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="54"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">strbuf_release<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><operator pos:line="45" pos:column="24">&amp;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="25">out<pos:position pos:line="45" pos:column="28"/></name></expr></argument>)<pos:position pos:line="45" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="30"/></expr_stmt>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

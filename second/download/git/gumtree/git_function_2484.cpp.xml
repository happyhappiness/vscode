<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2484.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">show_log<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name><name pos:line="1" pos:column="15">struct<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">rev_info<pos:position pos:line="1" pos:column="30"/></name></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">opt<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">msgbuf<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name pos:line="3" pos:column="32">STRBUF_INIT<pos:position pos:line="3" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">log_info<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">log<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name><name pos:line="4" pos:column="32">opt<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">-&gt;<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="37">loginfo<pos:position pos:line="4" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">commit<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><name><name pos:line="5" pos:column="33">log<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">commit<pos:position pos:line="5" pos:column="44"/></name></name></expr></init></decl>, <modifier pos:line="5" pos:column="46">*<pos:position pos:line="5" pos:column="47"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="47">parent<pos:position pos:line="5" pos:column="53"/></name> <init pos:line="5" pos:column="54">= <expr><name><name pos:line="5" pos:column="56">log<pos:position pos:line="5" pos:column="59"/></name><operator pos:line="5" pos:column="59">-&gt;<pos:position pos:line="5" pos:column="64"/></operator><name pos:line="5" pos:column="61">parent<pos:position pos:line="5" pos:column="67"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="68"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">abbrev_commit<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><ternary><condition><expr><name><name pos:line="6" pos:column="29">opt<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">abbrev_commit<pos:position pos:line="6" pos:column="47"/></name></name></expr> ?<pos:position pos:line="6" pos:column="49"/></condition><then pos:line="6" pos:column="49"> <expr><name><name pos:line="6" pos:column="50">opt<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">-&gt;<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="55">abbrev<pos:position pos:line="6" pos:column="61"/></name></name></expr> <pos:position pos:line="6" pos:column="62"/></then><else pos:line="6" pos:column="62">: <expr><literal type="number" pos:line="6" pos:column="64">40<pos:position pos:line="6" pos:column="66"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="67"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">extra_headers<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><name><name pos:line="7" pos:column="37">opt<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">-&gt;<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="42">extra_headers<pos:position pos:line="7" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">pretty_print_context<pos:position pos:line="8" pos:column="36"/></name></name></type> <name pos:line="8" pos:column="37">ctx<pos:position pos:line="8" pos:column="40"/></name> <init pos:line="8" pos:column="41">= <expr><block pos:line="8" pos:column="43">{<expr><literal type="number" pos:line="8" pos:column="44">0<pos:position pos:line="8" pos:column="45"/></literal></expr>}<pos:position pos:line="8" pos:column="46"/></block></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="10" pos:column="9">opt<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">loginfo<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">NULL<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name><name pos:line="11" pos:column="14">opt<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">verbose_header<pos:position pos:line="11" pos:column="33"/></name></name></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34"> <block pos:line="11" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">graph_show_commit<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name><name pos:line="12" pos:column="35">opt<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">graph<pos:position pos:line="12" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><name><name pos:line="14" pos:column="22">opt<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">graph<pos:position pos:line="14" pos:column="32"/></name></name></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="25">put_revision_mark<pos:position pos:line="15" pos:column="42"/></name><argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">opt<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="48">commit<pos:position pos:line="15" pos:column="54"/></name></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">fputs<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><call><name pos:line="16" pos:column="23">find_unique_abbrev<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><name><name pos:line="16" pos:column="42">commit<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">-&gt;<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="50">object<pos:position pos:line="16" pos:column="56"/></name><operator pos:line="16" pos:column="56">.<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="57">sha1<pos:position pos:line="16" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="63">abbrev_commit<pos:position pos:line="16" pos:column="76"/></name></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="16" pos:column="79">stdout<pos:position pos:line="16" pos:column="85"/></name></expr></argument>)<pos:position pos:line="16" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="87"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name><name pos:line="17" pos:column="21">opt<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">print_parents<pos:position pos:line="17" pos:column="39"/></name></name></expr>)<pos:position pos:line="17" pos:column="40"/></condition><then pos:line="17" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="25">show_parents<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">commit<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="46">abbrev_commit<pos:position pos:line="18" pos:column="59"/></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt></block></then></if>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name><name pos:line="19" pos:column="21">opt<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">-&gt;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="26">children<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">.<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">name<pos:position pos:line="19" pos:column="39"/></name></name></expr>)<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="25">show_children<pos:position pos:line="20" pos:column="38"/></name><argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">opt<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="44">commit<pos:position pos:line="20" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="52">abbrev_commit<pos:position pos:line="20" pos:column="65"/></name></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="67"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">show_decorations<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">opt<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">commit<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">opt<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">-&gt;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="26">graph<pos:position pos:line="22" pos:column="31"/></name></name> <operator pos:line="22" pos:column="32">&amp;&amp;<pos:position pos:line="22" pos:column="42"/></operator> <operator pos:line="22" pos:column="35">!<pos:position pos:line="22" pos:column="36"/></operator><call><name pos:line="22" pos:column="36">graph_is_commit_finished<pos:position pos:line="22" pos:column="60"/></name><argument_list pos:line="22" pos:column="60">(<argument><expr><name><name pos:line="22" pos:column="61">opt<pos:position pos:line="22" pos:column="64"/></name><operator pos:line="22" pos:column="64">-&gt;<pos:position pos:line="22" pos:column="69"/></operator><name pos:line="22" pos:column="66">graph<pos:position pos:line="22" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="73"/></condition><then pos:line="22" pos:column="73"> <block pos:line="22" pos:column="74">{
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">putchar<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><literal type="char" pos:line="23" pos:column="33">'\n'<pos:position pos:line="23" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">graph_show_remainder<pos:position pos:line="24" pos:column="45"/></name><argument_list pos:line="24" pos:column="45">(<argument><expr><name><name pos:line="24" pos:column="46">opt<pos:position pos:line="24" pos:column="49"/></name><operator pos:line="24" pos:column="49">-&gt;<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="51">graph<pos:position pos:line="24" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">putchar<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name><name pos:line="26" pos:column="25">opt<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">diffopt<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">.<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="38">line_termination<pos:position pos:line="26" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="56"/></expr_stmt>
		<return pos:line="27" pos:column="17">return;<pos:position pos:line="27" pos:column="24"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="30" pos:column="9">/*
	 * If use_terminator is set, we already handled any record termination
	 * at the end of the last record.
	 * Otherwise, add a diffopt.line_termination character before all
	 * entries but the first.  (IOW, as a separator between entries)
	 */</comment>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">opt<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">-&gt;<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="18">shown_one<pos:position pos:line="36" pos:column="27"/></name></name> <operator pos:line="36" pos:column="28">&amp;&amp;<pos:position pos:line="36" pos:column="38"/></operator> <operator pos:line="36" pos:column="31">!<pos:position pos:line="36" pos:column="32"/></operator><name><name pos:line="36" pos:column="32">opt<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">-&gt;<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="37">use_terminator<pos:position pos:line="36" pos:column="51"/></name></name></expr>)<pos:position pos:line="36" pos:column="52"/></condition><then pos:line="36" pos:column="52"> <block pos:line="36" pos:column="53">{
		<comment type="block" pos:line="37" pos:column="17">/*
		 * If entries are separated by a newline, the output
		 * should look human-readable.  If the last entry ended
		 * with a newline, print the graph output before this
		 * newline.  Otherwise it will end up as a completely blank
		 * line and will look like a gap in the graph.
		 *
		 * If the entry separator is not a newline, the output is
		 * primarily intended for programmatic consumption, and we
		 * never want the extra graph output before the entry
		 * separator.
		 */</comment>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name><name pos:line="49" pos:column="21">opt<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">-&gt;<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="26">diffopt<pos:position pos:line="49" pos:column="33"/></name><operator pos:line="49" pos:column="33">.<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="34">line_termination<pos:position pos:line="49" pos:column="50"/></name></name> <operator pos:line="49" pos:column="51">==<pos:position pos:line="49" pos:column="53"/></operator> <literal type="char" pos:line="49" pos:column="54">'\n'<pos:position pos:line="49" pos:column="58"/></literal> <operator pos:line="49" pos:column="59">&amp;&amp;<pos:position pos:line="49" pos:column="69"/></operator>
		    <operator pos:line="50" pos:column="21">!<pos:position pos:line="50" pos:column="22"/></operator><name><name pos:line="50" pos:column="22">opt<pos:position pos:line="50" pos:column="25"/></name><operator pos:line="50" pos:column="25">-&gt;<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="27">missing_newline<pos:position pos:line="50" pos:column="42"/></name></name></expr>)<pos:position pos:line="50" pos:column="43"/></condition><then pos:line="50" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="25">graph_show_padding<pos:position pos:line="51" pos:column="43"/></name><argument_list pos:line="51" pos:column="43">(<argument><expr><name><name pos:line="51" pos:column="44">opt<pos:position pos:line="51" pos:column="47"/></name><operator pos:line="51" pos:column="47">-&gt;<pos:position pos:line="51" pos:column="52"/></operator><name pos:line="51" pos:column="49">graph<pos:position pos:line="51" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="56"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">putchar<pos:position pos:line="52" pos:column="24"/></name><argument_list pos:line="52" pos:column="24">(<argument><expr><name><name pos:line="52" pos:column="25">opt<pos:position pos:line="52" pos:column="28"/></name><operator pos:line="52" pos:column="28">-&gt;<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="30">diffopt<pos:position pos:line="52" pos:column="37"/></name><operator pos:line="52" pos:column="37">.<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="38">line_termination<pos:position pos:line="52" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="54" pos:column="9">opt<pos:position pos:line="54" pos:column="12"/></name><operator pos:line="54" pos:column="12">-&gt;<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="14">shown_one<pos:position pos:line="54" pos:column="23"/></name></name> <operator pos:line="54" pos:column="24">=<pos:position pos:line="54" pos:column="25"/></operator> <literal type="number" pos:line="54" pos:column="26">1<pos:position pos:line="54" pos:column="27"/></literal></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>

	<comment type="block" pos:line="56" pos:column="9">/*
	 * If the history graph was requested,
	 * print the graph, up to this commit's line
	 */</comment>
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">graph_show_commit<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name><name pos:line="60" pos:column="27">opt<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">-&gt;<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="32">graph<pos:position pos:line="60" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt>

	<comment type="block" pos:line="62" pos:column="9">/*
	 * Print header line of header..
	 */</comment>

	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name><name pos:line="66" pos:column="13">opt<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">-&gt;<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="18">commit_format<pos:position pos:line="66" pos:column="31"/></name></name> <operator pos:line="66" pos:column="32">==<pos:position pos:line="66" pos:column="34"/></operator> <name pos:line="66" pos:column="35">CMIT_FMT_EMAIL<pos:position pos:line="66" pos:column="49"/></name></expr>)<pos:position pos:line="66" pos:column="50"/></condition><then pos:line="66" pos:column="50"> <block pos:line="66" pos:column="51">{
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">log_write_email_headers<pos:position pos:line="67" pos:column="40"/></name><argument_list pos:line="67" pos:column="40">(<argument><expr><name pos:line="67" pos:column="41">opt<pos:position pos:line="67" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="46">commit<pos:position pos:line="67" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="54">&amp;<pos:position pos:line="67" pos:column="59"/></operator><name><name pos:line="67" pos:column="55">ctx<pos:position pos:line="67" pos:column="58"/></name><operator pos:line="67" pos:column="58">.<pos:position pos:line="67" pos:column="59"/></operator><name pos:line="67" pos:column="59">subject<pos:position pos:line="67" pos:column="66"/></name></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="68">&amp;<pos:position pos:line="67" pos:column="73"/></operator><name pos:line="67" pos:column="69">extra_headers<pos:position pos:line="67" pos:column="82"/></name></expr></argument>,
					<argument><expr><operator pos:line="68" pos:column="41">&amp;<pos:position pos:line="68" pos:column="46"/></operator><name><name pos:line="68" pos:column="42">ctx<pos:position pos:line="68" pos:column="45"/></name><operator pos:line="68" pos:column="45">.<pos:position pos:line="68" pos:column="46"/></operator><name pos:line="68" pos:column="46">need_8bit_cte<pos:position pos:line="68" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="69" pos:column="10"/></block></then> <elseif pos:line="69" pos:column="11">else <if pos:line="69" pos:column="16">if <condition pos:line="69" pos:column="19">(<expr><name><name pos:line="69" pos:column="20">opt<pos:position pos:line="69" pos:column="23"/></name><operator pos:line="69" pos:column="23">-&gt;<pos:position pos:line="69" pos:column="28"/></operator><name pos:line="69" pos:column="25">commit_format<pos:position pos:line="69" pos:column="38"/></name></name> <operator pos:line="69" pos:column="39">!=<pos:position pos:line="69" pos:column="41"/></operator> <name pos:line="69" pos:column="42">CMIT_FMT_USERFORMAT<pos:position pos:line="69" pos:column="61"/></name></expr>)<pos:position pos:line="69" pos:column="62"/></condition><then pos:line="69" pos:column="62"> <block pos:line="69" pos:column="63">{
		<expr_stmt><expr><call><name pos:line="70" pos:column="17">fputs<pos:position pos:line="70" pos:column="22"/></name><argument_list pos:line="70" pos:column="22">(<argument><expr><call><name pos:line="70" pos:column="23">diff_get_color_opt<pos:position pos:line="70" pos:column="41"/></name><argument_list pos:line="70" pos:column="41">(<argument><expr><operator pos:line="70" pos:column="42">&amp;<pos:position pos:line="70" pos:column="47"/></operator><name><name pos:line="70" pos:column="43">opt<pos:position pos:line="70" pos:column="46"/></name><operator pos:line="70" pos:column="46">-&gt;<pos:position pos:line="70" pos:column="51"/></operator><name pos:line="70" pos:column="48">diffopt<pos:position pos:line="70" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="57">DIFF_COMMIT<pos:position pos:line="70" pos:column="68"/></name></expr></argument>)<pos:position pos:line="70" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="70" pos:column="71">stdout<pos:position pos:line="70" pos:column="77"/></name></expr></argument>)<pos:position pos:line="70" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="79"/></expr_stmt>
		<if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><name><name pos:line="71" pos:column="21">opt<pos:position pos:line="71" pos:column="24"/></name><operator pos:line="71" pos:column="24">-&gt;<pos:position pos:line="71" pos:column="29"/></operator><name pos:line="71" pos:column="26">commit_format<pos:position pos:line="71" pos:column="39"/></name></name> <operator pos:line="71" pos:column="40">!=<pos:position pos:line="71" pos:column="42"/></operator> <name pos:line="71" pos:column="43">CMIT_FMT_ONELINE<pos:position pos:line="71" pos:column="59"/></name></expr>)<pos:position pos:line="71" pos:column="60"/></condition><then pos:line="71" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="25">fputs<pos:position pos:line="72" pos:column="30"/></name><argument_list pos:line="72" pos:column="30">(<argument><expr><literal type="string" pos:line="72" pos:column="31">"commit "<pos:position pos:line="72" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="42">stdout<pos:position pos:line="72" pos:column="48"/></name></expr></argument>)<pos:position pos:line="72" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="50"/></expr_stmt></block></then></if>

		<if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><operator pos:line="74" pos:column="21">!<pos:position pos:line="74" pos:column="22"/></operator><name><name pos:line="74" pos:column="22">opt<pos:position pos:line="74" pos:column="25"/></name><operator pos:line="74" pos:column="25">-&gt;<pos:position pos:line="74" pos:column="30"/></operator><name pos:line="74" pos:column="27">graph<pos:position pos:line="74" pos:column="32"/></name></name></expr>)<pos:position pos:line="74" pos:column="33"/></condition><then pos:line="74" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="25">put_revision_mark<pos:position pos:line="75" pos:column="42"/></name><argument_list pos:line="75" pos:column="42">(<argument><expr><name pos:line="75" pos:column="43">opt<pos:position pos:line="75" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="48">commit<pos:position pos:line="75" pos:column="54"/></name></expr></argument>)<pos:position pos:line="75" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="56"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="76" pos:column="17">fputs<pos:position pos:line="76" pos:column="22"/></name><argument_list pos:line="76" pos:column="22">(<argument><expr><call><name pos:line="76" pos:column="23">find_unique_abbrev<pos:position pos:line="76" pos:column="41"/></name><argument_list pos:line="76" pos:column="41">(<argument><expr><name><name pos:line="76" pos:column="42">commit<pos:position pos:line="76" pos:column="48"/></name><operator pos:line="76" pos:column="48">-&gt;<pos:position pos:line="76" pos:column="53"/></operator><name pos:line="76" pos:column="50">object<pos:position pos:line="76" pos:column="56"/></name><operator pos:line="76" pos:column="56">.<pos:position pos:line="76" pos:column="57"/></operator><name pos:line="76" pos:column="57">sha1<pos:position pos:line="76" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="63">abbrev_commit<pos:position pos:line="76" pos:column="76"/></name></expr></argument>)<pos:position pos:line="76" pos:column="77"/></argument_list></call></expr></argument>,
		      <argument><expr><name pos:line="77" pos:column="23">stdout<pos:position pos:line="77" pos:column="29"/></name></expr></argument>)<pos:position pos:line="77" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="31"/></expr_stmt>
		<if pos:line="78" pos:column="17">if <condition pos:line="78" pos:column="20">(<expr><name><name pos:line="78" pos:column="21">opt<pos:position pos:line="78" pos:column="24"/></name><operator pos:line="78" pos:column="24">-&gt;<pos:position pos:line="78" pos:column="29"/></operator><name pos:line="78" pos:column="26">print_parents<pos:position pos:line="78" pos:column="39"/></name></name></expr>)<pos:position pos:line="78" pos:column="40"/></condition><then pos:line="78" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="25">show_parents<pos:position pos:line="79" pos:column="37"/></name><argument_list pos:line="79" pos:column="37">(<argument><expr><name pos:line="79" pos:column="38">commit<pos:position pos:line="79" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="46">abbrev_commit<pos:position pos:line="79" pos:column="59"/></name></expr></argument>)<pos:position pos:line="79" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="61"/></expr_stmt></block></then></if>
		<if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><name><name pos:line="80" pos:column="21">opt<pos:position pos:line="80" pos:column="24"/></name><operator pos:line="80" pos:column="24">-&gt;<pos:position pos:line="80" pos:column="29"/></operator><name pos:line="80" pos:column="26">children<pos:position pos:line="80" pos:column="34"/></name><operator pos:line="80" pos:column="34">.<pos:position pos:line="80" pos:column="35"/></operator><name pos:line="80" pos:column="35">name<pos:position pos:line="80" pos:column="39"/></name></name></expr>)<pos:position pos:line="80" pos:column="40"/></condition><then pos:line="80" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="25">show_children<pos:position pos:line="81" pos:column="38"/></name><argument_list pos:line="81" pos:column="38">(<argument><expr><name pos:line="81" pos:column="39">opt<pos:position pos:line="81" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="44">commit<pos:position pos:line="81" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="52">abbrev_commit<pos:position pos:line="81" pos:column="65"/></name></expr></argument>)<pos:position pos:line="81" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="67"/></expr_stmt></block></then></if>
		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><name pos:line="82" pos:column="21">parent<pos:position pos:line="82" pos:column="27"/></name></expr>)<pos:position pos:line="82" pos:column="28"/></condition><then pos:line="82" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="25">printf<pos:position pos:line="83" pos:column="31"/></name><argument_list pos:line="83" pos:column="31">(<argument><expr><literal type="string" pos:line="83" pos:column="32">" (from %s)"<pos:position pos:line="83" pos:column="44"/></literal></expr></argument>,
			       <argument><expr><call><name pos:line="84" pos:column="32">find_unique_abbrev<pos:position pos:line="84" pos:column="50"/></name><argument_list pos:line="84" pos:column="50">(<argument><expr><name><name pos:line="84" pos:column="51">parent<pos:position pos:line="84" pos:column="57"/></name><operator pos:line="84" pos:column="57">-&gt;<pos:position pos:line="84" pos:column="62"/></operator><name pos:line="84" pos:column="59">object<pos:position pos:line="84" pos:column="65"/></name><operator pos:line="84" pos:column="65">.<pos:position pos:line="84" pos:column="66"/></operator><name pos:line="84" pos:column="66">sha1<pos:position pos:line="84" pos:column="70"/></name></name></expr></argument>,
						  <argument><expr><name pos:line="85" pos:column="51">abbrev_commit<pos:position pos:line="85" pos:column="64"/></name></expr></argument>)<pos:position pos:line="85" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="85" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="67"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="86" pos:column="17">fputs<pos:position pos:line="86" pos:column="22"/></name><argument_list pos:line="86" pos:column="22">(<argument><expr><call><name pos:line="86" pos:column="23">diff_get_color_opt<pos:position pos:line="86" pos:column="41"/></name><argument_list pos:line="86" pos:column="41">(<argument><expr><operator pos:line="86" pos:column="42">&amp;<pos:position pos:line="86" pos:column="47"/></operator><name><name pos:line="86" pos:column="43">opt<pos:position pos:line="86" pos:column="46"/></name><operator pos:line="86" pos:column="46">-&gt;<pos:position pos:line="86" pos:column="51"/></operator><name pos:line="86" pos:column="48">diffopt<pos:position pos:line="86" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="57">DIFF_RESET<pos:position pos:line="86" pos:column="67"/></name></expr></argument>)<pos:position pos:line="86" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="86" pos:column="70">stdout<pos:position pos:line="86" pos:column="76"/></name></expr></argument>)<pos:position pos:line="86" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="87" pos:column="17">show_decorations<pos:position pos:line="87" pos:column="33"/></name><argument_list pos:line="87" pos:column="33">(<argument><expr><name pos:line="87" pos:column="34">opt<pos:position pos:line="87" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="39">commit<pos:position pos:line="87" pos:column="45"/></name></expr></argument>)<pos:position pos:line="87" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="47"/></expr_stmt>
		<if pos:line="88" pos:column="17">if <condition pos:line="88" pos:column="20">(<expr><name><name pos:line="88" pos:column="21">opt<pos:position pos:line="88" pos:column="24"/></name><operator pos:line="88" pos:column="24">-&gt;<pos:position pos:line="88" pos:column="29"/></operator><name pos:line="88" pos:column="26">commit_format<pos:position pos:line="88" pos:column="39"/></name></name> <operator pos:line="88" pos:column="40">==<pos:position pos:line="88" pos:column="42"/></operator> <name pos:line="88" pos:column="43">CMIT_FMT_ONELINE<pos:position pos:line="88" pos:column="59"/></name></expr>)<pos:position pos:line="88" pos:column="60"/></condition><then pos:line="88" pos:column="60"> <block pos:line="88" pos:column="61">{
			<expr_stmt><expr><call><name pos:line="89" pos:column="25">putchar<pos:position pos:line="89" pos:column="32"/></name><argument_list pos:line="89" pos:column="32">(<argument><expr><literal type="char" pos:line="89" pos:column="33">' '<pos:position pos:line="89" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="90" pos:column="18"/></block></then> <else pos:line="90" pos:column="19">else <block pos:line="90" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="91" pos:column="25">putchar<pos:position pos:line="91" pos:column="32"/></name><argument_list pos:line="91" pos:column="32">(<argument><expr><literal type="char" pos:line="91" pos:column="33">'\n'<pos:position pos:line="91" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="92" pos:column="25">graph_show_oneline<pos:position pos:line="92" pos:column="43"/></name><argument_list pos:line="92" pos:column="43">(<argument><expr><name><name pos:line="92" pos:column="44">opt<pos:position pos:line="92" pos:column="47"/></name><operator pos:line="92" pos:column="47">-&gt;<pos:position pos:line="92" pos:column="52"/></operator><name pos:line="92" pos:column="49">graph<pos:position pos:line="92" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="93" pos:column="18"/></block></else></if>
		<if pos:line="94" pos:column="17">if <condition pos:line="94" pos:column="20">(<expr><name><name pos:line="94" pos:column="21">opt<pos:position pos:line="94" pos:column="24"/></name><operator pos:line="94" pos:column="24">-&gt;<pos:position pos:line="94" pos:column="29"/></operator><name pos:line="94" pos:column="26">reflog_info<pos:position pos:line="94" pos:column="37"/></name></name></expr>)<pos:position pos:line="94" pos:column="38"/></condition><then pos:line="94" pos:column="38"> <block pos:line="94" pos:column="39">{
			<comment type="block" pos:line="95" pos:column="25">/*
			 * setup_revisions() ensures that opt-&gt;reflog_info
			 * and opt-&gt;graph cannot both be set,
			 * so we don't need to worry about printing the
			 * graph info here.
			 */</comment>
			<expr_stmt><expr><call><name pos:line="101" pos:column="25">show_reflog_message<pos:position pos:line="101" pos:column="44"/></name><argument_list pos:line="101" pos:column="44">(<argument><expr><name><name pos:line="101" pos:column="45">opt<pos:position pos:line="101" pos:column="48"/></name><operator pos:line="101" pos:column="48">-&gt;<pos:position pos:line="101" pos:column="53"/></operator><name pos:line="101" pos:column="50">reflog_info<pos:position pos:line="101" pos:column="61"/></name></name></expr></argument>,
					    <argument><expr><name><name pos:line="102" pos:column="45">opt<pos:position pos:line="102" pos:column="48"/></name><operator pos:line="102" pos:column="48">-&gt;<pos:position pos:line="102" pos:column="53"/></operator><name pos:line="102" pos:column="50">commit_format<pos:position pos:line="102" pos:column="63"/></name></name> <operator pos:line="102" pos:column="64">==<pos:position pos:line="102" pos:column="66"/></operator> <name pos:line="102" pos:column="67">CMIT_FMT_ONELINE<pos:position pos:line="102" pos:column="83"/></name></expr></argument>,
					    <argument><expr><operator pos:line="103" pos:column="45">&amp;<pos:position pos:line="103" pos:column="50"/></operator><name><name pos:line="103" pos:column="46">opt<pos:position pos:line="103" pos:column="49"/></name><operator pos:line="103" pos:column="49">-&gt;<pos:position pos:line="103" pos:column="54"/></operator><name pos:line="103" pos:column="51">date_mode<pos:position pos:line="103" pos:column="60"/></name></name></expr></argument>,
					    <argument><expr><name><name pos:line="104" pos:column="45">opt<pos:position pos:line="104" pos:column="48"/></name><operator pos:line="104" pos:column="48">-&gt;<pos:position pos:line="104" pos:column="53"/></operator><name pos:line="104" pos:column="50">date_mode_explicit<pos:position pos:line="104" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="70"/></expr_stmt>
			<if pos:line="105" pos:column="25">if <condition pos:line="105" pos:column="28">(<expr><name><name pos:line="105" pos:column="29">opt<pos:position pos:line="105" pos:column="32"/></name><operator pos:line="105" pos:column="32">-&gt;<pos:position pos:line="105" pos:column="37"/></operator><name pos:line="105" pos:column="34">commit_format<pos:position pos:line="105" pos:column="47"/></name></name> <operator pos:line="105" pos:column="48">==<pos:position pos:line="105" pos:column="50"/></operator> <name pos:line="105" pos:column="51">CMIT_FMT_ONELINE<pos:position pos:line="105" pos:column="67"/></name></expr>)<pos:position pos:line="105" pos:column="68"/></condition><then pos:line="105" pos:column="68">
				<block type="pseudo"><return pos:line="106" pos:column="33">return;<pos:position pos:line="106" pos:column="40"/></return></block></then></if>
		}<pos:position pos:line="107" pos:column="18"/></block></then></if>
	}<pos:position pos:line="108" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="110" pos:column="9">if <condition pos:line="110" pos:column="12">(<expr><name><name pos:line="110" pos:column="13">opt<pos:position pos:line="110" pos:column="16"/></name><operator pos:line="110" pos:column="16">-&gt;<pos:position pos:line="110" pos:column="21"/></operator><name pos:line="110" pos:column="18">show_signature<pos:position pos:line="110" pos:column="32"/></name></name></expr>)<pos:position pos:line="110" pos:column="33"/></condition><then pos:line="110" pos:column="33"> <block pos:line="110" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="111" pos:column="17">show_signature<pos:position pos:line="111" pos:column="31"/></name><argument_list pos:line="111" pos:column="31">(<argument><expr><name pos:line="111" pos:column="32">opt<pos:position pos:line="111" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="37">commit<pos:position pos:line="111" pos:column="43"/></name></expr></argument>)<pos:position pos:line="111" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="112" pos:column="17">show_mergetag<pos:position pos:line="112" pos:column="30"/></name><argument_list pos:line="112" pos:column="30">(<argument><expr><name pos:line="112" pos:column="31">opt<pos:position pos:line="112" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="36">commit<pos:position pos:line="112" pos:column="42"/></name></expr></argument>)<pos:position pos:line="112" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="113" pos:column="10"/></block></then></if>

	<if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><operator pos:line="115" pos:column="13">!<pos:position pos:line="115" pos:column="14"/></operator><call><name pos:line="115" pos:column="14">get_cached_commit_buffer<pos:position pos:line="115" pos:column="38"/></name><argument_list pos:line="115" pos:column="38">(<argument><expr><name pos:line="115" pos:column="39">commit<pos:position pos:line="115" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="47">NULL<pos:position pos:line="115" pos:column="51"/></name></expr></argument>)<pos:position pos:line="115" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="115" pos:column="53"/></condition><then pos:line="115" pos:column="53">
		<block type="pseudo"><return pos:line="116" pos:column="17">return;<pos:position pos:line="116" pos:column="24"/></return></block></then></if>

	<if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><name><name pos:line="118" pos:column="13">opt<pos:position pos:line="118" pos:column="16"/></name><operator pos:line="118" pos:column="16">-&gt;<pos:position pos:line="118" pos:column="21"/></operator><name pos:line="118" pos:column="18">show_notes<pos:position pos:line="118" pos:column="28"/></name></name></expr>)<pos:position pos:line="118" pos:column="29"/></condition><then pos:line="118" pos:column="29"> <block pos:line="118" pos:column="30">{
		<decl_stmt><decl><type><name pos:line="119" pos:column="17">int<pos:position pos:line="119" pos:column="20"/></name></type> <name pos:line="119" pos:column="21">raw<pos:position pos:line="119" pos:column="24"/></name></decl>;<pos:position pos:line="119" pos:column="25"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="120" pos:column="17">struct<pos:position pos:line="120" pos:column="23"/></name> <name pos:line="120" pos:column="24">strbuf<pos:position pos:line="120" pos:column="30"/></name></name></type> <name pos:line="120" pos:column="31">notebuf<pos:position pos:line="120" pos:column="38"/></name> <init pos:line="120" pos:column="39">= <expr><name pos:line="120" pos:column="41">STRBUF_INIT<pos:position pos:line="120" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="120" pos:column="53"/></decl_stmt>

		<expr_stmt><expr><name pos:line="122" pos:column="17">raw<pos:position pos:line="122" pos:column="20"/></name> <operator pos:line="122" pos:column="21">=<pos:position pos:line="122" pos:column="22"/></operator> <operator pos:line="122" pos:column="23">(<pos:position pos:line="122" pos:column="24"/></operator><name><name pos:line="122" pos:column="24">opt<pos:position pos:line="122" pos:column="27"/></name><operator pos:line="122" pos:column="27">-&gt;<pos:position pos:line="122" pos:column="32"/></operator><name pos:line="122" pos:column="29">commit_format<pos:position pos:line="122" pos:column="42"/></name></name> <operator pos:line="122" pos:column="43">==<pos:position pos:line="122" pos:column="45"/></operator> <name pos:line="122" pos:column="46">CMIT_FMT_USERFORMAT<pos:position pos:line="122" pos:column="65"/></name><operator pos:line="122" pos:column="65">)<pos:position pos:line="122" pos:column="66"/></operator></expr>;<pos:position pos:line="122" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="123" pos:column="17">format_display_notes<pos:position pos:line="123" pos:column="37"/></name><argument_list pos:line="123" pos:column="37">(<argument><expr><name><name pos:line="123" pos:column="38">commit<pos:position pos:line="123" pos:column="44"/></name><operator pos:line="123" pos:column="44">-&gt;<pos:position pos:line="123" pos:column="49"/></operator><name pos:line="123" pos:column="46">object<pos:position pos:line="123" pos:column="52"/></name><operator pos:line="123" pos:column="52">.<pos:position pos:line="123" pos:column="53"/></operator><name pos:line="123" pos:column="53">sha1<pos:position pos:line="123" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="123" pos:column="59">&amp;<pos:position pos:line="123" pos:column="64"/></operator><name pos:line="123" pos:column="60">notebuf<pos:position pos:line="123" pos:column="67"/></name></expr></argument>,
				     <argument><expr><call><name pos:line="124" pos:column="38">get_log_output_encoding<pos:position pos:line="124" pos:column="61"/></name><argument_list pos:line="124" pos:column="61">()<pos:position pos:line="124" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="124" pos:column="65">raw<pos:position pos:line="124" pos:column="68"/></name></expr></argument>)<pos:position pos:line="124" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="125" pos:column="17">ctx<pos:position pos:line="125" pos:column="20"/></name><operator pos:line="125" pos:column="20">.<pos:position pos:line="125" pos:column="21"/></operator><name pos:line="125" pos:column="21">notes_message<pos:position pos:line="125" pos:column="34"/></name></name> <operator pos:line="125" pos:column="35">=<pos:position pos:line="125" pos:column="36"/></operator> <ternary><condition><expr><name><name pos:line="125" pos:column="37">notebuf<pos:position pos:line="125" pos:column="44"/></name><operator pos:line="125" pos:column="44">.<pos:position pos:line="125" pos:column="45"/></operator><name pos:line="125" pos:column="45">len<pos:position pos:line="125" pos:column="48"/></name></name></expr>
			?<pos:position pos:line="126" pos:column="26"/></condition><then pos:line="126" pos:column="26"> <expr><call><name pos:line="126" pos:column="27">strbuf_detach<pos:position pos:line="126" pos:column="40"/></name><argument_list pos:line="126" pos:column="40">(<argument><expr><operator pos:line="126" pos:column="41">&amp;<pos:position pos:line="126" pos:column="46"/></operator><name pos:line="126" pos:column="42">notebuf<pos:position pos:line="126" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="51">NULL<pos:position pos:line="126" pos:column="55"/></name></expr></argument>)<pos:position pos:line="126" pos:column="56"/></argument_list></call></expr>
			<pos:position pos:line="127" pos:column="4"/></then><else pos:line="127" pos:column="25">: <expr><call><name pos:line="127" pos:column="27">xcalloc<pos:position pos:line="127" pos:column="34"/></name><argument_list pos:line="127" pos:column="34">(<argument><expr><literal type="number" pos:line="127" pos:column="35">1<pos:position pos:line="127" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="38">1<pos:position pos:line="127" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="40"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="127" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="128" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="130" pos:column="9">/*
	 * And then the pretty-printed message itself
	 */</comment>
	<if pos:line="133" pos:column="9">if <condition pos:line="133" pos:column="12">(<expr><name><name pos:line="133" pos:column="13">ctx<pos:position pos:line="133" pos:column="16"/></name><operator pos:line="133" pos:column="16">.<pos:position pos:line="133" pos:column="17"/></operator><name pos:line="133" pos:column="17">need_8bit_cte<pos:position pos:line="133" pos:column="30"/></name></name> <operator pos:line="133" pos:column="31">&gt;=<pos:position pos:line="133" pos:column="36"/></operator> <literal type="number" pos:line="133" pos:column="34">0<pos:position pos:line="133" pos:column="35"/></literal> <operator pos:line="133" pos:column="36">&amp;&amp;<pos:position pos:line="133" pos:column="46"/></operator> <name><name pos:line="133" pos:column="39">opt<pos:position pos:line="133" pos:column="42"/></name><operator pos:line="133" pos:column="42">-&gt;<pos:position pos:line="133" pos:column="47"/></operator><name pos:line="133" pos:column="44">add_signoff<pos:position pos:line="133" pos:column="55"/></name></name></expr>)<pos:position pos:line="133" pos:column="56"/></condition><then pos:line="133" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="134" pos:column="17">ctx<pos:position pos:line="134" pos:column="20"/></name><operator pos:line="134" pos:column="20">.<pos:position pos:line="134" pos:column="21"/></operator><name pos:line="134" pos:column="21">need_8bit_cte<pos:position pos:line="134" pos:column="34"/></name></name> <operator pos:line="134" pos:column="35">=<pos:position pos:line="134" pos:column="36"/></operator>
			<call><name pos:line="135" pos:column="25">has_non_ascii<pos:position pos:line="135" pos:column="38"/></name><argument_list pos:line="135" pos:column="38">(<argument><expr><call><name pos:line="135" pos:column="39">fmt_name<pos:position pos:line="135" pos:column="47"/></name><argument_list pos:line="135" pos:column="47">(<argument><expr><call><name pos:line="135" pos:column="48">getenv<pos:position pos:line="135" pos:column="54"/></name><argument_list pos:line="135" pos:column="54">(<argument><expr><literal type="string" pos:line="135" pos:column="55">"GIT_COMMITTER_NAME"<pos:position pos:line="135" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="76"/></argument_list></call></expr></argument>,
					       <argument><expr><call><name pos:line="136" pos:column="48">getenv<pos:position pos:line="136" pos:column="54"/></name><argument_list pos:line="136" pos:column="54">(<argument><expr><literal type="string" pos:line="136" pos:column="55">"GIT_COMMITTER_EMAIL"<pos:position pos:line="136" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="136" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="136" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="80"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="137" pos:column="9">ctx<pos:position pos:line="137" pos:column="12"/></name><operator pos:line="137" pos:column="12">.<pos:position pos:line="137" pos:column="13"/></operator><name pos:line="137" pos:column="13">date_mode<pos:position pos:line="137" pos:column="22"/></name></name> <operator pos:line="137" pos:column="23">=<pos:position pos:line="137" pos:column="24"/></operator> <name><name pos:line="137" pos:column="25">opt<pos:position pos:line="137" pos:column="28"/></name><operator pos:line="137" pos:column="28">-&gt;<pos:position pos:line="137" pos:column="33"/></operator><name pos:line="137" pos:column="30">date_mode<pos:position pos:line="137" pos:column="39"/></name></name></expr>;<pos:position pos:line="137" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="138" pos:column="9">ctx<pos:position pos:line="138" pos:column="12"/></name><operator pos:line="138" pos:column="12">.<pos:position pos:line="138" pos:column="13"/></operator><name pos:line="138" pos:column="13">date_mode_explicit<pos:position pos:line="138" pos:column="31"/></name></name> <operator pos:line="138" pos:column="32">=<pos:position pos:line="138" pos:column="33"/></operator> <name><name pos:line="138" pos:column="34">opt<pos:position pos:line="138" pos:column="37"/></name><operator pos:line="138" pos:column="37">-&gt;<pos:position pos:line="138" pos:column="42"/></operator><name pos:line="138" pos:column="39">date_mode_explicit<pos:position pos:line="138" pos:column="57"/></name></name></expr>;<pos:position pos:line="138" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="139" pos:column="9">ctx<pos:position pos:line="139" pos:column="12"/></name><operator pos:line="139" pos:column="12">.<pos:position pos:line="139" pos:column="13"/></operator><name pos:line="139" pos:column="13">abbrev<pos:position pos:line="139" pos:column="19"/></name></name> <operator pos:line="139" pos:column="20">=<pos:position pos:line="139" pos:column="21"/></operator> <name><name pos:line="139" pos:column="22">opt<pos:position pos:line="139" pos:column="25"/></name><operator pos:line="139" pos:column="25">-&gt;<pos:position pos:line="139" pos:column="30"/></operator><name pos:line="139" pos:column="27">diffopt<pos:position pos:line="139" pos:column="34"/></name><operator pos:line="139" pos:column="34">.<pos:position pos:line="139" pos:column="35"/></operator><name pos:line="139" pos:column="35">abbrev<pos:position pos:line="139" pos:column="41"/></name></name></expr>;<pos:position pos:line="139" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="140" pos:column="9">ctx<pos:position pos:line="140" pos:column="12"/></name><operator pos:line="140" pos:column="12">.<pos:position pos:line="140" pos:column="13"/></operator><name pos:line="140" pos:column="13">after_subject<pos:position pos:line="140" pos:column="26"/></name></name> <operator pos:line="140" pos:column="27">=<pos:position pos:line="140" pos:column="28"/></operator> <name pos:line="140" pos:column="29">extra_headers<pos:position pos:line="140" pos:column="42"/></name></expr>;<pos:position pos:line="140" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="141" pos:column="9">ctx<pos:position pos:line="141" pos:column="12"/></name><operator pos:line="141" pos:column="12">.<pos:position pos:line="141" pos:column="13"/></operator><name pos:line="141" pos:column="13">preserve_subject<pos:position pos:line="141" pos:column="29"/></name></name> <operator pos:line="141" pos:column="30">=<pos:position pos:line="141" pos:column="31"/></operator> <name><name pos:line="141" pos:column="32">opt<pos:position pos:line="141" pos:column="35"/></name><operator pos:line="141" pos:column="35">-&gt;<pos:position pos:line="141" pos:column="40"/></operator><name pos:line="141" pos:column="37">preserve_subject<pos:position pos:line="141" pos:column="53"/></name></name></expr>;<pos:position pos:line="141" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="142" pos:column="9">ctx<pos:position pos:line="142" pos:column="12"/></name><operator pos:line="142" pos:column="12">.<pos:position pos:line="142" pos:column="13"/></operator><name pos:line="142" pos:column="13">reflog_info<pos:position pos:line="142" pos:column="24"/></name></name> <operator pos:line="142" pos:column="25">=<pos:position pos:line="142" pos:column="26"/></operator> <name><name pos:line="142" pos:column="27">opt<pos:position pos:line="142" pos:column="30"/></name><operator pos:line="142" pos:column="30">-&gt;<pos:position pos:line="142" pos:column="35"/></operator><name pos:line="142" pos:column="32">reflog_info<pos:position pos:line="142" pos:column="43"/></name></name></expr>;<pos:position pos:line="142" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="143" pos:column="9">ctx<pos:position pos:line="143" pos:column="12"/></name><operator pos:line="143" pos:column="12">.<pos:position pos:line="143" pos:column="13"/></operator><name pos:line="143" pos:column="13">fmt<pos:position pos:line="143" pos:column="16"/></name></name> <operator pos:line="143" pos:column="17">=<pos:position pos:line="143" pos:column="18"/></operator> <name><name pos:line="143" pos:column="19">opt<pos:position pos:line="143" pos:column="22"/></name><operator pos:line="143" pos:column="22">-&gt;<pos:position pos:line="143" pos:column="27"/></operator><name pos:line="143" pos:column="24">commit_format<pos:position pos:line="143" pos:column="37"/></name></name></expr>;<pos:position pos:line="143" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="144" pos:column="9">ctx<pos:position pos:line="144" pos:column="12"/></name><operator pos:line="144" pos:column="12">.<pos:position pos:line="144" pos:column="13"/></operator><name pos:line="144" pos:column="13">mailmap<pos:position pos:line="144" pos:column="20"/></name></name> <operator pos:line="144" pos:column="21">=<pos:position pos:line="144" pos:column="22"/></operator> <name><name pos:line="144" pos:column="23">opt<pos:position pos:line="144" pos:column="26"/></name><operator pos:line="144" pos:column="26">-&gt;<pos:position pos:line="144" pos:column="31"/></operator><name pos:line="144" pos:column="28">mailmap<pos:position pos:line="144" pos:column="35"/></name></name></expr>;<pos:position pos:line="144" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="145" pos:column="9">ctx<pos:position pos:line="145" pos:column="12"/></name><operator pos:line="145" pos:column="12">.<pos:position pos:line="145" pos:column="13"/></operator><name pos:line="145" pos:column="13">color<pos:position pos:line="145" pos:column="18"/></name></name> <operator pos:line="145" pos:column="19">=<pos:position pos:line="145" pos:column="20"/></operator> <name><name pos:line="145" pos:column="21">opt<pos:position pos:line="145" pos:column="24"/></name><operator pos:line="145" pos:column="24">-&gt;<pos:position pos:line="145" pos:column="29"/></operator><name pos:line="145" pos:column="26">diffopt<pos:position pos:line="145" pos:column="33"/></name><operator pos:line="145" pos:column="33">.<pos:position pos:line="145" pos:column="34"/></operator><name pos:line="145" pos:column="34">use_color<pos:position pos:line="145" pos:column="43"/></name></name></expr>;<pos:position pos:line="145" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="146" pos:column="9">ctx<pos:position pos:line="146" pos:column="12"/></name><operator pos:line="146" pos:column="12">.<pos:position pos:line="146" pos:column="13"/></operator><name pos:line="146" pos:column="13">output_encoding<pos:position pos:line="146" pos:column="28"/></name></name> <operator pos:line="146" pos:column="29">=<pos:position pos:line="146" pos:column="30"/></operator> <call><name pos:line="146" pos:column="31">get_log_output_encoding<pos:position pos:line="146" pos:column="54"/></name><argument_list pos:line="146" pos:column="54">()<pos:position pos:line="146" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="57"/></expr_stmt>
	<if pos:line="147" pos:column="9">if <condition pos:line="147" pos:column="12">(<expr><name><name pos:line="147" pos:column="13">opt<pos:position pos:line="147" pos:column="16"/></name><operator pos:line="147" pos:column="16">-&gt;<pos:position pos:line="147" pos:column="21"/></operator><name pos:line="147" pos:column="18">from_ident<pos:position pos:line="147" pos:column="28"/></name><operator pos:line="147" pos:column="28">.<pos:position pos:line="147" pos:column="29"/></operator><name pos:line="147" pos:column="29">mail_begin<pos:position pos:line="147" pos:column="39"/></name></name> <operator pos:line="147" pos:column="40">&amp;&amp;<pos:position pos:line="147" pos:column="50"/></operator> <name><name pos:line="147" pos:column="43">opt<pos:position pos:line="147" pos:column="46"/></name><operator pos:line="147" pos:column="46">-&gt;<pos:position pos:line="147" pos:column="51"/></operator><name pos:line="147" pos:column="48">from_ident<pos:position pos:line="147" pos:column="58"/></name><operator pos:line="147" pos:column="58">.<pos:position pos:line="147" pos:column="59"/></operator><name pos:line="147" pos:column="59">name_begin<pos:position pos:line="147" pos:column="69"/></name></name></expr>)<pos:position pos:line="147" pos:column="70"/></condition><then pos:line="147" pos:column="70">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="148" pos:column="17">ctx<pos:position pos:line="148" pos:column="20"/></name><operator pos:line="148" pos:column="20">.<pos:position pos:line="148" pos:column="21"/></operator><name pos:line="148" pos:column="21">from_ident<pos:position pos:line="148" pos:column="31"/></name></name> <operator pos:line="148" pos:column="32">=<pos:position pos:line="148" pos:column="33"/></operator> <operator pos:line="148" pos:column="34">&amp;<pos:position pos:line="148" pos:column="39"/></operator><name><name pos:line="148" pos:column="35">opt<pos:position pos:line="148" pos:column="38"/></name><operator pos:line="148" pos:column="38">-&gt;<pos:position pos:line="148" pos:column="43"/></operator><name pos:line="148" pos:column="40">from_ident<pos:position pos:line="148" pos:column="50"/></name></name></expr>;<pos:position pos:line="148" pos:column="51"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="149" pos:column="9">pretty_print_commit<pos:position pos:line="149" pos:column="28"/></name><argument_list pos:line="149" pos:column="28">(<argument><expr><operator pos:line="149" pos:column="29">&amp;<pos:position pos:line="149" pos:column="34"/></operator><name pos:line="149" pos:column="30">ctx<pos:position pos:line="149" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="35">commit<pos:position pos:line="149" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="149" pos:column="43">&amp;<pos:position pos:line="149" pos:column="48"/></operator><name pos:line="149" pos:column="44">msgbuf<pos:position pos:line="149" pos:column="50"/></name></expr></argument>)<pos:position pos:line="149" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="52"/></expr_stmt>

	<if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><name><name pos:line="151" pos:column="13">opt<pos:position pos:line="151" pos:column="16"/></name><operator pos:line="151" pos:column="16">-&gt;<pos:position pos:line="151" pos:column="21"/></operator><name pos:line="151" pos:column="18">add_signoff<pos:position pos:line="151" pos:column="29"/></name></name></expr>)<pos:position pos:line="151" pos:column="30"/></condition><then pos:line="151" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="152" pos:column="17">append_signoff<pos:position pos:line="152" pos:column="31"/></name><argument_list pos:line="152" pos:column="31">(<argument><expr><operator pos:line="152" pos:column="32">&amp;<pos:position pos:line="152" pos:column="37"/></operator><name pos:line="152" pos:column="33">msgbuf<pos:position pos:line="152" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="152" pos:column="41">0<pos:position pos:line="152" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="152" pos:column="44">APPEND_SIGNOFF_DEDUP<pos:position pos:line="152" pos:column="64"/></name></expr></argument>)<pos:position pos:line="152" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="66"/></expr_stmt></block></then></if>

	<if pos:line="154" pos:column="9">if <condition pos:line="154" pos:column="12">(<expr><operator pos:line="154" pos:column="13">(<pos:position pos:line="154" pos:column="14"/></operator><name><name pos:line="154" pos:column="14">ctx<pos:position pos:line="154" pos:column="17"/></name><operator pos:line="154" pos:column="17">.<pos:position pos:line="154" pos:column="18"/></operator><name pos:line="154" pos:column="18">fmt<pos:position pos:line="154" pos:column="21"/></name></name> <operator pos:line="154" pos:column="22">!=<pos:position pos:line="154" pos:column="24"/></operator> <name pos:line="154" pos:column="25">CMIT_FMT_USERFORMAT<pos:position pos:line="154" pos:column="44"/></name><operator pos:line="154" pos:column="44">)<pos:position pos:line="154" pos:column="45"/></operator> <operator pos:line="154" pos:column="46">&amp;&amp;<pos:position pos:line="154" pos:column="56"/></operator>
	    <name><name pos:line="155" pos:column="13">ctx<pos:position pos:line="155" pos:column="16"/></name><operator pos:line="155" pos:column="16">.<pos:position pos:line="155" pos:column="17"/></operator><name pos:line="155" pos:column="17">notes_message<pos:position pos:line="155" pos:column="30"/></name></name> <operator pos:line="155" pos:column="31">&amp;&amp;<pos:position pos:line="155" pos:column="41"/></operator> <operator pos:line="155" pos:column="34">*<pos:position pos:line="155" pos:column="35"/></operator><name><name pos:line="155" pos:column="35">ctx<pos:position pos:line="155" pos:column="38"/></name><operator pos:line="155" pos:column="38">.<pos:position pos:line="155" pos:column="39"/></operator><name pos:line="155" pos:column="39">notes_message<pos:position pos:line="155" pos:column="52"/></name></name></expr>)<pos:position pos:line="155" pos:column="53"/></condition><then pos:line="155" pos:column="53"> <block pos:line="155" pos:column="54">{
		<if pos:line="156" pos:column="17">if <condition pos:line="156" pos:column="20">(<expr><name><name pos:line="156" pos:column="21">ctx<pos:position pos:line="156" pos:column="24"/></name><operator pos:line="156" pos:column="24">.<pos:position pos:line="156" pos:column="25"/></operator><name pos:line="156" pos:column="25">fmt<pos:position pos:line="156" pos:column="28"/></name></name> <operator pos:line="156" pos:column="29">==<pos:position pos:line="156" pos:column="31"/></operator> <name pos:line="156" pos:column="32">CMIT_FMT_EMAIL<pos:position pos:line="156" pos:column="46"/></name></expr>)<pos:position pos:line="156" pos:column="47"/></condition><then pos:line="156" pos:column="47"> <block pos:line="156" pos:column="48">{
			<expr_stmt><expr><call><name pos:line="157" pos:column="25">strbuf_addstr<pos:position pos:line="157" pos:column="38"/></name><argument_list pos:line="157" pos:column="38">(<argument><expr><operator pos:line="157" pos:column="39">&amp;<pos:position pos:line="157" pos:column="44"/></operator><name pos:line="157" pos:column="40">msgbuf<pos:position pos:line="157" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="48">"---\n"<pos:position pos:line="157" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="158" pos:column="25">opt<pos:position pos:line="158" pos:column="28"/></name><operator pos:line="158" pos:column="28">-&gt;<pos:position pos:line="158" pos:column="33"/></operator><name pos:line="158" pos:column="30">shown_dashes<pos:position pos:line="158" pos:column="42"/></name></name> <operator pos:line="158" pos:column="43">=<pos:position pos:line="158" pos:column="44"/></operator> <literal type="number" pos:line="158" pos:column="45">1<pos:position pos:line="158" pos:column="46"/></literal></expr>;<pos:position pos:line="158" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="159" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="160" pos:column="17">strbuf_addstr<pos:position pos:line="160" pos:column="30"/></name><argument_list pos:line="160" pos:column="30">(<argument><expr><operator pos:line="160" pos:column="31">&amp;<pos:position pos:line="160" pos:column="36"/></operator><name pos:line="160" pos:column="32">msgbuf<pos:position pos:line="160" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="160" pos:column="40">ctx<pos:position pos:line="160" pos:column="43"/></name><operator pos:line="160" pos:column="43">.<pos:position pos:line="160" pos:column="44"/></operator><name pos:line="160" pos:column="44">notes_message<pos:position pos:line="160" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="160" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="161" pos:column="10"/></block></then></if>

	<if pos:line="163" pos:column="9">if <condition pos:line="163" pos:column="12">(<expr><name><name pos:line="163" pos:column="13">opt<pos:position pos:line="163" pos:column="16"/></name><operator pos:line="163" pos:column="16">-&gt;<pos:position pos:line="163" pos:column="21"/></operator><name pos:line="163" pos:column="18">show_log_size<pos:position pos:line="163" pos:column="31"/></name></name></expr>)<pos:position pos:line="163" pos:column="32"/></condition><then pos:line="163" pos:column="32"> <block pos:line="163" pos:column="33">{
		<expr_stmt><expr><call><name pos:line="164" pos:column="17">printf<pos:position pos:line="164" pos:column="23"/></name><argument_list pos:line="164" pos:column="23">(<argument><expr><literal type="string" pos:line="164" pos:column="24">"log size %i\n"<pos:position pos:line="164" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="164" pos:column="41">(<pos:position pos:line="164" pos:column="42"/></operator><name pos:line="164" pos:column="42">int<pos:position pos:line="164" pos:column="45"/></name><operator pos:line="164" pos:column="45">)<pos:position pos:line="164" pos:column="46"/></operator><name><name pos:line="164" pos:column="46">msgbuf<pos:position pos:line="164" pos:column="52"/></name><operator pos:line="164" pos:column="52">.<pos:position pos:line="164" pos:column="53"/></operator><name pos:line="164" pos:column="53">len<pos:position pos:line="164" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="164" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="165" pos:column="17">graph_show_oneline<pos:position pos:line="165" pos:column="35"/></name><argument_list pos:line="165" pos:column="35">(<argument><expr><name><name pos:line="165" pos:column="36">opt<pos:position pos:line="165" pos:column="39"/></name><operator pos:line="165" pos:column="39">-&gt;<pos:position pos:line="165" pos:column="44"/></operator><name pos:line="165" pos:column="41">graph<pos:position pos:line="165" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="165" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="166" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="168" pos:column="9">/*
	 * Set opt-&gt;missing_newline if msgbuf doesn't
	 * end in a newline (including if it is empty)
	 */</comment>
	<if pos:line="172" pos:column="9">if <condition pos:line="172" pos:column="12">(<expr><operator pos:line="172" pos:column="13">!<pos:position pos:line="172" pos:column="14"/></operator><name><name pos:line="172" pos:column="14">msgbuf<pos:position pos:line="172" pos:column="20"/></name><operator pos:line="172" pos:column="20">.<pos:position pos:line="172" pos:column="21"/></operator><name pos:line="172" pos:column="21">len<pos:position pos:line="172" pos:column="24"/></name></name> <operator pos:line="172" pos:column="25">||<pos:position pos:line="172" pos:column="27"/></operator> <name><name pos:line="172" pos:column="28">msgbuf<pos:position pos:line="172" pos:column="34"/></name><operator pos:line="172" pos:column="34">.<pos:position pos:line="172" pos:column="35"/></operator><name pos:line="172" pos:column="35">buf<pos:position pos:line="172" pos:column="38"/></name><index pos:line="172" pos:column="38">[<expr><name><name pos:line="172" pos:column="39">msgbuf<pos:position pos:line="172" pos:column="45"/></name><operator pos:line="172" pos:column="45">.<pos:position pos:line="172" pos:column="46"/></operator><name pos:line="172" pos:column="46">len<pos:position pos:line="172" pos:column="49"/></name></name> <operator pos:line="172" pos:column="50">-<pos:position pos:line="172" pos:column="51"/></operator> <literal type="number" pos:line="172" pos:column="52">1<pos:position pos:line="172" pos:column="53"/></literal></expr>]<pos:position pos:line="172" pos:column="54"/></index></name> <operator pos:line="172" pos:column="55">!=<pos:position pos:line="172" pos:column="57"/></operator> <literal type="char" pos:line="172" pos:column="58">'\n'<pos:position pos:line="172" pos:column="62"/></literal></expr>)<pos:position pos:line="172" pos:column="63"/></condition><then pos:line="172" pos:column="63">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="173" pos:column="17">opt<pos:position pos:line="173" pos:column="20"/></name><operator pos:line="173" pos:column="20">-&gt;<pos:position pos:line="173" pos:column="25"/></operator><name pos:line="173" pos:column="22">missing_newline<pos:position pos:line="173" pos:column="37"/></name></name> <operator pos:line="173" pos:column="38">=<pos:position pos:line="173" pos:column="39"/></operator> <literal type="number" pos:line="173" pos:column="40">1<pos:position pos:line="173" pos:column="41"/></literal></expr>;<pos:position pos:line="173" pos:column="42"/></expr_stmt></block></then>
	<else pos:line="174" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="175" pos:column="17">opt<pos:position pos:line="175" pos:column="20"/></name><operator pos:line="175" pos:column="20">-&gt;<pos:position pos:line="175" pos:column="25"/></operator><name pos:line="175" pos:column="22">missing_newline<pos:position pos:line="175" pos:column="37"/></name></name> <operator pos:line="175" pos:column="38">=<pos:position pos:line="175" pos:column="39"/></operator> <literal type="number" pos:line="175" pos:column="40">0<pos:position pos:line="175" pos:column="41"/></literal></expr>;<pos:position pos:line="175" pos:column="42"/></expr_stmt></block></else></if>

	<if pos:line="177" pos:column="9">if <condition pos:line="177" pos:column="12">(<expr><name><name pos:line="177" pos:column="13">opt<pos:position pos:line="177" pos:column="16"/></name><operator pos:line="177" pos:column="16">-&gt;<pos:position pos:line="177" pos:column="21"/></operator><name pos:line="177" pos:column="18">graph<pos:position pos:line="177" pos:column="23"/></name></name></expr>)<pos:position pos:line="177" pos:column="24"/></condition><then pos:line="177" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="178" pos:column="17">graph_show_commit_msg<pos:position pos:line="178" pos:column="38"/></name><argument_list pos:line="178" pos:column="38">(<argument><expr><name><name pos:line="178" pos:column="39">opt<pos:position pos:line="178" pos:column="42"/></name><operator pos:line="178" pos:column="42">-&gt;<pos:position pos:line="178" pos:column="47"/></operator><name pos:line="178" pos:column="44">graph<pos:position pos:line="178" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="178" pos:column="51">&amp;<pos:position pos:line="178" pos:column="56"/></operator><name pos:line="178" pos:column="52">msgbuf<pos:position pos:line="178" pos:column="58"/></name></expr></argument>)<pos:position pos:line="178" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="60"/></expr_stmt></block></then>
	<else pos:line="179" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="180" pos:column="17">fwrite<pos:position pos:line="180" pos:column="23"/></name><argument_list pos:line="180" pos:column="23">(<argument><expr><name><name pos:line="180" pos:column="24">msgbuf<pos:position pos:line="180" pos:column="30"/></name><operator pos:line="180" pos:column="30">.<pos:position pos:line="180" pos:column="31"/></operator><name pos:line="180" pos:column="31">buf<pos:position pos:line="180" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="180" pos:column="36">sizeof<argument_list pos:line="180" pos:column="42">(<argument><expr><name pos:line="180" pos:column="43">char<pos:position pos:line="180" pos:column="47"/></name></expr></argument>)<pos:position pos:line="180" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="180" pos:column="50">msgbuf<pos:position pos:line="180" pos:column="56"/></name><operator pos:line="180" pos:column="56">.<pos:position pos:line="180" pos:column="57"/></operator><name pos:line="180" pos:column="57">len<pos:position pos:line="180" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="62">stdout<pos:position pos:line="180" pos:column="68"/></name></expr></argument>)<pos:position pos:line="180" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="70"/></expr_stmt></block></else></if>
	<if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><name><name pos:line="181" pos:column="13">opt<pos:position pos:line="181" pos:column="16"/></name><operator pos:line="181" pos:column="16">-&gt;<pos:position pos:line="181" pos:column="21"/></operator><name pos:line="181" pos:column="18">use_terminator<pos:position pos:line="181" pos:column="32"/></name></name> <operator pos:line="181" pos:column="33">&amp;&amp;<pos:position pos:line="181" pos:column="43"/></operator> <operator pos:line="181" pos:column="36">!<pos:position pos:line="181" pos:column="37"/></operator><call><name pos:line="181" pos:column="37">commit_format_is_empty<pos:position pos:line="181" pos:column="59"/></name><argument_list pos:line="181" pos:column="59">(<argument><expr><name><name pos:line="181" pos:column="60">opt<pos:position pos:line="181" pos:column="63"/></name><operator pos:line="181" pos:column="63">-&gt;<pos:position pos:line="181" pos:column="68"/></operator><name pos:line="181" pos:column="65">commit_format<pos:position pos:line="181" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="181" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="181" pos:column="80"/></condition><then pos:line="181" pos:column="80"> <block pos:line="181" pos:column="81">{
		<if pos:line="182" pos:column="17">if <condition pos:line="182" pos:column="20">(<expr><operator pos:line="182" pos:column="21">!<pos:position pos:line="182" pos:column="22"/></operator><name><name pos:line="182" pos:column="22">opt<pos:position pos:line="182" pos:column="25"/></name><operator pos:line="182" pos:column="25">-&gt;<pos:position pos:line="182" pos:column="30"/></operator><name pos:line="182" pos:column="27">missing_newline<pos:position pos:line="182" pos:column="42"/></name></name></expr>)<pos:position pos:line="182" pos:column="43"/></condition><then pos:line="182" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="183" pos:column="25">graph_show_padding<pos:position pos:line="183" pos:column="43"/></name><argument_list pos:line="183" pos:column="43">(<argument><expr><name><name pos:line="183" pos:column="44">opt<pos:position pos:line="183" pos:column="47"/></name><operator pos:line="183" pos:column="47">-&gt;<pos:position pos:line="183" pos:column="52"/></operator><name pos:line="183" pos:column="49">graph<pos:position pos:line="183" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="183" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="56"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="184" pos:column="17">putchar<pos:position pos:line="184" pos:column="24"/></name><argument_list pos:line="184" pos:column="24">(<argument><expr><name><name pos:line="184" pos:column="25">opt<pos:position pos:line="184" pos:column="28"/></name><operator pos:line="184" pos:column="28">-&gt;<pos:position pos:line="184" pos:column="33"/></operator><name pos:line="184" pos:column="30">diffopt<pos:position pos:line="184" pos:column="37"/></name><operator pos:line="184" pos:column="37">.<pos:position pos:line="184" pos:column="38"/></operator><name pos:line="184" pos:column="38">line_termination<pos:position pos:line="184" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="184" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="185" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="187" pos:column="9">strbuf_release<pos:position pos:line="187" pos:column="23"/></name><argument_list pos:line="187" pos:column="23">(<argument><expr><operator pos:line="187" pos:column="24">&amp;<pos:position pos:line="187" pos:column="29"/></operator><name pos:line="187" pos:column="25">msgbuf<pos:position pos:line="187" pos:column="31"/></name></expr></argument>)<pos:position pos:line="187" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="188" pos:column="9">free<pos:position pos:line="188" pos:column="13"/></name><argument_list pos:line="188" pos:column="13">(<argument><expr><name><name pos:line="188" pos:column="14">ctx<pos:position pos:line="188" pos:column="17"/></name><operator pos:line="188" pos:column="17">.<pos:position pos:line="188" pos:column="18"/></operator><name pos:line="188" pos:column="18">notes_message<pos:position pos:line="188" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="188" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="33"/></expr_stmt>
}<pos:position pos:line="189" pos:column="2"/></block></function></unit>

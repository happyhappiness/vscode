<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_672_git-2.5.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">commit_extra_header<pos:position pos:line="1" pos:column="34"/></name></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">read_commit_extra_header_lines<pos:position pos:line="1" pos:column="66"/></name><parameter_list pos:line="1" pos:column="66">(
	<parameter><decl><type><specifier pos:line="2" pos:column="9">const<pos:position pos:line="2" pos:column="14"/></specifier> <name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">buffer<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">size_t<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">size<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>,
	<parameter><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier><modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">exclude<pos:position pos:line="3" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="30"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit_extra_header<pos:position pos:line="5" pos:column="35"/></name></name> <modifier pos:line="5" pos:column="36">*<pos:position pos:line="5" pos:column="37"/></modifier></type><name pos:line="5" pos:column="37">extra<pos:position pos:line="5" pos:column="42"/></name> <init pos:line="5" pos:column="43">= <expr><name pos:line="5" pos:column="45">NULL<pos:position pos:line="5" pos:column="49"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="51">*<pos:position pos:line="5" pos:column="52"/></modifier><modifier pos:line="5" pos:column="52">*<pos:position pos:line="5" pos:column="53"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="53">tail<pos:position pos:line="5" pos:column="57"/></name> <init pos:line="5" pos:column="58">= <expr><operator pos:line="5" pos:column="60">&amp;<pos:position pos:line="5" pos:column="65"/></operator><name pos:line="5" pos:column="61">extra<pos:position pos:line="5" pos:column="66"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="68">*<pos:position pos:line="5" pos:column="69"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="69">it<pos:position pos:line="5" pos:column="71"/></name> <init pos:line="5" pos:column="72">= <expr><name pos:line="5" pos:column="74">NULL<pos:position pos:line="5" pos:column="78"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="79"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">line<pos:position pos:line="6" pos:column="25"/></name></decl>, <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="28">next<pos:position pos:line="6" pos:column="32"/></name></decl>, <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="35">eof<pos:position pos:line="6" pos:column="38"/></name></decl>, <modifier pos:line="6" pos:column="40">*<pos:position pos:line="6" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="41">eob<pos:position pos:line="6" pos:column="44"/></name></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">buf<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name pos:line="7" pos:column="29">STRBUF_INIT<pos:position pos:line="7" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>

	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">line<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">buffer<pos:position pos:line="9" pos:column="27"/></name></expr><operator pos:line="9" pos:column="27">,<pos:position pos:line="9" pos:column="28"/></operator> <expr><name pos:line="9" pos:column="29">eob<pos:position pos:line="9" pos:column="32"/></name> <operator pos:line="9" pos:column="33">=<pos:position pos:line="9" pos:column="34"/></operator> <name pos:line="9" pos:column="35">line<pos:position pos:line="9" pos:column="39"/></name> <operator pos:line="9" pos:column="40">+<pos:position pos:line="9" pos:column="41"/></operator> <name pos:line="9" pos:column="42">size<pos:position pos:line="9" pos:column="46"/></name></expr>;<pos:position pos:line="9" pos:column="47"/></init>
	     <condition><expr><name pos:line="10" pos:column="14">line<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">&lt;<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="21">eob<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">&amp;&amp;<pos:position pos:line="10" pos:column="35"/></operator> <operator pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">line<pos:position pos:line="10" pos:column="33"/></name> <operator pos:line="10" pos:column="34">!=<pos:position pos:line="10" pos:column="36"/></operator> <literal type="char" pos:line="10" pos:column="37">'\n'<pos:position pos:line="10" pos:column="41"/></literal></expr>;<pos:position pos:line="10" pos:column="42"/></condition>
	     <incr><expr><name pos:line="11" pos:column="14">line<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">next<pos:position pos:line="11" pos:column="25"/></name></expr></incr>)<pos:position pos:line="11" pos:column="26"/></control> <block pos:line="11" pos:column="27">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">next<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <call><name pos:line="12" pos:column="24">memchr<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">line<pos:position pos:line="12" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="12" pos:column="37">'\n'<pos:position pos:line="12" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="43">eob<pos:position pos:line="12" pos:column="46"/></name> <operator pos:line="12" pos:column="47">-<pos:position pos:line="12" pos:column="48"/></operator> <name pos:line="12" pos:column="49">line<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name pos:line="13" pos:column="17">next<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <ternary><condition><expr><name pos:line="13" pos:column="24">next<pos:position pos:line="13" pos:column="28"/></name></expr> ?<pos:position pos:line="13" pos:column="30"/></condition><then pos:line="13" pos:column="30"> <expr><name pos:line="13" pos:column="31">next<pos:position pos:line="13" pos:column="35"/></name> <operator pos:line="13" pos:column="36">+<pos:position pos:line="13" pos:column="37"/></operator> <literal type="number" pos:line="13" pos:column="38">1<pos:position pos:line="13" pos:column="39"/></literal></expr> <pos:position pos:line="13" pos:column="40"/></then><else pos:line="13" pos:column="40">: <expr><name pos:line="13" pos:column="42">eob<pos:position pos:line="13" pos:column="45"/></name></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">*<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">line<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">==<pos:position pos:line="14" pos:column="29"/></operator> <literal type="char" pos:line="14" pos:column="30">' '<pos:position pos:line="14" pos:column="33"/></literal></expr>)<pos:position pos:line="14" pos:column="34"/></condition><then pos:line="14" pos:column="34"> <block pos:line="14" pos:column="35">{
			<comment type="block" pos:line="15" pos:column="25">/* continuation */</comment>
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><name pos:line="16" pos:column="29">it<pos:position pos:line="16" pos:column="31"/></name></expr>)<pos:position pos:line="16" pos:column="32"/></condition><then pos:line="16" pos:column="32">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="33">strbuf_add<pos:position pos:line="17" pos:column="43"/></name><argument_list pos:line="17" pos:column="43">(<argument><expr><operator pos:line="17" pos:column="44">&amp;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="45">buf<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">line<pos:position pos:line="17" pos:column="54"/></name> <operator pos:line="17" pos:column="55">+<pos:position pos:line="17" pos:column="56"/></operator> <literal type="number" pos:line="17" pos:column="57">1<pos:position pos:line="17" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="60">next<pos:position pos:line="17" pos:column="64"/></name> <operator pos:line="17" pos:column="65">-<pos:position pos:line="17" pos:column="66"/></operator> <operator pos:line="17" pos:column="67">(<pos:position pos:line="17" pos:column="68"/></operator><name pos:line="17" pos:column="68">line<pos:position pos:line="17" pos:column="72"/></name> <operator pos:line="17" pos:column="73">+<pos:position pos:line="17" pos:column="74"/></operator> <literal type="number" pos:line="17" pos:column="75">1<pos:position pos:line="17" pos:column="76"/></literal><operator pos:line="17" pos:column="76">)<pos:position pos:line="17" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="79"/></expr_stmt></block></then></if>
			<continue pos:line="18" pos:column="25">continue;<pos:position pos:line="18" pos:column="34"/></continue>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">it<pos:position pos:line="20" pos:column="23"/></name></expr>)<pos:position pos:line="20" pos:column="24"/></condition><then pos:line="20" pos:column="24">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="25">it<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">-&gt;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="29">value<pos:position pos:line="21" pos:column="34"/></name></name> <operator pos:line="21" pos:column="35">=<pos:position pos:line="21" pos:column="36"/></operator> <call><name pos:line="21" pos:column="37">strbuf_detach<pos:position pos:line="21" pos:column="50"/></name><argument_list pos:line="21" pos:column="50">(<argument><expr><operator pos:line="21" pos:column="51">&amp;<pos:position pos:line="21" pos:column="56"/></operator><name pos:line="21" pos:column="52">buf<pos:position pos:line="21" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="57">&amp;<pos:position pos:line="21" pos:column="62"/></operator><name><name pos:line="21" pos:column="58">it<pos:position pos:line="21" pos:column="60"/></name><operator pos:line="21" pos:column="60">-&gt;<pos:position pos:line="21" pos:column="65"/></operator><name pos:line="21" pos:column="62">len<pos:position pos:line="21" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="67"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">strbuf_reset<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><operator pos:line="22" pos:column="30">&amp;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="31">buf<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">it<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">NULL<pos:position pos:line="23" pos:column="26"/></name></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>

		<expr_stmt><expr><name pos:line="25" pos:column="17">eof<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <call><name pos:line="25" pos:column="23">strchr<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">line<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="25" pos:column="36">' '<pos:position pos:line="25" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">next<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">&lt;=<pos:position pos:line="26" pos:column="31"/></operator> <name pos:line="26" pos:column="29">eof<pos:position pos:line="26" pos:column="32"/></name></expr>)<pos:position pos:line="26" pos:column="33"/></condition><then pos:line="26" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="25">eof<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="31">next<pos:position pos:line="27" pos:column="35"/></name></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt></block></then></if>

		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">standard_header_field<pos:position pos:line="29" pos:column="42"/></name><argument_list pos:line="29" pos:column="42">(<argument><expr><name pos:line="29" pos:column="43">line<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">eof<pos:position pos:line="29" pos:column="52"/></name> <operator pos:line="29" pos:column="53">-<pos:position pos:line="29" pos:column="54"/></operator> <name pos:line="29" pos:column="55">line<pos:position pos:line="29" pos:column="59"/></name></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call> <operator pos:line="29" pos:column="61">||<pos:position pos:line="29" pos:column="63"/></operator>
		    <call><name pos:line="30" pos:column="21">excluded_header_field<pos:position pos:line="30" pos:column="42"/></name><argument_list pos:line="30" pos:column="42">(<argument><expr><name pos:line="30" pos:column="43">line<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">eof<pos:position pos:line="30" pos:column="52"/></name> <operator pos:line="30" pos:column="53">-<pos:position pos:line="30" pos:column="54"/></operator> <name pos:line="30" pos:column="55">line<pos:position pos:line="30" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="61">exclude<pos:position pos:line="30" pos:column="68"/></name></expr></argument>)<pos:position pos:line="30" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="70"/></condition><then pos:line="30" pos:column="70">
			<block type="pseudo"><continue pos:line="31" pos:column="25">continue;<pos:position pos:line="31" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="33" pos:column="17">it<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <call><name pos:line="33" pos:column="22">xcalloc<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><literal type="number" pos:line="33" pos:column="30">1<pos:position pos:line="33" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="33">sizeof<argument_list pos:line="33" pos:column="39">(<argument><expr><operator pos:line="33" pos:column="40">*<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="41">it<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">it<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">-&gt;<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="21">key<pos:position pos:line="34" pos:column="24"/></name></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <call><name pos:line="34" pos:column="27">xmemdupz<pos:position pos:line="34" pos:column="35"/></name><argument_list pos:line="34" pos:column="35">(<argument><expr><name pos:line="34" pos:column="36">line<pos:position pos:line="34" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="42">eof<pos:position pos:line="34" pos:column="45"/></name><operator pos:line="34" pos:column="45">-<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="46">line<pos:position pos:line="34" pos:column="50"/></name></expr></argument>)<pos:position pos:line="34" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="35" pos:column="17">*<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">tail<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <name pos:line="35" pos:column="25">it<pos:position pos:line="35" pos:column="27"/></name></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="36" pos:column="17">tail<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <operator pos:line="36" pos:column="24">&amp;<pos:position pos:line="36" pos:column="29"/></operator><name><name pos:line="36" pos:column="25">it<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">next<pos:position pos:line="36" pos:column="33"/></name></name></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">eof<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">+<pos:position pos:line="37" pos:column="26"/></operator> <literal type="number" pos:line="37" pos:column="27">1<pos:position pos:line="37" pos:column="28"/></literal> <operator pos:line="37" pos:column="29">&lt;<pos:position pos:line="37" pos:column="33"/></operator> <name pos:line="37" pos:column="31">next<pos:position pos:line="37" pos:column="35"/></name></expr>)<pos:position pos:line="37" pos:column="36"/></condition><then pos:line="37" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="25">strbuf_add<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">(<argument><expr><operator pos:line="38" pos:column="36">&amp;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="37">buf<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="42">eof<pos:position pos:line="38" pos:column="45"/></name> <operator pos:line="38" pos:column="46">+<pos:position pos:line="38" pos:column="47"/></operator> <literal type="number" pos:line="38" pos:column="48">1<pos:position pos:line="38" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="51">next<pos:position pos:line="38" pos:column="55"/></name> <operator pos:line="38" pos:column="56">-<pos:position pos:line="38" pos:column="57"/></operator> <operator pos:line="38" pos:column="58">(<pos:position pos:line="38" pos:column="59"/></operator><name pos:line="38" pos:column="59">eof<pos:position pos:line="38" pos:column="62"/></name> <operator pos:line="38" pos:column="63">+<pos:position pos:line="38" pos:column="64"/></operator> <literal type="number" pos:line="38" pos:column="65">1<pos:position pos:line="38" pos:column="66"/></literal><operator pos:line="38" pos:column="66">)<pos:position pos:line="38" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="38" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="69"/></expr_stmt></block></then></if>
	}<pos:position pos:line="39" pos:column="10"/></block></for>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">it<pos:position pos:line="40" pos:column="15"/></name></expr>)<pos:position pos:line="40" pos:column="16"/></condition><then pos:line="40" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="17">it<pos:position pos:line="41" pos:column="19"/></name><operator pos:line="41" pos:column="19">-&gt;<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="21">value<pos:position pos:line="41" pos:column="26"/></name></name> <operator pos:line="41" pos:column="27">=<pos:position pos:line="41" pos:column="28"/></operator> <call><name pos:line="41" pos:column="29">strbuf_detach<pos:position pos:line="41" pos:column="42"/></name><argument_list pos:line="41" pos:column="42">(<argument><expr><operator pos:line="41" pos:column="43">&amp;<pos:position pos:line="41" pos:column="48"/></operator><name pos:line="41" pos:column="44">buf<pos:position pos:line="41" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="49">&amp;<pos:position pos:line="41" pos:column="54"/></operator><name><name pos:line="41" pos:column="50">it<pos:position pos:line="41" pos:column="52"/></name><operator pos:line="41" pos:column="52">-&gt;<pos:position pos:line="41" pos:column="57"/></operator><name pos:line="41" pos:column="54">len<pos:position pos:line="41" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt></block></then></if>
	<return pos:line="42" pos:column="9">return <expr><name pos:line="42" pos:column="16">extra<pos:position pos:line="42" pos:column="21"/></name></expr>;<pos:position pos:line="42" pos:column="22"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5634_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">reg_errcode_t<pos:position pos:line="1" pos:column="21"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">match_ctx_init<pos:position pos:line="3" pos:column="15"/></name> <parameter_list pos:line="3" pos:column="16">(<parameter><decl><type><name pos:line="3" pos:column="17">re_match_context_t<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">mctx<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="43">int<pos:position pos:line="3" pos:column="46"/></name></type> <name pos:line="3" pos:column="47">eflags<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="55">int<pos:position pos:line="3" pos:column="58"/></name></type> <name pos:line="3" pos:column="59">n<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="61"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <expr_stmt><expr><name><name pos:line="5" pos:column="3">mctx<pos:position pos:line="5" pos:column="7"/></name><operator pos:line="5" pos:column="7">-&gt;<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="9">eflags<pos:position pos:line="5" pos:column="15"/></name></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <name pos:line="5" pos:column="18">eflags<pos:position pos:line="5" pos:column="24"/></name></expr>;<pos:position pos:line="5" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="6" pos:column="3">mctx<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">-&gt;<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="9">match_last<pos:position pos:line="6" pos:column="19"/></name></name> <operator pos:line="6" pos:column="20">=<pos:position pos:line="6" pos:column="21"/></operator> <operator pos:line="6" pos:column="22">-<pos:position pos:line="6" pos:column="23"/></operator><literal type="number" pos:line="6" pos:column="23">1<pos:position pos:line="6" pos:column="24"/></literal></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">n<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">&gt;<pos:position pos:line="7" pos:column="13"/></operator> <literal type="number" pos:line="7" pos:column="11">0<pos:position pos:line="7" pos:column="12"/></literal></expr>)<pos:position pos:line="7" pos:column="13"/></condition><then pos:line="7" pos:column="13">
    <block pos:line="8" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="9" pos:column="7">mctx<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">bkref_ents<pos:position pos:line="9" pos:column="23"/></name></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <call><name pos:line="9" pos:column="26">re_malloc<pos:position pos:line="9" pos:column="35"/></name> <argument_list pos:line="9" pos:column="36">(<argument><expr pos:line="9" pos:column="37">struct <name pos:line="9" pos:column="44">re_backref_cache_entry<pos:position pos:line="9" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="68">n<pos:position pos:line="9" pos:column="69"/></name></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="10" pos:column="7">mctx<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">sub_tops<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <call><name pos:line="10" pos:column="24">re_malloc<pos:position pos:line="10" pos:column="33"/></name> <argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">re_sub_match_top_t<pos:position pos:line="10" pos:column="53"/></name> <operator pos:line="10" pos:column="54">*<pos:position pos:line="10" pos:column="55"/></operator></expr></argument>, <argument><expr><name pos:line="10" pos:column="57">n<pos:position pos:line="10" pos:column="58"/></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>
      <if pos:line="11" pos:column="7">if <condition pos:line="11" pos:column="10">(<expr><call><name pos:line="11" pos:column="11">BE<pos:position pos:line="11" pos:column="13"/></name> <argument_list pos:line="11" pos:column="14">(<argument><expr><name><name pos:line="11" pos:column="15">mctx<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">bkref_ents<pos:position pos:line="11" pos:column="31"/></name></name> <operator pos:line="11" pos:column="32">==<pos:position pos:line="11" pos:column="34"/></operator> <name pos:line="11" pos:column="35">NULL<pos:position pos:line="11" pos:column="39"/></name> <operator pos:line="11" pos:column="40">||<pos:position pos:line="11" pos:column="42"/></operator> <name><name pos:line="11" pos:column="43">mctx<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">-&gt;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="49">sub_tops<pos:position pos:line="11" pos:column="57"/></name></name> <operator pos:line="11" pos:column="58">==<pos:position pos:line="11" pos:column="60"/></operator> <name pos:line="11" pos:column="61">NULL<pos:position pos:line="11" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="67">0<pos:position pos:line="11" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="70"/></condition><then pos:line="11" pos:column="70">
	<block type="pseudo"><return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">REG_ESPACE<pos:position pos:line="12" pos:column="26"/></name></expr>;<pos:position pos:line="12" pos:column="27"/></return></block></then></if>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
  <comment type="block" pos:line="14" pos:column="3">/* Already zero-ed by the caller.
     else
       mctx-&gt;bkref_ents = NULL;
     mctx-&gt;nbkref_ents = 0;
     mctx-&gt;nsub_tops = 0;  */</comment>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">mctx<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">abkref_ents<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="23">n<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">mctx<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">max_mb_elem_len<pos:position pos:line="20" pos:column="24"/></name></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <literal type="number" pos:line="20" pos:column="27">1<pos:position pos:line="20" pos:column="28"/></literal></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">mctx<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">asub_tops<pos:position pos:line="21" pos:column="18"/></name></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">n<pos:position pos:line="21" pos:column="22"/></name></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>
  <return pos:line="22" pos:column="3">return <expr><name pos:line="22" pos:column="10">REG_NOERROR<pos:position pos:line="22" pos:column="21"/></name></expr>;<pos:position pos:line="22" pos:column="22"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

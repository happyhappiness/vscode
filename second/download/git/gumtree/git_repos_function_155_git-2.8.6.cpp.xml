<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_155_git-2.8.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">dir<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">strict<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">git_setup_gettext<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">()<pos:position pos:line="7" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">packet_trace_identity<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><literal type="string" pos:line="9" pos:column="31">"upload-pack"<pos:position pos:line="9" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">git_extract_argv0_path<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name><name pos:line="10" pos:column="32">argv<pos:position pos:line="10" pos:column="36"/></name><index pos:line="10" pos:column="36">[<expr><literal type="number" pos:line="10" pos:column="37">0<pos:position pos:line="10" pos:column="38"/></literal></expr>]<pos:position pos:line="10" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">check_replace_refs<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <literal type="number" pos:line="11" pos:column="30">0<pos:position pos:line="11" pos:column="31"/></literal></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>

	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">1<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></init> <condition><expr><name pos:line="13" pos:column="21">i<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="25">argc<pos:position pos:line="13" pos:column="29"/></name></expr>;<pos:position pos:line="13" pos:column="30"/></condition> <incr><expr><name pos:line="13" pos:column="31">i<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">++<pos:position pos:line="13" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="35"/></control> <block pos:line="13" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">char<pos:position pos:line="14" pos:column="21"/></name> <modifier pos:line="14" pos:column="22">*<pos:position pos:line="14" pos:column="23"/></modifier></type><name pos:line="14" pos:column="23">arg<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><name><name pos:line="14" pos:column="29">argv<pos:position pos:line="14" pos:column="33"/></name><index pos:line="14" pos:column="33">[<expr><name pos:line="14" pos:column="34">i<pos:position pos:line="14" pos:column="35"/></name></expr>]<pos:position pos:line="14" pos:column="36"/></index></name></expr></init></decl>;<pos:position pos:line="14" pos:column="37"/></decl_stmt>

		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">arg<pos:position pos:line="16" pos:column="24"/></name><index pos:line="16" pos:column="24">[<expr><literal type="number" pos:line="16" pos:column="25">0<pos:position pos:line="16" pos:column="26"/></literal></expr>]<pos:position pos:line="16" pos:column="27"/></index></name> <operator pos:line="16" pos:column="28">!=<pos:position pos:line="16" pos:column="30"/></operator> <literal type="char" pos:line="16" pos:column="31">'-'<pos:position pos:line="16" pos:column="34"/></literal></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35">
			<block type="pseudo"><break pos:line="17" pos:column="25">break;<pos:position pos:line="17" pos:column="31"/></break></block></then></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><call><name pos:line="18" pos:column="22">strcmp<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">arg<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="34">"--advertise-refs"<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54"> <block pos:line="18" pos:column="55">{
			<expr_stmt><expr><name pos:line="19" pos:column="25">advertise_refs<pos:position pos:line="19" pos:column="39"/></name> <operator pos:line="19" pos:column="40">=<pos:position pos:line="19" pos:column="41"/></operator> <literal type="number" pos:line="19" pos:column="42">1<pos:position pos:line="19" pos:column="43"/></literal></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt>
			<continue pos:line="20" pos:column="25">continue;<pos:position pos:line="20" pos:column="34"/></continue>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><call><name pos:line="22" pos:column="22">strcmp<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">arg<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="34">"--stateless-rpc"<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="53"/></condition><then pos:line="22" pos:column="53"> <block pos:line="22" pos:column="54">{
			<expr_stmt><expr><name pos:line="23" pos:column="25">stateless_rpc<pos:position pos:line="23" pos:column="38"/></name> <operator pos:line="23" pos:column="39">=<pos:position pos:line="23" pos:column="40"/></operator> <literal type="number" pos:line="23" pos:column="41">1<pos:position pos:line="23" pos:column="42"/></literal></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
			<continue pos:line="24" pos:column="25">continue;<pos:position pos:line="24" pos:column="34"/></continue>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><call><name pos:line="26" pos:column="22">strcmp<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">arg<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="34">"--strict"<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="46"/></condition><then pos:line="26" pos:column="46"> <block pos:line="26" pos:column="47">{
			<expr_stmt><expr><name pos:line="27" pos:column="25">strict<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">=<pos:position pos:line="27" pos:column="33"/></operator> <literal type="number" pos:line="27" pos:column="34">1<pos:position pos:line="27" pos:column="35"/></literal></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
			<continue pos:line="28" pos:column="25">continue;<pos:position pos:line="28" pos:column="34"/></continue>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><call><name pos:line="30" pos:column="21">starts_with<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name pos:line="30" pos:column="33">arg<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="38">"--timeout="<pos:position pos:line="30" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="52"/></condition><then pos:line="30" pos:column="52"> <block pos:line="30" pos:column="53">{
			<expr_stmt><expr><name pos:line="31" pos:column="25">timeout<pos:position pos:line="31" pos:column="32"/></name> <operator pos:line="31" pos:column="33">=<pos:position pos:line="31" pos:column="34"/></operator> <call><name pos:line="31" pos:column="35">atoi<pos:position pos:line="31" pos:column="39"/></name><argument_list pos:line="31" pos:column="39">(<argument><expr><name pos:line="31" pos:column="40">arg<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">+<pos:position pos:line="31" pos:column="44"/></operator><literal type="number" pos:line="31" pos:column="44">10<pos:position pos:line="31" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name pos:line="32" pos:column="25">daemon_mode<pos:position pos:line="32" pos:column="36"/></name> <operator pos:line="32" pos:column="37">=<pos:position pos:line="32" pos:column="38"/></operator> <literal type="number" pos:line="32" pos:column="39">1<pos:position pos:line="32" pos:column="40"/></literal></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
			<continue pos:line="33" pos:column="25">continue;<pos:position pos:line="33" pos:column="34"/></continue>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><operator pos:line="35" pos:column="21">!<pos:position pos:line="35" pos:column="22"/></operator><call><name pos:line="35" pos:column="22">strcmp<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><name pos:line="35" pos:column="29">arg<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="34">"--"<pos:position pos:line="35" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="40"/></condition><then pos:line="35" pos:column="40"> <block pos:line="35" pos:column="41">{
			<expr_stmt><expr><name pos:line="36" pos:column="25">i<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">++<pos:position pos:line="36" pos:column="28"/></operator></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
			<break pos:line="37" pos:column="25">break;<pos:position pos:line="37" pos:column="31"/></break>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if>
	}<pos:position pos:line="39" pos:column="10"/></block></for>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">i<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">!=<pos:position pos:line="41" pos:column="17"/></operator> <name pos:line="41" pos:column="18">argc<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">-<pos:position pos:line="41" pos:column="23"/></operator><literal type="number" pos:line="41" pos:column="23">1<pos:position pos:line="41" pos:column="24"/></literal></expr>)<pos:position pos:line="41" pos:column="25"/></condition><then pos:line="41" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="17">usage<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">upload_pack_usage<pos:position pos:line="42" pos:column="40"/></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="44" pos:column="9">setup_path<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">()<pos:position pos:line="44" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>

	<expr_stmt><expr><name pos:line="46" pos:column="9">dir<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <name><name pos:line="46" pos:column="15">argv<pos:position pos:line="46" pos:column="19"/></name><index pos:line="46" pos:column="19">[<expr><name pos:line="46" pos:column="20">i<pos:position pos:line="46" pos:column="21"/></name></expr>]<pos:position pos:line="46" pos:column="22"/></index></name></expr>;<pos:position pos:line="46" pos:column="23"/></expr_stmt>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">!<pos:position pos:line="48" pos:column="14"/></operator><call><name pos:line="48" pos:column="14">enter_repo<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">dir<pos:position pos:line="48" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="30">strict<pos:position pos:line="48" pos:column="36"/></name></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="38"/></condition><then pos:line="48" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="17">die<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><literal type="string" pos:line="49" pos:column="21">"'%s' does not appear to be a git repository"<pos:position pos:line="49" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="68">dir<pos:position pos:line="49" pos:column="71"/></name></expr></argument>)<pos:position pos:line="49" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="73"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="51" pos:column="9">git_config<pos:position pos:line="51" pos:column="19"/></name><argument_list pos:line="51" pos:column="19">(<argument><expr><name pos:line="51" pos:column="20">upload_pack_config<pos:position pos:line="51" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="40">NULL<pos:position pos:line="51" pos:column="44"/></name></expr></argument>)<pos:position pos:line="51" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">upload_pack<pos:position pos:line="52" pos:column="20"/></name><argument_list pos:line="52" pos:column="20">()<pos:position pos:line="52" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="23"/></expr_stmt>
	<return pos:line="53" pos:column="9">return <expr><literal type="number" pos:line="53" pos:column="16">0<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

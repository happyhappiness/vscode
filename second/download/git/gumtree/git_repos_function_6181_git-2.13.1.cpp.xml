<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6181_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">git_pack_config<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">k<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">v<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">void<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">cb<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><call><name pos:line="3" pos:column="14">strcmp<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">k<pos:position pos:line="3" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="24">"pack.window"<pos:position pos:line="3" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="39"/></condition><then pos:line="3" pos:column="39"> <block pos:line="3" pos:column="40">{
		<expr_stmt><expr><name pos:line="4" pos:column="17">window<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">=<pos:position pos:line="4" pos:column="25"/></operator> <call><name pos:line="4" pos:column="26">git_config_int<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><name pos:line="4" pos:column="41">k<pos:position pos:line="4" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="44">v<pos:position pos:line="4" pos:column="45"/></name></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="47"/></expr_stmt>
		<return pos:line="5" pos:column="17">return <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr>;<pos:position pos:line="5" pos:column="26"/></return>
	}<pos:position pos:line="6" pos:column="10"/></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name pos:line="7" pos:column="14">strcmp<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">k<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="24">"pack.windowmemory"<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="45"/></condition><then pos:line="7" pos:column="45"> <block pos:line="7" pos:column="46">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">window_memory_limit<pos:position pos:line="8" pos:column="36"/></name> <operator pos:line="8" pos:column="37">=<pos:position pos:line="8" pos:column="38"/></operator> <call><name pos:line="8" pos:column="39">git_config_ulong<pos:position pos:line="8" pos:column="55"/></name><argument_list pos:line="8" pos:column="55">(<argument><expr><name pos:line="8" pos:column="56">k<pos:position pos:line="8" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="59">v<pos:position pos:line="8" pos:column="60"/></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt>
		<return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">strcmp<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">k<pos:position pos:line="11" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="24">"pack.depth"<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="38"/></condition><then pos:line="11" pos:column="38"> <block pos:line="11" pos:column="39">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">depth<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <call><name pos:line="12" pos:column="25">git_config_int<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">k<pos:position pos:line="12" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="43">v<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
		<return pos:line="13" pos:column="17">return <expr><literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><call><name pos:line="15" pos:column="14">strcmp<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">k<pos:position pos:line="15" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="24">"pack.deltacachesize"<pos:position pos:line="15" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="47"/></condition><then pos:line="15" pos:column="47"> <block pos:line="15" pos:column="48">{
		<expr_stmt><expr><name pos:line="16" pos:column="17">max_delta_cache_size<pos:position pos:line="16" pos:column="37"/></name> <operator pos:line="16" pos:column="38">=<pos:position pos:line="16" pos:column="39"/></operator> <call><name pos:line="16" pos:column="40">git_config_int<pos:position pos:line="16" pos:column="54"/></name><argument_list pos:line="16" pos:column="54">(<argument><expr><name pos:line="16" pos:column="55">k<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="58">v<pos:position pos:line="16" pos:column="59"/></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">strcmp<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">k<pos:position pos:line="19" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="24">"pack.deltacachelimit"<pos:position pos:line="19" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="48"/></condition><then pos:line="19" pos:column="48"> <block pos:line="19" pos:column="49">{
		<expr_stmt><expr><name pos:line="20" pos:column="17">cache_max_small_delta_size<pos:position pos:line="20" pos:column="43"/></name> <operator pos:line="20" pos:column="44">=<pos:position pos:line="20" pos:column="45"/></operator> <call><name pos:line="20" pos:column="46">git_config_int<pos:position pos:line="20" pos:column="60"/></name><argument_list pos:line="20" pos:column="60">(<argument><expr><name pos:line="20" pos:column="61">k<pos:position pos:line="20" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="64">v<pos:position pos:line="20" pos:column="65"/></name></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="67"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><call><name pos:line="23" pos:column="14">strcmp<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">k<pos:position pos:line="23" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="24">"pack.writebitmaphashcache"<pos:position pos:line="23" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="53"/></condition><then pos:line="23" pos:column="53"> <block pos:line="23" pos:column="54">{
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><call><name pos:line="24" pos:column="21">git_config_bool<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><name pos:line="24" pos:column="37">k<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="40">v<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="43"/></condition><then pos:line="24" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="25">write_bitmap_options<pos:position pos:line="25" pos:column="45"/></name> <operator pos:line="25" pos:column="46">|=<pos:position pos:line="25" pos:column="48"/></operator> <name pos:line="25" pos:column="49">BITMAP_OPT_HASH_CACHE<pos:position pos:line="25" pos:column="70"/></name></expr>;<pos:position pos:line="25" pos:column="71"/></expr_stmt></block></then>
		<else pos:line="26" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="25">write_bitmap_options<pos:position pos:line="27" pos:column="45"/></name> <operator pos:line="27" pos:column="46">&amp;=<pos:position pos:line="27" pos:column="52"/></operator> <operator pos:line="27" pos:column="49">~<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="50">BITMAP_OPT_HASH_CACHE<pos:position pos:line="27" pos:column="71"/></name></expr>;<pos:position pos:line="27" pos:column="72"/></expr_stmt></block></else></if>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><call><name pos:line="29" pos:column="14">strcmp<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">k<pos:position pos:line="29" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="24">"pack.usebitmaps"<pos:position pos:line="29" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="43"/></condition><then pos:line="29" pos:column="43"> <block pos:line="29" pos:column="44">{
		<expr_stmt><expr><name pos:line="30" pos:column="17">use_bitmap_index_default<pos:position pos:line="30" pos:column="41"/></name> <operator pos:line="30" pos:column="42">=<pos:position pos:line="30" pos:column="43"/></operator> <call><name pos:line="30" pos:column="44">git_config_bool<pos:position pos:line="30" pos:column="59"/></name><argument_list pos:line="30" pos:column="59">(<argument><expr><name pos:line="30" pos:column="60">k<pos:position pos:line="30" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="63">v<pos:position pos:line="30" pos:column="64"/></name></expr></argument>)<pos:position pos:line="30" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="66"/></expr_stmt>
		<return pos:line="31" pos:column="17">return <expr><literal type="number" pos:line="31" pos:column="24">0<pos:position pos:line="31" pos:column="25"/></literal></expr>;<pos:position pos:line="31" pos:column="26"/></return>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><call><name pos:line="33" pos:column="14">strcmp<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">k<pos:position pos:line="33" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="24">"pack.threads"<pos:position pos:line="33" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="40"/></condition><then pos:line="33" pos:column="40"> <block pos:line="33" pos:column="41">{
		<expr_stmt><expr><name pos:line="34" pos:column="17">delta_search_threads<pos:position pos:line="34" pos:column="37"/></name> <operator pos:line="34" pos:column="38">=<pos:position pos:line="34" pos:column="39"/></operator> <call><name pos:line="34" pos:column="40">git_config_int<pos:position pos:line="34" pos:column="54"/></name><argument_list pos:line="34" pos:column="54">(<argument><expr><name pos:line="34" pos:column="55">k<pos:position pos:line="34" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="58">v<pos:position pos:line="34" pos:column="59"/></name></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="61"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">delta_search_threads<pos:position pos:line="35" pos:column="41"/></name> <operator pos:line="35" pos:column="42">&lt;<pos:position pos:line="35" pos:column="46"/></operator> <literal type="number" pos:line="35" pos:column="44">0<pos:position pos:line="35" pos:column="45"/></literal></expr>)<pos:position pos:line="35" pos:column="46"/></condition><then pos:line="35" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="25">die<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><literal type="string" pos:line="36" pos:column="29">"invalid number of threads specified (%d)"<pos:position pos:line="36" pos:column="71"/></literal></expr></argument>,
			    <argument><expr><name pos:line="37" pos:column="29">delta_search_threads<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">ifdef<pos:position pos:line="38" pos:column="7"/></cpp:directive> <name pos:line="38" pos:column="8">NO_PTHREADS<pos:position pos:line="38" pos:column="19"/></name></cpp:ifdef>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">delta_search_threads<pos:position pos:line="39" pos:column="41"/></name> <operator pos:line="39" pos:column="42">!=<pos:position pos:line="39" pos:column="44"/></operator> <literal type="number" pos:line="39" pos:column="45">1<pos:position pos:line="39" pos:column="46"/></literal></expr>)<pos:position pos:line="39" pos:column="47"/></condition><then pos:line="39" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="25">warning<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><literal type="string" pos:line="40" pos:column="33">"no threads support, ignoring %s"<pos:position pos:line="40" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="68">k<pos:position pos:line="40" pos:column="69"/></name></expr></argument>)<pos:position pos:line="40" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="71"/></expr_stmt></block></then></if>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>
		<return pos:line="42" pos:column="17">return <expr><literal type="number" pos:line="42" pos:column="24">0<pos:position pos:line="42" pos:column="25"/></literal></expr>;<pos:position pos:line="42" pos:column="26"/></return>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><call><name pos:line="44" pos:column="14">strcmp<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">k<pos:position pos:line="44" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="24">"pack.indexversion"<pos:position pos:line="44" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="45"/></condition><then pos:line="44" pos:column="45"> <block pos:line="44" pos:column="46">{
		<expr_stmt><expr><name><name pos:line="45" pos:column="17">pack_idx_opts<pos:position pos:line="45" pos:column="30"/></name><operator pos:line="45" pos:column="30">.<pos:position pos:line="45" pos:column="31"/></operator><name pos:line="45" pos:column="31">version<pos:position pos:line="45" pos:column="38"/></name></name> <operator pos:line="45" pos:column="39">=<pos:position pos:line="45" pos:column="40"/></operator> <call><name pos:line="45" pos:column="41">git_config_int<pos:position pos:line="45" pos:column="55"/></name><argument_list pos:line="45" pos:column="55">(<argument><expr><name pos:line="45" pos:column="56">k<pos:position pos:line="45" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="59">v<pos:position pos:line="45" pos:column="60"/></name></expr></argument>)<pos:position pos:line="45" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="62"/></expr_stmt>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name><name pos:line="46" pos:column="21">pack_idx_opts<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">.<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="35">version<pos:position pos:line="46" pos:column="42"/></name></name> <operator pos:line="46" pos:column="43">&gt;<pos:position pos:line="46" pos:column="47"/></operator> <literal type="number" pos:line="46" pos:column="45">2<pos:position pos:line="46" pos:column="46"/></literal></expr>)<pos:position pos:line="46" pos:column="47"/></condition><then pos:line="46" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="25">die<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><literal type="string" pos:line="47" pos:column="29">"bad pack.indexversion=%"<pos:position pos:line="47" pos:column="54"/></literal><name pos:line="47" pos:column="54">PRIu32<pos:position pos:line="47" pos:column="60"/></name></expr></argument>,
			    <argument><expr><name><name pos:line="48" pos:column="29">pack_idx_opts<pos:position pos:line="48" pos:column="42"/></name><operator pos:line="48" pos:column="42">.<pos:position pos:line="48" pos:column="43"/></operator><name pos:line="48" pos:column="43">version<pos:position pos:line="48" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="52"/></expr_stmt></block></then></if>
		<return pos:line="49" pos:column="17">return <expr><literal type="number" pos:line="49" pos:column="24">0<pos:position pos:line="49" pos:column="25"/></literal></expr>;<pos:position pos:line="49" pos:column="26"/></return>
	}<pos:position pos:line="50" pos:column="10"/></block></then></if>
	<return pos:line="51" pos:column="9">return <expr><call><name pos:line="51" pos:column="16">git_default_config<pos:position pos:line="51" pos:column="34"/></name><argument_list pos:line="51" pos:column="34">(<argument><expr><name pos:line="51" pos:column="35">k<pos:position pos:line="51" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="38">v<pos:position pos:line="51" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="41">cb<pos:position pos:line="51" pos:column="43"/></name></expr></argument>)<pos:position pos:line="51" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="45"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

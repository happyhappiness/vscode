<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5685_git-2.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">make_cover_letter<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">rev_info<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">rev<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">use_stdout<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">commit<pos:position pos:line="2" pos:column="44"/></name></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">origin<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="3" pos:column="31">int<pos:position pos:line="3" pos:column="34"/></name></type> <name pos:line="3" pos:column="35">nr<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="3" pos:column="39">struct<pos:position pos:line="3" pos:column="45"/></name> <name pos:line="3" pos:column="46">commit<pos:position pos:line="3" pos:column="52"/></name></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier><modifier pos:line="3" pos:column="54">*<pos:position pos:line="3" pos:column="55"/></modifier></type><name pos:line="3" pos:column="55">list<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="4" pos:column="31">const<pos:position pos:line="4" pos:column="36"/></specifier> <name pos:line="4" pos:column="37">char<pos:position pos:line="4" pos:column="41"/></name> <modifier pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></modifier></type><name pos:line="4" pos:column="43">branch_name<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="5" pos:column="31">int<pos:position pos:line="5" pos:column="34"/></name></type> <name pos:line="5" pos:column="35">quiet<pos:position pos:line="5" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="41"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">committer<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">body<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><literal type="string" pos:line="8" pos:column="28">"*** SUBJECT HERE ***\n\n*** BLURB HERE ***\n"<pos:position pos:line="8" pos:column="74"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="75"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">msg<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">shortlog<pos:position pos:line="10" pos:column="24"/></name></name></type> <name pos:line="10" pos:column="25">log<pos:position pos:line="10" pos:column="28"/></name></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">strbuf<pos:position pos:line="11" pos:column="22"/></name></name></type> <name pos:line="11" pos:column="23">sb<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><name pos:line="11" pos:column="28">STRBUF_INIT<pos:position pos:line="11" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">i<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name pos:line="13" pos:column="15">char<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">encoding<pos:position pos:line="13" pos:column="29"/></name> <init pos:line="13" pos:column="30">= <expr><literal type="string" pos:line="13" pos:column="32">"UTF-8"<pos:position pos:line="13" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="14" pos:column="9">struct<pos:position pos:line="14" pos:column="15"/></name> <name pos:line="14" pos:column="16">diff_options<pos:position pos:line="14" pos:column="28"/></name></name></type> <name pos:line="14" pos:column="29">opts<pos:position pos:line="14" pos:column="33"/></name></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">need_8bit_cte<pos:position pos:line="15" pos:column="26"/></name> <init pos:line="15" pos:column="27">= <expr><literal type="number" pos:line="15" pos:column="29">0<pos:position pos:line="15" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="16" pos:column="9">struct<pos:position pos:line="16" pos:column="15"/></name> <name pos:line="16" pos:column="16">pretty_print_context<pos:position pos:line="16" pos:column="36"/></name></name></type> <name pos:line="16" pos:column="37">pp<pos:position pos:line="16" pos:column="39"/></name> <init pos:line="16" pos:column="40">= <expr><block pos:line="16" pos:column="42">{<expr><literal type="number" pos:line="16" pos:column="43">0<pos:position pos:line="16" pos:column="44"/></literal></expr>}<pos:position pos:line="16" pos:column="45"/></block></expr></init></decl>;<pos:position pos:line="16" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="17" pos:column="9">struct<pos:position pos:line="17" pos:column="15"/></name> <name pos:line="17" pos:column="16">commit<pos:position pos:line="17" pos:column="22"/></name></name> <modifier pos:line="17" pos:column="23">*<pos:position pos:line="17" pos:column="24"/></modifier></type><name pos:line="17" pos:column="24">head<pos:position pos:line="17" pos:column="28"/></name> <init pos:line="17" pos:column="29">= <expr><name><name pos:line="17" pos:column="31">list<pos:position pos:line="17" pos:column="35"/></name><index pos:line="17" pos:column="35">[<expr><literal type="number" pos:line="17" pos:column="36">0<pos:position pos:line="17" pos:column="37"/></literal></expr>]<pos:position pos:line="17" pos:column="38"/></index></name></expr></init></decl>;<pos:position pos:line="17" pos:column="39"/></decl_stmt>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">cmit_fmt_is_mail<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name><name pos:line="19" pos:column="31">rev<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">commit_format<pos:position pos:line="19" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="51"/></condition><then pos:line="19" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">die<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><call><name pos:line="20" pos:column="21">_<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><literal type="string" pos:line="20" pos:column="23">"Cover letter needs email format"<pos:position pos:line="20" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="22" pos:column="9">committer<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <call><name pos:line="22" pos:column="21">git_committer_info<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">(<argument><expr><literal type="number" pos:line="22" pos:column="40">0<pos:position pos:line="22" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">use_stdout<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">&amp;&amp;<pos:position pos:line="24" pos:column="35"/></operator>
	    <call><name pos:line="25" pos:column="13">open_next_file<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">NULL<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="25" pos:column="34">rev<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">-&gt;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="39">numbered_files<pos:position pos:line="25" pos:column="53"/></name></name></expr> ?<pos:position pos:line="25" pos:column="55"/></condition><then pos:line="25" pos:column="55"> <expr><name pos:line="25" pos:column="56">NULL<pos:position pos:line="25" pos:column="60"/></name></expr> <pos:position pos:line="25" pos:column="61"/></then><else pos:line="25" pos:column="61">: <expr><literal type="string" pos:line="25" pos:column="63">"cover-letter"<pos:position pos:line="25" pos:column="77"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="25" pos:column="79">rev<pos:position pos:line="25" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="84">quiet<pos:position pos:line="25" pos:column="89"/></name></expr></argument>)<pos:position pos:line="25" pos:column="90"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="91"/></condition><then pos:line="25" pos:column="91">
		<block type="pseudo"><return pos:line="26" pos:column="17">return;<pos:position pos:line="26" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">log_write_email_headers<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">rev<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">head<pos:position pos:line="28" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="44">&amp;<pos:position pos:line="28" pos:column="49"/></operator><name><name pos:line="28" pos:column="45">pp<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">.<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="48">after_subject<pos:position pos:line="28" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="63">&amp;<pos:position pos:line="28" pos:column="68"/></operator><name pos:line="28" pos:column="64">need_8bit_cte<pos:position pos:line="28" pos:column="77"/></name></expr></argument>)<pos:position pos:line="28" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="79"/></expr_stmt>

	<for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">i<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></init> <condition><expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">need_8bit_cte<pos:position pos:line="30" pos:column="35"/></name> <operator pos:line="30" pos:column="36">&amp;&amp;<pos:position pos:line="30" pos:column="46"/></operator> <name pos:line="30" pos:column="39">i<pos:position pos:line="30" pos:column="40"/></name> <operator pos:line="30" pos:column="41">&lt;<pos:position pos:line="30" pos:column="45"/></operator> <name pos:line="30" pos:column="43">nr<pos:position pos:line="30" pos:column="45"/></name></expr>;<pos:position pos:line="30" pos:column="46"/></condition> <incr><expr><name pos:line="30" pos:column="47">i<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">++<pos:position pos:line="30" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="51"/></control> <block pos:line="30" pos:column="52">{
		<decl_stmt><decl><type><specifier pos:line="31" pos:column="17">const<pos:position pos:line="31" pos:column="22"/></specifier> <name pos:line="31" pos:column="23">char<pos:position pos:line="31" pos:column="27"/></name> <modifier pos:line="31" pos:column="28">*<pos:position pos:line="31" pos:column="29"/></modifier></type><name pos:line="31" pos:column="29">buf<pos:position pos:line="31" pos:column="32"/></name> <init pos:line="31" pos:column="33">= <expr><call><name pos:line="31" pos:column="35">get_commit_buffer<pos:position pos:line="31" pos:column="52"/></name><argument_list pos:line="31" pos:column="52">(<argument><expr><name><name pos:line="31" pos:column="53">list<pos:position pos:line="31" pos:column="57"/></name><index pos:line="31" pos:column="57">[<expr><name pos:line="31" pos:column="58">i<pos:position pos:line="31" pos:column="59"/></name></expr>]<pos:position pos:line="31" pos:column="60"/></index></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="62">NULL<pos:position pos:line="31" pos:column="66"/></name></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="68"/></decl_stmt>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">has_non_ascii<pos:position pos:line="32" pos:column="34"/></name><argument_list pos:line="32" pos:column="34">(<argument><expr><name pos:line="32" pos:column="35">buf<pos:position pos:line="32" pos:column="38"/></name></expr></argument>)<pos:position pos:line="32" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="40"/></condition><then pos:line="32" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="25">need_8bit_cte<pos:position pos:line="33" pos:column="38"/></name> <operator pos:line="33" pos:column="39">=<pos:position pos:line="33" pos:column="40"/></operator> <literal type="number" pos:line="33" pos:column="41">1<pos:position pos:line="33" pos:column="42"/></literal></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">unuse_commit_buffer<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><name><name pos:line="34" pos:column="37">list<pos:position pos:line="34" pos:column="41"/></name><index pos:line="34" pos:column="41">[<expr><name pos:line="34" pos:column="42">i<pos:position pos:line="34" pos:column="43"/></name></expr>]<pos:position pos:line="34" pos:column="44"/></index></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="46">buf<pos:position pos:line="34" pos:column="49"/></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></for>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">!<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">branch_name<pos:position pos:line="37" pos:column="25"/></name></expr>)<pos:position pos:line="37" pos:column="26"/></condition><then pos:line="37" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="17">branch_name<pos:position pos:line="38" pos:column="28"/></name> <operator pos:line="38" pos:column="29">=<pos:position pos:line="38" pos:column="30"/></operator> <call><name pos:line="38" pos:column="31">find_branch_name<pos:position pos:line="38" pos:column="47"/></name><argument_list pos:line="38" pos:column="47">(<argument><expr><name pos:line="38" pos:column="48">rev<pos:position pos:line="38" pos:column="51"/></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="40" pos:column="9">msg<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <name pos:line="40" pos:column="15">body<pos:position pos:line="40" pos:column="19"/></name></expr>;<pos:position pos:line="40" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="41" pos:column="9">pp<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">.<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="12">fmt<pos:position pos:line="41" pos:column="15"/></name></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <name pos:line="41" pos:column="18">CMIT_FMT_EMAIL<pos:position pos:line="41" pos:column="32"/></name></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="42" pos:column="9">pp<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">.<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="12">date_mode<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">.<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">type<pos:position pos:line="42" pos:column="26"/></name></name> <operator pos:line="42" pos:column="27">=<pos:position pos:line="42" pos:column="28"/></operator> <name pos:line="42" pos:column="29">DATE_RFC2822<pos:position pos:line="42" pos:column="41"/></name></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="43" pos:column="9">pp<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">.<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="12">rev<pos:position pos:line="43" pos:column="15"/></name></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <name pos:line="43" pos:column="18">rev<pos:position pos:line="43" pos:column="21"/></name></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="44" pos:column="9">pp<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">.<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="12">print_email_subject<pos:position pos:line="44" pos:column="31"/></name></name> <operator pos:line="44" pos:column="32">=<pos:position pos:line="44" pos:column="33"/></operator> <literal type="number" pos:line="44" pos:column="34">1<pos:position pos:line="44" pos:column="35"/></literal></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">pp_user_info<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><operator pos:line="45" pos:column="22">&amp;<pos:position pos:line="45" pos:column="27"/></operator><name pos:line="45" pos:column="23">pp<pos:position pos:line="45" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="27">NULL<pos:position pos:line="45" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="33">&amp;<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="34">sb<pos:position pos:line="45" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="38">committer<pos:position pos:line="45" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="49">encoding<pos:position pos:line="45" pos:column="57"/></name></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">pp_title_line<pos:position pos:line="46" pos:column="22"/></name><argument_list pos:line="46" pos:column="22">(<argument><expr><operator pos:line="46" pos:column="23">&amp;<pos:position pos:line="46" pos:column="28"/></operator><name pos:line="46" pos:column="24">pp<pos:position pos:line="46" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="28">&amp;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="29">msg<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="34">&amp;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="35">sb<pos:position pos:line="46" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="39">encoding<pos:position pos:line="46" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="49">need_8bit_cte<pos:position pos:line="46" pos:column="62"/></name></expr></argument>)<pos:position pos:line="46" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">pp_remainder<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><operator pos:line="47" pos:column="22">&amp;<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="23">pp<pos:position pos:line="47" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="27">&amp;<pos:position pos:line="47" pos:column="32"/></operator><name pos:line="47" pos:column="28">msg<pos:position pos:line="47" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="33">&amp;<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="34">sb<pos:position pos:line="47" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="38">0<pos:position pos:line="47" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">add_branch_description<pos:position pos:line="48" pos:column="31"/></name><argument_list pos:line="48" pos:column="31">(<argument><expr><operator pos:line="48" pos:column="32">&amp;<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="33">sb<pos:position pos:line="48" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="37">branch_name<pos:position pos:line="48" pos:column="48"/></name></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">fprintf<pos:position pos:line="49" pos:column="16"/></name><argument_list pos:line="49" pos:column="16">(<argument><expr><name><name pos:line="49" pos:column="17">rev<pos:position pos:line="49" pos:column="20"/></name><operator pos:line="49" pos:column="20">-&gt;<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="22">diffopt<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">.<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="30">file<pos:position pos:line="49" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="36">"%s\n"<pos:position pos:line="49" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="44">sb<pos:position pos:line="49" pos:column="46"/></name><operator pos:line="49" pos:column="46">.<pos:position pos:line="49" pos:column="47"/></operator><name pos:line="49" pos:column="47">buf<pos:position pos:line="49" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="52"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="51" pos:column="9">strbuf_release<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><operator pos:line="51" pos:column="24">&amp;<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="25">sb<pos:position pos:line="51" pos:column="27"/></name></expr></argument>)<pos:position pos:line="51" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="53" pos:column="9">shortlog_init<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><operator pos:line="53" pos:column="23">&amp;<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="24">log<pos:position pos:line="53" pos:column="27"/></name></expr></argument>)<pos:position pos:line="53" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="54" pos:column="9">log<pos:position pos:line="54" pos:column="12"/></name><operator pos:line="54" pos:column="12">.<pos:position pos:line="54" pos:column="13"/></operator><name pos:line="54" pos:column="13">wrap_lines<pos:position pos:line="54" pos:column="23"/></name></name> <operator pos:line="54" pos:column="24">=<pos:position pos:line="54" pos:column="25"/></operator> <literal type="number" pos:line="54" pos:column="26">1<pos:position pos:line="54" pos:column="27"/></literal></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="55" pos:column="9">log<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">.<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="13">wrap<pos:position pos:line="55" pos:column="17"/></name></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <literal type="number" pos:line="55" pos:column="20">72<pos:position pos:line="55" pos:column="22"/></literal></expr>;<pos:position pos:line="55" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="56" pos:column="9">log<pos:position pos:line="56" pos:column="12"/></name><operator pos:line="56" pos:column="12">.<pos:position pos:line="56" pos:column="13"/></operator><name pos:line="56" pos:column="13">in1<pos:position pos:line="56" pos:column="16"/></name></name> <operator pos:line="56" pos:column="17">=<pos:position pos:line="56" pos:column="18"/></operator> <literal type="number" pos:line="56" pos:column="19">2<pos:position pos:line="56" pos:column="20"/></literal></expr>;<pos:position pos:line="56" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="57" pos:column="9">log<pos:position pos:line="57" pos:column="12"/></name><operator pos:line="57" pos:column="12">.<pos:position pos:line="57" pos:column="13"/></operator><name pos:line="57" pos:column="13">in2<pos:position pos:line="57" pos:column="16"/></name></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <literal type="number" pos:line="57" pos:column="19">4<pos:position pos:line="57" pos:column="20"/></literal></expr>;<pos:position pos:line="57" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="58" pos:column="9">log<pos:position pos:line="58" pos:column="12"/></name><operator pos:line="58" pos:column="12">.<pos:position pos:line="58" pos:column="13"/></operator><name pos:line="58" pos:column="13">file<pos:position pos:line="58" pos:column="17"/></name></name> <operator pos:line="58" pos:column="18">=<pos:position pos:line="58" pos:column="19"/></operator> <name><name pos:line="58" pos:column="20">rev<pos:position pos:line="58" pos:column="23"/></name><operator pos:line="58" pos:column="23">-&gt;<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="25">diffopt<pos:position pos:line="58" pos:column="32"/></name><operator pos:line="58" pos:column="32">.<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="33">file<pos:position pos:line="58" pos:column="37"/></name></name></expr>;<pos:position pos:line="58" pos:column="38"/></expr_stmt>
	<for pos:line="59" pos:column="9">for <control pos:line="59" pos:column="13">(<init><expr><name pos:line="59" pos:column="14">i<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <literal type="number" pos:line="59" pos:column="18">0<pos:position pos:line="59" pos:column="19"/></literal></expr>;<pos:position pos:line="59" pos:column="20"/></init> <condition><expr><name pos:line="59" pos:column="21">i<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">&lt;<pos:position pos:line="59" pos:column="27"/></operator> <name pos:line="59" pos:column="25">nr<pos:position pos:line="59" pos:column="27"/></name></expr>;<pos:position pos:line="59" pos:column="28"/></condition> <incr><expr><name pos:line="59" pos:column="29">i<pos:position pos:line="59" pos:column="30"/></name><operator pos:line="59" pos:column="30">++<pos:position pos:line="59" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="59" pos:column="33"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="17">shortlog_add_commit<pos:position pos:line="60" pos:column="36"/></name><argument_list pos:line="60" pos:column="36">(<argument><expr><operator pos:line="60" pos:column="37">&amp;<pos:position pos:line="60" pos:column="42"/></operator><name pos:line="60" pos:column="38">log<pos:position pos:line="60" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="43">list<pos:position pos:line="60" pos:column="47"/></name><index pos:line="60" pos:column="47">[<expr><name pos:line="60" pos:column="48">i<pos:position pos:line="60" pos:column="49"/></name></expr>]<pos:position pos:line="60" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="60" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="52"/></expr_stmt></block></for>

	<expr_stmt><expr><call><name pos:line="62" pos:column="9">shortlog_output<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">(<argument><expr><operator pos:line="62" pos:column="25">&amp;<pos:position pos:line="62" pos:column="30"/></operator><name pos:line="62" pos:column="26">log<pos:position pos:line="62" pos:column="29"/></name></expr></argument>)<pos:position pos:line="62" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="31"/></expr_stmt>

	<comment type="block" pos:line="64" pos:column="9">/*
	 * We can only do diffstat with a unique reference point
	 */</comment>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><operator pos:line="67" pos:column="13">!<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="14">origin<pos:position pos:line="67" pos:column="20"/></name></expr>)<pos:position pos:line="67" pos:column="21"/></condition><then pos:line="67" pos:column="21">
		<block type="pseudo"><return pos:line="68" pos:column="17">return;<pos:position pos:line="68" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="70" pos:column="9">memcpy<pos:position pos:line="70" pos:column="15"/></name><argument_list pos:line="70" pos:column="15">(<argument><expr><operator pos:line="70" pos:column="16">&amp;<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="17">opts<pos:position pos:line="70" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="23">&amp;<pos:position pos:line="70" pos:column="28"/></operator><name><name pos:line="70" pos:column="24">rev<pos:position pos:line="70" pos:column="27"/></name><operator pos:line="70" pos:column="27">-&gt;<pos:position pos:line="70" pos:column="32"/></operator><name pos:line="70" pos:column="29">diffopt<pos:position pos:line="70" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="38">sizeof<argument_list pos:line="70" pos:column="44">(<argument><expr><name pos:line="70" pos:column="45">opts<pos:position pos:line="70" pos:column="49"/></name></expr></argument>)<pos:position pos:line="70" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="71" pos:column="9">opts<pos:position pos:line="71" pos:column="13"/></name><operator pos:line="71" pos:column="13">.<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="14">output_format<pos:position pos:line="71" pos:column="27"/></name></name> <operator pos:line="71" pos:column="28">=<pos:position pos:line="71" pos:column="29"/></operator> <name pos:line="71" pos:column="30">DIFF_FORMAT_SUMMARY<pos:position pos:line="71" pos:column="49"/></name> <operator pos:line="71" pos:column="50">|<pos:position pos:line="71" pos:column="51"/></operator> <name pos:line="71" pos:column="52">DIFF_FORMAT_DIFFSTAT<pos:position pos:line="71" pos:column="72"/></name></expr>;<pos:position pos:line="71" pos:column="73"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="73" pos:column="9">diff_setup_done<pos:position pos:line="73" pos:column="24"/></name><argument_list pos:line="73" pos:column="24">(<argument><expr><operator pos:line="73" pos:column="25">&amp;<pos:position pos:line="73" pos:column="30"/></operator><name pos:line="73" pos:column="26">opts<pos:position pos:line="73" pos:column="30"/></name></expr></argument>)<pos:position pos:line="73" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="75" pos:column="9">diff_tree_oid<pos:position pos:line="75" pos:column="22"/></name><argument_list pos:line="75" pos:column="22">(<argument><expr><operator pos:line="75" pos:column="23">&amp;<pos:position pos:line="75" pos:column="28"/></operator><name><name pos:line="75" pos:column="24">origin<pos:position pos:line="75" pos:column="30"/></name><operator pos:line="75" pos:column="30">-&gt;<pos:position pos:line="75" pos:column="35"/></operator><name pos:line="75" pos:column="32">tree<pos:position pos:line="75" pos:column="36"/></name><operator pos:line="75" pos:column="36">-&gt;<pos:position pos:line="75" pos:column="41"/></operator><name pos:line="75" pos:column="38">object<pos:position pos:line="75" pos:column="44"/></name><operator pos:line="75" pos:column="44">.<pos:position pos:line="75" pos:column="45"/></operator><name pos:line="75" pos:column="45">oid<pos:position pos:line="75" pos:column="48"/></name></name></expr></argument>,
		      <argument><expr><operator pos:line="76" pos:column="23">&amp;<pos:position pos:line="76" pos:column="28"/></operator><name><name pos:line="76" pos:column="24">head<pos:position pos:line="76" pos:column="28"/></name><operator pos:line="76" pos:column="28">-&gt;<pos:position pos:line="76" pos:column="33"/></operator><name pos:line="76" pos:column="30">tree<pos:position pos:line="76" pos:column="34"/></name><operator pos:line="76" pos:column="34">-&gt;<pos:position pos:line="76" pos:column="39"/></operator><name pos:line="76" pos:column="36">object<pos:position pos:line="76" pos:column="42"/></name><operator pos:line="76" pos:column="42">.<pos:position pos:line="76" pos:column="43"/></operator><name pos:line="76" pos:column="43">oid<pos:position pos:line="76" pos:column="46"/></name></name></expr></argument>,
		      <argument><expr><literal type="string" pos:line="77" pos:column="23">""<pos:position pos:line="77" pos:column="25"/></literal></expr></argument>, <argument><expr><operator pos:line="77" pos:column="27">&amp;<pos:position pos:line="77" pos:column="32"/></operator><name pos:line="77" pos:column="28">opts<pos:position pos:line="77" pos:column="32"/></name></expr></argument>)<pos:position pos:line="77" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="78" pos:column="9">diffcore_std<pos:position pos:line="78" pos:column="21"/></name><argument_list pos:line="78" pos:column="21">(<argument><expr><operator pos:line="78" pos:column="22">&amp;<pos:position pos:line="78" pos:column="27"/></operator><name pos:line="78" pos:column="23">opts<pos:position pos:line="78" pos:column="27"/></name></expr></argument>)<pos:position pos:line="78" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="79" pos:column="9">diff_flush<pos:position pos:line="79" pos:column="19"/></name><argument_list pos:line="79" pos:column="19">(<argument><expr><operator pos:line="79" pos:column="20">&amp;<pos:position pos:line="79" pos:column="25"/></operator><name pos:line="79" pos:column="21">opts<pos:position pos:line="79" pos:column="25"/></name></expr></argument>)<pos:position pos:line="79" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="27"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="81" pos:column="9">fprintf<pos:position pos:line="81" pos:column="16"/></name><argument_list pos:line="81" pos:column="16">(<argument><expr><name><name pos:line="81" pos:column="17">rev<pos:position pos:line="81" pos:column="20"/></name><operator pos:line="81" pos:column="20">-&gt;<pos:position pos:line="81" pos:column="25"/></operator><name pos:line="81" pos:column="22">diffopt<pos:position pos:line="81" pos:column="29"/></name><operator pos:line="81" pos:column="29">.<pos:position pos:line="81" pos:column="30"/></operator><name pos:line="81" pos:column="30">file<pos:position pos:line="81" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="36">"\n"<pos:position pos:line="81" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="42"/></expr_stmt>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

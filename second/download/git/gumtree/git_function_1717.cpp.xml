<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1717.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">create_note<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">unsigned<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">object<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="54">struct<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">msg_arg<pos:position pos:line="1" pos:column="68"/></name></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">msg<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">append_only<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">unsigned<pos:position pos:line="2" pos:column="56"/></name> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">prev<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="3" pos:column="25">unsigned<pos:position pos:line="3" pos:column="33"/></name> <name pos:line="3" pos:column="34">char<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">result<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="47"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">path<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">NULL<pos:position pos:line="5" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">msg<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">use_editor<pos:position pos:line="7" pos:column="28"/></name></name> <operator pos:line="7" pos:column="29">||<pos:position pos:line="7" pos:column="31"/></operator> <operator pos:line="7" pos:column="32">!<pos:position pos:line="7" pos:column="33"/></operator><name><name pos:line="7" pos:column="33">msg<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">given<pos:position pos:line="7" pos:column="43"/></name></name></expr>)<pos:position pos:line="7" pos:column="44"/></condition><then pos:line="7" pos:column="44"> <block pos:line="7" pos:column="45">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">fd<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="9" pos:column="17">struct<pos:position pos:line="9" pos:column="23"/></name> <name pos:line="9" pos:column="24">strbuf<pos:position pos:line="9" pos:column="30"/></name></name></type> <name pos:line="9" pos:column="31">buf<pos:position pos:line="9" pos:column="34"/></name> <init pos:line="9" pos:column="35">= <expr><name pos:line="9" pos:column="37">STRBUF_INIT<pos:position pos:line="9" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>

		<comment type="block" pos:line="11" pos:column="17">/* write the template message before editing: */</comment>
		<expr_stmt><expr><name pos:line="12" pos:column="17">path<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <call><name pos:line="12" pos:column="24">git_pathdup<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><literal type="string" pos:line="12" pos:column="36">"NOTES_EDITMSG"<pos:position pos:line="12" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="13" pos:column="17">fd<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <call><name pos:line="13" pos:column="22">open<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">path<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">O_CREAT<pos:position pos:line="13" pos:column="40"/></name> <operator pos:line="13" pos:column="41">|<pos:position pos:line="13" pos:column="42"/></operator> <name pos:line="13" pos:column="43">O_TRUNC<pos:position pos:line="13" pos:column="50"/></name> <operator pos:line="13" pos:column="51">|<pos:position pos:line="13" pos:column="52"/></operator> <name pos:line="13" pos:column="53">O_WRONLY<pos:position pos:line="13" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="63">0600<pos:position pos:line="13" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="69"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">fd<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">&lt;<pos:position pos:line="14" pos:column="28"/></operator> <literal type="number" pos:line="14" pos:column="26">0<pos:position pos:line="14" pos:column="27"/></literal></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="25">die_errno<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><call><name pos:line="15" pos:column="35">_<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><literal type="string" pos:line="15" pos:column="37">"could not create file '%s'"<pos:position pos:line="15" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="68">path<pos:position pos:line="15" pos:column="72"/></name></expr></argument>)<pos:position pos:line="15" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="74"/></expr_stmt></block></then></if>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name><name pos:line="17" pos:column="21">msg<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">given<pos:position pos:line="17" pos:column="31"/></name></name></expr>)<pos:position pos:line="17" pos:column="32"/></condition><then pos:line="17" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="25">write_or_die<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">fd<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="42">msg<pos:position pos:line="18" pos:column="45"/></name><operator pos:line="18" pos:column="45">-&gt;<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="47">buf<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">.<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="51">buf<pos:position pos:line="18" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="56">msg<pos:position pos:line="18" pos:column="59"/></name><operator pos:line="18" pos:column="59">-&gt;<pos:position pos:line="18" pos:column="64"/></operator><name pos:line="18" pos:column="61">buf<pos:position pos:line="18" pos:column="64"/></name><operator pos:line="18" pos:column="64">.<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="65">len<pos:position pos:line="18" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="70"/></expr_stmt></block></then>
		<elseif pos:line="19" pos:column="17">else <if pos:line="19" pos:column="22">if <condition pos:line="19" pos:column="25">(<expr><name pos:line="19" pos:column="26">prev<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">&amp;&amp;<pos:position pos:line="19" pos:column="41"/></operator> <operator pos:line="19" pos:column="34">!<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">append_only<pos:position pos:line="19" pos:column="46"/></name></expr>)<pos:position pos:line="19" pos:column="47"/></condition><then pos:line="19" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="25">write_note_data<pos:position pos:line="20" pos:column="40"/></name><argument_list pos:line="20" pos:column="40">(<argument><expr><name pos:line="20" pos:column="41">fd<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">prev<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt></block></then></if></elseif></if>

		<expr_stmt><expr><call><name pos:line="22" pos:column="17">strbuf_addch<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><operator pos:line="22" pos:column="30">&amp;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="31">buf<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="22" pos:column="36">'\n'<pos:position pos:line="22" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">strbuf_add_commented_lines<pos:position pos:line="23" pos:column="43"/></name><argument_list pos:line="23" pos:column="43">(<argument><expr><operator pos:line="23" pos:column="44">&amp;<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="45">buf<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="50">note_template<pos:position pos:line="23" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="65">strlen<pos:position pos:line="23" pos:column="71"/></name><argument_list pos:line="23" pos:column="71">(<argument><expr><name pos:line="23" pos:column="72">note_template<pos:position pos:line="23" pos:column="85"/></name></expr></argument>)<pos:position pos:line="23" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="88"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">strbuf_addch<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><operator pos:line="24" pos:column="30">&amp;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="31">buf<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="36">'\n'<pos:position pos:line="24" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">write_or_die<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">fd<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="34">buf<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">.<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="38">buf<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="43">buf<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">.<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="47">len<pos:position pos:line="25" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="27" pos:column="17">write_commented_object<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><name pos:line="27" pos:column="40">fd<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="44">object<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="29" pos:column="17">close<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">fd<pos:position pos:line="29" pos:column="25"/></name></expr></argument>)<pos:position pos:line="29" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">strbuf_release<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><operator pos:line="30" pos:column="32">&amp;<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="33">buf<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">strbuf_reset<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><operator pos:line="31" pos:column="30">&amp;<pos:position pos:line="31" pos:column="35"/></operator><operator pos:line="31" pos:column="31">(<pos:position pos:line="31" pos:column="32"/></operator><name><name pos:line="31" pos:column="32">msg<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">-&gt;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="37">buf<pos:position pos:line="31" pos:column="40"/></name></name><operator pos:line="31" pos:column="40">)<pos:position pos:line="31" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt>

		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><call><name pos:line="33" pos:column="21">launch_editor<pos:position pos:line="33" pos:column="34"/></name><argument_list pos:line="33" pos:column="34">(<argument><expr><name pos:line="33" pos:column="35">path<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="41">&amp;<pos:position pos:line="33" pos:column="46"/></operator><operator pos:line="33" pos:column="42">(<pos:position pos:line="33" pos:column="43"/></operator><name><name pos:line="33" pos:column="43">msg<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">-&gt;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="48">buf<pos:position pos:line="33" pos:column="51"/></name></name><operator pos:line="33" pos:column="51">)<pos:position pos:line="33" pos:column="52"/></operator></expr></argument>, <argument><expr><name pos:line="33" pos:column="54">NULL<pos:position pos:line="33" pos:column="58"/></name></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="60"/></condition><then pos:line="33" pos:column="60"> <block pos:line="33" pos:column="61">{
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">die<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><call><name pos:line="34" pos:column="29">_<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><literal type="string" pos:line="34" pos:column="31">"Please supply the note contents using either -m"<pos:position pos:line="34" pos:column="80"/></literal> \
			    <literal type="string" pos:line="35" pos:column="29">" or -F option"<pos:position pos:line="35" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">stripspace<pos:position pos:line="37" pos:column="27"/></name><argument_list pos:line="37" pos:column="27">(<argument><expr><operator pos:line="37" pos:column="28">&amp;<pos:position pos:line="37" pos:column="33"/></operator><operator pos:line="37" pos:column="29">(<pos:position pos:line="37" pos:column="30"/></operator><name><name pos:line="37" pos:column="30">msg<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">-&gt;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="35">buf<pos:position pos:line="37" pos:column="38"/></name></name><operator pos:line="37" pos:column="38">)<pos:position pos:line="37" pos:column="39"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="41">1<pos:position pos:line="37" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">prev<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">&amp;&amp;<pos:position pos:line="40" pos:column="28"/></operator> <name pos:line="40" pos:column="21">append_only<pos:position pos:line="40" pos:column="32"/></name></expr>)<pos:position pos:line="40" pos:column="33"/></condition><then pos:line="40" pos:column="33"> <block pos:line="40" pos:column="34">{
		<comment type="block" pos:line="41" pos:column="17">/* Append buf to previous note contents */</comment>
		<decl_stmt><decl><type><name pos:line="42" pos:column="17">unsigned<pos:position pos:line="42" pos:column="25"/></name> <name pos:line="42" pos:column="26">long<pos:position pos:line="42" pos:column="30"/></name></type> <name pos:line="42" pos:column="31">size<pos:position pos:line="42" pos:column="35"/></name></decl>;<pos:position pos:line="42" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="43" pos:column="17">enum<pos:position pos:line="43" pos:column="21"/></name> <name pos:line="43" pos:column="22">object_type<pos:position pos:line="43" pos:column="33"/></name></name></type> <name pos:line="43" pos:column="34">type<pos:position pos:line="43" pos:column="38"/></name></decl>;<pos:position pos:line="43" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="44" pos:column="17">char<pos:position pos:line="44" pos:column="21"/></name> <modifier pos:line="44" pos:column="22">*<pos:position pos:line="44" pos:column="23"/></modifier></type><name pos:line="44" pos:column="23">prev_buf<pos:position pos:line="44" pos:column="31"/></name> <init pos:line="44" pos:column="32">= <expr><call><name pos:line="44" pos:column="34">read_sha1_file<pos:position pos:line="44" pos:column="48"/></name><argument_list pos:line="44" pos:column="48">(<argument><expr><name pos:line="44" pos:column="49">prev<pos:position pos:line="44" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="55">&amp;<pos:position pos:line="44" pos:column="60"/></operator><name pos:line="44" pos:column="56">type<pos:position pos:line="44" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="62">&amp;<pos:position pos:line="44" pos:column="67"/></operator><name pos:line="44" pos:column="63">size<pos:position pos:line="44" pos:column="67"/></name></expr></argument>)<pos:position pos:line="44" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="44" pos:column="69"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="46" pos:column="17">strbuf_grow<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><operator pos:line="46" pos:column="29">&amp;<pos:position pos:line="46" pos:column="34"/></operator><operator pos:line="46" pos:column="30">(<pos:position pos:line="46" pos:column="31"/></operator><name><name pos:line="46" pos:column="31">msg<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">-&gt;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="36">buf<pos:position pos:line="46" pos:column="39"/></name></name><operator pos:line="46" pos:column="39">)<pos:position pos:line="46" pos:column="40"/></operator></expr></argument>, <argument><expr><name pos:line="46" pos:column="42">size<pos:position pos:line="46" pos:column="46"/></name> <operator pos:line="46" pos:column="47">+<pos:position pos:line="46" pos:column="48"/></operator> <literal type="number" pos:line="46" pos:column="49">1<pos:position pos:line="46" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="52"/></expr_stmt>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name><name pos:line="47" pos:column="21">msg<pos:position pos:line="47" pos:column="24"/></name><operator pos:line="47" pos:column="24">-&gt;<pos:position pos:line="47" pos:column="29"/></operator><name pos:line="47" pos:column="26">buf<pos:position pos:line="47" pos:column="29"/></name><operator pos:line="47" pos:column="29">.<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="30">len<pos:position pos:line="47" pos:column="33"/></name></name> <operator pos:line="47" pos:column="34">&amp;&amp;<pos:position pos:line="47" pos:column="44"/></operator> <name pos:line="47" pos:column="37">prev_buf<pos:position pos:line="47" pos:column="45"/></name> <operator pos:line="47" pos:column="46">&amp;&amp;<pos:position pos:line="47" pos:column="56"/></operator> <name pos:line="47" pos:column="49">size<pos:position pos:line="47" pos:column="53"/></name></expr>)<pos:position pos:line="47" pos:column="54"/></condition><then pos:line="47" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="25">strbuf_insert<pos:position pos:line="48" pos:column="38"/></name><argument_list pos:line="48" pos:column="38">(<argument><expr><operator pos:line="48" pos:column="39">&amp;<pos:position pos:line="48" pos:column="44"/></operator><operator pos:line="48" pos:column="40">(<pos:position pos:line="48" pos:column="41"/></operator><name><name pos:line="48" pos:column="41">msg<pos:position pos:line="48" pos:column="44"/></name><operator pos:line="48" pos:column="44">-&gt;<pos:position pos:line="48" pos:column="49"/></operator><name pos:line="48" pos:column="46">buf<pos:position pos:line="48" pos:column="49"/></name></name><operator pos:line="48" pos:column="49">)<pos:position pos:line="48" pos:column="50"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="52">0<pos:position pos:line="48" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="55">"\n"<pos:position pos:line="48" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="61">1<pos:position pos:line="48" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="64"/></expr_stmt></block></then></if>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name pos:line="49" pos:column="21">prev_buf<pos:position pos:line="49" pos:column="29"/></name> <operator pos:line="49" pos:column="30">&amp;&amp;<pos:position pos:line="49" pos:column="40"/></operator> <name pos:line="49" pos:column="33">size<pos:position pos:line="49" pos:column="37"/></name></expr>)<pos:position pos:line="49" pos:column="38"/></condition><then pos:line="49" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="25">strbuf_insert<pos:position pos:line="50" pos:column="38"/></name><argument_list pos:line="50" pos:column="38">(<argument><expr><operator pos:line="50" pos:column="39">&amp;<pos:position pos:line="50" pos:column="44"/></operator><operator pos:line="50" pos:column="40">(<pos:position pos:line="50" pos:column="41"/></operator><name><name pos:line="50" pos:column="41">msg<pos:position pos:line="50" pos:column="44"/></name><operator pos:line="50" pos:column="44">-&gt;<pos:position pos:line="50" pos:column="49"/></operator><name pos:line="50" pos:column="46">buf<pos:position pos:line="50" pos:column="49"/></name></name><operator pos:line="50" pos:column="49">)<pos:position pos:line="50" pos:column="50"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="52">0<pos:position pos:line="50" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="55">prev_buf<pos:position pos:line="50" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="65">size<pos:position pos:line="50" pos:column="69"/></name></expr></argument>)<pos:position pos:line="50" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="71"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">free<pos:position pos:line="51" pos:column="21"/></name><argument_list pos:line="51" pos:column="21">(<argument><expr><name pos:line="51" pos:column="22">prev_buf<pos:position pos:line="51" pos:column="30"/></name></expr></argument>)<pos:position pos:line="51" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if>

	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><operator pos:line="54" pos:column="13">!<pos:position pos:line="54" pos:column="14"/></operator><name><name pos:line="54" pos:column="14">msg<pos:position pos:line="54" pos:column="17"/></name><operator pos:line="54" pos:column="17">-&gt;<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="19">buf<pos:position pos:line="54" pos:column="22"/></name><operator pos:line="54" pos:column="22">.<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="23">len<pos:position pos:line="54" pos:column="26"/></name></name></expr>)<pos:position pos:line="54" pos:column="27"/></condition><then pos:line="54" pos:column="27"> <block pos:line="54" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="55" pos:column="17">fprintf<pos:position pos:line="55" pos:column="24"/></name><argument_list pos:line="55" pos:column="24">(<argument><expr><name pos:line="55" pos:column="25">stderr<pos:position pos:line="55" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="33">_<pos:position pos:line="55" pos:column="34"/></name><argument_list pos:line="55" pos:column="34">(<argument><expr><literal type="string" pos:line="55" pos:column="35">"Removing note for object %s\n"<pos:position pos:line="55" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="67"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="56" pos:column="25">sha1_to_hex<pos:position pos:line="56" pos:column="36"/></name><argument_list pos:line="56" pos:column="36">(<argument><expr><name pos:line="56" pos:column="37">object<pos:position pos:line="56" pos:column="43"/></name></expr></argument>)<pos:position pos:line="56" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">hashclr<pos:position pos:line="57" pos:column="24"/></name><argument_list pos:line="57" pos:column="24">(<argument><expr><name pos:line="57" pos:column="25">result<pos:position pos:line="57" pos:column="31"/></name></expr></argument>)<pos:position pos:line="57" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="58" pos:column="10"/></block></then> <else pos:line="58" pos:column="11">else <block pos:line="58" pos:column="16">{
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><call><name pos:line="59" pos:column="21">write_sha1_file<pos:position pos:line="59" pos:column="36"/></name><argument_list pos:line="59" pos:column="36">(<argument><expr><name><name pos:line="59" pos:column="37">msg<pos:position pos:line="59" pos:column="40"/></name><operator pos:line="59" pos:column="40">-&gt;<pos:position pos:line="59" pos:column="45"/></operator><name pos:line="59" pos:column="42">buf<pos:position pos:line="59" pos:column="45"/></name><operator pos:line="59" pos:column="45">.<pos:position pos:line="59" pos:column="46"/></operator><name pos:line="59" pos:column="46">buf<pos:position pos:line="59" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="51">msg<pos:position pos:line="59" pos:column="54"/></name><operator pos:line="59" pos:column="54">-&gt;<pos:position pos:line="59" pos:column="59"/></operator><name pos:line="59" pos:column="56">buf<pos:position pos:line="59" pos:column="59"/></name><operator pos:line="59" pos:column="59">.<pos:position pos:line="59" pos:column="60"/></operator><name pos:line="59" pos:column="60">len<pos:position pos:line="59" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="65">blob_type<pos:position pos:line="59" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="76">result<pos:position pos:line="59" pos:column="82"/></name></expr></argument>)<pos:position pos:line="59" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="84"/></condition><then pos:line="59" pos:column="84"> <block pos:line="59" pos:column="85">{
			<expr_stmt><expr><call><name pos:line="60" pos:column="25">error<pos:position pos:line="60" pos:column="30"/></name><argument_list pos:line="60" pos:column="30">(<argument><expr><call><name pos:line="60" pos:column="31">_<pos:position pos:line="60" pos:column="32"/></name><argument_list pos:line="60" pos:column="32">(<argument><expr><literal type="string" pos:line="60" pos:column="33">"unable to write note object"<pos:position pos:line="60" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="65"/></expr_stmt>
			<if pos:line="61" pos:column="25">if <condition pos:line="61" pos:column="28">(<expr><name pos:line="61" pos:column="29">path<pos:position pos:line="61" pos:column="33"/></name></expr>)<pos:position pos:line="61" pos:column="34"/></condition><then pos:line="61" pos:column="34">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="33">error<pos:position pos:line="62" pos:column="38"/></name><argument_list pos:line="62" pos:column="38">(<argument><expr><call><name pos:line="62" pos:column="39">_<pos:position pos:line="62" pos:column="40"/></name><argument_list pos:line="62" pos:column="40">(<argument><expr><literal type="string" pos:line="62" pos:column="41">"The note contents have been left in %s"<pos:position pos:line="62" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="82"/></argument_list></call></expr></argument>,
				      <argument><expr><name pos:line="63" pos:column="39">path<pos:position pos:line="63" pos:column="43"/></name></expr></argument>)<pos:position pos:line="63" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="45"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="64" pos:column="25">exit<pos:position pos:line="64" pos:column="29"/></name><argument_list pos:line="64" pos:column="29">(<argument><expr><literal type="number" pos:line="64" pos:column="30">128<pos:position pos:line="64" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="65" pos:column="18"/></block></then></if>
	}<pos:position pos:line="66" pos:column="10"/></block></else></if>

	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">path<pos:position pos:line="68" pos:column="17"/></name></expr>)<pos:position pos:line="68" pos:column="18"/></condition><then pos:line="68" pos:column="18"> <block pos:line="68" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">unlink_or_warn<pos:position pos:line="69" pos:column="31"/></name><argument_list pos:line="69" pos:column="31">(<argument><expr><name pos:line="69" pos:column="32">path<pos:position pos:line="69" pos:column="36"/></name></expr></argument>)<pos:position pos:line="69" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="70" pos:column="17">free<pos:position pos:line="70" pos:column="21"/></name><argument_list pos:line="70" pos:column="21">(<argument><expr><name pos:line="70" pos:column="22">path<pos:position pos:line="70" pos:column="26"/></name></expr></argument>)<pos:position pos:line="70" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="71" pos:column="10"/></block></then></if>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

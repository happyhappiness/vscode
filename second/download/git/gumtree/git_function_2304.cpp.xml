<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2304.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">found_guilty_entry<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">blame_entry<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ent<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">incremental<pos:position pos:line="3" pos:column="24"/></name></expr>)<pos:position pos:line="3" pos:column="25"/></condition><then pos:line="3" pos:column="25"> <block pos:line="3" pos:column="26">{
		<decl_stmt><decl><type><name><name pos:line="4" pos:column="17">struct<pos:position pos:line="4" pos:column="23"/></name> <name pos:line="4" pos:column="24">origin<pos:position pos:line="4" pos:column="30"/></name></name> <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier></type><name pos:line="4" pos:column="32">suspect<pos:position pos:line="4" pos:column="39"/></name> <init pos:line="4" pos:column="40">= <expr><name><name pos:line="4" pos:column="42">ent<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">-&gt;<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="47">suspect<pos:position pos:line="4" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="6" pos:column="17">printf<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><literal type="string" pos:line="6" pos:column="24">"%s %d %d %d\n"<pos:position pos:line="6" pos:column="39"/></literal></expr></argument>,
		       <argument><expr><call><name pos:line="7" pos:column="24">sha1_to_hex<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<argument><expr><name><name pos:line="7" pos:column="36">suspect<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">commit<pos:position pos:line="7" pos:column="51"/></name><operator pos:line="7" pos:column="51">-&gt;<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="53">object<pos:position pos:line="7" pos:column="59"/></name><operator pos:line="7" pos:column="59">.<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="60">sha1<pos:position pos:line="7" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr></argument>,
		       <argument><expr><name><name pos:line="8" pos:column="24">ent<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">s_lno<pos:position pos:line="8" pos:column="34"/></name></name> <operator pos:line="8" pos:column="35">+<pos:position pos:line="8" pos:column="36"/></operator> <literal type="number" pos:line="8" pos:column="37">1<pos:position pos:line="8" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="40">ent<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">lno<pos:position pos:line="8" pos:column="48"/></name></name> <operator pos:line="8" pos:column="49">+<pos:position pos:line="8" pos:column="50"/></operator> <literal type="number" pos:line="8" pos:column="51">1<pos:position pos:line="8" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="54">ent<pos:position pos:line="8" pos:column="57"/></name><operator pos:line="8" pos:column="57">-&gt;<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="59">num_lines<pos:position pos:line="8" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">emit_one_suspect_detail<pos:position pos:line="9" pos:column="40"/></name><argument_list pos:line="9" pos:column="40">(<argument><expr><name pos:line="9" pos:column="41">suspect<pos:position pos:line="9" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="50">0<pos:position pos:line="9" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">write_filename_info<pos:position pos:line="10" pos:column="36"/></name><argument_list pos:line="10" pos:column="36">(<argument><expr><name><name pos:line="10" pos:column="37">suspect<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">-&gt;<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="46">path<pos:position pos:line="10" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">maybe_flush_or_die<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">stdout<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="44">"stdout"<pos:position pos:line="11" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

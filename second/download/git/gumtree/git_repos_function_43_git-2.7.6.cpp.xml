<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_43_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sha1_compare<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">_a<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">void<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">_b<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">pack_idx_entry<pos:position pos:line="3" pos:column="30"/></name></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier></type><name pos:line="3" pos:column="32">a<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><operator pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></operator><operator pos:line="3" pos:column="37">(<pos:position pos:line="3" pos:column="38"/></operator>struct <name pos:line="3" pos:column="45">pack_idx_entry<pos:position pos:line="3" pos:column="59"/></name> <operator pos:line="3" pos:column="60">*<pos:position pos:line="3" pos:column="61"/></operator><operator pos:line="3" pos:column="61">*<pos:position pos:line="3" pos:column="62"/></operator><operator pos:line="3" pos:column="62">)<pos:position pos:line="3" pos:column="63"/></operator><name pos:line="3" pos:column="63">_a<pos:position pos:line="3" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="66"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">pack_idx_entry<pos:position pos:line="4" pos:column="30"/></name></name> <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier></type><name pos:line="4" pos:column="32">b<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><operator pos:line="4" pos:column="36">*<pos:position pos:line="4" pos:column="37"/></operator><operator pos:line="4" pos:column="37">(<pos:position pos:line="4" pos:column="38"/></operator>struct <name pos:line="4" pos:column="45">pack_idx_entry<pos:position pos:line="4" pos:column="59"/></name> <operator pos:line="4" pos:column="60">*<pos:position pos:line="4" pos:column="61"/></operator><operator pos:line="4" pos:column="61">*<pos:position pos:line="4" pos:column="62"/></operator><operator pos:line="4" pos:column="62">)<pos:position pos:line="4" pos:column="63"/></operator><name pos:line="4" pos:column="63">_b<pos:position pos:line="4" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="66"/></decl_stmt>
	<return pos:line="5" pos:column="9">return <expr><call><name pos:line="5" pos:column="16">hashcmp<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name><name pos:line="5" pos:column="24">a<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">sha1<pos:position pos:line="5" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="33">b<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">-&gt;<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="36">sha1<pos:position pos:line="5" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="42"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1086_git-2.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">create_boundary_commit_list<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">rev_info<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">revs<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">i<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">c<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object_array<pos:position pos:line="5" pos:column="28"/></name></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">array<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><operator pos:line="5" pos:column="38">&amp;<pos:position pos:line="5" pos:column="43"/></operator><name><name pos:line="5" pos:column="39">revs<pos:position pos:line="5" pos:column="43"/></name><operator pos:line="5" pos:column="43">-&gt;<pos:position pos:line="5" pos:column="48"/></operator><name pos:line="5" pos:column="45">boundary_commits<pos:position pos:line="5" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">object_array_entry<pos:position pos:line="6" pos:column="34"/></name></name> <modifier pos:line="6" pos:column="35">*<pos:position pos:line="6" pos:column="36"/></modifier></type><name pos:line="6" pos:column="36">objects<pos:position pos:line="6" pos:column="43"/></name> <init pos:line="6" pos:column="44">= <expr><name><name pos:line="6" pos:column="46">array<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">-&gt;<pos:position pos:line="6" pos:column="56"/></operator><name pos:line="6" pos:column="53">objects<pos:position pos:line="6" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="61"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/*
	 * If revs-&gt;commits is non-NULL at this point, an error occurred in
	 * get_revision_1().  Ignore the error and continue printing the
	 * boundary commits anyway.  (This is what the code has always
	 * done.)
	 */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">revs<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">-&gt;<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="19">commits<pos:position pos:line="14" pos:column="26"/></name></name></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27"> <block pos:line="14" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">free_commit_list<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><name><name pos:line="15" pos:column="34">revs<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">commits<pos:position pos:line="15" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">revs<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">commits<pos:position pos:line="16" pos:column="30"/></name></name> <operator pos:line="16" pos:column="31">=<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="33">NULL<pos:position pos:line="16" pos:column="37"/></name></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="19" pos:column="9">/*
	 * Put all of the actual boundary commits from revs-&gt;boundary_commits
	 * into revs-&gt;commits
	 */</comment>
	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">i<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">0<pos:position pos:line="23" pos:column="19"/></literal></expr>;<pos:position pos:line="23" pos:column="20"/></init> <condition><expr><name pos:line="23" pos:column="21">i<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">&lt;<pos:position pos:line="23" pos:column="27"/></operator> <name><name pos:line="23" pos:column="25">array<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">-&gt;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="32">nr<pos:position pos:line="23" pos:column="34"/></name></name></expr>;<pos:position pos:line="23" pos:column="35"/></condition> <incr><expr><name pos:line="23" pos:column="36">i<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">++<pos:position pos:line="23" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="40"/></control> <block pos:line="23" pos:column="41">{
		<expr_stmt><expr><name pos:line="24" pos:column="17">c<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <operator pos:line="24" pos:column="21">(<pos:position pos:line="24" pos:column="22"/></operator>struct <name pos:line="24" pos:column="29">commit<pos:position pos:line="24" pos:column="35"/></name> <operator pos:line="24" pos:column="36">*<pos:position pos:line="24" pos:column="37"/></operator><operator pos:line="24" pos:column="37">)<pos:position pos:line="24" pos:column="38"/></operator><operator pos:line="24" pos:column="38">(<pos:position pos:line="24" pos:column="39"/></operator><name><name pos:line="24" pos:column="39">objects<pos:position pos:line="24" pos:column="46"/></name><index pos:line="24" pos:column="46">[<expr><name pos:line="24" pos:column="47">i<pos:position pos:line="24" pos:column="48"/></name></expr>]<pos:position pos:line="24" pos:column="49"/></index></name><operator pos:line="24" pos:column="49">.<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="50">item<pos:position pos:line="24" pos:column="54"/></name><operator pos:line="24" pos:column="54">)<pos:position pos:line="24" pos:column="55"/></operator></expr>;<pos:position pos:line="24" pos:column="56"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">!<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">c<pos:position pos:line="25" pos:column="23"/></name></expr>)<pos:position pos:line="25" pos:column="24"/></condition><then pos:line="25" pos:column="24">
			<block type="pseudo"><continue pos:line="26" pos:column="25">continue;<pos:position pos:line="26" pos:column="34"/></continue></block></then></if>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><operator pos:line="27" pos:column="22">(<pos:position pos:line="27" pos:column="23"/></operator><name><name pos:line="27" pos:column="23">c<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">-&gt;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="26">object<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">.<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="33">flags<pos:position pos:line="27" pos:column="38"/></name></name> <operator pos:line="27" pos:column="39">&amp;<pos:position pos:line="27" pos:column="44"/></operator> <name pos:line="27" pos:column="41">CHILD_SHOWN<pos:position pos:line="27" pos:column="52"/></name><operator pos:line="27" pos:column="52">)<pos:position pos:line="27" pos:column="53"/></operator></expr>)<pos:position pos:line="27" pos:column="54"/></condition><then pos:line="27" pos:column="54">
			<block type="pseudo"><continue pos:line="28" pos:column="25">continue;<pos:position pos:line="28" pos:column="34"/></continue></block></then></if>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name><name pos:line="29" pos:column="21">c<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">object<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">.<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="31">flags<pos:position pos:line="29" pos:column="36"/></name></name> <operator pos:line="29" pos:column="37">&amp;<pos:position pos:line="29" pos:column="42"/></operator> <operator pos:line="29" pos:column="39">(<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="40">SHOWN<pos:position pos:line="29" pos:column="45"/></name> <operator pos:line="29" pos:column="46">|<pos:position pos:line="29" pos:column="47"/></operator> <name pos:line="29" pos:column="48">BOUNDARY<pos:position pos:line="29" pos:column="56"/></name><operator pos:line="29" pos:column="56">)<pos:position pos:line="29" pos:column="57"/></operator></expr>)<pos:position pos:line="29" pos:column="58"/></condition><then pos:line="29" pos:column="58">
			<block type="pseudo"><continue pos:line="30" pos:column="25">continue;<pos:position pos:line="30" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">c<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">object<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">.<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="27">flags<pos:position pos:line="31" pos:column="32"/></name></name> <operator pos:line="31" pos:column="33">|=<pos:position pos:line="31" pos:column="35"/></operator> <name pos:line="31" pos:column="36">BOUNDARY<pos:position pos:line="31" pos:column="44"/></name></expr>;<pos:position pos:line="31" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">commit_list_insert<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">c<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="39">&amp;<pos:position pos:line="32" pos:column="44"/></operator><name><name pos:line="32" pos:column="40">revs<pos:position pos:line="32" pos:column="44"/></name><operator pos:line="32" pos:column="44">-&gt;<pos:position pos:line="32" pos:column="49"/></operator><name pos:line="32" pos:column="46">commits<pos:position pos:line="32" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></for>

	<comment type="block" pos:line="35" pos:column="9">/*
	 * If revs-&gt;topo_order is set, sort the boundary commits
	 * in topological order
	 */</comment>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">sort_in_topological_order<pos:position pos:line="39" pos:column="34"/></name><argument_list pos:line="39" pos:column="34">(<argument><expr><operator pos:line="39" pos:column="35">&amp;<pos:position pos:line="39" pos:column="40"/></operator><name><name pos:line="39" pos:column="36">revs<pos:position pos:line="39" pos:column="40"/></name><operator pos:line="39" pos:column="40">-&gt;<pos:position pos:line="39" pos:column="45"/></operator><name pos:line="39" pos:column="42">commits<pos:position pos:line="39" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="51">revs<pos:position pos:line="39" pos:column="55"/></name><operator pos:line="39" pos:column="55">-&gt;<pos:position pos:line="39" pos:column="60"/></operator><name pos:line="39" pos:column="57">sort_order<pos:position pos:line="39" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="69"/></expr_stmt>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

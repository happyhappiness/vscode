<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5907_git-2.9.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">apply_one_window<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">line_buffer<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">delta<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">off_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">delta_len<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
			    <parameter><decl><type><name><name pos:line="2" pos:column="29">struct<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">sliding_view<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">preimage<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">FILE<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">out<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">rv<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><operator pos:line="4" pos:column="18">-<pos:position pos:line="4" pos:column="19"/></operator><literal type="number" pos:line="4" pos:column="19">1<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">window<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">ctx<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><call><name pos:line="5" pos:column="29">WINDOW_INIT<pos:position pos:line="5" pos:column="40"/></name><argument_list pos:line="5" pos:column="40">(<argument><expr><name pos:line="5" pos:column="41">preimage<pos:position pos:line="5" pos:column="49"/></name></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">out_len<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">instructions_len<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">data_len<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">assert<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">delta_len<pos:position pos:line="9" pos:column="25"/></name></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* "source view" offset and length already handled; */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">read_length<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">delta<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="32">&amp;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="33">out_len<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">delta_len<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call> <operator pos:line="12" pos:column="53">||<pos:position pos:line="12" pos:column="55"/></operator>
	    <call><name pos:line="13" pos:column="13">read_length<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">delta<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="32">&amp;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="33">instructions_len<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">delta_len<pos:position pos:line="13" pos:column="60"/></name></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call> <operator pos:line="13" pos:column="62">||<pos:position pos:line="13" pos:column="64"/></operator>
	    <call><name pos:line="14" pos:column="13">read_length<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">delta<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="32">&amp;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="33">data_len<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="43">delta_len<pos:position pos:line="14" pos:column="52"/></name></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call> <operator pos:line="14" pos:column="54">||<pos:position pos:line="14" pos:column="56"/></operator>
	    <call><name pos:line="15" pos:column="13">read_chunk<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">delta<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">delta_len<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="42">&amp;<pos:position pos:line="15" pos:column="47"/></operator><name><name pos:line="15" pos:column="43">ctx<pos:position pos:line="15" pos:column="46"/></name><operator pos:line="15" pos:column="46">.<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="47">instructions<pos:position pos:line="15" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="61">instructions_len<pos:position pos:line="15" pos:column="77"/></name></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></call> <operator pos:line="15" pos:column="79">||<pos:position pos:line="15" pos:column="81"/></operator>
	    <call><name pos:line="16" pos:column="13">read_chunk<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">delta<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="31">delta_len<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="42">&amp;<pos:position pos:line="16" pos:column="47"/></operator><name><name pos:line="16" pos:column="43">ctx<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">.<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="47">data<pos:position pos:line="16" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="53">data_len<pos:position pos:line="16" pos:column="61"/></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="63"/></condition><then pos:line="16" pos:column="63">
		<block type="pseudo"><goto pos:line="17" pos:column="17">goto <name pos:line="17" pos:column="22">error_out<pos:position pos:line="17" pos:column="31"/></name>;<pos:position pos:line="17" pos:column="32"/></goto></block></then></if>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">strbuf_grow<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><operator pos:line="18" pos:column="21">&amp;<pos:position pos:line="18" pos:column="26"/></operator><name><name pos:line="18" pos:column="22">ctx<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">.<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">out<pos:position pos:line="18" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="31">out_len<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">apply_window_in_core<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><operator pos:line="19" pos:column="34">&amp;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="35">ctx<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40">
		<block type="pseudo"><goto pos:line="20" pos:column="17">goto <name pos:line="20" pos:column="22">error_out<pos:position pos:line="20" pos:column="31"/></name>;<pos:position pos:line="20" pos:column="32"/></goto></block></then></if>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">ctx<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">.<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">out<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">.<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">len<pos:position pos:line="21" pos:column="24"/></name></name> <operator pos:line="21" pos:column="25">!=<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="28">out_len<pos:position pos:line="21" pos:column="35"/></name></expr>)<pos:position pos:line="21" pos:column="36"/></condition><then pos:line="21" pos:column="36"> <block pos:line="21" pos:column="37">{
		<expr_stmt><expr><name pos:line="22" pos:column="17">rv<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <call><name pos:line="22" pos:column="22">error<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><literal type="string" pos:line="22" pos:column="28">"invalid delta: incorrect postimage length"<pos:position pos:line="22" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="73"/></expr_stmt>
		<goto pos:line="23" pos:column="17">goto <name pos:line="23" pos:column="22">error_out<pos:position pos:line="23" pos:column="31"/></name>;<pos:position pos:line="23" pos:column="32"/></goto>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">write_strbuf<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><operator pos:line="25" pos:column="26">&amp;<pos:position pos:line="25" pos:column="31"/></operator><name><name pos:line="25" pos:column="27">ctx<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">.<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="31">out<pos:position pos:line="25" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="36">out<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="41"/></condition><then pos:line="25" pos:column="41">
		<block type="pseudo"><goto pos:line="26" pos:column="17">goto <name pos:line="26" pos:column="22">error_out<pos:position pos:line="26" pos:column="31"/></name>;<pos:position pos:line="26" pos:column="32"/></goto></block></then></if>
	<expr_stmt><expr><name pos:line="27" pos:column="9">rv<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <literal type="number" pos:line="27" pos:column="14">0<pos:position pos:line="27" pos:column="15"/></literal></expr>;<pos:position pos:line="27" pos:column="16"/></expr_stmt>
<label><name pos:line="28" pos:column="1">error_out<pos:position pos:line="28" pos:column="10"/></name>:<pos:position pos:line="28" pos:column="11"/></label>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">window_release<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><operator pos:line="29" pos:column="24">&amp;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="25">ctx<pos:position pos:line="29" pos:column="28"/></name></expr></argument>)<pos:position pos:line="29" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
	<return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">rv<pos:position pos:line="30" pos:column="18"/></name></expr>;<pos:position pos:line="30" pos:column="19"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_3021.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">unpack_data<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">object_entry<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">obj<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
			 <parameter><function_decl><type><name pos:line="2" pos:column="26">int<pos:position pos:line="2" pos:column="29"/></name></type> (<modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier><name pos:line="2" pos:column="32">consume<pos:position pos:line="2" pos:column="39"/></name>)<parameter_list pos:line="2" pos:column="40">(<parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">unsigned<pos:position pos:line="2" pos:column="55"/></name> <name pos:line="2" pos:column="56">char<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">unsigned<pos:position pos:line="2" pos:column="72"/></name></type> <name pos:line="2" pos:column="73">long<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="79">void<pos:position pos:line="2" pos:column="83"/></name> <modifier pos:line="2" pos:column="84">*<pos:position pos:line="2" pos:column="85"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="86"/></parameter_list></function_decl></parameter>,
			 <parameter><decl><type><name pos:line="3" pos:column="26">void<pos:position pos:line="3" pos:column="30"/></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier></type><name pos:line="3" pos:column="32">cb_data<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="40"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">off_t<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">from<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name><name pos:line="5" pos:column="22">obj<pos:position pos:line="5" pos:column="25"/></name><index pos:line="5" pos:column="25">[<expr><literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr>]<pos:position pos:line="5" pos:column="28"/></index></name><operator pos:line="5" pos:column="28">.<pos:position pos:line="5" pos:column="29"/></operator><name><name pos:line="5" pos:column="29">idx<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">.<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">offset<pos:position pos:line="5" pos:column="39"/></name></name> <operator pos:line="5" pos:column="40">+<pos:position pos:line="5" pos:column="41"/></operator> <name><name pos:line="5" pos:column="42">obj<pos:position pos:line="5" pos:column="45"/></name><index pos:line="5" pos:column="45">[<expr><literal type="number" pos:line="5" pos:column="46">0<pos:position pos:line="5" pos:column="47"/></literal></expr>]<pos:position pos:line="5" pos:column="48"/></index></name><operator pos:line="5" pos:column="48">.<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="49">hdr_size<pos:position pos:line="5" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">long<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">len<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name><name pos:line="6" pos:column="29">obj<pos:position pos:line="6" pos:column="32"/></name><index pos:line="6" pos:column="32">[<expr><literal type="number" pos:line="6" pos:column="33">1<pos:position pos:line="6" pos:column="34"/></literal></expr>]<pos:position pos:line="6" pos:column="35"/></index></name><operator pos:line="6" pos:column="35">.<pos:position pos:line="6" pos:column="36"/></operator><name><name pos:line="6" pos:column="36">idx<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">.<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="40">offset<pos:position pos:line="6" pos:column="46"/></name></name> <operator pos:line="6" pos:column="47">-<pos:position pos:line="6" pos:column="48"/></operator> <name pos:line="6" pos:column="49">from<pos:position pos:line="6" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">char<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">data<pos:position pos:line="7" pos:column="28"/></name></decl>, <modifier pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="31">inbuf<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">git_zstream<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">stream<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">status<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">data<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">xmallocz<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><ternary><condition><expr><name pos:line="11" pos:column="25">consume<pos:position pos:line="11" pos:column="32"/></name></expr> ?<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34"> <expr><literal type="number" pos:line="11" pos:column="35">64<pos:position pos:line="11" pos:column="37"/></literal><operator pos:line="11" pos:column="37">*<pos:position pos:line="11" pos:column="38"/></operator><literal type="number" pos:line="11" pos:column="38">1024<pos:position pos:line="11" pos:column="42"/></literal></expr> <pos:position pos:line="11" pos:column="43"/></then><else pos:line="11" pos:column="43">: <expr><name><name pos:line="11" pos:column="45">obj<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">-&gt;<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="50">size<pos:position pos:line="11" pos:column="54"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">inbuf<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">xmalloc<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><ternary><condition><expr><operator pos:line="12" pos:column="25">(<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">len<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">&lt;<pos:position pos:line="12" pos:column="34"/></operator> <literal type="number" pos:line="12" pos:column="32">64<pos:position pos:line="12" pos:column="34"/></literal><operator pos:line="12" pos:column="34">*<pos:position pos:line="12" pos:column="35"/></operator><literal type="number" pos:line="12" pos:column="35">1024<pos:position pos:line="12" pos:column="39"/></literal><operator pos:line="12" pos:column="39">)<pos:position pos:line="12" pos:column="40"/></operator></expr> ?<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42"> <expr><name pos:line="12" pos:column="43">len<pos:position pos:line="12" pos:column="46"/></name></expr> <pos:position pos:line="12" pos:column="47"/></then><else pos:line="12" pos:column="47">: <expr><literal type="number" pos:line="12" pos:column="49">64<pos:position pos:line="12" pos:column="51"/></literal><operator pos:line="12" pos:column="51">*<pos:position pos:line="12" pos:column="52"/></operator><literal type="number" pos:line="12" pos:column="52">1024<pos:position pos:line="12" pos:column="56"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="58"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">memset<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><operator pos:line="14" pos:column="16">&amp;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="17">stream<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="25">0<pos:position pos:line="14" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="28">sizeof<argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">stream<pos:position pos:line="14" pos:column="41"/></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">git_inflate_init<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><operator pos:line="15" pos:column="26">&amp;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="27">stream<pos:position pos:line="15" pos:column="33"/></name></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">stream<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">.<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">next_out<pos:position pos:line="16" pos:column="24"/></name></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">data<pos:position pos:line="16" pos:column="31"/></name></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">stream<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">.<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">avail_out<pos:position pos:line="17" pos:column="25"/></name></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <ternary><condition><expr><name pos:line="17" pos:column="28">consume<pos:position pos:line="17" pos:column="35"/></name></expr> ?<pos:position pos:line="17" pos:column="37"/></condition><then pos:line="17" pos:column="37"> <expr><literal type="number" pos:line="17" pos:column="38">64<pos:position pos:line="17" pos:column="40"/></literal><operator pos:line="17" pos:column="40">*<pos:position pos:line="17" pos:column="41"/></operator><literal type="number" pos:line="17" pos:column="41">1024<pos:position pos:line="17" pos:column="45"/></literal></expr> <pos:position pos:line="17" pos:column="46"/></then><else pos:line="17" pos:column="46">: <expr><name><name pos:line="17" pos:column="48">obj<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">-&gt;<pos:position pos:line="17" pos:column="56"/></operator><name pos:line="17" pos:column="53">size<pos:position pos:line="17" pos:column="57"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>

	<do pos:line="19" pos:column="9">do <block pos:line="19" pos:column="12">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">ssize_t<pos:position pos:line="20" pos:column="24"/></name></type> <name pos:line="20" pos:column="25">n<pos:position pos:line="20" pos:column="26"/></name> <init pos:line="20" pos:column="27">= <expr><ternary><condition><expr><operator pos:line="20" pos:column="29">(<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">len<pos:position pos:line="20" pos:column="33"/></name> <operator pos:line="20" pos:column="34">&lt;<pos:position pos:line="20" pos:column="38"/></operator> <literal type="number" pos:line="20" pos:column="36">64<pos:position pos:line="20" pos:column="38"/></literal><operator pos:line="20" pos:column="38">*<pos:position pos:line="20" pos:column="39"/></operator><literal type="number" pos:line="20" pos:column="39">1024<pos:position pos:line="20" pos:column="43"/></literal><operator pos:line="20" pos:column="43">)<pos:position pos:line="20" pos:column="44"/></operator></expr> ?<pos:position pos:line="20" pos:column="46"/></condition><then pos:line="20" pos:column="46"> <expr><name pos:line="20" pos:column="47">len<pos:position pos:line="20" pos:column="50"/></name></expr> <pos:position pos:line="20" pos:column="51"/></then><else pos:line="20" pos:column="51">: <expr><literal type="number" pos:line="20" pos:column="53">64<pos:position pos:line="20" pos:column="55"/></literal><operator pos:line="20" pos:column="55">*<pos:position pos:line="20" pos:column="56"/></operator><literal type="number" pos:line="20" pos:column="56">1024<pos:position pos:line="20" pos:column="60"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="20" pos:column="61"/></decl_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">n<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <call><name pos:line="21" pos:column="21">xpread<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><call><name pos:line="21" pos:column="28">get_thread_data<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">()<pos:position pos:line="21" pos:column="45"/></argument_list></call><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">pack_fd<pos:position pos:line="21" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="56">inbuf<pos:position pos:line="21" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="63">n<pos:position pos:line="21" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="66">from<pos:position pos:line="21" pos:column="70"/></name></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="72"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">n<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">&lt;<pos:position pos:line="22" pos:column="27"/></operator> <literal type="number" pos:line="22" pos:column="25">0<pos:position pos:line="22" pos:column="26"/></literal></expr>)<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="25">die_errno<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><call><name pos:line="23" pos:column="35">_<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><literal type="string" pos:line="23" pos:column="37">"cannot pread pack file"<pos:position pos:line="23" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt></block></then></if>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">n<pos:position pos:line="24" pos:column="23"/></name></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then pos:line="24" pos:column="24">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">die<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><call><name pos:line="25" pos:column="29">Q_<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><literal type="string" pos:line="25" pos:column="32">"premature end of pack file, %lu byte missing"<pos:position pos:line="25" pos:column="78"/></literal></expr></argument>,
			       <argument><expr><literal type="string" pos:line="26" pos:column="32">"premature end of pack file, %lu bytes missing"<pos:position pos:line="26" pos:column="79"/></literal></expr></argument>,
			       <argument><expr><name pos:line="27" pos:column="32">len<pos:position pos:line="27" pos:column="35"/></name></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="28" pos:column="29">len<pos:position pos:line="28" pos:column="32"/></name></expr></argument>)<pos:position pos:line="28" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="29" pos:column="17">from<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">+=<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="25">n<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">len<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">-=<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">n<pos:position pos:line="30" pos:column="25"/></name></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">stream<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">.<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">next_in<pos:position pos:line="31" pos:column="31"/></name></name> <operator pos:line="31" pos:column="32">=<pos:position pos:line="31" pos:column="33"/></operator> <name pos:line="31" pos:column="34">inbuf<pos:position pos:line="31" pos:column="39"/></name></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">stream<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">.<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">avail_in<pos:position pos:line="32" pos:column="32"/></name></name> <operator pos:line="32" pos:column="33">=<pos:position pos:line="32" pos:column="34"/></operator> <name pos:line="32" pos:column="35">n<pos:position pos:line="32" pos:column="36"/></name></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">!<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">consume<pos:position pos:line="33" pos:column="29"/></name></expr>)<pos:position pos:line="33" pos:column="30"/></condition><then pos:line="33" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="25">status<pos:position pos:line="34" pos:column="31"/></name> <operator pos:line="34" pos:column="32">=<pos:position pos:line="34" pos:column="33"/></operator> <call><name pos:line="34" pos:column="34">git_inflate<pos:position pos:line="34" pos:column="45"/></name><argument_list pos:line="34" pos:column="45">(<argument><expr><operator pos:line="34" pos:column="46">&amp;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="47">stream<pos:position pos:line="34" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="55">0<pos:position pos:line="34" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt></block></then>
		<else pos:line="35" pos:column="17">else <block pos:line="35" pos:column="22">{
			<do pos:line="36" pos:column="25">do <block pos:line="36" pos:column="28">{
				<expr_stmt><expr><name pos:line="37" pos:column="33">status<pos:position pos:line="37" pos:column="39"/></name> <operator pos:line="37" pos:column="40">=<pos:position pos:line="37" pos:column="41"/></operator> <call><name pos:line="37" pos:column="42">git_inflate<pos:position pos:line="37" pos:column="53"/></name><argument_list pos:line="37" pos:column="53">(<argument><expr><operator pos:line="37" pos:column="54">&amp;<pos:position pos:line="37" pos:column="59"/></operator><name pos:line="37" pos:column="55">stream<pos:position pos:line="37" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="63">0<pos:position pos:line="37" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="66"/></expr_stmt>
				<if pos:line="38" pos:column="33">if <condition pos:line="38" pos:column="36">(<expr><call><name pos:line="38" pos:column="37">consume<pos:position pos:line="38" pos:column="44"/></name><argument_list pos:line="38" pos:column="44">(<argument><expr><name pos:line="38" pos:column="45">data<pos:position pos:line="38" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="51">stream<pos:position pos:line="38" pos:column="57"/></name><operator pos:line="38" pos:column="57">.<pos:position pos:line="38" pos:column="58"/></operator><name pos:line="38" pos:column="58">next_out<pos:position pos:line="38" pos:column="66"/></name></name> <operator pos:line="38" pos:column="67">-<pos:position pos:line="38" pos:column="68"/></operator> <name pos:line="38" pos:column="69">data<pos:position pos:line="38" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="75">cb_data<pos:position pos:line="38" pos:column="82"/></name></expr></argument>)<pos:position pos:line="38" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="84"/></condition><then pos:line="38" pos:column="84"> <block pos:line="38" pos:column="85">{
					<expr_stmt><expr><call><name pos:line="39" pos:column="41">free<pos:position pos:line="39" pos:column="45"/></name><argument_list pos:line="39" pos:column="45">(<argument><expr><name pos:line="39" pos:column="46">inbuf<pos:position pos:line="39" pos:column="51"/></name></expr></argument>)<pos:position pos:line="39" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="53"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="40" pos:column="41">free<pos:position pos:line="40" pos:column="45"/></name><argument_list pos:line="40" pos:column="45">(<argument><expr><name pos:line="40" pos:column="46">data<pos:position pos:line="40" pos:column="50"/></name></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="52"/></expr_stmt>
					<return pos:line="41" pos:column="41">return <expr><name pos:line="41" pos:column="48">NULL<pos:position pos:line="41" pos:column="52"/></name></expr>;<pos:position pos:line="41" pos:column="53"/></return>
				}<pos:position pos:line="42" pos:column="34"/></block></then></if>
				<expr_stmt><expr><name><name pos:line="43" pos:column="33">stream<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">.<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="40">next_out<pos:position pos:line="43" pos:column="48"/></name></name> <operator pos:line="43" pos:column="49">=<pos:position pos:line="43" pos:column="50"/></operator> <name pos:line="43" pos:column="51">data<pos:position pos:line="43" pos:column="55"/></name></expr>;<pos:position pos:line="43" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="44" pos:column="33">stream<pos:position pos:line="44" pos:column="39"/></name><operator pos:line="44" pos:column="39">.<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="40">avail_out<pos:position pos:line="44" pos:column="49"/></name></name> <operator pos:line="44" pos:column="50">=<pos:position pos:line="44" pos:column="51"/></operator> <literal type="number" pos:line="44" pos:column="52">64<pos:position pos:line="44" pos:column="54"/></literal><operator pos:line="44" pos:column="54">*<pos:position pos:line="44" pos:column="55"/></operator><literal type="number" pos:line="44" pos:column="55">1024<pos:position pos:line="44" pos:column="59"/></literal></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt>
			}<pos:position pos:line="45" pos:column="26"/></block> while <condition pos:line="45" pos:column="33">(<expr><name pos:line="45" pos:column="34">status<pos:position pos:line="45" pos:column="40"/></name> <operator pos:line="45" pos:column="41">==<pos:position pos:line="45" pos:column="43"/></operator> <name pos:line="45" pos:column="44">Z_OK<pos:position pos:line="45" pos:column="48"/></name> <operator pos:line="45" pos:column="49">&amp;&amp;<pos:position pos:line="45" pos:column="59"/></operator> <name><name pos:line="45" pos:column="52">stream<pos:position pos:line="45" pos:column="58"/></name><operator pos:line="45" pos:column="58">.<pos:position pos:line="45" pos:column="59"/></operator><name pos:line="45" pos:column="59">avail_in<pos:position pos:line="45" pos:column="67"/></name></name></expr>)<pos:position pos:line="45" pos:column="68"/></condition>;<pos:position pos:line="45" pos:column="69"/></do>
		}<pos:position pos:line="46" pos:column="18"/></block></else></if>
	}<pos:position pos:line="47" pos:column="10"/></block> while <condition pos:line="47" pos:column="17">(<expr><name pos:line="47" pos:column="18">len<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">&amp;&amp;<pos:position pos:line="47" pos:column="32"/></operator> <name pos:line="47" pos:column="25">status<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">==<pos:position pos:line="47" pos:column="34"/></operator> <name pos:line="47" pos:column="35">Z_OK<pos:position pos:line="47" pos:column="39"/></name> <operator pos:line="47" pos:column="40">&amp;&amp;<pos:position pos:line="47" pos:column="50"/></operator> <operator pos:line="47" pos:column="43">!<pos:position pos:line="47" pos:column="44"/></operator><name><name pos:line="47" pos:column="44">stream<pos:position pos:line="47" pos:column="50"/></name><operator pos:line="47" pos:column="50">.<pos:position pos:line="47" pos:column="51"/></operator><name pos:line="47" pos:column="51">avail_in<pos:position pos:line="47" pos:column="59"/></name></name></expr>)<pos:position pos:line="47" pos:column="60"/></condition>;<pos:position pos:line="47" pos:column="61"/></do>

	<comment type="block" pos:line="49" pos:column="9">/* This has been inflated OK when first encountered, so... */</comment>
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">status<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">!=<pos:position pos:line="50" pos:column="22"/></operator> <name pos:line="50" pos:column="23">Z_STREAM_END<pos:position pos:line="50" pos:column="35"/></name> <operator pos:line="50" pos:column="36">||<pos:position pos:line="50" pos:column="38"/></operator> <name><name pos:line="50" pos:column="39">stream<pos:position pos:line="50" pos:column="45"/></name><operator pos:line="50" pos:column="45">.<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="46">total_out<pos:position pos:line="50" pos:column="55"/></name></name> <operator pos:line="50" pos:column="56">!=<pos:position pos:line="50" pos:column="58"/></operator> <name><name pos:line="50" pos:column="59">obj<pos:position pos:line="50" pos:column="62"/></name><operator pos:line="50" pos:column="62">-&gt;<pos:position pos:line="50" pos:column="67"/></operator><name pos:line="50" pos:column="64">size<pos:position pos:line="50" pos:column="68"/></name></name></expr>)<pos:position pos:line="50" pos:column="69"/></condition><then pos:line="50" pos:column="69">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="17">die<pos:position pos:line="51" pos:column="20"/></name><argument_list pos:line="51" pos:column="20">(<argument><expr><call><name pos:line="51" pos:column="21">_<pos:position pos:line="51" pos:column="22"/></name><argument_list pos:line="51" pos:column="22">(<argument><expr><literal type="string" pos:line="51" pos:column="23">"serious inflate inconsistency"<pos:position pos:line="51" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="57"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="53" pos:column="9">git_inflate_end<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">(<argument><expr><operator pos:line="53" pos:column="25">&amp;<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="26">stream<pos:position pos:line="53" pos:column="32"/></name></expr></argument>)<pos:position pos:line="53" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">free<pos:position pos:line="54" pos:column="13"/></name><argument_list pos:line="54" pos:column="13">(<argument><expr><name pos:line="54" pos:column="14">inbuf<pos:position pos:line="54" pos:column="19"/></name></expr></argument>)<pos:position pos:line="54" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="21"/></expr_stmt>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">consume<pos:position pos:line="55" pos:column="20"/></name></expr>)<pos:position pos:line="55" pos:column="21"/></condition><then pos:line="55" pos:column="21"> <block pos:line="55" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">free<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><name pos:line="56" pos:column="22">data<pos:position pos:line="56" pos:column="26"/></name></expr></argument>)<pos:position pos:line="56" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="57" pos:column="17">data<pos:position pos:line="57" pos:column="21"/></name> <operator pos:line="57" pos:column="22">=<pos:position pos:line="57" pos:column="23"/></operator> <name pos:line="57" pos:column="24">NULL<pos:position pos:line="57" pos:column="28"/></name></expr>;<pos:position pos:line="57" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="58" pos:column="10"/></block></then></if>
	<return pos:line="59" pos:column="9">return <expr><name pos:line="59" pos:column="16">data<pos:position pos:line="59" pos:column="20"/></name></expr>;<pos:position pos:line="59" pos:column="21"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4931_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ewah_add_dirty_words<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(
	<parameter><decl><type><name><name pos:line="2" pos:column="9">struct<pos:position pos:line="2" pos:column="15"/></name> <name pos:line="2" pos:column="16">ewah_bitmap<pos:position pos:line="2" pos:column="27"/></name></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">self<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">eword_t<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">buffer<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">number<pos:position pos:line="3" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="24">int<pos:position pos:line="3" pos:column="27"/></name></type> <name pos:line="3" pos:column="28">negate<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="35"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">literals<pos:position pos:line="5" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="26">can_add<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>

	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><literal type="number" pos:line="7" pos:column="16">1<pos:position pos:line="7" pos:column="17"/></literal></expr>)<pos:position pos:line="7" pos:column="18"/></condition> <block pos:line="7" pos:column="19">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">literals<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <call><name pos:line="8" pos:column="28">rlw_get_literal_words<pos:position pos:line="8" pos:column="49"/></name><argument_list pos:line="8" pos:column="49">(<argument><expr><name><name pos:line="8" pos:column="50">self<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">-&gt;<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="56">rlw<pos:position pos:line="8" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name pos:line="9" pos:column="17">can_add<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">=<pos:position pos:line="9" pos:column="26"/></operator> <call><name pos:line="9" pos:column="27">min_size<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">number<pos:position pos:line="9" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">RLW_LARGEST_LITERAL_COUNT<pos:position pos:line="9" pos:column="69"/></name> <operator pos:line="9" pos:column="70">-<pos:position pos:line="9" pos:column="71"/></operator> <name pos:line="9" pos:column="72">literals<pos:position pos:line="9" pos:column="80"/></name></expr></argument>)<pos:position pos:line="9" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="82"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="11" pos:column="17">rlw_set_literal_words<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">(<argument><expr><name><name pos:line="11" pos:column="39">self<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">rlw<pos:position pos:line="11" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">literals<pos:position pos:line="11" pos:column="58"/></name> <operator pos:line="11" pos:column="59">+<pos:position pos:line="11" pos:column="60"/></operator> <name pos:line="11" pos:column="61">can_add<pos:position pos:line="11" pos:column="68"/></name></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="70"/></expr_stmt>

		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name><name pos:line="13" pos:column="21">self<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">buffer_size<pos:position pos:line="13" pos:column="38"/></name></name> <operator pos:line="13" pos:column="39">+<pos:position pos:line="13" pos:column="40"/></operator> <name pos:line="13" pos:column="41">can_add<pos:position pos:line="13" pos:column="48"/></name> <operator pos:line="13" pos:column="49">&gt;=<pos:position pos:line="13" pos:column="54"/></operator> <name><name pos:line="13" pos:column="52">self<pos:position pos:line="13" pos:column="56"/></name><operator pos:line="13" pos:column="56">-&gt;<pos:position pos:line="13" pos:column="61"/></operator><name pos:line="13" pos:column="58">alloc_size<pos:position pos:line="13" pos:column="68"/></name></name></expr>)<pos:position pos:line="13" pos:column="69"/></condition><then pos:line="13" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="25">buffer_grow<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">self<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="43">(<pos:position pos:line="14" pos:column="44"/></operator><name><name pos:line="14" pos:column="44">self<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">-&gt;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="50">buffer_size<pos:position pos:line="14" pos:column="61"/></name></name> <operator pos:line="14" pos:column="62">+<pos:position pos:line="14" pos:column="63"/></operator> <name pos:line="14" pos:column="64">can_add<pos:position pos:line="14" pos:column="71"/></name><operator pos:line="14" pos:column="71">)<pos:position pos:line="14" pos:column="72"/></operator> <operator pos:line="14" pos:column="73">*<pos:position pos:line="14" pos:column="74"/></operator> <literal type="number" pos:line="14" pos:column="75">3<pos:position pos:line="14" pos:column="76"/></literal> <operator pos:line="14" pos:column="77">/<pos:position pos:line="14" pos:column="78"/></operator> <literal type="number" pos:line="14" pos:column="79">2<pos:position pos:line="14" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="82"/></expr_stmt></block></then></if>

		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">negate<pos:position pos:line="16" pos:column="27"/></name></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28"> <block pos:line="16" pos:column="29">{
			<decl_stmt><decl><type><name pos:line="17" pos:column="25">size_t<pos:position pos:line="17" pos:column="31"/></name></type> <name pos:line="17" pos:column="32">i<pos:position pos:line="17" pos:column="33"/></name></decl>;<pos:position pos:line="17" pos:column="34"/></decl_stmt>
			<for pos:line="18" pos:column="25">for <control pos:line="18" pos:column="29">(<init><expr><name pos:line="18" pos:column="30">i<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">=<pos:position pos:line="18" pos:column="33"/></operator> <literal type="number" pos:line="18" pos:column="34">0<pos:position pos:line="18" pos:column="35"/></literal></expr>;<pos:position pos:line="18" pos:column="36"/></init> <condition><expr><name pos:line="18" pos:column="37">i<pos:position pos:line="18" pos:column="38"/></name> <operator pos:line="18" pos:column="39">&lt;<pos:position pos:line="18" pos:column="43"/></operator> <name pos:line="18" pos:column="41">can_add<pos:position pos:line="18" pos:column="48"/></name></expr>;<pos:position pos:line="18" pos:column="49"/></condition> <incr><expr><operator pos:line="18" pos:column="50">++<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="52">i<pos:position pos:line="18" pos:column="53"/></name></expr></incr>)<pos:position pos:line="18" pos:column="54"/></control>
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="33">self<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">-&gt;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="39">buffer<pos:position pos:line="19" pos:column="45"/></name><index pos:line="19" pos:column="45">[<expr><name><name pos:line="19" pos:column="46">self<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">-&gt;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="52">buffer_size<pos:position pos:line="19" pos:column="63"/></name></name><operator pos:line="19" pos:column="63">++<pos:position pos:line="19" pos:column="65"/></operator></expr>]<pos:position pos:line="19" pos:column="66"/></index></name> <operator pos:line="19" pos:column="67">=<pos:position pos:line="19" pos:column="68"/></operator> <operator pos:line="19" pos:column="69">~<pos:position pos:line="19" pos:column="70"/></operator><name><name pos:line="19" pos:column="70">buffer<pos:position pos:line="19" pos:column="76"/></name><index pos:line="19" pos:column="76">[<expr><name pos:line="19" pos:column="77">i<pos:position pos:line="19" pos:column="78"/></name></expr>]<pos:position pos:line="19" pos:column="79"/></index></name></expr>;<pos:position pos:line="19" pos:column="80"/></expr_stmt></block></for>
		}<pos:position pos:line="20" pos:column="18"/></block></then> <else pos:line="20" pos:column="19">else <block pos:line="20" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">memcpy<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name><name pos:line="21" pos:column="32">self<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">-&gt;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="38">buffer<pos:position pos:line="21" pos:column="44"/></name></name> <operator pos:line="21" pos:column="45">+<pos:position pos:line="21" pos:column="46"/></operator> <name><name pos:line="21" pos:column="47">self<pos:position pos:line="21" pos:column="51"/></name><operator pos:line="21" pos:column="51">-&gt;<pos:position pos:line="21" pos:column="56"/></operator><name pos:line="21" pos:column="53">buffer_size<pos:position pos:line="21" pos:column="64"/></name></name></expr></argument>,
				<argument><expr><name pos:line="22" pos:column="33">buffer<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">can_add<pos:position pos:line="22" pos:column="48"/></name> <operator pos:line="22" pos:column="49">*<pos:position pos:line="22" pos:column="50"/></operator> <sizeof pos:line="22" pos:column="51">sizeof<argument_list pos:line="22" pos:column="57">(<argument><expr><name pos:line="22" pos:column="58">eword_t<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="23" pos:column="25">self<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">-&gt;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="31">buffer_size<pos:position pos:line="23" pos:column="42"/></name></name> <operator pos:line="23" pos:column="43">+=<pos:position pos:line="23" pos:column="45"/></operator> <name pos:line="23" pos:column="46">can_add<pos:position pos:line="23" pos:column="53"/></name></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name><name pos:line="26" pos:column="17">self<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">bit_size<pos:position pos:line="26" pos:column="31"/></name></name> <operator pos:line="26" pos:column="32">+=<pos:position pos:line="26" pos:column="34"/></operator> <name pos:line="26" pos:column="35">can_add<pos:position pos:line="26" pos:column="42"/></name> <operator pos:line="26" pos:column="43">*<pos:position pos:line="26" pos:column="44"/></operator> <name pos:line="26" pos:column="45">BITS_IN_EWORD<pos:position pos:line="26" pos:column="58"/></name></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt>

		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">number<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">-<pos:position pos:line="28" pos:column="29"/></operator> <name pos:line="28" pos:column="30">can_add<pos:position pos:line="28" pos:column="37"/></name> <operator pos:line="28" pos:column="38">==<pos:position pos:line="28" pos:column="40"/></operator> <literal type="number" pos:line="28" pos:column="41">0<pos:position pos:line="28" pos:column="42"/></literal></expr>)<pos:position pos:line="28" pos:column="43"/></condition><then pos:line="28" pos:column="43">
			<block type="pseudo"><break pos:line="29" pos:column="25">break;<pos:position pos:line="29" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><call><name pos:line="31" pos:column="17">buffer_push_rlw<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name pos:line="31" pos:column="33">self<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="39">0<pos:position pos:line="31" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="32" pos:column="17">buffer<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">+=<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="27">can_add<pos:position pos:line="32" pos:column="34"/></name></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">number<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">-=<pos:position pos:line="33" pos:column="26"/></operator> <name pos:line="33" pos:column="27">can_add<pos:position pos:line="33" pos:column="34"/></name></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></while>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2416_git-2.8.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_one_mergetag<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">commit<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">commit<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">commit_extra_header<pos:position pos:line="2" pos:column="57"/></name></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">extra<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="3" pos:column="31">void<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">data<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="42"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">rev_info<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">opt<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><operator pos:line="5" pos:column="32">(<pos:position pos:line="5" pos:column="33"/></operator>struct <name pos:line="5" pos:column="40">rev_info<pos:position pos:line="5" pos:column="48"/></name> <operator pos:line="5" pos:column="49">*<pos:position pos:line="5" pos:column="50"/></operator><operator pos:line="5" pos:column="50">)<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="51">data<pos:position pos:line="5" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">char<pos:position pos:line="6" pos:column="22"/></name></type> <name><name pos:line="6" pos:column="23">sha1<pos:position pos:line="6" pos:column="27"/></name><index pos:line="6" pos:column="27">[<expr><literal type="number" pos:line="6" pos:column="28">20<pos:position pos:line="6" pos:column="30"/></literal></expr>]<pos:position pos:line="6" pos:column="31"/></index></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">tag<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">tag<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">verify_message<pos:position pos:line="8" pos:column="37"/></name></decl>;<pos:position pos:line="8" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">status<pos:position pos:line="9" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="21">nth<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">payload_size<pos:position pos:line="10" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="30">gpg_message_offset<pos:position pos:line="10" pos:column="48"/></name></decl>;<pos:position pos:line="10" pos:column="49"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">hash_sha1_file<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name><name pos:line="12" pos:column="24">extra<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">value<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="38">extra<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">len<pos:position pos:line="12" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><typename pos:line="12" pos:column="50">typename<pos:position pos:line="12" pos:column="58"/></typename></name><operator pos:line="12" pos:column="58">(<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="59">OBJ_TAG<pos:position pos:line="12" pos:column="66"/></name><operator pos:line="12" pos:column="66">)<pos:position pos:line="12" pos:column="67"/></operator></expr></argument>, <argument><expr><name pos:line="12" pos:column="69">sha1<pos:position pos:line="12" pos:column="73"/></name></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">tag<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name pos:line="13" pos:column="15">lookup_tag<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">sha1<pos:position pos:line="13" pos:column="30"/></name></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">tag<pos:position pos:line="14" pos:column="17"/></name></expr>)<pos:position pos:line="14" pos:column="18"/></condition><then pos:line="14" pos:column="18">
		<block type="pseudo"><return pos:line="15" pos:column="17">return;<pos:position pos:line="15" pos:column="24"/></return></block></then></if> <comment type="block" pos:line="15" pos:column="25">/* error message already given */</comment>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">strbuf_init<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><operator pos:line="17" pos:column="21">&amp;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="22">verify_message<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="38">256<pos:position pos:line="17" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">parse_tag_buffer<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">tag<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="35">extra<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">value<pos:position pos:line="18" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="49">extra<pos:position pos:line="18" pos:column="54"/></name><operator pos:line="18" pos:column="54">-&gt;<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="56">len<pos:position pos:line="18" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="61"/></condition><then pos:line="18" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">strbuf_addstr<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><operator pos:line="19" pos:column="31">&amp;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="32">verify_message<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="48">"malformed mergetag\n"<pos:position pos:line="19" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="72"/></expr_stmt></block></then>
	<elseif pos:line="20" pos:column="9">else <if pos:line="20" pos:column="14">if <condition pos:line="20" pos:column="17">(<expr><call><name pos:line="20" pos:column="18">is_common_merge<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><name pos:line="20" pos:column="34">commit<pos:position pos:line="20" pos:column="40"/></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call> <operator pos:line="20" pos:column="42">&amp;&amp;<pos:position pos:line="20" pos:column="52"/></operator>
		 <operator pos:line="21" pos:column="18">!<pos:position pos:line="21" pos:column="19"/></operator><call><name pos:line="21" pos:column="19">oidcmp<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><operator pos:line="21" pos:column="26">&amp;<pos:position pos:line="21" pos:column="31"/></operator><name><name pos:line="21" pos:column="27">tag<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">-&gt;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="32">tagged<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">-&gt;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="40">oid<pos:position pos:line="21" pos:column="43"/></name></name></expr></argument>,
			  <argument><expr><operator pos:line="22" pos:column="27">&amp;<pos:position pos:line="22" pos:column="32"/></operator><name><name pos:line="22" pos:column="28">commit<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">parents<pos:position pos:line="22" pos:column="43"/></name><operator pos:line="22" pos:column="43">-&gt;<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="45">next<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">-&gt;<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="51">item<pos:position pos:line="22" pos:column="55"/></name><operator pos:line="22" pos:column="55">-&gt;<pos:position pos:line="22" pos:column="60"/></operator><name pos:line="22" pos:column="57">object<pos:position pos:line="22" pos:column="63"/></name><operator pos:line="22" pos:column="63">.<pos:position pos:line="22" pos:column="64"/></operator><name pos:line="22" pos:column="64">oid<pos:position pos:line="22" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="69"/></condition><then pos:line="22" pos:column="69">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">strbuf_addf<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><operator pos:line="23" pos:column="29">&amp;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="30">verify_message<pos:position pos:line="23" pos:column="44"/></name></expr></argument>,
			    <argument><expr><literal type="string" pos:line="24" pos:column="29">"merged tag '%s'\n"<pos:position pos:line="24" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="50">tag<pos:position pos:line="24" pos:column="53"/></name><operator pos:line="24" pos:column="53">-&gt;<pos:position pos:line="24" pos:column="58"/></operator><name pos:line="24" pos:column="55">tag<pos:position pos:line="24" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="60"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="25" pos:column="9">else <if pos:line="25" pos:column="14">if <condition pos:line="25" pos:column="17">(<expr><operator pos:line="25" pos:column="18">(<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">nth<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <call><name pos:line="25" pos:column="25">which_parent<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><name><name pos:line="25" pos:column="38">tag<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">tagged<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">-&gt;<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="51">oid<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">.<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="55">hash<pos:position pos:line="25" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="61">commit<pos:position pos:line="25" pos:column="67"/></name></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call><operator pos:line="25" pos:column="68">)<pos:position pos:line="25" pos:column="69"/></operator> <operator pos:line="25" pos:column="70">&lt;<pos:position pos:line="25" pos:column="74"/></operator> <literal type="number" pos:line="25" pos:column="72">0<pos:position pos:line="25" pos:column="73"/></literal></expr>)<pos:position pos:line="25" pos:column="74"/></condition><then pos:line="25" pos:column="74">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">strbuf_addf<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><operator pos:line="26" pos:column="29">&amp;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="30">verify_message<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="46">"tag %s names a non-parent %s\n"<pos:position pos:line="26" pos:column="78"/></literal></expr></argument>,
				    <argument><expr><name><name pos:line="27" pos:column="37">tag<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">-&gt;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="42">tag<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="47">tag<pos:position pos:line="27" pos:column="50"/></name><operator pos:line="27" pos:column="50">-&gt;<pos:position pos:line="27" pos:column="55"/></operator><name pos:line="27" pos:column="52">tagged<pos:position pos:line="27" pos:column="58"/></name><operator pos:line="27" pos:column="58">-&gt;<pos:position pos:line="27" pos:column="63"/></operator><name pos:line="27" pos:column="60">oid<pos:position pos:line="27" pos:column="63"/></name><operator pos:line="27" pos:column="63">.<pos:position pos:line="27" pos:column="64"/></operator><name pos:line="27" pos:column="64">hash<pos:position pos:line="27" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt></block></then></if></elseif>
	<else pos:line="28" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">strbuf_addf<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><operator pos:line="29" pos:column="29">&amp;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="30">verify_message<pos:position pos:line="29" pos:column="44"/></name></expr></argument>,
			    <argument><expr><literal type="string" pos:line="30" pos:column="29">"parent #%d, tagged '%s'\n"<pos:position pos:line="30" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">nth<pos:position pos:line="30" pos:column="61"/></name> <operator pos:line="30" pos:column="62">+<pos:position pos:line="30" pos:column="63"/></operator> <literal type="number" pos:line="30" pos:column="64">1<pos:position pos:line="30" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="67">tag<pos:position pos:line="30" pos:column="70"/></name><operator pos:line="30" pos:column="70">-&gt;<pos:position pos:line="30" pos:column="75"/></operator><name pos:line="30" pos:column="72">tag<pos:position pos:line="30" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="77"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name pos:line="31" pos:column="9">gpg_message_offset<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">=<pos:position pos:line="31" pos:column="29"/></operator> <name><name pos:line="31" pos:column="30">verify_message<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">.<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="45">len<pos:position pos:line="31" pos:column="48"/></name></name></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>

	<expr_stmt><expr><name pos:line="33" pos:column="9">payload_size<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <call><name pos:line="33" pos:column="24">parse_signature<pos:position pos:line="33" pos:column="39"/></name><argument_list pos:line="33" pos:column="39">(<argument><expr><name><name pos:line="33" pos:column="40">extra<pos:position pos:line="33" pos:column="45"/></name><operator pos:line="33" pos:column="45">-&gt;<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="47">value<pos:position pos:line="33" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="54">extra<pos:position pos:line="33" pos:column="59"/></name><operator pos:line="33" pos:column="59">-&gt;<pos:position pos:line="33" pos:column="64"/></operator><name pos:line="33" pos:column="61">len<pos:position pos:line="33" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><name pos:line="34" pos:column="9">status<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <operator pos:line="34" pos:column="18">-<pos:position pos:line="34" pos:column="19"/></operator><literal type="number" pos:line="34" pos:column="19">1<pos:position pos:line="34" pos:column="20"/></literal></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name><name pos:line="35" pos:column="13">extra<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">-&gt;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="20">len<pos:position pos:line="35" pos:column="23"/></name></name> <operator pos:line="35" pos:column="24">&gt;<pos:position pos:line="35" pos:column="28"/></operator> <name pos:line="35" pos:column="26">payload_size<pos:position pos:line="35" pos:column="38"/></name></expr>)<pos:position pos:line="35" pos:column="39"/></condition><then pos:line="35" pos:column="39"> <block pos:line="35" pos:column="40">{
		<comment type="block" pos:line="36" pos:column="17">/* could have a good signature */</comment>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><operator pos:line="37" pos:column="21">!<pos:position pos:line="37" pos:column="22"/></operator><call><name pos:line="37" pos:column="22">verify_signed_buffer<pos:position pos:line="37" pos:column="42"/></name><argument_list pos:line="37" pos:column="42">(<argument><expr><name><name pos:line="37" pos:column="43">extra<pos:position pos:line="37" pos:column="48"/></name><operator pos:line="37" pos:column="48">-&gt;<pos:position pos:line="37" pos:column="53"/></operator><name pos:line="37" pos:column="50">value<pos:position pos:line="37" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="57">payload_size<pos:position pos:line="37" pos:column="69"/></name></expr></argument>,
					  <argument><expr><name><name pos:line="38" pos:column="43">extra<pos:position pos:line="38" pos:column="48"/></name><operator pos:line="38" pos:column="48">-&gt;<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="50">value<pos:position pos:line="38" pos:column="55"/></name></name> <operator pos:line="38" pos:column="56">+<pos:position pos:line="38" pos:column="57"/></operator> <name pos:line="38" pos:column="58">payload_size<pos:position pos:line="38" pos:column="70"/></name></expr></argument>,
					  <argument><expr><name><name pos:line="39" pos:column="43">extra<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">-&gt;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="50">len<pos:position pos:line="39" pos:column="53"/></name></name> <operator pos:line="39" pos:column="54">-<pos:position pos:line="39" pos:column="55"/></operator> <name pos:line="39" pos:column="56">payload_size<pos:position pos:line="39" pos:column="68"/></name></expr></argument>,
					  <argument><expr><operator pos:line="40" pos:column="43">&amp;<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="44">verify_message<pos:position pos:line="40" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="60">NULL<pos:position pos:line="40" pos:column="64"/></name></expr></argument>)<pos:position pos:line="40" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="66"/></condition><then pos:line="40" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="25">status<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">=<pos:position pos:line="41" pos:column="33"/></operator> <literal type="number" pos:line="41" pos:column="34">0<pos:position pos:line="41" pos:column="35"/></literal></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt></block></then> <comment type="block" pos:line="41" pos:column="37">/* good */</comment>
		<elseif pos:line="42" pos:column="17">else <if pos:line="42" pos:column="22">if <condition pos:line="42" pos:column="25">(<expr><name><name pos:line="42" pos:column="26">verify_message<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">.<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="41">len<pos:position pos:line="42" pos:column="44"/></name></name> <operator pos:line="42" pos:column="45">&lt;=<pos:position pos:line="42" pos:column="50"/></operator> <name pos:line="42" pos:column="48">gpg_message_offset<pos:position pos:line="42" pos:column="66"/></name></expr>)<pos:position pos:line="42" pos:column="67"/></condition><then pos:line="42" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="25">strbuf_addstr<pos:position pos:line="43" pos:column="38"/></name><argument_list pos:line="43" pos:column="38">(<argument><expr><operator pos:line="43" pos:column="39">&amp;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="40">verify_message<pos:position pos:line="43" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="56">"No signature\n"<pos:position pos:line="43" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="74"/></expr_stmt></block></then></if></elseif></if>
		<comment type="block" pos:line="44" pos:column="17">/* otherwise we couldn't verify, which is shown as bad */</comment>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="47" pos:column="9">show_sig_lines<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><name pos:line="47" pos:column="24">opt<pos:position pos:line="47" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="29">status<pos:position pos:line="47" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="37">verify_message<pos:position pos:line="47" pos:column="51"/></name><operator pos:line="47" pos:column="51">.<pos:position pos:line="47" pos:column="52"/></operator><name pos:line="47" pos:column="52">buf<pos:position pos:line="47" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">strbuf_release<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><operator pos:line="48" pos:column="24">&amp;<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="25">verify_message<pos:position pos:line="48" pos:column="39"/></name></expr></argument>)<pos:position pos:line="48" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="41"/></expr_stmt>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

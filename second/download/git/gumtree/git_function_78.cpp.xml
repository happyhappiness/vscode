<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_78.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">parse_opt_sort<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">option<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">opt<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">arg<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">int<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">unset<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">sort<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name><name pos:line="3" pos:column="21">opt<pos:position pos:line="3" pos:column="24"/></name><operator pos:line="3" pos:column="24">-&gt;<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="26">value<pos:position pos:line="3" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">flags<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">arg<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">==<pos:position pos:line="6" pos:column="20"/></operator> <literal type="char" pos:line="6" pos:column="21">'-'<pos:position pos:line="6" pos:column="24"/></literal></expr>)<pos:position pos:line="6" pos:column="25"/></condition><then pos:line="6" pos:column="25"> <block pos:line="6" pos:column="26">{
		<expr_stmt><expr><name pos:line="7" pos:column="17">flags<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">|=<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">REVERSE_SORT<pos:position pos:line="7" pos:column="38"/></name></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="8" pos:column="17">arg<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">++<pos:position pos:line="8" pos:column="22"/></operator></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">starts_with<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">arg<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="30">"version:"<pos:position pos:line="10" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="42"/></condition><then pos:line="10" pos:column="42"> <block pos:line="10" pos:column="43">{
		<expr_stmt><expr><operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">sort<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">VERCMP_SORT<pos:position pos:line="11" pos:column="36"/></name></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="12" pos:column="17">arg<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">+=<pos:position pos:line="12" pos:column="23"/></operator> <literal type="number" pos:line="12" pos:column="24">8<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then> <elseif pos:line="13" pos:column="11">else <if pos:line="13" pos:column="16">if <condition pos:line="13" pos:column="19">(<expr><call><name pos:line="13" pos:column="20">starts_with<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">arg<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="37">"v:"<pos:position pos:line="13" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="43"/></condition><then pos:line="13" pos:column="43"> <block pos:line="13" pos:column="44">{
		<expr_stmt><expr><operator pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">sort<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">VERCMP_SORT<pos:position pos:line="14" pos:column="36"/></name></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">arg<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">+=<pos:position pos:line="15" pos:column="23"/></operator> <literal type="number" pos:line="15" pos:column="24">2<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if></elseif> <else pos:line="16" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><operator pos:line="17" pos:column="17">*<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">sort<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">STRCMP_SORT<pos:position pos:line="17" pos:column="36"/></name></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt></block></else></if>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">strcmp<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">arg<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="25">"refname"<pos:position pos:line="18" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">die<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><call><name pos:line="19" pos:column="21">_<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><literal type="string" pos:line="19" pos:column="23">"unsupported sort specification %s"<pos:position pos:line="19" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="19" pos:column="61">arg<pos:position pos:line="19" pos:column="64"/></name></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="66"/></expr_stmt></block></then></if>
	<expr_stmt><expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">sort<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">|=<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">flags<pos:position pos:line="20" pos:column="23"/></name></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
	<return pos:line="21" pos:column="9">return <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

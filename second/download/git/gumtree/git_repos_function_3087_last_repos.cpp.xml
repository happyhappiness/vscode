<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3087_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">trailer_info_get<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">trailer_info<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">info<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">str<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">patch_start<pos:position pos:line="3" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="26">trailer_end<pos:position pos:line="3" pos:column="37"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="39">trailer_start<pos:position pos:line="3" pos:column="52"/></name></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier><modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">trailer_lines<pos:position pos:line="4" pos:column="38"/></name></decl>, <modifier pos:line="4" pos:column="40">*<pos:position pos:line="4" pos:column="41"/></modifier><modifier pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="42">ptr<pos:position pos:line="4" pos:column="45"/></name></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier><modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">trailer_strings<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><name pos:line="5" pos:column="34">NULL<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">nr<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="24">alloc<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><literal type="number" pos:line="6" pos:column="32">0<pos:position pos:line="6" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier><modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">last<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">NULL<pos:position pos:line="7" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">ensure_configured<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">()<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">patch_start<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <call><name pos:line="11" pos:column="23">find_patch_start<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><name pos:line="11" pos:column="40">str<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">trailer_end<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <call><name pos:line="12" pos:column="23">find_trailer_end<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">str<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">patch_start<pos:position pos:line="12" pos:column="56"/></name></expr></argument>)<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">trailer_start<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <call><name pos:line="13" pos:column="25">find_trailer_start<pos:position pos:line="13" pos:column="43"/></name><argument_list pos:line="13" pos:column="43">(<argument><expr><name pos:line="13" pos:column="44">str<pos:position pos:line="13" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="49">trailer_end<pos:position pos:line="13" pos:column="60"/></name></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="62"/></expr_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">trailer_lines<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <call><name pos:line="15" pos:column="25">strbuf_split_buf<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">str<pos:position pos:line="15" pos:column="45"/></name> <operator pos:line="15" pos:column="46">+<pos:position pos:line="15" pos:column="47"/></operator> <name pos:line="15" pos:column="48">trailer_start<pos:position pos:line="15" pos:column="61"/></name></expr></argument>,
					 <argument><expr><name pos:line="16" pos:column="42">trailer_end<pos:position pos:line="16" pos:column="53"/></name> <operator pos:line="16" pos:column="54">-<pos:position pos:line="16" pos:column="55"/></operator> <name pos:line="16" pos:column="56">trailer_start<pos:position pos:line="16" pos:column="69"/></name></expr></argument>,
					 <argument><expr><literal type="char" pos:line="17" pos:column="42">'\n'<pos:position pos:line="17" pos:column="46"/></literal></expr></argument>,
					 <argument><expr><literal type="number" pos:line="18" pos:column="42">0<pos:position pos:line="18" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">ptr<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">trailer_lines<pos:position pos:line="19" pos:column="33"/></name></expr>;<pos:position pos:line="19" pos:column="34"/></init> <condition><expr><operator pos:line="19" pos:column="35">*<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="36">ptr<pos:position pos:line="19" pos:column="39"/></name></expr>;<pos:position pos:line="19" pos:column="40"/></condition> <incr><expr><name pos:line="19" pos:column="41">ptr<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">++<pos:position pos:line="19" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="47"/></control> <block pos:line="19" pos:column="48">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">last<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">&amp;&amp;<pos:position pos:line="20" pos:column="36"/></operator> <call><name pos:line="20" pos:column="29">isspace<pos:position pos:line="20" pos:column="36"/></name><argument_list pos:line="20" pos:column="36">(<argument><expr><name><operator pos:line="20" pos:column="37">(<pos:position pos:line="20" pos:column="38"/></operator><operator pos:line="20" pos:column="38">*<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="39">ptr<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">)<pos:position pos:line="20" pos:column="43"/></operator><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">buf<pos:position pos:line="20" pos:column="48"/></name></name><index pos:line="20" pos:column="48">[<expr><literal type="number" pos:line="20" pos:column="49">0<pos:position pos:line="20" pos:column="50"/></literal></expr>]<pos:position pos:line="20" pos:column="51"/></index></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="53"/></condition><then pos:line="20" pos:column="53"> <block pos:line="20" pos:column="54">{
			<decl_stmt><decl><type><name><name pos:line="21" pos:column="25">struct<pos:position pos:line="21" pos:column="31"/></name> <name pos:line="21" pos:column="32">strbuf<pos:position pos:line="21" pos:column="38"/></name></name></type> <name pos:line="21" pos:column="39">sb<pos:position pos:line="21" pos:column="41"/></name> <init pos:line="21" pos:column="42">= <expr><name pos:line="21" pos:column="44">STRBUF_INIT<pos:position pos:line="21" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="56"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">strbuf_attach<pos:position pos:line="22" pos:column="38"/></name><argument_list pos:line="22" pos:column="38">(<argument><expr><operator pos:line="22" pos:column="39">&amp;<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="40">sb<pos:position pos:line="22" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="44">*<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="45">last<pos:position pos:line="22" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="51">strlen<pos:position pos:line="22" pos:column="57"/></name><argument_list pos:line="22" pos:column="57">(<argument><expr><operator pos:line="22" pos:column="58">*<pos:position pos:line="22" pos:column="59"/></operator><name pos:line="22" pos:column="59">last<pos:position pos:line="22" pos:column="63"/></name></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="66">strlen<pos:position pos:line="22" pos:column="72"/></name><argument_list pos:line="22" pos:column="72">(<argument><expr><operator pos:line="22" pos:column="73">*<pos:position pos:line="22" pos:column="74"/></operator><name pos:line="22" pos:column="74">last<pos:position pos:line="22" pos:column="78"/></name></expr></argument>)<pos:position pos:line="22" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="81"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">strbuf_addbuf<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><operator pos:line="23" pos:column="39">&amp;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="40">sb<pos:position pos:line="23" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="44">*<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="45">ptr<pos:position pos:line="23" pos:column="48"/></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="24" pos:column="25">*<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="26">last<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">=<pos:position pos:line="24" pos:column="32"/></operator> <call><name pos:line="24" pos:column="33">strbuf_detach<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">(<argument><expr><operator pos:line="24" pos:column="47">&amp;<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="48">sb<pos:position pos:line="24" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="52">NULL<pos:position pos:line="24" pos:column="56"/></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt>
			<continue pos:line="25" pos:column="25">continue;<pos:position pos:line="25" pos:column="34"/></continue>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">ALLOC_GROW<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">trailer_strings<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="45">nr<pos:position pos:line="27" pos:column="47"/></name> <operator pos:line="27" pos:column="48">+<pos:position pos:line="27" pos:column="49"/></operator> <literal type="number" pos:line="27" pos:column="50">1<pos:position pos:line="27" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="53">alloc<pos:position pos:line="27" pos:column="58"/></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="28" pos:column="17">trailer_strings<pos:position pos:line="28" pos:column="32"/></name><index pos:line="28" pos:column="32">[<expr><name pos:line="28" pos:column="33">nr<pos:position pos:line="28" pos:column="35"/></name></expr>]<pos:position pos:line="28" pos:column="36"/></index></name> <operator pos:line="28" pos:column="37">=<pos:position pos:line="28" pos:column="38"/></operator> <call><name pos:line="28" pos:column="39">strbuf_detach<pos:position pos:line="28" pos:column="52"/></name><argument_list pos:line="28" pos:column="52">(<argument><expr><operator pos:line="28" pos:column="53">*<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="54">ptr<pos:position pos:line="28" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="59">NULL<pos:position pos:line="28" pos:column="63"/></name></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">last<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <ternary><condition><expr><call><name pos:line="29" pos:column="24">find_separator<pos:position pos:line="29" pos:column="38"/></name><argument_list pos:line="29" pos:column="38">(<argument><expr><name><name pos:line="29" pos:column="39">trailer_strings<pos:position pos:line="29" pos:column="54"/></name><index pos:line="29" pos:column="54">[<expr><name pos:line="29" pos:column="55">nr<pos:position pos:line="29" pos:column="57"/></name></expr>]<pos:position pos:line="29" pos:column="58"/></index></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="60">separators<pos:position pos:line="29" pos:column="70"/></name></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call> <operator pos:line="29" pos:column="72">&gt;=<pos:position pos:line="29" pos:column="77"/></operator> <literal type="number" pos:line="29" pos:column="75">1<pos:position pos:line="29" pos:column="76"/></literal></expr>
			?<pos:position pos:line="30" pos:column="26"/></condition><then pos:line="30" pos:column="26"> <expr><operator pos:line="30" pos:column="27">&amp;<pos:position pos:line="30" pos:column="32"/></operator><name><name pos:line="30" pos:column="28">trailer_strings<pos:position pos:line="30" pos:column="43"/></name><index pos:line="30" pos:column="43">[<expr><name pos:line="30" pos:column="44">nr<pos:position pos:line="30" pos:column="46"/></name></expr>]<pos:position pos:line="30" pos:column="47"/></index></name></expr>
			<pos:position pos:line="31" pos:column="4"/></then><else pos:line="31" pos:column="25">: <expr><name pos:line="31" pos:column="27">NULL<pos:position pos:line="31" pos:column="31"/></name></expr></else></ternary></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="32" pos:column="17">nr<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">++<pos:position pos:line="32" pos:column="21"/></operator></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">strbuf_list_free<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">trailer_lines<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="36" pos:column="9">info<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">blank_line_before_trailer<pos:position pos:line="36" pos:column="40"/></name></name> <operator pos:line="36" pos:column="41">=<pos:position pos:line="36" pos:column="42"/></operator> <call><name pos:line="36" pos:column="43">ends_with_blank_line<pos:position pos:line="36" pos:column="63"/></name><argument_list pos:line="36" pos:column="63">(<argument><expr><name pos:line="36" pos:column="64">str<pos:position pos:line="36" pos:column="67"/></name></expr></argument>,
							       <argument><expr><name pos:line="37" pos:column="64">trailer_start<pos:position pos:line="37" pos:column="77"/></name></expr></argument>)<pos:position pos:line="37" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="79"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="38" pos:column="9">info<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">trailer_start<pos:position pos:line="38" pos:column="28"/></name></name> <operator pos:line="38" pos:column="29">=<pos:position pos:line="38" pos:column="30"/></operator> <name pos:line="38" pos:column="31">str<pos:position pos:line="38" pos:column="34"/></name> <operator pos:line="38" pos:column="35">+<pos:position pos:line="38" pos:column="36"/></operator> <name pos:line="38" pos:column="37">trailer_start<pos:position pos:line="38" pos:column="50"/></name></expr>;<pos:position pos:line="38" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="39" pos:column="9">info<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">-&gt;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="15">trailer_end<pos:position pos:line="39" pos:column="26"/></name></name> <operator pos:line="39" pos:column="27">=<pos:position pos:line="39" pos:column="28"/></operator> <name pos:line="39" pos:column="29">str<pos:position pos:line="39" pos:column="32"/></name> <operator pos:line="39" pos:column="33">+<pos:position pos:line="39" pos:column="34"/></operator> <name pos:line="39" pos:column="35">trailer_end<pos:position pos:line="39" pos:column="46"/></name></expr>;<pos:position pos:line="39" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="40" pos:column="9">info<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">trailers<pos:position pos:line="40" pos:column="23"/></name></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <name pos:line="40" pos:column="26">trailer_strings<pos:position pos:line="40" pos:column="41"/></name></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="41" pos:column="9">info<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">-&gt;<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="15">trailer_nr<pos:position pos:line="41" pos:column="25"/></name></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <name pos:line="41" pos:column="28">nr<pos:position pos:line="41" pos:column="30"/></name></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

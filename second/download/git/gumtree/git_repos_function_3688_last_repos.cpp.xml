<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3688_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">hostinfo_init<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">hostinfo<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">hi<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">memset<pos:position pos:line="3" pos:column="15"/></name><argument_list pos:line="3" pos:column="15">(<argument><expr><name pos:line="3" pos:column="16">hi<pos:position pos:line="3" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="20">0<pos:position pos:line="3" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="23">sizeof<argument_list pos:line="3" pos:column="29">(<argument><expr><operator pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="31">hi<pos:position pos:line="3" pos:column="33"/></name></expr></argument>)<pos:position pos:line="3" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">strbuf_init<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><operator pos:line="4" pos:column="21">&amp;<pos:position pos:line="4" pos:column="26"/></operator><name><name pos:line="4" pos:column="22">hi<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">-&gt;<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="26">hostname<pos:position pos:line="4" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="36">0<pos:position pos:line="4" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">strbuf_init<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><operator pos:line="5" pos:column="21">&amp;<pos:position pos:line="5" pos:column="26"/></operator><name><name pos:line="5" pos:column="22">hi<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">canon_hostname<pos:position pos:line="5" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="42">0<pos:position pos:line="5" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">strbuf_init<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><operator pos:line="6" pos:column="21">&amp;<pos:position pos:line="6" pos:column="26"/></operator><name><name pos:line="6" pos:column="22">hi<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">ip_address<pos:position pos:line="6" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="38">0<pos:position pos:line="6" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">strbuf_init<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><operator pos:line="7" pos:column="21">&amp;<pos:position pos:line="7" pos:column="26"/></operator><name><name pos:line="7" pos:column="22">hi<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">-&gt;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="26">tcp_port<pos:position pos:line="7" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="36">0<pos:position pos:line="7" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

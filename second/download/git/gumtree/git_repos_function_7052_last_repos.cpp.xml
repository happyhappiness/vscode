<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7052_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">reg_errcode_t<pos:position pos:line="1" pos:column="21"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">re_string_allocate<pos:position pos:line="3" pos:column="19"/></name> <parameter_list pos:line="3" pos:column="20">(<parameter><decl><type><name pos:line="3" pos:column="21">re_string_t<pos:position pos:line="3" pos:column="32"/></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">pstr<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="40">const<pos:position pos:line="3" pos:column="45"/></specifier> <name pos:line="3" pos:column="46">char<pos:position pos:line="3" pos:column="50"/></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">str<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="57">int<pos:position pos:line="3" pos:column="60"/></name></type> <name pos:line="3" pos:column="61">len<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="66">int<pos:position pos:line="3" pos:column="69"/></name></type> <name pos:line="3" pos:column="70">init_len<pos:position pos:line="3" pos:column="78"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="4" pos:column="21">RE_TRANSLATE_TYPE<pos:position pos:line="4" pos:column="38"/></name></type> <name pos:line="4" pos:column="39">trans<pos:position pos:line="4" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="46">int<pos:position pos:line="4" pos:column="49"/></name></type> <name pos:line="4" pos:column="50">icase<pos:position pos:line="4" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="57">const<pos:position pos:line="4" pos:column="62"/></specifier> <name pos:line="4" pos:column="63">re_dfa_t<pos:position pos:line="4" pos:column="71"/></name> <modifier pos:line="4" pos:column="72">*<pos:position pos:line="4" pos:column="73"/></modifier></type><name pos:line="4" pos:column="73">dfa<pos:position pos:line="4" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="77"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">reg_errcode_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">ret<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">init_buf_len<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* Ensure at least one character fits into the buffers.  */</comment>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">init_len<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">&lt;<pos:position pos:line="10" pos:column="20"/></operator> <name><name pos:line="10" pos:column="18">dfa<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">mb_cur_max<pos:position pos:line="10" pos:column="33"/></name></name></expr>)<pos:position pos:line="10" pos:column="34"/></condition><then pos:line="10" pos:column="34">
    <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="5">init_len<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name><name pos:line="11" pos:column="16">dfa<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">mb_cur_max<pos:position pos:line="11" pos:column="31"/></name></name></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name pos:line="12" pos:column="3">init_buf_len<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="12" pos:column="18">(<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">len<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">+<pos:position pos:line="12" pos:column="24"/></operator> <literal type="number" pos:line="12" pos:column="25">1<pos:position pos:line="12" pos:column="26"/></literal> <operator pos:line="12" pos:column="27">&lt;<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="29">init_len<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">)<pos:position pos:line="12" pos:column="38"/></operator></expr> ?<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40"> <expr><name pos:line="12" pos:column="41">len<pos:position pos:line="12" pos:column="44"/></name> <operator pos:line="12" pos:column="45">+<pos:position pos:line="12" pos:column="46"/></operator> <literal type="number" pos:line="12" pos:column="47">1<pos:position pos:line="12" pos:column="48"/></literal></expr></then><else pos:line="12" pos:column="48">: <expr><name pos:line="12" pos:column="50">init_len<pos:position pos:line="12" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">re_string_construct_common<pos:position pos:line="13" pos:column="29"/></name> <argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">str<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="36">len<pos:position pos:line="13" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="41">pstr<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="47">trans<pos:position pos:line="13" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="54">icase<pos:position pos:line="13" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="61">dfa<pos:position pos:line="13" pos:column="64"/></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>

  <expr_stmt><expr><name pos:line="15" pos:column="3">ret<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <call><name pos:line="15" pos:column="9">re_string_realloc_buffers<pos:position pos:line="15" pos:column="34"/></name> <argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">pstr<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">init_buf_len<pos:position pos:line="15" pos:column="54"/></name></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><call><name pos:line="16" pos:column="7">BE<pos:position pos:line="16" pos:column="9"/></name> <argument_list pos:line="16" pos:column="10">(<argument><expr><name pos:line="16" pos:column="11">ret<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">!=<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="18">REG_NOERROR<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="31">0<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="34"/></condition><then pos:line="16" pos:column="34">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">ret<pos:position pos:line="17" pos:column="15"/></name></expr>;<pos:position pos:line="17" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="19" pos:column="3">pstr<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">word_char<pos:position pos:line="19" pos:column="18"/></name></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <name><name pos:line="19" pos:column="21">dfa<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">-&gt;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="26">word_char<pos:position pos:line="19" pos:column="35"/></name></name></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">pstr<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">word_ops_used<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <name><name pos:line="20" pos:column="25">dfa<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">-&gt;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="30">word_ops_used<pos:position pos:line="20" pos:column="43"/></name></name></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">pstr<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">mbs<pos:position pos:line="21" pos:column="12"/></name></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <ternary><condition><expr><name><name pos:line="21" pos:column="15">pstr<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">mbs_allocated<pos:position pos:line="21" pos:column="34"/></name></name></expr> ?<pos:position pos:line="21" pos:column="36"/></condition><then pos:line="21" pos:column="36"> <expr><name><name pos:line="21" pos:column="37">pstr<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">-&gt;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="43">mbs<pos:position pos:line="21" pos:column="46"/></name></name></expr> <pos:position pos:line="21" pos:column="47"/></then><else pos:line="21" pos:column="47">: <expr><operator pos:line="21" pos:column="49">(<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="50">unsigned<pos:position pos:line="21" pos:column="58"/></name> <name pos:line="21" pos:column="59">char<pos:position pos:line="21" pos:column="63"/></name> <operator pos:line="21" pos:column="64">*<pos:position pos:line="21" pos:column="65"/></operator><operator pos:line="21" pos:column="65">)<pos:position pos:line="21" pos:column="66"/></operator> <name pos:line="21" pos:column="67">str<pos:position pos:line="21" pos:column="70"/></name></expr></else></ternary></expr>;<pos:position pos:line="21" pos:column="71"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">pstr<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">valid_len<pos:position pos:line="22" pos:column="18"/></name></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <ternary><condition><expr><operator pos:line="22" pos:column="21">(<pos:position pos:line="22" pos:column="22"/></operator><name><name pos:line="22" pos:column="22">pstr<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">-&gt;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="28">mbs_allocated<pos:position pos:line="22" pos:column="41"/></name></name> <operator pos:line="22" pos:column="42">||<pos:position pos:line="22" pos:column="44"/></operator> <name><name pos:line="22" pos:column="45">dfa<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">-&gt;<pos:position pos:line="22" pos:column="53"/></operator><name pos:line="22" pos:column="50">mb_cur_max<pos:position pos:line="22" pos:column="60"/></name></name> <operator pos:line="22" pos:column="61">&gt;<pos:position pos:line="22" pos:column="65"/></operator> <literal type="number" pos:line="22" pos:column="63">1<pos:position pos:line="22" pos:column="64"/></literal><operator pos:line="22" pos:column="64">)<pos:position pos:line="22" pos:column="65"/></operator></expr> ?<pos:position pos:line="22" pos:column="67"/></condition><then pos:line="22" pos:column="67"> <expr><literal type="number" pos:line="22" pos:column="68">0<pos:position pos:line="22" pos:column="69"/></literal></expr> <pos:position pos:line="22" pos:column="70"/></then><else pos:line="22" pos:column="70">: <expr><name pos:line="22" pos:column="72">len<pos:position pos:line="22" pos:column="75"/></name></expr></else></ternary></expr>;<pos:position pos:line="22" pos:column="76"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">pstr<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">valid_raw_len<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <name><name pos:line="23" pos:column="25">pstr<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">-&gt;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="31">valid_len<pos:position pos:line="23" pos:column="40"/></name></name></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt>
  <return pos:line="24" pos:column="3">return <expr><name pos:line="24" pos:column="10">REG_NOERROR<pos:position pos:line="24" pos:column="21"/></name></expr>;<pos:position pos:line="24" pos:column="22"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

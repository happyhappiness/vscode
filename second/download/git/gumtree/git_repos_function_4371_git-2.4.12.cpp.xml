<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4371_git-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_traditional_patch<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">first<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">second<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="76">struct<pos:position pos:line="1" pos:column="82"/></name> <name pos:line="1" pos:column="83">patch<pos:position pos:line="1" pos:column="88"/></name></name> <modifier pos:line="1" pos:column="89">*<pos:position pos:line="1" pos:column="90"/></modifier></type><name pos:line="1" pos:column="90">patch<pos:position pos:line="1" pos:column="95"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="96"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">name<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name pos:line="5" pos:column="9">first<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">+=<pos:position pos:line="5" pos:column="17"/></operator> <literal type="number" pos:line="5" pos:column="18">4<pos:position pos:line="5" pos:column="19"/></literal></expr>;<pos:position pos:line="5" pos:column="20"/></expr_stmt>	<comment type="block" pos:line="5" pos:column="25">/* skip "--- " */</comment>
	<expr_stmt><expr><name pos:line="6" pos:column="9">second<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">+=<pos:position pos:line="6" pos:column="18"/></operator> <literal type="number" pos:line="6" pos:column="19">4<pos:position pos:line="6" pos:column="20"/></literal></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>	<comment type="block" pos:line="6" pos:column="25">/* skip "+++ " */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">p_value_known<pos:position pos:line="7" pos:column="27"/></name></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28"> <block pos:line="7" pos:column="29">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">p<pos:position pos:line="8" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="24">q<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
		<expr_stmt><expr><name pos:line="9" pos:column="17">p<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <call><name pos:line="9" pos:column="21">guess_p_value<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">first<pos:position pos:line="9" pos:column="40"/></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">q<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <call><name pos:line="10" pos:column="21">guess_p_value<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">second<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">p<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <literal type="number" pos:line="11" pos:column="25">0<pos:position pos:line="11" pos:column="26"/></literal></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27"> <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="28">p<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">=<pos:position pos:line="11" pos:column="31"/></operator> <name pos:line="11" pos:column="32">q<pos:position pos:line="11" pos:column="33"/></name></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt></block></then></if>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><literal type="number" pos:line="12" pos:column="21">0<pos:position pos:line="12" pos:column="22"/></literal> <operator pos:line="12" pos:column="23">&lt;=<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="26">p<pos:position pos:line="12" pos:column="27"/></name> <operator pos:line="12" pos:column="28">&amp;&amp;<pos:position pos:line="12" pos:column="38"/></operator> <name pos:line="12" pos:column="31">p<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">==<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="36">q<pos:position pos:line="12" pos:column="37"/></name></expr>)<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38"> <block pos:line="12" pos:column="39">{
			<expr_stmt><expr><name pos:line="13" pos:column="25">p_value<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">=<pos:position pos:line="13" pos:column="34"/></operator> <name pos:line="13" pos:column="35">p<pos:position pos:line="13" pos:column="36"/></name></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="14" pos:column="25">p_value_known<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">=<pos:position pos:line="14" pos:column="40"/></operator> <literal type="number" pos:line="14" pos:column="41">1<pos:position pos:line="14" pos:column="42"/></literal></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">is_dev_null<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">first<pos:position pos:line="17" pos:column="30"/></name></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="32"/></condition><then pos:line="17" pos:column="32"> <block pos:line="17" pos:column="33">{
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">patch<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">is_new<pos:position pos:line="18" pos:column="30"/></name></name> <operator pos:line="18" pos:column="31">=<pos:position pos:line="18" pos:column="32"/></operator> <literal type="number" pos:line="18" pos:column="33">1<pos:position pos:line="18" pos:column="34"/></literal></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">patch<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">is_delete<pos:position pos:line="19" pos:column="33"/></name></name> <operator pos:line="19" pos:column="34">=<pos:position pos:line="19" pos:column="35"/></operator> <literal type="number" pos:line="19" pos:column="36">0<pos:position pos:line="19" pos:column="37"/></literal></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">name<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <call><name pos:line="20" pos:column="24">find_name_traditional<pos:position pos:line="20" pos:column="45"/></name><argument_list pos:line="20" pos:column="45">(<argument><expr><name pos:line="20" pos:column="46">second<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="54">NULL<pos:position pos:line="20" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="60">p_value<pos:position pos:line="20" pos:column="67"/></name></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">patch<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">new_name<pos:position pos:line="21" pos:column="32"/></name></name> <operator pos:line="21" pos:column="33">=<pos:position pos:line="21" pos:column="34"/></operator> <name pos:line="21" pos:column="35">name<pos:position pos:line="21" pos:column="39"/></name></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then> <elseif pos:line="22" pos:column="11">else <if pos:line="22" pos:column="16">if <condition pos:line="22" pos:column="19">(<expr><call><name pos:line="22" pos:column="20">is_dev_null<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">second<pos:position pos:line="22" pos:column="38"/></name></expr></argument>)<pos:position pos:line="22" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="40"/></condition><then pos:line="22" pos:column="40"> <block pos:line="22" pos:column="41">{
		<expr_stmt><expr><name><name pos:line="23" pos:column="17">patch<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">is_new<pos:position pos:line="23" pos:column="30"/></name></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <literal type="number" pos:line="23" pos:column="33">0<pos:position pos:line="23" pos:column="34"/></literal></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="24" pos:column="17">patch<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">is_delete<pos:position pos:line="24" pos:column="33"/></name></name> <operator pos:line="24" pos:column="34">=<pos:position pos:line="24" pos:column="35"/></operator> <literal type="number" pos:line="24" pos:column="36">1<pos:position pos:line="24" pos:column="37"/></literal></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="25" pos:column="17">name<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <call><name pos:line="25" pos:column="24">find_name_traditional<pos:position pos:line="25" pos:column="45"/></name><argument_list pos:line="25" pos:column="45">(<argument><expr><name pos:line="25" pos:column="46">first<pos:position pos:line="25" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="53">NULL<pos:position pos:line="25" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="59">p_value<pos:position pos:line="25" pos:column="66"/></name></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">patch<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">old_name<pos:position pos:line="26" pos:column="32"/></name></name> <operator pos:line="26" pos:column="33">=<pos:position pos:line="26" pos:column="34"/></operator> <name pos:line="26" pos:column="35">name<pos:position pos:line="26" pos:column="39"/></name></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if></elseif> <else pos:line="27" pos:column="11">else <block pos:line="27" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="28" pos:column="17">char<pos:position pos:line="28" pos:column="21"/></name> <modifier pos:line="28" pos:column="22">*<pos:position pos:line="28" pos:column="23"/></modifier></type><name pos:line="28" pos:column="23">first_name<pos:position pos:line="28" pos:column="33"/></name></decl>;<pos:position pos:line="28" pos:column="34"/></decl_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">first_name<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <call><name pos:line="29" pos:column="30">find_name_traditional<pos:position pos:line="29" pos:column="51"/></name><argument_list pos:line="29" pos:column="51">(<argument><expr><name pos:line="29" pos:column="52">first<pos:position pos:line="29" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="59">NULL<pos:position pos:line="29" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="65">p_value<pos:position pos:line="29" pos:column="72"/></name></expr></argument>)<pos:position pos:line="29" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">name<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <call><name pos:line="30" pos:column="24">find_name_traditional<pos:position pos:line="30" pos:column="45"/></name><argument_list pos:line="30" pos:column="45">(<argument><expr><name pos:line="30" pos:column="46">second<pos:position pos:line="30" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="54">first_name<pos:position pos:line="30" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="66">p_value<pos:position pos:line="30" pos:column="73"/></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">free<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">first_name<pos:position pos:line="31" pos:column="32"/></name></expr></argument>)<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">has_epoch_timestamp<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><name pos:line="32" pos:column="41">first<pos:position pos:line="32" pos:column="46"/></name></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="48"/></condition><then pos:line="32" pos:column="48"> <block pos:line="32" pos:column="49">{
			<expr_stmt><expr><name><name pos:line="33" pos:column="25">patch<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">-&gt;<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="32">is_new<pos:position pos:line="33" pos:column="38"/></name></name> <operator pos:line="33" pos:column="39">=<pos:position pos:line="33" pos:column="40"/></operator> <literal type="number" pos:line="33" pos:column="41">1<pos:position pos:line="33" pos:column="42"/></literal></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="34" pos:column="25">patch<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">-&gt;<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="32">is_delete<pos:position pos:line="34" pos:column="41"/></name></name> <operator pos:line="34" pos:column="42">=<pos:position pos:line="34" pos:column="43"/></operator> <literal type="number" pos:line="34" pos:column="44">0<pos:position pos:line="34" pos:column="45"/></literal></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="35" pos:column="25">patch<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">-&gt;<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="32">new_name<pos:position pos:line="35" pos:column="40"/></name></name> <operator pos:line="35" pos:column="41">=<pos:position pos:line="35" pos:column="42"/></operator> <name pos:line="35" pos:column="43">name<pos:position pos:line="35" pos:column="47"/></name></expr>;<pos:position pos:line="35" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></then> <elseif pos:line="36" pos:column="19">else <if pos:line="36" pos:column="24">if <condition pos:line="36" pos:column="27">(<expr><call><name pos:line="36" pos:column="28">has_epoch_timestamp<pos:position pos:line="36" pos:column="47"/></name><argument_list pos:line="36" pos:column="47">(<argument><expr><name pos:line="36" pos:column="48">second<pos:position pos:line="36" pos:column="54"/></name></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="56"/></condition><then pos:line="36" pos:column="56"> <block pos:line="36" pos:column="57">{
			<expr_stmt><expr><name><name pos:line="37" pos:column="25">patch<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">-&gt;<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="32">is_new<pos:position pos:line="37" pos:column="38"/></name></name> <operator pos:line="37" pos:column="39">=<pos:position pos:line="37" pos:column="40"/></operator> <literal type="number" pos:line="37" pos:column="41">0<pos:position pos:line="37" pos:column="42"/></literal></expr>;<pos:position pos:line="37" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="38" pos:column="25">patch<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">-&gt;<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="32">is_delete<pos:position pos:line="38" pos:column="41"/></name></name> <operator pos:line="38" pos:column="42">=<pos:position pos:line="38" pos:column="43"/></operator> <literal type="number" pos:line="38" pos:column="44">1<pos:position pos:line="38" pos:column="45"/></literal></expr>;<pos:position pos:line="38" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="39" pos:column="25">patch<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">old_name<pos:position pos:line="39" pos:column="40"/></name></name> <operator pos:line="39" pos:column="41">=<pos:position pos:line="39" pos:column="42"/></operator> <name pos:line="39" pos:column="43">name<pos:position pos:line="39" pos:column="47"/></name></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if></elseif> <else pos:line="40" pos:column="19">else <block pos:line="40" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="41" pos:column="25">patch<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">-&gt;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="32">old_name<pos:position pos:line="41" pos:column="40"/></name></name> <operator pos:line="41" pos:column="41">=<pos:position pos:line="41" pos:column="42"/></operator> <name pos:line="41" pos:column="43">name<pos:position pos:line="41" pos:column="47"/></name></expr>;<pos:position pos:line="41" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="42" pos:column="25">patch<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">-&gt;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="32">new_name<pos:position pos:line="42" pos:column="40"/></name></name> <operator pos:line="42" pos:column="41">=<pos:position pos:line="42" pos:column="42"/></operator> <call><name pos:line="42" pos:column="43">xstrdup_or_null<pos:position pos:line="42" pos:column="58"/></name><argument_list pos:line="42" pos:column="58">(<argument><expr><name pos:line="42" pos:column="59">name<pos:position pos:line="42" pos:column="63"/></name></expr></argument>)<pos:position pos:line="42" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="65"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></else></if>
	}<pos:position pos:line="44" pos:column="10"/></block></else></if>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">!<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">name<pos:position pos:line="45" pos:column="18"/></name></expr>)<pos:position pos:line="45" pos:column="19"/></condition><then pos:line="45" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="17">die<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><call><name pos:line="46" pos:column="21">_<pos:position pos:line="46" pos:column="22"/></name><argument_list pos:line="46" pos:column="22">(<argument><expr><literal type="string" pos:line="46" pos:column="23">"unable to find filename in patch at line %d"<pos:position pos:line="46" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="46" pos:column="71">linenr<pos:position pos:line="46" pos:column="77"/></name></expr></argument>)<pos:position pos:line="46" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="79"/></expr_stmt></block></then></if>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

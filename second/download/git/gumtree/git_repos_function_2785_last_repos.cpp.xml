<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2785_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sha1_entry_pos<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">table<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>,
		   <parameter><decl><type><name pos:line="2" pos:column="20">size_t<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">elem_size<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>,
		   <parameter><decl><type><name pos:line="3" pos:column="20">size_t<pos:position pos:line="3" pos:column="26"/></name></type> <name pos:line="3" pos:column="27">key_offset<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>,
		   <parameter><decl><type><name pos:line="4" pos:column="20">unsigned<pos:position pos:line="4" pos:column="28"/></name></type> <name pos:line="4" pos:column="29">lo<pos:position pos:line="4" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="33">unsigned<pos:position pos:line="4" pos:column="41"/></name></type> <name pos:line="4" pos:column="42">hi<pos:position pos:line="4" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="46">unsigned<pos:position pos:line="4" pos:column="54"/></name></type> <name pos:line="4" pos:column="55">nr<pos:position pos:line="4" pos:column="57"/></name></decl></parameter>,
		   <parameter><decl><type><specifier pos:line="5" pos:column="20">const<pos:position pos:line="5" pos:column="25"/></specifier> <name pos:line="5" pos:column="26">unsigned<pos:position pos:line="5" pos:column="34"/></name> <name pos:line="5" pos:column="35">char<pos:position pos:line="5" pos:column="39"/></name> <modifier pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></modifier></type><name pos:line="5" pos:column="41">key<pos:position pos:line="5" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="45"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">unsigned<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">char<pos:position pos:line="7" pos:column="28"/></name> <modifier pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></modifier></type><name pos:line="7" pos:column="30">base<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><name pos:line="7" pos:column="37">table<pos:position pos:line="7" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">unsigned<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">char<pos:position pos:line="8" pos:column="28"/></name> <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier></type><name pos:line="8" pos:column="30">hi_key<pos:position pos:line="8" pos:column="36"/></name></decl>, <modifier pos:line="8" pos:column="38">*<pos:position pos:line="8" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="39">lo_key<pos:position pos:line="8" pos:column="45"/></name></decl>;<pos:position pos:line="8" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">ofs_0<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="10" pos:column="9">static<pos:position pos:line="10" pos:column="15"/></specifier> <type><name pos:line="10" pos:column="16">int<pos:position pos:line="10" pos:column="19"/></name></type> <name pos:line="10" pos:column="20">debug_lookup<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><operator pos:line="10" pos:column="35">-<pos:position pos:line="10" pos:column="36"/></operator><literal type="number" pos:line="10" pos:column="36">1<pos:position pos:line="10" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">debug_lookup<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">&lt;<pos:position pos:line="12" pos:column="30"/></operator> <literal type="number" pos:line="12" pos:column="28">0<pos:position pos:line="12" pos:column="29"/></literal></expr>)<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">debug_lookup<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">=<pos:position pos:line="13" pos:column="31"/></operator> <operator pos:line="13" pos:column="32">!<pos:position pos:line="13" pos:column="33"/></operator><operator pos:line="13" pos:column="33">!<pos:position pos:line="13" pos:column="34"/></operator><call><name pos:line="13" pos:column="34">getenv<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">(<argument><expr><literal type="string" pos:line="13" pos:column="41">"GIT_DEBUG_LOOKUP"<pos:position pos:line="13" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="61"/></expr_stmt></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">nr<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">||<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">lo<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&gt;=<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="26">hi<pos:position pos:line="15" pos:column="28"/></name></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></return></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">nr<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">==<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">hi<pos:position pos:line="18" pos:column="21"/></name></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">hi_key<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">NULL<pos:position pos:line="19" pos:column="30"/></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt></block></then>
	<else pos:line="20" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">hi_key<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">base<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">+<pos:position pos:line="21" pos:column="32"/></operator> <name pos:line="21" pos:column="33">elem_size<pos:position pos:line="21" pos:column="42"/></name> <operator pos:line="21" pos:column="43">*<pos:position pos:line="21" pos:column="44"/></operator> <name pos:line="21" pos:column="45">hi<pos:position pos:line="21" pos:column="47"/></name> <operator pos:line="21" pos:column="48">+<pos:position pos:line="21" pos:column="49"/></operator> <name pos:line="21" pos:column="50">key_offset<pos:position pos:line="21" pos:column="60"/></name></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name pos:line="22" pos:column="9">lo_key<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">base<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">+<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">elem_size<pos:position pos:line="22" pos:column="34"/></name> <operator pos:line="22" pos:column="35">*<pos:position pos:line="22" pos:column="36"/></operator> <name pos:line="22" pos:column="37">lo<pos:position pos:line="22" pos:column="39"/></name> <operator pos:line="22" pos:column="40">+<pos:position pos:line="22" pos:column="41"/></operator> <name pos:line="22" pos:column="42">key_offset<pos:position pos:line="22" pos:column="52"/></name></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>

	<expr_stmt><expr><name pos:line="24" pos:column="9">ofs_0<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <literal type="number" pos:line="24" pos:column="17">0<pos:position pos:line="24" pos:column="18"/></literal></expr>;<pos:position pos:line="24" pos:column="19"/></expr_stmt>
	<do pos:line="25" pos:column="9">do <block pos:line="25" pos:column="12">{
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">int<pos:position pos:line="26" pos:column="20"/></name></type> <name pos:line="26" pos:column="21">cmp<pos:position pos:line="26" pos:column="24"/></name></decl>;<pos:position pos:line="26" pos:column="25"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="27" pos:column="17">unsigned<pos:position pos:line="27" pos:column="25"/></name></type> <name pos:line="27" pos:column="26">ofs<pos:position pos:line="27" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="27" pos:column="31">mi<pos:position pos:line="27" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="27" pos:column="35">range<pos:position pos:line="27" pos:column="40"/></name></decl>;<pos:position pos:line="27" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="28" pos:column="17">unsigned<pos:position pos:line="28" pos:column="25"/></name></type> <name pos:line="28" pos:column="26">lov<pos:position pos:line="28" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="28" pos:column="31">hiv<pos:position pos:line="28" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="28" pos:column="36">kyv<pos:position pos:line="28" pos:column="39"/></name></decl>;<pos:position pos:line="28" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="29" pos:column="17">const<pos:position pos:line="29" pos:column="22"/></specifier> <name pos:line="29" pos:column="23">unsigned<pos:position pos:line="29" pos:column="31"/></name> <name pos:line="29" pos:column="32">char<pos:position pos:line="29" pos:column="36"/></name> <modifier pos:line="29" pos:column="37">*<pos:position pos:line="29" pos:column="38"/></modifier></type><name pos:line="29" pos:column="38">mi_key<pos:position pos:line="29" pos:column="44"/></name></decl>;<pos:position pos:line="29" pos:column="45"/></decl_stmt>

		<expr_stmt><expr><name pos:line="31" pos:column="17">range<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <name pos:line="31" pos:column="25">hi<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">-<pos:position pos:line="31" pos:column="29"/></operator> <name pos:line="31" pos:column="30">lo<pos:position pos:line="31" pos:column="32"/></name></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">hi_key<pos:position pos:line="32" pos:column="27"/></name></expr>)<pos:position pos:line="32" pos:column="28"/></condition><then pos:line="32" pos:column="28"> <block pos:line="32" pos:column="29">{
			<for pos:line="33" pos:column="25">for <control pos:line="33" pos:column="29">(<init><expr><name pos:line="33" pos:column="30">ofs<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">=<pos:position pos:line="33" pos:column="35"/></operator> <name pos:line="33" pos:column="36">ofs_0<pos:position pos:line="33" pos:column="41"/></name></expr>;<pos:position pos:line="33" pos:column="42"/></init> <condition><expr><name pos:line="33" pos:column="43">ofs<pos:position pos:line="33" pos:column="46"/></name> <operator pos:line="33" pos:column="47">&lt;<pos:position pos:line="33" pos:column="51"/></operator> <literal type="number" pos:line="33" pos:column="49">20<pos:position pos:line="33" pos:column="51"/></literal></expr>;<pos:position pos:line="33" pos:column="52"/></condition> <incr><expr><name pos:line="33" pos:column="53">ofs<pos:position pos:line="33" pos:column="56"/></name><operator pos:line="33" pos:column="56">++<pos:position pos:line="33" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="59"/></control>
				<block type="pseudo"><if pos:line="34" pos:column="33">if <condition pos:line="34" pos:column="36">(<expr><name><name pos:line="34" pos:column="37">lo_key<pos:position pos:line="34" pos:column="43"/></name><index pos:line="34" pos:column="43">[<expr><name pos:line="34" pos:column="44">ofs<pos:position pos:line="34" pos:column="47"/></name></expr>]<pos:position pos:line="34" pos:column="48"/></index></name> <operator pos:line="34" pos:column="49">!=<pos:position pos:line="34" pos:column="51"/></operator> <name><name pos:line="34" pos:column="52">hi_key<pos:position pos:line="34" pos:column="58"/></name><index pos:line="34" pos:column="58">[<expr><name pos:line="34" pos:column="59">ofs<pos:position pos:line="34" pos:column="62"/></name></expr>]<pos:position pos:line="34" pos:column="63"/></index></name></expr>)<pos:position pos:line="34" pos:column="64"/></condition><then pos:line="34" pos:column="64">
					<block type="pseudo"><break pos:line="35" pos:column="41">break;<pos:position pos:line="35" pos:column="47"/></break></block></then></if></block></for>
			<expr_stmt><expr><name pos:line="36" pos:column="25">ofs_0<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">=<pos:position pos:line="36" pos:column="32"/></operator> <name pos:line="36" pos:column="33">ofs<pos:position pos:line="36" pos:column="36"/></name></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
			<comment type="block" pos:line="37" pos:column="25">/*
			 * byte 0 thru (ofs-1) are the same between
			 * lo and hi; ofs is the first byte that is
			 * different.
			 *
			 * If ofs==20, then no bytes are different,
			 * meaning we have entries with duplicate
			 * keys. We know that we are in a solid run
			 * of this entry (because the entries are
			 * sorted, and our lo and hi are the same,
			 * there can be nothing but this single key
			 * in between). So we can stop the search.
			 * Either one of these entries is it (and
			 * we do not care which), or we do not have
			 * it.
			 *
			 * Furthermore, we know that one of our
			 * endpoints must be the edge of the run of
			 * duplicates. For example, given this
			 * sequence:
			 *
			 *     idx 0 1 2 3 4 5
			 *     key A C C C C D
			 *
			 * If we are searching for "B", we might
			 * hit the duplicate run at lo=1, hi=3
			 * (e.g., by first mi=3, then mi=0). But we
			 * can never have lo &gt; 1, because B &lt; C.
			 * That is, if our key is less than the
			 * run, we know that "lo" is the edge, but
			 * we can say nothing of "hi". Similarly,
			 * if our key is greater than the run, we
			 * know that "hi" is the edge, but we can
			 * say nothing of "lo".
			 *
			 * Therefore if we do not find it, we also
			 * know where it would go if it did exist:
			 * just on the far side of the edge that we
			 * know about.
			 */</comment>
			<if pos:line="77" pos:column="25">if <condition pos:line="77" pos:column="28">(<expr><name pos:line="77" pos:column="29">ofs<pos:position pos:line="77" pos:column="32"/></name> <operator pos:line="77" pos:column="33">==<pos:position pos:line="77" pos:column="35"/></operator> <literal type="number" pos:line="77" pos:column="36">20<pos:position pos:line="77" pos:column="38"/></literal></expr>)<pos:position pos:line="77" pos:column="39"/></condition><then pos:line="77" pos:column="39"> <block pos:line="77" pos:column="40">{
				<expr_stmt><expr><name pos:line="78" pos:column="33">mi<pos:position pos:line="78" pos:column="35"/></name> <operator pos:line="78" pos:column="36">=<pos:position pos:line="78" pos:column="37"/></operator> <name pos:line="78" pos:column="38">lo<pos:position pos:line="78" pos:column="40"/></name></expr>;<pos:position pos:line="78" pos:column="41"/></expr_stmt>
				<expr_stmt><expr><name pos:line="79" pos:column="33">mi_key<pos:position pos:line="79" pos:column="39"/></name> <operator pos:line="79" pos:column="40">=<pos:position pos:line="79" pos:column="41"/></operator> <name pos:line="79" pos:column="42">base<pos:position pos:line="79" pos:column="46"/></name> <operator pos:line="79" pos:column="47">+<pos:position pos:line="79" pos:column="48"/></operator> <name pos:line="79" pos:column="49">elem_size<pos:position pos:line="79" pos:column="58"/></name> <operator pos:line="79" pos:column="59">*<pos:position pos:line="79" pos:column="60"/></operator> <name pos:line="79" pos:column="61">mi<pos:position pos:line="79" pos:column="63"/></name> <operator pos:line="79" pos:column="64">+<pos:position pos:line="79" pos:column="65"/></operator> <name pos:line="79" pos:column="66">key_offset<pos:position pos:line="79" pos:column="76"/></name></expr>;<pos:position pos:line="79" pos:column="77"/></expr_stmt>
				<expr_stmt><expr><name pos:line="80" pos:column="33">cmp<pos:position pos:line="80" pos:column="36"/></name> <operator pos:line="80" pos:column="37">=<pos:position pos:line="80" pos:column="38"/></operator> <call><name pos:line="80" pos:column="39">memcmp<pos:position pos:line="80" pos:column="45"/></name><argument_list pos:line="80" pos:column="45">(<argument><expr><name pos:line="80" pos:column="46">mi_key<pos:position pos:line="80" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="54">key<pos:position pos:line="80" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="59">20<pos:position pos:line="80" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="63"/></expr_stmt>
				<if pos:line="81" pos:column="33">if <condition pos:line="81" pos:column="36">(<expr><operator pos:line="81" pos:column="37">!<pos:position pos:line="81" pos:column="38"/></operator><name pos:line="81" pos:column="38">cmp<pos:position pos:line="81" pos:column="41"/></name></expr>)<pos:position pos:line="81" pos:column="42"/></condition><then pos:line="81" pos:column="42">
					<block type="pseudo"><return pos:line="82" pos:column="41">return <expr><name pos:line="82" pos:column="48">mi<pos:position pos:line="82" pos:column="50"/></name></expr>;<pos:position pos:line="82" pos:column="51"/></return></block></then></if>
				<if pos:line="83" pos:column="33">if <condition pos:line="83" pos:column="36">(<expr><name pos:line="83" pos:column="37">cmp<pos:position pos:line="83" pos:column="40"/></name> <operator pos:line="83" pos:column="41">&lt;<pos:position pos:line="83" pos:column="45"/></operator> <literal type="number" pos:line="83" pos:column="43">0<pos:position pos:line="83" pos:column="44"/></literal></expr>)<pos:position pos:line="83" pos:column="45"/></condition><then pos:line="83" pos:column="45">
					<block type="pseudo"><return pos:line="84" pos:column="41">return <expr><operator pos:line="84" pos:column="48">-<pos:position pos:line="84" pos:column="49"/></operator><literal type="number" pos:line="84" pos:column="49">1<pos:position pos:line="84" pos:column="50"/></literal> <operator pos:line="84" pos:column="51">-<pos:position pos:line="84" pos:column="52"/></operator> <name pos:line="84" pos:column="53">hi<pos:position pos:line="84" pos:column="55"/></name></expr>;<pos:position pos:line="84" pos:column="56"/></return></block></then>
				<else pos:line="85" pos:column="33">else
					<block type="pseudo"><return pos:line="86" pos:column="41">return <expr><operator pos:line="86" pos:column="48">-<pos:position pos:line="86" pos:column="49"/></operator><literal type="number" pos:line="86" pos:column="49">1<pos:position pos:line="86" pos:column="50"/></literal> <operator pos:line="86" pos:column="51">-<pos:position pos:line="86" pos:column="52"/></operator> <name pos:line="86" pos:column="53">lo<pos:position pos:line="86" pos:column="55"/></name></expr>;<pos:position pos:line="86" pos:column="56"/></return></block></else></if>
			}<pos:position pos:line="87" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="89" pos:column="25">hiv<pos:position pos:line="89" pos:column="28"/></name> <operator pos:line="89" pos:column="29">=<pos:position pos:line="89" pos:column="30"/></operator> <name><name pos:line="89" pos:column="31">hi_key<pos:position pos:line="89" pos:column="37"/></name><index pos:line="89" pos:column="37">[<expr><name pos:line="89" pos:column="38">ofs_0<pos:position pos:line="89" pos:column="43"/></name></expr>]<pos:position pos:line="89" pos:column="44"/></index></name></expr>;<pos:position pos:line="89" pos:column="45"/></expr_stmt>
			<if pos:line="90" pos:column="25">if <condition pos:line="90" pos:column="28">(<expr><name pos:line="90" pos:column="29">ofs_0<pos:position pos:line="90" pos:column="34"/></name> <operator pos:line="90" pos:column="35">&lt;<pos:position pos:line="90" pos:column="39"/></operator> <literal type="number" pos:line="90" pos:column="37">19<pos:position pos:line="90" pos:column="39"/></literal></expr>)<pos:position pos:line="90" pos:column="40"/></condition><then pos:line="90" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="33">hiv<pos:position pos:line="91" pos:column="36"/></name> <operator pos:line="91" pos:column="37">=<pos:position pos:line="91" pos:column="38"/></operator> <operator pos:line="91" pos:column="39">(<pos:position pos:line="91" pos:column="40"/></operator><name pos:line="91" pos:column="40">hiv<pos:position pos:line="91" pos:column="43"/></name> <operator pos:line="91" pos:column="44">&lt;&lt;<pos:position pos:line="91" pos:column="52"/></operator> <literal type="number" pos:line="91" pos:column="47">8<pos:position pos:line="91" pos:column="48"/></literal><operator pos:line="91" pos:column="48">)<pos:position pos:line="91" pos:column="49"/></operator> <operator pos:line="91" pos:column="50">|<pos:position pos:line="91" pos:column="51"/></operator> <name><name pos:line="91" pos:column="52">hi_key<pos:position pos:line="91" pos:column="58"/></name><index pos:line="91" pos:column="58">[<expr><name pos:line="91" pos:column="59">ofs_0<pos:position pos:line="91" pos:column="64"/></name><operator pos:line="91" pos:column="64">+<pos:position pos:line="91" pos:column="65"/></operator><literal type="number" pos:line="91" pos:column="65">1<pos:position pos:line="91" pos:column="66"/></literal></expr>]<pos:position pos:line="91" pos:column="67"/></index></name></expr>;<pos:position pos:line="91" pos:column="68"/></expr_stmt></block></then></if>
		}<pos:position pos:line="92" pos:column="18"/></block></then> <else pos:line="92" pos:column="19">else <block pos:line="92" pos:column="24">{
			<expr_stmt><expr><name pos:line="93" pos:column="25">hiv<pos:position pos:line="93" pos:column="28"/></name> <operator pos:line="93" pos:column="29">=<pos:position pos:line="93" pos:column="30"/></operator> <literal type="number" pos:line="93" pos:column="31">256<pos:position pos:line="93" pos:column="34"/></literal></expr>;<pos:position pos:line="93" pos:column="35"/></expr_stmt>
			<if pos:line="94" pos:column="25">if <condition pos:line="94" pos:column="28">(<expr><name pos:line="94" pos:column="29">ofs_0<pos:position pos:line="94" pos:column="34"/></name> <operator pos:line="94" pos:column="35">&lt;<pos:position pos:line="94" pos:column="39"/></operator> <literal type="number" pos:line="94" pos:column="37">19<pos:position pos:line="94" pos:column="39"/></literal></expr>)<pos:position pos:line="94" pos:column="40"/></condition><then pos:line="94" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="33">hiv<pos:position pos:line="95" pos:column="36"/></name> <operator pos:line="95" pos:column="37">&lt;&lt;=<pos:position pos:line="95" pos:column="46"/></operator> <literal type="number" pos:line="95" pos:column="41">8<pos:position pos:line="95" pos:column="42"/></literal></expr>;<pos:position pos:line="95" pos:column="43"/></expr_stmt></block></then></if>
		}<pos:position pos:line="96" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="97" pos:column="17">lov<pos:position pos:line="97" pos:column="20"/></name> <operator pos:line="97" pos:column="21">=<pos:position pos:line="97" pos:column="22"/></operator> <name><name pos:line="97" pos:column="23">lo_key<pos:position pos:line="97" pos:column="29"/></name><index pos:line="97" pos:column="29">[<expr><name pos:line="97" pos:column="30">ofs_0<pos:position pos:line="97" pos:column="35"/></name></expr>]<pos:position pos:line="97" pos:column="36"/></index></name></expr>;<pos:position pos:line="97" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="98" pos:column="17">kyv<pos:position pos:line="98" pos:column="20"/></name> <operator pos:line="98" pos:column="21">=<pos:position pos:line="98" pos:column="22"/></operator> <name><name pos:line="98" pos:column="23">key<pos:position pos:line="98" pos:column="26"/></name><index pos:line="98" pos:column="26">[<expr><name pos:line="98" pos:column="27">ofs_0<pos:position pos:line="98" pos:column="32"/></name></expr>]<pos:position pos:line="98" pos:column="33"/></index></name></expr>;<pos:position pos:line="98" pos:column="34"/></expr_stmt>
		<if pos:line="99" pos:column="17">if <condition pos:line="99" pos:column="20">(<expr><name pos:line="99" pos:column="21">ofs_0<pos:position pos:line="99" pos:column="26"/></name> <operator pos:line="99" pos:column="27">&lt;<pos:position pos:line="99" pos:column="31"/></operator> <literal type="number" pos:line="99" pos:column="29">19<pos:position pos:line="99" pos:column="31"/></literal></expr>)<pos:position pos:line="99" pos:column="32"/></condition><then pos:line="99" pos:column="32"> <block pos:line="99" pos:column="33">{
			<expr_stmt><expr><name pos:line="100" pos:column="25">lov<pos:position pos:line="100" pos:column="28"/></name> <operator pos:line="100" pos:column="29">=<pos:position pos:line="100" pos:column="30"/></operator> <operator pos:line="100" pos:column="31">(<pos:position pos:line="100" pos:column="32"/></operator><name pos:line="100" pos:column="32">lov<pos:position pos:line="100" pos:column="35"/></name> <operator pos:line="100" pos:column="36">&lt;&lt;<pos:position pos:line="100" pos:column="44"/></operator> <literal type="number" pos:line="100" pos:column="39">8<pos:position pos:line="100" pos:column="40"/></literal><operator pos:line="100" pos:column="40">)<pos:position pos:line="100" pos:column="41"/></operator> <operator pos:line="100" pos:column="42">|<pos:position pos:line="100" pos:column="43"/></operator> <name><name pos:line="100" pos:column="44">lo_key<pos:position pos:line="100" pos:column="50"/></name><index pos:line="100" pos:column="50">[<expr><name pos:line="100" pos:column="51">ofs_0<pos:position pos:line="100" pos:column="56"/></name><operator pos:line="100" pos:column="56">+<pos:position pos:line="100" pos:column="57"/></operator><literal type="number" pos:line="100" pos:column="57">1<pos:position pos:line="100" pos:column="58"/></literal></expr>]<pos:position pos:line="100" pos:column="59"/></index></name></expr>;<pos:position pos:line="100" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name pos:line="101" pos:column="25">kyv<pos:position pos:line="101" pos:column="28"/></name> <operator pos:line="101" pos:column="29">=<pos:position pos:line="101" pos:column="30"/></operator> <operator pos:line="101" pos:column="31">(<pos:position pos:line="101" pos:column="32"/></operator><name pos:line="101" pos:column="32">kyv<pos:position pos:line="101" pos:column="35"/></name> <operator pos:line="101" pos:column="36">&lt;&lt;<pos:position pos:line="101" pos:column="44"/></operator> <literal type="number" pos:line="101" pos:column="39">8<pos:position pos:line="101" pos:column="40"/></literal><operator pos:line="101" pos:column="40">)<pos:position pos:line="101" pos:column="41"/></operator> <operator pos:line="101" pos:column="42">|<pos:position pos:line="101" pos:column="43"/></operator> <name><name pos:line="101" pos:column="44">key<pos:position pos:line="101" pos:column="47"/></name><index pos:line="101" pos:column="47">[<expr><name pos:line="101" pos:column="48">ofs_0<pos:position pos:line="101" pos:column="53"/></name><operator pos:line="101" pos:column="53">+<pos:position pos:line="101" pos:column="54"/></operator><literal type="number" pos:line="101" pos:column="54">1<pos:position pos:line="101" pos:column="55"/></literal></expr>]<pos:position pos:line="101" pos:column="56"/></index></name></expr>;<pos:position pos:line="101" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="102" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="103" pos:column="17">assert<pos:position pos:line="103" pos:column="23"/></name><argument_list pos:line="103" pos:column="23">(<argument><expr><name pos:line="103" pos:column="24">lov<pos:position pos:line="103" pos:column="27"/></name> <operator pos:line="103" pos:column="28">&lt;<pos:position pos:line="103" pos:column="32"/></operator> <name pos:line="103" pos:column="30">hiv<pos:position pos:line="103" pos:column="33"/></name></expr></argument>)<pos:position pos:line="103" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="35"/></expr_stmt>

		<if pos:line="105" pos:column="17">if <condition pos:line="105" pos:column="20">(<expr><name pos:line="105" pos:column="21">kyv<pos:position pos:line="105" pos:column="24"/></name> <operator pos:line="105" pos:column="25">&lt;<pos:position pos:line="105" pos:column="29"/></operator> <name pos:line="105" pos:column="27">lov<pos:position pos:line="105" pos:column="30"/></name></expr>)<pos:position pos:line="105" pos:column="31"/></condition><then pos:line="105" pos:column="31">
			<block type="pseudo"><return pos:line="106" pos:column="25">return <expr><operator pos:line="106" pos:column="32">-<pos:position pos:line="106" pos:column="33"/></operator><literal type="number" pos:line="106" pos:column="33">1<pos:position pos:line="106" pos:column="34"/></literal> <operator pos:line="106" pos:column="35">-<pos:position pos:line="106" pos:column="36"/></operator> <name pos:line="106" pos:column="37">lo<pos:position pos:line="106" pos:column="39"/></name></expr>;<pos:position pos:line="106" pos:column="40"/></return></block></then></if>
		<if pos:line="107" pos:column="17">if <condition pos:line="107" pos:column="20">(<expr><name pos:line="107" pos:column="21">hiv<pos:position pos:line="107" pos:column="24"/></name> <operator pos:line="107" pos:column="25">&lt;<pos:position pos:line="107" pos:column="29"/></operator> <name pos:line="107" pos:column="27">kyv<pos:position pos:line="107" pos:column="30"/></name></expr>)<pos:position pos:line="107" pos:column="31"/></condition><then pos:line="107" pos:column="31">
			<block type="pseudo"><return pos:line="108" pos:column="25">return <expr><operator pos:line="108" pos:column="32">-<pos:position pos:line="108" pos:column="33"/></operator><literal type="number" pos:line="108" pos:column="33">1<pos:position pos:line="108" pos:column="34"/></literal> <operator pos:line="108" pos:column="35">-<pos:position pos:line="108" pos:column="36"/></operator> <name pos:line="108" pos:column="37">hi<pos:position pos:line="108" pos:column="39"/></name></expr>;<pos:position pos:line="108" pos:column="40"/></return></block></then></if>

		<comment type="block" pos:line="110" pos:column="17">/*
		 * Even if we know the target is much closer to 'hi'
		 * than 'lo', if we pick too precisely and overshoot
		 * (e.g. when we know 'mi' is closer to 'hi' than to
		 * 'lo', pick 'mi' that is higher than the target), we
		 * end up narrowing the search space by a smaller
		 * amount (i.e. the distance between 'mi' and 'hi')
		 * than what we would have (i.e. about half of 'lo'
		 * and 'hi').  Hedge our bets to pick 'mi' less
		 * aggressively, i.e. make 'mi' a bit closer to the
		 * middle than we would otherwise pick.
		 */</comment>
		<expr_stmt><expr><name pos:line="122" pos:column="17">kyv<pos:position pos:line="122" pos:column="20"/></name> <operator pos:line="122" pos:column="21">=<pos:position pos:line="122" pos:column="22"/></operator> <operator pos:line="122" pos:column="23">(<pos:position pos:line="122" pos:column="24"/></operator><name pos:line="122" pos:column="24">kyv<pos:position pos:line="122" pos:column="27"/></name> <operator pos:line="122" pos:column="28">*<pos:position pos:line="122" pos:column="29"/></operator> <literal type="number" pos:line="122" pos:column="30">6<pos:position pos:line="122" pos:column="31"/></literal> <operator pos:line="122" pos:column="32">+<pos:position pos:line="122" pos:column="33"/></operator> <name pos:line="122" pos:column="34">lov<pos:position pos:line="122" pos:column="37"/></name> <operator pos:line="122" pos:column="38">+<pos:position pos:line="122" pos:column="39"/></operator> <name pos:line="122" pos:column="40">hiv<pos:position pos:line="122" pos:column="43"/></name><operator pos:line="122" pos:column="43">)<pos:position pos:line="122" pos:column="44"/></operator> <operator pos:line="122" pos:column="45">/<pos:position pos:line="122" pos:column="46"/></operator> <literal type="number" pos:line="122" pos:column="47">8<pos:position pos:line="122" pos:column="48"/></literal></expr>;<pos:position pos:line="122" pos:column="49"/></expr_stmt>
		<if pos:line="123" pos:column="17">if <condition pos:line="123" pos:column="20">(<expr><name pos:line="123" pos:column="21">lov<pos:position pos:line="123" pos:column="24"/></name> <operator pos:line="123" pos:column="25">&lt;<pos:position pos:line="123" pos:column="29"/></operator> <name pos:line="123" pos:column="27">hiv<pos:position pos:line="123" pos:column="30"/></name> <operator pos:line="123" pos:column="31">-<pos:position pos:line="123" pos:column="32"/></operator> <literal type="number" pos:line="123" pos:column="33">1<pos:position pos:line="123" pos:column="34"/></literal></expr>)<pos:position pos:line="123" pos:column="35"/></condition><then pos:line="123" pos:column="35"> <block pos:line="123" pos:column="36">{
			<if pos:line="124" pos:column="25">if <condition pos:line="124" pos:column="28">(<expr><name pos:line="124" pos:column="29">kyv<pos:position pos:line="124" pos:column="32"/></name> <operator pos:line="124" pos:column="33">==<pos:position pos:line="124" pos:column="35"/></operator> <name pos:line="124" pos:column="36">lov<pos:position pos:line="124" pos:column="39"/></name></expr>)<pos:position pos:line="124" pos:column="40"/></condition><then pos:line="124" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><name pos:line="125" pos:column="33">kyv<pos:position pos:line="125" pos:column="36"/></name><operator pos:line="125" pos:column="36">++<pos:position pos:line="125" pos:column="38"/></operator></expr>;<pos:position pos:line="125" pos:column="39"/></expr_stmt></block></then>
			<elseif pos:line="126" pos:column="25">else <if pos:line="126" pos:column="30">if <condition pos:line="126" pos:column="33">(<expr><name pos:line="126" pos:column="34">kyv<pos:position pos:line="126" pos:column="37"/></name> <operator pos:line="126" pos:column="38">==<pos:position pos:line="126" pos:column="40"/></operator> <name pos:line="126" pos:column="41">hiv<pos:position pos:line="126" pos:column="44"/></name></expr>)<pos:position pos:line="126" pos:column="45"/></condition><then pos:line="126" pos:column="45">
				<block type="pseudo"><expr_stmt><expr><name pos:line="127" pos:column="33">kyv<pos:position pos:line="127" pos:column="36"/></name><operator pos:line="127" pos:column="36">--<pos:position pos:line="127" pos:column="38"/></operator></expr>;<pos:position pos:line="127" pos:column="39"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="128" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="129" pos:column="17">mi<pos:position pos:line="129" pos:column="19"/></name> <operator pos:line="129" pos:column="20">=<pos:position pos:line="129" pos:column="21"/></operator> <operator pos:line="129" pos:column="22">(<pos:position pos:line="129" pos:column="23"/></operator><name pos:line="129" pos:column="23">range<pos:position pos:line="129" pos:column="28"/></name> <operator pos:line="129" pos:column="29">-<pos:position pos:line="129" pos:column="30"/></operator> <literal type="number" pos:line="129" pos:column="31">1<pos:position pos:line="129" pos:column="32"/></literal><operator pos:line="129" pos:column="32">)<pos:position pos:line="129" pos:column="33"/></operator> <operator pos:line="129" pos:column="34">*<pos:position pos:line="129" pos:column="35"/></operator> <operator pos:line="129" pos:column="36">(<pos:position pos:line="129" pos:column="37"/></operator><name pos:line="129" pos:column="37">kyv<pos:position pos:line="129" pos:column="40"/></name> <operator pos:line="129" pos:column="41">-<pos:position pos:line="129" pos:column="42"/></operator> <name pos:line="129" pos:column="43">lov<pos:position pos:line="129" pos:column="46"/></name><operator pos:line="129" pos:column="46">)<pos:position pos:line="129" pos:column="47"/></operator> <operator pos:line="129" pos:column="48">/<pos:position pos:line="129" pos:column="49"/></operator> <operator pos:line="129" pos:column="50">(<pos:position pos:line="129" pos:column="51"/></operator><name pos:line="129" pos:column="51">hiv<pos:position pos:line="129" pos:column="54"/></name> <operator pos:line="129" pos:column="55">-<pos:position pos:line="129" pos:column="56"/></operator> <name pos:line="129" pos:column="57">lov<pos:position pos:line="129" pos:column="60"/></name><operator pos:line="129" pos:column="60">)<pos:position pos:line="129" pos:column="61"/></operator> <operator pos:line="129" pos:column="62">+<pos:position pos:line="129" pos:column="63"/></operator> <name pos:line="129" pos:column="64">lo<pos:position pos:line="129" pos:column="66"/></name></expr>;<pos:position pos:line="129" pos:column="67"/></expr_stmt>

		<if pos:line="131" pos:column="17">if <condition pos:line="131" pos:column="20">(<expr><name pos:line="131" pos:column="21">debug_lookup<pos:position pos:line="131" pos:column="33"/></name></expr>)<pos:position pos:line="131" pos:column="34"/></condition><then pos:line="131" pos:column="34"> <block pos:line="131" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="132" pos:column="25">printf<pos:position pos:line="132" pos:column="31"/></name><argument_list pos:line="132" pos:column="31">(<argument><expr><literal type="string" pos:line="132" pos:column="32">"lo %u hi %u rg %u mi %u "<pos:position pos:line="132" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="132" pos:column="60">lo<pos:position pos:line="132" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="64">hi<pos:position pos:line="132" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="68">range<pos:position pos:line="132" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="75">mi<pos:position pos:line="132" pos:column="77"/></name></expr></argument>)<pos:position pos:line="132" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="79"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="133" pos:column="25">printf<pos:position pos:line="133" pos:column="31"/></name><argument_list pos:line="133" pos:column="31">(<argument><expr><literal type="string" pos:line="133" pos:column="32">"ofs %u lov %x, hiv %x, kyv %x\n"<pos:position pos:line="133" pos:column="65"/></literal></expr></argument>,
			       <argument><expr><name pos:line="134" pos:column="32">ofs_0<pos:position pos:line="134" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="39">lov<pos:position pos:line="134" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="44">hiv<pos:position pos:line="134" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="49">kyv<pos:position pos:line="134" pos:column="52"/></name></expr></argument>)<pos:position pos:line="134" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="135" pos:column="18"/></block></then></if>
		<if pos:line="136" pos:column="17">if <condition pos:line="136" pos:column="20">(<expr><operator pos:line="136" pos:column="21">!<pos:position pos:line="136" pos:column="22"/></operator><operator pos:line="136" pos:column="22">(<pos:position pos:line="136" pos:column="23"/></operator><name pos:line="136" pos:column="23">lo<pos:position pos:line="136" pos:column="25"/></name> <operator pos:line="136" pos:column="26">&lt;=<pos:position pos:line="136" pos:column="31"/></operator> <name pos:line="136" pos:column="29">mi<pos:position pos:line="136" pos:column="31"/></name> <operator pos:line="136" pos:column="32">&amp;&amp;<pos:position pos:line="136" pos:column="42"/></operator> <name pos:line="136" pos:column="35">mi<pos:position pos:line="136" pos:column="37"/></name> <operator pos:line="136" pos:column="38">&lt;<pos:position pos:line="136" pos:column="42"/></operator> <name pos:line="136" pos:column="40">hi<pos:position pos:line="136" pos:column="42"/></name><operator pos:line="136" pos:column="42">)<pos:position pos:line="136" pos:column="43"/></operator></expr>)<pos:position pos:line="136" pos:column="44"/></condition><then pos:line="136" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="137" pos:column="25">die<pos:position pos:line="137" pos:column="28"/></name><argument_list pos:line="137" pos:column="28">(<argument><expr><literal type="string" pos:line="137" pos:column="29">"assertion failure lo %u mi %u hi %u %s"<pos:position pos:line="137" pos:column="69"/></literal></expr></argument>,
			    <argument><expr><name pos:line="138" pos:column="29">lo<pos:position pos:line="138" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="33">mi<pos:position pos:line="138" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="37">hi<pos:position pos:line="138" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="138" pos:column="41">sha1_to_hex<pos:position pos:line="138" pos:column="52"/></name><argument_list pos:line="138" pos:column="52">(<argument><expr><name pos:line="138" pos:column="53">key<pos:position pos:line="138" pos:column="56"/></name></expr></argument>)<pos:position pos:line="138" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="138" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="59"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="140" pos:column="17">mi_key<pos:position pos:line="140" pos:column="23"/></name> <operator pos:line="140" pos:column="24">=<pos:position pos:line="140" pos:column="25"/></operator> <name pos:line="140" pos:column="26">base<pos:position pos:line="140" pos:column="30"/></name> <operator pos:line="140" pos:column="31">+<pos:position pos:line="140" pos:column="32"/></operator> <name pos:line="140" pos:column="33">elem_size<pos:position pos:line="140" pos:column="42"/></name> <operator pos:line="140" pos:column="43">*<pos:position pos:line="140" pos:column="44"/></operator> <name pos:line="140" pos:column="45">mi<pos:position pos:line="140" pos:column="47"/></name> <operator pos:line="140" pos:column="48">+<pos:position pos:line="140" pos:column="49"/></operator> <name pos:line="140" pos:column="50">key_offset<pos:position pos:line="140" pos:column="60"/></name></expr>;<pos:position pos:line="140" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name pos:line="141" pos:column="17">cmp<pos:position pos:line="141" pos:column="20"/></name> <operator pos:line="141" pos:column="21">=<pos:position pos:line="141" pos:column="22"/></operator> <call><name pos:line="141" pos:column="23">memcmp<pos:position pos:line="141" pos:column="29"/></name><argument_list pos:line="141" pos:column="29">(<argument><expr><name pos:line="141" pos:column="30">mi_key<pos:position pos:line="141" pos:column="36"/></name> <operator pos:line="141" pos:column="37">+<pos:position pos:line="141" pos:column="38"/></operator> <name pos:line="141" pos:column="39">ofs_0<pos:position pos:line="141" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="46">key<pos:position pos:line="141" pos:column="49"/></name> <operator pos:line="141" pos:column="50">+<pos:position pos:line="141" pos:column="51"/></operator> <name pos:line="141" pos:column="52">ofs_0<pos:position pos:line="141" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="59">20<pos:position pos:line="141" pos:column="61"/></literal> <operator pos:line="141" pos:column="62">-<pos:position pos:line="141" pos:column="63"/></operator> <name pos:line="141" pos:column="64">ofs_0<pos:position pos:line="141" pos:column="69"/></name></expr></argument>)<pos:position pos:line="141" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="71"/></expr_stmt>
		<if pos:line="142" pos:column="17">if <condition pos:line="142" pos:column="20">(<expr><operator pos:line="142" pos:column="21">!<pos:position pos:line="142" pos:column="22"/></operator><name pos:line="142" pos:column="22">cmp<pos:position pos:line="142" pos:column="25"/></name></expr>)<pos:position pos:line="142" pos:column="26"/></condition><then pos:line="142" pos:column="26">
			<block type="pseudo"><return pos:line="143" pos:column="25">return <expr><name pos:line="143" pos:column="32">mi<pos:position pos:line="143" pos:column="34"/></name></expr>;<pos:position pos:line="143" pos:column="35"/></return></block></then></if>
		<if pos:line="144" pos:column="17">if <condition pos:line="144" pos:column="20">(<expr><name pos:line="144" pos:column="21">cmp<pos:position pos:line="144" pos:column="24"/></name> <operator pos:line="144" pos:column="25">&gt;<pos:position pos:line="144" pos:column="29"/></operator> <literal type="number" pos:line="144" pos:column="27">0<pos:position pos:line="144" pos:column="28"/></literal></expr>)<pos:position pos:line="144" pos:column="29"/></condition><then pos:line="144" pos:column="29"> <block pos:line="144" pos:column="30">{
			<expr_stmt><expr><name pos:line="145" pos:column="25">hi<pos:position pos:line="145" pos:column="27"/></name> <operator pos:line="145" pos:column="28">=<pos:position pos:line="145" pos:column="29"/></operator> <name pos:line="145" pos:column="30">mi<pos:position pos:line="145" pos:column="32"/></name></expr>;<pos:position pos:line="145" pos:column="33"/></expr_stmt>
			<expr_stmt><expr><name pos:line="146" pos:column="25">hi_key<pos:position pos:line="146" pos:column="31"/></name> <operator pos:line="146" pos:column="32">=<pos:position pos:line="146" pos:column="33"/></operator> <name pos:line="146" pos:column="34">mi_key<pos:position pos:line="146" pos:column="40"/></name></expr>;<pos:position pos:line="146" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="147" pos:column="18"/></block></then> <else pos:line="147" pos:column="19">else <block pos:line="147" pos:column="24">{
			<expr_stmt><expr><name pos:line="148" pos:column="25">lo<pos:position pos:line="148" pos:column="27"/></name> <operator pos:line="148" pos:column="28">=<pos:position pos:line="148" pos:column="29"/></operator> <name pos:line="148" pos:column="30">mi<pos:position pos:line="148" pos:column="32"/></name> <operator pos:line="148" pos:column="33">+<pos:position pos:line="148" pos:column="34"/></operator> <literal type="number" pos:line="148" pos:column="35">1<pos:position pos:line="148" pos:column="36"/></literal></expr>;<pos:position pos:line="148" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="149" pos:column="25">lo_key<pos:position pos:line="149" pos:column="31"/></name> <operator pos:line="149" pos:column="32">=<pos:position pos:line="149" pos:column="33"/></operator> <name pos:line="149" pos:column="34">mi_key<pos:position pos:line="149" pos:column="40"/></name> <operator pos:line="149" pos:column="41">+<pos:position pos:line="149" pos:column="42"/></operator> <name pos:line="149" pos:column="43">elem_size<pos:position pos:line="149" pos:column="52"/></name></expr>;<pos:position pos:line="149" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="150" pos:column="18"/></block></else></if>
	}<pos:position pos:line="151" pos:column="10"/></block> while <condition pos:line="151" pos:column="17">(<expr><name pos:line="151" pos:column="18">lo<pos:position pos:line="151" pos:column="20"/></name> <operator pos:line="151" pos:column="21">&lt;<pos:position pos:line="151" pos:column="25"/></operator> <name pos:line="151" pos:column="23">hi<pos:position pos:line="151" pos:column="25"/></name></expr>)<pos:position pos:line="151" pos:column="26"/></condition>;<pos:position pos:line="151" pos:column="27"/></do>
	<return pos:line="152" pos:column="9">return <expr><operator pos:line="152" pos:column="16">-<pos:position pos:line="152" pos:column="17"/></operator><name pos:line="152" pos:column="17">lo<pos:position pos:line="152" pos:column="19"/></name><operator pos:line="152" pos:column="19">-<pos:position pos:line="152" pos:column="20"/></operator><literal type="number" pos:line="152" pos:column="20">1<pos:position pos:line="152" pos:column="21"/></literal></expr>;<pos:position pos:line="152" pos:column="22"/></return>
}<pos:position pos:line="153" pos:column="2"/></block></function></unit>

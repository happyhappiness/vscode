<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3327_git-2.1.4.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">branch<pos:position pos:line="1" pos:column="14"/></name></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">branch_get<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">name<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">branch<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">ret<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">read_config<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">()<pos:position pos:line="5" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">name<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">||<pos:position pos:line="6" pos:column="21"/></operator> <operator pos:line="6" pos:column="22">!<pos:position pos:line="6" pos:column="23"/></operator><operator pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">name<pos:position pos:line="6" pos:column="28"/></name> <operator pos:line="6" pos:column="29">||<pos:position pos:line="6" pos:column="31"/></operator> <operator pos:line="6" pos:column="32">!<pos:position pos:line="6" pos:column="33"/></operator><call><name pos:line="6" pos:column="33">strcmp<pos:position pos:line="6" pos:column="39"/></name><argument_list pos:line="6" pos:column="39">(<argument><expr><name pos:line="6" pos:column="40">name<pos:position pos:line="6" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="46">"HEAD"<pos:position pos:line="6" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="54"/></condition><then pos:line="6" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">ret<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">current_branch<pos:position pos:line="7" pos:column="37"/></name></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt></block></then>
	<else pos:line="8" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">ret<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <call><name pos:line="9" pos:column="23">make_branch<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">name<pos:position pos:line="9" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="41">0<pos:position pos:line="9" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt></block></else></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">ret<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">&amp;&amp;<pos:position pos:line="10" pos:column="27"/></operator> <name><name pos:line="10" pos:column="20">ret<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">remote_name<pos:position pos:line="10" pos:column="36"/></name></name></expr>)<pos:position pos:line="10" pos:column="37"/></condition><then pos:line="10" pos:column="37"> <block pos:line="10" pos:column="38">{
		<expr_stmt><expr><name><name pos:line="11" pos:column="17">ret<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">remote<pos:position pos:line="11" pos:column="28"/></name></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <call><name pos:line="11" pos:column="31">remote_get<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name><name pos:line="11" pos:column="42">ret<pos:position pos:line="11" pos:column="45"/></name><operator pos:line="11" pos:column="45">-&gt;<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="47">remote_name<pos:position pos:line="11" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="60"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name><name pos:line="12" pos:column="21">ret<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">merge_nr<pos:position pos:line="12" pos:column="34"/></name></name></expr>)<pos:position pos:line="12" pos:column="35"/></condition><then pos:line="12" pos:column="35"> <block pos:line="12" pos:column="36">{
			<decl_stmt><decl><type><name pos:line="13" pos:column="25">int<pos:position pos:line="13" pos:column="28"/></name></type> <name pos:line="13" pos:column="29">i<pos:position pos:line="13" pos:column="30"/></name></decl>;<pos:position pos:line="13" pos:column="31"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="14" pos:column="25">ret<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">merge<pos:position pos:line="14" pos:column="35"/></name></name> <operator pos:line="14" pos:column="36">=<pos:position pos:line="14" pos:column="37"/></operator> <call><name pos:line="14" pos:column="38">xcalloc<pos:position pos:line="14" pos:column="45"/></name><argument_list pos:line="14" pos:column="45">(<argument><expr><name><name pos:line="14" pos:column="46">ret<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">-&gt;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="51">merge_nr<pos:position pos:line="14" pos:column="59"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="61">sizeof<argument_list pos:line="14" pos:column="67">(<argument><expr><operator pos:line="14" pos:column="68">*<pos:position pos:line="14" pos:column="69"/></operator><name><name pos:line="14" pos:column="69">ret<pos:position pos:line="14" pos:column="72"/></name><operator pos:line="14" pos:column="72">-&gt;<pos:position pos:line="14" pos:column="77"/></operator><name pos:line="14" pos:column="74">merge<pos:position pos:line="14" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="82"/></expr_stmt>
			<for pos:line="15" pos:column="25">for <control pos:line="15" pos:column="29">(<init><expr><name pos:line="15" pos:column="30">i<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <literal type="number" pos:line="15" pos:column="34">0<pos:position pos:line="15" pos:column="35"/></literal></expr>;<pos:position pos:line="15" pos:column="36"/></init> <condition><expr><name pos:line="15" pos:column="37">i<pos:position pos:line="15" pos:column="38"/></name> <operator pos:line="15" pos:column="39">&lt;<pos:position pos:line="15" pos:column="43"/></operator> <name><name pos:line="15" pos:column="41">ret<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">-&gt;<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="46">merge_nr<pos:position pos:line="15" pos:column="54"/></name></name></expr>;<pos:position pos:line="15" pos:column="55"/></condition> <incr><expr><name pos:line="15" pos:column="56">i<pos:position pos:line="15" pos:column="57"/></name><operator pos:line="15" pos:column="57">++<pos:position pos:line="15" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="60"/></control> <block pos:line="15" pos:column="61">{
				<expr_stmt><expr><name><name pos:line="16" pos:column="33">ret<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">merge<pos:position pos:line="16" pos:column="43"/></name><index pos:line="16" pos:column="43">[<expr><name pos:line="16" pos:column="44">i<pos:position pos:line="16" pos:column="45"/></name></expr>]<pos:position pos:line="16" pos:column="46"/></index></name> <operator pos:line="16" pos:column="47">=<pos:position pos:line="16" pos:column="48"/></operator> <call><name pos:line="16" pos:column="49">xcalloc<pos:position pos:line="16" pos:column="56"/></name><argument_list pos:line="16" pos:column="56">(<argument><expr><literal type="number" pos:line="16" pos:column="57">1<pos:position pos:line="16" pos:column="58"/></literal></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="60">sizeof<argument_list pos:line="16" pos:column="66">(<argument><expr><operator pos:line="16" pos:column="67">*<pos:position pos:line="16" pos:column="68"/></operator><operator pos:line="16" pos:column="68">*<pos:position pos:line="16" pos:column="69"/></operator><name><name pos:line="16" pos:column="69">ret<pos:position pos:line="16" pos:column="72"/></name><operator pos:line="16" pos:column="72">-&gt;<pos:position pos:line="16" pos:column="77"/></operator><name pos:line="16" pos:column="74">merge<pos:position pos:line="16" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="82"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="17" pos:column="33">ret<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">merge<pos:position pos:line="17" pos:column="43"/></name><index pos:line="17" pos:column="43">[<expr><name pos:line="17" pos:column="44">i<pos:position pos:line="17" pos:column="45"/></name></expr>]<pos:position pos:line="17" pos:column="46"/></index></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">src<pos:position pos:line="17" pos:column="51"/></name> <operator pos:line="17" pos:column="52">=<pos:position pos:line="17" pos:column="53"/></operator> <call><name pos:line="17" pos:column="54">xstrdup<pos:position pos:line="17" pos:column="61"/></name><argument_list pos:line="17" pos:column="61">(<argument><expr><name><name pos:line="17" pos:column="62">ret<pos:position pos:line="17" pos:column="65"/></name><operator pos:line="17" pos:column="65">-&gt;<pos:position pos:line="17" pos:column="70"/></operator><name pos:line="17" pos:column="67">merge_name<pos:position pos:line="17" pos:column="77"/></name><index pos:line="17" pos:column="77">[<expr><name pos:line="17" pos:column="78">i<pos:position pos:line="17" pos:column="79"/></name></expr>]<pos:position pos:line="17" pos:column="80"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="82"/></expr_stmt>
				<if pos:line="18" pos:column="33">if <condition pos:line="18" pos:column="36">(<expr><call><name pos:line="18" pos:column="37">remote_find_tracking<pos:position pos:line="18" pos:column="57"/></name><argument_list pos:line="18" pos:column="57">(<argument><expr><name><name pos:line="18" pos:column="58">ret<pos:position pos:line="18" pos:column="61"/></name><operator pos:line="18" pos:column="61">-&gt;<pos:position pos:line="18" pos:column="66"/></operator><name pos:line="18" pos:column="63">remote<pos:position pos:line="18" pos:column="69"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="71">ret<pos:position pos:line="18" pos:column="74"/></name><operator pos:line="18" pos:column="74">-&gt;<pos:position pos:line="18" pos:column="79"/></operator><name pos:line="18" pos:column="76">merge<pos:position pos:line="18" pos:column="81"/></name><index pos:line="18" pos:column="81">[<expr><name pos:line="18" pos:column="82">i<pos:position pos:line="18" pos:column="83"/></name></expr>]<pos:position pos:line="18" pos:column="84"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="85"/></argument_list></call>
				    <operator pos:line="19" pos:column="37">&amp;&amp;<pos:position pos:line="19" pos:column="47"/></operator> <operator pos:line="19" pos:column="40">!<pos:position pos:line="19" pos:column="41"/></operator><call><name pos:line="19" pos:column="41">strcmp<pos:position pos:line="19" pos:column="47"/></name><argument_list pos:line="19" pos:column="47">(<argument><expr><name><name pos:line="19" pos:column="48">ret<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">-&gt;<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="53">remote_name<pos:position pos:line="19" pos:column="64"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="66">"."<pos:position pos:line="19" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="71"/></condition><then pos:line="19" pos:column="71">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="41">ret<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">-&gt;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="46">merge<pos:position pos:line="20" pos:column="51"/></name><index pos:line="20" pos:column="51">[<expr><name pos:line="20" pos:column="52">i<pos:position pos:line="20" pos:column="53"/></name></expr>]<pos:position pos:line="20" pos:column="54"/></index></name><operator pos:line="20" pos:column="54">-&gt;<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="56">dst<pos:position pos:line="20" pos:column="59"/></name> <operator pos:line="20" pos:column="60">=<pos:position pos:line="20" pos:column="61"/></operator> <call><name pos:line="20" pos:column="62">xstrdup<pos:position pos:line="20" pos:column="69"/></name><argument_list pos:line="20" pos:column="69">(<argument><expr><name><name pos:line="20" pos:column="70">ret<pos:position pos:line="20" pos:column="73"/></name><operator pos:line="20" pos:column="73">-&gt;<pos:position pos:line="20" pos:column="78"/></operator><name pos:line="20" pos:column="75">merge_name<pos:position pos:line="20" pos:column="85"/></name><index pos:line="20" pos:column="85">[<expr><name pos:line="20" pos:column="86">i<pos:position pos:line="20" pos:column="87"/></name></expr>]<pos:position pos:line="20" pos:column="88"/></index></name></expr></argument>)<pos:position pos:line="20" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="90"/></expr_stmt></block></then></if>
			}<pos:position pos:line="21" pos:column="26"/></block></for>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>
	<return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">ret<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

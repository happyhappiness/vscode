<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4120_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_range_1<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(
	<parameter><decl><type><name><name pos:line="2" pos:column="9">struct<pos:position pos:line="2" pos:column="15"/></name> <name pos:line="2" pos:column="16">index_state<pos:position pos:line="2" pos:column="27"/></name></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">istate<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">k_start<pos:position pos:line="3" pos:column="20"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">k_end<pos:position pos:line="4" pos:column="18"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">dir_entry<pos:position pos:line="5" pos:column="25"/></name></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">parent<pos:position pos:line="5" pos:column="33"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">prefix<pos:position pos:line="6" pos:column="30"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">lazy_entry<pos:position pos:line="7" pos:column="26"/></name></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">lazy_entries<pos:position pos:line="7" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="41"/></parameter_list>
<block pos:line="8" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">input_prefix_len<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><name><name pos:line="9" pos:column="32">prefix<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">len<pos:position pos:line="9" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">k<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><name pos:line="10" pos:column="17">k_start<pos:position pos:line="10" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>

	<while pos:line="12" pos:column="9">while <condition pos:line="12" pos:column="15">(<expr><name pos:line="12" pos:column="16">k<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">&lt;<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="20">k_end<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition> <block pos:line="12" pos:column="27">{
		<decl_stmt><decl><type><name><name pos:line="13" pos:column="17">struct<pos:position pos:line="13" pos:column="23"/></name> <name pos:line="13" pos:column="24">cache_entry<pos:position pos:line="13" pos:column="35"/></name></name> <modifier pos:line="13" pos:column="36">*<pos:position pos:line="13" pos:column="37"/></modifier></type><name pos:line="13" pos:column="37">ce_k<pos:position pos:line="13" pos:column="41"/></name> <init pos:line="13" pos:column="42">= <expr><name><name pos:line="13" pos:column="44">istate<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">-&gt;<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="52">cache<pos:position pos:line="13" pos:column="57"/></name><index pos:line="13" pos:column="57">[<expr><name pos:line="13" pos:column="58">k<pos:position pos:line="13" pos:column="59"/></name></expr>]<pos:position pos:line="13" pos:column="60"/></index></name></expr></init></decl>;<pos:position pos:line="13" pos:column="61"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="14" pos:column="17">const<pos:position pos:line="14" pos:column="22"/></specifier> <name pos:line="14" pos:column="23">char<pos:position pos:line="14" pos:column="27"/></name> <modifier pos:line="14" pos:column="28">*<pos:position pos:line="14" pos:column="29"/></modifier></type><name pos:line="14" pos:column="29">name<pos:position pos:line="14" pos:column="33"/></name></decl>, <modifier pos:line="14" pos:column="35">*<pos:position pos:line="14" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="14" pos:column="36">slash<pos:position pos:line="14" pos:column="41"/></name></decl>;<pos:position pos:line="14" pos:column="42"/></decl_stmt>

		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">prefix<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">len<pos:position pos:line="16" pos:column="32"/></name></name> <operator pos:line="16" pos:column="33">&amp;&amp;<pos:position pos:line="16" pos:column="43"/></operator> <call><name pos:line="16" pos:column="36">strncmp<pos:position pos:line="16" pos:column="43"/></name><argument_list pos:line="16" pos:column="43">(<argument><expr><name><name pos:line="16" pos:column="44">ce_k<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">-&gt;<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="50">name<pos:position pos:line="16" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="56">prefix<pos:position pos:line="16" pos:column="62"/></name><operator pos:line="16" pos:column="62">-&gt;<pos:position pos:line="16" pos:column="67"/></operator><name pos:line="16" pos:column="64">buf<pos:position pos:line="16" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="69">prefix<pos:position pos:line="16" pos:column="75"/></name><operator pos:line="16" pos:column="75">-&gt;<pos:position pos:line="16" pos:column="80"/></operator><name pos:line="16" pos:column="77">len<pos:position pos:line="16" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="82"/></condition><then pos:line="16" pos:column="82">
			<block type="pseudo"><break pos:line="17" pos:column="25">break;<pos:position pos:line="17" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><name pos:line="19" pos:column="17">name<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <name><name pos:line="19" pos:column="24">ce_k<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">name<pos:position pos:line="19" pos:column="34"/></name></name> <operator pos:line="19" pos:column="35">+<pos:position pos:line="19" pos:column="36"/></operator> <name><name pos:line="19" pos:column="37">prefix<pos:position pos:line="19" pos:column="43"/></name><operator pos:line="19" pos:column="43">-&gt;<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="45">len<pos:position pos:line="19" pos:column="48"/></name></name></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">slash<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <call><name pos:line="20" pos:column="25">strchr<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">name<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="38">'/'<pos:position pos:line="20" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>

		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">slash<pos:position pos:line="22" pos:column="26"/></name></expr>)<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27"> <block pos:line="22" pos:column="28">{
			<decl_stmt><decl><type><name pos:line="23" pos:column="25">int<pos:position pos:line="23" pos:column="28"/></name></type> <name pos:line="23" pos:column="29">len<pos:position pos:line="23" pos:column="32"/></name> <init pos:line="23" pos:column="33">= <expr><name pos:line="23" pos:column="35">slash<pos:position pos:line="23" pos:column="40"/></name> <operator pos:line="23" pos:column="41">-<pos:position pos:line="23" pos:column="42"/></operator> <name pos:line="23" pos:column="43">name<pos:position pos:line="23" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="48"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="24" pos:column="25">int<pos:position pos:line="24" pos:column="28"/></name></type> <name pos:line="24" pos:column="29">processed<pos:position pos:line="24" pos:column="38"/></name></decl>;<pos:position pos:line="24" pos:column="39"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="25" pos:column="25">struct<pos:position pos:line="25" pos:column="31"/></name> <name pos:line="25" pos:column="32">dir_entry<pos:position pos:line="25" pos:column="41"/></name></name> <modifier pos:line="25" pos:column="42">*<pos:position pos:line="25" pos:column="43"/></modifier></type><name pos:line="25" pos:column="43">dir_new<pos:position pos:line="25" pos:column="50"/></name></decl>;<pos:position pos:line="25" pos:column="51"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="27" pos:column="25">strbuf_add<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><name pos:line="27" pos:column="36">prefix<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="44">name<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="50">len<pos:position pos:line="27" pos:column="53"/></name></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name pos:line="28" pos:column="25">processed<pos:position pos:line="28" pos:column="34"/></name> <operator pos:line="28" pos:column="35">=<pos:position pos:line="28" pos:column="36"/></operator> <call><name pos:line="28" pos:column="37">handle_range_dir<pos:position pos:line="28" pos:column="53"/></name><argument_list pos:line="28" pos:column="53">(<argument><expr><name pos:line="28" pos:column="54">istate<pos:position pos:line="28" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="62">k<pos:position pos:line="28" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="65">k_end<pos:position pos:line="28" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="72">parent<pos:position pos:line="28" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="80">prefix<pos:position pos:line="28" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="88">lazy_entries<pos:position pos:line="28" pos:column="100"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="102">&amp;<pos:position pos:line="28" pos:column="107"/></operator><name pos:line="28" pos:column="103">dir_new<pos:position pos:line="28" pos:column="110"/></name></expr></argument>)<pos:position pos:line="28" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="112"/></expr_stmt>
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><name pos:line="29" pos:column="29">processed<pos:position pos:line="29" pos:column="38"/></name></expr>)<pos:position pos:line="29" pos:column="39"/></condition><then pos:line="29" pos:column="39"> <block pos:line="29" pos:column="40">{
				<expr_stmt><expr><name pos:line="30" pos:column="33">k<pos:position pos:line="30" pos:column="34"/></name> <operator pos:line="30" pos:column="35">+=<pos:position pos:line="30" pos:column="37"/></operator> <name pos:line="30" pos:column="38">processed<pos:position pos:line="30" pos:column="47"/></name></expr>;<pos:position pos:line="30" pos:column="48"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="31" pos:column="33">strbuf_setlen<pos:position pos:line="31" pos:column="46"/></name><argument_list pos:line="31" pos:column="46">(<argument><expr><name pos:line="31" pos:column="47">prefix<pos:position pos:line="31" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="55">input_prefix_len<pos:position pos:line="31" pos:column="71"/></name></expr></argument>)<pos:position pos:line="31" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="73"/></expr_stmt>
				<continue pos:line="32" pos:column="33">continue;<pos:position pos:line="32" pos:column="42"/></continue>
			}<pos:position pos:line="33" pos:column="26"/></block></then></if>

			<expr_stmt><expr><call><name pos:line="35" pos:column="25">strbuf_addch<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">prefix<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="35" pos:column="46">'/'<pos:position pos:line="35" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name pos:line="36" pos:column="25">processed<pos:position pos:line="36" pos:column="34"/></name> <operator pos:line="36" pos:column="35">=<pos:position pos:line="36" pos:column="36"/></operator> <call><name pos:line="36" pos:column="37">handle_range_1<pos:position pos:line="36" pos:column="51"/></name><argument_list pos:line="36" pos:column="51">(<argument><expr><name pos:line="36" pos:column="52">istate<pos:position pos:line="36" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="60">k<pos:position pos:line="36" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="63">k_end<pos:position pos:line="36" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="70">dir_new<pos:position pos:line="36" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="79">prefix<pos:position pos:line="36" pos:column="85"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="87">lazy_entries<pos:position pos:line="36" pos:column="99"/></name></expr></argument>)<pos:position pos:line="36" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="101"/></expr_stmt>
			<expr_stmt><expr><name pos:line="37" pos:column="25">k<pos:position pos:line="37" pos:column="26"/></name> <operator pos:line="37" pos:column="27">+=<pos:position pos:line="37" pos:column="29"/></operator> <name pos:line="37" pos:column="30">processed<pos:position pos:line="37" pos:column="39"/></name></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">strbuf_setlen<pos:position pos:line="38" pos:column="38"/></name><argument_list pos:line="38" pos:column="38">(<argument><expr><name pos:line="38" pos:column="39">prefix<pos:position pos:line="38" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="47">input_prefix_len<pos:position pos:line="38" pos:column="63"/></name></expr></argument>)<pos:position pos:line="38" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="65"/></expr_stmt>
			<continue pos:line="39" pos:column="25">continue;<pos:position pos:line="39" pos:column="34"/></continue>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="42" pos:column="17">/*
		 * It is too expensive to take a lock to insert "ce_k"
		 * into "istate-&gt;name_hash" and increment the ref-count
		 * on the "parent" dir.  So we defer actually updating
		 * permanent data structures until phase 2 (where we
		 * can change the locking requirements) and simply
		 * accumulate our current results into the lazy_entries
		 * data array).
		 *
		 * We do not need to lock the lazy_entries array because
		 * we have exclusive access to the cells in the range
		 * [k_start,k_end) that this thread was given.
		 */</comment>
		<expr_stmt><expr><name><name pos:line="55" pos:column="17">lazy_entries<pos:position pos:line="55" pos:column="29"/></name><index pos:line="55" pos:column="29">[<expr><name pos:line="55" pos:column="30">k<pos:position pos:line="55" pos:column="31"/></name></expr>]<pos:position pos:line="55" pos:column="32"/></index></name><operator pos:line="55" pos:column="32">.<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="33">dir<pos:position pos:line="55" pos:column="36"/></name> <operator pos:line="55" pos:column="37">=<pos:position pos:line="55" pos:column="38"/></operator> <name pos:line="55" pos:column="39">parent<pos:position pos:line="55" pos:column="45"/></name></expr>;<pos:position pos:line="55" pos:column="46"/></expr_stmt>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name pos:line="56" pos:column="21">parent<pos:position pos:line="56" pos:column="27"/></name></expr>)<pos:position pos:line="56" pos:column="28"/></condition><then pos:line="56" pos:column="28"> <block pos:line="56" pos:column="29">{
			<expr_stmt><expr><name><name pos:line="57" pos:column="25">lazy_entries<pos:position pos:line="57" pos:column="37"/></name><index pos:line="57" pos:column="37">[<expr><name pos:line="57" pos:column="38">k<pos:position pos:line="57" pos:column="39"/></name></expr>]<pos:position pos:line="57" pos:column="40"/></index></name><operator pos:line="57" pos:column="40">.<pos:position pos:line="57" pos:column="41"/></operator><name pos:line="57" pos:column="41">hash_name<pos:position pos:line="57" pos:column="50"/></name> <operator pos:line="57" pos:column="51">=<pos:position pos:line="57" pos:column="52"/></operator> <call><name pos:line="57" pos:column="53">memihash_cont<pos:position pos:line="57" pos:column="66"/></name><argument_list pos:line="57" pos:column="66">(
				<argument><expr><name><name pos:line="58" pos:column="33">parent<pos:position pos:line="58" pos:column="39"/></name><operator pos:line="58" pos:column="39">-&gt;<pos:position pos:line="58" pos:column="44"/></operator><name pos:line="58" pos:column="41">ent<pos:position pos:line="58" pos:column="44"/></name><operator pos:line="58" pos:column="44">.<pos:position pos:line="58" pos:column="45"/></operator><name pos:line="58" pos:column="45">hash<pos:position pos:line="58" pos:column="49"/></name></name></expr></argument>,
				<argument><expr><name><name pos:line="59" pos:column="33">ce_k<pos:position pos:line="59" pos:column="37"/></name><operator pos:line="59" pos:column="37">-&gt;<pos:position pos:line="59" pos:column="42"/></operator><name pos:line="59" pos:column="39">name<pos:position pos:line="59" pos:column="43"/></name></name> <operator pos:line="59" pos:column="44">+<pos:position pos:line="59" pos:column="45"/></operator> <name><name pos:line="59" pos:column="46">parent<pos:position pos:line="59" pos:column="52"/></name><operator pos:line="59" pos:column="52">-&gt;<pos:position pos:line="59" pos:column="57"/></operator><name pos:line="59" pos:column="54">namelen<pos:position pos:line="59" pos:column="61"/></name></name></expr></argument>,
				<argument><expr><call><name pos:line="60" pos:column="33">ce_namelen<pos:position pos:line="60" pos:column="43"/></name><argument_list pos:line="60" pos:column="43">(<argument><expr><name pos:line="60" pos:column="44">ce_k<pos:position pos:line="60" pos:column="48"/></name></expr></argument>)<pos:position pos:line="60" pos:column="49"/></argument_list></call> <operator pos:line="60" pos:column="50">-<pos:position pos:line="60" pos:column="51"/></operator> <name><name pos:line="60" pos:column="52">parent<pos:position pos:line="60" pos:column="58"/></name><operator pos:line="60" pos:column="58">-&gt;<pos:position pos:line="60" pos:column="63"/></operator><name pos:line="60" pos:column="60">namelen<pos:position pos:line="60" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="61" pos:column="25">lazy_entries<pos:position pos:line="61" pos:column="37"/></name><index pos:line="61" pos:column="37">[<expr><name pos:line="61" pos:column="38">k<pos:position pos:line="61" pos:column="39"/></name></expr>]<pos:position pos:line="61" pos:column="40"/></index></name><operator pos:line="61" pos:column="40">.<pos:position pos:line="61" pos:column="41"/></operator><name pos:line="61" pos:column="41">hash_dir<pos:position pos:line="61" pos:column="49"/></name> <operator pos:line="61" pos:column="50">=<pos:position pos:line="61" pos:column="51"/></operator> <name><name pos:line="61" pos:column="52">parent<pos:position pos:line="61" pos:column="58"/></name><operator pos:line="61" pos:column="58">-&gt;<pos:position pos:line="61" pos:column="63"/></operator><name pos:line="61" pos:column="60">ent<pos:position pos:line="61" pos:column="63"/></name><operator pos:line="61" pos:column="63">.<pos:position pos:line="61" pos:column="64"/></operator><name pos:line="61" pos:column="64">hash<pos:position pos:line="61" pos:column="68"/></name></name></expr>;<pos:position pos:line="61" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="62" pos:column="18"/></block></then> <else pos:line="62" pos:column="19">else <block pos:line="62" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="63" pos:column="25">lazy_entries<pos:position pos:line="63" pos:column="37"/></name><index pos:line="63" pos:column="37">[<expr><name pos:line="63" pos:column="38">k<pos:position pos:line="63" pos:column="39"/></name></expr>]<pos:position pos:line="63" pos:column="40"/></index></name><operator pos:line="63" pos:column="40">.<pos:position pos:line="63" pos:column="41"/></operator><name pos:line="63" pos:column="41">hash_name<pos:position pos:line="63" pos:column="50"/></name> <operator pos:line="63" pos:column="51">=<pos:position pos:line="63" pos:column="52"/></operator> <call><name pos:line="63" pos:column="53">memihash<pos:position pos:line="63" pos:column="61"/></name><argument_list pos:line="63" pos:column="61">(<argument><expr><name><name pos:line="63" pos:column="62">ce_k<pos:position pos:line="63" pos:column="66"/></name><operator pos:line="63" pos:column="66">-&gt;<pos:position pos:line="63" pos:column="71"/></operator><name pos:line="63" pos:column="68">name<pos:position pos:line="63" pos:column="72"/></name></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="74">ce_namelen<pos:position pos:line="63" pos:column="84"/></name><argument_list pos:line="63" pos:column="84">(<argument><expr><name pos:line="63" pos:column="85">ce_k<pos:position pos:line="63" pos:column="89"/></name></expr></argument>)<pos:position pos:line="63" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="92"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name pos:line="66" pos:column="17">k<pos:position pos:line="66" pos:column="18"/></name><operator pos:line="66" pos:column="18">++<pos:position pos:line="66" pos:column="20"/></operator></expr>;<pos:position pos:line="66" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="67" pos:column="10"/></block></while>

	<return pos:line="69" pos:column="9">return <expr><name pos:line="69" pos:column="16">k<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">-<pos:position pos:line="69" pos:column="19"/></operator> <name pos:line="69" pos:column="20">k_start<pos:position pos:line="69" pos:column="27"/></name></expr>;<pos:position pos:line="69" pos:column="28"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3239_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">match_name_with_pattern<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">key<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">name<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
				   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">value<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier><modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">result<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">kstar<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><call><name pos:line="4" pos:column="29">strchr<pos:position pos:line="4" pos:column="35"/></name><argument_list pos:line="4" pos:column="35">(<argument><expr><name pos:line="4" pos:column="36">key<pos:position pos:line="4" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="4" pos:column="41">'*'<pos:position pos:line="4" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">klen<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">ksuffixlen<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">namelen<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">ret<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">kstar<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">die<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><literal type="string" pos:line="10" pos:column="21">"Key '%s' of pattern had no '*'"<pos:position pos:line="10" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="55">key<pos:position pos:line="10" pos:column="58"/></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="11" pos:column="9">klen<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">kstar<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">-<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="24">key<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">ksuffixlen<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <call><name pos:line="12" pos:column="22">strlen<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">kstar<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">+<pos:position pos:line="12" pos:column="36"/></operator> <literal type="number" pos:line="12" pos:column="37">1<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">namelen<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <call><name pos:line="13" pos:column="19">strlen<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">name<pos:position pos:line="13" pos:column="30"/></name></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">ret<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <operator pos:line="14" pos:column="15">!<pos:position pos:line="14" pos:column="16"/></operator><call><name pos:line="14" pos:column="16">strncmp<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">name<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="30">key<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">klen<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call> <operator pos:line="14" pos:column="41">&amp;&amp;<pos:position pos:line="14" pos:column="51"/></operator> <name pos:line="14" pos:column="44">namelen<pos:position pos:line="14" pos:column="51"/></name> <operator pos:line="14" pos:column="52">&gt;=<pos:position pos:line="14" pos:column="57"/></operator> <name pos:line="14" pos:column="55">klen<pos:position pos:line="14" pos:column="59"/></name> <operator pos:line="14" pos:column="60">+<pos:position pos:line="14" pos:column="61"/></operator> <name pos:line="14" pos:column="62">ksuffixlen<pos:position pos:line="14" pos:column="72"/></name> <operator pos:line="14" pos:column="73">&amp;&amp;<pos:position pos:line="14" pos:column="83"/></operator>
		<operator pos:line="15" pos:column="17">!<pos:position pos:line="15" pos:column="18"/></operator><call><name pos:line="15" pos:column="18">memcmp<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">name<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">+<pos:position pos:line="15" pos:column="31"/></operator> <name pos:line="15" pos:column="32">namelen<pos:position pos:line="15" pos:column="39"/></name> <operator pos:line="15" pos:column="40">-<pos:position pos:line="15" pos:column="41"/></operator> <name pos:line="15" pos:column="42">ksuffixlen<pos:position pos:line="15" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="54">kstar<pos:position pos:line="15" pos:column="59"/></name> <operator pos:line="15" pos:column="60">+<pos:position pos:line="15" pos:column="61"/></operator> <literal type="number" pos:line="15" pos:column="62">1<pos:position pos:line="15" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="65">ksuffixlen<pos:position pos:line="15" pos:column="75"/></name></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="77"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">ret<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">&amp;&amp;<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="20">value<pos:position pos:line="16" pos:column="25"/></name></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26"> <block pos:line="16" pos:column="27">{
		<decl_stmt><decl><type><specifier pos:line="17" pos:column="17">const<pos:position pos:line="17" pos:column="22"/></specifier> <name pos:line="17" pos:column="23">char<pos:position pos:line="17" pos:column="27"/></name> <modifier pos:line="17" pos:column="28">*<pos:position pos:line="17" pos:column="29"/></modifier></type><name pos:line="17" pos:column="29">vstar<pos:position pos:line="17" pos:column="34"/></name> <init pos:line="17" pos:column="35">= <expr><call><name pos:line="17" pos:column="37">strchr<pos:position pos:line="17" pos:column="43"/></name><argument_list pos:line="17" pos:column="43">(<argument><expr><name pos:line="17" pos:column="44">value<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="51">'*'<pos:position pos:line="17" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="56"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">size_t<pos:position pos:line="18" pos:column="23"/></name></type> <name pos:line="18" pos:column="24">vlen<pos:position pos:line="18" pos:column="28"/></name></decl>;<pos:position pos:line="18" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">size_t<pos:position pos:line="19" pos:column="23"/></name></type> <name pos:line="19" pos:column="24">vsuffixlen<pos:position pos:line="19" pos:column="34"/></name></decl>;<pos:position pos:line="19" pos:column="35"/></decl_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">vstar<pos:position pos:line="20" pos:column="27"/></name></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">die<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><literal type="string" pos:line="21" pos:column="29">"Value '%s' of pattern has no '*'"<pos:position pos:line="21" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="65">value<pos:position pos:line="21" pos:column="70"/></name></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="72"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="22" pos:column="17">vlen<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">vstar<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">-<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="32">value<pos:position pos:line="22" pos:column="37"/></name></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">vsuffixlen<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">=<pos:position pos:line="23" pos:column="29"/></operator> <call><name pos:line="23" pos:column="30">strlen<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name pos:line="23" pos:column="37">vstar<pos:position pos:line="23" pos:column="42"/></name> <operator pos:line="23" pos:column="43">+<pos:position pos:line="23" pos:column="44"/></operator> <literal type="number" pos:line="23" pos:column="45">1<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="24" pos:column="17">*<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">result<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <call><name pos:line="24" pos:column="27">xmalloc<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">vlen<pos:position pos:line="24" pos:column="39"/></name> <operator pos:line="24" pos:column="40">+<pos:position pos:line="24" pos:column="41"/></operator> <name pos:line="24" pos:column="42">vsuffixlen<pos:position pos:line="24" pos:column="52"/></name> <operator pos:line="24" pos:column="53">+<pos:position pos:line="24" pos:column="54"/></operator>
				  <call><name pos:line="25" pos:column="35">strlen<pos:position pos:line="25" pos:column="41"/></name><argument_list pos:line="25" pos:column="41">(<argument><expr><name pos:line="25" pos:column="42">name<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call> <operator pos:line="25" pos:column="48">-<pos:position pos:line="25" pos:column="49"/></operator>
				  <name pos:line="26" pos:column="35">klen<pos:position pos:line="26" pos:column="39"/></name> <operator pos:line="26" pos:column="40">-<pos:position pos:line="26" pos:column="41"/></operator> <name pos:line="26" pos:column="42">ksuffixlen<pos:position pos:line="26" pos:column="52"/></name> <operator pos:line="26" pos:column="53">+<pos:position pos:line="26" pos:column="54"/></operator> <literal type="number" pos:line="26" pos:column="55">1<pos:position pos:line="26" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">strncpy<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><operator pos:line="27" pos:column="25">*<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">result<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="34">value<pos:position pos:line="27" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="41">vlen<pos:position pos:line="27" pos:column="45"/></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">strncpy<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><operator pos:line="28" pos:column="25">*<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="26">result<pos:position pos:line="28" pos:column="32"/></name> <operator pos:line="28" pos:column="33">+<pos:position pos:line="28" pos:column="34"/></operator> <name pos:line="28" pos:column="35">vlen<pos:position pos:line="28" pos:column="39"/></name></expr></argument>,
			<argument><expr><name pos:line="29" pos:column="25">name<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">+<pos:position pos:line="29" pos:column="31"/></operator> <name pos:line="29" pos:column="32">klen<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">namelen<pos:position pos:line="29" pos:column="45"/></name> <operator pos:line="29" pos:column="46">-<pos:position pos:line="29" pos:column="47"/></operator> <name pos:line="29" pos:column="48">klen<pos:position pos:line="29" pos:column="52"/></name> <operator pos:line="29" pos:column="53">-<pos:position pos:line="29" pos:column="54"/></operator> <name pos:line="29" pos:column="55">ksuffixlen<pos:position pos:line="29" pos:column="65"/></name></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">strcpy<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><operator pos:line="30" pos:column="24">*<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">result<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">+<pos:position pos:line="30" pos:column="33"/></operator> <name pos:line="30" pos:column="34">vlen<pos:position pos:line="30" pos:column="38"/></name> <operator pos:line="30" pos:column="39">+<pos:position pos:line="30" pos:column="40"/></operator> <name pos:line="30" pos:column="41">namelen<pos:position pos:line="30" pos:column="48"/></name> <operator pos:line="30" pos:column="49">-<pos:position pos:line="30" pos:column="50"/></operator> <name pos:line="30" pos:column="51">klen<pos:position pos:line="30" pos:column="55"/></name> <operator pos:line="30" pos:column="56">-<pos:position pos:line="30" pos:column="57"/></operator> <name pos:line="30" pos:column="58">ksuffixlen<pos:position pos:line="30" pos:column="68"/></name></expr></argument>,
		       <argument><expr><name pos:line="31" pos:column="24">vstar<pos:position pos:line="31" pos:column="29"/></name> <operator pos:line="31" pos:column="30">+<pos:position pos:line="31" pos:column="31"/></operator> <literal type="number" pos:line="31" pos:column="32">1<pos:position pos:line="31" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>
	<return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">ret<pos:position pos:line="33" pos:column="19"/></name></expr>;<pos:position pos:line="33" pos:column="20"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

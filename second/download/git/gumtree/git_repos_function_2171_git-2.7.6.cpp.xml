<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2171_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">is_file<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">url<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">stat<pos:position pos:line="3" pos:column="20"/></name></name></type> <name pos:line="3" pos:column="21">buf<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><call><name pos:line="4" pos:column="13">stat<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><name pos:line="4" pos:column="18">url<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="23">&amp;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="24">buf<pos:position pos:line="4" pos:column="27"/></name></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="29"/></condition><then pos:line="4" pos:column="29">
		<block type="pseudo"><return pos:line="5" pos:column="17">return <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr>;<pos:position pos:line="5" pos:column="26"/></return></block></then></if>
	<return pos:line="6" pos:column="9">return <expr><call><name pos:line="6" pos:column="16">S_ISREG<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><name><name pos:line="6" pos:column="24">buf<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">.<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">st_mode<pos:position pos:line="6" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

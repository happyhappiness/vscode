<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3187_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">stream_filter<pos:position pos:line="1" pos:column="21"/></name></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">get_stream_filter<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">path<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">unsigned<pos:position pos:line="1" pos:column="73"/></name> <name pos:line="1" pos:column="74">char<pos:position pos:line="1" pos:column="78"/></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="80">sha1<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">conv_attrs<pos:position pos:line="3" pos:column="26"/></name></name></type> <name pos:line="3" pos:column="27">ca<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">stream_filter<pos:position pos:line="4" pos:column="29"/></name></name> <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="31">filter<pos:position pos:line="4" pos:column="37"/></name> <init pos:line="4" pos:column="38">= <expr><name pos:line="4" pos:column="40">NULL<pos:position pos:line="4" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">convert_attrs<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><operator pos:line="6" pos:column="23">&amp;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="24">ca<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="28">path<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">ca<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">.<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">drv<pos:position pos:line="7" pos:column="19"/></name></name> <operator pos:line="7" pos:column="20">&amp;&amp;<pos:position pos:line="7" pos:column="30"/></operator> <operator pos:line="7" pos:column="23">(<pos:position pos:line="7" pos:column="24"/></operator><name><name pos:line="7" pos:column="24">ca<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">.<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">drv<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">process<pos:position pos:line="7" pos:column="39"/></name></name> <operator pos:line="7" pos:column="40">||<pos:position pos:line="7" pos:column="42"/></operator> <name><name pos:line="7" pos:column="43">ca<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">.<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="46">drv<pos:position pos:line="7" pos:column="49"/></name><operator pos:line="7" pos:column="49">-&gt;<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="51">smudge<pos:position pos:line="7" pos:column="57"/></name></name> <operator pos:line="7" pos:column="58">||<pos:position pos:line="7" pos:column="60"/></operator> <name><name pos:line="7" pos:column="61">ca<pos:position pos:line="7" pos:column="63"/></name><operator pos:line="7" pos:column="63">.<pos:position pos:line="7" pos:column="64"/></operator><name pos:line="7" pos:column="64">drv<pos:position pos:line="7" pos:column="67"/></name><operator pos:line="7" pos:column="67">-&gt;<pos:position pos:line="7" pos:column="72"/></operator><name pos:line="7" pos:column="69">clean<pos:position pos:line="7" pos:column="74"/></name></name><operator pos:line="7" pos:column="74">)<pos:position pos:line="7" pos:column="75"/></operator></expr>)<pos:position pos:line="7" pos:column="76"/></condition><then pos:line="7" pos:column="76">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><name pos:line="8" pos:column="24">NULL<pos:position pos:line="8" pos:column="28"/></name></expr>;<pos:position pos:line="8" pos:column="29"/></return></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">ca<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">.<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">crlf_action<pos:position pos:line="10" pos:column="27"/></name></name> <operator pos:line="10" pos:column="28">==<pos:position pos:line="10" pos:column="30"/></operator> <name pos:line="10" pos:column="31">CRLF_AUTO<pos:position pos:line="10" pos:column="40"/></name> <operator pos:line="10" pos:column="41">||<pos:position pos:line="10" pos:column="43"/></operator> <name><name pos:line="10" pos:column="44">ca<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">.<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="47">crlf_action<pos:position pos:line="10" pos:column="58"/></name></name> <operator pos:line="10" pos:column="59">==<pos:position pos:line="10" pos:column="61"/></operator> <name pos:line="10" pos:column="62">CRLF_AUTO_CRLF<pos:position pos:line="10" pos:column="76"/></name></expr>)<pos:position pos:line="10" pos:column="77"/></condition><then pos:line="10" pos:column="77">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><name pos:line="11" pos:column="24">NULL<pos:position pos:line="11" pos:column="28"/></name></expr>;<pos:position pos:line="11" pos:column="29"/></return></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">ca<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">.<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">ident<pos:position pos:line="13" pos:column="21"/></name></name></expr>)<pos:position pos:line="13" pos:column="22"/></condition><then pos:line="13" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">filter<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <call><name pos:line="14" pos:column="26">ident_filter<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><name pos:line="14" pos:column="39">sha1<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">output_eol<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name><name pos:line="16" pos:column="24">ca<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">.<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">crlf_action<pos:position pos:line="16" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call> <operator pos:line="16" pos:column="40">==<pos:position pos:line="16" pos:column="42"/></operator> <name pos:line="16" pos:column="43">EOL_CRLF<pos:position pos:line="16" pos:column="51"/></name></expr>)<pos:position pos:line="16" pos:column="52"/></condition><then pos:line="16" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">filter<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <call><name pos:line="17" pos:column="26">cascade_filter<pos:position pos:line="17" pos:column="40"/></name><argument_list pos:line="17" pos:column="40">(<argument><expr><name pos:line="17" pos:column="41">filter<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="49">lf_to_crlf_filter<pos:position pos:line="17" pos:column="66"/></name><argument_list pos:line="17" pos:column="66">()<pos:position pos:line="17" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="70"/></expr_stmt></block></then>
	<else pos:line="18" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">filter<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <call><name pos:line="19" pos:column="26">cascade_filter<pos:position pos:line="19" pos:column="40"/></name><argument_list pos:line="19" pos:column="40">(<argument><expr><name pos:line="19" pos:column="41">filter<pos:position pos:line="19" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="49">&amp;<pos:position pos:line="19" pos:column="54"/></operator><name pos:line="19" pos:column="50">null_filter_singleton<pos:position pos:line="19" pos:column="71"/></name></expr></argument>)<pos:position pos:line="19" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="73"/></expr_stmt></block></else></if>

	<return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">filter<pos:position pos:line="21" pos:column="22"/></name></expr>;<pos:position pos:line="21" pos:column="23"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3024_git-2.13.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">will_convert_lf_to_crlf<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">size_t<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">len<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="48">struct<pos:position pos:line="1" pos:column="54"/></name> <name pos:line="1" pos:column="55">text_stat<pos:position pos:line="1" pos:column="64"/></name></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">stats<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
				   <parameter><decl><type><name><name pos:line="2" pos:column="36">enum<pos:position pos:line="2" pos:column="40"/></name> <name pos:line="2" pos:column="41">crlf_action<pos:position pos:line="2" pos:column="52"/></name></name></type> <name pos:line="2" pos:column="53">crlf_action<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><call><name pos:line="4" pos:column="13">output_eol<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">(<argument><expr><name pos:line="4" pos:column="24">crlf_action<pos:position pos:line="4" pos:column="35"/></name></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call> <operator pos:line="4" pos:column="37">!=<pos:position pos:line="4" pos:column="39"/></operator> <name pos:line="4" pos:column="40">EOL_CRLF<pos:position pos:line="4" pos:column="48"/></name></expr>)<pos:position pos:line="4" pos:column="49"/></condition><then pos:line="4" pos:column="49">
		<block type="pseudo"><return pos:line="5" pos:column="17">return <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr>;<pos:position pos:line="5" pos:column="26"/></return></block></then></if>
	<comment type="block" pos:line="6" pos:column="9">/* No "naked" LF? Nothing to convert, regardless. */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name><name pos:line="7" pos:column="14">stats<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">lonelf<pos:position pos:line="7" pos:column="27"/></name></name></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">crlf_action<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">==<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="28">CRLF_AUTO<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">||<pos:position pos:line="10" pos:column="40"/></operator> <name pos:line="10" pos:column="41">crlf_action<pos:position pos:line="10" pos:column="52"/></name> <operator pos:line="10" pos:column="53">==<pos:position pos:line="10" pos:column="55"/></operator> <name pos:line="10" pos:column="56">CRLF_AUTO_INPUT<pos:position pos:line="10" pos:column="71"/></name> <operator pos:line="10" pos:column="72">||<pos:position pos:line="10" pos:column="74"/></operator> <name pos:line="10" pos:column="75">crlf_action<pos:position pos:line="10" pos:column="86"/></name> <operator pos:line="10" pos:column="87">==<pos:position pos:line="10" pos:column="89"/></operator> <name pos:line="10" pos:column="90">CRLF_AUTO_CRLF<pos:position pos:line="10" pos:column="104"/></name></expr>)<pos:position pos:line="10" pos:column="105"/></condition><then pos:line="10" pos:column="105"> <block pos:line="10" pos:column="106">{
		<comment type="block" pos:line="11" pos:column="17">/* If we have any CR or CRLF line endings, we do not touch it */</comment>
		<comment type="block" pos:line="12" pos:column="17">/* This is the new safer autocrlf-handling */</comment>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name><name pos:line="13" pos:column="21">stats<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">lonecr<pos:position pos:line="13" pos:column="34"/></name></name> <operator pos:line="13" pos:column="35">||<pos:position pos:line="13" pos:column="37"/></operator> <name><name pos:line="13" pos:column="38">stats<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">-&gt;<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="45">crlf<pos:position pos:line="13" pos:column="49"/></name></name></expr>)<pos:position pos:line="13" pos:column="50"/></condition><then pos:line="13" pos:column="50">
			<block type="pseudo"><return pos:line="14" pos:column="25">return <expr><literal type="number" pos:line="14" pos:column="32">0<pos:position pos:line="14" pos:column="33"/></literal></expr>;<pos:position pos:line="14" pos:column="34"/></return></block></then></if>

		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><call><name pos:line="16" pos:column="21">convert_is_binary<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">len<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">stats<pos:position pos:line="16" pos:column="49"/></name></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="51"/></condition><then pos:line="16" pos:column="51">
			<block type="pseudo"><return pos:line="17" pos:column="25">return <expr><literal type="number" pos:line="17" pos:column="32">0<pos:position pos:line="17" pos:column="33"/></literal></expr>;<pos:position pos:line="17" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<return pos:line="19" pos:column="9">return <expr><literal type="number" pos:line="19" pos:column="16">1<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></return>

}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

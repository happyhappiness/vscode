<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_891_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">find_commit_subject<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">commit_buffer<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier><modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">subject<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">eol<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">p<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">commit_buffer<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><operator pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">p<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&amp;&amp;<pos:position pos:line="6" pos:column="29"/></operator> <operator pos:line="6" pos:column="22">(<pos:position pos:line="6" pos:column="23"/></operator><operator pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">p<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">!=<pos:position pos:line="6" pos:column="28"/></operator> <literal type="char" pos:line="6" pos:column="29">'\n'<pos:position pos:line="6" pos:column="33"/></literal> <operator pos:line="6" pos:column="34">||<pos:position pos:line="6" pos:column="36"/></operator> <name><name pos:line="6" pos:column="37">p<pos:position pos:line="6" pos:column="38"/></name><index pos:line="6" pos:column="38">[<expr><literal type="number" pos:line="6" pos:column="39">1<pos:position pos:line="6" pos:column="40"/></literal></expr>]<pos:position pos:line="6" pos:column="41"/></index></name> <operator pos:line="6" pos:column="42">!=<pos:position pos:line="6" pos:column="44"/></operator> <literal type="char" pos:line="6" pos:column="45">'\n'<pos:position pos:line="6" pos:column="49"/></literal><operator pos:line="6" pos:column="49">)<pos:position pos:line="6" pos:column="50"/></operator></expr>)<pos:position pos:line="6" pos:column="51"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">p<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">++<pos:position pos:line="7" pos:column="20"/></operator></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt></block></while>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">p<pos:position pos:line="8" pos:column="15"/></name></expr>)<pos:position pos:line="8" pos:column="16"/></condition><then pos:line="8" pos:column="16"> <block pos:line="8" pos:column="17">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">p<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <call><name pos:line="9" pos:column="21">skip_blank_lines<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">(<argument><expr><name pos:line="9" pos:column="38">p<pos:position pos:line="9" pos:column="39"/></name> <operator pos:line="9" pos:column="40">+<pos:position pos:line="9" pos:column="41"/></operator> <literal type="number" pos:line="9" pos:column="42">2<pos:position pos:line="9" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">eol<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <call><name pos:line="10" pos:column="23">strchrnul<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">p<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="36">'\n'<pos:position pos:line="10" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then> <else pos:line="11" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">eol<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">p<pos:position pos:line="12" pos:column="24"/></name></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt></block></else></if>

	<expr_stmt><expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">subject<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">p<pos:position pos:line="14" pos:column="21"/></name></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>

	<return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">eol<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">-<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">p<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

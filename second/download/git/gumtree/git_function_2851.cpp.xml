<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2851.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">exec_man_cmd<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">cmd<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">page<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">shell_cmd<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name pos:line="3" pos:column="35">STRBUF_INIT<pos:position pos:line="3" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">strbuf_addf<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><operator pos:line="4" pos:column="21">&amp;<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="22">shell_cmd<pos:position pos:line="4" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="33">"%s %s"<pos:position pos:line="4" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="42">cmd<pos:position pos:line="4" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="47">page<pos:position pos:line="4" pos:column="51"/></name></expr></argument>)<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">execl<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><name pos:line="5" pos:column="15">SHELL_PATH<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="27">SHELL_PATH<pos:position pos:line="5" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="39">"-c"<pos:position pos:line="5" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="45">shell_cmd<pos:position pos:line="5" pos:column="54"/></name><operator pos:line="5" pos:column="54">.<pos:position pos:line="5" pos:column="55"/></operator><name pos:line="5" pos:column="55">buf<pos:position pos:line="5" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="60">(<pos:position pos:line="5" pos:column="61"/></operator><name pos:line="5" pos:column="61">char<pos:position pos:line="5" pos:column="65"/></name> <operator pos:line="5" pos:column="66">*<pos:position pos:line="5" pos:column="67"/></operator><operator pos:line="5" pos:column="67">)<pos:position pos:line="5" pos:column="68"/></operator><name pos:line="5" pos:column="68">NULL<pos:position pos:line="5" pos:column="72"/></name></expr></argument>)<pos:position pos:line="5" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">warning<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><call><name pos:line="6" pos:column="17">_<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><literal type="string" pos:line="6" pos:column="19">"failed to exec '%s': %s"<pos:position pos:line="6" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="6" pos:column="47">cmd<pos:position pos:line="6" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="52">strerror<pos:position pos:line="6" pos:column="60"/></name><argument_list pos:line="6" pos:column="60">(<argument><expr><name pos:line="6" pos:column="61">errno<pos:position pos:line="6" pos:column="66"/></name></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="69"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

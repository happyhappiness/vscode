<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2771_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">reject_invalid_nonce<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">nonce<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">len<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><literal type="number" pos:line="3" pos:column="17">0<pos:position pos:line="3" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">NONCE_LEN_LIMIT<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">&lt;=<pos:position pos:line="5" pos:column="34"/></operator> <name pos:line="5" pos:column="32">len<pos:position pos:line="5" pos:column="35"/></name></expr>)<pos:position pos:line="5" pos:column="36"/></condition><then pos:line="5" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">die<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="string" pos:line="6" pos:column="21">"the receiving end asked to sign an invalid nonce &lt;%.*s&gt;"<pos:position pos:line="6" pos:column="84"/></literal></expr></argument>,
		    <argument><expr><name pos:line="7" pos:column="21">len<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="26">nonce<pos:position pos:line="7" pos:column="31"/></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt></block></then></if>

	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">i<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></init> <condition><expr><name pos:line="9" pos:column="21">i<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="25">len<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></condition> <incr><expr><name pos:line="9" pos:column="30">i<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">++<pos:position pos:line="9" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="34"/></control> <block pos:line="9" pos:column="35">{
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">int<pos:position pos:line="10" pos:column="20"/></name></type> <name pos:line="10" pos:column="21">ch<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><name><name pos:line="10" pos:column="26">nonce<pos:position pos:line="10" pos:column="31"/></name><index pos:line="10" pos:column="31">[<expr><name pos:line="10" pos:column="32">i<pos:position pos:line="10" pos:column="33"/></name></expr>]<pos:position pos:line="10" pos:column="34"/></index></name> <operator pos:line="10" pos:column="35">&amp;<pos:position pos:line="10" pos:column="40"/></operator> <literal type="number" pos:line="10" pos:column="37">0xFF<pos:position pos:line="10" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">isalnum<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">ch<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call> <operator pos:line="11" pos:column="33">||<pos:position pos:line="11" pos:column="35"/></operator>
		    <name pos:line="12" pos:column="21">ch<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">==<pos:position pos:line="12" pos:column="26"/></operator> <literal type="char" pos:line="12" pos:column="27">'-'<pos:position pos:line="12" pos:column="30"/></literal> <operator pos:line="12" pos:column="31">||<pos:position pos:line="12" pos:column="33"/></operator> <name pos:line="12" pos:column="34">ch<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">==<pos:position pos:line="12" pos:column="39"/></operator> <literal type="char" pos:line="12" pos:column="40">'.'<pos:position pos:line="12" pos:column="43"/></literal> <operator pos:line="12" pos:column="44">||<pos:position pos:line="12" pos:column="46"/></operator>
		    <name pos:line="13" pos:column="21">ch<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">==<pos:position pos:line="13" pos:column="26"/></operator> <literal type="char" pos:line="13" pos:column="27">'/'<pos:position pos:line="13" pos:column="30"/></literal> <operator pos:line="13" pos:column="31">||<pos:position pos:line="13" pos:column="33"/></operator> <name pos:line="13" pos:column="34">ch<pos:position pos:line="13" pos:column="36"/></name> <operator pos:line="13" pos:column="37">==<pos:position pos:line="13" pos:column="39"/></operator> <literal type="char" pos:line="13" pos:column="40">'+'<pos:position pos:line="13" pos:column="43"/></literal> <operator pos:line="13" pos:column="44">||<pos:position pos:line="13" pos:column="46"/></operator>
		    <name pos:line="14" pos:column="21">ch<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">==<pos:position pos:line="14" pos:column="26"/></operator> <literal type="char" pos:line="14" pos:column="27">'='<pos:position pos:line="14" pos:column="30"/></literal> <operator pos:line="14" pos:column="31">||<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="34">ch<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">==<pos:position pos:line="14" pos:column="39"/></operator> <literal type="char" pos:line="14" pos:column="40">'_'<pos:position pos:line="14" pos:column="43"/></literal></expr>)<pos:position pos:line="14" pos:column="44"/></condition><then pos:line="14" pos:column="44">
			<block type="pseudo"><continue pos:line="15" pos:column="25">continue;<pos:position pos:line="15" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">die<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><literal type="string" pos:line="16" pos:column="21">"the receiving end asked to sign an invalid nonce &lt;%.*s&gt;"<pos:position pos:line="16" pos:column="84"/></literal></expr></argument>,
		    <argument><expr><name pos:line="17" pos:column="21">len<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="26">nonce<pos:position pos:line="17" pos:column="31"/></name></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

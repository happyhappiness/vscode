<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3970_git-2.4.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_write_tree<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">argc<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">argv<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">unused_prefix<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">flags<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="24">ret<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">prefix<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">NULL<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">char<pos:position pos:line="5" pos:column="22"/></name></type> <name><name pos:line="5" pos:column="23">sha1<pos:position pos:line="5" pos:column="27"/></name><index pos:line="5" pos:column="27">[<expr><literal type="number" pos:line="5" pos:column="28">20<pos:position pos:line="5" pos:column="30"/></literal></expr>]<pos:position pos:line="5" pos:column="31"/></index></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">me<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><literal type="string" pos:line="6" pos:column="26">"git-write-tree"<pos:position pos:line="6" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">option<pos:position pos:line="7" pos:column="22"/></name></name></type> <name><name pos:line="7" pos:column="23">write_tree_options<pos:position pos:line="7" pos:column="41"/></name><index pos:line="7" pos:column="41">[]<pos:position pos:line="7" pos:column="43"/></index></name> <init pos:line="7" pos:column="44">= <expr><block pos:line="7" pos:column="46">{
		<expr><call><name pos:line="8" pos:column="17">OPT_BIT<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="28">"missing-ok"<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="42">&amp;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="43">flags<pos:position pos:line="8" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="50">N_<pos:position pos:line="8" pos:column="52"/></name><argument_list pos:line="8" pos:column="52">(<argument><expr><literal type="string" pos:line="8" pos:column="53">"allow missing objects"<pos:position pos:line="8" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="77"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="9" pos:column="25">WRITE_TREE_MISSING_OK<pos:position pos:line="9" pos:column="46"/></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>,
		<expr><block pos:line="10" pos:column="17">{ <expr><name pos:line="10" pos:column="19">OPTION_STRING<pos:position pos:line="10" pos:column="32"/></name></expr>, <expr><literal type="number" pos:line="10" pos:column="34">0<pos:position pos:line="10" pos:column="35"/></literal></expr>, <expr><literal type="string" pos:line="10" pos:column="37">"prefix"<pos:position pos:line="10" pos:column="45"/></literal></expr>, <expr><operator pos:line="10" pos:column="47">&amp;<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="48">prefix<pos:position pos:line="10" pos:column="54"/></name></expr>, <expr><call><name pos:line="10" pos:column="56">N_<pos:position pos:line="10" pos:column="58"/></name><argument_list pos:line="10" pos:column="58">(<argument><expr><literal type="string" pos:line="10" pos:column="59">"&lt;prefix&gt;/"<pos:position pos:line="10" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="71"/></argument_list></call></expr>,
		  <expr><call><name pos:line="11" pos:column="19">N_<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><literal type="string" pos:line="11" pos:column="22">"write tree object for a subdirectory &lt;prefix&gt;"<pos:position pos:line="11" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr> ,
		  <expr><name pos:line="12" pos:column="19">PARSE_OPT_LITERAL_ARGHELP<pos:position pos:line="12" pos:column="44"/></name></expr> }<pos:position pos:line="12" pos:column="46"/></block></expr>,
		<expr><block pos:line="13" pos:column="17">{ <expr><name pos:line="13" pos:column="19">OPTION_BIT<pos:position pos:line="13" pos:column="29"/></name></expr>, <expr><literal type="number" pos:line="13" pos:column="31">0<pos:position pos:line="13" pos:column="32"/></literal></expr>, <expr><literal type="string" pos:line="13" pos:column="34">"ignore-cache-tree"<pos:position pos:line="13" pos:column="53"/></literal></expr>, <expr><operator pos:line="13" pos:column="55">&amp;<pos:position pos:line="13" pos:column="60"/></operator><name pos:line="13" pos:column="56">flags<pos:position pos:line="13" pos:column="61"/></name></expr>, <expr><name pos:line="13" pos:column="63">NULL<pos:position pos:line="13" pos:column="67"/></name></expr>,
		  <expr><call><name pos:line="14" pos:column="19">N_<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><literal type="string" pos:line="14" pos:column="22">"only useful for debugging"<pos:position pos:line="14" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr>,
		  <expr><name pos:line="15" pos:column="19">PARSE_OPT_HIDDEN<pos:position pos:line="15" pos:column="35"/></name> <operator pos:line="15" pos:column="36">|<pos:position pos:line="15" pos:column="37"/></operator> <name pos:line="15" pos:column="38">PARSE_OPT_NOARG<pos:position pos:line="15" pos:column="53"/></name></expr>, <expr><name pos:line="15" pos:column="55">NULL<pos:position pos:line="15" pos:column="59"/></name></expr>,
		  <expr><name pos:line="16" pos:column="19">WRITE_TREE_IGNORE_CACHE_TREE<pos:position pos:line="16" pos:column="47"/></name></expr> }<pos:position pos:line="16" pos:column="49"/></block></expr>,
		<macro><name pos:line="17" pos:column="17">OPT_END<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">()<pos:position pos:line="17" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="18" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="18" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">git_config<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">git_default_config<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="40">NULL<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="21" pos:column="9">argc<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">parse_options<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">argc<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="36">argv<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="42">unused_prefix<pos:position pos:line="21" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="57">write_tree_options<pos:position pos:line="21" pos:column="75"/></name></expr></argument>,
			     <argument><expr><name pos:line="22" pos:column="30">write_tree_usage<pos:position pos:line="22" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="48">0<pos:position pos:line="22" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt>

	<expr_stmt><expr><name pos:line="24" pos:column="9">ret<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <call><name pos:line="24" pos:column="15">write_cache_as_tree<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">sha1<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">flags<pos:position pos:line="24" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="48">prefix<pos:position pos:line="24" pos:column="54"/></name></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="56"/></expr_stmt>
	<switch pos:line="25" pos:column="9">switch <condition pos:line="25" pos:column="16">(<expr><name pos:line="25" pos:column="17">ret<pos:position pos:line="25" pos:column="20"/></name></expr>)<pos:position pos:line="25" pos:column="21"/></condition> <block pos:line="25" pos:column="22">{
	<case pos:line="26" pos:column="9">case <expr><literal type="number" pos:line="26" pos:column="14">0<pos:position pos:line="26" pos:column="15"/></literal></expr>:<pos:position pos:line="26" pos:column="16"/></case>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">printf<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="string" pos:line="27" pos:column="24">"%s\n"<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="32">sha1_to_hex<pos:position pos:line="27" pos:column="43"/></name><argument_list pos:line="27" pos:column="43">(<argument><expr><name pos:line="27" pos:column="44">sha1<pos:position pos:line="27" pos:column="48"/></name></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt>
		<break pos:line="28" pos:column="17">break;<pos:position pos:line="28" pos:column="23"/></break>
	<case pos:line="29" pos:column="9">case <expr><name pos:line="29" pos:column="14">WRITE_TREE_UNREADABLE_INDEX<pos:position pos:line="29" pos:column="41"/></name></expr>:<pos:position pos:line="29" pos:column="42"/></case>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">die<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><literal type="string" pos:line="30" pos:column="21">"%s: error reading the index"<pos:position pos:line="30" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="52">me<pos:position pos:line="30" pos:column="54"/></name></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="56"/></expr_stmt>
		<break pos:line="31" pos:column="17">break;<pos:position pos:line="31" pos:column="23"/></break>
	<case pos:line="32" pos:column="9">case <expr><name pos:line="32" pos:column="14">WRITE_TREE_UNMERGED_INDEX<pos:position pos:line="32" pos:column="39"/></name></expr>:<pos:position pos:line="32" pos:column="40"/></case>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">die<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><literal type="string" pos:line="33" pos:column="21">"%s: error building trees"<pos:position pos:line="33" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="49">me<pos:position pos:line="33" pos:column="51"/></name></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt>
		<break pos:line="34" pos:column="17">break;<pos:position pos:line="34" pos:column="23"/></break>
	<case pos:line="35" pos:column="9">case <expr><name pos:line="35" pos:column="14">WRITE_TREE_PREFIX_ERROR<pos:position pos:line="35" pos:column="37"/></name></expr>:<pos:position pos:line="35" pos:column="38"/></case>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">die<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><literal type="string" pos:line="36" pos:column="21">"%s: prefix %s not found"<pos:position pos:line="36" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="48">me<pos:position pos:line="36" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="52">prefix<pos:position pos:line="36" pos:column="58"/></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt>
		<break pos:line="37" pos:column="17">break;<pos:position pos:line="37" pos:column="23"/></break>
	}<pos:position pos:line="38" pos:column="10"/></block></switch>
	<return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">ret<pos:position pos:line="39" pos:column="19"/></name></expr>;<pos:position pos:line="39" pos:column="20"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2143.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">fsck_set_msg_types<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">fsck_options<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">options<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">values<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">buf<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><call><name pos:line="3" pos:column="21">xstrdup<pos:position pos:line="3" pos:column="28"/></name><argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">values<pos:position pos:line="3" pos:column="35"/></name></expr></argument>)<pos:position pos:line="3" pos:column="36"/></argument_list></call></expr></init></decl>, <modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="39">to_free<pos:position pos:line="3" pos:column="46"/></name> <init pos:line="3" pos:column="47">= <expr><name pos:line="3" pos:column="49">buf<pos:position pos:line="3" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">done<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><literal type="number" pos:line="4" pos:column="20">0<pos:position pos:line="4" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><operator pos:line="6" pos:column="16">!<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">done<pos:position pos:line="6" pos:column="21"/></name></expr>)<pos:position pos:line="6" pos:column="22"/></condition> <block pos:line="6" pos:column="23">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">len<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><call><name pos:line="7" pos:column="27">strcspn<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><name pos:line="7" pos:column="35">buf<pos:position pos:line="7" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="40">" ,|"<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="48">equal<pos:position pos:line="7" pos:column="53"/></name></decl>;<pos:position pos:line="7" pos:column="54"/></decl_stmt>

		<expr_stmt><expr><name pos:line="9" pos:column="17">done<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">=<pos:position pos:line="9" pos:column="23"/></operator> <operator pos:line="9" pos:column="24">!<pos:position pos:line="9" pos:column="25"/></operator><name><name pos:line="9" pos:column="25">buf<pos:position pos:line="9" pos:column="28"/></name><index pos:line="9" pos:column="28">[<expr><name pos:line="9" pos:column="29">len<pos:position pos:line="9" pos:column="32"/></name></expr>]<pos:position pos:line="9" pos:column="33"/></index></name></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">len<pos:position pos:line="10" pos:column="25"/></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26"> <block pos:line="10" pos:column="27">{
			<expr_stmt><expr><name pos:line="11" pos:column="25">buf<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">++<pos:position pos:line="11" pos:column="30"/></operator></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
			<continue pos:line="12" pos:column="25">continue;<pos:position pos:line="12" pos:column="34"/></continue>
		}<pos:position pos:line="13" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="14" pos:column="17">buf<pos:position pos:line="14" pos:column="20"/></name><index pos:line="14" pos:column="20">[<expr><name pos:line="14" pos:column="21">len<pos:position pos:line="14" pos:column="24"/></name></expr>]<pos:position pos:line="14" pos:column="25"/></index></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <literal type="char" pos:line="14" pos:column="28">'\0'<pos:position pos:line="14" pos:column="32"/></literal></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>

		<for pos:line="16" pos:column="17">for <control pos:line="16" pos:column="21">(<init><expr><name pos:line="16" pos:column="22">equal<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <literal type="number" pos:line="16" pos:column="30">0<pos:position pos:line="16" pos:column="31"/></literal></expr>;<pos:position pos:line="16" pos:column="32"/></init>
		     <condition><expr><name pos:line="17" pos:column="22">equal<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">&lt;<pos:position pos:line="17" pos:column="32"/></operator> <name pos:line="17" pos:column="30">len<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">&amp;&amp;<pos:position pos:line="17" pos:column="44"/></operator> <name><name pos:line="17" pos:column="37">buf<pos:position pos:line="17" pos:column="40"/></name><index pos:line="17" pos:column="40">[<expr><name pos:line="17" pos:column="41">equal<pos:position pos:line="17" pos:column="46"/></name></expr>]<pos:position pos:line="17" pos:column="47"/></index></name> <operator pos:line="17" pos:column="48">!=<pos:position pos:line="17" pos:column="50"/></operator> <literal type="char" pos:line="17" pos:column="51">'='<pos:position pos:line="17" pos:column="54"/></literal> <operator pos:line="17" pos:column="55">&amp;&amp;<pos:position pos:line="17" pos:column="65"/></operator> <name><name pos:line="17" pos:column="58">buf<pos:position pos:line="17" pos:column="61"/></name><index pos:line="17" pos:column="61">[<expr><name pos:line="17" pos:column="62">equal<pos:position pos:line="17" pos:column="67"/></name></expr>]<pos:position pos:line="17" pos:column="68"/></index></name> <operator pos:line="17" pos:column="69">!=<pos:position pos:line="17" pos:column="71"/></operator> <literal type="char" pos:line="17" pos:column="72">':'<pos:position pos:line="17" pos:column="75"/></literal></expr>;<pos:position pos:line="17" pos:column="76"/></condition>
		     <incr><expr><name pos:line="18" pos:column="22">equal<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">++<pos:position pos:line="18" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="30"/></control>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="25">buf<pos:position pos:line="19" pos:column="28"/></name><index pos:line="19" pos:column="28">[<expr><name pos:line="19" pos:column="29">equal<pos:position pos:line="19" pos:column="34"/></name></expr>]<pos:position pos:line="19" pos:column="35"/></index></name> <operator pos:line="19" pos:column="36">=<pos:position pos:line="19" pos:column="37"/></operator> <call><name pos:line="19" pos:column="38">tolower<pos:position pos:line="19" pos:column="45"/></name><argument_list pos:line="19" pos:column="45">(<argument><expr><name><name pos:line="19" pos:column="46">buf<pos:position pos:line="19" pos:column="49"/></name><index pos:line="19" pos:column="49">[<expr><name pos:line="19" pos:column="50">equal<pos:position pos:line="19" pos:column="55"/></name></expr>]<pos:position pos:line="19" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt></block></for>
		<expr_stmt><expr><name><name pos:line="20" pos:column="17">buf<pos:position pos:line="20" pos:column="20"/></name><index pos:line="20" pos:column="20">[<expr><name pos:line="20" pos:column="21">equal<pos:position pos:line="20" pos:column="26"/></name></expr>]<pos:position pos:line="20" pos:column="27"/></index></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <literal type="char" pos:line="20" pos:column="30">'\0'<pos:position pos:line="20" pos:column="34"/></literal></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>

		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><call><name pos:line="22" pos:column="22">strcmp<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">buf<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="34">"skiplist"<pos:position pos:line="22" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="46"/></condition><then pos:line="22" pos:column="46"> <block pos:line="22" pos:column="47">{
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><name pos:line="23" pos:column="29">equal<pos:position pos:line="23" pos:column="34"/></name> <operator pos:line="23" pos:column="35">==<pos:position pos:line="23" pos:column="37"/></operator> <name pos:line="23" pos:column="38">len<pos:position pos:line="23" pos:column="41"/></name></expr>)<pos:position pos:line="23" pos:column="42"/></condition><then pos:line="23" pos:column="42">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="33">die<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><literal type="string" pos:line="24" pos:column="37">"skiplist requires a path"<pos:position pos:line="24" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">init_skiplist<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">(<argument><expr><name pos:line="25" pos:column="39">options<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="48">buf<pos:position pos:line="25" pos:column="51"/></name> <operator pos:line="25" pos:column="52">+<pos:position pos:line="25" pos:column="53"/></operator> <name pos:line="25" pos:column="54">equal<pos:position pos:line="25" pos:column="59"/></name> <operator pos:line="25" pos:column="60">+<pos:position pos:line="25" pos:column="61"/></operator> <literal type="number" pos:line="25" pos:column="62">1<pos:position pos:line="25" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><name pos:line="26" pos:column="25">buf<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">+=<pos:position pos:line="26" pos:column="31"/></operator> <name pos:line="26" pos:column="32">len<pos:position pos:line="26" pos:column="35"/></name> <operator pos:line="26" pos:column="36">+<pos:position pos:line="26" pos:column="37"/></operator> <literal type="number" pos:line="26" pos:column="38">1<pos:position pos:line="26" pos:column="39"/></literal></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
			<continue pos:line="27" pos:column="25">continue;<pos:position pos:line="27" pos:column="34"/></continue>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if>

		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">equal<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">==<pos:position pos:line="30" pos:column="29"/></operator> <name pos:line="30" pos:column="30">len<pos:position pos:line="30" pos:column="33"/></name></expr>)<pos:position pos:line="30" pos:column="34"/></condition><then pos:line="30" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="25">die<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><literal type="string" pos:line="31" pos:column="29">"Missing '=': '%s'"<pos:position pos:line="31" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="50">buf<pos:position pos:line="31" pos:column="53"/></name></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="33" pos:column="17">fsck_set_msg_type<pos:position pos:line="33" pos:column="34"/></name><argument_list pos:line="33" pos:column="34">(<argument><expr><name pos:line="33" pos:column="35">options<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">buf<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="49">buf<pos:position pos:line="33" pos:column="52"/></name> <operator pos:line="33" pos:column="53">+<pos:position pos:line="33" pos:column="54"/></operator> <name pos:line="33" pos:column="55">equal<pos:position pos:line="33" pos:column="60"/></name> <operator pos:line="33" pos:column="61">+<pos:position pos:line="33" pos:column="62"/></operator> <literal type="number" pos:line="33" pos:column="63">1<pos:position pos:line="33" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><name pos:line="34" pos:column="17">buf<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">+=<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="24">len<pos:position pos:line="34" pos:column="27"/></name> <operator pos:line="34" pos:column="28">+<pos:position pos:line="34" pos:column="29"/></operator> <literal type="number" pos:line="34" pos:column="30">1<pos:position pos:line="34" pos:column="31"/></literal></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="36" pos:column="9">free<pos:position pos:line="36" pos:column="13"/></name><argument_list pos:line="36" pos:column="13">(<argument><expr><name pos:line="36" pos:column="14">to_free<pos:position pos:line="36" pos:column="21"/></name></expr></argument>)<pos:position pos:line="36" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

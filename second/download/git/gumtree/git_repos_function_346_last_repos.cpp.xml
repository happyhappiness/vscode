<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_346_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">verify_dotfile<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">rest<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/*
	 * The first character was '.', but that
	 * has already been discarded, we now test
	 * the rest.
	 */</comment>

	<comment type="block" pos:line="9" pos:column="9">/* "." is not allowed */</comment>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">rest<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">==<pos:position pos:line="10" pos:column="21"/></operator> <literal type="char" pos:line="10" pos:column="22">'\0'<pos:position pos:line="10" pos:column="26"/></literal> <operator pos:line="10" pos:column="27">||<pos:position pos:line="10" pos:column="29"/></operator> <call><name pos:line="10" pos:column="30">is_dir_sep<pos:position pos:line="10" pos:column="40"/></name><argument_list pos:line="10" pos:column="40">(<argument><expr><operator pos:line="10" pos:column="41">*<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="42">rest<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="48"/></condition><then pos:line="10" pos:column="48">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return></block></then></if>

	<switch pos:line="13" pos:column="9">switch <condition pos:line="13" pos:column="16">(<expr><operator pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">rest<pos:position pos:line="13" pos:column="22"/></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition> <block pos:line="13" pos:column="24">{
	<comment type="block" pos:line="14" pos:column="9">/*
	 * ".git" followed by  NUL or slash is bad. This
	 * shares the path end test with the ".." case.
	 */</comment>
	<case pos:line="18" pos:column="9">case <expr><literal type="char" pos:line="18" pos:column="14">'g'<pos:position pos:line="18" pos:column="17"/></literal></expr>:<pos:position pos:line="18" pos:column="18"/></case>
	<case pos:line="19" pos:column="9">case <expr><literal type="char" pos:line="19" pos:column="14">'G'<pos:position pos:line="19" pos:column="17"/></literal></expr>:<pos:position pos:line="19" pos:column="18"/></case>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name><name pos:line="20" pos:column="21">rest<pos:position pos:line="20" pos:column="25"/></name><index pos:line="20" pos:column="25">[<expr><literal type="number" pos:line="20" pos:column="26">1<pos:position pos:line="20" pos:column="27"/></literal></expr>]<pos:position pos:line="20" pos:column="28"/></index></name> <operator pos:line="20" pos:column="29">!=<pos:position pos:line="20" pos:column="31"/></operator> <literal type="char" pos:line="20" pos:column="32">'i'<pos:position pos:line="20" pos:column="35"/></literal> <operator pos:line="20" pos:column="36">&amp;&amp;<pos:position pos:line="20" pos:column="46"/></operator> <name><name pos:line="20" pos:column="39">rest<pos:position pos:line="20" pos:column="43"/></name><index pos:line="20" pos:column="43">[<expr><literal type="number" pos:line="20" pos:column="44">1<pos:position pos:line="20" pos:column="45"/></literal></expr>]<pos:position pos:line="20" pos:column="46"/></index></name> <operator pos:line="20" pos:column="47">!=<pos:position pos:line="20" pos:column="49"/></operator> <literal type="char" pos:line="20" pos:column="50">'I'<pos:position pos:line="20" pos:column="53"/></literal></expr>)<pos:position pos:line="20" pos:column="54"/></condition><then pos:line="20" pos:column="54">
			<block type="pseudo"><break pos:line="21" pos:column="25">break;<pos:position pos:line="21" pos:column="31"/></break></block></then></if>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">rest<pos:position pos:line="22" pos:column="25"/></name><index pos:line="22" pos:column="25">[<expr><literal type="number" pos:line="22" pos:column="26">2<pos:position pos:line="22" pos:column="27"/></literal></expr>]<pos:position pos:line="22" pos:column="28"/></index></name> <operator pos:line="22" pos:column="29">!=<pos:position pos:line="22" pos:column="31"/></operator> <literal type="char" pos:line="22" pos:column="32">'t'<pos:position pos:line="22" pos:column="35"/></literal> <operator pos:line="22" pos:column="36">&amp;&amp;<pos:position pos:line="22" pos:column="46"/></operator> <name><name pos:line="22" pos:column="39">rest<pos:position pos:line="22" pos:column="43"/></name><index pos:line="22" pos:column="43">[<expr><literal type="number" pos:line="22" pos:column="44">2<pos:position pos:line="22" pos:column="45"/></literal></expr>]<pos:position pos:line="22" pos:column="46"/></index></name> <operator pos:line="22" pos:column="47">!=<pos:position pos:line="22" pos:column="49"/></operator> <literal type="char" pos:line="22" pos:column="50">'T'<pos:position pos:line="22" pos:column="53"/></literal></expr>)<pos:position pos:line="22" pos:column="54"/></condition><then pos:line="22" pos:column="54">
			<block type="pseudo"><break pos:line="23" pos:column="25">break;<pos:position pos:line="23" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="24" pos:column="17">rest<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">+=<pos:position pos:line="24" pos:column="24"/></operator> <literal type="number" pos:line="24" pos:column="25">2<pos:position pos:line="24" pos:column="26"/></literal></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
	<comment type="block" pos:line="25" pos:column="9">/* fallthrough */</comment>
	<case pos:line="26" pos:column="9">case <expr><literal type="char" pos:line="26" pos:column="14">'.'<pos:position pos:line="26" pos:column="17"/></literal></expr>:<pos:position pos:line="26" pos:column="18"/></case>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name><name pos:line="27" pos:column="21">rest<pos:position pos:line="27" pos:column="25"/></name><index pos:line="27" pos:column="25">[<expr><literal type="number" pos:line="27" pos:column="26">1<pos:position pos:line="27" pos:column="27"/></literal></expr>]<pos:position pos:line="27" pos:column="28"/></index></name> <operator pos:line="27" pos:column="29">==<pos:position pos:line="27" pos:column="31"/></operator> <literal type="char" pos:line="27" pos:column="32">'\0'<pos:position pos:line="27" pos:column="36"/></literal> <operator pos:line="27" pos:column="37">||<pos:position pos:line="27" pos:column="39"/></operator> <call><name pos:line="27" pos:column="40">is_dir_sep<pos:position pos:line="27" pos:column="50"/></name><argument_list pos:line="27" pos:column="50">(<argument><expr><name><name pos:line="27" pos:column="51">rest<pos:position pos:line="27" pos:column="55"/></name><index pos:line="27" pos:column="55">[<expr><literal type="number" pos:line="27" pos:column="56">1<pos:position pos:line="27" pos:column="57"/></literal></expr>]<pos:position pos:line="27" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="60"/></condition><then pos:line="27" pos:column="60">
			<block type="pseudo"><return pos:line="28" pos:column="25">return <expr><literal type="number" pos:line="28" pos:column="32">0<pos:position pos:line="28" pos:column="33"/></literal></expr>;<pos:position pos:line="28" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="29" pos:column="10"/></block></switch>
	<return pos:line="30" pos:column="9">return <expr><literal type="number" pos:line="30" pos:column="16">1<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

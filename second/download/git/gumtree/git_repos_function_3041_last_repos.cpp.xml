<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3041_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">token_len_without_separator<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">token<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">size_t<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">len<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<while pos:line="3" pos:column="9">while <condition pos:line="3" pos:column="15">(<expr><name pos:line="3" pos:column="16">len<pos:position pos:line="3" pos:column="19"/></name> <operator pos:line="3" pos:column="20">&gt;<pos:position pos:line="3" pos:column="24"/></operator> <literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal> <operator pos:line="3" pos:column="24">&amp;&amp;<pos:position pos:line="3" pos:column="34"/></operator> <operator pos:line="3" pos:column="27">!<pos:position pos:line="3" pos:column="28"/></operator><call><name pos:line="3" pos:column="28">isalnum<pos:position pos:line="3" pos:column="35"/></name><argument_list pos:line="3" pos:column="35">(<argument><expr><name><name pos:line="3" pos:column="36">token<pos:position pos:line="3" pos:column="41"/></name><index pos:line="3" pos:column="41">[<expr><name pos:line="3" pos:column="42">len<pos:position pos:line="3" pos:column="45"/></name> <operator pos:line="3" pos:column="46">-<pos:position pos:line="3" pos:column="47"/></operator> <literal type="number" pos:line="3" pos:column="48">1<pos:position pos:line="3" pos:column="49"/></literal></expr>]<pos:position pos:line="3" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="3" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="52"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="4" pos:column="17">len<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">--<pos:position pos:line="4" pos:column="22"/></operator></expr>;<pos:position pos:line="4" pos:column="23"/></expr_stmt></block></while>
	<return pos:line="5" pos:column="9">return <expr><name pos:line="5" pos:column="16">len<pos:position pos:line="5" pos:column="19"/></name></expr>;<pos:position pos:line="5" pos:column="20"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

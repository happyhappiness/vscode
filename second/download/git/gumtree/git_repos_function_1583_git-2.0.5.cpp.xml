<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1583_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">has_sha1_file<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">unsigned<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">sha1<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">pack_entry<pos:position pos:line="3" pos:column="26"/></name></name></type> <name pos:line="3" pos:column="27">e<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">find_pack_entry<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name pos:line="5" pos:column="29">sha1<pos:position pos:line="5" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="35">&amp;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="36">e<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="39"/></condition><then pos:line="5" pos:column="39">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">1<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">has_loose_object<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">sha1<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">1<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">reprepare_packed_git<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">()<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
	<return pos:line="10" pos:column="9">return <expr><call><name pos:line="10" pos:column="16">find_pack_entry<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">sha1<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="38">&amp;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="39">e<pos:position pos:line="10" pos:column="40"/></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

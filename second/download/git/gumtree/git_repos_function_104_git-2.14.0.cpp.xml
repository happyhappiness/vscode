<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_104_git-2.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">format_person_part<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">strbuf<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">sb<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">part<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">msg<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">int<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">len<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="3" pos:column="34">const<pos:position pos:line="3" pos:column="39"/></specifier> <name><name pos:line="3" pos:column="40">struct<pos:position pos:line="3" pos:column="46"/></name> <name pos:line="3" pos:column="47">date_mode<pos:position pos:line="3" pos:column="56"/></name></name> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="58">dmode<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="64"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<comment type="block" pos:line="5" pos:column="9">/* currently all placeholders have same length */</comment>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">int<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">placeholder_len<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><literal type="number" pos:line="6" pos:column="37">2<pos:position pos:line="6" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">ident_split<pos:position pos:line="7" pos:column="27"/></name></name></type> <name pos:line="7" pos:column="28">s<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">name<pos:position pos:line="8" pos:column="25"/></name></decl>, <modifier pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="28">mail<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">maillen<pos:position pos:line="9" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="25">namelen<pos:position pos:line="9" pos:column="32"/></name></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">split_ident_line<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><operator pos:line="11" pos:column="30">&amp;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="31">s<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">msg<pos:position pos:line="11" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="39">len<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call> <operator pos:line="11" pos:column="44">&lt;<pos:position pos:line="11" pos:column="48"/></operator> <literal type="number" pos:line="11" pos:column="46">0<pos:position pos:line="11" pos:column="47"/></literal></expr>)<pos:position pos:line="11" pos:column="48"/></condition><then pos:line="11" pos:column="48">
		<block type="pseudo"><goto pos:line="12" pos:column="17">goto <name pos:line="12" pos:column="22">skip<pos:position pos:line="12" pos:column="26"/></name>;<pos:position pos:line="12" pos:column="27"/></goto></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">name<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <name><name pos:line="14" pos:column="16">s<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">.<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">name_begin<pos:position pos:line="14" pos:column="28"/></name></name></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">namelen<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <name><name pos:line="15" pos:column="19">s<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">.<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">name_end<pos:position pos:line="15" pos:column="29"/></name></name> <operator pos:line="15" pos:column="30">-<pos:position pos:line="15" pos:column="31"/></operator> <name><name pos:line="15" pos:column="32">s<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">.<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="34">name_begin<pos:position pos:line="15" pos:column="44"/></name></name></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">mail<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name><name pos:line="16" pos:column="16">s<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">.<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">mail_begin<pos:position pos:line="16" pos:column="28"/></name></name></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">maillen<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name><name pos:line="17" pos:column="19">s<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">.<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">mail_end<pos:position pos:line="17" pos:column="29"/></name></name> <operator pos:line="17" pos:column="30">-<pos:position pos:line="17" pos:column="31"/></operator> <name><name pos:line="17" pos:column="32">s<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">.<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="34">mail_begin<pos:position pos:line="17" pos:column="44"/></name></name></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">part<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">==<pos:position pos:line="19" pos:column="20"/></operator> <literal type="char" pos:line="19" pos:column="21">'N'<pos:position pos:line="19" pos:column="24"/></literal> <operator pos:line="19" pos:column="25">||<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="28">part<pos:position pos:line="19" pos:column="32"/></name> <operator pos:line="19" pos:column="33">==<pos:position pos:line="19" pos:column="35"/></operator> <literal type="char" pos:line="19" pos:column="36">'E'<pos:position pos:line="19" pos:column="39"/></literal></expr>)<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40"> <comment type="block" pos:line="19" pos:column="41">/* mailmap lookup */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">mailmap_name<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><operator pos:line="20" pos:column="30">&amp;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="31">mail<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="37">&amp;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="38">maillen<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="47">&amp;<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="48">name<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="54">&amp;<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="55">namelen<pos:position pos:line="20" pos:column="62"/></name></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt></block></then></if>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">part<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">==<pos:position pos:line="21" pos:column="20"/></operator> <literal type="char" pos:line="21" pos:column="21">'n'<pos:position pos:line="21" pos:column="24"/></literal> <operator pos:line="21" pos:column="25">||<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="28">part<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">==<pos:position pos:line="21" pos:column="35"/></operator> <literal type="char" pos:line="21" pos:column="36">'N'<pos:position pos:line="21" pos:column="39"/></literal></expr>)<pos:position pos:line="21" pos:column="40"/></condition><then pos:line="21" pos:column="40"> <block pos:line="21" pos:column="41">{	<comment type="block" pos:line="21" pos:column="49">/* name */</comment>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">strbuf_add<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><name pos:line="22" pos:column="28">sb<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="32">name<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">namelen<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
		<return pos:line="23" pos:column="17">return <expr><name pos:line="23" pos:column="24">placeholder_len<pos:position pos:line="23" pos:column="39"/></name></expr>;<pos:position pos:line="23" pos:column="40"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">part<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">==<pos:position pos:line="25" pos:column="20"/></operator> <literal type="char" pos:line="25" pos:column="21">'e'<pos:position pos:line="25" pos:column="24"/></literal> <operator pos:line="25" pos:column="25">||<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="28">part<pos:position pos:line="25" pos:column="32"/></name> <operator pos:line="25" pos:column="33">==<pos:position pos:line="25" pos:column="35"/></operator> <literal type="char" pos:line="25" pos:column="36">'E'<pos:position pos:line="25" pos:column="39"/></literal></expr>)<pos:position pos:line="25" pos:column="40"/></condition><then pos:line="25" pos:column="40"> <block pos:line="25" pos:column="41">{	<comment type="block" pos:line="25" pos:column="49">/* email */</comment>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">strbuf_add<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">sb<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="32">mail<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="38">maillen<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt>
		<return pos:line="27" pos:column="17">return <expr><name pos:line="27" pos:column="24">placeholder_len<pos:position pos:line="27" pos:column="39"/></name></expr>;<pos:position pos:line="27" pos:column="40"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><name><name pos:line="30" pos:column="14">s<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">.<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">date_begin<pos:position pos:line="30" pos:column="26"/></name></name></expr>)<pos:position pos:line="30" pos:column="27"/></condition><then pos:line="30" pos:column="27">
		<block type="pseudo"><goto pos:line="31" pos:column="17">goto <name pos:line="31" pos:column="22">skip<pos:position pos:line="31" pos:column="26"/></name>;<pos:position pos:line="31" pos:column="27"/></goto></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">part<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">==<pos:position pos:line="33" pos:column="20"/></operator> <literal type="char" pos:line="33" pos:column="21">'t'<pos:position pos:line="33" pos:column="24"/></literal></expr>)<pos:position pos:line="33" pos:column="25"/></condition><then pos:line="33" pos:column="25"> <block pos:line="33" pos:column="26">{	<comment type="block" pos:line="33" pos:column="33">/* date, UNIX timestamp */</comment>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">strbuf_add<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">sb<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="32">s<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">.<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="34">date_begin<pos:position pos:line="34" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="46">s<pos:position pos:line="34" pos:column="47"/></name><operator pos:line="34" pos:column="47">.<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="48">date_end<pos:position pos:line="34" pos:column="56"/></name></name> <operator pos:line="34" pos:column="57">-<pos:position pos:line="34" pos:column="58"/></operator> <name><name pos:line="34" pos:column="59">s<pos:position pos:line="34" pos:column="60"/></name><operator pos:line="34" pos:column="60">.<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="61">date_begin<pos:position pos:line="34" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt>
		<return pos:line="35" pos:column="17">return <expr><name pos:line="35" pos:column="24">placeholder_len<pos:position pos:line="35" pos:column="39"/></name></expr>;<pos:position pos:line="35" pos:column="40"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<switch pos:line="38" pos:column="9">switch <condition pos:line="38" pos:column="16">(<expr><name pos:line="38" pos:column="17">part<pos:position pos:line="38" pos:column="21"/></name></expr>)<pos:position pos:line="38" pos:column="22"/></condition> <block pos:line="38" pos:column="23">{
	<case pos:line="39" pos:column="9">case <expr><literal type="char" pos:line="39" pos:column="14">'d'<pos:position pos:line="39" pos:column="17"/></literal></expr>:<pos:position pos:line="39" pos:column="18"/></case>	<comment type="block" pos:line="39" pos:column="25">/* date */</comment>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">strbuf_addstr<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">sb<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="35">show_ident_date<pos:position pos:line="40" pos:column="50"/></name><argument_list pos:line="40" pos:column="50">(<argument><expr><operator pos:line="40" pos:column="51">&amp;<pos:position pos:line="40" pos:column="56"/></operator><name pos:line="40" pos:column="52">s<pos:position pos:line="40" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="55">dmode<pos:position pos:line="40" pos:column="60"/></name></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="63"/></expr_stmt>
		<return pos:line="41" pos:column="17">return <expr><name pos:line="41" pos:column="24">placeholder_len<pos:position pos:line="41" pos:column="39"/></name></expr>;<pos:position pos:line="41" pos:column="40"/></return>
	<case pos:line="42" pos:column="9">case <expr><literal type="char" pos:line="42" pos:column="14">'D'<pos:position pos:line="42" pos:column="17"/></literal></expr>:<pos:position pos:line="42" pos:column="18"/></case>	<comment type="block" pos:line="42" pos:column="25">/* date, RFC2822 style */</comment>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">strbuf_addstr<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">sb<pos:position pos:line="43" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="35">show_ident_date<pos:position pos:line="43" pos:column="50"/></name><argument_list pos:line="43" pos:column="50">(<argument><expr><operator pos:line="43" pos:column="51">&amp;<pos:position pos:line="43" pos:column="56"/></operator><name pos:line="43" pos:column="52">s<pos:position pos:line="43" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="55">DATE_MODE<pos:position pos:line="43" pos:column="64"/></name><argument_list pos:line="43" pos:column="64">(<argument><expr><name pos:line="43" pos:column="65">RFC2822<pos:position pos:line="43" pos:column="72"/></name></expr></argument>)<pos:position pos:line="43" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="76"/></expr_stmt>
		<return pos:line="44" pos:column="17">return <expr><name pos:line="44" pos:column="24">placeholder_len<pos:position pos:line="44" pos:column="39"/></name></expr>;<pos:position pos:line="44" pos:column="40"/></return>
	<case pos:line="45" pos:column="9">case <expr><literal type="char" pos:line="45" pos:column="14">'r'<pos:position pos:line="45" pos:column="17"/></literal></expr>:<pos:position pos:line="45" pos:column="18"/></case>	<comment type="block" pos:line="45" pos:column="25">/* date, relative */</comment>
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">strbuf_addstr<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><name pos:line="46" pos:column="31">sb<pos:position pos:line="46" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="35">show_ident_date<pos:position pos:line="46" pos:column="50"/></name><argument_list pos:line="46" pos:column="50">(<argument><expr><operator pos:line="46" pos:column="51">&amp;<pos:position pos:line="46" pos:column="56"/></operator><name pos:line="46" pos:column="52">s<pos:position pos:line="46" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="55">DATE_MODE<pos:position pos:line="46" pos:column="64"/></name><argument_list pos:line="46" pos:column="64">(<argument><expr><name pos:line="46" pos:column="65">RELATIVE<pos:position pos:line="46" pos:column="73"/></name></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="77"/></expr_stmt>
		<return pos:line="47" pos:column="17">return <expr><name pos:line="47" pos:column="24">placeholder_len<pos:position pos:line="47" pos:column="39"/></name></expr>;<pos:position pos:line="47" pos:column="40"/></return>
	<case pos:line="48" pos:column="9">case <expr><literal type="char" pos:line="48" pos:column="14">'i'<pos:position pos:line="48" pos:column="17"/></literal></expr>:<pos:position pos:line="48" pos:column="18"/></case>	<comment type="block" pos:line="48" pos:column="25">/* date, ISO 8601-like */</comment>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">strbuf_addstr<pos:position pos:line="49" pos:column="30"/></name><argument_list pos:line="49" pos:column="30">(<argument><expr><name pos:line="49" pos:column="31">sb<pos:position pos:line="49" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="35">show_ident_date<pos:position pos:line="49" pos:column="50"/></name><argument_list pos:line="49" pos:column="50">(<argument><expr><operator pos:line="49" pos:column="51">&amp;<pos:position pos:line="49" pos:column="56"/></operator><name pos:line="49" pos:column="52">s<pos:position pos:line="49" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="55">DATE_MODE<pos:position pos:line="49" pos:column="64"/></name><argument_list pos:line="49" pos:column="64">(<argument><expr><name pos:line="49" pos:column="65">ISO8601<pos:position pos:line="49" pos:column="72"/></name></expr></argument>)<pos:position pos:line="49" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="76"/></expr_stmt>
		<return pos:line="50" pos:column="17">return <expr><name pos:line="50" pos:column="24">placeholder_len<pos:position pos:line="50" pos:column="39"/></name></expr>;<pos:position pos:line="50" pos:column="40"/></return>
	<case pos:line="51" pos:column="9">case <expr><literal type="char" pos:line="51" pos:column="14">'I'<pos:position pos:line="51" pos:column="17"/></literal></expr>:<pos:position pos:line="51" pos:column="18"/></case>	<comment type="block" pos:line="51" pos:column="25">/* date, ISO 8601 strict */</comment>
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">strbuf_addstr<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><name pos:line="52" pos:column="31">sb<pos:position pos:line="52" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="35">show_ident_date<pos:position pos:line="52" pos:column="50"/></name><argument_list pos:line="52" pos:column="50">(<argument><expr><operator pos:line="52" pos:column="51">&amp;<pos:position pos:line="52" pos:column="56"/></operator><name pos:line="52" pos:column="52">s<pos:position pos:line="52" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="55">DATE_MODE<pos:position pos:line="52" pos:column="64"/></name><argument_list pos:line="52" pos:column="64">(<argument><expr><name pos:line="52" pos:column="65">ISO8601_STRICT<pos:position pos:line="52" pos:column="79"/></name></expr></argument>)<pos:position pos:line="52" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="83"/></expr_stmt>
		<return pos:line="53" pos:column="17">return <expr><name pos:line="53" pos:column="24">placeholder_len<pos:position pos:line="53" pos:column="39"/></name></expr>;<pos:position pos:line="53" pos:column="40"/></return>
	}<pos:position pos:line="54" pos:column="10"/></block></switch>

<label><name pos:line="56" pos:column="1">skip<pos:position pos:line="56" pos:column="5"/></name>:<pos:position pos:line="56" pos:column="6"/></label>
	<comment type="block" pos:line="57" pos:column="9">/*
	 * reading from either a bogus commit, or a reflog entry with
	 * %gn, %ge, etc.; 'sb' cannot be updated, but we still need
	 * to compute a valid return value.
	 */</comment>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name pos:line="62" pos:column="13">part<pos:position pos:line="62" pos:column="17"/></name> <operator pos:line="62" pos:column="18">==<pos:position pos:line="62" pos:column="20"/></operator> <literal type="char" pos:line="62" pos:column="21">'n'<pos:position pos:line="62" pos:column="24"/></literal> <operator pos:line="62" pos:column="25">||<pos:position pos:line="62" pos:column="27"/></operator> <name pos:line="62" pos:column="28">part<pos:position pos:line="62" pos:column="32"/></name> <operator pos:line="62" pos:column="33">==<pos:position pos:line="62" pos:column="35"/></operator> <literal type="char" pos:line="62" pos:column="36">'e'<pos:position pos:line="62" pos:column="39"/></literal> <operator pos:line="62" pos:column="40">||<pos:position pos:line="62" pos:column="42"/></operator> <name pos:line="62" pos:column="43">part<pos:position pos:line="62" pos:column="47"/></name> <operator pos:line="62" pos:column="48">==<pos:position pos:line="62" pos:column="50"/></operator> <literal type="char" pos:line="62" pos:column="51">'t'<pos:position pos:line="62" pos:column="54"/></literal> <operator pos:line="62" pos:column="55">||<pos:position pos:line="62" pos:column="57"/></operator> <name pos:line="62" pos:column="58">part<pos:position pos:line="62" pos:column="62"/></name> <operator pos:line="62" pos:column="63">==<pos:position pos:line="62" pos:column="65"/></operator> <literal type="char" pos:line="62" pos:column="66">'d'<pos:position pos:line="62" pos:column="69"/></literal>
	    <operator pos:line="63" pos:column="13">||<pos:position pos:line="63" pos:column="15"/></operator> <name pos:line="63" pos:column="16">part<pos:position pos:line="63" pos:column="20"/></name> <operator pos:line="63" pos:column="21">==<pos:position pos:line="63" pos:column="23"/></operator> <literal type="char" pos:line="63" pos:column="24">'D'<pos:position pos:line="63" pos:column="27"/></literal> <operator pos:line="63" pos:column="28">||<pos:position pos:line="63" pos:column="30"/></operator> <name pos:line="63" pos:column="31">part<pos:position pos:line="63" pos:column="35"/></name> <operator pos:line="63" pos:column="36">==<pos:position pos:line="63" pos:column="38"/></operator> <literal type="char" pos:line="63" pos:column="39">'r'<pos:position pos:line="63" pos:column="42"/></literal> <operator pos:line="63" pos:column="43">||<pos:position pos:line="63" pos:column="45"/></operator> <name pos:line="63" pos:column="46">part<pos:position pos:line="63" pos:column="50"/></name> <operator pos:line="63" pos:column="51">==<pos:position pos:line="63" pos:column="53"/></operator> <literal type="char" pos:line="63" pos:column="54">'i'<pos:position pos:line="63" pos:column="57"/></literal></expr>)<pos:position pos:line="63" pos:column="58"/></condition><then pos:line="63" pos:column="58">
		<block type="pseudo"><return pos:line="64" pos:column="17">return <expr><name pos:line="64" pos:column="24">placeholder_len<pos:position pos:line="64" pos:column="39"/></name></expr>;<pos:position pos:line="64" pos:column="40"/></return></block></then></if>

	<return pos:line="66" pos:column="9">return <expr><literal type="number" pos:line="66" pos:column="16">0<pos:position pos:line="66" pos:column="17"/></literal></expr>;<pos:position pos:line="66" pos:column="18"/></return> <comment type="block" pos:line="66" pos:column="19">/* unknown placeholder */</comment>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

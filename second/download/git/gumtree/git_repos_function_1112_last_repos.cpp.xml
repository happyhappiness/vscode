<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1112_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_am_in_progress<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">wt_status<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">s<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="2" pos:column="33">struct<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">wt_status_state<pos:position pos:line="2" pos:column="55"/></name></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">state<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="3" pos:column="33">const<pos:position pos:line="3" pos:column="38"/></specifier> <name pos:line="3" pos:column="39">char<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">color<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="51"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">status_printf_ln<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">s<pos:position pos:line="5" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="29">color<pos:position pos:line="5" pos:column="34"/></name></expr></argument>,
		<argument><expr><call><name pos:line="6" pos:column="17">_<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><literal type="string" pos:line="6" pos:column="19">"You are in the middle of an am session."<pos:position pos:line="6" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="63"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">state<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">am_empty_patch<pos:position pos:line="7" pos:column="34"/></name></name></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">status_printf_ln<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><name pos:line="8" pos:column="34">s<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="37">color<pos:position pos:line="8" pos:column="42"/></name></expr></argument>,
			<argument><expr><call><name pos:line="9" pos:column="25">_<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><literal type="string" pos:line="9" pos:column="27">"The current patch is empty."<pos:position pos:line="9" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">s<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">hints<pos:position pos:line="10" pos:column="21"/></name></name></expr>)<pos:position pos:line="10" pos:column="22"/></condition><then pos:line="10" pos:column="22"> <block pos:line="10" pos:column="23">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><name><name pos:line="11" pos:column="22">state<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">am_empty_patch<pos:position pos:line="11" pos:column="43"/></name></name></expr>)<pos:position pos:line="11" pos:column="44"/></condition><then pos:line="11" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">status_printf_ln<pos:position pos:line="12" pos:column="41"/></name><argument_list pos:line="12" pos:column="41">(<argument><expr><name pos:line="12" pos:column="42">s<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">color<pos:position pos:line="12" pos:column="50"/></name></expr></argument>,
				<argument><expr><call><name pos:line="13" pos:column="33">_<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><literal type="string" pos:line="13" pos:column="35">"  (fix conflicts and then run \"git am --continue\")"<pos:position pos:line="13" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="92"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">status_printf_ln<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">s<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="37">color<pos:position pos:line="14" pos:column="42"/></name></expr></argument>,
			<argument><expr><call><name pos:line="15" pos:column="25">_<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><literal type="string" pos:line="15" pos:column="27">"  (use \"git am --skip\" to skip this patch)"<pos:position pos:line="15" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="76"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">status_printf_ln<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">s<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">color<pos:position pos:line="16" pos:column="42"/></name></expr></argument>,
			<argument><expr><call><name pos:line="17" pos:column="25">_<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><literal type="string" pos:line="17" pos:column="27">"  (use \"git am --abort\" to restore the original branch)"<pos:position pos:line="17" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="89"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">wt_longstatus_print_trailer<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument><expr><name pos:line="19" pos:column="37">s<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

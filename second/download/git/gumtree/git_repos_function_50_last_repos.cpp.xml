<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_50_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">need_large_offset<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">off_t<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">offset<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name><name pos:line="1" pos:column="50">struct<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">pack_idx_option<pos:position pos:line="1" pos:column="72"/></name></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">opts<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">uint32_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">ofsval<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">(<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">offset<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&gt;&gt;<pos:position pos:line="5" pos:column="26"/></operator> <literal type="number" pos:line="5" pos:column="24">31<pos:position pos:line="5" pos:column="26"/></literal><operator pos:line="5" pos:column="26">)<pos:position pos:line="5" pos:column="27"/></operator> <operator pos:line="5" pos:column="28">||<pos:position pos:line="5" pos:column="30"/></operator> <operator pos:line="5" pos:column="31">(<pos:position pos:line="5" pos:column="32"/></operator><name><name pos:line="5" pos:column="32">opts<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">off32_limit<pos:position pos:line="5" pos:column="49"/></name></name> <operator pos:line="5" pos:column="50">&lt;<pos:position pos:line="5" pos:column="54"/></operator> <name pos:line="5" pos:column="52">offset<pos:position pos:line="5" pos:column="58"/></name><operator pos:line="5" pos:column="58">)<pos:position pos:line="5" pos:column="59"/></operator></expr>)<pos:position pos:line="5" pos:column="60"/></condition><then pos:line="5" pos:column="60">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">1<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name><name pos:line="7" pos:column="14">opts<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">anomaly_nr<pos:position pos:line="7" pos:column="30"/></name></name></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="9" pos:column="9">ofsval<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">offset<pos:position pos:line="9" pos:column="24"/></name></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>
	<return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">!<pos:position pos:line="10" pos:column="17"/></operator><operator pos:line="10" pos:column="17">!<pos:position pos:line="10" pos:column="18"/></operator><call><name pos:line="10" pos:column="18">bsearch<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><operator pos:line="10" pos:column="26">&amp;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="27">ofsval<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="35">opts<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">anomaly<pos:position pos:line="10" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="50">opts<pos:position pos:line="10" pos:column="54"/></name><operator pos:line="10" pos:column="54">-&gt;<pos:position pos:line="10" pos:column="59"/></operator><name pos:line="10" pos:column="56">anomaly_nr<pos:position pos:line="10" pos:column="66"/></name></name></expr></argument>,
			 <argument><expr><sizeof pos:line="11" pos:column="26">sizeof<argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">ofsval<pos:position pos:line="11" pos:column="39"/></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">cmp_uint32<pos:position pos:line="11" pos:column="52"/></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

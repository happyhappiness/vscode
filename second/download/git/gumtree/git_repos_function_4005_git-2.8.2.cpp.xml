<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4005_git-2.8.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">init_display_notes<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">display_notes_opt<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">opt<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">display_ref_env<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">load_config_refs<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><literal type="number" pos:line="4" pos:column="32">0<pos:position pos:line="4" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<expr_stmt><expr><name><name pos:line="5" pos:column="9">display_notes_refs<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">.<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">strdup_strings<pos:position pos:line="5" pos:column="42"/></name></name> <operator pos:line="5" pos:column="43">=<pos:position pos:line="5" pos:column="44"/></operator> <literal type="number" pos:line="5" pos:column="45">1<pos:position pos:line="5" pos:column="46"/></literal></expr>;<pos:position pos:line="5" pos:column="47"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">assert<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><operator pos:line="7" pos:column="16">!<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">display_notes_trees<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">opt<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">||<pos:position pos:line="9" pos:column="20"/></operator> <name><name pos:line="9" pos:column="21">opt<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">use_default_notes<pos:position pos:line="9" pos:column="43"/></name></name> <operator pos:line="9" pos:column="44">&gt;<pos:position pos:line="9" pos:column="48"/></operator> <literal type="number" pos:line="9" pos:column="46">0<pos:position pos:line="9" pos:column="47"/></literal> <operator pos:line="9" pos:column="48">||<pos:position pos:line="9" pos:column="50"/></operator>
	    <operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><name><name pos:line="10" pos:column="14">opt<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">use_default_notes<pos:position pos:line="10" pos:column="36"/></name></name> <operator pos:line="10" pos:column="37">==<pos:position pos:line="10" pos:column="39"/></operator> <operator pos:line="10" pos:column="40">-<pos:position pos:line="10" pos:column="41"/></operator><literal type="number" pos:line="10" pos:column="41">1<pos:position pos:line="10" pos:column="42"/></literal> <operator pos:line="10" pos:column="43">&amp;&amp;<pos:position pos:line="10" pos:column="53"/></operator> <operator pos:line="10" pos:column="46">!<pos:position pos:line="10" pos:column="47"/></operator><name><name pos:line="10" pos:column="47">opt<pos:position pos:line="10" pos:column="50"/></name><operator pos:line="10" pos:column="50">-&gt;<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="52">extra_notes_refs<pos:position pos:line="10" pos:column="68"/></name><operator pos:line="10" pos:column="68">.<pos:position pos:line="10" pos:column="69"/></operator><name pos:line="10" pos:column="69">nr<pos:position pos:line="10" pos:column="71"/></name></name><operator pos:line="10" pos:column="71">)<pos:position pos:line="10" pos:column="72"/></operator></expr>)<pos:position pos:line="10" pos:column="73"/></condition><then pos:line="10" pos:column="73"> <block pos:line="10" pos:column="74">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">string_list_append<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><operator pos:line="11" pos:column="36">&amp;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="37">display_notes_refs<pos:position pos:line="11" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="57">default_notes_ref<pos:position pos:line="11" pos:column="74"/></name><argument_list pos:line="11" pos:column="74">()<pos:position pos:line="11" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><name pos:line="12" pos:column="17">display_ref_env<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">=<pos:position pos:line="12" pos:column="34"/></operator> <call><name pos:line="12" pos:column="35">getenv<pos:position pos:line="12" pos:column="41"/></name><argument_list pos:line="12" pos:column="41">(<argument><expr><name pos:line="12" pos:column="42">GIT_NOTES_DISPLAY_REF_ENVIRONMENT<pos:position pos:line="12" pos:column="75"/></name></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="77"/></expr_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">display_ref_env<pos:position pos:line="13" pos:column="36"/></name></expr>)<pos:position pos:line="13" pos:column="37"/></condition><then pos:line="13" pos:column="37"> <block pos:line="13" pos:column="38">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">string_list_add_refs_from_colon_sep<pos:position pos:line="14" pos:column="60"/></name><argument_list pos:line="14" pos:column="60">(<argument><expr><operator pos:line="14" pos:column="61">&amp;<pos:position pos:line="14" pos:column="66"/></operator><name pos:line="14" pos:column="62">display_notes_refs<pos:position pos:line="14" pos:column="80"/></name></expr></argument>,
							    <argument><expr><name pos:line="15" pos:column="61">display_ref_env<pos:position pos:line="15" pos:column="76"/></name></expr></argument>)<pos:position pos:line="15" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><name pos:line="16" pos:column="25">load_config_refs<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">=<pos:position pos:line="16" pos:column="43"/></operator> <literal type="number" pos:line="16" pos:column="44">0<pos:position pos:line="16" pos:column="45"/></literal></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></then> <else pos:line="17" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">load_config_refs<pos:position pos:line="18" pos:column="41"/></name> <operator pos:line="18" pos:column="42">=<pos:position pos:line="18" pos:column="43"/></operator> <literal type="number" pos:line="18" pos:column="44">1<pos:position pos:line="18" pos:column="45"/></literal></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt></block></else></if>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="21" pos:column="9">git_config<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">notes_display_config<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="42">&amp;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="43">load_config_refs<pos:position pos:line="21" pos:column="59"/></name></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">opt<pos:position pos:line="23" pos:column="16"/></name></expr>)<pos:position pos:line="23" pos:column="17"/></condition><then pos:line="23" pos:column="17"> <block pos:line="23" pos:column="18">{
		<decl_stmt><decl><type><name><name pos:line="24" pos:column="17">struct<pos:position pos:line="24" pos:column="23"/></name> <name pos:line="24" pos:column="24">string_list_item<pos:position pos:line="24" pos:column="40"/></name></name> <modifier pos:line="24" pos:column="41">*<pos:position pos:line="24" pos:column="42"/></modifier></type><name pos:line="24" pos:column="42">item<pos:position pos:line="24" pos:column="46"/></name></decl>;<pos:position pos:line="24" pos:column="47"/></decl_stmt>
		<macro><name pos:line="25" pos:column="17">for_each_string_list_item<pos:position pos:line="25" pos:column="42"/></name><argument_list pos:line="25" pos:column="42">(<argument pos:line="25" pos:column="43">item<pos:position pos:line="25" pos:column="47"/></argument>, <argument pos:line="25" pos:column="49">&amp;opt-&gt;extra_notes_refs<pos:position pos:line="25" pos:column="71"/></argument>)<pos:position pos:line="25" pos:column="72"/></argument_list></macro>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">string_list_add_refs_by_glob<pos:position pos:line="26" pos:column="53"/></name><argument_list pos:line="26" pos:column="53">(<argument><expr><operator pos:line="26" pos:column="54">&amp;<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="55">display_notes_refs<pos:position pos:line="26" pos:column="73"/></name></expr></argument>,
						     <argument><expr><name><name pos:line="27" pos:column="54">item<pos:position pos:line="27" pos:column="58"/></name><operator pos:line="27" pos:column="58">-&gt;<pos:position pos:line="27" pos:column="63"/></operator><name pos:line="27" pos:column="60">string<pos:position pos:line="27" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="30" pos:column="9">display_notes_trees<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <call><name pos:line="30" pos:column="31">load_notes_trees<pos:position pos:line="30" pos:column="47"/></name><argument_list pos:line="30" pos:column="47">(<argument><expr><operator pos:line="30" pos:column="48">&amp;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="49">display_notes_refs<pos:position pos:line="30" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="69">0<pos:position pos:line="30" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">string_list_clear<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><operator pos:line="31" pos:column="27">&amp;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="28">display_notes_refs<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="48">0<pos:position pos:line="31" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

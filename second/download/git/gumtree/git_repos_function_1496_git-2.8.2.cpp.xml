<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1496_git-2.8.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">create_branch<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">head<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>,
		   <parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">name<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">start_name<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
		   <parameter><decl><type><name pos:line="3" pos:column="20">int<pos:position pos:line="3" pos:column="23"/></name></type> <name pos:line="3" pos:column="24">force<pos:position pos:line="3" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="31">int<pos:position pos:line="3" pos:column="34"/></name></type> <name pos:line="3" pos:column="35">reflog<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="43">int<pos:position pos:line="3" pos:column="46"/></name></type> <name pos:line="3" pos:column="47">clobber_head<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>,
		   <parameter><decl><type><name pos:line="4" pos:column="20">int<pos:position pos:line="4" pos:column="23"/></name></type> <name pos:line="4" pos:column="24">quiet<pos:position pos:line="4" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="4" pos:column="31">enum<pos:position pos:line="4" pos:column="35"/></name> <name pos:line="4" pos:column="36">branch_track<pos:position pos:line="4" pos:column="48"/></name></name></type> <name pos:line="4" pos:column="49">track<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="55"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">commit<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">char<pos:position pos:line="7" pos:column="22"/></name></type> <name><name pos:line="7" pos:column="23">sha1<pos:position pos:line="7" pos:column="27"/></name><index pos:line="7" pos:column="27">[<expr><literal type="number" pos:line="7" pos:column="28">20<pos:position pos:line="7" pos:column="30"/></literal></expr>]<pos:position pos:line="7" pos:column="31"/></index></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">real_ref<pos:position pos:line="8" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="8" pos:column="25">msg<pos:position pos:line="8" pos:column="28"/></name><index pos:line="8" pos:column="28">[<expr><name pos:line="8" pos:column="29">PATH_MAX<pos:position pos:line="8" pos:column="37"/></name> <operator pos:line="8" pos:column="38">+<pos:position pos:line="8" pos:column="39"/></operator> <literal type="number" pos:line="8" pos:column="40">20<pos:position pos:line="8" pos:column="42"/></literal></expr>]<pos:position pos:line="8" pos:column="43"/></index></name></decl>;<pos:position pos:line="8" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">strbuf<pos:position pos:line="9" pos:column="22"/></name></name></type> <name pos:line="9" pos:column="23">ref<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><name pos:line="9" pos:column="29">STRBUF_INIT<pos:position pos:line="9" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">forcing<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><literal type="number" pos:line="10" pos:column="23">0<pos:position pos:line="10" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">dont_change_ref<pos:position pos:line="11" pos:column="28"/></name> <init pos:line="11" pos:column="29">= <expr><literal type="number" pos:line="11" pos:column="31">0<pos:position pos:line="11" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">explicit_tracking<pos:position pos:line="12" pos:column="30"/></name> <init pos:line="12" pos:column="31">= <expr><literal type="number" pos:line="12" pos:column="33">0<pos:position pos:line="12" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="35"/></decl_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">track<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">==<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">BRANCH_TRACK_EXPLICIT<pos:position pos:line="14" pos:column="43"/></name> <operator pos:line="14" pos:column="44">||<pos:position pos:line="14" pos:column="46"/></operator> <name pos:line="14" pos:column="47">track<pos:position pos:line="14" pos:column="52"/></name> <operator pos:line="14" pos:column="53">==<pos:position pos:line="14" pos:column="55"/></operator> <name pos:line="14" pos:column="56">BRANCH_TRACK_OVERRIDE<pos:position pos:line="14" pos:column="77"/></name></expr>)<pos:position pos:line="14" pos:column="78"/></condition><then pos:line="14" pos:column="78">
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">explicit_tracking<pos:position pos:line="15" pos:column="34"/></name> <operator pos:line="15" pos:column="35">=<pos:position pos:line="15" pos:column="36"/></operator> <literal type="number" pos:line="15" pos:column="37">1<pos:position pos:line="15" pos:column="38"/></literal></expr>;<pos:position pos:line="15" pos:column="39"/></expr_stmt></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">validate_new_branchname<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">name<pos:position pos:line="17" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="43">&amp;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="44">ref<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">force<pos:position pos:line="17" pos:column="54"/></name></expr></argument>,
				    <argument><expr><name pos:line="18" pos:column="37">track<pos:position pos:line="18" pos:column="42"/></name> <operator pos:line="18" pos:column="43">==<pos:position pos:line="18" pos:column="45"/></operator> <name pos:line="18" pos:column="46">BRANCH_TRACK_OVERRIDE<pos:position pos:line="18" pos:column="67"/></name> <operator pos:line="18" pos:column="68">||<pos:position pos:line="18" pos:column="70"/></operator>
				    <name pos:line="19" pos:column="37">clobber_head<pos:position pos:line="19" pos:column="49"/></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="51"/></condition><then pos:line="19" pos:column="51"> <block pos:line="19" pos:column="52">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">force<pos:position pos:line="20" pos:column="27"/></name></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="25">dont_change_ref<pos:position pos:line="21" pos:column="40"/></name> <operator pos:line="21" pos:column="41">=<pos:position pos:line="21" pos:column="42"/></operator> <literal type="number" pos:line="21" pos:column="43">1<pos:position pos:line="21" pos:column="44"/></literal></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt></block></then>
		<else pos:line="22" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="25">forcing<pos:position pos:line="23" pos:column="32"/></name> <operator pos:line="23" pos:column="33">=<pos:position pos:line="23" pos:column="34"/></operator> <literal type="number" pos:line="23" pos:column="35">1<pos:position pos:line="23" pos:column="36"/></literal></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt></block></else></if>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="26" pos:column="9">real_ref<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="20">NULL<pos:position pos:line="26" pos:column="24"/></name></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">get_sha1<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">start_name<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="34">sha1<pos:position pos:line="27" pos:column="38"/></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="40"/></condition><then pos:line="27" pos:column="40"> <block pos:line="27" pos:column="41">{
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">explicit_tracking<pos:position pos:line="28" pos:column="38"/></name></expr>)<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39"> <block pos:line="28" pos:column="40">{
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><name pos:line="29" pos:column="29">advice_set_upstream_failure<pos:position pos:line="29" pos:column="56"/></name></expr>)<pos:position pos:line="29" pos:column="57"/></condition><then pos:line="29" pos:column="57"> <block pos:line="29" pos:column="58">{
				<expr_stmt><expr><call><name pos:line="30" pos:column="33">error<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">(<argument><expr><call><name pos:line="30" pos:column="39">_<pos:position pos:line="30" pos:column="40"/></name><argument_list pos:line="30" pos:column="40">(<argument><expr><name pos:line="30" pos:column="41">upstream_missing<pos:position pos:line="30" pos:column="57"/></name></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="30" pos:column="60">start_name<pos:position pos:line="30" pos:column="70"/></name></expr></argument>)<pos:position pos:line="30" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="72"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="31" pos:column="33">advise<pos:position pos:line="31" pos:column="39"/></name><argument_list pos:line="31" pos:column="39">(<argument><expr><call><name pos:line="31" pos:column="40">_<pos:position pos:line="31" pos:column="41"/></name><argument_list pos:line="31" pos:column="41">(<argument><expr><name pos:line="31" pos:column="42">upstream_advice<pos:position pos:line="31" pos:column="57"/></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="32" pos:column="33">exit<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><literal type="number" pos:line="32" pos:column="38">1<pos:position pos:line="32" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
			}<pos:position pos:line="33" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">die<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><call><name pos:line="34" pos:column="29">_<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">upstream_missing<pos:position pos:line="34" pos:column="47"/></name></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="34" pos:column="50">start_name<pos:position pos:line="34" pos:column="60"/></name></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">die<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><call><name pos:line="36" pos:column="21">_<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><literal type="string" pos:line="36" pos:column="23">"Not a valid object name: '%s'."<pos:position pos:line="36" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="36" pos:column="58">start_name<pos:position pos:line="36" pos:column="68"/></name></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="70"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

	<switch pos:line="39" pos:column="9">switch <condition pos:line="39" pos:column="16">(<expr><call><name pos:line="39" pos:column="17">dwim_ref<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><name pos:line="39" pos:column="26">start_name<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="38">strlen<pos:position pos:line="39" pos:column="44"/></name><argument_list pos:line="39" pos:column="44">(<argument><expr><name pos:line="39" pos:column="45">start_name<pos:position pos:line="39" pos:column="55"/></name></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="39" pos:column="58">sha1<pos:position pos:line="39" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="64">&amp;<pos:position pos:line="39" pos:column="69"/></operator><name pos:line="39" pos:column="65">real_ref<pos:position pos:line="39" pos:column="73"/></name></expr></argument>)<pos:position pos:line="39" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="75"/></condition> <block pos:line="39" pos:column="76">{
	<case pos:line="40" pos:column="9">case <expr><literal type="number" pos:line="40" pos:column="14">0<pos:position pos:line="40" pos:column="15"/></literal></expr>:<pos:position pos:line="40" pos:column="16"/></case>
		<comment type="block" pos:line="41" pos:column="17">/* Not branching from any existing branch */</comment>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">explicit_tracking<pos:position pos:line="42" pos:column="38"/></name></expr>)<pos:position pos:line="42" pos:column="39"/></condition><then pos:line="42" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="25">die<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><call><name pos:line="43" pos:column="29">_<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">upstream_not_branch<pos:position pos:line="43" pos:column="50"/></name></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="43" pos:column="53">start_name<pos:position pos:line="43" pos:column="63"/></name></expr></argument>)<pos:position pos:line="43" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="65"/></expr_stmt></block></then></if>
		<break pos:line="44" pos:column="17">break;<pos:position pos:line="44" pos:column="23"/></break>
	<case pos:line="45" pos:column="9">case <expr><literal type="number" pos:line="45" pos:column="14">1<pos:position pos:line="45" pos:column="15"/></literal></expr>:<pos:position pos:line="45" pos:column="16"/></case>
		<comment type="block" pos:line="46" pos:column="17">/* Unique completion -- good, only if it is a real branch */</comment>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><operator pos:line="47" pos:column="21">!<pos:position pos:line="47" pos:column="22"/></operator><call><name pos:line="47" pos:column="22">starts_with<pos:position pos:line="47" pos:column="33"/></name><argument_list pos:line="47" pos:column="33">(<argument><expr><name pos:line="47" pos:column="34">real_ref<pos:position pos:line="47" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="44">"refs/heads/"<pos:position pos:line="47" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="58"/></argument_list></call> <operator pos:line="47" pos:column="59">&amp;&amp;<pos:position pos:line="47" pos:column="69"/></operator>
		    <call><name pos:line="48" pos:column="21">validate_remote_tracking_branch<pos:position pos:line="48" pos:column="52"/></name><argument_list pos:line="48" pos:column="52">(<argument><expr><name pos:line="48" pos:column="53">real_ref<pos:position pos:line="48" pos:column="61"/></name></expr></argument>)<pos:position pos:line="48" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="63"/></condition><then pos:line="48" pos:column="63"> <block pos:line="48" pos:column="64">{
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><name pos:line="49" pos:column="29">explicit_tracking<pos:position pos:line="49" pos:column="46"/></name></expr>)<pos:position pos:line="49" pos:column="47"/></condition><then pos:line="49" pos:column="47">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="33">die<pos:position pos:line="50" pos:column="36"/></name><argument_list pos:line="50" pos:column="36">(<argument><expr><call><name pos:line="50" pos:column="37">_<pos:position pos:line="50" pos:column="38"/></name><argument_list pos:line="50" pos:column="38">(<argument><expr><name pos:line="50" pos:column="39">upstream_not_branch<pos:position pos:line="50" pos:column="58"/></name></expr></argument>)<pos:position pos:line="50" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="50" pos:column="61">start_name<pos:position pos:line="50" pos:column="71"/></name></expr></argument>)<pos:position pos:line="50" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="73"/></expr_stmt></block></then>
			<else pos:line="51" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="33">real_ref<pos:position pos:line="52" pos:column="41"/></name> <operator pos:line="52" pos:column="42">=<pos:position pos:line="52" pos:column="43"/></operator> <name pos:line="52" pos:column="44">NULL<pos:position pos:line="52" pos:column="48"/></name></expr>;<pos:position pos:line="52" pos:column="49"/></expr_stmt></block></else></if>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if>
		<break pos:line="54" pos:column="17">break;<pos:position pos:line="54" pos:column="23"/></break>
	<default pos:line="55" pos:column="9">default:<pos:position pos:line="55" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">die<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><call><name pos:line="56" pos:column="21">_<pos:position pos:line="56" pos:column="22"/></name><argument_list pos:line="56" pos:column="22">(<argument><expr><literal type="string" pos:line="56" pos:column="23">"Ambiguous object name: '%s'."<pos:position pos:line="56" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="56" pos:column="56">start_name<pos:position pos:line="56" pos:column="66"/></name></expr></argument>)<pos:position pos:line="56" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="68"/></expr_stmt>
		<break pos:line="57" pos:column="17">break;<pos:position pos:line="57" pos:column="23"/></break>
	}<pos:position pos:line="58" pos:column="10"/></block></switch>

	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><operator pos:line="60" pos:column="13">(<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="14">commit<pos:position pos:line="60" pos:column="20"/></name> <operator pos:line="60" pos:column="21">=<pos:position pos:line="60" pos:column="22"/></operator> <call><name pos:line="60" pos:column="23">lookup_commit_reference<pos:position pos:line="60" pos:column="46"/></name><argument_list pos:line="60" pos:column="46">(<argument><expr><name pos:line="60" pos:column="47">sha1<pos:position pos:line="60" pos:column="51"/></name></expr></argument>)<pos:position pos:line="60" pos:column="52"/></argument_list></call><operator pos:line="60" pos:column="52">)<pos:position pos:line="60" pos:column="53"/></operator> <operator pos:line="60" pos:column="54">==<pos:position pos:line="60" pos:column="56"/></operator> <name pos:line="60" pos:column="57">NULL<pos:position pos:line="60" pos:column="61"/></name></expr>)<pos:position pos:line="60" pos:column="62"/></condition><then pos:line="60" pos:column="62">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="17">die<pos:position pos:line="61" pos:column="20"/></name><argument_list pos:line="61" pos:column="20">(<argument><expr><call><name pos:line="61" pos:column="21">_<pos:position pos:line="61" pos:column="22"/></name><argument_list pos:line="61" pos:column="22">(<argument><expr><literal type="string" pos:line="61" pos:column="23">"Not a valid branch point: '%s'."<pos:position pos:line="61" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="61" pos:column="59">start_name<pos:position pos:line="61" pos:column="69"/></name></expr></argument>)<pos:position pos:line="61" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="71"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">hashcpy<pos:position pos:line="62" pos:column="16"/></name><argument_list pos:line="62" pos:column="16">(<argument><expr><name pos:line="62" pos:column="17">sha1<pos:position pos:line="62" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="23">commit<pos:position pos:line="62" pos:column="29"/></name><operator pos:line="62" pos:column="29">-&gt;<pos:position pos:line="62" pos:column="34"/></operator><name pos:line="62" pos:column="31">object<pos:position pos:line="62" pos:column="37"/></name><operator pos:line="62" pos:column="37">.<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="38">oid<pos:position pos:line="62" pos:column="41"/></name><operator pos:line="62" pos:column="41">.<pos:position pos:line="62" pos:column="42"/></operator><name pos:line="62" pos:column="42">hash<pos:position pos:line="62" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="48"/></expr_stmt>

	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">forcing<pos:position pos:line="64" pos:column="20"/></name></expr>)<pos:position pos:line="64" pos:column="21"/></condition><then pos:line="64" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="17">snprintf<pos:position pos:line="65" pos:column="25"/></name><argument_list pos:line="65" pos:column="25">(<argument><expr><name pos:line="65" pos:column="26">msg<pos:position pos:line="65" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="31">sizeof <name pos:line="65" pos:column="38">msg<pos:position pos:line="65" pos:column="41"/></name></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="43">"branch: Reset to %s"<pos:position pos:line="65" pos:column="64"/></literal></expr></argument>,
			 <argument><expr><name pos:line="66" pos:column="26">start_name<pos:position pos:line="66" pos:column="36"/></name></expr></argument>)<pos:position pos:line="66" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="38"/></expr_stmt></block></then>
	<elseif pos:line="67" pos:column="9">else <if pos:line="67" pos:column="14">if <condition pos:line="67" pos:column="17">(<expr><operator pos:line="67" pos:column="18">!<pos:position pos:line="67" pos:column="19"/></operator><name pos:line="67" pos:column="19">dont_change_ref<pos:position pos:line="67" pos:column="34"/></name></expr>)<pos:position pos:line="67" pos:column="35"/></condition><then pos:line="67" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="17">snprintf<pos:position pos:line="68" pos:column="25"/></name><argument_list pos:line="68" pos:column="25">(<argument><expr><name pos:line="68" pos:column="26">msg<pos:position pos:line="68" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="68" pos:column="31">sizeof <name pos:line="68" pos:column="38">msg<pos:position pos:line="68" pos:column="41"/></name></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="43">"branch: Created from %s"<pos:position pos:line="68" pos:column="68"/></literal></expr></argument>,
			 <argument><expr><name pos:line="69" pos:column="26">start_name<pos:position pos:line="69" pos:column="36"/></name></expr></argument>)<pos:position pos:line="69" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="38"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">reflog<pos:position pos:line="71" pos:column="19"/></name></expr>)<pos:position pos:line="71" pos:column="20"/></condition><then pos:line="71" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="17">log_all_ref_updates<pos:position pos:line="72" pos:column="36"/></name> <operator pos:line="72" pos:column="37">=<pos:position pos:line="72" pos:column="38"/></operator> <literal type="number" pos:line="72" pos:column="39">1<pos:position pos:line="72" pos:column="40"/></literal></expr>;<pos:position pos:line="72" pos:column="41"/></expr_stmt></block></then></if>

	<if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><operator pos:line="74" pos:column="13">!<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="14">dont_change_ref<pos:position pos:line="74" pos:column="29"/></name></expr>)<pos:position pos:line="74" pos:column="30"/></condition><then pos:line="74" pos:column="30"> <block pos:line="74" pos:column="31">{
		<decl_stmt><decl><type><name><name pos:line="75" pos:column="17">struct<pos:position pos:line="75" pos:column="23"/></name> <name pos:line="75" pos:column="24">ref_transaction<pos:position pos:line="75" pos:column="39"/></name></name> <modifier pos:line="75" pos:column="40">*<pos:position pos:line="75" pos:column="41"/></modifier></type><name pos:line="75" pos:column="41">transaction<pos:position pos:line="75" pos:column="52"/></name></decl>;<pos:position pos:line="75" pos:column="53"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="76" pos:column="17">struct<pos:position pos:line="76" pos:column="23"/></name> <name pos:line="76" pos:column="24">strbuf<pos:position pos:line="76" pos:column="30"/></name></name></type> <name pos:line="76" pos:column="31">err<pos:position pos:line="76" pos:column="34"/></name> <init pos:line="76" pos:column="35">= <expr><name pos:line="76" pos:column="37">STRBUF_INIT<pos:position pos:line="76" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="76" pos:column="49"/></decl_stmt>

		<expr_stmt><expr><name pos:line="78" pos:column="17">transaction<pos:position pos:line="78" pos:column="28"/></name> <operator pos:line="78" pos:column="29">=<pos:position pos:line="78" pos:column="30"/></operator> <call><name pos:line="78" pos:column="31">ref_transaction_begin<pos:position pos:line="78" pos:column="52"/></name><argument_list pos:line="78" pos:column="52">(<argument><expr><operator pos:line="78" pos:column="53">&amp;<pos:position pos:line="78" pos:column="58"/></operator><name pos:line="78" pos:column="54">err<pos:position pos:line="78" pos:column="57"/></name></expr></argument>)<pos:position pos:line="78" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="59"/></expr_stmt>
		<if pos:line="79" pos:column="17">if <condition pos:line="79" pos:column="20">(<expr><operator pos:line="79" pos:column="21">!<pos:position pos:line="79" pos:column="22"/></operator><name pos:line="79" pos:column="22">transaction<pos:position pos:line="79" pos:column="33"/></name> <operator pos:line="79" pos:column="34">||<pos:position pos:line="79" pos:column="36"/></operator>
		    <call><name pos:line="80" pos:column="21">ref_transaction_update<pos:position pos:line="80" pos:column="43"/></name><argument_list pos:line="80" pos:column="43">(<argument><expr><name pos:line="80" pos:column="44">transaction<pos:position pos:line="80" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="57">ref<pos:position pos:line="80" pos:column="60"/></name><operator pos:line="80" pos:column="60">.<pos:position pos:line="80" pos:column="61"/></operator><name pos:line="80" pos:column="61">buf<pos:position pos:line="80" pos:column="64"/></name></name></expr></argument>,
					   <argument><expr><name pos:line="81" pos:column="44">sha1<pos:position pos:line="81" pos:column="48"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="81" pos:column="50">forcing<pos:position pos:line="81" pos:column="57"/></name></expr> ?<pos:position pos:line="81" pos:column="59"/></condition><then pos:line="81" pos:column="59"> <expr><name pos:line="81" pos:column="60">NULL<pos:position pos:line="81" pos:column="64"/></name></expr> <pos:position pos:line="81" pos:column="65"/></then><else pos:line="81" pos:column="65">: <expr><name pos:line="81" pos:column="67">null_sha1<pos:position pos:line="81" pos:column="76"/></name></expr></else></ternary></expr></argument>,
					   <argument><expr><literal type="number" pos:line="82" pos:column="44">0<pos:position pos:line="82" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="47">msg<pos:position pos:line="82" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="52">&amp;<pos:position pos:line="82" pos:column="57"/></operator><name pos:line="82" pos:column="53">err<pos:position pos:line="82" pos:column="56"/></name></expr></argument>)<pos:position pos:line="82" pos:column="57"/></argument_list></call> <operator pos:line="82" pos:column="58">||<pos:position pos:line="82" pos:column="60"/></operator>
		    <call><name pos:line="83" pos:column="21">ref_transaction_commit<pos:position pos:line="83" pos:column="43"/></name><argument_list pos:line="83" pos:column="43">(<argument><expr><name pos:line="83" pos:column="44">transaction<pos:position pos:line="83" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="57">&amp;<pos:position pos:line="83" pos:column="62"/></operator><name pos:line="83" pos:column="58">err<pos:position pos:line="83" pos:column="61"/></name></expr></argument>)<pos:position pos:line="83" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="63"/></condition><then pos:line="83" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="84" pos:column="25">die<pos:position pos:line="84" pos:column="28"/></name><argument_list pos:line="84" pos:column="28">(<argument><expr><literal type="string" pos:line="84" pos:column="29">"%s"<pos:position pos:line="84" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="35">err<pos:position pos:line="84" pos:column="38"/></name><operator pos:line="84" pos:column="38">.<pos:position pos:line="84" pos:column="39"/></operator><name pos:line="84" pos:column="39">buf<pos:position pos:line="84" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="44"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="85" pos:column="17">ref_transaction_free<pos:position pos:line="85" pos:column="37"/></name><argument_list pos:line="85" pos:column="37">(<argument><expr><name pos:line="85" pos:column="38">transaction<pos:position pos:line="85" pos:column="49"/></name></expr></argument>)<pos:position pos:line="85" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="86" pos:column="17">strbuf_release<pos:position pos:line="86" pos:column="31"/></name><argument_list pos:line="86" pos:column="31">(<argument><expr><operator pos:line="86" pos:column="32">&amp;<pos:position pos:line="86" pos:column="37"/></operator><name pos:line="86" pos:column="33">err<pos:position pos:line="86" pos:column="36"/></name></expr></argument>)<pos:position pos:line="86" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="87" pos:column="10"/></block></then></if>

	<if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name pos:line="89" pos:column="13">real_ref<pos:position pos:line="89" pos:column="21"/></name> <operator pos:line="89" pos:column="22">&amp;&amp;<pos:position pos:line="89" pos:column="32"/></operator> <name pos:line="89" pos:column="25">track<pos:position pos:line="89" pos:column="30"/></name></expr>)<pos:position pos:line="89" pos:column="31"/></condition><then pos:line="89" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="17">setup_tracking<pos:position pos:line="90" pos:column="31"/></name><argument_list pos:line="90" pos:column="31">(<argument><expr><name><name pos:line="90" pos:column="32">ref<pos:position pos:line="90" pos:column="35"/></name><operator pos:line="90" pos:column="35">.<pos:position pos:line="90" pos:column="36"/></operator><name pos:line="90" pos:column="36">buf<pos:position pos:line="90" pos:column="39"/></name></name> <operator pos:line="90" pos:column="40">+<pos:position pos:line="90" pos:column="41"/></operator> <literal type="number" pos:line="90" pos:column="42">11<pos:position pos:line="90" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="46">real_ref<pos:position pos:line="90" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="56">track<pos:position pos:line="90" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="63">quiet<pos:position pos:line="90" pos:column="68"/></name></expr></argument>)<pos:position pos:line="90" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="70"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="92" pos:column="9">strbuf_release<pos:position pos:line="92" pos:column="23"/></name><argument_list pos:line="92" pos:column="23">(<argument><expr><operator pos:line="92" pos:column="24">&amp;<pos:position pos:line="92" pos:column="29"/></operator><name pos:line="92" pos:column="25">ref<pos:position pos:line="92" pos:column="28"/></name></expr></argument>)<pos:position pos:line="92" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="93" pos:column="9">free<pos:position pos:line="93" pos:column="13"/></name><argument_list pos:line="93" pos:column="13">(<argument><expr><name pos:line="93" pos:column="14">real_ref<pos:position pos:line="93" pos:column="22"/></name></expr></argument>)<pos:position pos:line="93" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="24"/></expr_stmt>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1866_git-2.7.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">for_each_packed_object<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">each_packed_object_fn<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">cb<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">void<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">data<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">unsigned<pos:position pos:line="1" pos:column="74"/></name></type> <name pos:line="1" pos:column="75">flags<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">packed_git<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">p<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">r<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">pack_errors<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">prepare_packed_git<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">()<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">p<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">packed_git<pos:position pos:line="8" pos:column="28"/></name></expr>;<pos:position pos:line="8" pos:column="29"/></init> <condition><expr><name pos:line="8" pos:column="30">p<pos:position pos:line="8" pos:column="31"/></name></expr>;<pos:position pos:line="8" pos:column="32"/></condition> <incr><expr><name pos:line="8" pos:column="33">p<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">=<pos:position pos:line="8" pos:column="36"/></operator> <name><name pos:line="8" pos:column="37">p<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">next<pos:position pos:line="8" pos:column="44"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="45"/></control> <block pos:line="8" pos:column="46">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">(<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">flags<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">&amp;<pos:position pos:line="9" pos:column="33"/></operator> <name pos:line="9" pos:column="30">FOR_EACH_OBJECT_LOCAL_ONLY<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">)<pos:position pos:line="9" pos:column="57"/></operator> <operator pos:line="9" pos:column="58">&amp;&amp;<pos:position pos:line="9" pos:column="68"/></operator> <operator pos:line="9" pos:column="61">!<pos:position pos:line="9" pos:column="62"/></operator><name><name pos:line="9" pos:column="62">p<pos:position pos:line="9" pos:column="63"/></name><operator pos:line="9" pos:column="63">-&gt;<pos:position pos:line="9" pos:column="68"/></operator><name pos:line="9" pos:column="65">pack_local<pos:position pos:line="9" pos:column="75"/></name></name></expr>)<pos:position pos:line="9" pos:column="76"/></condition><then pos:line="9" pos:column="76">
			<block type="pseudo"><continue pos:line="10" pos:column="25">continue;<pos:position pos:line="10" pos:column="34"/></continue></block></then></if>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">open_pack_index<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">p<pos:position pos:line="11" pos:column="38"/></name></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40"> <block pos:line="11" pos:column="41">{
			<expr_stmt><expr><name pos:line="12" pos:column="25">pack_errors<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">=<pos:position pos:line="12" pos:column="38"/></operator> <literal type="number" pos:line="12" pos:column="39">1<pos:position pos:line="12" pos:column="40"/></literal></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
			<continue pos:line="13" pos:column="25">continue;<pos:position pos:line="13" pos:column="34"/></continue>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="15" pos:column="17">r<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">for_each_object_in_pack<pos:position pos:line="15" pos:column="44"/></name><argument_list pos:line="15" pos:column="44">(<argument><expr><name pos:line="15" pos:column="45">p<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="48">cb<pos:position pos:line="15" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="52">data<pos:position pos:line="15" pos:column="56"/></name></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="58"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">r<pos:position pos:line="16" pos:column="22"/></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23">
			<block type="pseudo"><break pos:line="17" pos:column="25">break;<pos:position pos:line="17" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
	<return pos:line="19" pos:column="9">return <expr><ternary><condition><expr><name pos:line="19" pos:column="16">r<pos:position pos:line="19" pos:column="17"/></name></expr> ?<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19"> <expr><name pos:line="19" pos:column="20">r<pos:position pos:line="19" pos:column="21"/></name></expr> <pos:position pos:line="19" pos:column="22"/></then><else pos:line="19" pos:column="22">: <expr><name pos:line="19" pos:column="24">pack_errors<pos:position pos:line="19" pos:column="35"/></name></expr></else></ternary></expr>;<pos:position pos:line="19" pos:column="36"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_695_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">git_configset_get_bool_or_int<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">config_set<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">cs<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">key<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="2" pos:column="33">int<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">is_bool<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">int<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">dest<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">value<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><call><name pos:line="5" pos:column="14">git_configset_get_value<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">(<argument><expr><name pos:line="5" pos:column="38">cs<pos:position pos:line="5" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="42">key<pos:position pos:line="5" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="47">&amp;<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="48">value<pos:position pos:line="5" pos:column="53"/></name></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="55"/></condition><then pos:line="5" pos:column="55"> <block pos:line="5" pos:column="56">{
		<expr_stmt><expr><operator pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">dest<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <call><name pos:line="6" pos:column="25">git_config_bool_or_int<pos:position pos:line="6" pos:column="47"/></name><argument_list pos:line="6" pos:column="47">(<argument><expr><name pos:line="6" pos:column="48">key<pos:position pos:line="6" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="53">value<pos:position pos:line="6" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="60">is_bool<pos:position pos:line="6" pos:column="67"/></name></expr></argument>)<pos:position pos:line="6" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="69"/></expr_stmt>
		<return pos:line="7" pos:column="17">return <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr>;<pos:position pos:line="7" pos:column="26"/></return>
	}<pos:position pos:line="8" pos:column="10"/></block></then> <else pos:line="8" pos:column="11">else
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">1<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></else></if>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

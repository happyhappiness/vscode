<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3965_git-2.3.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_stripspace<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">argc<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">argv<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">prefix<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">buf<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">STRBUF_INIT<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">strip_comments<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><literal type="number" pos:line="4" pos:column="30">0<pos:position pos:line="4" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<enum pos:line="5" pos:column="9">enum <block pos:line="5" pos:column="14">{ <decl><name pos:line="5" pos:column="16">INVAL<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>, <decl><name pos:line="5" pos:column="27">STRIP_SPACE<pos:position pos:line="5" pos:column="38"/></name> <init pos:line="5" pos:column="39">= <expr><literal type="number" pos:line="5" pos:column="41">1<pos:position pos:line="5" pos:column="42"/></literal></expr></init></decl>, <decl><name pos:line="5" pos:column="44">COMMENT_LINES<pos:position pos:line="5" pos:column="57"/></name> <init pos:line="5" pos:column="58">= <expr><literal type="number" pos:line="5" pos:column="60">2<pos:position pos:line="5" pos:column="61"/></literal></expr></init></decl> }<pos:position pos:line="5" pos:column="63"/></block> <decl><name pos:line="5" pos:column="64">mode<pos:position pos:line="5" pos:column="68"/></name> <init pos:line="5" pos:column="69">= <expr><name pos:line="5" pos:column="71">STRIP_SPACE<pos:position pos:line="5" pos:column="82"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="83"/></enum>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">argc<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">==<pos:position pos:line="7" pos:column="20"/></operator> <literal type="number" pos:line="7" pos:column="21">2<pos:position pos:line="7" pos:column="22"/></literal></expr>)<pos:position pos:line="7" pos:column="23"/></condition><then pos:line="7" pos:column="23"> <block pos:line="7" pos:column="24">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><call><name pos:line="8" pos:column="22">strcmp<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name><name pos:line="8" pos:column="29">argv<pos:position pos:line="8" pos:column="33"/></name><index pos:line="8" pos:column="33">[<expr><literal type="number" pos:line="8" pos:column="34">1<pos:position pos:line="8" pos:column="35"/></literal></expr>]<pos:position pos:line="8" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="38">"-s"<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call> <operator pos:line="8" pos:column="44">||<pos:position pos:line="8" pos:column="46"/></operator>
		    <operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><call><name pos:line="9" pos:column="22">strcmp<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name><name pos:line="9" pos:column="29">argv<pos:position pos:line="9" pos:column="33"/></name><index pos:line="9" pos:column="33">[<expr><literal type="number" pos:line="9" pos:column="34">1<pos:position pos:line="9" pos:column="35"/></literal></expr>]<pos:position pos:line="9" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="38">"--strip-comments"<pos:position pos:line="9" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="58"/></condition><then pos:line="9" pos:column="58"> <block pos:line="9" pos:column="59">{
			<expr_stmt><expr><name pos:line="10" pos:column="25">strip_comments<pos:position pos:line="10" pos:column="39"/></name> <operator pos:line="10" pos:column="40">=<pos:position pos:line="10" pos:column="41"/></operator> <literal type="number" pos:line="10" pos:column="42">1<pos:position pos:line="10" pos:column="43"/></literal></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="11" pos:column="18"/></block></then> <elseif pos:line="11" pos:column="19">else <if pos:line="11" pos:column="24">if <condition pos:line="11" pos:column="27">(<expr><operator pos:line="11" pos:column="28">!<pos:position pos:line="11" pos:column="29"/></operator><call><name pos:line="11" pos:column="29">strcmp<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name><name pos:line="11" pos:column="36">argv<pos:position pos:line="11" pos:column="40"/></name><index pos:line="11" pos:column="40">[<expr><literal type="number" pos:line="11" pos:column="41">1<pos:position pos:line="11" pos:column="42"/></literal></expr>]<pos:position pos:line="11" pos:column="43"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="45">"-c"<pos:position pos:line="11" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call> <operator pos:line="11" pos:column="51">||<pos:position pos:line="11" pos:column="53"/></operator>
			   <operator pos:line="12" pos:column="28">!<pos:position pos:line="12" pos:column="29"/></operator><call><name pos:line="12" pos:column="29">strcmp<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name><name pos:line="12" pos:column="36">argv<pos:position pos:line="12" pos:column="40"/></name><index pos:line="12" pos:column="40">[<expr><literal type="number" pos:line="12" pos:column="41">1<pos:position pos:line="12" pos:column="42"/></literal></expr>]<pos:position pos:line="12" pos:column="43"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="45">"--comment-lines"<pos:position pos:line="12" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="64"/></condition><then pos:line="12" pos:column="64"> <block pos:line="12" pos:column="65">{
			<expr_stmt><expr><name pos:line="13" pos:column="25">mode<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">=<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">COMMENT_LINES<pos:position pos:line="13" pos:column="45"/></name></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if></elseif> <else pos:line="14" pos:column="19">else <block pos:line="14" pos:column="24">{
			<expr_stmt><expr><name pos:line="15" pos:column="25">mode<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">=<pos:position pos:line="15" pos:column="31"/></operator> <name pos:line="15" pos:column="32">INVAL<pos:position pos:line="15" pos:column="37"/></name></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></else></if>
	}<pos:position pos:line="17" pos:column="10"/></block></then> <elseif pos:line="17" pos:column="11">else <if pos:line="17" pos:column="16">if <condition pos:line="17" pos:column="19">(<expr><name pos:line="17" pos:column="20">argc<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">&gt;<pos:position pos:line="17" pos:column="29"/></operator> <literal type="number" pos:line="17" pos:column="27">1<pos:position pos:line="17" pos:column="28"/></literal></expr>)<pos:position pos:line="17" pos:column="29"/></condition><then pos:line="17" pos:column="29"> <block pos:line="17" pos:column="30">{
		<expr_stmt><expr><name pos:line="18" pos:column="17">mode<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">INVAL<pos:position pos:line="18" pos:column="29"/></name></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">mode<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">==<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">INVAL<pos:position pos:line="21" pos:column="26"/></name></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">usage<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">usage_msg<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">strip_comments<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">||<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="31">mode<pos:position pos:line="24" pos:column="35"/></name> <operator pos:line="24" pos:column="36">==<pos:position pos:line="24" pos:column="38"/></operator> <name pos:line="24" pos:column="39">COMMENT_LINES<pos:position pos:line="24" pos:column="52"/></name></expr>)<pos:position pos:line="24" pos:column="53"/></condition><then pos:line="24" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">git_config<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">git_default_config<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="48">NULL<pos:position pos:line="25" pos:column="52"/></name></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="54"/></expr_stmt></block></then></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">strbuf_read<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><operator pos:line="27" pos:column="25">&amp;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="26">buf<pos:position pos:line="27" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="31">0<pos:position pos:line="27" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="34">1024<pos:position pos:line="27" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call> <operator pos:line="27" pos:column="40">&lt;<pos:position pos:line="27" pos:column="44"/></operator> <literal type="number" pos:line="27" pos:column="42">0<pos:position pos:line="27" pos:column="43"/></literal></expr>)<pos:position pos:line="27" pos:column="44"/></condition><then pos:line="27" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">die_errno<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><literal type="string" pos:line="28" pos:column="27">"could not read the input"<pos:position pos:line="28" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt></block></then></if>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">mode<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">==<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="21">STRIP_SPACE<pos:position pos:line="30" pos:column="32"/></name></expr>)<pos:position pos:line="30" pos:column="33"/></condition><then pos:line="30" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">stripspace<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><operator pos:line="31" pos:column="28">&amp;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="29">buf<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">strip_comments<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt></block></then>
	<else pos:line="32" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">comment_lines<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><operator pos:line="33" pos:column="31">&amp;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="32">buf<pos:position pos:line="33" pos:column="35"/></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="35" pos:column="9">write_or_die<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><literal type="number" pos:line="35" pos:column="22">1<pos:position pos:line="35" pos:column="23"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="25">buf<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">.<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">buf<pos:position pos:line="35" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="34">buf<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">.<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="38">len<pos:position pos:line="35" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="36" pos:column="9">strbuf_release<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><operator pos:line="36" pos:column="24">&amp;<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="25">buf<pos:position pos:line="36" pos:column="28"/></name></expr></argument>)<pos:position pos:line="36" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="30"/></expr_stmt>
	<return pos:line="37" pos:column="9">return <expr><literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_77_git-2.14.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">help_unknown_ref<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">ref<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">cmd<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="57">const<pos:position pos:line="1" pos:column="62"/></specifier> <name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">error<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">string_list<pos:position pos:line="4" pos:column="27"/></name></name></type> <name pos:line="4" pos:column="28">suggested_refs<pos:position pos:line="4" pos:column="42"/></name> <init pos:line="4" pos:column="43">= <expr><call><name pos:line="4" pos:column="45">guess_refs<pos:position pos:line="4" pos:column="55"/></name><argument_list pos:line="4" pos:column="55">(<argument><expr><name pos:line="4" pos:column="56">ref<pos:position pos:line="4" pos:column="59"/></name></expr></argument>)<pos:position pos:line="4" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="61"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">fprintf_ln<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">stderr<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="28">_<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><literal type="string" pos:line="6" pos:column="30">"%s: %s - %s"<pos:position pos:line="6" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="6" pos:column="46">cmd<pos:position pos:line="6" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="51">ref<pos:position pos:line="6" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="56">error<pos:position pos:line="6" pos:column="61"/></name></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="63"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">suggested_refs<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">nr<pos:position pos:line="8" pos:column="30"/></name></name> <operator pos:line="8" pos:column="31">&gt;<pos:position pos:line="8" pos:column="35"/></operator> <literal type="number" pos:line="8" pos:column="33">0<pos:position pos:line="8" pos:column="34"/></literal></expr>)<pos:position pos:line="8" pos:column="35"/></condition><then pos:line="8" pos:column="35"> <block pos:line="8" pos:column="36">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">fprintf_ln<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">stderr<pos:position pos:line="9" pos:column="34"/></name></expr></argument>,
			   <argument><expr><call><name pos:line="10" pos:column="28">Q_<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><literal type="string" pos:line="10" pos:column="31">"\nDid you mean this?"<pos:position pos:line="10" pos:column="53"/></literal></expr></argument>,
			      <argument><expr><literal type="string" pos:line="11" pos:column="31">"\nDid you mean one of these?"<pos:position pos:line="11" pos:column="61"/></literal></expr></argument>,
			      <argument><expr><name><name pos:line="12" pos:column="31">suggested_refs<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">.<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="46">nr<pos:position pos:line="12" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
		<for pos:line="13" pos:column="17">for <control pos:line="13" pos:column="21">(<init><expr><name pos:line="13" pos:column="22">i<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr>;<pos:position pos:line="13" pos:column="28"/></init> <condition><expr><name pos:line="13" pos:column="29">i<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">&lt;<pos:position pos:line="13" pos:column="35"/></operator> <name><name pos:line="13" pos:column="33">suggested_refs<pos:position pos:line="13" pos:column="47"/></name><operator pos:line="13" pos:column="47">.<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="48">nr<pos:position pos:line="13" pos:column="50"/></name></name></expr>;<pos:position pos:line="13" pos:column="51"/></condition> <incr><expr><name pos:line="13" pos:column="52">i<pos:position pos:line="13" pos:column="53"/></name><operator pos:line="13" pos:column="53">++<pos:position pos:line="13" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="56"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="25">fprintf<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">stderr<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="41">"\t%s\n"<pos:position pos:line="14" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="51">suggested_refs<pos:position pos:line="14" pos:column="65"/></name><operator pos:line="14" pos:column="65">.<pos:position pos:line="14" pos:column="66"/></operator><name pos:line="14" pos:column="66">items<pos:position pos:line="14" pos:column="71"/></name><index pos:line="14" pos:column="71">[<expr><name pos:line="14" pos:column="72">i<pos:position pos:line="14" pos:column="73"/></name></expr>]<pos:position pos:line="14" pos:column="74"/></index></name><operator pos:line="14" pos:column="74">.<pos:position pos:line="14" pos:column="75"/></operator><name pos:line="14" pos:column="75">string<pos:position pos:line="14" pos:column="81"/></name></expr></argument>)<pos:position pos:line="14" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="83"/></expr_stmt></block></for>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">string_list_clear<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><operator pos:line="17" pos:column="27">&amp;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="28">suggested_refs<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="44">0<pos:position pos:line="17" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">exit<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3733_git-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">determine_fanout<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">int_node<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">tree<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">unsigned<pos:position pos:line="1" pos:column="70"/></name> <name pos:line="1" pos:column="71">char<pos:position pos:line="1" pos:column="75"/></name></type> <name pos:line="1" pos:column="76">n<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">unsigned<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">fanout<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<comment type="block" pos:line="4" pos:column="9">/*
	 * The following is a simple heuristic that works well in practice:
	 * For each even-numbered 16-tree level (remember that each on-disk
	 * fanout level corresponds to _two_ 16-tree levels), peek at all 16
	 * entries at that tree level. If all of them are either int_nodes or
	 * subtree entries, then there are likely plenty of notes below this
	 * level, so we return an incremented fanout.
	 */</comment>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">unsigned<pos:position pos:line="12" pos:column="17"/></name> <name pos:line="12" pos:column="18">int<pos:position pos:line="12" pos:column="21"/></name></type> <name pos:line="12" pos:column="22">i<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">n<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">%<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">2<pos:position pos:line="13" pos:column="19"/></literal><operator pos:line="13" pos:column="19">)<pos:position pos:line="13" pos:column="20"/></operator> <operator pos:line="13" pos:column="21">||<pos:position pos:line="13" pos:column="23"/></operator> <operator pos:line="13" pos:column="24">(<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">n<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">&gt;<pos:position pos:line="13" pos:column="31"/></operator> <literal type="number" pos:line="13" pos:column="29">2<pos:position pos:line="13" pos:column="30"/></literal> <operator pos:line="13" pos:column="31">*<pos:position pos:line="13" pos:column="32"/></operator> <name pos:line="13" pos:column="33">fanout<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">)<pos:position pos:line="13" pos:column="40"/></operator></expr>)<pos:position pos:line="13" pos:column="41"/></condition><then pos:line="13" pos:column="41">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><name pos:line="14" pos:column="24">fanout<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></return></block></then></if>
	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></init> <condition><expr><name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&lt;<pos:position pos:line="15" pos:column="27"/></operator> <literal type="number" pos:line="15" pos:column="25">16<pos:position pos:line="15" pos:column="27"/></literal></expr>;<pos:position pos:line="15" pos:column="28"/></condition> <incr><expr><name pos:line="15" pos:column="29">i<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">++<pos:position pos:line="15" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="33"/></control> <block pos:line="15" pos:column="34">{
		<switch pos:line="16" pos:column="17">switch <condition pos:line="16" pos:column="24">(<expr><call><name pos:line="16" pos:column="25">GET_PTR_TYPE<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><name><name pos:line="16" pos:column="38">tree<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">-&gt;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="44">a<pos:position pos:line="16" pos:column="45"/></name><index pos:line="16" pos:column="45">[<expr><name pos:line="16" pos:column="46">i<pos:position pos:line="16" pos:column="47"/></name></expr>]<pos:position pos:line="16" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="50"/></condition> <block pos:line="16" pos:column="51">{
		<case pos:line="17" pos:column="17">case <expr><name pos:line="17" pos:column="22">PTR_TYPE_SUBTREE<pos:position pos:line="17" pos:column="38"/></name></expr>:<pos:position pos:line="17" pos:column="39"/></case>
		<case pos:line="18" pos:column="17">case <expr><name pos:line="18" pos:column="22">PTR_TYPE_INTERNAL<pos:position pos:line="18" pos:column="39"/></name></expr>:<pos:position pos:line="18" pos:column="40"/></case>
			<continue pos:line="19" pos:column="25">continue;<pos:position pos:line="19" pos:column="34"/></continue>
		<default pos:line="20" pos:column="17">default:<pos:position pos:line="20" pos:column="25"/></default>
			<return pos:line="21" pos:column="25">return <expr><name pos:line="21" pos:column="32">fanout<pos:position pos:line="21" pos:column="38"/></name></expr>;<pos:position pos:line="21" pos:column="39"/></return>
		}<pos:position pos:line="22" pos:column="18"/></block></switch>
	}<pos:position pos:line="23" pos:column="10"/></block></for>
	<return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">fanout<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">+<pos:position pos:line="24" pos:column="24"/></operator> <literal type="number" pos:line="24" pos:column="25">1<pos:position pos:line="24" pos:column="26"/></literal></expr>;<pos:position pos:line="24" pos:column="27"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_344_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">chmod_index_entry<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">index_state<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">istate<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">cache_entry<pos:position pos:line="1" pos:column="69"/></name></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">ce<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
		      <parameter><decl><type><name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name></type> <name pos:line="2" pos:column="28">flip<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><call><name pos:line="4" pos:column="14">S_ISREG<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><name><name pos:line="4" pos:column="22">ce<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">-&gt;<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="26">ce_mode<pos:position pos:line="4" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="35"/></condition><then pos:line="4" pos:column="35">
		<block type="pseudo"><return pos:line="5" pos:column="17">return <expr><operator pos:line="5" pos:column="24">-<pos:position pos:line="5" pos:column="25"/></operator><literal type="number" pos:line="5" pos:column="25">1<pos:position pos:line="5" pos:column="26"/></literal></expr>;<pos:position pos:line="5" pos:column="27"/></return></block></then></if>
	<switch pos:line="6" pos:column="9">switch <condition pos:line="6" pos:column="16">(<expr><name pos:line="6" pos:column="17">flip<pos:position pos:line="6" pos:column="21"/></name></expr>)<pos:position pos:line="6" pos:column="22"/></condition> <block pos:line="6" pos:column="23">{
	<case pos:line="7" pos:column="9">case <expr><literal type="char" pos:line="7" pos:column="14">'+'<pos:position pos:line="7" pos:column="17"/></literal></expr>:<pos:position pos:line="7" pos:column="18"/></case>
		<expr_stmt><expr><name><name pos:line="8" pos:column="17">ce<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">ce_mode<pos:position pos:line="8" pos:column="28"/></name></name> <operator pos:line="8" pos:column="29">|=<pos:position pos:line="8" pos:column="31"/></operator> <literal type="number" pos:line="8" pos:column="32">0111<pos:position pos:line="8" pos:column="36"/></literal></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>
		<break pos:line="9" pos:column="17">break;<pos:position pos:line="9" pos:column="23"/></break>
	<case pos:line="10" pos:column="9">case <expr><literal type="char" pos:line="10" pos:column="14">'-'<pos:position pos:line="10" pos:column="17"/></literal></expr>:<pos:position pos:line="10" pos:column="18"/></case>
		<expr_stmt><expr><name><name pos:line="11" pos:column="17">ce<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">ce_mode<pos:position pos:line="11" pos:column="28"/></name></name> <operator pos:line="11" pos:column="29">&amp;=<pos:position pos:line="11" pos:column="35"/></operator> <operator pos:line="11" pos:column="32">~<pos:position pos:line="11" pos:column="33"/></operator><literal type="number" pos:line="11" pos:column="33">0111<pos:position pos:line="11" pos:column="37"/></literal></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
		<break pos:line="12" pos:column="17">break;<pos:position pos:line="12" pos:column="23"/></break>
	<default pos:line="13" pos:column="9">default:<pos:position pos:line="13" pos:column="17"/></default>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">2<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></switch>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">cache_tree_invalidate_path<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">istate<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="44">ce<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">-&gt;<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="48">name<pos:position pos:line="16" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">ce<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">ce_flags<pos:position pos:line="17" pos:column="21"/></name></name> <operator pos:line="17" pos:column="22">|=<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">CE_UPDATE_IN_BASE<pos:position pos:line="17" pos:column="42"/></name></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">istate<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">cache_changed<pos:position pos:line="18" pos:column="30"/></name></name> <operator pos:line="18" pos:column="31">|=<pos:position pos:line="18" pos:column="33"/></operator> <name pos:line="18" pos:column="34">CE_ENTRY_CHANGED<pos:position pos:line="18" pos:column="50"/></name></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>

	<return pos:line="20" pos:column="9">return <expr><literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

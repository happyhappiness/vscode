<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5978_git-2.13.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_index_info<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">p<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">mode1<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">mode2<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
			    <parameter><decl><type><name><name pos:line="2" pos:column="29">struct<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">object_id<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">oid1<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="53">struct<pos:position pos:line="2" pos:column="59"/></name> <name pos:line="2" pos:column="60">object_id<pos:position pos:line="2" pos:column="69"/></name></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">oid2<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="3" pos:column="29">char<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">status<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="42"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">p<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">!=<pos:position pos:line="5" pos:column="18"/></operator> <literal type="char" pos:line="5" pos:column="19">':'<pos:position pos:line="5" pos:column="22"/></literal></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><call><name pos:line="6" pos:column="24">error<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><literal type="string" pos:line="6" pos:column="30">"expected ':', got '%c'"<pos:position pos:line="6" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="6" pos:column="56">*<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="57">p<pos:position pos:line="6" pos:column="58"/></name></expr></argument>)<pos:position pos:line="6" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="60"/></return></block></then></if>
	<expr_stmt><expr><operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">mode1<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <operator pos:line="7" pos:column="18">(<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">int<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">)<pos:position pos:line="7" pos:column="23"/></operator><call><name pos:line="7" pos:column="23">strtol<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">p<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">+<pos:position pos:line="7" pos:column="33"/></operator> <literal type="number" pos:line="7" pos:column="34">1<pos:position pos:line="7" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="37">&amp;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="38">p<pos:position pos:line="7" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="41">8<pos:position pos:line="7" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">p<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">!=<pos:position pos:line="8" pos:column="18"/></operator> <literal type="char" pos:line="8" pos:column="19">' '<pos:position pos:line="8" pos:column="22"/></literal></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><call><name pos:line="9" pos:column="24">error<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><literal type="string" pos:line="9" pos:column="30">"expected ' ', got '%c'"<pos:position pos:line="9" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="56">*<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="57">p<pos:position pos:line="9" pos:column="58"/></name></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></return></block></then></if>
	<expr_stmt><expr><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">mode2<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <operator pos:line="10" pos:column="18">(<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">int<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">)<pos:position pos:line="10" pos:column="23"/></operator><call><name pos:line="10" pos:column="23">strtol<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">p<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">+<pos:position pos:line="10" pos:column="33"/></operator> <literal type="number" pos:line="10" pos:column="34">1<pos:position pos:line="10" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="37">&amp;<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="38">p<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="41">8<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">*<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">p<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">!=<pos:position pos:line="11" pos:column="18"/></operator> <literal type="char" pos:line="11" pos:column="19">' '<pos:position pos:line="11" pos:column="22"/></literal></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><call><name pos:line="12" pos:column="24">error<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><literal type="string" pos:line="12" pos:column="30">"expected ' ', got '%c'"<pos:position pos:line="12" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="56">*<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="57">p<pos:position pos:line="12" pos:column="58"/></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></return></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">get_oid_hex<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><operator pos:line="13" pos:column="25">++<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="27">p<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="30">oid1<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><call><name pos:line="14" pos:column="24">error<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><literal type="string" pos:line="14" pos:column="30">"expected object ID, got '%s'"<pos:position pos:line="14" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="62">p<pos:position pos:line="14" pos:column="63"/></name> <operator pos:line="14" pos:column="64">+<pos:position pos:line="14" pos:column="65"/></operator> <literal type="number" pos:line="14" pos:column="66">1<pos:position pos:line="14" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="69"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="15" pos:column="9">p<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">+=<pos:position pos:line="15" pos:column="13"/></operator> <name pos:line="15" pos:column="14">GIT_SHA1_HEXSZ<pos:position pos:line="15" pos:column="28"/></name></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">*<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">p<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">!=<pos:position pos:line="16" pos:column="18"/></operator> <literal type="char" pos:line="16" pos:column="19">' '<pos:position pos:line="16" pos:column="22"/></literal></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><call><name pos:line="17" pos:column="24">error<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><literal type="string" pos:line="17" pos:column="30">"expected ' ', got '%c'"<pos:position pos:line="17" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="56">*<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="57">p<pos:position pos:line="17" pos:column="58"/></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="60"/></return></block></then></if>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">get_oid_hex<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><operator pos:line="18" pos:column="25">++<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">p<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="30">oid2<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><call><name pos:line="19" pos:column="24">error<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><literal type="string" pos:line="19" pos:column="30">"expected object ID, got '%s'"<pos:position pos:line="19" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="62">p<pos:position pos:line="19" pos:column="63"/></name> <operator pos:line="19" pos:column="64">+<pos:position pos:line="19" pos:column="65"/></operator> <literal type="number" pos:line="19" pos:column="66">1<pos:position pos:line="19" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="69"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="20" pos:column="9">p<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">+=<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">GIT_SHA1_HEXSZ<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">*<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">p<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">!=<pos:position pos:line="21" pos:column="18"/></operator> <literal type="char" pos:line="21" pos:column="19">' '<pos:position pos:line="21" pos:column="22"/></literal></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23">
		<block type="pseudo"><return pos:line="22" pos:column="17">return <expr><call><name pos:line="22" pos:column="24">error<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><literal type="string" pos:line="22" pos:column="30">"expected ' ', got '%c'"<pos:position pos:line="22" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="56">*<pos:position pos:line="22" pos:column="57"/></operator><name pos:line="22" pos:column="57">p<pos:position pos:line="22" pos:column="58"/></name></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="60"/></return></block></then></if>
	<expr_stmt><expr><operator pos:line="23" pos:column="9">*<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">status<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <operator pos:line="23" pos:column="19">*<pos:position pos:line="23" pos:column="20"/></operator><operator pos:line="23" pos:column="20">++<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">p<pos:position pos:line="23" pos:column="23"/></name></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><operator pos:line="24" pos:column="14">*<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">status<pos:position pos:line="24" pos:column="21"/></name></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22">
		<block type="pseudo"><return pos:line="25" pos:column="17">return <expr><call><name pos:line="25" pos:column="24">error<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><literal type="string" pos:line="25" pos:column="30">"missing status"<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></return></block></then></if>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">p<pos:position pos:line="26" pos:column="14"/></name><index pos:line="26" pos:column="14">[<expr><literal type="number" pos:line="26" pos:column="15">1<pos:position pos:line="26" pos:column="16"/></literal></expr>]<pos:position pos:line="26" pos:column="17"/></index></name> <operator pos:line="26" pos:column="18">&amp;&amp;<pos:position pos:line="26" pos:column="28"/></operator> <operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><call><name pos:line="26" pos:column="22">isdigit<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name><name pos:line="26" pos:column="30">p<pos:position pos:line="26" pos:column="31"/></name><index pos:line="26" pos:column="31">[<expr><literal type="number" pos:line="26" pos:column="32">1<pos:position pos:line="26" pos:column="33"/></literal></expr>]<pos:position pos:line="26" pos:column="34"/></index></name></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="36"/></condition><then pos:line="26" pos:column="36">
		<block type="pseudo"><return pos:line="27" pos:column="17">return <expr><call><name pos:line="27" pos:column="24">error<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><literal type="string" pos:line="27" pos:column="30">"unexpected trailer: '%s'"<pos:position pos:line="27" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="58">p<pos:position pos:line="27" pos:column="59"/></name> <operator pos:line="27" pos:column="60">+<pos:position pos:line="27" pos:column="61"/></operator> <literal type="number" pos:line="27" pos:column="62">1<pos:position pos:line="27" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="65"/></return></block></then></if>
	<return pos:line="28" pos:column="9">return <expr><literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

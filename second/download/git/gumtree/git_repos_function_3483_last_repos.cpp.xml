<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3483_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">refs_for_each_reflog_ent_reverse<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">ref_store<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">refs<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
				     <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">refname<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
				     <parameter><decl><type><name pos:line="3" pos:column="38">each_reflog_ent_fn<pos:position pos:line="3" pos:column="56"/></name></type> <name pos:line="3" pos:column="57">fn<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>,
				     <parameter><decl><type><name pos:line="4" pos:column="38">void<pos:position pos:line="4" pos:column="42"/></name> <modifier pos:line="4" pos:column="43">*<pos:position pos:line="4" pos:column="44"/></modifier></type><name pos:line="4" pos:column="44">cb_data<pos:position pos:line="4" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="52"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<return pos:line="6" pos:column="9">return <expr><call><name><name pos:line="6" pos:column="16">refs<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">-&gt;<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="22">be<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">for_each_reflog_ent_reverse<pos:position pos:line="6" pos:column="53"/></name></name><argument_list pos:line="6" pos:column="53">(<argument><expr><name pos:line="6" pos:column="54">refs<pos:position pos:line="6" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="60">refname<pos:position pos:line="6" pos:column="67"/></name></expr></argument>,
						     <argument><expr><name pos:line="7" pos:column="54">fn<pos:position pos:line="7" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="58">cb_data<pos:position pos:line="7" pos:column="65"/></name></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="67"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

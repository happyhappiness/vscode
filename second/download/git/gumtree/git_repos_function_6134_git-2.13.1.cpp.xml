<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6134_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">off_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">write_reuse_object<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">sha1file<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">f<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="53">struct<pos:position pos:line="1" pos:column="59"/></name> <name pos:line="1" pos:column="60">object_entry<pos:position pos:line="1" pos:column="72"/></name></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">entry<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="2" pos:column="33">unsigned<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">long<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">limit<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">int<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">usable_delta<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">packed_git<pos:position pos:line="4" pos:column="26"/></name></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">p<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name><name pos:line="4" pos:column="32">entry<pos:position pos:line="4" pos:column="37"/></name><operator pos:line="4" pos:column="37">-&gt;<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="39">in_pack<pos:position pos:line="4" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">pack_window<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">w_curs<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><name pos:line="5" pos:column="38">NULL<pos:position pos:line="5" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">revindex_entry<pos:position pos:line="6" pos:column="30"/></name></name> <modifier pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></modifier></type><name pos:line="6" pos:column="32">revidx<pos:position pos:line="6" pos:column="38"/></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">off_t<pos:position pos:line="7" pos:column="14"/></name></type> <name pos:line="7" pos:column="15">offset<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">enum<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">object_type<pos:position pos:line="8" pos:column="25"/></name></name></type> <name pos:line="8" pos:column="26">type<pos:position pos:line="8" pos:column="30"/></name> <init pos:line="8" pos:column="31">= <expr><name><name pos:line="8" pos:column="33">entry<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">type<pos:position pos:line="8" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">off_t<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">datalen<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">unsigned<pos:position pos:line="10" pos:column="17"/></name> <name pos:line="10" pos:column="18">char<pos:position pos:line="10" pos:column="22"/></name></type> <name><name pos:line="10" pos:column="23">header<pos:position pos:line="10" pos:column="29"/></name><index pos:line="10" pos:column="29">[<expr><name pos:line="10" pos:column="30">MAX_PACK_OBJECT_HEADER<pos:position pos:line="10" pos:column="52"/></name></expr>]<pos:position pos:line="10" pos:column="53"/></index></name></decl>,
		      <decl><type ref="prev"/><name><name pos:line="11" pos:column="23">dheader<pos:position pos:line="11" pos:column="30"/></name><index pos:line="11" pos:column="30">[<expr><name pos:line="11" pos:column="31">MAX_PACK_OBJECT_HEADER<pos:position pos:line="11" pos:column="53"/></name></expr>]<pos:position pos:line="11" pos:column="54"/></index></name></decl>;<pos:position pos:line="11" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">unsigned<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">hdrlen<pos:position pos:line="12" pos:column="24"/></name></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">entry<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">delta<pos:position pos:line="14" pos:column="25"/></name></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">type<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <ternary><condition><expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">allow_ofs_delta<pos:position pos:line="15" pos:column="40"/></name> <operator pos:line="15" pos:column="41">&amp;&amp;<pos:position pos:line="15" pos:column="51"/></operator> <name><name pos:line="15" pos:column="44">entry<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">-&gt;<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="51">delta<pos:position pos:line="15" pos:column="56"/></name><operator pos:line="15" pos:column="56">-&gt;<pos:position pos:line="15" pos:column="61"/></operator><name pos:line="15" pos:column="58">idx<pos:position pos:line="15" pos:column="61"/></name><operator pos:line="15" pos:column="61">.<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="62">offset<pos:position pos:line="15" pos:column="68"/></name></name><operator pos:line="15" pos:column="68">)<pos:position pos:line="15" pos:column="69"/></operator></expr> ?<pos:position pos:line="15" pos:column="71"/></condition><then pos:line="15" pos:column="71">
			<expr><name pos:line="16" pos:column="25">OBJ_OFS_DELTA<pos:position pos:line="16" pos:column="38"/></name></expr> <pos:position pos:line="16" pos:column="39"/></then><else pos:line="16" pos:column="39">: <expr><name pos:line="16" pos:column="41">OBJ_REF_DELTA<pos:position pos:line="16" pos:column="54"/></name></expr></else></ternary></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">hdrlen<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">encode_in_pack_object_header<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><name pos:line="17" pos:column="47">header<pos:position pos:line="17" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="55">sizeof<argument_list pos:line="17" pos:column="61">(<argument><expr><name pos:line="17" pos:column="62">header<pos:position pos:line="17" pos:column="68"/></name></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></sizeof></expr></argument>,
					      <argument><expr><name pos:line="18" pos:column="47">type<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="53">entry<pos:position pos:line="18" pos:column="58"/></name><operator pos:line="18" pos:column="58">-&gt;<pos:position pos:line="18" pos:column="63"/></operator><name pos:line="18" pos:column="60">size<pos:position pos:line="18" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="66"/></expr_stmt>

	<expr_stmt><expr><name pos:line="20" pos:column="9">offset<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <name><name pos:line="20" pos:column="18">entry<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">in_pack_offset<pos:position pos:line="20" pos:column="39"/></name></name></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name pos:line="21" pos:column="9">revidx<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">find_pack_revindex<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><name pos:line="21" pos:column="37">p<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="40">offset<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">datalen<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <name><name pos:line="22" pos:column="19">revidx<pos:position pos:line="22" pos:column="25"/></name><index pos:line="22" pos:column="25">[<expr><literal type="number" pos:line="22" pos:column="26">1<pos:position pos:line="22" pos:column="27"/></literal></expr>]<pos:position pos:line="22" pos:column="28"/></index></name><operator pos:line="22" pos:column="28">.<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">offset<pos:position pos:line="22" pos:column="35"/></name> <operator pos:line="22" pos:column="36">-<pos:position pos:line="22" pos:column="37"/></operator> <name pos:line="22" pos:column="38">offset<pos:position pos:line="22" pos:column="44"/></name></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">pack_to_stdout<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">&amp;&amp;<pos:position pos:line="23" pos:column="39"/></operator> <name><name pos:line="23" pos:column="32">p<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">-&gt;<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="35">index_version<pos:position pos:line="23" pos:column="48"/></name></name> <operator pos:line="23" pos:column="49">&gt;<pos:position pos:line="23" pos:column="53"/></operator> <literal type="number" pos:line="23" pos:column="51">1<pos:position pos:line="23" pos:column="52"/></literal> <operator pos:line="23" pos:column="53">&amp;&amp;<pos:position pos:line="23" pos:column="63"/></operator>
	    <call><name pos:line="24" pos:column="13">check_pack_crc<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">p<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="31">&amp;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="32">w_curs<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="40">offset<pos:position pos:line="24" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="48">datalen<pos:position pos:line="24" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="57">revidx<pos:position pos:line="24" pos:column="63"/></name><operator pos:line="24" pos:column="63">-&gt;<pos:position pos:line="24" pos:column="68"/></operator><name pos:line="24" pos:column="65">nr<pos:position pos:line="24" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="69"/></condition><then pos:line="24" pos:column="69"> <block pos:line="24" pos:column="70">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">error<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><literal type="string" pos:line="25" pos:column="23">"bad packed object CRC for %s"<pos:position pos:line="25" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="55">sha1_to_hex<pos:position pos:line="25" pos:column="66"/></name><argument_list pos:line="25" pos:column="66">(<argument><expr><name><name pos:line="25" pos:column="67">entry<pos:position pos:line="25" pos:column="72"/></name><operator pos:line="25" pos:column="72">-&gt;<pos:position pos:line="25" pos:column="77"/></operator><name pos:line="25" pos:column="74">idx<pos:position pos:line="25" pos:column="77"/></name><operator pos:line="25" pos:column="77">.<pos:position pos:line="25" pos:column="78"/></operator><name pos:line="25" pos:column="78">sha1<pos:position pos:line="25" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="85"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">unuse_pack<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><operator pos:line="26" pos:column="28">&amp;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="29">w_curs<pos:position pos:line="26" pos:column="35"/></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
		<return pos:line="27" pos:column="17">return <expr><call><name pos:line="27" pos:column="24">write_no_reuse_object<pos:position pos:line="27" pos:column="45"/></name><argument_list pos:line="27" pos:column="45">(<argument><expr><name pos:line="27" pos:column="46">f<pos:position pos:line="27" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="49">entry<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="56">limit<pos:position pos:line="27" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="63">usable_delta<pos:position pos:line="27" pos:column="75"/></name></expr></argument>)<pos:position pos:line="27" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="77"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="30" pos:column="9">offset<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">+=<pos:position pos:line="30" pos:column="18"/></operator> <name><name pos:line="30" pos:column="19">entry<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">in_pack_header_size<pos:position pos:line="30" pos:column="45"/></name></name></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="31" pos:column="9">datalen<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">-=<pos:position pos:line="31" pos:column="19"/></operator> <name><name pos:line="31" pos:column="20">entry<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">-&gt;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="27">in_pack_header_size<pos:position pos:line="31" pos:column="46"/></name></name></expr>;<pos:position pos:line="31" pos:column="47"/></expr_stmt>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">pack_to_stdout<pos:position pos:line="33" pos:column="28"/></name> <operator pos:line="33" pos:column="29">&amp;&amp;<pos:position pos:line="33" pos:column="39"/></operator> <name><name pos:line="33" pos:column="32">p<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">-&gt;<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="35">index_version<pos:position pos:line="33" pos:column="48"/></name></name> <operator pos:line="33" pos:column="49">==<pos:position pos:line="33" pos:column="51"/></operator> <literal type="number" pos:line="33" pos:column="52">1<pos:position pos:line="33" pos:column="53"/></literal> <operator pos:line="33" pos:column="54">&amp;&amp;<pos:position pos:line="33" pos:column="64"/></operator>
	    <call><name pos:line="34" pos:column="13">check_pack_inflate<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">p<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="35">&amp;<pos:position pos:line="34" pos:column="40"/></operator><name pos:line="34" pos:column="36">w_curs<pos:position pos:line="34" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="44">offset<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="52">datalen<pos:position pos:line="34" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="61">entry<pos:position pos:line="34" pos:column="66"/></name><operator pos:line="34" pos:column="66">-&gt;<pos:position pos:line="34" pos:column="71"/></operator><name pos:line="34" pos:column="68">size<pos:position pos:line="34" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="74"/></condition><then pos:line="34" pos:column="74"> <block pos:line="34" pos:column="75">{
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">error<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><literal type="string" pos:line="35" pos:column="23">"corrupt packed object for %s"<pos:position pos:line="35" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="55">sha1_to_hex<pos:position pos:line="35" pos:column="66"/></name><argument_list pos:line="35" pos:column="66">(<argument><expr><name><name pos:line="35" pos:column="67">entry<pos:position pos:line="35" pos:column="72"/></name><operator pos:line="35" pos:column="72">-&gt;<pos:position pos:line="35" pos:column="77"/></operator><name pos:line="35" pos:column="74">idx<pos:position pos:line="35" pos:column="77"/></name><operator pos:line="35" pos:column="77">.<pos:position pos:line="35" pos:column="78"/></operator><name pos:line="35" pos:column="78">sha1<pos:position pos:line="35" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="85"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">unuse_pack<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><operator pos:line="36" pos:column="28">&amp;<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="29">w_curs<pos:position pos:line="36" pos:column="35"/></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
		<return pos:line="37" pos:column="17">return <expr><call><name pos:line="37" pos:column="24">write_no_reuse_object<pos:position pos:line="37" pos:column="45"/></name><argument_list pos:line="37" pos:column="45">(<argument><expr><name pos:line="37" pos:column="46">f<pos:position pos:line="37" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="49">entry<pos:position pos:line="37" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="56">limit<pos:position pos:line="37" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="63">usable_delta<pos:position pos:line="37" pos:column="75"/></name></expr></argument>)<pos:position pos:line="37" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="77"/></return>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">type<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">==<pos:position pos:line="40" pos:column="20"/></operator> <name pos:line="40" pos:column="21">OBJ_OFS_DELTA<pos:position pos:line="40" pos:column="34"/></name></expr>)<pos:position pos:line="40" pos:column="35"/></condition><then pos:line="40" pos:column="35"> <block pos:line="40" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="41" pos:column="17">off_t<pos:position pos:line="41" pos:column="22"/></name></type> <name pos:line="41" pos:column="23">ofs<pos:position pos:line="41" pos:column="26"/></name> <init pos:line="41" pos:column="27">= <expr><name><name pos:line="41" pos:column="29">entry<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">-&gt;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="36">idx<pos:position pos:line="41" pos:column="39"/></name><operator pos:line="41" pos:column="39">.<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="40">offset<pos:position pos:line="41" pos:column="46"/></name></name> <operator pos:line="41" pos:column="47">-<pos:position pos:line="41" pos:column="48"/></operator> <name><name pos:line="41" pos:column="49">entry<pos:position pos:line="41" pos:column="54"/></name><operator pos:line="41" pos:column="54">-&gt;<pos:position pos:line="41" pos:column="59"/></operator><name pos:line="41" pos:column="56">delta<pos:position pos:line="41" pos:column="61"/></name><operator pos:line="41" pos:column="61">-&gt;<pos:position pos:line="41" pos:column="66"/></operator><name pos:line="41" pos:column="63">idx<pos:position pos:line="41" pos:column="66"/></name><operator pos:line="41" pos:column="66">.<pos:position pos:line="41" pos:column="67"/></operator><name pos:line="41" pos:column="67">offset<pos:position pos:line="41" pos:column="73"/></name></name></expr></init></decl>;<pos:position pos:line="41" pos:column="74"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="42" pos:column="17">unsigned<pos:position pos:line="42" pos:column="25"/></name></type> <name pos:line="42" pos:column="26">pos<pos:position pos:line="42" pos:column="29"/></name> <init pos:line="42" pos:column="30">= <expr><sizeof pos:line="42" pos:column="32">sizeof<argument_list pos:line="42" pos:column="38">(<argument><expr><name pos:line="42" pos:column="39">dheader<pos:position pos:line="42" pos:column="46"/></name></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></sizeof> <operator pos:line="42" pos:column="48">-<pos:position pos:line="42" pos:column="49"/></operator> <literal type="number" pos:line="42" pos:column="50">1<pos:position pos:line="42" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="42" pos:column="52"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="43" pos:column="17">dheader<pos:position pos:line="43" pos:column="24"/></name><index pos:line="43" pos:column="24">[<expr><name pos:line="43" pos:column="25">pos<pos:position pos:line="43" pos:column="28"/></name></expr>]<pos:position pos:line="43" pos:column="29"/></index></name> <operator pos:line="43" pos:column="30">=<pos:position pos:line="43" pos:column="31"/></operator> <name pos:line="43" pos:column="32">ofs<pos:position pos:line="43" pos:column="35"/></name> <operator pos:line="43" pos:column="36">&amp;<pos:position pos:line="43" pos:column="41"/></operator> <literal type="number" pos:line="43" pos:column="38">127<pos:position pos:line="43" pos:column="41"/></literal></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>
		<while pos:line="44" pos:column="17">while <condition pos:line="44" pos:column="23">(<expr><name pos:line="44" pos:column="24">ofs<pos:position pos:line="44" pos:column="27"/></name> <operator pos:line="44" pos:column="28">&gt;&gt;=<pos:position pos:line="44" pos:column="37"/></operator> <literal type="number" pos:line="44" pos:column="32">7<pos:position pos:line="44" pos:column="33"/></literal></expr>)<pos:position pos:line="44" pos:column="34"/></condition>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="45" pos:column="25">dheader<pos:position pos:line="45" pos:column="32"/></name><index pos:line="45" pos:column="32">[<expr><operator pos:line="45" pos:column="33">--<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="35">pos<pos:position pos:line="45" pos:column="38"/></name></expr>]<pos:position pos:line="45" pos:column="39"/></index></name> <operator pos:line="45" pos:column="40">=<pos:position pos:line="45" pos:column="41"/></operator> <literal type="number" pos:line="45" pos:column="42">128<pos:position pos:line="45" pos:column="45"/></literal> <operator pos:line="45" pos:column="46">|<pos:position pos:line="45" pos:column="47"/></operator> <operator pos:line="45" pos:column="48">(<pos:position pos:line="45" pos:column="49"/></operator><operator pos:line="45" pos:column="49">--<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="51">ofs<pos:position pos:line="45" pos:column="54"/></name> <operator pos:line="45" pos:column="55">&amp;<pos:position pos:line="45" pos:column="60"/></operator> <literal type="number" pos:line="45" pos:column="57">127<pos:position pos:line="45" pos:column="60"/></literal><operator pos:line="45" pos:column="60">)<pos:position pos:line="45" pos:column="61"/></operator></expr>;<pos:position pos:line="45" pos:column="62"/></expr_stmt></block></while>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">limit<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">&amp;&amp;<pos:position pos:line="46" pos:column="37"/></operator> <name pos:line="46" pos:column="30">hdrlen<pos:position pos:line="46" pos:column="36"/></name> <operator pos:line="46" pos:column="37">+<pos:position pos:line="46" pos:column="38"/></operator> <sizeof pos:line="46" pos:column="39">sizeof<argument_list pos:line="46" pos:column="45">(<argument><expr><name pos:line="46" pos:column="46">dheader<pos:position pos:line="46" pos:column="53"/></name></expr></argument>)<pos:position pos:line="46" pos:column="54"/></argument_list></sizeof> <operator pos:line="46" pos:column="55">-<pos:position pos:line="46" pos:column="56"/></operator> <name pos:line="46" pos:column="57">pos<pos:position pos:line="46" pos:column="60"/></name> <operator pos:line="46" pos:column="61">+<pos:position pos:line="46" pos:column="62"/></operator> <name pos:line="46" pos:column="63">datalen<pos:position pos:line="46" pos:column="70"/></name> <operator pos:line="46" pos:column="71">+<pos:position pos:line="46" pos:column="72"/></operator> <literal type="number" pos:line="46" pos:column="73">20<pos:position pos:line="46" pos:column="75"/></literal> <operator pos:line="46" pos:column="76">&gt;=<pos:position pos:line="46" pos:column="81"/></operator> <name pos:line="46" pos:column="79">limit<pos:position pos:line="46" pos:column="84"/></name></expr>)<pos:position pos:line="46" pos:column="85"/></condition><then pos:line="46" pos:column="85"> <block pos:line="46" pos:column="86">{
			<expr_stmt><expr><call><name pos:line="47" pos:column="25">unuse_pack<pos:position pos:line="47" pos:column="35"/></name><argument_list pos:line="47" pos:column="35">(<argument><expr><operator pos:line="47" pos:column="36">&amp;<pos:position pos:line="47" pos:column="41"/></operator><name pos:line="47" pos:column="37">w_curs<pos:position pos:line="47" pos:column="43"/></name></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt>
			<return pos:line="48" pos:column="25">return <expr><literal type="number" pos:line="48" pos:column="32">0<pos:position pos:line="48" pos:column="33"/></literal></expr>;<pos:position pos:line="48" pos:column="34"/></return>
		}<pos:position pos:line="49" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">sha1write<pos:position pos:line="50" pos:column="26"/></name><argument_list pos:line="50" pos:column="26">(<argument><expr><name pos:line="50" pos:column="27">f<pos:position pos:line="50" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="30">header<pos:position pos:line="50" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="38">hdrlen<pos:position pos:line="50" pos:column="44"/></name></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">sha1write<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">f<pos:position pos:line="51" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="30">dheader<pos:position pos:line="51" pos:column="37"/></name> <operator pos:line="51" pos:column="38">+<pos:position pos:line="51" pos:column="39"/></operator> <name pos:line="51" pos:column="40">pos<pos:position pos:line="51" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="45">sizeof<argument_list pos:line="51" pos:column="51">(<argument><expr><name pos:line="51" pos:column="52">dheader<pos:position pos:line="51" pos:column="59"/></name></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></sizeof> <operator pos:line="51" pos:column="61">-<pos:position pos:line="51" pos:column="62"/></operator> <name pos:line="51" pos:column="63">pos<pos:position pos:line="51" pos:column="66"/></name></expr></argument>)<pos:position pos:line="51" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name pos:line="52" pos:column="17">hdrlen<pos:position pos:line="52" pos:column="23"/></name> <operator pos:line="52" pos:column="24">+=<pos:position pos:line="52" pos:column="26"/></operator> <sizeof pos:line="52" pos:column="27">sizeof<argument_list pos:line="52" pos:column="33">(<argument><expr><name pos:line="52" pos:column="34">dheader<pos:position pos:line="52" pos:column="41"/></name></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></sizeof> <operator pos:line="52" pos:column="43">-<pos:position pos:line="52" pos:column="44"/></operator> <name pos:line="52" pos:column="45">pos<pos:position pos:line="52" pos:column="48"/></name></expr>;<pos:position pos:line="52" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="53" pos:column="17">reused_delta<pos:position pos:line="53" pos:column="29"/></name><operator pos:line="53" pos:column="29">++<pos:position pos:line="53" pos:column="31"/></operator></expr>;<pos:position pos:line="53" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></then> <elseif pos:line="54" pos:column="11">else <if pos:line="54" pos:column="16">if <condition pos:line="54" pos:column="19">(<expr><name pos:line="54" pos:column="20">type<pos:position pos:line="54" pos:column="24"/></name> <operator pos:line="54" pos:column="25">==<pos:position pos:line="54" pos:column="27"/></operator> <name pos:line="54" pos:column="28">OBJ_REF_DELTA<pos:position pos:line="54" pos:column="41"/></name></expr>)<pos:position pos:line="54" pos:column="42"/></condition><then pos:line="54" pos:column="42"> <block pos:line="54" pos:column="43">{
		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><name pos:line="55" pos:column="21">limit<pos:position pos:line="55" pos:column="26"/></name> <operator pos:line="55" pos:column="27">&amp;&amp;<pos:position pos:line="55" pos:column="37"/></operator> <name pos:line="55" pos:column="30">hdrlen<pos:position pos:line="55" pos:column="36"/></name> <operator pos:line="55" pos:column="37">+<pos:position pos:line="55" pos:column="38"/></operator> <literal type="number" pos:line="55" pos:column="39">20<pos:position pos:line="55" pos:column="41"/></literal> <operator pos:line="55" pos:column="42">+<pos:position pos:line="55" pos:column="43"/></operator> <name pos:line="55" pos:column="44">datalen<pos:position pos:line="55" pos:column="51"/></name> <operator pos:line="55" pos:column="52">+<pos:position pos:line="55" pos:column="53"/></operator> <literal type="number" pos:line="55" pos:column="54">20<pos:position pos:line="55" pos:column="56"/></literal> <operator pos:line="55" pos:column="57">&gt;=<pos:position pos:line="55" pos:column="62"/></operator> <name pos:line="55" pos:column="60">limit<pos:position pos:line="55" pos:column="65"/></name></expr>)<pos:position pos:line="55" pos:column="66"/></condition><then pos:line="55" pos:column="66"> <block pos:line="55" pos:column="67">{
			<expr_stmt><expr><call><name pos:line="56" pos:column="25">unuse_pack<pos:position pos:line="56" pos:column="35"/></name><argument_list pos:line="56" pos:column="35">(<argument><expr><operator pos:line="56" pos:column="36">&amp;<pos:position pos:line="56" pos:column="41"/></operator><name pos:line="56" pos:column="37">w_curs<pos:position pos:line="56" pos:column="43"/></name></expr></argument>)<pos:position pos:line="56" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="45"/></expr_stmt>
			<return pos:line="57" pos:column="25">return <expr><literal type="number" pos:line="57" pos:column="32">0<pos:position pos:line="57" pos:column="33"/></literal></expr>;<pos:position pos:line="57" pos:column="34"/></return>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">sha1write<pos:position pos:line="59" pos:column="26"/></name><argument_list pos:line="59" pos:column="26">(<argument><expr><name pos:line="59" pos:column="27">f<pos:position pos:line="59" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="30">header<pos:position pos:line="59" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="38">hdrlen<pos:position pos:line="59" pos:column="44"/></name></expr></argument>)<pos:position pos:line="59" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">sha1write<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name pos:line="60" pos:column="27">f<pos:position pos:line="60" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="30">entry<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">-&gt;<pos:position pos:line="60" pos:column="40"/></operator><name pos:line="60" pos:column="37">delta<pos:position pos:line="60" pos:column="42"/></name><operator pos:line="60" pos:column="42">-&gt;<pos:position pos:line="60" pos:column="47"/></operator><name pos:line="60" pos:column="44">idx<pos:position pos:line="60" pos:column="47"/></name><operator pos:line="60" pos:column="47">.<pos:position pos:line="60" pos:column="48"/></operator><name pos:line="60" pos:column="48">sha1<pos:position pos:line="60" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="54">20<pos:position pos:line="60" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name pos:line="61" pos:column="17">hdrlen<pos:position pos:line="61" pos:column="23"/></name> <operator pos:line="61" pos:column="24">+=<pos:position pos:line="61" pos:column="26"/></operator> <literal type="number" pos:line="61" pos:column="27">20<pos:position pos:line="61" pos:column="29"/></literal></expr>;<pos:position pos:line="61" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="62" pos:column="17">reused_delta<pos:position pos:line="62" pos:column="29"/></name><operator pos:line="62" pos:column="29">++<pos:position pos:line="62" pos:column="31"/></operator></expr>;<pos:position pos:line="62" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="63" pos:column="10"/></block></then></if></elseif> <else pos:line="63" pos:column="11">else <block pos:line="63" pos:column="16">{
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><name pos:line="64" pos:column="21">limit<pos:position pos:line="64" pos:column="26"/></name> <operator pos:line="64" pos:column="27">&amp;&amp;<pos:position pos:line="64" pos:column="37"/></operator> <name pos:line="64" pos:column="30">hdrlen<pos:position pos:line="64" pos:column="36"/></name> <operator pos:line="64" pos:column="37">+<pos:position pos:line="64" pos:column="38"/></operator> <name pos:line="64" pos:column="39">datalen<pos:position pos:line="64" pos:column="46"/></name> <operator pos:line="64" pos:column="47">+<pos:position pos:line="64" pos:column="48"/></operator> <literal type="number" pos:line="64" pos:column="49">20<pos:position pos:line="64" pos:column="51"/></literal> <operator pos:line="64" pos:column="52">&gt;=<pos:position pos:line="64" pos:column="57"/></operator> <name pos:line="64" pos:column="55">limit<pos:position pos:line="64" pos:column="60"/></name></expr>)<pos:position pos:line="64" pos:column="61"/></condition><then pos:line="64" pos:column="61"> <block pos:line="64" pos:column="62">{
			<expr_stmt><expr><call><name pos:line="65" pos:column="25">unuse_pack<pos:position pos:line="65" pos:column="35"/></name><argument_list pos:line="65" pos:column="35">(<argument><expr><operator pos:line="65" pos:column="36">&amp;<pos:position pos:line="65" pos:column="41"/></operator><name pos:line="65" pos:column="37">w_curs<pos:position pos:line="65" pos:column="43"/></name></expr></argument>)<pos:position pos:line="65" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="45"/></expr_stmt>
			<return pos:line="66" pos:column="25">return <expr><literal type="number" pos:line="66" pos:column="32">0<pos:position pos:line="66" pos:column="33"/></literal></expr>;<pos:position pos:line="66" pos:column="34"/></return>
		}<pos:position pos:line="67" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="68" pos:column="17">sha1write<pos:position pos:line="68" pos:column="26"/></name><argument_list pos:line="68" pos:column="26">(<argument><expr><name pos:line="68" pos:column="27">f<pos:position pos:line="68" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="30">header<pos:position pos:line="68" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="38">hdrlen<pos:position pos:line="68" pos:column="44"/></name></expr></argument>)<pos:position pos:line="68" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="69" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">copy_pack_data<pos:position pos:line="70" pos:column="23"/></name><argument_list pos:line="70" pos:column="23">(<argument><expr><name pos:line="70" pos:column="24">f<pos:position pos:line="70" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="27">p<pos:position pos:line="70" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="30">&amp;<pos:position pos:line="70" pos:column="35"/></operator><name pos:line="70" pos:column="31">w_curs<pos:position pos:line="70" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="39">offset<pos:position pos:line="70" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="47">datalen<pos:position pos:line="70" pos:column="54"/></name></expr></argument>)<pos:position pos:line="70" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">unuse_pack<pos:position pos:line="71" pos:column="19"/></name><argument_list pos:line="71" pos:column="19">(<argument><expr><operator pos:line="71" pos:column="20">&amp;<pos:position pos:line="71" pos:column="25"/></operator><name pos:line="71" pos:column="21">w_curs<pos:position pos:line="71" pos:column="27"/></name></expr></argument>)<pos:position pos:line="71" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="72" pos:column="9">reused<pos:position pos:line="72" pos:column="15"/></name><operator pos:line="72" pos:column="15">++<pos:position pos:line="72" pos:column="17"/></operator></expr>;<pos:position pos:line="72" pos:column="18"/></expr_stmt>
	<return pos:line="73" pos:column="9">return <expr><name pos:line="73" pos:column="16">hdrlen<pos:position pos:line="73" pos:column="22"/></name> <operator pos:line="73" pos:column="23">+<pos:position pos:line="73" pos:column="24"/></operator> <name pos:line="73" pos:column="25">datalen<pos:position pos:line="73" pos:column="32"/></name></expr>;<pos:position pos:line="73" pos:column="33"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

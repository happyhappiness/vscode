<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7019_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">reg_errcode_t<pos:position pos:line="1" pos:column="21"/></name></type>
<name pos:line="2" pos:column="1">calc_inveclosure<pos:position pos:line="2" pos:column="17"/></name> <parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">re_dfa_t<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">dfa<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">src<pos:position pos:line="4" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="12">idx<pos:position pos:line="4" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="17">ret<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <for pos:line="5" pos:column="3">for <control pos:line="5" pos:column="7">(<init><expr><name pos:line="5" pos:column="8">idx<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr>;<pos:position pos:line="5" pos:column="16"/></init> <condition><expr><name pos:line="5" pos:column="17">idx<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&lt;<pos:position pos:line="5" pos:column="25"/></operator> <name><name pos:line="5" pos:column="23">dfa<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">nodes_len<pos:position pos:line="5" pos:column="37"/></name></name></expr>;<pos:position pos:line="5" pos:column="38"/></condition> <incr><expr><operator pos:line="5" pos:column="39">++<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="41">idx<pos:position pos:line="5" pos:column="44"/></name></expr></incr>)<pos:position pos:line="5" pos:column="45"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="5">re_node_set_init_empty<pos:position pos:line="6" pos:column="27"/></name> <argument_list pos:line="6" pos:column="28">(<argument><expr><name><name pos:line="6" pos:column="29">dfa<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">inveclosures<pos:position pos:line="6" pos:column="46"/></name></name> <operator pos:line="6" pos:column="47">+<pos:position pos:line="6" pos:column="48"/></operator> <name pos:line="6" pos:column="49">idx<pos:position pos:line="6" pos:column="52"/></name></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt></block></for>

  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init><expr><name pos:line="8" pos:column="8">src<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>;<pos:position pos:line="8" pos:column="16"/></init> <condition><expr><name pos:line="8" pos:column="17">src<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">&lt;<pos:position pos:line="8" pos:column="25"/></operator> <name><name pos:line="8" pos:column="23">dfa<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">nodes_len<pos:position pos:line="8" pos:column="37"/></name></name></expr>;<pos:position pos:line="8" pos:column="38"/></condition> <incr><expr><operator pos:line="8" pos:column="39">++<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="41">src<pos:position pos:line="8" pos:column="44"/></name></expr></incr>)<pos:position pos:line="8" pos:column="45"/></control>
    <block pos:line="9" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="10" pos:column="7">int<pos:position pos:line="10" pos:column="10"/></name> <modifier pos:line="10" pos:column="11">*<pos:position pos:line="10" pos:column="12"/></modifier></type><name pos:line="10" pos:column="12">elems<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><name><name pos:line="10" pos:column="20">dfa<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">eclosures<pos:position pos:line="10" pos:column="34"/></name><index pos:line="10" pos:column="34">[<expr><name pos:line="10" pos:column="35">src<pos:position pos:line="10" pos:column="38"/></name></expr>]<pos:position pos:line="10" pos:column="39"/></index></name><operator pos:line="10" pos:column="39">.<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">elems<pos:position pos:line="10" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="46"/></decl_stmt>
      <for pos:line="11" pos:column="7">for <control pos:line="11" pos:column="11">(<init><expr><name pos:line="11" pos:column="12">idx<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">idx<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">&lt;<pos:position pos:line="11" pos:column="29"/></operator> <name><name pos:line="11" pos:column="27">dfa<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">eclosures<pos:position pos:line="11" pos:column="41"/></name><index pos:line="11" pos:column="41">[<expr><name pos:line="11" pos:column="42">src<pos:position pos:line="11" pos:column="45"/></name></expr>]<pos:position pos:line="11" pos:column="46"/></index></name><operator pos:line="11" pos:column="46">.<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="47">nelem<pos:position pos:line="11" pos:column="52"/></name></expr>;<pos:position pos:line="11" pos:column="53"/></condition> <incr><expr><operator pos:line="11" pos:column="54">++<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="56">idx<pos:position pos:line="11" pos:column="59"/></name></expr></incr>)<pos:position pos:line="11" pos:column="60"/></control>
	<block pos:line="12" pos:column="9">{
	  <expr_stmt><expr><name pos:line="13" pos:column="11">ret<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <call><name pos:line="13" pos:column="17">re_node_set_insert_last<pos:position pos:line="13" pos:column="40"/></name> <argument_list pos:line="13" pos:column="41">(<argument><expr><name><name pos:line="13" pos:column="42">dfa<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">-&gt;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="47">inveclosures<pos:position pos:line="13" pos:column="59"/></name></name> <operator pos:line="13" pos:column="60">+<pos:position pos:line="13" pos:column="61"/></operator> <name><name pos:line="13" pos:column="62">elems<pos:position pos:line="13" pos:column="67"/></name><index pos:line="13" pos:column="67">[<expr><name pos:line="13" pos:column="68">idx<pos:position pos:line="13" pos:column="71"/></name></expr>]<pos:position pos:line="13" pos:column="72"/></index></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="74">src<pos:position pos:line="13" pos:column="77"/></name></expr></argument>)<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="79"/></expr_stmt>
	  <if pos:line="14" pos:column="11">if <condition pos:line="14" pos:column="14">(<expr><call><name pos:line="14" pos:column="15">BE<pos:position pos:line="14" pos:column="17"/></name> <argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">ret<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">==<pos:position pos:line="14" pos:column="25"/></operator> <operator pos:line="14" pos:column="26">-<pos:position pos:line="14" pos:column="27"/></operator><literal type="number" pos:line="14" pos:column="27">1<pos:position pos:line="14" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="30">0<pos:position pos:line="14" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33">
	    <block type="pseudo"><return pos:line="15" pos:column="13">return <expr><name pos:line="15" pos:column="20">REG_ESPACE<pos:position pos:line="15" pos:column="30"/></name></expr>;<pos:position pos:line="15" pos:column="31"/></return></block></then></if>
	}<pos:position pos:line="16" pos:column="10"/></block></for>
    }<pos:position pos:line="17" pos:column="6"/></block></for>

  <return pos:line="19" pos:column="3">return <expr><name pos:line="19" pos:column="10">REG_NOERROR<pos:position pos:line="19" pos:column="21"/></name></expr>;<pos:position pos:line="19" pos:column="22"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

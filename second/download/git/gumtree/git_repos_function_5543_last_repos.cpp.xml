<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5543_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">append_matching_ref<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">refname<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name><name pos:line="1" pos:column="59">struct<pos:position pos:line="1" pos:column="65"/></name> <name pos:line="1" pos:column="66">object_id<pos:position pos:line="1" pos:column="75"/></name></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">oid<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">flag<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">void<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">cb_data<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<comment type="block" pos:line="4" pos:column="9">/* we want to allow pattern hold/&lt;asterisk&gt; to show all
	 * branches under refs/heads/hold/, and v0.99.9? to show
	 * refs/tags/v0.99.9a and friends.
	 */</comment>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">tail<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">slash<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><call><name pos:line="9" pos:column="21">count_slashes<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">refname<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="44"/></decl_stmt>
	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">tail<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">refname<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></init> <condition><expr><operator pos:line="10" pos:column="30">*<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">tail<pos:position pos:line="10" pos:column="35"/></name> <operator pos:line="10" pos:column="36">&amp;&amp;<pos:position pos:line="10" pos:column="46"/></operator> <name pos:line="10" pos:column="39">match_ref_slash<pos:position pos:line="10" pos:column="54"/></name> <operator pos:line="10" pos:column="55">&lt;<pos:position pos:line="10" pos:column="59"/></operator> <name pos:line="10" pos:column="57">slash<pos:position pos:line="10" pos:column="62"/></name></expr>;<pos:position pos:line="10" pos:column="63"/></condition> <incr/>)<pos:position pos:line="10" pos:column="65"/></control>
		<block type="pseudo"><if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">tail<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">++<pos:position pos:line="11" pos:column="28"/></operator> <operator pos:line="11" pos:column="29">==<pos:position pos:line="11" pos:column="31"/></operator> <literal type="char" pos:line="11" pos:column="32">'/'<pos:position pos:line="11" pos:column="35"/></literal></expr>)<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">slash<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">--<pos:position pos:line="12" pos:column="32"/></operator></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt></block></then></if></block></for>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><operator pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">tail<pos:position pos:line="13" pos:column="19"/></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">wildmatch<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">match_ref_pattern<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">tail<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="48">0<pos:position pos:line="15" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="51"/></condition><then pos:line="15" pos:column="51">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></return></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">starts_with<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">refname<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="34">"refs/heads/"<pos:position pos:line="17" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><call><name pos:line="18" pos:column="24">append_head_ref<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">(<argument><expr><name pos:line="18" pos:column="40">refname<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">oid<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">flag<pos:position pos:line="18" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="60">cb_data<pos:position pos:line="18" pos:column="67"/></name></expr></argument>)<pos:position pos:line="18" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="69"/></return></block></then></if>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">starts_with<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">refname<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="34">"refs/tags/"<pos:position pos:line="19" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="48"/></condition><then pos:line="19" pos:column="48">
		<block type="pseudo"><return pos:line="20" pos:column="17">return <expr><call><name pos:line="20" pos:column="24">append_tag_ref<pos:position pos:line="20" pos:column="38"/></name><argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">refname<pos:position pos:line="20" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="48">oid<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="53">flag<pos:position pos:line="20" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="59">cb_data<pos:position pos:line="20" pos:column="66"/></name></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="68"/></return></block></then></if>
	<return pos:line="21" pos:column="9">return <expr><call><name pos:line="21" pos:column="16">append_ref<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">refname<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="36">oid<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="41">0<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

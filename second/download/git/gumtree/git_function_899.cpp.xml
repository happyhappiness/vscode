<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_899.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">absorb_git_dir_into_superproject<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">prefix<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
				      <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">path<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="3" pos:column="39">unsigned<pos:position pos:line="3" pos:column="47"/></name></type> <name pos:line="3" pos:column="48">flags<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="54"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">err_code<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">sub_git_dir<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">gitdir<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><name pos:line="7" pos:column="32">STRBUF_INIT<pos:position pos:line="7" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">strbuf_addf<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><operator pos:line="8" pos:column="21">&amp;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="22">gitdir<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="30">"%s/.git"<pos:position pos:line="8" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="41">path<pos:position pos:line="8" pos:column="45"/></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">sub_git_dir<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <call><name pos:line="9" pos:column="23">resolve_gitdir_gently<pos:position pos:line="9" pos:column="44"/></name><argument_list pos:line="9" pos:column="44">(<argument><expr><name><name pos:line="9" pos:column="45">gitdir<pos:position pos:line="9" pos:column="51"/></name><operator pos:line="9" pos:column="51">.<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="52">buf<pos:position pos:line="9" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="57">&amp;<pos:position pos:line="9" pos:column="62"/></operator><name pos:line="9" pos:column="58">err_code<pos:position pos:line="9" pos:column="66"/></name></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* Not populated? */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">sub_git_dir<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26"> <block pos:line="12" pos:column="27">{
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">char<pos:position pos:line="13" pos:column="21"/></name> <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier></type><name pos:line="13" pos:column="23">real_new_git_dir<pos:position pos:line="13" pos:column="39"/></name></decl>;<pos:position pos:line="13" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="14" pos:column="17">const<pos:position pos:line="14" pos:column="22"/></specifier> <name pos:line="14" pos:column="23">char<pos:position pos:line="14" pos:column="27"/></name> <modifier pos:line="14" pos:column="28">*<pos:position pos:line="14" pos:column="29"/></modifier></type><name pos:line="14" pos:column="29">new_git_dir<pos:position pos:line="14" pos:column="40"/></name></decl>;<pos:position pos:line="14" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="15" pos:column="17">const<pos:position pos:line="15" pos:column="22"/></specifier> <name><name pos:line="15" pos:column="23">struct<pos:position pos:line="15" pos:column="29"/></name> <name pos:line="15" pos:column="30">submodule<pos:position pos:line="15" pos:column="39"/></name></name> <modifier pos:line="15" pos:column="40">*<pos:position pos:line="15" pos:column="41"/></modifier></type><name pos:line="15" pos:column="41">sub<pos:position pos:line="15" pos:column="44"/></name></decl>;<pos:position pos:line="15" pos:column="45"/></decl_stmt>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">err_code<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">==<pos:position pos:line="17" pos:column="32"/></operator> <name pos:line="17" pos:column="33">READ_GITFILE_ERR_STAT_FAILED<pos:position pos:line="17" pos:column="61"/></name></expr>)<pos:position pos:line="17" pos:column="62"/></condition><then pos:line="17" pos:column="62"> <block pos:line="17" pos:column="63">{
			<comment type="block" pos:line="18" pos:column="25">/* unpopulated as expected */</comment>
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">strbuf_release<pos:position pos:line="19" pos:column="39"/></name><argument_list pos:line="19" pos:column="39">(<argument><expr><operator pos:line="19" pos:column="40">&amp;<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="41">gitdir<pos:position pos:line="19" pos:column="47"/></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>
			<return pos:line="20" pos:column="25">return;<pos:position pos:line="20" pos:column="32"/></return>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>

		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">err_code<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">!=<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="33">READ_GITFILE_ERR_NOT_A_REPO<pos:position pos:line="23" pos:column="60"/></name></expr>)<pos:position pos:line="23" pos:column="61"/></condition><then pos:line="23" pos:column="61">
			<comment type="block" pos:line="24" pos:column="25">/* We don't know what broke here. */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">read_gitfile_error_die<pos:position pos:line="25" pos:column="47"/></name><argument_list pos:line="25" pos:column="47">(<argument><expr><name pos:line="25" pos:column="48">err_code<pos:position pos:line="25" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="58">path<pos:position pos:line="25" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="64">NULL<pos:position pos:line="25" pos:column="68"/></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="70"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="27" pos:column="17">/*
		* Maybe populated, but no git directory was found?
		* This can happen if the superproject is a submodule
		* itself and was just absorbed. The absorption of the
		* superproject did not rewrite the git file links yet,
		* fix it now.
		*/</comment>
		<expr_stmt><expr><name pos:line="34" pos:column="17">sub<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <call><name pos:line="34" pos:column="23">submodule_from_path<pos:position pos:line="34" pos:column="42"/></name><argument_list pos:line="34" pos:column="42">(<argument><expr><name pos:line="34" pos:column="43">null_sha1<pos:position pos:line="34" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="54">path<pos:position pos:line="34" pos:column="58"/></name></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="60"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><operator pos:line="35" pos:column="21">!<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">sub<pos:position pos:line="35" pos:column="25"/></name></expr>)<pos:position pos:line="35" pos:column="26"/></condition><then pos:line="35" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="25">die<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><call><name pos:line="36" pos:column="29">_<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><literal type="string" pos:line="36" pos:column="31">"could not lookup name for submodule '%s'"<pos:position pos:line="36" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="36" pos:column="76">path<pos:position pos:line="36" pos:column="80"/></name></expr></argument>)<pos:position pos:line="36" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="82"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="37" pos:column="17">new_git_dir<pos:position pos:line="37" pos:column="28"/></name> <operator pos:line="37" pos:column="29">=<pos:position pos:line="37" pos:column="30"/></operator> <call><name pos:line="37" pos:column="31">git_path<pos:position pos:line="37" pos:column="39"/></name><argument_list pos:line="37" pos:column="39">(<argument><expr><literal type="string" pos:line="37" pos:column="40">"modules/%s"<pos:position pos:line="37" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="54">sub<pos:position pos:line="37" pos:column="57"/></name><operator pos:line="37" pos:column="57">-&gt;<pos:position pos:line="37" pos:column="62"/></operator><name pos:line="37" pos:column="59">name<pos:position pos:line="37" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="65"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">safe_create_leading_directories_const<pos:position pos:line="38" pos:column="58"/></name><argument_list pos:line="38" pos:column="58">(<argument><expr><name pos:line="38" pos:column="59">new_git_dir<pos:position pos:line="38" pos:column="70"/></name></expr></argument>)<pos:position pos:line="38" pos:column="71"/></argument_list></call> <operator pos:line="38" pos:column="72">&lt;<pos:position pos:line="38" pos:column="76"/></operator> <literal type="number" pos:line="38" pos:column="74">0<pos:position pos:line="38" pos:column="75"/></literal></expr>)<pos:position pos:line="38" pos:column="76"/></condition><then pos:line="38" pos:column="76">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="25">die<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><call><name pos:line="39" pos:column="29">_<pos:position pos:line="39" pos:column="30"/></name><argument_list pos:line="39" pos:column="30">(<argument><expr><literal type="string" pos:line="39" pos:column="31">"could not create directory '%s'"<pos:position pos:line="39" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="39" pos:column="67">new_git_dir<pos:position pos:line="39" pos:column="78"/></name></expr></argument>)<pos:position pos:line="39" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="80"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="40" pos:column="17">real_new_git_dir<pos:position pos:line="40" pos:column="33"/></name> <operator pos:line="40" pos:column="34">=<pos:position pos:line="40" pos:column="35"/></operator> <call><name pos:line="40" pos:column="36">real_pathdup<pos:position pos:line="40" pos:column="48"/></name><argument_list pos:line="40" pos:column="48">(<argument><expr><name pos:line="40" pos:column="49">new_git_dir<pos:position pos:line="40" pos:column="60"/></name></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">connect_work_tree_and_git_dir<pos:position pos:line="41" pos:column="46"/></name><argument_list pos:line="41" pos:column="46">(<argument><expr><name pos:line="41" pos:column="47">path<pos:position pos:line="41" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="53">real_new_git_dir<pos:position pos:line="41" pos:column="69"/></name></expr></argument>)<pos:position pos:line="41" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="71"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="43" pos:column="17">free<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">real_new_git_dir<pos:position pos:line="43" pos:column="38"/></name></expr></argument>)<pos:position pos:line="43" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></then> <else pos:line="44" pos:column="11">else <block pos:line="44" pos:column="16">{
		<comment type="block" pos:line="45" pos:column="17">/* Is it already absorbed into the superprojects git dir? */</comment>
		<decl_stmt><decl><type><name pos:line="46" pos:column="17">char<pos:position pos:line="46" pos:column="21"/></name> <modifier pos:line="46" pos:column="22">*<pos:position pos:line="46" pos:column="23"/></modifier></type><name pos:line="46" pos:column="23">real_sub_git_dir<pos:position pos:line="46" pos:column="39"/></name> <init pos:line="46" pos:column="40">= <expr><call><name pos:line="46" pos:column="42">real_pathdup<pos:position pos:line="46" pos:column="54"/></name><argument_list pos:line="46" pos:column="54">(<argument><expr><name pos:line="46" pos:column="55">sub_git_dir<pos:position pos:line="46" pos:column="66"/></name></expr></argument>)<pos:position pos:line="46" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="68"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="47" pos:column="17">char<pos:position pos:line="47" pos:column="21"/></name> <modifier pos:line="47" pos:column="22">*<pos:position pos:line="47" pos:column="23"/></modifier></type><name pos:line="47" pos:column="23">real_common_git_dir<pos:position pos:line="47" pos:column="42"/></name> <init pos:line="47" pos:column="43">= <expr><call><name pos:line="47" pos:column="45">real_pathdup<pos:position pos:line="47" pos:column="57"/></name><argument_list pos:line="47" pos:column="57">(<argument><expr><call><name pos:line="47" pos:column="58">get_git_common_dir<pos:position pos:line="47" pos:column="76"/></name><argument_list pos:line="47" pos:column="76">()<pos:position pos:line="47" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="47" pos:column="80"/></decl_stmt>

		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><operator pos:line="49" pos:column="21">!<pos:position pos:line="49" pos:column="22"/></operator><call><name pos:line="49" pos:column="22">starts_with<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><name pos:line="49" pos:column="34">real_sub_git_dir<pos:position pos:line="49" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="52">real_common_git_dir<pos:position pos:line="49" pos:column="71"/></name></expr></argument>)<pos:position pos:line="49" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="73"/></condition><then pos:line="49" pos:column="73">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="25">relocate_single_git_dir_into_superproject<pos:position pos:line="50" pos:column="66"/></name><argument_list pos:line="50" pos:column="66">(<argument><expr><name pos:line="50" pos:column="67">prefix<pos:position pos:line="50" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="75">path<pos:position pos:line="50" pos:column="79"/></name></expr></argument>)<pos:position pos:line="50" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="81"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="52" pos:column="17">free<pos:position pos:line="52" pos:column="21"/></name><argument_list pos:line="52" pos:column="21">(<argument><expr><name pos:line="52" pos:column="22">real_sub_git_dir<pos:position pos:line="52" pos:column="38"/></name></expr></argument>)<pos:position pos:line="52" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">free<pos:position pos:line="53" pos:column="21"/></name><argument_list pos:line="53" pos:column="21">(<argument><expr><name pos:line="53" pos:column="22">real_common_git_dir<pos:position pos:line="53" pos:column="41"/></name></expr></argument>)<pos:position pos:line="53" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">strbuf_release<pos:position pos:line="55" pos:column="23"/></name><argument_list pos:line="55" pos:column="23">(<argument><expr><operator pos:line="55" pos:column="24">&amp;<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="25">gitdir<pos:position pos:line="55" pos:column="31"/></name></expr></argument>)<pos:position pos:line="55" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt>

	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">flags<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">&amp;<pos:position pos:line="57" pos:column="24"/></operator> <name pos:line="57" pos:column="21">ABSORB_GITDIR_RECURSE_SUBMODULES<pos:position pos:line="57" pos:column="53"/></name></expr>)<pos:position pos:line="57" pos:column="54"/></condition><then pos:line="57" pos:column="54"> <block pos:line="57" pos:column="55">{
		<decl_stmt><decl><type><name><name pos:line="58" pos:column="17">struct<pos:position pos:line="58" pos:column="23"/></name> <name pos:line="58" pos:column="24">child_process<pos:position pos:line="58" pos:column="37"/></name></name></type> <name pos:line="58" pos:column="38">cp<pos:position pos:line="58" pos:column="40"/></name> <init pos:line="58" pos:column="41">= <expr><name pos:line="58" pos:column="43">CHILD_PROCESS_INIT<pos:position pos:line="58" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="58" pos:column="62"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="59" pos:column="17">struct<pos:position pos:line="59" pos:column="23"/></name> <name pos:line="59" pos:column="24">strbuf<pos:position pos:line="59" pos:column="30"/></name></name></type> <name pos:line="59" pos:column="31">sb<pos:position pos:line="59" pos:column="33"/></name> <init pos:line="59" pos:column="34">= <expr><name pos:line="59" pos:column="36">STRBUF_INIT<pos:position pos:line="59" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="59" pos:column="48"/></decl_stmt>

		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><name pos:line="61" pos:column="21">flags<pos:position pos:line="61" pos:column="26"/></name> <operator pos:line="61" pos:column="27">&amp;<pos:position pos:line="61" pos:column="32"/></operator> <operator pos:line="61" pos:column="29">~<pos:position pos:line="61" pos:column="30"/></operator><name pos:line="61" pos:column="30">ABSORB_GITDIR_RECURSE_SUBMODULES<pos:position pos:line="61" pos:column="62"/></name></expr>)<pos:position pos:line="61" pos:column="63"/></condition><then pos:line="61" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="25">die<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><literal type="string" pos:line="62" pos:column="29">"BUG: we don't know how to pass the flags down?"<pos:position pos:line="62" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="79"/></expr_stmt></block></then></if>

		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><call><name pos:line="64" pos:column="21">get_super_prefix<pos:position pos:line="64" pos:column="37"/></name><argument_list pos:line="64" pos:column="37">()<pos:position pos:line="64" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="40"/></condition><then pos:line="64" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="25">strbuf_addstr<pos:position pos:line="65" pos:column="38"/></name><argument_list pos:line="65" pos:column="38">(<argument><expr><operator pos:line="65" pos:column="39">&amp;<pos:position pos:line="65" pos:column="44"/></operator><name pos:line="65" pos:column="40">sb<pos:position pos:line="65" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="44">get_super_prefix<pos:position pos:line="65" pos:column="60"/></name><argument_list pos:line="65" pos:column="60">()<pos:position pos:line="65" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="64"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="66" pos:column="17">strbuf_addstr<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><operator pos:line="66" pos:column="31">&amp;<pos:position pos:line="66" pos:column="36"/></operator><name pos:line="66" pos:column="32">sb<pos:position pos:line="66" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="36">path<pos:position pos:line="66" pos:column="40"/></name></expr></argument>)<pos:position pos:line="66" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">strbuf_addch<pos:position pos:line="67" pos:column="29"/></name><argument_list pos:line="67" pos:column="29">(<argument><expr><operator pos:line="67" pos:column="30">&amp;<pos:position pos:line="67" pos:column="35"/></operator><name pos:line="67" pos:column="31">sb<pos:position pos:line="67" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="67" pos:column="35">'/'<pos:position pos:line="67" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="40"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="69" pos:column="17">cp<pos:position pos:line="69" pos:column="19"/></name><operator pos:line="69" pos:column="19">.<pos:position pos:line="69" pos:column="20"/></operator><name pos:line="69" pos:column="20">dir<pos:position pos:line="69" pos:column="23"/></name></name> <operator pos:line="69" pos:column="24">=<pos:position pos:line="69" pos:column="25"/></operator> <name pos:line="69" pos:column="26">path<pos:position pos:line="69" pos:column="30"/></name></expr>;<pos:position pos:line="69" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="70" pos:column="17">cp<pos:position pos:line="70" pos:column="19"/></name><operator pos:line="70" pos:column="19">.<pos:position pos:line="70" pos:column="20"/></operator><name pos:line="70" pos:column="20">git_cmd<pos:position pos:line="70" pos:column="27"/></name></name> <operator pos:line="70" pos:column="28">=<pos:position pos:line="70" pos:column="29"/></operator> <literal type="number" pos:line="70" pos:column="30">1<pos:position pos:line="70" pos:column="31"/></literal></expr>;<pos:position pos:line="70" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="71" pos:column="17">cp<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">.<pos:position pos:line="71" pos:column="20"/></operator><name pos:line="71" pos:column="20">no_stdin<pos:position pos:line="71" pos:column="28"/></name></name> <operator pos:line="71" pos:column="29">=<pos:position pos:line="71" pos:column="30"/></operator> <literal type="number" pos:line="71" pos:column="31">1<pos:position pos:line="71" pos:column="32"/></literal></expr>;<pos:position pos:line="71" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="72" pos:column="17">argv_array_pushl<pos:position pos:line="72" pos:column="33"/></name><argument_list pos:line="72" pos:column="33">(<argument><expr><operator pos:line="72" pos:column="34">&amp;<pos:position pos:line="72" pos:column="39"/></operator><name><name pos:line="72" pos:column="35">cp<pos:position pos:line="72" pos:column="37"/></name><operator pos:line="72" pos:column="37">.<pos:position pos:line="72" pos:column="38"/></operator><name pos:line="72" pos:column="38">args<pos:position pos:line="72" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="44">"--super-prefix"<pos:position pos:line="72" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="62">sb<pos:position pos:line="72" pos:column="64"/></name><operator pos:line="72" pos:column="64">.<pos:position pos:line="72" pos:column="65"/></operator><name pos:line="72" pos:column="65">buf<pos:position pos:line="72" pos:column="68"/></name></name></expr></argument>,
					   <argument><expr><literal type="string" pos:line="73" pos:column="44">"submodule--helper"<pos:position pos:line="73" pos:column="63"/></literal></expr></argument>,
					   <argument><expr><literal type="string" pos:line="74" pos:column="44">"absorb-git-dirs"<pos:position pos:line="74" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="63">NULL<pos:position pos:line="74" pos:column="67"/></name></expr></argument>)<pos:position pos:line="74" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="75" pos:column="17">prepare_submodule_repo_env<pos:position pos:line="75" pos:column="43"/></name><argument_list pos:line="75" pos:column="43">(<argument><expr><operator pos:line="75" pos:column="44">&amp;<pos:position pos:line="75" pos:column="49"/></operator><name><name pos:line="75" pos:column="45">cp<pos:position pos:line="75" pos:column="47"/></name><operator pos:line="75" pos:column="47">.<pos:position pos:line="75" pos:column="48"/></operator><name pos:line="75" pos:column="48">env_array<pos:position pos:line="75" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="59"/></expr_stmt>
		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><call><name pos:line="76" pos:column="21">run_command<pos:position pos:line="76" pos:column="32"/></name><argument_list pos:line="76" pos:column="32">(<argument><expr><operator pos:line="76" pos:column="33">&amp;<pos:position pos:line="76" pos:column="38"/></operator><name pos:line="76" pos:column="34">cp<pos:position pos:line="76" pos:column="36"/></name></expr></argument>)<pos:position pos:line="76" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="38"/></condition><then pos:line="76" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="25">die<pos:position pos:line="77" pos:column="28"/></name><argument_list pos:line="77" pos:column="28">(<argument><expr><call><name pos:line="77" pos:column="29">_<pos:position pos:line="77" pos:column="30"/></name><argument_list pos:line="77" pos:column="30">(<argument><expr><literal type="string" pos:line="77" pos:column="31">"could not recurse into submodule '%s'"<pos:position pos:line="77" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="77" pos:column="73">path<pos:position pos:line="77" pos:column="77"/></name></expr></argument>)<pos:position pos:line="77" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="79"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="79" pos:column="17">strbuf_release<pos:position pos:line="79" pos:column="31"/></name><argument_list pos:line="79" pos:column="31">(<argument><expr><operator pos:line="79" pos:column="32">&amp;<pos:position pos:line="79" pos:column="37"/></operator><name pos:line="79" pos:column="33">sb<pos:position pos:line="79" pos:column="35"/></name></expr></argument>)<pos:position pos:line="79" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="80" pos:column="10"/></block></then></if>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3162_git-2.10.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_main<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name pos:line="1" pos:column="14">int<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">argc<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">argv<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">listen_port<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><literal type="number" pos:line="3" pos:column="27">0<pos:position pos:line="3" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">string_list<pos:position pos:line="4" pos:column="27"/></name></name></type> <name pos:line="4" pos:column="28">listen_addr<pos:position pos:line="4" pos:column="39"/></name> <init pos:line="4" pos:column="40">= <expr><name pos:line="4" pos:column="42">STRING_LIST_INIT_NODUP<pos:position pos:line="4" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="65"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">serve_mode<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="29">inetd_mode<pos:position pos:line="5" pos:column="39"/></name> <init pos:line="5" pos:column="40">= <expr><literal type="number" pos:line="5" pos:column="42">0<pos:position pos:line="5" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">pid_file<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name pos:line="6" pos:column="32">NULL<pos:position pos:line="6" pos:column="36"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="38">*<pos:position pos:line="6" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="39">user_name<pos:position pos:line="6" pos:column="48"/></name> <init pos:line="6" pos:column="49">= <expr><name pos:line="6" pos:column="51">NULL<pos:position pos:line="6" pos:column="55"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="57">*<pos:position pos:line="6" pos:column="58"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="58">group_name<pos:position pos:line="6" pos:column="68"/></name> <init pos:line="6" pos:column="69">= <expr><name pos:line="6" pos:column="71">NULL<pos:position pos:line="6" pos:column="75"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="76"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">detach<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">credentials<pos:position pos:line="8" pos:column="27"/></name></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">cred<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><name pos:line="8" pos:column="36">NULL<pos:position pos:line="8" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">1<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="25">argc<pos:position pos:line="11" pos:column="29"/></name></expr>;<pos:position pos:line="11" pos:column="30"/></condition> <incr><expr><name pos:line="11" pos:column="31">i<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">++<pos:position pos:line="11" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="35"/></control> <block pos:line="11" pos:column="36">{
		<decl_stmt><decl><type><specifier pos:line="12" pos:column="17">const<pos:position pos:line="12" pos:column="22"/></specifier> <name pos:line="12" pos:column="23">char<pos:position pos:line="12" pos:column="27"/></name> <modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">arg<pos:position pos:line="12" pos:column="32"/></name> <init pos:line="12" pos:column="33">= <expr><name><name pos:line="12" pos:column="35">argv<pos:position pos:line="12" pos:column="39"/></name><index pos:line="12" pos:column="39">[<expr><name pos:line="12" pos:column="40">i<pos:position pos:line="12" pos:column="41"/></name></expr>]<pos:position pos:line="12" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="12" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="13" pos:column="17">const<pos:position pos:line="13" pos:column="22"/></specifier> <name pos:line="13" pos:column="23">char<pos:position pos:line="13" pos:column="27"/></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">v<pos:position pos:line="13" pos:column="30"/></name></decl>;<pos:position pos:line="13" pos:column="31"/></decl_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><call><name pos:line="15" pos:column="21">skip_prefix<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">arg<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="38">"--listen="<pos:position pos:line="15" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="51">&amp;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="52">v<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="55"/></condition><then pos:line="15" pos:column="55"> <block pos:line="15" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">string_list_append<pos:position pos:line="16" pos:column="43"/></name><argument_list pos:line="16" pos:column="43">(<argument><expr><operator pos:line="16" pos:column="44">&amp;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="45">listen_addr<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="58">xstrdup_tolower<pos:position pos:line="16" pos:column="73"/></name><argument_list pos:line="16" pos:column="73">(<argument><expr><name pos:line="16" pos:column="74">v<pos:position pos:line="16" pos:column="75"/></name></expr></argument>)<pos:position pos:line="16" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="78"/></expr_stmt>
			<continue pos:line="17" pos:column="25">continue;<pos:position pos:line="17" pos:column="34"/></continue>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><call><name pos:line="19" pos:column="21">skip_prefix<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">arg<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="38">"--port="<pos:position pos:line="19" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="49">&amp;<pos:position pos:line="19" pos:column="54"/></operator><name pos:line="19" pos:column="50">v<pos:position pos:line="19" pos:column="51"/></name></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="53"/></condition><then pos:line="19" pos:column="53"> <block pos:line="19" pos:column="54">{
			<decl_stmt><decl><type><name pos:line="20" pos:column="25">char<pos:position pos:line="20" pos:column="29"/></name> <modifier pos:line="20" pos:column="30">*<pos:position pos:line="20" pos:column="31"/></modifier></type><name pos:line="20" pos:column="31">end<pos:position pos:line="20" pos:column="34"/></name></decl>;<pos:position pos:line="20" pos:column="35"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="21" pos:column="25">unsigned<pos:position pos:line="21" pos:column="33"/></name> <name pos:line="21" pos:column="34">long<pos:position pos:line="21" pos:column="38"/></name></type> <name pos:line="21" pos:column="39">n<pos:position pos:line="21" pos:column="40"/></name></decl>;<pos:position pos:line="21" pos:column="41"/></decl_stmt>
			<expr_stmt><expr><name pos:line="22" pos:column="25">n<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <call><name pos:line="22" pos:column="29">strtoul<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><name pos:line="22" pos:column="37">v<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="40">&amp;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="41">end<pos:position pos:line="22" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="46">0<pos:position pos:line="22" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><operator pos:line="23" pos:column="29">*<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">v<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">&amp;&amp;<pos:position pos:line="23" pos:column="42"/></operator> <operator pos:line="23" pos:column="35">!<pos:position pos:line="23" pos:column="36"/></operator><operator pos:line="23" pos:column="36">*<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="37">end<pos:position pos:line="23" pos:column="40"/></name></expr>)<pos:position pos:line="23" pos:column="41"/></condition><then pos:line="23" pos:column="41"> <block pos:line="23" pos:column="42">{
				<expr_stmt><expr><name pos:line="24" pos:column="33">listen_port<pos:position pos:line="24" pos:column="44"/></name> <operator pos:line="24" pos:column="45">=<pos:position pos:line="24" pos:column="46"/></operator> <name pos:line="24" pos:column="47">n<pos:position pos:line="24" pos:column="48"/></name></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
				<continue pos:line="25" pos:column="33">continue;<pos:position pos:line="25" pos:column="42"/></continue>
			}<pos:position pos:line="26" pos:column="26"/></block></then></if>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><call><name pos:line="28" pos:column="22">strcmp<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">arg<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="34">"--serve"<pos:position pos:line="28" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="45"/></condition><then pos:line="28" pos:column="45"> <block pos:line="28" pos:column="46">{
			<expr_stmt><expr><name pos:line="29" pos:column="25">serve_mode<pos:position pos:line="29" pos:column="35"/></name> <operator pos:line="29" pos:column="36">=<pos:position pos:line="29" pos:column="37"/></operator> <literal type="number" pos:line="29" pos:column="38">1<pos:position pos:line="29" pos:column="39"/></literal></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
			<continue pos:line="30" pos:column="25">continue;<pos:position pos:line="30" pos:column="34"/></continue>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><operator pos:line="32" pos:column="21">!<pos:position pos:line="32" pos:column="22"/></operator><call><name pos:line="32" pos:column="22">strcmp<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">arg<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="34">"--inetd"<pos:position pos:line="32" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="45"/></condition><then pos:line="32" pos:column="45"> <block pos:line="32" pos:column="46">{
			<expr_stmt><expr><name pos:line="33" pos:column="25">inetd_mode<pos:position pos:line="33" pos:column="35"/></name> <operator pos:line="33" pos:column="36">=<pos:position pos:line="33" pos:column="37"/></operator> <literal type="number" pos:line="33" pos:column="38">1<pos:position pos:line="33" pos:column="39"/></literal></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="34" pos:column="25">log_syslog<pos:position pos:line="34" pos:column="35"/></name> <operator pos:line="34" pos:column="36">=<pos:position pos:line="34" pos:column="37"/></operator> <literal type="number" pos:line="34" pos:column="38">1<pos:position pos:line="34" pos:column="39"/></literal></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>
			<continue pos:line="35" pos:column="25">continue;<pos:position pos:line="35" pos:column="34"/></continue>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><operator pos:line="37" pos:column="21">!<pos:position pos:line="37" pos:column="22"/></operator><call><name pos:line="37" pos:column="22">strcmp<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><name pos:line="37" pos:column="29">arg<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="34">"--verbose"<pos:position pos:line="37" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="47"/></condition><then pos:line="37" pos:column="47"> <block pos:line="37" pos:column="48">{
			<expr_stmt><expr><name pos:line="38" pos:column="25">verbose<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">=<pos:position pos:line="38" pos:column="34"/></operator> <literal type="number" pos:line="38" pos:column="35">1<pos:position pos:line="38" pos:column="36"/></literal></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
			<continue pos:line="39" pos:column="25">continue;<pos:position pos:line="39" pos:column="34"/></continue>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><operator pos:line="41" pos:column="21">!<pos:position pos:line="41" pos:column="22"/></operator><call><name pos:line="41" pos:column="22">strcmp<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">arg<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="34">"--syslog"<pos:position pos:line="41" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="46"/></condition><then pos:line="41" pos:column="46"> <block pos:line="41" pos:column="47">{
			<expr_stmt><expr><name pos:line="42" pos:column="25">log_syslog<pos:position pos:line="42" pos:column="35"/></name> <operator pos:line="42" pos:column="36">=<pos:position pos:line="42" pos:column="37"/></operator> <literal type="number" pos:line="42" pos:column="38">1<pos:position pos:line="42" pos:column="39"/></literal></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt>
			<continue pos:line="43" pos:column="25">continue;<pos:position pos:line="43" pos:column="34"/></continue>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><operator pos:line="45" pos:column="21">!<pos:position pos:line="45" pos:column="22"/></operator><call><name pos:line="45" pos:column="22">strcmp<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><name pos:line="45" pos:column="29">arg<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="34">"--export-all"<pos:position pos:line="45" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="50"/></condition><then pos:line="45" pos:column="50"> <block pos:line="45" pos:column="51">{
			<expr_stmt><expr><name pos:line="46" pos:column="25">export_all_trees<pos:position pos:line="46" pos:column="41"/></name> <operator pos:line="46" pos:column="42">=<pos:position pos:line="46" pos:column="43"/></operator> <literal type="number" pos:line="46" pos:column="44">1<pos:position pos:line="46" pos:column="45"/></literal></expr>;<pos:position pos:line="46" pos:column="46"/></expr_stmt>
			<continue pos:line="47" pos:column="25">continue;<pos:position pos:line="47" pos:column="34"/></continue>
		}<pos:position pos:line="48" pos:column="18"/></block></then></if>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><call><name pos:line="49" pos:column="21">skip_prefix<pos:position pos:line="49" pos:column="32"/></name><argument_list pos:line="49" pos:column="32">(<argument><expr><name pos:line="49" pos:column="33">arg<pos:position pos:line="49" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="38">"--access-hook="<pos:position pos:line="49" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="56">&amp;<pos:position pos:line="49" pos:column="61"/></operator><name pos:line="49" pos:column="57">v<pos:position pos:line="49" pos:column="58"/></name></expr></argument>)<pos:position pos:line="49" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="60"/></condition><then pos:line="49" pos:column="60"> <block pos:line="49" pos:column="61">{
			<expr_stmt><expr><name pos:line="50" pos:column="25">access_hook<pos:position pos:line="50" pos:column="36"/></name> <operator pos:line="50" pos:column="37">=<pos:position pos:line="50" pos:column="38"/></operator> <name pos:line="50" pos:column="39">v<pos:position pos:line="50" pos:column="40"/></name></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>
			<continue pos:line="51" pos:column="25">continue;<pos:position pos:line="51" pos:column="34"/></continue>
		}<pos:position pos:line="52" pos:column="18"/></block></then></if>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><call><name pos:line="53" pos:column="21">skip_prefix<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><name pos:line="53" pos:column="33">arg<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="38">"--timeout="<pos:position pos:line="53" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="53" pos:column="52">&amp;<pos:position pos:line="53" pos:column="57"/></operator><name pos:line="53" pos:column="53">v<pos:position pos:line="53" pos:column="54"/></name></expr></argument>)<pos:position pos:line="53" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="56"/></condition><then pos:line="53" pos:column="56"> <block pos:line="53" pos:column="57">{
			<expr_stmt><expr><name pos:line="54" pos:column="25">timeout<pos:position pos:line="54" pos:column="32"/></name> <operator pos:line="54" pos:column="33">=<pos:position pos:line="54" pos:column="34"/></operator> <call><name pos:line="54" pos:column="35">atoi<pos:position pos:line="54" pos:column="39"/></name><argument_list pos:line="54" pos:column="39">(<argument><expr><name pos:line="54" pos:column="40">v<pos:position pos:line="54" pos:column="41"/></name></expr></argument>)<pos:position pos:line="54" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="43"/></expr_stmt>
			<continue pos:line="55" pos:column="25">continue;<pos:position pos:line="55" pos:column="34"/></continue>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if>
		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><call><name pos:line="57" pos:column="21">skip_prefix<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">arg<pos:position pos:line="57" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="38">"--init-timeout="<pos:position pos:line="57" pos:column="55"/></literal></expr></argument>, <argument><expr><operator pos:line="57" pos:column="57">&amp;<pos:position pos:line="57" pos:column="62"/></operator><name pos:line="57" pos:column="58">v<pos:position pos:line="57" pos:column="59"/></name></expr></argument>)<pos:position pos:line="57" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="61"/></condition><then pos:line="57" pos:column="61"> <block pos:line="57" pos:column="62">{
			<expr_stmt><expr><name pos:line="58" pos:column="25">init_timeout<pos:position pos:line="58" pos:column="37"/></name> <operator pos:line="58" pos:column="38">=<pos:position pos:line="58" pos:column="39"/></operator> <call><name pos:line="58" pos:column="40">atoi<pos:position pos:line="58" pos:column="44"/></name><argument_list pos:line="58" pos:column="44">(<argument><expr><name pos:line="58" pos:column="45">v<pos:position pos:line="58" pos:column="46"/></name></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt>
			<continue pos:line="59" pos:column="25">continue;<pos:position pos:line="59" pos:column="34"/></continue>
		}<pos:position pos:line="60" pos:column="18"/></block></then></if>
		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><call><name pos:line="61" pos:column="21">skip_prefix<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><name pos:line="61" pos:column="33">arg<pos:position pos:line="61" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="38">"--max-connections="<pos:position pos:line="61" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="61" pos:column="60">&amp;<pos:position pos:line="61" pos:column="65"/></operator><name pos:line="61" pos:column="61">v<pos:position pos:line="61" pos:column="62"/></name></expr></argument>)<pos:position pos:line="61" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="64"/></condition><then pos:line="61" pos:column="64"> <block pos:line="61" pos:column="65">{
			<expr_stmt><expr><name pos:line="62" pos:column="25">max_connections<pos:position pos:line="62" pos:column="40"/></name> <operator pos:line="62" pos:column="41">=<pos:position pos:line="62" pos:column="42"/></operator> <call><name pos:line="62" pos:column="43">atoi<pos:position pos:line="62" pos:column="47"/></name><argument_list pos:line="62" pos:column="47">(<argument><expr><name pos:line="62" pos:column="48">v<pos:position pos:line="62" pos:column="49"/></name></expr></argument>)<pos:position pos:line="62" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="51"/></expr_stmt>
			<if pos:line="63" pos:column="25">if <condition pos:line="63" pos:column="28">(<expr><name pos:line="63" pos:column="29">max_connections<pos:position pos:line="63" pos:column="44"/></name> <operator pos:line="63" pos:column="45">&lt;<pos:position pos:line="63" pos:column="49"/></operator> <literal type="number" pos:line="63" pos:column="47">0<pos:position pos:line="63" pos:column="48"/></literal></expr>)<pos:position pos:line="63" pos:column="49"/></condition><then pos:line="63" pos:column="49">
				<block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="33">max_connections<pos:position pos:line="64" pos:column="48"/></name> <operator pos:line="64" pos:column="49">=<pos:position pos:line="64" pos:column="50"/></operator> <literal type="number" pos:line="64" pos:column="51">0<pos:position pos:line="64" pos:column="52"/></literal></expr>;<pos:position pos:line="64" pos:column="53"/></expr_stmt></block></then></if>	        <comment type="block" pos:line="64" pos:column="65">/* unlimited */</comment>
			<continue pos:line="65" pos:column="25">continue;<pos:position pos:line="65" pos:column="34"/></continue>
		}<pos:position pos:line="66" pos:column="18"/></block></then></if>
		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><operator pos:line="67" pos:column="21">!<pos:position pos:line="67" pos:column="22"/></operator><call><name pos:line="67" pos:column="22">strcmp<pos:position pos:line="67" pos:column="28"/></name><argument_list pos:line="67" pos:column="28">(<argument><expr><name pos:line="67" pos:column="29">arg<pos:position pos:line="67" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="34">"--strict-paths"<pos:position pos:line="67" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="52"/></condition><then pos:line="67" pos:column="52"> <block pos:line="67" pos:column="53">{
			<expr_stmt><expr><name pos:line="68" pos:column="25">strict_paths<pos:position pos:line="68" pos:column="37"/></name> <operator pos:line="68" pos:column="38">=<pos:position pos:line="68" pos:column="39"/></operator> <literal type="number" pos:line="68" pos:column="40">1<pos:position pos:line="68" pos:column="41"/></literal></expr>;<pos:position pos:line="68" pos:column="42"/></expr_stmt>
			<continue pos:line="69" pos:column="25">continue;<pos:position pos:line="69" pos:column="34"/></continue>
		}<pos:position pos:line="70" pos:column="18"/></block></then></if>
		<if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><call><name pos:line="71" pos:column="21">skip_prefix<pos:position pos:line="71" pos:column="32"/></name><argument_list pos:line="71" pos:column="32">(<argument><expr><name pos:line="71" pos:column="33">arg<pos:position pos:line="71" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="38">"--base-path="<pos:position pos:line="71" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="71" pos:column="54">&amp;<pos:position pos:line="71" pos:column="59"/></operator><name pos:line="71" pos:column="55">v<pos:position pos:line="71" pos:column="56"/></name></expr></argument>)<pos:position pos:line="71" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="58"/></condition><then pos:line="71" pos:column="58"> <block pos:line="71" pos:column="59">{
			<expr_stmt><expr><name pos:line="72" pos:column="25">base_path<pos:position pos:line="72" pos:column="34"/></name> <operator pos:line="72" pos:column="35">=<pos:position pos:line="72" pos:column="36"/></operator> <name pos:line="72" pos:column="37">v<pos:position pos:line="72" pos:column="38"/></name></expr>;<pos:position pos:line="72" pos:column="39"/></expr_stmt>
			<continue pos:line="73" pos:column="25">continue;<pos:position pos:line="73" pos:column="34"/></continue>
		}<pos:position pos:line="74" pos:column="18"/></block></then></if>
		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><operator pos:line="75" pos:column="21">!<pos:position pos:line="75" pos:column="22"/></operator><call><name pos:line="75" pos:column="22">strcmp<pos:position pos:line="75" pos:column="28"/></name><argument_list pos:line="75" pos:column="28">(<argument><expr><name pos:line="75" pos:column="29">arg<pos:position pos:line="75" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="34">"--base-path-relaxed"<pos:position pos:line="75" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="57"/></condition><then pos:line="75" pos:column="57"> <block pos:line="75" pos:column="58">{
			<expr_stmt><expr><name pos:line="76" pos:column="25">base_path_relaxed<pos:position pos:line="76" pos:column="42"/></name> <operator pos:line="76" pos:column="43">=<pos:position pos:line="76" pos:column="44"/></operator> <literal type="number" pos:line="76" pos:column="45">1<pos:position pos:line="76" pos:column="46"/></literal></expr>;<pos:position pos:line="76" pos:column="47"/></expr_stmt>
			<continue pos:line="77" pos:column="25">continue;<pos:position pos:line="77" pos:column="34"/></continue>
		}<pos:position pos:line="78" pos:column="18"/></block></then></if>
		<if pos:line="79" pos:column="17">if <condition pos:line="79" pos:column="20">(<expr><call><name pos:line="79" pos:column="21">skip_prefix<pos:position pos:line="79" pos:column="32"/></name><argument_list pos:line="79" pos:column="32">(<argument><expr><name pos:line="79" pos:column="33">arg<pos:position pos:line="79" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="38">"--interpolated-path="<pos:position pos:line="79" pos:column="60"/></literal></expr></argument>, <argument><expr><operator pos:line="79" pos:column="62">&amp;<pos:position pos:line="79" pos:column="67"/></operator><name pos:line="79" pos:column="63">v<pos:position pos:line="79" pos:column="64"/></name></expr></argument>)<pos:position pos:line="79" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="66"/></condition><then pos:line="79" pos:column="66"> <block pos:line="79" pos:column="67">{
			<expr_stmt><expr><name pos:line="80" pos:column="25">interpolated_path<pos:position pos:line="80" pos:column="42"/></name> <operator pos:line="80" pos:column="43">=<pos:position pos:line="80" pos:column="44"/></operator> <name pos:line="80" pos:column="45">v<pos:position pos:line="80" pos:column="46"/></name></expr>;<pos:position pos:line="80" pos:column="47"/></expr_stmt>
			<continue pos:line="81" pos:column="25">continue;<pos:position pos:line="81" pos:column="34"/></continue>
		}<pos:position pos:line="82" pos:column="18"/></block></then></if>
		<if pos:line="83" pos:column="17">if <condition pos:line="83" pos:column="20">(<expr><operator pos:line="83" pos:column="21">!<pos:position pos:line="83" pos:column="22"/></operator><call><name pos:line="83" pos:column="22">strcmp<pos:position pos:line="83" pos:column="28"/></name><argument_list pos:line="83" pos:column="28">(<argument><expr><name pos:line="83" pos:column="29">arg<pos:position pos:line="83" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="34">"--reuseaddr"<pos:position pos:line="83" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="49"/></condition><then pos:line="83" pos:column="49"> <block pos:line="83" pos:column="50">{
			<expr_stmt><expr><name pos:line="84" pos:column="25">reuseaddr<pos:position pos:line="84" pos:column="34"/></name> <operator pos:line="84" pos:column="35">=<pos:position pos:line="84" pos:column="36"/></operator> <literal type="number" pos:line="84" pos:column="37">1<pos:position pos:line="84" pos:column="38"/></literal></expr>;<pos:position pos:line="84" pos:column="39"/></expr_stmt>
			<continue pos:line="85" pos:column="25">continue;<pos:position pos:line="85" pos:column="34"/></continue>
		}<pos:position pos:line="86" pos:column="18"/></block></then></if>
		<if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><operator pos:line="87" pos:column="21">!<pos:position pos:line="87" pos:column="22"/></operator><call><name pos:line="87" pos:column="22">strcmp<pos:position pos:line="87" pos:column="28"/></name><argument_list pos:line="87" pos:column="28">(<argument><expr><name pos:line="87" pos:column="29">arg<pos:position pos:line="87" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="34">"--user-path"<pos:position pos:line="87" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="49"/></condition><then pos:line="87" pos:column="49"> <block pos:line="87" pos:column="50">{
			<expr_stmt><expr><name pos:line="88" pos:column="25">user_path<pos:position pos:line="88" pos:column="34"/></name> <operator pos:line="88" pos:column="35">=<pos:position pos:line="88" pos:column="36"/></operator> <literal type="string" pos:line="88" pos:column="37">""<pos:position pos:line="88" pos:column="39"/></literal></expr>;<pos:position pos:line="88" pos:column="40"/></expr_stmt>
			<continue pos:line="89" pos:column="25">continue;<pos:position pos:line="89" pos:column="34"/></continue>
		}<pos:position pos:line="90" pos:column="18"/></block></then></if>
		<if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><call><name pos:line="91" pos:column="21">skip_prefix<pos:position pos:line="91" pos:column="32"/></name><argument_list pos:line="91" pos:column="32">(<argument><expr><name pos:line="91" pos:column="33">arg<pos:position pos:line="91" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="38">"--user-path="<pos:position pos:line="91" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="91" pos:column="54">&amp;<pos:position pos:line="91" pos:column="59"/></operator><name pos:line="91" pos:column="55">v<pos:position pos:line="91" pos:column="56"/></name></expr></argument>)<pos:position pos:line="91" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="58"/></condition><then pos:line="91" pos:column="58"> <block pos:line="91" pos:column="59">{
			<expr_stmt><expr><name pos:line="92" pos:column="25">user_path<pos:position pos:line="92" pos:column="34"/></name> <operator pos:line="92" pos:column="35">=<pos:position pos:line="92" pos:column="36"/></operator> <name pos:line="92" pos:column="37">v<pos:position pos:line="92" pos:column="38"/></name></expr>;<pos:position pos:line="92" pos:column="39"/></expr_stmt>
			<continue pos:line="93" pos:column="25">continue;<pos:position pos:line="93" pos:column="34"/></continue>
		}<pos:position pos:line="94" pos:column="18"/></block></then></if>
		<if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><call><name pos:line="95" pos:column="21">skip_prefix<pos:position pos:line="95" pos:column="32"/></name><argument_list pos:line="95" pos:column="32">(<argument><expr><name pos:line="95" pos:column="33">arg<pos:position pos:line="95" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="38">"--pid-file="<pos:position pos:line="95" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="95" pos:column="53">&amp;<pos:position pos:line="95" pos:column="58"/></operator><name pos:line="95" pos:column="54">v<pos:position pos:line="95" pos:column="55"/></name></expr></argument>)<pos:position pos:line="95" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="57"/></condition><then pos:line="95" pos:column="57"> <block pos:line="95" pos:column="58">{
			<expr_stmt><expr><name pos:line="96" pos:column="25">pid_file<pos:position pos:line="96" pos:column="33"/></name> <operator pos:line="96" pos:column="34">=<pos:position pos:line="96" pos:column="35"/></operator> <name pos:line="96" pos:column="36">v<pos:position pos:line="96" pos:column="37"/></name></expr>;<pos:position pos:line="96" pos:column="38"/></expr_stmt>
			<continue pos:line="97" pos:column="25">continue;<pos:position pos:line="97" pos:column="34"/></continue>
		}<pos:position pos:line="98" pos:column="18"/></block></then></if>
		<if pos:line="99" pos:column="17">if <condition pos:line="99" pos:column="20">(<expr><operator pos:line="99" pos:column="21">!<pos:position pos:line="99" pos:column="22"/></operator><call><name pos:line="99" pos:column="22">strcmp<pos:position pos:line="99" pos:column="28"/></name><argument_list pos:line="99" pos:column="28">(<argument><expr><name pos:line="99" pos:column="29">arg<pos:position pos:line="99" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="34">"--detach"<pos:position pos:line="99" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="46"/></condition><then pos:line="99" pos:column="46"> <block pos:line="99" pos:column="47">{
			<expr_stmt><expr><name pos:line="100" pos:column="25">detach<pos:position pos:line="100" pos:column="31"/></name> <operator pos:line="100" pos:column="32">=<pos:position pos:line="100" pos:column="33"/></operator> <literal type="number" pos:line="100" pos:column="34">1<pos:position pos:line="100" pos:column="35"/></literal></expr>;<pos:position pos:line="100" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="101" pos:column="25">log_syslog<pos:position pos:line="101" pos:column="35"/></name> <operator pos:line="101" pos:column="36">=<pos:position pos:line="101" pos:column="37"/></operator> <literal type="number" pos:line="101" pos:column="38">1<pos:position pos:line="101" pos:column="39"/></literal></expr>;<pos:position pos:line="101" pos:column="40"/></expr_stmt>
			<continue pos:line="102" pos:column="25">continue;<pos:position pos:line="102" pos:column="34"/></continue>
		}<pos:position pos:line="103" pos:column="18"/></block></then></if>
		<if pos:line="104" pos:column="17">if <condition pos:line="104" pos:column="20">(<expr><call><name pos:line="104" pos:column="21">skip_prefix<pos:position pos:line="104" pos:column="32"/></name><argument_list pos:line="104" pos:column="32">(<argument><expr><name pos:line="104" pos:column="33">arg<pos:position pos:line="104" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="38">"--user="<pos:position pos:line="104" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="104" pos:column="49">&amp;<pos:position pos:line="104" pos:column="54"/></operator><name pos:line="104" pos:column="50">v<pos:position pos:line="104" pos:column="51"/></name></expr></argument>)<pos:position pos:line="104" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="104" pos:column="53"/></condition><then pos:line="104" pos:column="53"> <block pos:line="104" pos:column="54">{
			<expr_stmt><expr><name pos:line="105" pos:column="25">user_name<pos:position pos:line="105" pos:column="34"/></name> <operator pos:line="105" pos:column="35">=<pos:position pos:line="105" pos:column="36"/></operator> <name pos:line="105" pos:column="37">v<pos:position pos:line="105" pos:column="38"/></name></expr>;<pos:position pos:line="105" pos:column="39"/></expr_stmt>
			<continue pos:line="106" pos:column="25">continue;<pos:position pos:line="106" pos:column="34"/></continue>
		}<pos:position pos:line="107" pos:column="18"/></block></then></if>
		<if pos:line="108" pos:column="17">if <condition pos:line="108" pos:column="20">(<expr><call><name pos:line="108" pos:column="21">skip_prefix<pos:position pos:line="108" pos:column="32"/></name><argument_list pos:line="108" pos:column="32">(<argument><expr><name pos:line="108" pos:column="33">arg<pos:position pos:line="108" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="38">"--group="<pos:position pos:line="108" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="108" pos:column="50">&amp;<pos:position pos:line="108" pos:column="55"/></operator><name pos:line="108" pos:column="51">v<pos:position pos:line="108" pos:column="52"/></name></expr></argument>)<pos:position pos:line="108" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="108" pos:column="54"/></condition><then pos:line="108" pos:column="54"> <block pos:line="108" pos:column="55">{
			<expr_stmt><expr><name pos:line="109" pos:column="25">group_name<pos:position pos:line="109" pos:column="35"/></name> <operator pos:line="109" pos:column="36">=<pos:position pos:line="109" pos:column="37"/></operator> <name pos:line="109" pos:column="38">v<pos:position pos:line="109" pos:column="39"/></name></expr>;<pos:position pos:line="109" pos:column="40"/></expr_stmt>
			<continue pos:line="110" pos:column="25">continue;<pos:position pos:line="110" pos:column="34"/></continue>
		}<pos:position pos:line="111" pos:column="18"/></block></then></if>
		<if pos:line="112" pos:column="17">if <condition pos:line="112" pos:column="20">(<expr><call><name pos:line="112" pos:column="21">skip_prefix<pos:position pos:line="112" pos:column="32"/></name><argument_list pos:line="112" pos:column="32">(<argument><expr><name pos:line="112" pos:column="33">arg<pos:position pos:line="112" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="38">"--enable="<pos:position pos:line="112" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="112" pos:column="51">&amp;<pos:position pos:line="112" pos:column="56"/></operator><name pos:line="112" pos:column="52">v<pos:position pos:line="112" pos:column="53"/></name></expr></argument>)<pos:position pos:line="112" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="112" pos:column="55"/></condition><then pos:line="112" pos:column="55"> <block pos:line="112" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="113" pos:column="25">enable_service<pos:position pos:line="113" pos:column="39"/></name><argument_list pos:line="113" pos:column="39">(<argument><expr><name pos:line="113" pos:column="40">v<pos:position pos:line="113" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="43">1<pos:position pos:line="113" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="46"/></expr_stmt>
			<continue pos:line="114" pos:column="25">continue;<pos:position pos:line="114" pos:column="34"/></continue>
		}<pos:position pos:line="115" pos:column="18"/></block></then></if>
		<if pos:line="116" pos:column="17">if <condition pos:line="116" pos:column="20">(<expr><call><name pos:line="116" pos:column="21">skip_prefix<pos:position pos:line="116" pos:column="32"/></name><argument_list pos:line="116" pos:column="32">(<argument><expr><name pos:line="116" pos:column="33">arg<pos:position pos:line="116" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="38">"--disable="<pos:position pos:line="116" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="116" pos:column="52">&amp;<pos:position pos:line="116" pos:column="57"/></operator><name pos:line="116" pos:column="53">v<pos:position pos:line="116" pos:column="54"/></name></expr></argument>)<pos:position pos:line="116" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="116" pos:column="56"/></condition><then pos:line="116" pos:column="56"> <block pos:line="116" pos:column="57">{
			<expr_stmt><expr><call><name pos:line="117" pos:column="25">enable_service<pos:position pos:line="117" pos:column="39"/></name><argument_list pos:line="117" pos:column="39">(<argument><expr><name pos:line="117" pos:column="40">v<pos:position pos:line="117" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="43">0<pos:position pos:line="117" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="46"/></expr_stmt>
			<continue pos:line="118" pos:column="25">continue;<pos:position pos:line="118" pos:column="34"/></continue>
		}<pos:position pos:line="119" pos:column="18"/></block></then></if>
		<if pos:line="120" pos:column="17">if <condition pos:line="120" pos:column="20">(<expr><call><name pos:line="120" pos:column="21">skip_prefix<pos:position pos:line="120" pos:column="32"/></name><argument_list pos:line="120" pos:column="32">(<argument><expr><name pos:line="120" pos:column="33">arg<pos:position pos:line="120" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="38">"--allow-override="<pos:position pos:line="120" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="120" pos:column="59">&amp;<pos:position pos:line="120" pos:column="64"/></operator><name pos:line="120" pos:column="60">v<pos:position pos:line="120" pos:column="61"/></name></expr></argument>)<pos:position pos:line="120" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="120" pos:column="63"/></condition><then pos:line="120" pos:column="63"> <block pos:line="120" pos:column="64">{
			<expr_stmt><expr><call><name pos:line="121" pos:column="25">make_service_overridable<pos:position pos:line="121" pos:column="49"/></name><argument_list pos:line="121" pos:column="49">(<argument><expr><name pos:line="121" pos:column="50">v<pos:position pos:line="121" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="53">1<pos:position pos:line="121" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="56"/></expr_stmt>
			<continue pos:line="122" pos:column="25">continue;<pos:position pos:line="122" pos:column="34"/></continue>
		}<pos:position pos:line="123" pos:column="18"/></block></then></if>
		<if pos:line="124" pos:column="17">if <condition pos:line="124" pos:column="20">(<expr><call><name pos:line="124" pos:column="21">skip_prefix<pos:position pos:line="124" pos:column="32"/></name><argument_list pos:line="124" pos:column="32">(<argument><expr><name pos:line="124" pos:column="33">arg<pos:position pos:line="124" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="38">"--forbid-override="<pos:position pos:line="124" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="124" pos:column="60">&amp;<pos:position pos:line="124" pos:column="65"/></operator><name pos:line="124" pos:column="61">v<pos:position pos:line="124" pos:column="62"/></name></expr></argument>)<pos:position pos:line="124" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="124" pos:column="64"/></condition><then pos:line="124" pos:column="64"> <block pos:line="124" pos:column="65">{
			<expr_stmt><expr><call><name pos:line="125" pos:column="25">make_service_overridable<pos:position pos:line="125" pos:column="49"/></name><argument_list pos:line="125" pos:column="49">(<argument><expr><name pos:line="125" pos:column="50">v<pos:position pos:line="125" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="53">0<pos:position pos:line="125" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="56"/></expr_stmt>
			<continue pos:line="126" pos:column="25">continue;<pos:position pos:line="126" pos:column="34"/></continue>
		}<pos:position pos:line="127" pos:column="18"/></block></then></if>
		<if pos:line="128" pos:column="17">if <condition pos:line="128" pos:column="20">(<expr><operator pos:line="128" pos:column="21">!<pos:position pos:line="128" pos:column="22"/></operator><call><name pos:line="128" pos:column="22">strcmp<pos:position pos:line="128" pos:column="28"/></name><argument_list pos:line="128" pos:column="28">(<argument><expr><name pos:line="128" pos:column="29">arg<pos:position pos:line="128" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="34">"--informative-errors"<pos:position pos:line="128" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="128" pos:column="58"/></condition><then pos:line="128" pos:column="58"> <block pos:line="128" pos:column="59">{
			<expr_stmt><expr><name pos:line="129" pos:column="25">informative_errors<pos:position pos:line="129" pos:column="43"/></name> <operator pos:line="129" pos:column="44">=<pos:position pos:line="129" pos:column="45"/></operator> <literal type="number" pos:line="129" pos:column="46">1<pos:position pos:line="129" pos:column="47"/></literal></expr>;<pos:position pos:line="129" pos:column="48"/></expr_stmt>
			<continue pos:line="130" pos:column="25">continue;<pos:position pos:line="130" pos:column="34"/></continue>
		}<pos:position pos:line="131" pos:column="18"/></block></then></if>
		<if pos:line="132" pos:column="17">if <condition pos:line="132" pos:column="20">(<expr><operator pos:line="132" pos:column="21">!<pos:position pos:line="132" pos:column="22"/></operator><call><name pos:line="132" pos:column="22">strcmp<pos:position pos:line="132" pos:column="28"/></name><argument_list pos:line="132" pos:column="28">(<argument><expr><name pos:line="132" pos:column="29">arg<pos:position pos:line="132" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="34">"--no-informative-errors"<pos:position pos:line="132" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="132" pos:column="61"/></condition><then pos:line="132" pos:column="61"> <block pos:line="132" pos:column="62">{
			<expr_stmt><expr><name pos:line="133" pos:column="25">informative_errors<pos:position pos:line="133" pos:column="43"/></name> <operator pos:line="133" pos:column="44">=<pos:position pos:line="133" pos:column="45"/></operator> <literal type="number" pos:line="133" pos:column="46">0<pos:position pos:line="133" pos:column="47"/></literal></expr>;<pos:position pos:line="133" pos:column="48"/></expr_stmt>
			<continue pos:line="134" pos:column="25">continue;<pos:position pos:line="134" pos:column="34"/></continue>
		}<pos:position pos:line="135" pos:column="18"/></block></then></if>
		<if pos:line="136" pos:column="17">if <condition pos:line="136" pos:column="20">(<expr><operator pos:line="136" pos:column="21">!<pos:position pos:line="136" pos:column="22"/></operator><call><name pos:line="136" pos:column="22">strcmp<pos:position pos:line="136" pos:column="28"/></name><argument_list pos:line="136" pos:column="28">(<argument><expr><name pos:line="136" pos:column="29">arg<pos:position pos:line="136" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="34">"--"<pos:position pos:line="136" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="136" pos:column="40"/></condition><then pos:line="136" pos:column="40"> <block pos:line="136" pos:column="41">{
			<expr_stmt><expr><name pos:line="137" pos:column="25">ok_paths<pos:position pos:line="137" pos:column="33"/></name> <operator pos:line="137" pos:column="34">=<pos:position pos:line="137" pos:column="35"/></operator> <operator pos:line="137" pos:column="36">&amp;<pos:position pos:line="137" pos:column="41"/></operator><name><name pos:line="137" pos:column="37">argv<pos:position pos:line="137" pos:column="41"/></name><index pos:line="137" pos:column="41">[<expr><name pos:line="137" pos:column="42">i<pos:position pos:line="137" pos:column="43"/></name><operator pos:line="137" pos:column="43">+<pos:position pos:line="137" pos:column="44"/></operator><literal type="number" pos:line="137" pos:column="44">1<pos:position pos:line="137" pos:column="45"/></literal></expr>]<pos:position pos:line="137" pos:column="46"/></index></name></expr>;<pos:position pos:line="137" pos:column="47"/></expr_stmt>
			<break pos:line="138" pos:column="25">break;<pos:position pos:line="138" pos:column="31"/></break>
		}<pos:position pos:line="139" pos:column="18"/></block></then> <elseif pos:line="139" pos:column="19">else <if pos:line="139" pos:column="24">if <condition pos:line="139" pos:column="27">(<expr><name><name pos:line="139" pos:column="28">arg<pos:position pos:line="139" pos:column="31"/></name><index pos:line="139" pos:column="31">[<expr><literal type="number" pos:line="139" pos:column="32">0<pos:position pos:line="139" pos:column="33"/></literal></expr>]<pos:position pos:line="139" pos:column="34"/></index></name> <operator pos:line="139" pos:column="35">!=<pos:position pos:line="139" pos:column="37"/></operator> <literal type="char" pos:line="139" pos:column="38">'-'<pos:position pos:line="139" pos:column="41"/></literal></expr>)<pos:position pos:line="139" pos:column="42"/></condition><then pos:line="139" pos:column="42"> <block pos:line="139" pos:column="43">{
			<expr_stmt><expr><name pos:line="140" pos:column="25">ok_paths<pos:position pos:line="140" pos:column="33"/></name> <operator pos:line="140" pos:column="34">=<pos:position pos:line="140" pos:column="35"/></operator> <operator pos:line="140" pos:column="36">&amp;<pos:position pos:line="140" pos:column="41"/></operator><name><name pos:line="140" pos:column="37">argv<pos:position pos:line="140" pos:column="41"/></name><index pos:line="140" pos:column="41">[<expr><name pos:line="140" pos:column="42">i<pos:position pos:line="140" pos:column="43"/></name></expr>]<pos:position pos:line="140" pos:column="44"/></index></name></expr>;<pos:position pos:line="140" pos:column="45"/></expr_stmt>
			<break pos:line="141" pos:column="25">break;<pos:position pos:line="141" pos:column="31"/></break>
		}<pos:position pos:line="142" pos:column="18"/></block></then></if></elseif></if>

		<expr_stmt><expr><call><name pos:line="144" pos:column="17">usage<pos:position pos:line="144" pos:column="22"/></name><argument_list pos:line="144" pos:column="22">(<argument><expr><name pos:line="144" pos:column="23">daemon_usage<pos:position pos:line="144" pos:column="35"/></name></expr></argument>)<pos:position pos:line="144" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="145" pos:column="10"/></block></for>

	<if pos:line="147" pos:column="9">if <condition pos:line="147" pos:column="12">(<expr><name pos:line="147" pos:column="13">log_syslog<pos:position pos:line="147" pos:column="23"/></name></expr>)<pos:position pos:line="147" pos:column="24"/></condition><then pos:line="147" pos:column="24"> <block pos:line="147" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="148" pos:column="17">openlog<pos:position pos:line="148" pos:column="24"/></name><argument_list pos:line="148" pos:column="24">(<argument><expr><literal type="string" pos:line="148" pos:column="25">"git-daemon"<pos:position pos:line="148" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="148" pos:column="39">LOG_PID<pos:position pos:line="148" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="48">LOG_DAEMON<pos:position pos:line="148" pos:column="58"/></name></expr></argument>)<pos:position pos:line="148" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="149" pos:column="17">set_die_routine<pos:position pos:line="149" pos:column="32"/></name><argument_list pos:line="149" pos:column="32">(<argument><expr><name pos:line="149" pos:column="33">daemon_die<pos:position pos:line="149" pos:column="43"/></name></expr></argument>)<pos:position pos:line="149" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="150" pos:column="10"/></block></then> <else pos:line="150" pos:column="11">else
		<comment type="block" pos:line="151" pos:column="17">/* avoid splitting a message in the middle */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="152" pos:column="17">setvbuf<pos:position pos:line="152" pos:column="24"/></name><argument_list pos:line="152" pos:column="24">(<argument><expr><name pos:line="152" pos:column="25">stderr<pos:position pos:line="152" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="33">NULL<pos:position pos:line="152" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="39">_IOFBF<pos:position pos:line="152" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="152" pos:column="47">4096<pos:position pos:line="152" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="53"/></expr_stmt></block></else></if>

	<if pos:line="154" pos:column="9">if <condition pos:line="154" pos:column="12">(<expr><name pos:line="154" pos:column="13">inetd_mode<pos:position pos:line="154" pos:column="23"/></name> <operator pos:line="154" pos:column="24">&amp;&amp;<pos:position pos:line="154" pos:column="34"/></operator> <operator pos:line="154" pos:column="27">(<pos:position pos:line="154" pos:column="28"/></operator><name pos:line="154" pos:column="28">detach<pos:position pos:line="154" pos:column="34"/></name> <operator pos:line="154" pos:column="35">||<pos:position pos:line="154" pos:column="37"/></operator> <name pos:line="154" pos:column="38">group_name<pos:position pos:line="154" pos:column="48"/></name> <operator pos:line="154" pos:column="49">||<pos:position pos:line="154" pos:column="51"/></operator> <name pos:line="154" pos:column="52">user_name<pos:position pos:line="154" pos:column="61"/></name><operator pos:line="154" pos:column="61">)<pos:position pos:line="154" pos:column="62"/></operator></expr>)<pos:position pos:line="154" pos:column="63"/></condition><then pos:line="154" pos:column="63">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="155" pos:column="17">die<pos:position pos:line="155" pos:column="20"/></name><argument_list pos:line="155" pos:column="20">(<argument><expr><literal type="string" pos:line="155" pos:column="21">"--detach, --user and --group are incompatible with --inetd"<pos:position pos:line="155" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="83"/></expr_stmt></block></then></if>

	<if pos:line="157" pos:column="9">if <condition pos:line="157" pos:column="12">(<expr><name pos:line="157" pos:column="13">inetd_mode<pos:position pos:line="157" pos:column="23"/></name> <operator pos:line="157" pos:column="24">&amp;&amp;<pos:position pos:line="157" pos:column="34"/></operator> <operator pos:line="157" pos:column="27">(<pos:position pos:line="157" pos:column="28"/></operator><name pos:line="157" pos:column="28">listen_port<pos:position pos:line="157" pos:column="39"/></name> <operator pos:line="157" pos:column="40">||<pos:position pos:line="157" pos:column="42"/></operator> <operator pos:line="157" pos:column="43">(<pos:position pos:line="157" pos:column="44"/></operator><name><name pos:line="157" pos:column="44">listen_addr<pos:position pos:line="157" pos:column="55"/></name><operator pos:line="157" pos:column="55">.<pos:position pos:line="157" pos:column="56"/></operator><name pos:line="157" pos:column="56">nr<pos:position pos:line="157" pos:column="58"/></name></name> <operator pos:line="157" pos:column="59">&gt;<pos:position pos:line="157" pos:column="63"/></operator> <literal type="number" pos:line="157" pos:column="61">0<pos:position pos:line="157" pos:column="62"/></literal><operator pos:line="157" pos:column="62">)<pos:position pos:line="157" pos:column="63"/></operator><operator pos:line="157" pos:column="63">)<pos:position pos:line="157" pos:column="64"/></operator></expr>)<pos:position pos:line="157" pos:column="65"/></condition><then pos:line="157" pos:column="65">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="158" pos:column="17">die<pos:position pos:line="158" pos:column="20"/></name><argument_list pos:line="158" pos:column="20">(<argument><expr><literal type="string" pos:line="158" pos:column="21">"--listen= and --port= are incompatible with --inetd"<pos:position pos:line="158" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="76"/></expr_stmt></block></then>
	<elseif pos:line="159" pos:column="9">else <if pos:line="159" pos:column="14">if <condition pos:line="159" pos:column="17">(<expr><name pos:line="159" pos:column="18">listen_port<pos:position pos:line="159" pos:column="29"/></name> <operator pos:line="159" pos:column="30">==<pos:position pos:line="159" pos:column="32"/></operator> <literal type="number" pos:line="159" pos:column="33">0<pos:position pos:line="159" pos:column="34"/></literal></expr>)<pos:position pos:line="159" pos:column="35"/></condition><then pos:line="159" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name pos:line="160" pos:column="17">listen_port<pos:position pos:line="160" pos:column="28"/></name> <operator pos:line="160" pos:column="29">=<pos:position pos:line="160" pos:column="30"/></operator> <name pos:line="160" pos:column="31">DEFAULT_GIT_PORT<pos:position pos:line="160" pos:column="47"/></name></expr>;<pos:position pos:line="160" pos:column="48"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="162" pos:column="9">if <condition pos:line="162" pos:column="12">(<expr><name pos:line="162" pos:column="13">group_name<pos:position pos:line="162" pos:column="23"/></name> <operator pos:line="162" pos:column="24">&amp;&amp;<pos:position pos:line="162" pos:column="34"/></operator> <operator pos:line="162" pos:column="27">!<pos:position pos:line="162" pos:column="28"/></operator><name pos:line="162" pos:column="28">user_name<pos:position pos:line="162" pos:column="37"/></name></expr>)<pos:position pos:line="162" pos:column="38"/></condition><then pos:line="162" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="163" pos:column="17">die<pos:position pos:line="163" pos:column="20"/></name><argument_list pos:line="163" pos:column="20">(<argument><expr><literal type="string" pos:line="163" pos:column="21">"--group supplied without --user"<pos:position pos:line="163" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="56"/></expr_stmt></block></then></if>

	<if pos:line="165" pos:column="9">if <condition pos:line="165" pos:column="12">(<expr><name pos:line="165" pos:column="13">user_name<pos:position pos:line="165" pos:column="22"/></name></expr>)<pos:position pos:line="165" pos:column="23"/></condition><then pos:line="165" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="166" pos:column="17">cred<pos:position pos:line="166" pos:column="21"/></name> <operator pos:line="166" pos:column="22">=<pos:position pos:line="166" pos:column="23"/></operator> <call><name pos:line="166" pos:column="24">prepare_credentials<pos:position pos:line="166" pos:column="43"/></name><argument_list pos:line="166" pos:column="43">(<argument><expr><name pos:line="166" pos:column="44">user_name<pos:position pos:line="166" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="55">group_name<pos:position pos:line="166" pos:column="65"/></name></expr></argument>)<pos:position pos:line="166" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="67"/></expr_stmt></block></then></if>

	<if pos:line="168" pos:column="9">if <condition pos:line="168" pos:column="12">(<expr><name pos:line="168" pos:column="13">strict_paths<pos:position pos:line="168" pos:column="25"/></name> <operator pos:line="168" pos:column="26">&amp;&amp;<pos:position pos:line="168" pos:column="36"/></operator> <operator pos:line="168" pos:column="29">(<pos:position pos:line="168" pos:column="30"/></operator><operator pos:line="168" pos:column="30">!<pos:position pos:line="168" pos:column="31"/></operator><name pos:line="168" pos:column="31">ok_paths<pos:position pos:line="168" pos:column="39"/></name> <operator pos:line="168" pos:column="40">||<pos:position pos:line="168" pos:column="42"/></operator> <operator pos:line="168" pos:column="43">!<pos:position pos:line="168" pos:column="44"/></operator><operator pos:line="168" pos:column="44">*<pos:position pos:line="168" pos:column="45"/></operator><name pos:line="168" pos:column="45">ok_paths<pos:position pos:line="168" pos:column="53"/></name><operator pos:line="168" pos:column="53">)<pos:position pos:line="168" pos:column="54"/></operator></expr>)<pos:position pos:line="168" pos:column="55"/></condition><then pos:line="168" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="169" pos:column="17">die<pos:position pos:line="169" pos:column="20"/></name><argument_list pos:line="169" pos:column="20">(<argument><expr><literal type="string" pos:line="169" pos:column="21">"option --strict-paths requires a whitelist"<pos:position pos:line="169" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="67"/></expr_stmt></block></then></if>

	<if pos:line="171" pos:column="9">if <condition pos:line="171" pos:column="12">(<expr><name pos:line="171" pos:column="13">base_path<pos:position pos:line="171" pos:column="22"/></name> <operator pos:line="171" pos:column="23">&amp;&amp;<pos:position pos:line="171" pos:column="33"/></operator> <operator pos:line="171" pos:column="26">!<pos:position pos:line="171" pos:column="27"/></operator><call><name pos:line="171" pos:column="27">is_directory<pos:position pos:line="171" pos:column="39"/></name><argument_list pos:line="171" pos:column="39">(<argument><expr><name pos:line="171" pos:column="40">base_path<pos:position pos:line="171" pos:column="49"/></name></expr></argument>)<pos:position pos:line="171" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="171" pos:column="51"/></condition><then pos:line="171" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="172" pos:column="17">die<pos:position pos:line="172" pos:column="20"/></name><argument_list pos:line="172" pos:column="20">(<argument><expr><literal type="string" pos:line="172" pos:column="21">"base-path '%s' does not exist or is not a directory"<pos:position pos:line="172" pos:column="74"/></literal></expr></argument>,
		    <argument><expr><name pos:line="173" pos:column="21">base_path<pos:position pos:line="173" pos:column="30"/></name></expr></argument>)<pos:position pos:line="173" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="32"/></expr_stmt></block></then></if>

	<if pos:line="175" pos:column="9">if <condition pos:line="175" pos:column="12">(<expr><name pos:line="175" pos:column="13">inetd_mode<pos:position pos:line="175" pos:column="23"/></name></expr>)<pos:position pos:line="175" pos:column="24"/></condition><then pos:line="175" pos:column="24"> <block pos:line="175" pos:column="25">{
		<if pos:line="176" pos:column="17">if <condition pos:line="176" pos:column="20">(<expr><operator pos:line="176" pos:column="21">!<pos:position pos:line="176" pos:column="22"/></operator><call><name pos:line="176" pos:column="22">freopen<pos:position pos:line="176" pos:column="29"/></name><argument_list pos:line="176" pos:column="29">(<argument><expr><literal type="string" pos:line="176" pos:column="30">"/dev/null"<pos:position pos:line="176" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="43">"w"<pos:position pos:line="176" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="176" pos:column="48">stderr<pos:position pos:line="176" pos:column="54"/></name></expr></argument>)<pos:position pos:line="176" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="176" pos:column="56"/></condition><then pos:line="176" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="177" pos:column="25">die_errno<pos:position pos:line="177" pos:column="34"/></name><argument_list pos:line="177" pos:column="34">(<argument><expr><literal type="string" pos:line="177" pos:column="35">"failed to redirect stderr to /dev/null"<pos:position pos:line="177" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="77"/></expr_stmt></block></then></if>
	}<pos:position pos:line="178" pos:column="10"/></block></then></if>

	<if pos:line="180" pos:column="9">if <condition pos:line="180" pos:column="12">(<expr><name pos:line="180" pos:column="13">inetd_mode<pos:position pos:line="180" pos:column="23"/></name> <operator pos:line="180" pos:column="24">||<pos:position pos:line="180" pos:column="26"/></operator> <name pos:line="180" pos:column="27">serve_mode<pos:position pos:line="180" pos:column="37"/></name></expr>)<pos:position pos:line="180" pos:column="38"/></condition><then pos:line="180" pos:column="38">
		<block type="pseudo"><return pos:line="181" pos:column="17">return <expr><call><name pos:line="181" pos:column="24">execute<pos:position pos:line="181" pos:column="31"/></name><argument_list pos:line="181" pos:column="31">()<pos:position pos:line="181" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="34"/></return></block></then></if>

	<if pos:line="183" pos:column="9">if <condition pos:line="183" pos:column="12">(<expr><name pos:line="183" pos:column="13">detach<pos:position pos:line="183" pos:column="19"/></name></expr>)<pos:position pos:line="183" pos:column="20"/></condition><then pos:line="183" pos:column="20"> <block pos:line="183" pos:column="21">{
		<if pos:line="184" pos:column="17">if <condition pos:line="184" pos:column="20">(<expr><call><name pos:line="184" pos:column="21">daemonize<pos:position pos:line="184" pos:column="30"/></name><argument_list pos:line="184" pos:column="30">()<pos:position pos:line="184" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="184" pos:column="33"/></condition><then pos:line="184" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="185" pos:column="25">die<pos:position pos:line="185" pos:column="28"/></name><argument_list pos:line="185" pos:column="28">(<argument><expr><literal type="string" pos:line="185" pos:column="29">"--detach not supported on this platform"<pos:position pos:line="185" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="72"/></expr_stmt></block></then></if>
	}<pos:position pos:line="186" pos:column="10"/></block></then></if>

	<if pos:line="188" pos:column="9">if <condition pos:line="188" pos:column="12">(<expr><name pos:line="188" pos:column="13">pid_file<pos:position pos:line="188" pos:column="21"/></name></expr>)<pos:position pos:line="188" pos:column="22"/></condition><then pos:line="188" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="189" pos:column="17">write_file<pos:position pos:line="189" pos:column="27"/></name><argument_list pos:line="189" pos:column="27">(<argument><expr><name pos:line="189" pos:column="28">pid_file<pos:position pos:line="189" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="189" pos:column="38">"%"<pos:position pos:line="189" pos:column="41"/></literal><name pos:line="189" pos:column="41">PRIuMAX<pos:position pos:line="189" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="189" pos:column="50">(<pos:position pos:line="189" pos:column="51"/></operator><name pos:line="189" pos:column="51">uintmax_t<pos:position pos:line="189" pos:column="60"/></name><operator pos:line="189" pos:column="60">)<pos:position pos:line="189" pos:column="61"/></operator> <call><name pos:line="189" pos:column="62">getpid<pos:position pos:line="189" pos:column="68"/></name><argument_list pos:line="189" pos:column="68">()<pos:position pos:line="189" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="189" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="72"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="191" pos:column="9">/* prepare argv for serving-processes */</comment>
	<expr_stmt><expr><call><name pos:line="192" pos:column="9">argv_array_push<pos:position pos:line="192" pos:column="24"/></name><argument_list pos:line="192" pos:column="24">(<argument><expr><operator pos:line="192" pos:column="25">&amp;<pos:position pos:line="192" pos:column="30"/></operator><name pos:line="192" pos:column="26">cld_argv<pos:position pos:line="192" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="192" pos:column="36">argv<pos:position pos:line="192" pos:column="40"/></name><index pos:line="192" pos:column="40">[<expr><literal type="number" pos:line="192" pos:column="41">0<pos:position pos:line="192" pos:column="42"/></literal></expr>]<pos:position pos:line="192" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="192" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="45"/></expr_stmt> <comment type="block" pos:line="192" pos:column="46">/* git-daemon */</comment>
	<expr_stmt><expr><call><name pos:line="193" pos:column="9">argv_array_push<pos:position pos:line="193" pos:column="24"/></name><argument_list pos:line="193" pos:column="24">(<argument><expr><operator pos:line="193" pos:column="25">&amp;<pos:position pos:line="193" pos:column="30"/></operator><name pos:line="193" pos:column="26">cld_argv<pos:position pos:line="193" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="193" pos:column="36">"--serve"<pos:position pos:line="193" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="47"/></expr_stmt>
	<for pos:line="194" pos:column="9">for <control pos:line="194" pos:column="13">(<init><expr><name pos:line="194" pos:column="14">i<pos:position pos:line="194" pos:column="15"/></name> <operator pos:line="194" pos:column="16">=<pos:position pos:line="194" pos:column="17"/></operator> <literal type="number" pos:line="194" pos:column="18">1<pos:position pos:line="194" pos:column="19"/></literal></expr>;<pos:position pos:line="194" pos:column="20"/></init> <condition><expr><name pos:line="194" pos:column="21">i<pos:position pos:line="194" pos:column="22"/></name> <operator pos:line="194" pos:column="23">&lt;<pos:position pos:line="194" pos:column="27"/></operator> <name pos:line="194" pos:column="25">argc<pos:position pos:line="194" pos:column="29"/></name></expr>;<pos:position pos:line="194" pos:column="30"/></condition> <incr><expr><operator pos:line="194" pos:column="31">++<pos:position pos:line="194" pos:column="33"/></operator><name pos:line="194" pos:column="33">i<pos:position pos:line="194" pos:column="34"/></name></expr></incr>)<pos:position pos:line="194" pos:column="35"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="195" pos:column="17">argv_array_push<pos:position pos:line="195" pos:column="32"/></name><argument_list pos:line="195" pos:column="32">(<argument><expr><operator pos:line="195" pos:column="33">&amp;<pos:position pos:line="195" pos:column="38"/></operator><name pos:line="195" pos:column="34">cld_argv<pos:position pos:line="195" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="195" pos:column="44">argv<pos:position pos:line="195" pos:column="48"/></name><index pos:line="195" pos:column="48">[<expr><name pos:line="195" pos:column="49">i<pos:position pos:line="195" pos:column="50"/></name></expr>]<pos:position pos:line="195" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="195" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="53"/></expr_stmt></block></for>

	<return pos:line="197" pos:column="9">return <expr><call><name pos:line="197" pos:column="16">serve<pos:position pos:line="197" pos:column="21"/></name><argument_list pos:line="197" pos:column="21">(<argument><expr><operator pos:line="197" pos:column="22">&amp;<pos:position pos:line="197" pos:column="27"/></operator><name pos:line="197" pos:column="23">listen_addr<pos:position pos:line="197" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="36">listen_port<pos:position pos:line="197" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="49">cred<pos:position pos:line="197" pos:column="53"/></name></expr></argument>)<pos:position pos:line="197" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="55"/></return>
}<pos:position pos:line="198" pos:column="2"/></block></function></unit>

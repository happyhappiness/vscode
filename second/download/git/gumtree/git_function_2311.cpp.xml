<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2311.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">append_ref<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">refname<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name><name pos:line="1" pos:column="50">struct<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">object_id<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">oid<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="73">int<pos:position pos:line="1" pos:column="76"/></name></type> <name pos:line="1" pos:column="77">flags<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="84">void<pos:position pos:line="1" pos:column="88"/></name> <modifier pos:line="1" pos:column="89">*<pos:position pos:line="1" pos:column="90"/></modifier></type><name pos:line="1" pos:column="90">cb_data<pos:position pos:line="1" pos:column="97"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="98"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">append_ref_cb<pos:position pos:line="3" pos:column="29"/></name></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">cb<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><operator pos:line="3" pos:column="36">(<pos:position pos:line="3" pos:column="37"/></operator>struct <name pos:line="3" pos:column="44">append_ref_cb<pos:position pos:line="3" pos:column="57"/></name> <operator pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></operator><operator pos:line="3" pos:column="59">)<pos:position pos:line="3" pos:column="60"/></operator><operator pos:line="3" pos:column="60">(<pos:position pos:line="3" pos:column="61"/></operator><name pos:line="3" pos:column="61">cb_data<pos:position pos:line="3" pos:column="68"/></name><operator pos:line="3" pos:column="68">)<pos:position pos:line="3" pos:column="69"/></operator></expr></init></decl>;<pos:position pos:line="3" pos:column="70"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ref_list<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">ref_list<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><name><name pos:line="4" pos:column="37">cb<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">-&gt;<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="41">ref_list<pos:position pos:line="4" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ref_item<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">newitem<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">commit<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">kind<pos:position pos:line="7" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="19">i<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">prefix<pos:position pos:line="8" pos:column="27"/></name></decl>, <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="30">orig_refname<pos:position pos:line="8" pos:column="42"/></name> <init pos:line="8" pos:column="43">= <expr><name pos:line="8" pos:column="45">refname<pos:position pos:line="8" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="53"/></decl_stmt>

	<struct><specifier pos:line="10" pos:column="9">static<pos:position pos:line="10" pos:column="15"/></specifier> struct <block pos:line="10" pos:column="23">{<public type="default" pos:line="10" pos:column="24">
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">kind<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="12" pos:column="17">const<pos:position pos:line="12" pos:column="22"/></specifier> <name pos:line="12" pos:column="23">char<pos:position pos:line="12" pos:column="27"/></name> <modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">prefix<pos:position pos:line="12" pos:column="35"/></name></decl>;<pos:position pos:line="12" pos:column="36"/></decl_stmt>
	<pos:position pos:line="13" pos:column="2"/></public>}<pos:position pos:line="13" pos:column="10"/></block> <decl><name><name pos:line="13" pos:column="11">ref_kind<pos:position pos:line="13" pos:column="19"/></name><index pos:line="13" pos:column="19">[]<pos:position pos:line="13" pos:column="21"/></index></name> <init pos:line="13" pos:column="22">= <expr><block pos:line="13" pos:column="24">{
		<expr><block pos:line="14" pos:column="17">{ <expr><name pos:line="14" pos:column="19">REF_LOCAL_BRANCH<pos:position pos:line="14" pos:column="35"/></name></expr>, <expr><literal type="string" pos:line="14" pos:column="37">"refs/heads/"<pos:position pos:line="14" pos:column="50"/></literal></expr> }<pos:position pos:line="14" pos:column="52"/></block></expr>,
		<expr><block pos:line="15" pos:column="17">{ <expr><name pos:line="15" pos:column="19">REF_REMOTE_BRANCH<pos:position pos:line="15" pos:column="36"/></name></expr>, <expr><literal type="string" pos:line="15" pos:column="38">"refs/remotes/"<pos:position pos:line="15" pos:column="53"/></literal></expr> }<pos:position pos:line="15" pos:column="55"/></block></expr>,
	}<pos:position pos:line="16" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="16" pos:column="11"/></struct>

	<comment type="block" pos:line="18" pos:column="9">/* Detect kind */</comment>
	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></init> <condition><expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <call><name pos:line="19" pos:column="25">ARRAY_SIZE<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">ref_kind<pos:position pos:line="19" pos:column="44"/></name></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="46"/></condition> <incr><expr><name pos:line="19" pos:column="47">i<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">++<pos:position pos:line="19" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="51"/></control> <block pos:line="19" pos:column="52">{
		<expr_stmt><expr><name pos:line="20" pos:column="17">prefix<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <name><name pos:line="20" pos:column="26">ref_kind<pos:position pos:line="20" pos:column="34"/></name><index pos:line="20" pos:column="34">[<expr><name pos:line="20" pos:column="35">i<pos:position pos:line="20" pos:column="36"/></name></expr>]<pos:position pos:line="20" pos:column="37"/></index></name><operator pos:line="20" pos:column="37">.<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="38">prefix<pos:position pos:line="20" pos:column="44"/></name></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><call><name pos:line="21" pos:column="21">skip_prefix<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">refname<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="42">prefix<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="50">&amp;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="51">refname<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="60"/></condition><then pos:line="21" pos:column="60"> <block pos:line="21" pos:column="61">{
			<expr_stmt><expr><name pos:line="22" pos:column="25">kind<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">=<pos:position pos:line="22" pos:column="31"/></operator> <name><name pos:line="22" pos:column="32">ref_kind<pos:position pos:line="22" pos:column="40"/></name><index pos:line="22" pos:column="40">[<expr><name pos:line="22" pos:column="41">i<pos:position pos:line="22" pos:column="42"/></name></expr>]<pos:position pos:line="22" pos:column="43"/></index></name><operator pos:line="22" pos:column="43">.<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="44">kind<pos:position pos:line="22" pos:column="48"/></name></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
			<break pos:line="23" pos:column="25">break;<pos:position pos:line="23" pos:column="31"/></break>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
	}<pos:position pos:line="25" pos:column="10"/></block></for>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">ARRAY_SIZE<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">ref_kind<pos:position pos:line="26" pos:column="32"/></name></expr></argument>)<pos:position pos:line="26" pos:column="33"/></argument_list></call> <operator pos:line="26" pos:column="34">&lt;=<pos:position pos:line="26" pos:column="39"/></operator> <name pos:line="26" pos:column="37">i<pos:position pos:line="26" pos:column="38"/></name></expr>)<pos:position pos:line="26" pos:column="39"/></condition><then pos:line="26" pos:column="39">
		<block type="pseudo"><return pos:line="27" pos:column="17">return <expr><literal type="number" pos:line="27" pos:column="24">0<pos:position pos:line="27" pos:column="25"/></literal></expr>;<pos:position pos:line="27" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="29" pos:column="9">/* Don't add types the caller doesn't want */</comment>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">(<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">kind<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">&amp;<pos:position pos:line="30" pos:column="24"/></operator> <name><name pos:line="30" pos:column="21">ref_list<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">kinds<pos:position pos:line="30" pos:column="36"/></name></name><operator pos:line="30" pos:column="36">)<pos:position pos:line="30" pos:column="37"/></operator> <operator pos:line="30" pos:column="38">==<pos:position pos:line="30" pos:column="40"/></operator> <literal type="number" pos:line="30" pos:column="41">0<pos:position pos:line="30" pos:column="42"/></literal></expr>)<pos:position pos:line="30" pos:column="43"/></condition><then pos:line="30" pos:column="43">
		<block type="pseudo"><return pos:line="31" pos:column="17">return <expr><literal type="number" pos:line="31" pos:column="24">0<pos:position pos:line="31" pos:column="25"/></literal></expr>;<pos:position pos:line="31" pos:column="26"/></return></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><call><name pos:line="33" pos:column="14">match_patterns<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><name><name pos:line="33" pos:column="29">cb<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">-&gt;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="33">pattern<pos:position pos:line="33" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="42">refname<pos:position pos:line="33" pos:column="49"/></name></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="51"/></condition><then pos:line="33" pos:column="51">
		<block type="pseudo"><return pos:line="34" pos:column="17">return <expr><literal type="number" pos:line="34" pos:column="24">0<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="36" pos:column="9">commit<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <name pos:line="36" pos:column="18">NULL<pos:position pos:line="36" pos:column="22"/></name></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name><name pos:line="37" pos:column="13">ref_list<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">-&gt;<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="23">verbose<pos:position pos:line="37" pos:column="30"/></name></name> <operator pos:line="37" pos:column="31">||<pos:position pos:line="37" pos:column="33"/></operator> <name><name pos:line="37" pos:column="34">ref_list<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">-&gt;<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="44">with_commit<pos:position pos:line="37" pos:column="55"/></name></name> <operator pos:line="37" pos:column="56">||<pos:position pos:line="37" pos:column="58"/></operator> <name pos:line="37" pos:column="59">merge_filter<pos:position pos:line="37" pos:column="71"/></name> <operator pos:line="37" pos:column="72">!=<pos:position pos:line="37" pos:column="74"/></operator> <name pos:line="37" pos:column="75">NO_FILTER<pos:position pos:line="37" pos:column="84"/></name></expr>)<pos:position pos:line="37" pos:column="85"/></condition><then pos:line="37" pos:column="85"> <block pos:line="37" pos:column="86">{
		<expr_stmt><expr><name pos:line="38" pos:column="17">commit<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <call><name pos:line="38" pos:column="26">lookup_commit_reference_gently<pos:position pos:line="38" pos:column="56"/></name><argument_list pos:line="38" pos:column="56">(<argument><expr><name><name pos:line="38" pos:column="57">oid<pos:position pos:line="38" pos:column="60"/></name><operator pos:line="38" pos:column="60">-&gt;<pos:position pos:line="38" pos:column="65"/></operator><name pos:line="38" pos:column="62">hash<pos:position pos:line="38" pos:column="66"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="68">1<pos:position pos:line="38" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="71"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">!<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">commit<pos:position pos:line="39" pos:column="28"/></name></expr>)<pos:position pos:line="39" pos:column="29"/></condition><then pos:line="39" pos:column="29"> <block pos:line="39" pos:column="30">{
			<expr_stmt><expr><name><name pos:line="40" pos:column="25">cb<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">-&gt;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="29">ret<pos:position pos:line="40" pos:column="32"/></name></name> <operator pos:line="40" pos:column="33">=<pos:position pos:line="40" pos:column="34"/></operator> <call><name pos:line="40" pos:column="35">error<pos:position pos:line="40" pos:column="40"/></name><argument_list pos:line="40" pos:column="40">(<argument><expr><call><name pos:line="40" pos:column="41">_<pos:position pos:line="40" pos:column="42"/></name><argument_list pos:line="40" pos:column="42">(<argument><expr><literal type="string" pos:line="40" pos:column="43">"branch '%s' does not point at a commit"<pos:position pos:line="40" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="86">refname<pos:position pos:line="40" pos:column="93"/></name></expr></argument>)<pos:position pos:line="40" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="95"/></expr_stmt>
			<return pos:line="41" pos:column="25">return <expr><literal type="number" pos:line="41" pos:column="32">0<pos:position pos:line="41" pos:column="33"/></literal></expr>;<pos:position pos:line="41" pos:column="34"/></return>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="44" pos:column="17">/* Filter with with_commit if specified */</comment>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><operator pos:line="45" pos:column="21">!<pos:position pos:line="45" pos:column="22"/></operator><call><name pos:line="45" pos:column="22">is_descendant_of<pos:position pos:line="45" pos:column="38"/></name><argument_list pos:line="45" pos:column="38">(<argument><expr><name pos:line="45" pos:column="39">commit<pos:position pos:line="45" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="47">ref_list<pos:position pos:line="45" pos:column="55"/></name><operator pos:line="45" pos:column="55">-&gt;<pos:position pos:line="45" pos:column="60"/></operator><name pos:line="45" pos:column="57">with_commit<pos:position pos:line="45" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="70"/></condition><then pos:line="45" pos:column="70">
			<block type="pseudo"><return pos:line="46" pos:column="25">return <expr><literal type="number" pos:line="46" pos:column="32">0<pos:position pos:line="46" pos:column="33"/></literal></expr>;<pos:position pos:line="46" pos:column="34"/></return></block></then></if>

		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name pos:line="48" pos:column="21">merge_filter<pos:position pos:line="48" pos:column="33"/></name> <operator pos:line="48" pos:column="34">!=<pos:position pos:line="48" pos:column="36"/></operator> <name pos:line="48" pos:column="37">NO_FILTER<pos:position pos:line="48" pos:column="46"/></name></expr>)<pos:position pos:line="48" pos:column="47"/></condition><then pos:line="48" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="25">add_pending_object<pos:position pos:line="49" pos:column="43"/></name><argument_list pos:line="49" pos:column="43">(<argument><expr><operator pos:line="49" pos:column="44">&amp;<pos:position pos:line="49" pos:column="49"/></operator><name><name pos:line="49" pos:column="45">ref_list<pos:position pos:line="49" pos:column="53"/></name><operator pos:line="49" pos:column="53">-&gt;<pos:position pos:line="49" pos:column="58"/></operator><name pos:line="49" pos:column="55">revs<pos:position pos:line="49" pos:column="59"/></name></name></expr></argument>,
					   <argument><expr><operator pos:line="50" pos:column="44">(<pos:position pos:line="50" pos:column="45"/></operator>struct <name pos:line="50" pos:column="52">object<pos:position pos:line="50" pos:column="58"/></name> <operator pos:line="50" pos:column="59">*<pos:position pos:line="50" pos:column="60"/></operator><operator pos:line="50" pos:column="60">)<pos:position pos:line="50" pos:column="61"/></operator><name pos:line="50" pos:column="61">commit<pos:position pos:line="50" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="69">refname<pos:position pos:line="50" pos:column="76"/></name></expr></argument>)<pos:position pos:line="50" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="78"/></expr_stmt></block></then></if>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="53" pos:column="9">ALLOC_GROW<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><name><name pos:line="53" pos:column="20">ref_list<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">-&gt;<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="30">list<pos:position pos:line="53" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="36">ref_list<pos:position pos:line="53" pos:column="44"/></name><operator pos:line="53" pos:column="44">-&gt;<pos:position pos:line="53" pos:column="49"/></operator><name pos:line="53" pos:column="46">index<pos:position pos:line="53" pos:column="51"/></name></name> <operator pos:line="53" pos:column="52">+<pos:position pos:line="53" pos:column="53"/></operator> <literal type="number" pos:line="53" pos:column="54">1<pos:position pos:line="53" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="57">ref_list<pos:position pos:line="53" pos:column="65"/></name><operator pos:line="53" pos:column="65">-&gt;<pos:position pos:line="53" pos:column="70"/></operator><name pos:line="53" pos:column="67">alloc<pos:position pos:line="53" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="74"/></expr_stmt>

	<comment type="block" pos:line="55" pos:column="9">/* Record the new item */</comment>
	<expr_stmt><expr><name pos:line="56" pos:column="9">newitem<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">=<pos:position pos:line="56" pos:column="18"/></operator> <operator pos:line="56" pos:column="19">&amp;<pos:position pos:line="56" pos:column="24"/></operator><operator pos:line="56" pos:column="20">(<pos:position pos:line="56" pos:column="21"/></operator><name><name pos:line="56" pos:column="21">ref_list<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">-&gt;<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="31">list<pos:position pos:line="56" pos:column="35"/></name><index pos:line="56" pos:column="35">[<expr><name><name pos:line="56" pos:column="36">ref_list<pos:position pos:line="56" pos:column="44"/></name><operator pos:line="56" pos:column="44">-&gt;<pos:position pos:line="56" pos:column="49"/></operator><name pos:line="56" pos:column="46">index<pos:position pos:line="56" pos:column="51"/></name></name><operator pos:line="56" pos:column="51">++<pos:position pos:line="56" pos:column="53"/></operator></expr>]<pos:position pos:line="56" pos:column="54"/></index></name><operator pos:line="56" pos:column="54">)<pos:position pos:line="56" pos:column="55"/></operator></expr>;<pos:position pos:line="56" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="57" pos:column="9">newitem<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">-&gt;<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="18">name<pos:position pos:line="57" pos:column="22"/></name></name> <operator pos:line="57" pos:column="23">=<pos:position pos:line="57" pos:column="24"/></operator> <call><name pos:line="57" pos:column="25">xstrdup<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">refname<pos:position pos:line="57" pos:column="40"/></name></expr></argument>)<pos:position pos:line="57" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="58" pos:column="9">newitem<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">-&gt;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="18">kind<pos:position pos:line="58" pos:column="22"/></name></name> <operator pos:line="58" pos:column="23">=<pos:position pos:line="58" pos:column="24"/></operator> <name pos:line="58" pos:column="25">kind<pos:position pos:line="58" pos:column="29"/></name></expr>;<pos:position pos:line="58" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="59" pos:column="9">newitem<pos:position pos:line="59" pos:column="16"/></name><operator pos:line="59" pos:column="16">-&gt;<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="18">commit<pos:position pos:line="59" pos:column="24"/></name></name> <operator pos:line="59" pos:column="25">=<pos:position pos:line="59" pos:column="26"/></operator> <name pos:line="59" pos:column="27">commit<pos:position pos:line="59" pos:column="33"/></name></expr>;<pos:position pos:line="59" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="60" pos:column="9">newitem<pos:position pos:line="60" pos:column="16"/></name><operator pos:line="60" pos:column="16">-&gt;<pos:position pos:line="60" pos:column="21"/></operator><name pos:line="60" pos:column="18">width<pos:position pos:line="60" pos:column="23"/></name></name> <operator pos:line="60" pos:column="24">=<pos:position pos:line="60" pos:column="25"/></operator> <call><name pos:line="60" pos:column="26">utf8_strwidth<pos:position pos:line="60" pos:column="39"/></name><argument_list pos:line="60" pos:column="39">(<argument><expr><name pos:line="60" pos:column="40">refname<pos:position pos:line="60" pos:column="47"/></name></expr></argument>)<pos:position pos:line="60" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="61" pos:column="9">newitem<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">-&gt;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="18">dest<pos:position pos:line="61" pos:column="22"/></name></name> <operator pos:line="61" pos:column="23">=<pos:position pos:line="61" pos:column="24"/></operator> <call><name pos:line="61" pos:column="25">resolve_symref<pos:position pos:line="61" pos:column="39"/></name><argument_list pos:line="61" pos:column="39">(<argument><expr><name pos:line="61" pos:column="40">orig_refname<pos:position pos:line="61" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="54">prefix<pos:position pos:line="61" pos:column="60"/></name></expr></argument>)<pos:position pos:line="61" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="62" pos:column="9">newitem<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">-&gt;<pos:position pos:line="62" pos:column="21"/></operator><name pos:line="62" pos:column="18">ignore<pos:position pos:line="62" pos:column="24"/></name></name> <operator pos:line="62" pos:column="25">=<pos:position pos:line="62" pos:column="26"/></operator> <literal type="number" pos:line="62" pos:column="27">0<pos:position pos:line="62" pos:column="28"/></literal></expr>;<pos:position pos:line="62" pos:column="29"/></expr_stmt>
	<comment type="block" pos:line="63" pos:column="9">/* adjust for "remotes/" */</comment>
	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name><name pos:line="64" pos:column="13">newitem<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">-&gt;<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="22">kind<pos:position pos:line="64" pos:column="26"/></name></name> <operator pos:line="64" pos:column="27">==<pos:position pos:line="64" pos:column="29"/></operator> <name pos:line="64" pos:column="30">REF_REMOTE_BRANCH<pos:position pos:line="64" pos:column="47"/></name> <operator pos:line="64" pos:column="48">&amp;&amp;<pos:position pos:line="64" pos:column="58"/></operator>
	    <name><name pos:line="65" pos:column="13">ref_list<pos:position pos:line="65" pos:column="21"/></name><operator pos:line="65" pos:column="21">-&gt;<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="23">kinds<pos:position pos:line="65" pos:column="28"/></name></name> <operator pos:line="65" pos:column="29">!=<pos:position pos:line="65" pos:column="31"/></operator> <name pos:line="65" pos:column="32">REF_REMOTE_BRANCH<pos:position pos:line="65" pos:column="49"/></name></expr>)<pos:position pos:line="65" pos:column="50"/></condition><then pos:line="65" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="66" pos:column="17">newitem<pos:position pos:line="66" pos:column="24"/></name><operator pos:line="66" pos:column="24">-&gt;<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="26">width<pos:position pos:line="66" pos:column="31"/></name></name> <operator pos:line="66" pos:column="32">+=<pos:position pos:line="66" pos:column="34"/></operator> <literal type="number" pos:line="66" pos:column="35">8<pos:position pos:line="66" pos:column="36"/></literal></expr>;<pos:position pos:line="66" pos:column="37"/></expr_stmt></block></then></if>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name><name pos:line="67" pos:column="13">newitem<pos:position pos:line="67" pos:column="20"/></name><operator pos:line="67" pos:column="20">-&gt;<pos:position pos:line="67" pos:column="25"/></operator><name pos:line="67" pos:column="22">width<pos:position pos:line="67" pos:column="27"/></name></name> <operator pos:line="67" pos:column="28">&gt;<pos:position pos:line="67" pos:column="32"/></operator> <name><name pos:line="67" pos:column="30">ref_list<pos:position pos:line="67" pos:column="38"/></name><operator pos:line="67" pos:column="38">-&gt;<pos:position pos:line="67" pos:column="43"/></operator><name pos:line="67" pos:column="40">maxwidth<pos:position pos:line="67" pos:column="48"/></name></name></expr>)<pos:position pos:line="67" pos:column="49"/></condition><then pos:line="67" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="68" pos:column="17">ref_list<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">-&gt;<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="27">maxwidth<pos:position pos:line="68" pos:column="35"/></name></name> <operator pos:line="68" pos:column="36">=<pos:position pos:line="68" pos:column="37"/></operator> <name><name pos:line="68" pos:column="38">newitem<pos:position pos:line="68" pos:column="45"/></name><operator pos:line="68" pos:column="45">-&gt;<pos:position pos:line="68" pos:column="50"/></operator><name pos:line="68" pos:column="47">width<pos:position pos:line="68" pos:column="52"/></name></name></expr>;<pos:position pos:line="68" pos:column="53"/></expr_stmt></block></then></if>

	<return pos:line="70" pos:column="9">return <expr><literal type="number" pos:line="70" pos:column="16">0<pos:position pos:line="70" pos:column="17"/></literal></expr>;<pos:position pos:line="70" pos:column="18"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

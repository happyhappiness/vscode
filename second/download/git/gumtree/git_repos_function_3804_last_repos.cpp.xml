<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3804_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">was_tracked<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">path<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">pos<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">cache_name_pos<pos:position pos:line="3" pos:column="33"/></name><argument_list pos:line="3" pos:column="33">(<argument><expr><name pos:line="3" pos:column="34">path<pos:position pos:line="3" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="3" pos:column="40">strlen<pos:position pos:line="3" pos:column="46"/></name><argument_list pos:line="3" pos:column="46">(<argument><expr><name pos:line="3" pos:column="47">path<pos:position pos:line="3" pos:column="51"/></name></expr></argument>)<pos:position pos:line="3" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="54"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal> <operator pos:line="5" pos:column="15">&lt;=<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="18">pos<pos:position pos:line="5" pos:column="21"/></name></expr>)<pos:position pos:line="5" pos:column="22"/></condition><then pos:line="5" pos:column="22">
		<comment type="block" pos:line="6" pos:column="17">/* we have been tracking this path */</comment>
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><literal type="number" pos:line="7" pos:column="24">1<pos:position pos:line="7" pos:column="25"/></literal></expr>;<pos:position pos:line="7" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="9" pos:column="9">/*
	 * Look for an unmerged entry for the path,
	 * specifically stage #2, which would indicate
	 * that "our" side before the merge started
	 * had the path tracked (and resulted in a conflict).
	 */</comment>
	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">pos<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <operator pos:line="15" pos:column="20">-<pos:position pos:line="15" pos:column="21"/></operator><literal type="number" pos:line="15" pos:column="21">1<pos:position pos:line="15" pos:column="22"/></literal> <operator pos:line="15" pos:column="23">-<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="25">pos<pos:position pos:line="15" pos:column="28"/></name></expr>;<pos:position pos:line="15" pos:column="29"/></init>
	     <condition><expr><name pos:line="16" pos:column="14">pos<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">&lt;<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="20">active_nr<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">&amp;&amp;<pos:position pos:line="16" pos:column="40"/></operator> <operator pos:line="16" pos:column="33">!<pos:position pos:line="16" pos:column="34"/></operator><call><name pos:line="16" pos:column="34">strcmp<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><name pos:line="16" pos:column="41">path<pos:position pos:line="16" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="47">active_cache<pos:position pos:line="16" pos:column="59"/></name><index pos:line="16" pos:column="59">[<expr><name pos:line="16" pos:column="60">pos<pos:position pos:line="16" pos:column="63"/></name></expr>]<pos:position pos:line="16" pos:column="64"/></index></name><operator pos:line="16" pos:column="64">-&gt;<pos:position pos:line="16" pos:column="69"/></operator><name pos:line="16" pos:column="66">name<pos:position pos:line="16" pos:column="70"/></name></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="72"/></condition>
	     <incr><expr><name pos:line="17" pos:column="14">pos<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">++<pos:position pos:line="17" pos:column="19"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="20"/></control>
		<block type="pseudo"><if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><call><name pos:line="18" pos:column="21">ce_stage<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name><name pos:line="18" pos:column="30">active_cache<pos:position pos:line="18" pos:column="42"/></name><index pos:line="18" pos:column="42">[<expr><name pos:line="18" pos:column="43">pos<pos:position pos:line="18" pos:column="46"/></name></expr>]<pos:position pos:line="18" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call> <operator pos:line="18" pos:column="49">==<pos:position pos:line="18" pos:column="51"/></operator> <literal type="number" pos:line="18" pos:column="52">2<pos:position pos:line="18" pos:column="53"/></literal></expr>)<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54">
			<block type="pseudo"><return pos:line="19" pos:column="25">return <expr><literal type="number" pos:line="19" pos:column="32">1<pos:position pos:line="19" pos:column="33"/></literal></expr>;<pos:position pos:line="19" pos:column="34"/></return></block></then></if></block></for>
	<return pos:line="20" pos:column="9">return <expr><literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

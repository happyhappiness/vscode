<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4148_git-2.9.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">xdl_clean_mmatch<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">dis<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">long<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">i<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">long<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">s<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">long<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">e<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list> <block pos:line="1" pos:column="70">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">long<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">r<pos:position pos:line="2" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="17">rdis0<pos:position pos:line="2" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="24">rpdis0<pos:position pos:line="2" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="32">rdis1<pos:position pos:line="2" pos:column="37"/></name></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="39">rpdis1<pos:position pos:line="2" pos:column="45"/></name></decl>;<pos:position pos:line="2" pos:column="46"/></decl_stmt>

	<comment type="block" pos:line="4" pos:column="9">/*
	 * Limits the window the is examined during the similar-lines
	 * scan. The loops below stops when dis[i - r] == 1 (line that
	 * has no match), but there are corner cases where the loop
	 * proceed all the way to the extremities by causing huge
	 * performance penalties in case of big files.
	 */</comment>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">i<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">-<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">s<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">&gt;<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="21">XDL_SIMSCAN_WINDOW<pos:position pos:line="11" pos:column="39"/></name></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">s<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">i<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">-<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="25">XDL_SIMSCAN_WINDOW<pos:position pos:line="12" pos:column="43"/></name></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">e<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">-<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">i<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">&gt;<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="21">XDL_SIMSCAN_WINDOW<pos:position pos:line="13" pos:column="39"/></name></expr>)<pos:position pos:line="13" pos:column="40"/></condition><then pos:line="13" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">e<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">i<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">+<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">XDL_SIMSCAN_WINDOW<pos:position pos:line="14" pos:column="43"/></name></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="16" pos:column="9">/*
	 * Scans the lines before 'i' to find a run of lines that either
	 * have no match (dis[j] == 0) or have multiple matches (dis[j] &gt; 1).
	 * Note that we always call this function with dis[i] &gt; 1, so the
	 * current line (i) is already a multimatch line.
	 */</comment>
	<for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">r<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">1<pos:position pos:line="22" pos:column="19"/></literal></expr><operator pos:line="22" pos:column="19">,<pos:position pos:line="22" pos:column="20"/></operator> <expr><name pos:line="22" pos:column="21">rdis0<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <literal type="number" pos:line="22" pos:column="29">0<pos:position pos:line="22" pos:column="30"/></literal></expr><operator pos:line="22" pos:column="30">,<pos:position pos:line="22" pos:column="31"/></operator> <expr><name pos:line="22" pos:column="32">rpdis0<pos:position pos:line="22" pos:column="38"/></name> <operator pos:line="22" pos:column="39">=<pos:position pos:line="22" pos:column="40"/></operator> <literal type="number" pos:line="22" pos:column="41">1<pos:position pos:line="22" pos:column="42"/></literal></expr>;<pos:position pos:line="22" pos:column="43"/></init> <condition><expr><operator pos:line="22" pos:column="44">(<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="45">i<pos:position pos:line="22" pos:column="46"/></name> <operator pos:line="22" pos:column="47">-<pos:position pos:line="22" pos:column="48"/></operator> <name pos:line="22" pos:column="49">r<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">)<pos:position pos:line="22" pos:column="51"/></operator> <operator pos:line="22" pos:column="52">&gt;=<pos:position pos:line="22" pos:column="57"/></operator> <name pos:line="22" pos:column="55">s<pos:position pos:line="22" pos:column="56"/></name></expr>;<pos:position pos:line="22" pos:column="57"/></condition> <incr><expr><name pos:line="22" pos:column="58">r<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">++<pos:position pos:line="22" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="62"/></control> <block pos:line="22" pos:column="63">{
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><name><name pos:line="23" pos:column="22">dis<pos:position pos:line="23" pos:column="25"/></name><index pos:line="23" pos:column="25">[<expr><name pos:line="23" pos:column="26">i<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">-<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">r<pos:position pos:line="23" pos:column="31"/></name></expr>]<pos:position pos:line="23" pos:column="32"/></index></name></expr>)<pos:position pos:line="23" pos:column="33"/></condition><then pos:line="23" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">rdis0<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">++<pos:position pos:line="24" pos:column="32"/></operator></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt></block></then>
		<elseif pos:line="25" pos:column="17">else <if pos:line="25" pos:column="22">if <condition pos:line="25" pos:column="25">(<expr><name><name pos:line="25" pos:column="26">dis<pos:position pos:line="25" pos:column="29"/></name><index pos:line="25" pos:column="29">[<expr><name pos:line="25" pos:column="30">i<pos:position pos:line="25" pos:column="31"/></name> <operator pos:line="25" pos:column="32">-<pos:position pos:line="25" pos:column="33"/></operator> <name pos:line="25" pos:column="34">r<pos:position pos:line="25" pos:column="35"/></name></expr>]<pos:position pos:line="25" pos:column="36"/></index></name> <operator pos:line="25" pos:column="37">==<pos:position pos:line="25" pos:column="39"/></operator> <literal type="number" pos:line="25" pos:column="40">2<pos:position pos:line="25" pos:column="41"/></literal></expr>)<pos:position pos:line="25" pos:column="42"/></condition><then pos:line="25" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="25">rpdis0<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">++<pos:position pos:line="26" pos:column="33"/></operator></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt></block></then></if></elseif>
		<else pos:line="27" pos:column="17">else
			<block type="pseudo"><break pos:line="28" pos:column="25">break;<pos:position pos:line="28" pos:column="31"/></break></block></else></if>
	}<pos:position pos:line="29" pos:column="10"/></block></for>
	<comment type="block" pos:line="30" pos:column="9">/*
	 * If the run before the line 'i' found only multimatch lines, we
	 * return 0 and hence we don't make the current line (i) discarded.
	 * We want to discard multimatch lines only when they appear in the
	 * middle of runs with nomatch lines (dis[j] == 0).
	 */</comment>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">rdis0<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">==<pos:position pos:line="36" pos:column="21"/></operator> <literal type="number" pos:line="36" pos:column="22">0<pos:position pos:line="36" pos:column="23"/></literal></expr>)<pos:position pos:line="36" pos:column="24"/></condition><then pos:line="36" pos:column="24">
		<block type="pseudo"><return pos:line="37" pos:column="17">return <expr><literal type="number" pos:line="37" pos:column="24">0<pos:position pos:line="37" pos:column="25"/></literal></expr>;<pos:position pos:line="37" pos:column="26"/></return></block></then></if>
	<for pos:line="38" pos:column="9">for <control pos:line="38" pos:column="13">(<init><expr><name pos:line="38" pos:column="14">r<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <literal type="number" pos:line="38" pos:column="18">1<pos:position pos:line="38" pos:column="19"/></literal></expr><operator pos:line="38" pos:column="19">,<pos:position pos:line="38" pos:column="20"/></operator> <expr><name pos:line="38" pos:column="21">rdis1<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <literal type="number" pos:line="38" pos:column="29">0<pos:position pos:line="38" pos:column="30"/></literal></expr><operator pos:line="38" pos:column="30">,<pos:position pos:line="38" pos:column="31"/></operator> <expr><name pos:line="38" pos:column="32">rpdis1<pos:position pos:line="38" pos:column="38"/></name> <operator pos:line="38" pos:column="39">=<pos:position pos:line="38" pos:column="40"/></operator> <literal type="number" pos:line="38" pos:column="41">1<pos:position pos:line="38" pos:column="42"/></literal></expr>;<pos:position pos:line="38" pos:column="43"/></init> <condition><expr><operator pos:line="38" pos:column="44">(<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="45">i<pos:position pos:line="38" pos:column="46"/></name> <operator pos:line="38" pos:column="47">+<pos:position pos:line="38" pos:column="48"/></operator> <name pos:line="38" pos:column="49">r<pos:position pos:line="38" pos:column="50"/></name><operator pos:line="38" pos:column="50">)<pos:position pos:line="38" pos:column="51"/></operator> <operator pos:line="38" pos:column="52">&lt;=<pos:position pos:line="38" pos:column="57"/></operator> <name pos:line="38" pos:column="55">e<pos:position pos:line="38" pos:column="56"/></name></expr>;<pos:position pos:line="38" pos:column="57"/></condition> <incr><expr><name pos:line="38" pos:column="58">r<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">++<pos:position pos:line="38" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="62"/></control> <block pos:line="38" pos:column="63">{
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">!<pos:position pos:line="39" pos:column="22"/></operator><name><name pos:line="39" pos:column="22">dis<pos:position pos:line="39" pos:column="25"/></name><index pos:line="39" pos:column="25">[<expr><name pos:line="39" pos:column="26">i<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">+<pos:position pos:line="39" pos:column="29"/></operator> <name pos:line="39" pos:column="30">r<pos:position pos:line="39" pos:column="31"/></name></expr>]<pos:position pos:line="39" pos:column="32"/></index></name></expr>)<pos:position pos:line="39" pos:column="33"/></condition><then pos:line="39" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="25">rdis1<pos:position pos:line="40" pos:column="30"/></name><operator pos:line="40" pos:column="30">++<pos:position pos:line="40" pos:column="32"/></operator></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt></block></then>
		<elseif pos:line="41" pos:column="17">else <if pos:line="41" pos:column="22">if <condition pos:line="41" pos:column="25">(<expr><name><name pos:line="41" pos:column="26">dis<pos:position pos:line="41" pos:column="29"/></name><index pos:line="41" pos:column="29">[<expr><name pos:line="41" pos:column="30">i<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">+<pos:position pos:line="41" pos:column="33"/></operator> <name pos:line="41" pos:column="34">r<pos:position pos:line="41" pos:column="35"/></name></expr>]<pos:position pos:line="41" pos:column="36"/></index></name> <operator pos:line="41" pos:column="37">==<pos:position pos:line="41" pos:column="39"/></operator> <literal type="number" pos:line="41" pos:column="40">2<pos:position pos:line="41" pos:column="41"/></literal></expr>)<pos:position pos:line="41" pos:column="42"/></condition><then pos:line="41" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="25">rpdis1<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">++<pos:position pos:line="42" pos:column="33"/></operator></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt></block></then></if></elseif>
		<else pos:line="43" pos:column="17">else
			<block type="pseudo"><break pos:line="44" pos:column="25">break;<pos:position pos:line="44" pos:column="31"/></break></block></else></if>
	}<pos:position pos:line="45" pos:column="10"/></block></for>
	<comment type="block" pos:line="46" pos:column="9">/*
	 * If the run after the line 'i' found only multimatch lines, we
	 * return 0 and hence we don't make the current line (i) discarded.
	 */</comment>
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">rdis1<pos:position pos:line="50" pos:column="18"/></name> <operator pos:line="50" pos:column="19">==<pos:position pos:line="50" pos:column="21"/></operator> <literal type="number" pos:line="50" pos:column="22">0<pos:position pos:line="50" pos:column="23"/></literal></expr>)<pos:position pos:line="50" pos:column="24"/></condition><then pos:line="50" pos:column="24">
		<block type="pseudo"><return pos:line="51" pos:column="17">return <expr><literal type="number" pos:line="51" pos:column="24">0<pos:position pos:line="51" pos:column="25"/></literal></expr>;<pos:position pos:line="51" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="52" pos:column="9">rdis1<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">+=<pos:position pos:line="52" pos:column="17"/></operator> <name pos:line="52" pos:column="18">rdis0<pos:position pos:line="52" pos:column="23"/></name></expr>;<pos:position pos:line="52" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="53" pos:column="9">rpdis1<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">+=<pos:position pos:line="53" pos:column="18"/></operator> <name pos:line="53" pos:column="19">rpdis0<pos:position pos:line="53" pos:column="25"/></name></expr>;<pos:position pos:line="53" pos:column="26"/></expr_stmt>

	<return pos:line="55" pos:column="9">return <expr><name pos:line="55" pos:column="16">rpdis1<pos:position pos:line="55" pos:column="22"/></name> <operator pos:line="55" pos:column="23">*<pos:position pos:line="55" pos:column="24"/></operator> <name pos:line="55" pos:column="25">XDL_KPDIS_RUN<pos:position pos:line="55" pos:column="38"/></name> <operator pos:line="55" pos:column="39">&lt;<pos:position pos:line="55" pos:column="43"/></operator> <operator pos:line="55" pos:column="41">(<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="42">rpdis1<pos:position pos:line="55" pos:column="48"/></name> <operator pos:line="55" pos:column="49">+<pos:position pos:line="55" pos:column="50"/></operator> <name pos:line="55" pos:column="51">rdis1<pos:position pos:line="55" pos:column="56"/></name><operator pos:line="55" pos:column="56">)<pos:position pos:line="55" pos:column="57"/></operator></expr>;<pos:position pos:line="55" pos:column="58"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

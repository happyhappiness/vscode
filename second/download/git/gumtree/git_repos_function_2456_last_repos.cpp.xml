<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2456_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">match_pathspec_item<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">pathspec_item<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">item<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">int<pos:position pos:line="1" pos:column="69"/></name></type> <name pos:line="1" pos:column="70">prefix<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
			       <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">name<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">int<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">namelen<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">unsigned<pos:position pos:line="2" pos:column="71"/></name></type> <name pos:line="2" pos:column="72">flags<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<comment type="block" pos:line="4" pos:column="9">/* name/namelen has prefix cut off by caller */</comment>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">match<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name><name pos:line="5" pos:column="29">item<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">match<pos:position pos:line="5" pos:column="40"/></name></name> <operator pos:line="5" pos:column="41">+<pos:position pos:line="5" pos:column="42"/></operator> <name pos:line="5" pos:column="43">prefix<pos:position pos:line="5" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">matchlen<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><name><name pos:line="6" pos:column="24">item<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">len<pos:position pos:line="6" pos:column="33"/></name></name> <operator pos:line="6" pos:column="34">-<pos:position pos:line="6" pos:column="35"/></operator> <name pos:line="6" pos:column="36">prefix<pos:position pos:line="6" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/*
	 * The normal call pattern is:
	 * 1. prefix = common_prefix_len(ps);
	 * 2. prune something, or fill_directory
	 * 3. match_pathspec()
	 *
	 * 'prefix' at #1 may be shorter than the command's prefix and
	 * it's ok for #2 to match extra files. Those extras will be
	 * trimmed at #3.
	 *
	 * Suppose the pathspec is 'foo' and '../bar' running from
	 * subdir 'xyz'. The common prefix at #1 will be empty, thanks
	 * to "../". We may have xyz/foo _and_ XYZ/foo after #2. The
	 * user does not want XYZ/foo, only the "foo" part should be
	 * case-insensitive. We need to filter out XYZ/foo here. In
	 * other words, we do not trust the caller on comparing the
	 * prefix part when :(icase) is involved. We do exact
	 * comparison ourselves.
	 *
	 * Normally the caller (common_prefix_len() in fact) does
	 * _exact_ matching on name[-prefix+1..-1] and we do not need
	 * to check that part. Be defensive and check it anyway, in
	 * case common_prefix_len is changed, or a new caller is
	 * introduced that does not use common_prefix_len.
	 *
	 * If the penalty turns out too high when prefix is really
	 * long, maybe change it to
	 * strncmp(match, name, item-&gt;prefix - prefix)
	 */</comment>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name><name pos:line="37" pos:column="13">item<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">-&gt;<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="19">prefix<pos:position pos:line="37" pos:column="25"/></name></name> <operator pos:line="37" pos:column="26">&amp;&amp;<pos:position pos:line="37" pos:column="36"/></operator> <operator pos:line="37" pos:column="29">(<pos:position pos:line="37" pos:column="30"/></operator><name><name pos:line="37" pos:column="30">item<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">-&gt;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="36">magic<pos:position pos:line="37" pos:column="41"/></name></name> <operator pos:line="37" pos:column="42">&amp;<pos:position pos:line="37" pos:column="47"/></operator> <name pos:line="37" pos:column="44">PATHSPEC_ICASE<pos:position pos:line="37" pos:column="58"/></name><operator pos:line="37" pos:column="58">)<pos:position pos:line="37" pos:column="59"/></operator> <operator pos:line="37" pos:column="60">&amp;&amp;<pos:position pos:line="37" pos:column="70"/></operator>
	    <call><name pos:line="38" pos:column="13">strncmp<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><name><name pos:line="38" pos:column="21">item<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">-&gt;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="27">match<pos:position pos:line="38" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="34">name<pos:position pos:line="38" pos:column="38"/></name> <operator pos:line="38" pos:column="39">-<pos:position pos:line="38" pos:column="40"/></operator> <name pos:line="38" pos:column="41">prefix<pos:position pos:line="38" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="49">item<pos:position pos:line="38" pos:column="53"/></name><operator pos:line="38" pos:column="53">-&gt;<pos:position pos:line="38" pos:column="58"/></operator><name pos:line="38" pos:column="55">prefix<pos:position pos:line="38" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="63"/></condition><then pos:line="38" pos:column="63">
		<block type="pseudo"><return pos:line="39" pos:column="17">return <expr><literal type="number" pos:line="39" pos:column="24">0<pos:position pos:line="39" pos:column="25"/></literal></expr>;<pos:position pos:line="39" pos:column="26"/></return></block></then></if>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name><name pos:line="41" pos:column="13">item<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">-&gt;<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="19">attr_match_nr<pos:position pos:line="41" pos:column="32"/></name></name> <operator pos:line="41" pos:column="33">&amp;&amp;<pos:position pos:line="41" pos:column="43"/></operator> <operator pos:line="41" pos:column="36">!<pos:position pos:line="41" pos:column="37"/></operator><call><name pos:line="41" pos:column="37">match_attrs<pos:position pos:line="41" pos:column="48"/></name><argument_list pos:line="41" pos:column="48">(<argument><expr><name pos:line="41" pos:column="49">name<pos:position pos:line="41" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="55">namelen<pos:position pos:line="41" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="64">item<pos:position pos:line="41" pos:column="68"/></name></expr></argument>)<pos:position pos:line="41" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="70"/></condition><then pos:line="41" pos:column="70">
		<block type="pseudo"><return pos:line="42" pos:column="17">return <expr><literal type="number" pos:line="42" pos:column="24">0<pos:position pos:line="42" pos:column="25"/></literal></expr>;<pos:position pos:line="42" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="44" pos:column="9">/* If the match was just the prefix, we matched */</comment>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">!<pos:position pos:line="45" pos:column="14"/></operator><operator pos:line="45" pos:column="14">*<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="15">match<pos:position pos:line="45" pos:column="20"/></name></expr>)<pos:position pos:line="45" pos:column="21"/></condition><then pos:line="45" pos:column="21">
		<block type="pseudo"><return pos:line="46" pos:column="17">return <expr><name pos:line="46" pos:column="24">MATCHED_RECURSIVELY<pos:position pos:line="46" pos:column="43"/></name></expr>;<pos:position pos:line="46" pos:column="44"/></return></block></then></if>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">matchlen<pos:position pos:line="48" pos:column="21"/></name> <operator pos:line="48" pos:column="22">&lt;=<pos:position pos:line="48" pos:column="27"/></operator> <name pos:line="48" pos:column="25">namelen<pos:position pos:line="48" pos:column="32"/></name> <operator pos:line="48" pos:column="33">&amp;&amp;<pos:position pos:line="48" pos:column="43"/></operator> <operator pos:line="48" pos:column="36">!<pos:position pos:line="48" pos:column="37"/></operator><call><name pos:line="48" pos:column="37">ps_strncmp<pos:position pos:line="48" pos:column="47"/></name><argument_list pos:line="48" pos:column="47">(<argument><expr><name pos:line="48" pos:column="48">item<pos:position pos:line="48" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="54">match<pos:position pos:line="48" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="61">name<pos:position pos:line="48" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="67">matchlen<pos:position pos:line="48" pos:column="75"/></name></expr></argument>)<pos:position pos:line="48" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="77"/></condition><then pos:line="48" pos:column="77"> <block pos:line="48" pos:column="78">{
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name pos:line="49" pos:column="21">matchlen<pos:position pos:line="49" pos:column="29"/></name> <operator pos:line="49" pos:column="30">==<pos:position pos:line="49" pos:column="32"/></operator> <name pos:line="49" pos:column="33">namelen<pos:position pos:line="49" pos:column="40"/></name></expr>)<pos:position pos:line="49" pos:column="41"/></condition><then pos:line="49" pos:column="41">
			<block type="pseudo"><return pos:line="50" pos:column="25">return <expr><name pos:line="50" pos:column="32">MATCHED_EXACTLY<pos:position pos:line="50" pos:column="47"/></name></expr>;<pos:position pos:line="50" pos:column="48"/></return></block></then></if>

		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><name><name pos:line="52" pos:column="21">match<pos:position pos:line="52" pos:column="26"/></name><index pos:line="52" pos:column="26">[<expr><name pos:line="52" pos:column="27">matchlen<pos:position pos:line="52" pos:column="35"/></name><operator pos:line="52" pos:column="35">-<pos:position pos:line="52" pos:column="36"/></operator><literal type="number" pos:line="52" pos:column="36">1<pos:position pos:line="52" pos:column="37"/></literal></expr>]<pos:position pos:line="52" pos:column="38"/></index></name> <operator pos:line="52" pos:column="39">==<pos:position pos:line="52" pos:column="41"/></operator> <literal type="char" pos:line="52" pos:column="42">'/'<pos:position pos:line="52" pos:column="45"/></literal> <operator pos:line="52" pos:column="46">||<pos:position pos:line="52" pos:column="48"/></operator> <name><name pos:line="52" pos:column="49">name<pos:position pos:line="52" pos:column="53"/></name><index pos:line="52" pos:column="53">[<expr><name pos:line="52" pos:column="54">matchlen<pos:position pos:line="52" pos:column="62"/></name></expr>]<pos:position pos:line="52" pos:column="63"/></index></name> <operator pos:line="52" pos:column="64">==<pos:position pos:line="52" pos:column="66"/></operator> <literal type="char" pos:line="52" pos:column="67">'/'<pos:position pos:line="52" pos:column="70"/></literal></expr>)<pos:position pos:line="52" pos:column="71"/></condition><then pos:line="52" pos:column="71">
			<block type="pseudo"><return pos:line="53" pos:column="25">return <expr><name pos:line="53" pos:column="32">MATCHED_RECURSIVELY<pos:position pos:line="53" pos:column="51"/></name></expr>;<pos:position pos:line="53" pos:column="52"/></return></block></then></if>
	}<pos:position pos:line="54" pos:column="10"/></block></then> <elseif pos:line="54" pos:column="11">else <if pos:line="54" pos:column="16">if <condition pos:line="54" pos:column="19">(<expr><operator pos:line="54" pos:column="20">(<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="21">flags<pos:position pos:line="54" pos:column="26"/></name> <operator pos:line="54" pos:column="27">&amp;<pos:position pos:line="54" pos:column="32"/></operator> <name pos:line="54" pos:column="29">DO_MATCH_DIRECTORY<pos:position pos:line="54" pos:column="47"/></name><operator pos:line="54" pos:column="47">)<pos:position pos:line="54" pos:column="48"/></operator> <operator pos:line="54" pos:column="49">&amp;&amp;<pos:position pos:line="54" pos:column="59"/></operator>
		   <name><name pos:line="55" pos:column="20">match<pos:position pos:line="55" pos:column="25"/></name><index pos:line="55" pos:column="25">[<expr><name pos:line="55" pos:column="26">matchlen<pos:position pos:line="55" pos:column="34"/></name> <operator pos:line="55" pos:column="35">-<pos:position pos:line="55" pos:column="36"/></operator> <literal type="number" pos:line="55" pos:column="37">1<pos:position pos:line="55" pos:column="38"/></literal></expr>]<pos:position pos:line="55" pos:column="39"/></index></name> <operator pos:line="55" pos:column="40">==<pos:position pos:line="55" pos:column="42"/></operator> <literal type="char" pos:line="55" pos:column="43">'/'<pos:position pos:line="55" pos:column="46"/></literal> <operator pos:line="55" pos:column="47">&amp;&amp;<pos:position pos:line="55" pos:column="57"/></operator>
		   <name pos:line="56" pos:column="20">namelen<pos:position pos:line="56" pos:column="27"/></name> <operator pos:line="56" pos:column="28">==<pos:position pos:line="56" pos:column="30"/></operator> <name pos:line="56" pos:column="31">matchlen<pos:position pos:line="56" pos:column="39"/></name> <operator pos:line="56" pos:column="40">-<pos:position pos:line="56" pos:column="41"/></operator> <literal type="number" pos:line="56" pos:column="42">1<pos:position pos:line="56" pos:column="43"/></literal> <operator pos:line="56" pos:column="44">&amp;&amp;<pos:position pos:line="56" pos:column="54"/></operator>
		   <operator pos:line="57" pos:column="20">!<pos:position pos:line="57" pos:column="21"/></operator><call><name pos:line="57" pos:column="21">ps_strncmp<pos:position pos:line="57" pos:column="31"/></name><argument_list pos:line="57" pos:column="31">(<argument><expr><name pos:line="57" pos:column="32">item<pos:position pos:line="57" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="38">match<pos:position pos:line="57" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="45">name<pos:position pos:line="57" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="51">namelen<pos:position pos:line="57" pos:column="58"/></name></expr></argument>)<pos:position pos:line="57" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="60"/></condition><then pos:line="57" pos:column="60">
		<block type="pseudo"><return pos:line="58" pos:column="17">return <expr><name pos:line="58" pos:column="24">MATCHED_EXACTLY<pos:position pos:line="58" pos:column="39"/></name></expr>;<pos:position pos:line="58" pos:column="40"/></return></block></then></if></elseif></if>

	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name><name pos:line="60" pos:column="13">item<pos:position pos:line="60" pos:column="17"/></name><operator pos:line="60" pos:column="17">-&gt;<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="19">nowildcard_len<pos:position pos:line="60" pos:column="33"/></name></name> <operator pos:line="60" pos:column="34">&lt;<pos:position pos:line="60" pos:column="38"/></operator> <name><name pos:line="60" pos:column="36">item<pos:position pos:line="60" pos:column="40"/></name><operator pos:line="60" pos:column="40">-&gt;<pos:position pos:line="60" pos:column="45"/></operator><name pos:line="60" pos:column="42">len<pos:position pos:line="60" pos:column="45"/></name></name> <operator pos:line="60" pos:column="46">&amp;&amp;<pos:position pos:line="60" pos:column="56"/></operator>
	    <operator pos:line="61" pos:column="13">!<pos:position pos:line="61" pos:column="14"/></operator><call><name pos:line="61" pos:column="14">git_fnmatch<pos:position pos:line="61" pos:column="25"/></name><argument_list pos:line="61" pos:column="25">(<argument><expr><name pos:line="61" pos:column="26">item<pos:position pos:line="61" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="32">match<pos:position pos:line="61" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="39">name<pos:position pos:line="61" pos:column="43"/></name></expr></argument>,
			 <argument><expr><name><name pos:line="62" pos:column="26">item<pos:position pos:line="62" pos:column="30"/></name><operator pos:line="62" pos:column="30">-&gt;<pos:position pos:line="62" pos:column="35"/></operator><name pos:line="62" pos:column="32">nowildcard_len<pos:position pos:line="62" pos:column="46"/></name></name> <operator pos:line="62" pos:column="47">-<pos:position pos:line="62" pos:column="48"/></operator> <name pos:line="62" pos:column="49">prefix<pos:position pos:line="62" pos:column="55"/></name></expr></argument>)<pos:position pos:line="62" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="57"/></condition><then pos:line="62" pos:column="57">
		<block type="pseudo"><return pos:line="63" pos:column="17">return <expr><name pos:line="63" pos:column="24">MATCHED_FNMATCH<pos:position pos:line="63" pos:column="39"/></name></expr>;<pos:position pos:line="63" pos:column="40"/></return></block></then></if>

	<comment type="block" pos:line="65" pos:column="9">/* Perform checks to see if "name" is a super set of the pathspec */</comment>
	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name pos:line="66" pos:column="13">flags<pos:position pos:line="66" pos:column="18"/></name> <operator pos:line="66" pos:column="19">&amp;<pos:position pos:line="66" pos:column="24"/></operator> <name pos:line="66" pos:column="21">DO_MATCH_SUBMODULE<pos:position pos:line="66" pos:column="39"/></name></expr>)<pos:position pos:line="66" pos:column="40"/></condition><then pos:line="66" pos:column="40"> <block pos:line="66" pos:column="41">{
		<comment type="block" pos:line="67" pos:column="17">/* name is a literal prefix of the pathspec */</comment>
		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><operator pos:line="68" pos:column="21">(<pos:position pos:line="68" pos:column="22"/></operator><name pos:line="68" pos:column="22">namelen<pos:position pos:line="68" pos:column="29"/></name> <operator pos:line="68" pos:column="30">&lt;<pos:position pos:line="68" pos:column="34"/></operator> <name pos:line="68" pos:column="32">matchlen<pos:position pos:line="68" pos:column="40"/></name><operator pos:line="68" pos:column="40">)<pos:position pos:line="68" pos:column="41"/></operator> <operator pos:line="68" pos:column="42">&amp;&amp;<pos:position pos:line="68" pos:column="52"/></operator>
		    <operator pos:line="69" pos:column="21">(<pos:position pos:line="69" pos:column="22"/></operator><name><name pos:line="69" pos:column="22">match<pos:position pos:line="69" pos:column="27"/></name><index pos:line="69" pos:column="27">[<expr><name pos:line="69" pos:column="28">namelen<pos:position pos:line="69" pos:column="35"/></name></expr>]<pos:position pos:line="69" pos:column="36"/></index></name> <operator pos:line="69" pos:column="37">==<pos:position pos:line="69" pos:column="39"/></operator> <literal type="char" pos:line="69" pos:column="40">'/'<pos:position pos:line="69" pos:column="43"/></literal><operator pos:line="69" pos:column="43">)<pos:position pos:line="69" pos:column="44"/></operator> <operator pos:line="69" pos:column="45">&amp;&amp;<pos:position pos:line="69" pos:column="55"/></operator>
		    <operator pos:line="70" pos:column="21">!<pos:position pos:line="70" pos:column="22"/></operator><call><name pos:line="70" pos:column="22">ps_strncmp<pos:position pos:line="70" pos:column="32"/></name><argument_list pos:line="70" pos:column="32">(<argument><expr><name pos:line="70" pos:column="33">item<pos:position pos:line="70" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="39">match<pos:position pos:line="70" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="46">name<pos:position pos:line="70" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="52">namelen<pos:position pos:line="70" pos:column="59"/></name></expr></argument>)<pos:position pos:line="70" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="61"/></condition><then pos:line="70" pos:column="61">
			<block type="pseudo"><return pos:line="71" pos:column="25">return <expr><name pos:line="71" pos:column="32">MATCHED_RECURSIVELY<pos:position pos:line="71" pos:column="51"/></name></expr>;<pos:position pos:line="71" pos:column="52"/></return></block></then></if>

		<comment type="block" pos:line="73" pos:column="17">/* name" doesn't match up to the first wild character */</comment>
		<if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><name><name pos:line="74" pos:column="21">item<pos:position pos:line="74" pos:column="25"/></name><operator pos:line="74" pos:column="25">-&gt;<pos:position pos:line="74" pos:column="30"/></operator><name pos:line="74" pos:column="27">nowildcard_len<pos:position pos:line="74" pos:column="41"/></name></name> <operator pos:line="74" pos:column="42">&lt;<pos:position pos:line="74" pos:column="46"/></operator> <name><name pos:line="74" pos:column="44">item<pos:position pos:line="74" pos:column="48"/></name><operator pos:line="74" pos:column="48">-&gt;<pos:position pos:line="74" pos:column="53"/></operator><name pos:line="74" pos:column="50">len<pos:position pos:line="74" pos:column="53"/></name></name> <operator pos:line="74" pos:column="54">&amp;&amp;<pos:position pos:line="74" pos:column="64"/></operator>
		    <call><name pos:line="75" pos:column="21">ps_strncmp<pos:position pos:line="75" pos:column="31"/></name><argument_list pos:line="75" pos:column="31">(<argument><expr><name pos:line="75" pos:column="32">item<pos:position pos:line="75" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="38">match<pos:position pos:line="75" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="45">name<pos:position pos:line="75" pos:column="49"/></name></expr></argument>,
			       <argument><expr><name><name pos:line="76" pos:column="32">item<pos:position pos:line="76" pos:column="36"/></name><operator pos:line="76" pos:column="36">-&gt;<pos:position pos:line="76" pos:column="41"/></operator><name pos:line="76" pos:column="38">nowildcard_len<pos:position pos:line="76" pos:column="52"/></name></name> <operator pos:line="76" pos:column="53">-<pos:position pos:line="76" pos:column="54"/></operator> <name pos:line="76" pos:column="55">prefix<pos:position pos:line="76" pos:column="61"/></name></expr></argument>)<pos:position pos:line="76" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="63"/></condition><then pos:line="76" pos:column="63">
			<block type="pseudo"><return pos:line="77" pos:column="25">return <expr><literal type="number" pos:line="77" pos:column="32">0<pos:position pos:line="77" pos:column="33"/></literal></expr>;<pos:position pos:line="77" pos:column="34"/></return></block></then></if>

		<comment type="block" pos:line="79" pos:column="17">/*
		 * Here is where we would perform a wildmatch to check if
		 * "name" can be matched as a directory (or a prefix) against
		 * the pathspec.  Since wildmatch doesn't have this capability
		 * at the present we have to punt and say that it is a match,
		 * potentially returning a false positive
		 * The submodules themselves will be able to perform more
		 * accurate matching to determine if the pathspec matches.
		 */</comment>
		<return pos:line="88" pos:column="17">return <expr><name pos:line="88" pos:column="24">MATCHED_RECURSIVELY<pos:position pos:line="88" pos:column="43"/></name></expr>;<pos:position pos:line="88" pos:column="44"/></return>
	}<pos:position pos:line="89" pos:column="10"/></block></then></if>

	<return pos:line="91" pos:column="9">return <expr><literal type="number" pos:line="91" pos:column="16">0<pos:position pos:line="91" pos:column="17"/></literal></expr>;<pos:position pos:line="91" pos:column="18"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

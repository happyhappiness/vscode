<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1874.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">gc_config<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">value<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><call><name pos:line="5" pos:column="14">git_config_get_value<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><literal type="string" pos:line="5" pos:column="35">"gc.packrefs"<pos:position pos:line="5" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="5" pos:column="50">&amp;<pos:position pos:line="5" pos:column="55"/></operator><name pos:line="5" pos:column="51">value<pos:position pos:line="5" pos:column="56"/></name></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="58"/></condition><then pos:line="5" pos:column="58"> <block pos:line="5" pos:column="59">{
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><name pos:line="6" pos:column="21">value<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">&amp;&amp;<pos:position pos:line="6" pos:column="37"/></operator> <operator pos:line="6" pos:column="30">!<pos:position pos:line="6" pos:column="31"/></operator><call><name pos:line="6" pos:column="31">strcmp<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><name pos:line="6" pos:column="38">value<pos:position pos:line="6" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="45">"notbare"<pos:position pos:line="6" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="56"/></condition><then pos:line="6" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="25">pack_refs<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">=<pos:position pos:line="7" pos:column="36"/></operator> <operator pos:line="7" pos:column="37">-<pos:position pos:line="7" pos:column="38"/></operator><literal type="number" pos:line="7" pos:column="38">1<pos:position pos:line="7" pos:column="39"/></literal></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt></block></then>
		<else pos:line="8" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="25">pack_refs<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">=<pos:position pos:line="9" pos:column="36"/></operator> <call><name pos:line="9" pos:column="37">git_config_bool<pos:position pos:line="9" pos:column="52"/></name><argument_list pos:line="9" pos:column="52">(<argument><expr><literal type="string" pos:line="9" pos:column="53">"gc.packrefs"<pos:position pos:line="9" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="68">value<pos:position pos:line="9" pos:column="73"/></name></expr></argument>)<pos:position pos:line="9" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="75"/></expr_stmt></block></else></if>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">git_config_get_int<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><literal type="string" pos:line="12" pos:column="28">"gc.aggressivewindow"<pos:position pos:line="12" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="51">&amp;<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="52">aggressive_window<pos:position pos:line="12" pos:column="69"/></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">git_config_get_int<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><literal type="string" pos:line="13" pos:column="28">"gc.aggressivedepth"<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="50">&amp;<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="51">aggressive_depth<pos:position pos:line="13" pos:column="67"/></name></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">git_config_get_int<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><literal type="string" pos:line="14" pos:column="28">"gc.auto"<pos:position pos:line="14" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="39">&amp;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="40">gc_auto_threshold<pos:position pos:line="14" pos:column="57"/></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">git_config_get_int<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><literal type="string" pos:line="15" pos:column="28">"gc.autopacklimit"<pos:position pos:line="15" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="48">&amp;<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="49">gc_auto_pack_limit<pos:position pos:line="15" pos:column="67"/></name></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">git_config_get_bool<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><literal type="string" pos:line="16" pos:column="29">"gc.autodetach"<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="46">&amp;<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="47">detach_auto<pos:position pos:line="16" pos:column="58"/></name></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="60"/></expr_stmt>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><call><name pos:line="18" pos:column="14">git_config_get_string_const<pos:position pos:line="18" pos:column="41"/></name><argument_list pos:line="18" pos:column="41">(<argument><expr><literal type="string" pos:line="18" pos:column="42">"gc.pruneexpire"<pos:position pos:line="18" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="60">&amp;<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="61">prune_expire<pos:position pos:line="18" pos:column="73"/></name></expr></argument>)<pos:position pos:line="18" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="75"/></condition><then pos:line="18" pos:column="75"> <block pos:line="18" pos:column="76">{
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><call><name pos:line="19" pos:column="21">strcmp<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">prune_expire<pos:position pos:line="19" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="42">"now"<pos:position pos:line="19" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="49"/></condition><then pos:line="19" pos:column="49"> <block pos:line="19" pos:column="50">{
			<decl_stmt><decl><type><name pos:line="20" pos:column="25">unsigned<pos:position pos:line="20" pos:column="33"/></name> <name pos:line="20" pos:column="34">long<pos:position pos:line="20" pos:column="38"/></name></type> <name pos:line="20" pos:column="39">now<pos:position pos:line="20" pos:column="42"/></name> <init pos:line="20" pos:column="43">= <expr><call><name pos:line="20" pos:column="45">approxidate<pos:position pos:line="20" pos:column="56"/></name><argument_list pos:line="20" pos:column="56">(<argument><expr><literal type="string" pos:line="20" pos:column="57">"now"<pos:position pos:line="20" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="64"/></decl_stmt>
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><call><name pos:line="21" pos:column="29">approxidate<pos:position pos:line="21" pos:column="40"/></name><argument_list pos:line="21" pos:column="40">(<argument><expr><name pos:line="21" pos:column="41">prune_expire<pos:position pos:line="21" pos:column="53"/></name></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call> <operator pos:line="21" pos:column="55">&gt;=<pos:position pos:line="21" pos:column="60"/></operator> <name pos:line="21" pos:column="58">now<pos:position pos:line="21" pos:column="61"/></name></expr>)<pos:position pos:line="21" pos:column="62"/></condition><then pos:line="21" pos:column="62"> <block pos:line="21" pos:column="63">{
				<expr_stmt><expr><call><name pos:line="22" pos:column="33">git_die_config<pos:position pos:line="22" pos:column="47"/></name><argument_list pos:line="22" pos:column="47">(<argument><expr><literal type="string" pos:line="22" pos:column="48">"gc.pruneexpire"<pos:position pos:line="22" pos:column="64"/></literal></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="66">_<pos:position pos:line="22" pos:column="67"/></name><argument_list pos:line="22" pos:column="67">(<argument><expr><literal type="string" pos:line="22" pos:column="68">"Invalid gc.pruneexpire: '%s'"<pos:position pos:line="22" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="99"/></argument_list></call></expr></argument>,
						<argument><expr><name pos:line="23" pos:column="49">prune_expire<pos:position pos:line="23" pos:column="61"/></name></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="24" pos:column="26"/></block></then></if>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">git_config<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><name pos:line="27" pos:column="20">git_default_config<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="40">NULL<pos:position pos:line="27" pos:column="44"/></name></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

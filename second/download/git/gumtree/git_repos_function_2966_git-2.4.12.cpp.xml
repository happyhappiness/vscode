<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2966_git-2.4.12.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">merge_trees<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name><name pos:line="1" pos:column="17">struct<pos:position pos:line="1" pos:column="23"/></name> <name pos:line="1" pos:column="24">merge_options<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">o<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">tree<pos:position pos:line="2" pos:column="28"/></name></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">head<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="3" pos:column="17">struct<pos:position pos:line="3" pos:column="23"/></name> <name pos:line="3" pos:column="24">tree<pos:position pos:line="3" pos:column="28"/></name></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">merge<pos:position pos:line="3" pos:column="35"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="4" pos:column="17">struct<pos:position pos:line="4" pos:column="23"/></name> <name pos:line="4" pos:column="24">tree<pos:position pos:line="4" pos:column="28"/></name></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">common<pos:position pos:line="4" pos:column="36"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="5" pos:column="17">struct<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">tree<pos:position pos:line="5" pos:column="28"/></name></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier><modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">result<pos:position pos:line="5" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="38"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">code<pos:position pos:line="7" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="19">clean<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">o<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">subtree_shift<pos:position pos:line="9" pos:column="29"/></name></name></expr>)<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30"> <block pos:line="9" pos:column="31">{
		<expr_stmt><expr><name pos:line="10" pos:column="17">merge<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <call><name pos:line="10" pos:column="25">shift_tree_object<pos:position pos:line="10" pos:column="42"/></name><argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">head<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">merge<pos:position pos:line="10" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="56">o<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">-&gt;<pos:position pos:line="10" pos:column="62"/></operator><name pos:line="10" pos:column="59">subtree_shift<pos:position pos:line="10" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><name pos:line="11" pos:column="17">common<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <call><name pos:line="11" pos:column="26">shift_tree_object<pos:position pos:line="11" pos:column="43"/></name><argument_list pos:line="11" pos:column="43">(<argument><expr><name pos:line="11" pos:column="44">head<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">common<pos:position pos:line="11" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="58">o<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">-&gt;<pos:position pos:line="11" pos:column="64"/></operator><name pos:line="11" pos:column="61">subtree_shift<pos:position pos:line="11" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="76"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">sha_eq<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name><name pos:line="14" pos:column="20">common<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">object<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">.<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="35">sha1<pos:position pos:line="14" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="41">merge<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">-&gt;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="48">object<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">.<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="55">sha1<pos:position pos:line="14" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="61"/></condition><then pos:line="14" pos:column="61"> <block pos:line="14" pos:column="62">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">output<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">o<pos:position pos:line="15" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="27">0<pos:position pos:line="15" pos:column="28"/></literal></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="30">_<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><literal type="string" pos:line="15" pos:column="32">"Already up-to-date!"<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">result<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">head<pos:position pos:line="16" pos:column="31"/></name></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">1<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="20" pos:column="9">code<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">git_merge_trees<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name><name pos:line="20" pos:column="32">o<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">call_depth<pos:position pos:line="20" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="47">common<pos:position pos:line="20" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">head<pos:position pos:line="20" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="61">merge<pos:position pos:line="20" pos:column="66"/></name></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="68"/></expr_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">code<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">!=<pos:position pos:line="22" pos:column="20"/></operator> <literal type="number" pos:line="22" pos:column="21">0<pos:position pos:line="22" pos:column="22"/></literal></expr>)<pos:position pos:line="22" pos:column="23"/></condition><then pos:line="22" pos:column="23"> <block pos:line="22" pos:column="24">{
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><call><name pos:line="23" pos:column="21">show<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">o<pos:position pos:line="23" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="29">4<pos:position pos:line="23" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="31"/></argument_list></call> <operator pos:line="23" pos:column="32">||<pos:position pos:line="23" pos:column="34"/></operator> <name><name pos:line="23" pos:column="35">o<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">call_depth<pos:position pos:line="23" pos:column="48"/></name></name></expr>)<pos:position pos:line="23" pos:column="49"/></condition><then pos:line="23" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="25">die<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><call><name pos:line="24" pos:column="29">_<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><literal type="string" pos:line="24" pos:column="31">"merging of trees %s and %s failed"<pos:position pos:line="24" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="67"/></argument_list></call></expr></argument>,
			    <argument><expr><call><name pos:line="25" pos:column="29">sha1_to_hex<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name><name pos:line="25" pos:column="41">head<pos:position pos:line="25" pos:column="45"/></name><operator pos:line="25" pos:column="45">-&gt;<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="47">object<pos:position pos:line="25" pos:column="53"/></name><operator pos:line="25" pos:column="53">.<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="54">sha1<pos:position pos:line="25" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr></argument>,
			    <argument><expr><call><name pos:line="26" pos:column="29">sha1_to_hex<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name><name pos:line="26" pos:column="41">merge<pos:position pos:line="26" pos:column="46"/></name><operator pos:line="26" pos:column="46">-&gt;<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="48">object<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">.<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="55">sha1<pos:position pos:line="26" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="62"/></expr_stmt></block></then>
		<else pos:line="27" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">exit<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><literal type="number" pos:line="28" pos:column="30">128<pos:position pos:line="28" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt></block></else></if>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">unmerged_cache<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">()<pos:position pos:line="31" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="30"/></condition><then pos:line="31" pos:column="30"> <block pos:line="31" pos:column="31">{
		<decl_stmt><decl><type><name><name pos:line="32" pos:column="17">struct<pos:position pos:line="32" pos:column="23"/></name> <name pos:line="32" pos:column="24">string_list<pos:position pos:line="32" pos:column="35"/></name></name> <modifier pos:line="32" pos:column="36">*<pos:position pos:line="32" pos:column="37"/></modifier></type><name pos:line="32" pos:column="37">entries<pos:position pos:line="32" pos:column="44"/></name></decl>, <modifier pos:line="32" pos:column="46">*<pos:position pos:line="32" pos:column="47"/></modifier><decl><type ref="prev"/><name pos:line="32" pos:column="47">re_head<pos:position pos:line="32" pos:column="54"/></name></decl>, <modifier pos:line="32" pos:column="56">*<pos:position pos:line="32" pos:column="57"/></modifier><decl><type ref="prev"/><name pos:line="32" pos:column="57">re_merge<pos:position pos:line="32" pos:column="65"/></name></decl>;<pos:position pos:line="32" pos:column="66"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="33" pos:column="17">int<pos:position pos:line="33" pos:column="20"/></name></type> <name pos:line="33" pos:column="21">i<pos:position pos:line="33" pos:column="22"/></name></decl>;<pos:position pos:line="33" pos:column="23"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">string_list_clear<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><operator pos:line="34" pos:column="35">&amp;<pos:position pos:line="34" pos:column="40"/></operator><name><name pos:line="34" pos:column="36">o<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">-&gt;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="39">current_file_set<pos:position pos:line="34" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="57">1<pos:position pos:line="34" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">string_list_clear<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><operator pos:line="35" pos:column="35">&amp;<pos:position pos:line="35" pos:column="40"/></operator><name><name pos:line="35" pos:column="36">o<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">-&gt;<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="39">current_directory_set<pos:position pos:line="35" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="62">1<pos:position pos:line="35" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">get_files_dirs<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name pos:line="36" pos:column="32">o<pos:position pos:line="36" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="35">head<pos:position pos:line="36" pos:column="39"/></name></expr></argument>)<pos:position pos:line="36" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">get_files_dirs<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><name pos:line="37" pos:column="32">o<pos:position pos:line="37" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="35">merge<pos:position pos:line="37" pos:column="40"/></name></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="42"/></expr_stmt>

		<expr_stmt><expr><name pos:line="39" pos:column="17">entries<pos:position pos:line="39" pos:column="24"/></name> <operator pos:line="39" pos:column="25">=<pos:position pos:line="39" pos:column="26"/></operator> <call><name pos:line="39" pos:column="27">get_unmerged<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">()<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">record_df_conflict_files<pos:position pos:line="40" pos:column="41"/></name><argument_list pos:line="40" pos:column="41">(<argument><expr><name pos:line="40" pos:column="42">o<pos:position pos:line="40" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="45">entries<pos:position pos:line="40" pos:column="52"/></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="41" pos:column="17">re_head<pos:position pos:line="41" pos:column="24"/></name>  <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <call><name pos:line="41" pos:column="28">get_renames<pos:position pos:line="41" pos:column="39"/></name><argument_list pos:line="41" pos:column="39">(<argument><expr><name pos:line="41" pos:column="40">o<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="43">head<pos:position pos:line="41" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">common<pos:position pos:line="41" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="57">head<pos:position pos:line="41" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="63">merge<pos:position pos:line="41" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="70">entries<pos:position pos:line="41" pos:column="77"/></name></expr></argument>)<pos:position pos:line="41" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><name pos:line="42" pos:column="17">re_merge<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator> <call><name pos:line="42" pos:column="28">get_renames<pos:position pos:line="42" pos:column="39"/></name><argument_list pos:line="42" pos:column="39">(<argument><expr><name pos:line="42" pos:column="40">o<pos:position pos:line="42" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="43">merge<pos:position pos:line="42" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="50">common<pos:position pos:line="42" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="58">head<pos:position pos:line="42" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="64">merge<pos:position pos:line="42" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="71">entries<pos:position pos:line="42" pos:column="78"/></name></expr></argument>)<pos:position pos:line="42" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><name pos:line="43" pos:column="17">clean<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">=<pos:position pos:line="43" pos:column="24"/></operator> <call><name pos:line="43" pos:column="25">process_renames<pos:position pos:line="43" pos:column="40"/></name><argument_list pos:line="43" pos:column="40">(<argument><expr><name pos:line="43" pos:column="41">o<pos:position pos:line="43" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="44">re_head<pos:position pos:line="43" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="53">re_merge<pos:position pos:line="43" pos:column="61"/></name></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="63"/></expr_stmt>
		<for pos:line="44" pos:column="17">for <control pos:line="44" pos:column="21">(<init><expr><name pos:line="44" pos:column="22">i<pos:position pos:line="44" pos:column="23"/></name> <operator pos:line="44" pos:column="24">=<pos:position pos:line="44" pos:column="25"/></operator> <name><name pos:line="44" pos:column="26">entries<pos:position pos:line="44" pos:column="33"/></name><operator pos:line="44" pos:column="33">-&gt;<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="35">nr<pos:position pos:line="44" pos:column="37"/></name></name><operator pos:line="44" pos:column="37">-<pos:position pos:line="44" pos:column="38"/></operator><literal type="number" pos:line="44" pos:column="38">1<pos:position pos:line="44" pos:column="39"/></literal></expr>;<pos:position pos:line="44" pos:column="40"/></init> <condition><expr><literal type="number" pos:line="44" pos:column="41">0<pos:position pos:line="44" pos:column="42"/></literal> <operator pos:line="44" pos:column="43">&lt;=<pos:position pos:line="44" pos:column="48"/></operator> <name pos:line="44" pos:column="46">i<pos:position pos:line="44" pos:column="47"/></name></expr>;<pos:position pos:line="44" pos:column="48"/></condition> <incr><expr><name pos:line="44" pos:column="49">i<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">--<pos:position pos:line="44" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="44" pos:column="53"/></control> <block pos:line="44" pos:column="54">{
			<decl_stmt><decl><type><specifier pos:line="45" pos:column="25">const<pos:position pos:line="45" pos:column="30"/></specifier> <name pos:line="45" pos:column="31">char<pos:position pos:line="45" pos:column="35"/></name> <modifier pos:line="45" pos:column="36">*<pos:position pos:line="45" pos:column="37"/></modifier></type><name pos:line="45" pos:column="37">path<pos:position pos:line="45" pos:column="41"/></name> <init pos:line="45" pos:column="42">= <expr><name><name pos:line="45" pos:column="44">entries<pos:position pos:line="45" pos:column="51"/></name><operator pos:line="45" pos:column="51">-&gt;<pos:position pos:line="45" pos:column="56"/></operator><name pos:line="45" pos:column="53">items<pos:position pos:line="45" pos:column="58"/></name><index pos:line="45" pos:column="58">[<expr><name pos:line="45" pos:column="59">i<pos:position pos:line="45" pos:column="60"/></name></expr>]<pos:position pos:line="45" pos:column="61"/></index></name><operator pos:line="45" pos:column="61">.<pos:position pos:line="45" pos:column="62"/></operator><name pos:line="45" pos:column="62">string<pos:position pos:line="45" pos:column="68"/></name></expr></init></decl>;<pos:position pos:line="45" pos:column="69"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="46" pos:column="25">struct<pos:position pos:line="46" pos:column="31"/></name> <name pos:line="46" pos:column="32">stage_data<pos:position pos:line="46" pos:column="42"/></name></name> <modifier pos:line="46" pos:column="43">*<pos:position pos:line="46" pos:column="44"/></modifier></type><name pos:line="46" pos:column="44">e<pos:position pos:line="46" pos:column="45"/></name> <init pos:line="46" pos:column="46">= <expr><name><name pos:line="46" pos:column="48">entries<pos:position pos:line="46" pos:column="55"/></name><operator pos:line="46" pos:column="55">-&gt;<pos:position pos:line="46" pos:column="60"/></operator><name pos:line="46" pos:column="57">items<pos:position pos:line="46" pos:column="62"/></name><index pos:line="46" pos:column="62">[<expr><name pos:line="46" pos:column="63">i<pos:position pos:line="46" pos:column="64"/></name></expr>]<pos:position pos:line="46" pos:column="65"/></index></name><operator pos:line="46" pos:column="65">.<pos:position pos:line="46" pos:column="66"/></operator><name pos:line="46" pos:column="66">util<pos:position pos:line="46" pos:column="70"/></name></expr></init></decl>;<pos:position pos:line="46" pos:column="71"/></decl_stmt>
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><operator pos:line="47" pos:column="29">!<pos:position pos:line="47" pos:column="30"/></operator><name><name pos:line="47" pos:column="30">e<pos:position pos:line="47" pos:column="31"/></name><operator pos:line="47" pos:column="31">-&gt;<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="33">processed<pos:position pos:line="47" pos:column="42"/></name></name>
				<operator pos:line="48" pos:column="33">&amp;&amp;<pos:position pos:line="48" pos:column="43"/></operator> <operator pos:line="48" pos:column="36">!<pos:position pos:line="48" pos:column="37"/></operator><call><name pos:line="48" pos:column="37">process_entry<pos:position pos:line="48" pos:column="50"/></name><argument_list pos:line="48" pos:column="50">(<argument><expr><name pos:line="48" pos:column="51">o<pos:position pos:line="48" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="54">path<pos:position pos:line="48" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="60">e<pos:position pos:line="48" pos:column="61"/></name></expr></argument>)<pos:position pos:line="48" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="63"/></condition><then pos:line="48" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="33">clean<pos:position pos:line="49" pos:column="38"/></name> <operator pos:line="49" pos:column="39">=<pos:position pos:line="49" pos:column="40"/></operator> <literal type="number" pos:line="49" pos:column="41">0<pos:position pos:line="49" pos:column="42"/></literal></expr>;<pos:position pos:line="49" pos:column="43"/></expr_stmt></block></then></if>
		}<pos:position pos:line="50" pos:column="18"/></block></for>
		<for pos:line="51" pos:column="17">for <control pos:line="51" pos:column="21">(<init><expr><name pos:line="51" pos:column="22">i<pos:position pos:line="51" pos:column="23"/></name> <operator pos:line="51" pos:column="24">=<pos:position pos:line="51" pos:column="25"/></operator> <literal type="number" pos:line="51" pos:column="26">0<pos:position pos:line="51" pos:column="27"/></literal></expr>;<pos:position pos:line="51" pos:column="28"/></init> <condition><expr><name pos:line="51" pos:column="29">i<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">&lt;<pos:position pos:line="51" pos:column="35"/></operator> <name><name pos:line="51" pos:column="33">entries<pos:position pos:line="51" pos:column="40"/></name><operator pos:line="51" pos:column="40">-&gt;<pos:position pos:line="51" pos:column="45"/></operator><name pos:line="51" pos:column="42">nr<pos:position pos:line="51" pos:column="44"/></name></name></expr>;<pos:position pos:line="51" pos:column="45"/></condition> <incr><expr><name pos:line="51" pos:column="46">i<pos:position pos:line="51" pos:column="47"/></name><operator pos:line="51" pos:column="47">++<pos:position pos:line="51" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="51" pos:column="50"/></control> <block pos:line="51" pos:column="51">{
			<decl_stmt><decl><type><name><name pos:line="52" pos:column="25">struct<pos:position pos:line="52" pos:column="31"/></name> <name pos:line="52" pos:column="32">stage_data<pos:position pos:line="52" pos:column="42"/></name></name> <modifier pos:line="52" pos:column="43">*<pos:position pos:line="52" pos:column="44"/></modifier></type><name pos:line="52" pos:column="44">e<pos:position pos:line="52" pos:column="45"/></name> <init pos:line="52" pos:column="46">= <expr><name><name pos:line="52" pos:column="48">entries<pos:position pos:line="52" pos:column="55"/></name><operator pos:line="52" pos:column="55">-&gt;<pos:position pos:line="52" pos:column="60"/></operator><name pos:line="52" pos:column="57">items<pos:position pos:line="52" pos:column="62"/></name><index pos:line="52" pos:column="62">[<expr><name pos:line="52" pos:column="63">i<pos:position pos:line="52" pos:column="64"/></name></expr>]<pos:position pos:line="52" pos:column="65"/></index></name><operator pos:line="52" pos:column="65">.<pos:position pos:line="52" pos:column="66"/></operator><name pos:line="52" pos:column="66">util<pos:position pos:line="52" pos:column="70"/></name></expr></init></decl>;<pos:position pos:line="52" pos:column="71"/></decl_stmt>
			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><operator pos:line="53" pos:column="29">!<pos:position pos:line="53" pos:column="30"/></operator><name><name pos:line="53" pos:column="30">e<pos:position pos:line="53" pos:column="31"/></name><operator pos:line="53" pos:column="31">-&gt;<pos:position pos:line="53" pos:column="36"/></operator><name pos:line="53" pos:column="33">processed<pos:position pos:line="53" pos:column="42"/></name></name></expr>)<pos:position pos:line="53" pos:column="43"/></condition><then pos:line="53" pos:column="43">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="33">die<pos:position pos:line="54" pos:column="36"/></name><argument_list pos:line="54" pos:column="36">(<argument><expr><call><name pos:line="54" pos:column="37">_<pos:position pos:line="54" pos:column="38"/></name><argument_list pos:line="54" pos:column="38">(<argument><expr><literal type="string" pos:line="54" pos:column="39">"Unprocessed path??? %s"<pos:position pos:line="54" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="64"/></argument_list></call></expr></argument>,
				    <argument><expr><name><name pos:line="55" pos:column="37">entries<pos:position pos:line="55" pos:column="44"/></name><operator pos:line="55" pos:column="44">-&gt;<pos:position pos:line="55" pos:column="49"/></operator><name pos:line="55" pos:column="46">items<pos:position pos:line="55" pos:column="51"/></name><index pos:line="55" pos:column="51">[<expr><name pos:line="55" pos:column="52">i<pos:position pos:line="55" pos:column="53"/></name></expr>]<pos:position pos:line="55" pos:column="54"/></index></name><operator pos:line="55" pos:column="54">.<pos:position pos:line="55" pos:column="55"/></operator><name pos:line="55" pos:column="55">string<pos:position pos:line="55" pos:column="61"/></name></expr></argument>)<pos:position pos:line="55" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="63"/></expr_stmt></block></then></if>
		}<pos:position pos:line="56" pos:column="18"/></block></for>

		<expr_stmt><expr><call><name pos:line="58" pos:column="17">string_list_clear<pos:position pos:line="58" pos:column="34"/></name><argument_list pos:line="58" pos:column="34">(<argument><expr><name pos:line="58" pos:column="35">re_merge<pos:position pos:line="58" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="45">0<pos:position pos:line="58" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">string_list_clear<pos:position pos:line="59" pos:column="34"/></name><argument_list pos:line="59" pos:column="34">(<argument><expr><name pos:line="59" pos:column="35">re_head<pos:position pos:line="59" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="44">0<pos:position pos:line="59" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">string_list_clear<pos:position pos:line="60" pos:column="34"/></name><argument_list pos:line="60" pos:column="34">(<argument><expr><name pos:line="60" pos:column="35">entries<pos:position pos:line="60" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="44">1<pos:position pos:line="60" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="47"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="62" pos:column="17">free<pos:position pos:line="62" pos:column="21"/></name><argument_list pos:line="62" pos:column="21">(<argument><expr><name pos:line="62" pos:column="22">re_merge<pos:position pos:line="62" pos:column="30"/></name></expr></argument>)<pos:position pos:line="62" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">free<pos:position pos:line="63" pos:column="21"/></name><argument_list pos:line="63" pos:column="21">(<argument><expr><name pos:line="63" pos:column="22">re_head<pos:position pos:line="63" pos:column="29"/></name></expr></argument>)<pos:position pos:line="63" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="64" pos:column="17">free<pos:position pos:line="64" pos:column="21"/></name><argument_list pos:line="64" pos:column="21">(<argument><expr><name pos:line="64" pos:column="22">entries<pos:position pos:line="64" pos:column="29"/></name></expr></argument>)<pos:position pos:line="64" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="65" pos:column="10"/></block></then>
	<else pos:line="66" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="17">clean<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">=<pos:position pos:line="67" pos:column="24"/></operator> <literal type="number" pos:line="67" pos:column="25">1<pos:position pos:line="67" pos:column="26"/></literal></expr>;<pos:position pos:line="67" pos:column="27"/></expr_stmt></block></else></if>

	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name><name pos:line="69" pos:column="13">o<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">-&gt;<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="16">call_depth<pos:position pos:line="69" pos:column="26"/></name></name></expr>)<pos:position pos:line="69" pos:column="27"/></condition><then pos:line="69" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="70" pos:column="17">*<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="18">result<pos:position pos:line="70" pos:column="24"/></name> <operator pos:line="70" pos:column="25">=<pos:position pos:line="70" pos:column="26"/></operator> <call><name pos:line="70" pos:column="27">write_tree_from_memory<pos:position pos:line="70" pos:column="49"/></name><argument_list pos:line="70" pos:column="49">(<argument><expr><name pos:line="70" pos:column="50">o<pos:position pos:line="70" pos:column="51"/></name></expr></argument>)<pos:position pos:line="70" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="53"/></expr_stmt></block></then></if>

	<return pos:line="72" pos:column="9">return <expr><name pos:line="72" pos:column="16">clean<pos:position pos:line="72" pos:column="21"/></name></expr>;<pos:position pos:line="72" pos:column="22"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

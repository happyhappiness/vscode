<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2588.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">commit<pos:position pos:line="1" pos:column="21"/></name></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">handle_commit<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">rev_info<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">revs<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
				    <parameter><decl><type><name><name pos:line="2" pos:column="37">struct<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">object_array_entry<pos:position pos:line="2" pos:column="62"/></name></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">entry<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">object<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name><name pos:line="4" pos:column="33">entry<pos:position pos:line="4" pos:column="38"/></name><operator pos:line="4" pos:column="38">-&gt;<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="40">item<pos:position pos:line="4" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">name<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">entry<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">name<pos:position pos:line="5" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">path<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name><name pos:line="6" pos:column="28">entry<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">path<pos:position pos:line="6" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">int<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">mode<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name><name pos:line="7" pos:column="29">entry<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">mode<pos:position pos:line="7" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">unsigned<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">long<pos:position pos:line="8" pos:column="22"/></name></type> <name pos:line="8" pos:column="23">flags<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name><name pos:line="8" pos:column="31">object<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">-&gt;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="39">flags<pos:position pos:line="8" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="45"/></decl_stmt>

	<comment type="block" pos:line="10" pos:column="9">/*
	 * Tag object? Look what it points to..
	 */</comment>
	<while pos:line="13" pos:column="9">while <condition pos:line="13" pos:column="15">(<expr><name><name pos:line="13" pos:column="16">object<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">type<pos:position pos:line="13" pos:column="28"/></name></name> <operator pos:line="13" pos:column="29">==<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">OBJ_TAG<pos:position pos:line="13" pos:column="39"/></name></expr>)<pos:position pos:line="13" pos:column="40"/></condition> <block pos:line="13" pos:column="41">{
		<decl_stmt><decl><type><name><name pos:line="14" pos:column="17">struct<pos:position pos:line="14" pos:column="23"/></name> <name pos:line="14" pos:column="24">tag<pos:position pos:line="14" pos:column="27"/></name></name> <modifier pos:line="14" pos:column="28">*<pos:position pos:line="14" pos:column="29"/></modifier></type><name pos:line="14" pos:column="29">tag<pos:position pos:line="14" pos:column="32"/></name> <init pos:line="14" pos:column="33">= <expr><operator pos:line="14" pos:column="35">(<pos:position pos:line="14" pos:column="36"/></operator>struct <name pos:line="14" pos:column="43">tag<pos:position pos:line="14" pos:column="46"/></name> <operator pos:line="14" pos:column="47">*<pos:position pos:line="14" pos:column="48"/></operator><operator pos:line="14" pos:column="48">)<pos:position pos:line="14" pos:column="49"/></operator> <name pos:line="14" pos:column="50">object<pos:position pos:line="14" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="57"/></decl_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name><name pos:line="15" pos:column="21">revs<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">tag_objects<pos:position pos:line="15" pos:column="38"/></name></name> <operator pos:line="15" pos:column="39">&amp;&amp;<pos:position pos:line="15" pos:column="49"/></operator> <operator pos:line="15" pos:column="42">!<pos:position pos:line="15" pos:column="43"/></operator><operator pos:line="15" pos:column="43">(<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="44">flags<pos:position pos:line="15" pos:column="49"/></name> <operator pos:line="15" pos:column="50">&amp;<pos:position pos:line="15" pos:column="55"/></operator> <name pos:line="15" pos:column="52">UNINTERESTING<pos:position pos:line="15" pos:column="65"/></name><operator pos:line="15" pos:column="65">)<pos:position pos:line="15" pos:column="66"/></operator></expr>)<pos:position pos:line="15" pos:column="67"/></condition><then pos:line="15" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">add_pending_object<pos:position pos:line="16" pos:column="43"/></name><argument_list pos:line="16" pos:column="43">(<argument><expr><name pos:line="16" pos:column="44">revs<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="50">object<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="58">tag<pos:position pos:line="16" pos:column="61"/></name><operator pos:line="16" pos:column="61">-&gt;<pos:position pos:line="16" pos:column="66"/></operator><name pos:line="16" pos:column="63">tag<pos:position pos:line="16" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="68"/></expr_stmt></block></then></if>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><name><name pos:line="17" pos:column="22">tag<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">tagged<pos:position pos:line="17" pos:column="33"/></name></name></expr>)<pos:position pos:line="17" pos:column="34"/></condition><then pos:line="17" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="25">die<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><literal type="string" pos:line="18" pos:column="29">"bad tag"<pos:position pos:line="18" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="19" pos:column="17">object<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <call><name pos:line="19" pos:column="26">parse_object<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><name><name pos:line="19" pos:column="39">tag<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">tagged<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">-&gt;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="52">sha1<pos:position pos:line="19" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">object<pos:position pos:line="20" pos:column="28"/></name></expr>)<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29"> <block pos:line="20" pos:column="30">{
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><name pos:line="21" pos:column="29">flags<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">&amp;<pos:position pos:line="21" pos:column="40"/></operator> <name pos:line="21" pos:column="37">UNINTERESTING<pos:position pos:line="21" pos:column="50"/></name></expr>)<pos:position pos:line="21" pos:column="51"/></condition><then pos:line="21" pos:column="51">
				<block type="pseudo"><return pos:line="22" pos:column="33">return <expr><name pos:line="22" pos:column="40">NULL<pos:position pos:line="22" pos:column="44"/></name></expr>;<pos:position pos:line="22" pos:column="45"/></return></block></then></if>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">die<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><literal type="string" pos:line="23" pos:column="29">"bad object %s"<pos:position pos:line="23" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="46">sha1_to_hex<pos:position pos:line="23" pos:column="57"/></name><argument_list pos:line="23" pos:column="57">(<argument><expr><name><name pos:line="23" pos:column="58">tag<pos:position pos:line="23" pos:column="61"/></name><operator pos:line="23" pos:column="61">-&gt;<pos:position pos:line="23" pos:column="66"/></operator><name pos:line="23" pos:column="63">tagged<pos:position pos:line="23" pos:column="69"/></name><operator pos:line="23" pos:column="69">-&gt;<pos:position pos:line="23" pos:column="74"/></operator><name pos:line="23" pos:column="71">sha1<pos:position pos:line="23" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="78"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">object<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">flags<pos:position pos:line="25" pos:column="30"/></name></name> <operator pos:line="25" pos:column="31">|=<pos:position pos:line="25" pos:column="33"/></operator> <name pos:line="25" pos:column="34">flags<pos:position pos:line="25" pos:column="39"/></name></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
		<comment type="block" pos:line="26" pos:column="17">/*
		 * We'll handle the tagged object by looping or dropping
		 * through to the non-tag handlers below. Do not
		 * propagate path data from the tag's pending entry.
		 */</comment>
		<expr_stmt><expr><name pos:line="31" pos:column="17">path<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <name pos:line="31" pos:column="24">NULL<pos:position pos:line="31" pos:column="28"/></name></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="32" pos:column="17">mode<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <literal type="number" pos:line="32" pos:column="24">0<pos:position pos:line="32" pos:column="25"/></literal></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></while>

	<comment type="block" pos:line="35" pos:column="9">/*
	 * Commit object? Just return it, we'll do all the complex
	 * reachability crud.
	 */</comment>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name><name pos:line="39" pos:column="13">object<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">-&gt;<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="21">type<pos:position pos:line="39" pos:column="25"/></name></name> <operator pos:line="39" pos:column="26">==<pos:position pos:line="39" pos:column="28"/></operator> <name pos:line="39" pos:column="29">OBJ_COMMIT<pos:position pos:line="39" pos:column="39"/></name></expr>)<pos:position pos:line="39" pos:column="40"/></condition><then pos:line="39" pos:column="40"> <block pos:line="39" pos:column="41">{
		<decl_stmt><decl><type><name><name pos:line="40" pos:column="17">struct<pos:position pos:line="40" pos:column="23"/></name> <name pos:line="40" pos:column="24">commit<pos:position pos:line="40" pos:column="30"/></name></name> <modifier pos:line="40" pos:column="31">*<pos:position pos:line="40" pos:column="32"/></modifier></type><name pos:line="40" pos:column="32">commit<pos:position pos:line="40" pos:column="38"/></name> <init pos:line="40" pos:column="39">= <expr><operator pos:line="40" pos:column="41">(<pos:position pos:line="40" pos:column="42"/></operator>struct <name pos:line="40" pos:column="49">commit<pos:position pos:line="40" pos:column="55"/></name> <operator pos:line="40" pos:column="56">*<pos:position pos:line="40" pos:column="57"/></operator><operator pos:line="40" pos:column="57">)<pos:position pos:line="40" pos:column="58"/></operator><name pos:line="40" pos:column="58">object<pos:position pos:line="40" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="40" pos:column="65"/></decl_stmt>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><call><name pos:line="41" pos:column="21">parse_commit<pos:position pos:line="41" pos:column="33"/></name><argument_list pos:line="41" pos:column="33">(<argument><expr><name pos:line="41" pos:column="34">commit<pos:position pos:line="41" pos:column="40"/></name></expr></argument>)<pos:position pos:line="41" pos:column="41"/></argument_list></call> <operator pos:line="41" pos:column="42">&lt;<pos:position pos:line="41" pos:column="46"/></operator> <literal type="number" pos:line="41" pos:column="44">0<pos:position pos:line="41" pos:column="45"/></literal></expr>)<pos:position pos:line="41" pos:column="46"/></condition><then pos:line="41" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="25">die<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><literal type="string" pos:line="42" pos:column="29">"unable to parse commit %s"<pos:position pos:line="42" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="58">name<pos:position pos:line="42" pos:column="62"/></name></expr></argument>)<pos:position pos:line="42" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="64"/></expr_stmt></block></then></if>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">flags<pos:position pos:line="43" pos:column="26"/></name> <operator pos:line="43" pos:column="27">&amp;<pos:position pos:line="43" pos:column="32"/></operator> <name pos:line="43" pos:column="29">UNINTERESTING<pos:position pos:line="43" pos:column="42"/></name></expr>)<pos:position pos:line="43" pos:column="43"/></condition><then pos:line="43" pos:column="43"> <block pos:line="43" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="44" pos:column="25">mark_parents_uninteresting<pos:position pos:line="44" pos:column="51"/></name><argument_list pos:line="44" pos:column="51">(<argument><expr><name pos:line="44" pos:column="52">commit<pos:position pos:line="44" pos:column="58"/></name></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="45" pos:column="25">revs<pos:position pos:line="45" pos:column="29"/></name><operator pos:line="45" pos:column="29">-&gt;<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="31">limited<pos:position pos:line="45" pos:column="38"/></name></name> <operator pos:line="45" pos:column="39">=<pos:position pos:line="45" pos:column="40"/></operator> <literal type="number" pos:line="45" pos:column="41">1<pos:position pos:line="45" pos:column="42"/></literal></expr>;<pos:position pos:line="45" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="46" pos:column="18"/></block></then></if>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name><name pos:line="47" pos:column="21">revs<pos:position pos:line="47" pos:column="25"/></name><operator pos:line="47" pos:column="25">-&gt;<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="27">show_source<pos:position pos:line="47" pos:column="38"/></name></name> <operator pos:line="47" pos:column="39">&amp;&amp;<pos:position pos:line="47" pos:column="49"/></operator> <operator pos:line="47" pos:column="42">!<pos:position pos:line="47" pos:column="43"/></operator><name><name pos:line="47" pos:column="43">commit<pos:position pos:line="47" pos:column="49"/></name><operator pos:line="47" pos:column="49">-&gt;<pos:position pos:line="47" pos:column="54"/></operator><name pos:line="47" pos:column="51">util<pos:position pos:line="47" pos:column="55"/></name></name></expr>)<pos:position pos:line="47" pos:column="56"/></condition><then pos:line="47" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="48" pos:column="25">commit<pos:position pos:line="48" pos:column="31"/></name><operator pos:line="48" pos:column="31">-&gt;<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="33">util<pos:position pos:line="48" pos:column="37"/></name></name> <operator pos:line="48" pos:column="38">=<pos:position pos:line="48" pos:column="39"/></operator> <call><name pos:line="48" pos:column="40">xstrdup<pos:position pos:line="48" pos:column="47"/></name><argument_list pos:line="48" pos:column="47">(<argument><expr><name pos:line="48" pos:column="48">name<pos:position pos:line="48" pos:column="52"/></name></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="54"/></expr_stmt></block></then></if>
		<return pos:line="49" pos:column="17">return <expr><name pos:line="49" pos:column="24">commit<pos:position pos:line="49" pos:column="30"/></name></expr>;<pos:position pos:line="49" pos:column="31"/></return>
	}<pos:position pos:line="50" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="52" pos:column="9">/*
	 * Tree object? Either mark it uninteresting, or add it
	 * to the list of objects to look at later..
	 */</comment>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">object<pos:position pos:line="56" pos:column="19"/></name><operator pos:line="56" pos:column="19">-&gt;<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="21">type<pos:position pos:line="56" pos:column="25"/></name></name> <operator pos:line="56" pos:column="26">==<pos:position pos:line="56" pos:column="28"/></operator> <name pos:line="56" pos:column="29">OBJ_TREE<pos:position pos:line="56" pos:column="37"/></name></expr>)<pos:position pos:line="56" pos:column="38"/></condition><then pos:line="56" pos:column="38"> <block pos:line="56" pos:column="39">{
		<decl_stmt><decl><type><name><name pos:line="57" pos:column="17">struct<pos:position pos:line="57" pos:column="23"/></name> <name pos:line="57" pos:column="24">tree<pos:position pos:line="57" pos:column="28"/></name></name> <modifier pos:line="57" pos:column="29">*<pos:position pos:line="57" pos:column="30"/></modifier></type><name pos:line="57" pos:column="30">tree<pos:position pos:line="57" pos:column="34"/></name> <init pos:line="57" pos:column="35">= <expr><operator pos:line="57" pos:column="37">(<pos:position pos:line="57" pos:column="38"/></operator>struct <name pos:line="57" pos:column="45">tree<pos:position pos:line="57" pos:column="49"/></name> <operator pos:line="57" pos:column="50">*<pos:position pos:line="57" pos:column="51"/></operator><operator pos:line="57" pos:column="51">)<pos:position pos:line="57" pos:column="52"/></operator><name pos:line="57" pos:column="52">object<pos:position pos:line="57" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="57" pos:column="59"/></decl_stmt>
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><operator pos:line="58" pos:column="21">!<pos:position pos:line="58" pos:column="22"/></operator><name><name pos:line="58" pos:column="22">revs<pos:position pos:line="58" pos:column="26"/></name><operator pos:line="58" pos:column="26">-&gt;<pos:position pos:line="58" pos:column="31"/></operator><name pos:line="58" pos:column="28">tree_objects<pos:position pos:line="58" pos:column="40"/></name></name></expr>)<pos:position pos:line="58" pos:column="41"/></condition><then pos:line="58" pos:column="41">
			<block type="pseudo"><return pos:line="59" pos:column="25">return <expr><name pos:line="59" pos:column="32">NULL<pos:position pos:line="59" pos:column="36"/></name></expr>;<pos:position pos:line="59" pos:column="37"/></return></block></then></if>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name pos:line="60" pos:column="21">flags<pos:position pos:line="60" pos:column="26"/></name> <operator pos:line="60" pos:column="27">&amp;<pos:position pos:line="60" pos:column="32"/></operator> <name pos:line="60" pos:column="29">UNINTERESTING<pos:position pos:line="60" pos:column="42"/></name></expr>)<pos:position pos:line="60" pos:column="43"/></condition><then pos:line="60" pos:column="43"> <block pos:line="60" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="61" pos:column="25">mark_tree_contents_uninteresting<pos:position pos:line="61" pos:column="57"/></name><argument_list pos:line="61" pos:column="57">(<argument><expr><name pos:line="61" pos:column="58">tree<pos:position pos:line="61" pos:column="62"/></name></expr></argument>)<pos:position pos:line="61" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="64"/></expr_stmt>
			<return pos:line="62" pos:column="25">return <expr><name pos:line="62" pos:column="32">NULL<pos:position pos:line="62" pos:column="36"/></name></expr>;<pos:position pos:line="62" pos:column="37"/></return>
		}<pos:position pos:line="63" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="64" pos:column="17">add_pending_object_with_path<pos:position pos:line="64" pos:column="45"/></name><argument_list pos:line="64" pos:column="45">(<argument><expr><name pos:line="64" pos:column="46">revs<pos:position pos:line="64" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="52">object<pos:position pos:line="64" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="60">name<pos:position pos:line="64" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="66">mode<pos:position pos:line="64" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="72">path<pos:position pos:line="64" pos:column="76"/></name></expr></argument>)<pos:position pos:line="64" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="78"/></expr_stmt>
		<return pos:line="65" pos:column="17">return <expr><name pos:line="65" pos:column="24">NULL<pos:position pos:line="65" pos:column="28"/></name></expr>;<pos:position pos:line="65" pos:column="29"/></return>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="68" pos:column="9">/*
	 * Blob object? You know the drill by now..
	 */</comment>
	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name><name pos:line="71" pos:column="13">object<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">-&gt;<pos:position pos:line="71" pos:column="24"/></operator><name pos:line="71" pos:column="21">type<pos:position pos:line="71" pos:column="25"/></name></name> <operator pos:line="71" pos:column="26">==<pos:position pos:line="71" pos:column="28"/></operator> <name pos:line="71" pos:column="29">OBJ_BLOB<pos:position pos:line="71" pos:column="37"/></name></expr>)<pos:position pos:line="71" pos:column="38"/></condition><then pos:line="71" pos:column="38"> <block pos:line="71" pos:column="39">{
		<if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><operator pos:line="72" pos:column="21">!<pos:position pos:line="72" pos:column="22"/></operator><name><name pos:line="72" pos:column="22">revs<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">-&gt;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="28">blob_objects<pos:position pos:line="72" pos:column="40"/></name></name></expr>)<pos:position pos:line="72" pos:column="41"/></condition><then pos:line="72" pos:column="41">
			<block type="pseudo"><return pos:line="73" pos:column="25">return <expr><name pos:line="73" pos:column="32">NULL<pos:position pos:line="73" pos:column="36"/></name></expr>;<pos:position pos:line="73" pos:column="37"/></return></block></then></if>
		<if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><name pos:line="74" pos:column="21">flags<pos:position pos:line="74" pos:column="26"/></name> <operator pos:line="74" pos:column="27">&amp;<pos:position pos:line="74" pos:column="32"/></operator> <name pos:line="74" pos:column="29">UNINTERESTING<pos:position pos:line="74" pos:column="42"/></name></expr>)<pos:position pos:line="74" pos:column="43"/></condition><then pos:line="74" pos:column="43">
			<block type="pseudo"><return pos:line="75" pos:column="25">return <expr><name pos:line="75" pos:column="32">NULL<pos:position pos:line="75" pos:column="36"/></name></expr>;<pos:position pos:line="75" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="76" pos:column="17">add_pending_object_with_path<pos:position pos:line="76" pos:column="45"/></name><argument_list pos:line="76" pos:column="45">(<argument><expr><name pos:line="76" pos:column="46">revs<pos:position pos:line="76" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="52">object<pos:position pos:line="76" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="60">name<pos:position pos:line="76" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="66">mode<pos:position pos:line="76" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="72">path<pos:position pos:line="76" pos:column="76"/></name></expr></argument>)<pos:position pos:line="76" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="78"/></expr_stmt>
		<return pos:line="77" pos:column="17">return <expr><name pos:line="77" pos:column="24">NULL<pos:position pos:line="77" pos:column="28"/></name></expr>;<pos:position pos:line="77" pos:column="29"/></return>
	}<pos:position pos:line="78" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="79" pos:column="9">die<pos:position pos:line="79" pos:column="12"/></name><argument_list pos:line="79" pos:column="12">(<argument><expr><literal type="string" pos:line="79" pos:column="13">"%s is unknown object"<pos:position pos:line="79" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="37">name<pos:position pos:line="79" pos:column="41"/></name></expr></argument>)<pos:position pos:line="79" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="43"/></expr_stmt>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

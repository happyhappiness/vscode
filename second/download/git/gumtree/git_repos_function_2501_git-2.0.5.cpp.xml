<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2501_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_config<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">unsigned<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">colopts<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">value<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">sep<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><literal type="string" pos:line="3" pos:column="27">" ,"<pos:position pos:line="3" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">group_set<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><operator pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">value<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition> <block pos:line="6" pos:column="24">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">len<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><call><name pos:line="7" pos:column="27">strcspn<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><name pos:line="7" pos:column="35">value<pos:position pos:line="7" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="42">sep<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="47"/></decl_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">len<pos:position pos:line="8" pos:column="24"/></name></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25"> <block pos:line="8" pos:column="26">{
			<if pos:line="9" pos:column="25">if <condition pos:line="9" pos:column="28">(<expr><call><name pos:line="9" pos:column="29">parse_option<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name pos:line="9" pos:column="42">value<pos:position pos:line="9" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="49">len<pos:position pos:line="9" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="54">colopts<pos:position pos:line="9" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="63">&amp;<pos:position pos:line="9" pos:column="68"/></operator><name pos:line="9" pos:column="64">group_set<pos:position pos:line="9" pos:column="73"/></name></expr></argument>)<pos:position pos:line="9" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="75"/></condition><then pos:line="9" pos:column="75">
				<block type="pseudo"><return pos:line="10" pos:column="33">return <expr><operator pos:line="10" pos:column="40">-<pos:position pos:line="10" pos:column="41"/></operator><literal type="number" pos:line="10" pos:column="41">1<pos:position pos:line="10" pos:column="42"/></literal></expr>;<pos:position pos:line="10" pos:column="43"/></return></block></then></if>

			<expr_stmt><expr><name pos:line="12" pos:column="25">value<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">+=<pos:position pos:line="12" pos:column="33"/></operator> <name pos:line="12" pos:column="34">len<pos:position pos:line="12" pos:column="37"/></name></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="13" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="14" pos:column="17">value<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">+=<pos:position pos:line="14" pos:column="25"/></operator> <call><name pos:line="14" pos:column="26">strspn<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">value<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">sep<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></while>
	<comment type="block" pos:line="16" pos:column="9">/*
	 * If none of "always", "never", and "auto" is specified, then setting
	 * layout implies "always".
	 *
	 * Current value in COL_ENABLE_MASK is disregarded. This means if
	 * you set column.ui = auto and pass --column=row, then "auto"
	 * will become "always".
	 */</comment>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">group_set<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">&amp;<pos:position pos:line="24" pos:column="29"/></operator> <name pos:line="24" pos:column="26">LAYOUT_SET<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">)<pos:position pos:line="24" pos:column="37"/></operator> <operator pos:line="24" pos:column="38">&amp;&amp;<pos:position pos:line="24" pos:column="48"/></operator> <operator pos:line="24" pos:column="41">!<pos:position pos:line="24" pos:column="42"/></operator><operator pos:line="24" pos:column="42">(<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="43">group_set<pos:position pos:line="24" pos:column="52"/></name> <operator pos:line="24" pos:column="53">&amp;<pos:position pos:line="24" pos:column="58"/></operator> <name pos:line="24" pos:column="55">ENABLE_SET<pos:position pos:line="24" pos:column="65"/></name><operator pos:line="24" pos:column="65">)<pos:position pos:line="24" pos:column="66"/></operator></expr>)<pos:position pos:line="24" pos:column="67"/></condition><then pos:line="24" pos:column="67">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="25" pos:column="17">*<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">colopts<pos:position pos:line="25" pos:column="25"/></name> <operator pos:line="25" pos:column="26">=<pos:position pos:line="25" pos:column="27"/></operator> <operator pos:line="25" pos:column="28">(<pos:position pos:line="25" pos:column="29"/></operator><operator pos:line="25" pos:column="29">*<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">colopts<pos:position pos:line="25" pos:column="37"/></name> <operator pos:line="25" pos:column="38">&amp;<pos:position pos:line="25" pos:column="43"/></operator> <operator pos:line="25" pos:column="40">~<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="41">COL_ENABLE_MASK<pos:position pos:line="25" pos:column="56"/></name><operator pos:line="25" pos:column="56">)<pos:position pos:line="25" pos:column="57"/></operator> <operator pos:line="25" pos:column="58">|<pos:position pos:line="25" pos:column="59"/></operator> <name pos:line="25" pos:column="60">COL_ENABLED<pos:position pos:line="25" pos:column="71"/></name></expr>;<pos:position pos:line="25" pos:column="72"/></expr_stmt></block></then></if>
	<return pos:line="26" pos:column="9">return <expr><literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

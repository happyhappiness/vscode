<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6961_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">check_dst_limits_calc_pos<pos:position pos:line="3" pos:column="26"/></name> <parameter_list pos:line="3" pos:column="27">(<parameter><decl><type><specifier pos:line="3" pos:column="28">const<pos:position pos:line="3" pos:column="33"/></specifier> <name pos:line="3" pos:column="34">re_match_context_t<pos:position pos:line="3" pos:column="52"/></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">mctx<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="60">int<pos:position pos:line="3" pos:column="63"/></name></type> <name pos:line="3" pos:column="64">limit<pos:position pos:line="3" pos:column="69"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="4" pos:column="28">int<pos:position pos:line="4" pos:column="31"/></name></type> <name pos:line="4" pos:column="32">subexp_idx<pos:position pos:line="4" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="44">int<pos:position pos:line="4" pos:column="47"/></name></type> <name pos:line="4" pos:column="48">from_node<pos:position pos:line="4" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="59">int<pos:position pos:line="4" pos:column="62"/></name></type> <name pos:line="4" pos:column="63">str_idx<pos:position pos:line="4" pos:column="70"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="5" pos:column="28">int<pos:position pos:line="5" pos:column="31"/></name></type> <name pos:line="5" pos:column="32">bkref_idx<pos:position pos:line="5" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="42"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">re_backref_cache_entry<pos:position pos:line="7" pos:column="32"/></name></name> <modifier pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></modifier></type><name pos:line="7" pos:column="34">lim<pos:position pos:line="7" pos:column="37"/></name> <init pos:line="7" pos:column="38">= <expr><name><name pos:line="7" pos:column="40">mctx<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">bkref_ents<pos:position pos:line="7" pos:column="56"/></name></name> <operator pos:line="7" pos:column="57">+<pos:position pos:line="7" pos:column="58"/></operator> <name pos:line="7" pos:column="59">limit<pos:position pos:line="7" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="65"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">boundaries<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* If we are outside the range of the subexpression, return -1 or 1.  */</comment>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">str_idx<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">&lt;<pos:position pos:line="11" pos:column="19"/></operator> <name><name pos:line="11" pos:column="17">lim<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">subexp_from<pos:position pos:line="11" pos:column="33"/></name></name></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name><name pos:line="14" pos:column="7">lim<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">subexp_to<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">&lt;<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="24">str_idx<pos:position pos:line="14" pos:column="31"/></name></expr>)<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><literal type="number" pos:line="15" pos:column="12">1<pos:position pos:line="15" pos:column="13"/></literal></expr>;<pos:position pos:line="15" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="17" pos:column="3">/* If we are within the subexpression, return 0.  */</comment>
  <expr_stmt><expr><name pos:line="18" pos:column="3">boundaries<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <operator pos:line="18" pos:column="16">(<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">str_idx<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">==<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="28">lim<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">subexp_from<pos:position pos:line="18" pos:column="44"/></name></name><operator pos:line="18" pos:column="44">)<pos:position pos:line="18" pos:column="45"/></operator></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">boundaries<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">|=<pos:position pos:line="19" pos:column="16"/></operator> <operator pos:line="19" pos:column="17">(<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">str_idx<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">==<pos:position pos:line="19" pos:column="28"/></operator> <name><name pos:line="19" pos:column="29">lim<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">subexp_to<pos:position pos:line="19" pos:column="43"/></name></name><operator pos:line="19" pos:column="43">)<pos:position pos:line="19" pos:column="44"/></operator> <operator pos:line="19" pos:column="45">&lt;&lt;<pos:position pos:line="19" pos:column="53"/></operator> <literal type="number" pos:line="19" pos:column="48">1<pos:position pos:line="19" pos:column="49"/></literal></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">boundaries<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">==<pos:position pos:line="20" pos:column="20"/></operator> <literal type="number" pos:line="20" pos:column="21">0<pos:position pos:line="20" pos:column="22"/></literal></expr>)<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23">
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><literal type="number" pos:line="21" pos:column="12">0<pos:position pos:line="21" pos:column="13"/></literal></expr>;<pos:position pos:line="21" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="23" pos:column="3">/* Else, examine epsilon closure.  */</comment>
  <return pos:line="24" pos:column="3">return <expr><call><name pos:line="24" pos:column="10">check_dst_limits_calc_pos_1<pos:position pos:line="24" pos:column="37"/></name> <argument_list pos:line="24" pos:column="38">(<argument><expr><name pos:line="24" pos:column="39">mctx<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="45">boundaries<pos:position pos:line="24" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="57">subexp_idx<pos:position pos:line="24" pos:column="67"/></name></expr></argument>,
				      <argument><expr><name pos:line="25" pos:column="39">from_node<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">bkref_idx<pos:position pos:line="25" pos:column="59"/></name></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="61"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

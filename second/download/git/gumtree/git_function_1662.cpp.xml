<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1662.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ref_transaction_commit<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">ref_transaction<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">transaction<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
			   <parameter><decl><type><name><name pos:line="2" pos:column="28">struct<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">strbuf<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">err<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">delnum<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><literal type="number" pos:line="4" pos:column="31">0<pos:position pos:line="4" pos:column="32"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="34">i<pos:position pos:line="4" pos:column="35"/></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier><modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">delnames<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">n<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><name><name pos:line="6" pos:column="17">transaction<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">nr<pos:position pos:line="6" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">ref_update<pos:position pos:line="7" pos:column="26"/></name></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier><modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">updates<pos:position pos:line="7" pos:column="36"/></name> <init pos:line="7" pos:column="37">= <expr><name><name pos:line="7" pos:column="39">transaction<pos:position pos:line="7" pos:column="50"/></name><operator pos:line="7" pos:column="50">-&gt;<pos:position pos:line="7" pos:column="55"/></operator><name pos:line="7" pos:column="52">updates<pos:position pos:line="7" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="60"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">assert<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">err<pos:position pos:line="9" pos:column="19"/></name></expr></argument>)<pos:position pos:line="9" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">transaction<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">-&gt;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="26">state<pos:position pos:line="11" pos:column="31"/></name></name> <operator pos:line="11" pos:column="32">!=<pos:position pos:line="11" pos:column="34"/></operator> <name pos:line="11" pos:column="35">REF_TRANSACTION_OPEN<pos:position pos:line="11" pos:column="55"/></name></expr>)<pos:position pos:line="11" pos:column="56"/></condition><then pos:line="11" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">die<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><literal type="string" pos:line="12" pos:column="21">"BUG: commit called for transaction that is not open"<pos:position pos:line="12" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="76"/></expr_stmt></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">n<pos:position pos:line="14" pos:column="15"/></name></expr>)<pos:position pos:line="14" pos:column="16"/></condition><then pos:line="14" pos:column="16"> <block pos:line="14" pos:column="17">{
		<expr_stmt><expr><name><name pos:line="15" pos:column="17">transaction<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">-&gt;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="30">state<pos:position pos:line="15" pos:column="35"/></name></name> <operator pos:line="15" pos:column="36">=<pos:position pos:line="15" pos:column="37"/></operator> <name pos:line="15" pos:column="38">REF_TRANSACTION_CLOSED<pos:position pos:line="15" pos:column="60"/></name></expr>;<pos:position pos:line="15" pos:column="61"/></expr_stmt>
		<return pos:line="16" pos:column="17">return <expr><literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="19" pos:column="9">/* Allocate work space */</comment>
	<expr_stmt><expr><name pos:line="20" pos:column="9">delnames<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <call><name pos:line="20" pos:column="20">xmalloc<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><sizeof pos:line="20" pos:column="28">sizeof<argument_list pos:line="20" pos:column="34">(<argument><expr><operator pos:line="20" pos:column="35">*<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">delnames<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></sizeof> <operator pos:line="20" pos:column="46">*<pos:position pos:line="20" pos:column="47"/></operator> <name pos:line="20" pos:column="48">n<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>

	<comment type="block" pos:line="22" pos:column="9">/* Copy, sort, and reject duplicate refs */</comment>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">qsort<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><name pos:line="23" pos:column="15">updates<pos:position pos:line="23" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="24">n<pos:position pos:line="23" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="27">sizeof<argument_list pos:line="23" pos:column="33">(<argument><expr><operator pos:line="23" pos:column="34">*<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="35">updates<pos:position pos:line="23" pos:column="42"/></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">ref_update_compare<pos:position pos:line="23" pos:column="63"/></name></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="65"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">ref_update_reject_duplicates<pos:position pos:line="24" pos:column="41"/></name><argument_list pos:line="24" pos:column="41">(<argument><expr><name pos:line="24" pos:column="42">updates<pos:position pos:line="24" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">n<pos:position pos:line="24" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="54">err<pos:position pos:line="24" pos:column="57"/></name></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="59"/></condition><then pos:line="24" pos:column="59"> <block pos:line="24" pos:column="60">{
		<expr_stmt><expr><name pos:line="25" pos:column="17">ret<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">TRANSACTION_GENERIC_ERROR<pos:position pos:line="25" pos:column="48"/></name></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>
		<goto pos:line="26" pos:column="17">goto <name pos:line="26" pos:column="22">cleanup<pos:position pos:line="26" pos:column="29"/></name>;<pos:position pos:line="26" pos:column="30"/></goto>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="29" pos:column="9">/* Acquire all locks while verifying old values */</comment>
	<for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">i<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></init> <condition><expr><name pos:line="30" pos:column="21">i<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">&lt;<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="25">n<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></condition> <incr><expr><name pos:line="30" pos:column="28">i<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">++<pos:position pos:line="30" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="32"/></control> <block pos:line="30" pos:column="33">{
		<decl_stmt><decl><type><name><name pos:line="31" pos:column="17">struct<pos:position pos:line="31" pos:column="23"/></name> <name pos:line="31" pos:column="24">ref_update<pos:position pos:line="31" pos:column="34"/></name></name> <modifier pos:line="31" pos:column="35">*<pos:position pos:line="31" pos:column="36"/></modifier></type><name pos:line="31" pos:column="36">update<pos:position pos:line="31" pos:column="42"/></name> <init pos:line="31" pos:column="43">= <expr><name><name pos:line="31" pos:column="45">updates<pos:position pos:line="31" pos:column="52"/></name><index pos:line="31" pos:column="52">[<expr><name pos:line="31" pos:column="53">i<pos:position pos:line="31" pos:column="54"/></name></expr>]<pos:position pos:line="31" pos:column="55"/></index></name></expr></init></decl>;<pos:position pos:line="31" pos:column="56"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="32" pos:column="17">int<pos:position pos:line="32" pos:column="20"/></name></type> <name pos:line="32" pos:column="21">flags<pos:position pos:line="32" pos:column="26"/></name> <init pos:line="32" pos:column="27">= <expr><name><name pos:line="32" pos:column="29">update<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">flags<pos:position pos:line="32" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="32" pos:column="43"/></decl_stmt>

		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><call><name pos:line="34" pos:column="21">is_null_sha1<pos:position pos:line="34" pos:column="33"/></name><argument_list pos:line="34" pos:column="33">(<argument><expr><name><name pos:line="34" pos:column="34">update<pos:position pos:line="34" pos:column="40"/></name><operator pos:line="34" pos:column="40">-&gt;<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="42">new_sha1<pos:position pos:line="34" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="52"/></condition><then pos:line="34" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="25">flags<pos:position pos:line="35" pos:column="30"/></name> <operator pos:line="35" pos:column="31">|=<pos:position pos:line="35" pos:column="33"/></operator> <name pos:line="35" pos:column="34">REF_DELETING<pos:position pos:line="35" pos:column="46"/></name></expr>;<pos:position pos:line="35" pos:column="47"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="36" pos:column="17">update<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">lock<pos:position pos:line="36" pos:column="29"/></name></name> <operator pos:line="36" pos:column="30">=<pos:position pos:line="36" pos:column="31"/></operator> <call><name pos:line="36" pos:column="32">lock_ref_sha1_basic<pos:position pos:line="36" pos:column="51"/></name><argument_list pos:line="36" pos:column="51">(<argument><expr><name><name pos:line="36" pos:column="52">update<pos:position pos:line="36" pos:column="58"/></name><operator pos:line="36" pos:column="58">-&gt;<pos:position pos:line="36" pos:column="63"/></operator><name pos:line="36" pos:column="60">refname<pos:position pos:line="36" pos:column="67"/></name></name></expr></argument>,
						   <argument><expr><operator pos:line="37" pos:column="52">(<pos:position pos:line="37" pos:column="53"/></operator><ternary><condition><expr><name><name pos:line="37" pos:column="53">update<pos:position pos:line="37" pos:column="59"/></name><operator pos:line="37" pos:column="59">-&gt;<pos:position pos:line="37" pos:column="64"/></operator><name pos:line="37" pos:column="61">have_old<pos:position pos:line="37" pos:column="69"/></name></name></expr> ?<pos:position pos:line="37" pos:column="71"/></condition><then pos:line="37" pos:column="71">
						    <expr><name><name pos:line="38" pos:column="53">update<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">-&gt;<pos:position pos:line="38" pos:column="64"/></operator><name pos:line="38" pos:column="61">old_sha1<pos:position pos:line="38" pos:column="69"/></name></name></expr> <pos:position pos:line="38" pos:column="70"/></then><else pos:line="38" pos:column="70">:
						    <expr><name pos:line="39" pos:column="53">NULL<pos:position pos:line="39" pos:column="57"/></name></expr></else></ternary><operator pos:line="39" pos:column="57">)<pos:position pos:line="39" pos:column="58"/></operator></expr></argument>,
						   <argument><expr><name pos:line="40" pos:column="52">NULL<pos:position pos:line="40" pos:column="56"/></name></expr></argument>,
						   <argument><expr><name pos:line="41" pos:column="52">flags<pos:position pos:line="41" pos:column="57"/></name></expr></argument>,
						   <argument><expr><operator pos:line="42" pos:column="52">&amp;<pos:position pos:line="42" pos:column="57"/></operator><name><name pos:line="42" pos:column="53">update<pos:position pos:line="42" pos:column="59"/></name><operator pos:line="42" pos:column="59">-&gt;<pos:position pos:line="42" pos:column="64"/></operator><name pos:line="42" pos:column="61">type<pos:position pos:line="42" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="67"/></expr_stmt>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><operator pos:line="43" pos:column="21">!<pos:position pos:line="43" pos:column="22"/></operator><name><name pos:line="43" pos:column="22">update<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">-&gt;<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="30">lock<pos:position pos:line="43" pos:column="34"/></name></name></expr>)<pos:position pos:line="43" pos:column="35"/></condition><then pos:line="43" pos:column="35"> <block pos:line="43" pos:column="36">{
			<expr_stmt><expr><name pos:line="44" pos:column="25">ret<pos:position pos:line="44" pos:column="28"/></name> <operator pos:line="44" pos:column="29">=<pos:position pos:line="44" pos:column="30"/></operator> <ternary><condition><expr><operator pos:line="44" pos:column="31">(<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="32">errno<pos:position pos:line="44" pos:column="37"/></name> <operator pos:line="44" pos:column="38">==<pos:position pos:line="44" pos:column="40"/></operator> <name pos:line="44" pos:column="41">ENOTDIR<pos:position pos:line="44" pos:column="48"/></name><operator pos:line="44" pos:column="48">)<pos:position pos:line="44" pos:column="49"/></operator></expr>
				?<pos:position pos:line="45" pos:column="34"/></condition><then pos:line="45" pos:column="34"> <expr><name pos:line="45" pos:column="35">TRANSACTION_NAME_CONFLICT<pos:position pos:line="45" pos:column="60"/></name></expr>
				<pos:position pos:line="46" pos:column="5"/></then><else pos:line="46" pos:column="33">: <expr><name pos:line="46" pos:column="35">TRANSACTION_GENERIC_ERROR<pos:position pos:line="46" pos:column="60"/></name></expr></else></ternary></expr>;<pos:position pos:line="46" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="47" pos:column="25">strbuf_addf<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><name pos:line="47" pos:column="37">err<pos:position pos:line="47" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="42">"Cannot lock the ref '%s'."<pos:position pos:line="47" pos:column="69"/></literal></expr></argument>,
				    <argument><expr><name><name pos:line="48" pos:column="37">update<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">-&gt;<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="45">refname<pos:position pos:line="48" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="54"/></expr_stmt>
			<goto pos:line="49" pos:column="25">goto <name pos:line="49" pos:column="30">cleanup<pos:position pos:line="49" pos:column="37"/></name>;<pos:position pos:line="49" pos:column="38"/></goto>
		}<pos:position pos:line="50" pos:column="18"/></block></then></if>
	}<pos:position pos:line="51" pos:column="10"/></block></for>

	<comment type="block" pos:line="53" pos:column="9">/* Perform updates first so live commits remain referenced */</comment>
	<for pos:line="54" pos:column="9">for <control pos:line="54" pos:column="13">(<init><expr><name pos:line="54" pos:column="14">i<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <literal type="number" pos:line="54" pos:column="18">0<pos:position pos:line="54" pos:column="19"/></literal></expr>;<pos:position pos:line="54" pos:column="20"/></init> <condition><expr><name pos:line="54" pos:column="21">i<pos:position pos:line="54" pos:column="22"/></name> <operator pos:line="54" pos:column="23">&lt;<pos:position pos:line="54" pos:column="27"/></operator> <name pos:line="54" pos:column="25">n<pos:position pos:line="54" pos:column="26"/></name></expr>;<pos:position pos:line="54" pos:column="27"/></condition> <incr><expr><name pos:line="54" pos:column="28">i<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">++<pos:position pos:line="54" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="32"/></control> <block pos:line="54" pos:column="33">{
		<decl_stmt><decl><type><name><name pos:line="55" pos:column="17">struct<pos:position pos:line="55" pos:column="23"/></name> <name pos:line="55" pos:column="24">ref_update<pos:position pos:line="55" pos:column="34"/></name></name> <modifier pos:line="55" pos:column="35">*<pos:position pos:line="55" pos:column="36"/></modifier></type><name pos:line="55" pos:column="36">update<pos:position pos:line="55" pos:column="42"/></name> <init pos:line="55" pos:column="43">= <expr><name><name pos:line="55" pos:column="45">updates<pos:position pos:line="55" pos:column="52"/></name><index pos:line="55" pos:column="52">[<expr><name pos:line="55" pos:column="53">i<pos:position pos:line="55" pos:column="54"/></name></expr>]<pos:position pos:line="55" pos:column="55"/></index></name></expr></init></decl>;<pos:position pos:line="55" pos:column="56"/></decl_stmt>

		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><operator pos:line="57" pos:column="21">!<pos:position pos:line="57" pos:column="22"/></operator><call><name pos:line="57" pos:column="22">is_null_sha1<pos:position pos:line="57" pos:column="34"/></name><argument_list pos:line="57" pos:column="34">(<argument><expr><name><name pos:line="57" pos:column="35">update<pos:position pos:line="57" pos:column="41"/></name><operator pos:line="57" pos:column="41">-&gt;<pos:position pos:line="57" pos:column="46"/></operator><name pos:line="57" pos:column="43">new_sha1<pos:position pos:line="57" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="53"/></condition><then pos:line="57" pos:column="53"> <block pos:line="57" pos:column="54">{
			<if pos:line="58" pos:column="25">if <condition pos:line="58" pos:column="28">(<expr><call><name pos:line="58" pos:column="29">write_ref_sha1<pos:position pos:line="58" pos:column="43"/></name><argument_list pos:line="58" pos:column="43">(<argument><expr><name><name pos:line="58" pos:column="44">update<pos:position pos:line="58" pos:column="50"/></name><operator pos:line="58" pos:column="50">-&gt;<pos:position pos:line="58" pos:column="55"/></operator><name pos:line="58" pos:column="52">lock<pos:position pos:line="58" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="58">update<pos:position pos:line="58" pos:column="64"/></name><operator pos:line="58" pos:column="64">-&gt;<pos:position pos:line="58" pos:column="69"/></operator><name pos:line="58" pos:column="66">new_sha1<pos:position pos:line="58" pos:column="74"/></name></name></expr></argument>,
					   <argument><expr><name><name pos:line="59" pos:column="44">update<pos:position pos:line="59" pos:column="50"/></name><operator pos:line="59" pos:column="50">-&gt;<pos:position pos:line="59" pos:column="55"/></operator><name pos:line="59" pos:column="52">msg<pos:position pos:line="59" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="57"/></condition><then pos:line="59" pos:column="57"> <block pos:line="59" pos:column="58">{
				<expr_stmt><expr><name><name pos:line="60" pos:column="33">update<pos:position pos:line="60" pos:column="39"/></name><operator pos:line="60" pos:column="39">-&gt;<pos:position pos:line="60" pos:column="44"/></operator><name pos:line="60" pos:column="41">lock<pos:position pos:line="60" pos:column="45"/></name></name> <operator pos:line="60" pos:column="46">=<pos:position pos:line="60" pos:column="47"/></operator> <name pos:line="60" pos:column="48">NULL<pos:position pos:line="60" pos:column="52"/></name></expr>;<pos:position pos:line="60" pos:column="53"/></expr_stmt> <comment type="block" pos:line="60" pos:column="54">/* freed by write_ref_sha1 */</comment>
				<expr_stmt><expr><call><name pos:line="61" pos:column="33">strbuf_addf<pos:position pos:line="61" pos:column="44"/></name><argument_list pos:line="61" pos:column="44">(<argument><expr><name pos:line="61" pos:column="45">err<pos:position pos:line="61" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="50">"Cannot update the ref '%s'."<pos:position pos:line="61" pos:column="79"/></literal></expr></argument>,
					    <argument><expr><name><name pos:line="62" pos:column="45">update<pos:position pos:line="62" pos:column="51"/></name><operator pos:line="62" pos:column="51">-&gt;<pos:position pos:line="62" pos:column="56"/></operator><name pos:line="62" pos:column="53">refname<pos:position pos:line="62" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="62"/></expr_stmt>
				<expr_stmt><expr><name pos:line="63" pos:column="33">ret<pos:position pos:line="63" pos:column="36"/></name> <operator pos:line="63" pos:column="37">=<pos:position pos:line="63" pos:column="38"/></operator> <name pos:line="63" pos:column="39">TRANSACTION_GENERIC_ERROR<pos:position pos:line="63" pos:column="64"/></name></expr>;<pos:position pos:line="63" pos:column="65"/></expr_stmt>
				<goto pos:line="64" pos:column="33">goto <name pos:line="64" pos:column="38">cleanup<pos:position pos:line="64" pos:column="45"/></name>;<pos:position pos:line="64" pos:column="46"/></goto>
			}<pos:position pos:line="65" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name><name pos:line="66" pos:column="25">update<pos:position pos:line="66" pos:column="31"/></name><operator pos:line="66" pos:column="31">-&gt;<pos:position pos:line="66" pos:column="36"/></operator><name pos:line="66" pos:column="33">lock<pos:position pos:line="66" pos:column="37"/></name></name> <operator pos:line="66" pos:column="38">=<pos:position pos:line="66" pos:column="39"/></operator> <name pos:line="66" pos:column="40">NULL<pos:position pos:line="66" pos:column="44"/></name></expr>;<pos:position pos:line="66" pos:column="45"/></expr_stmt> <comment type="block" pos:line="66" pos:column="46">/* freed by write_ref_sha1 */</comment>
		}<pos:position pos:line="67" pos:column="18"/></block></then></if>
	}<pos:position pos:line="68" pos:column="10"/></block></for>

	<comment type="block" pos:line="70" pos:column="9">/* Perform deletes now that updates are safely completed */</comment>
	<for pos:line="71" pos:column="9">for <control pos:line="71" pos:column="13">(<init><expr><name pos:line="71" pos:column="14">i<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">=<pos:position pos:line="71" pos:column="17"/></operator> <literal type="number" pos:line="71" pos:column="18">0<pos:position pos:line="71" pos:column="19"/></literal></expr>;<pos:position pos:line="71" pos:column="20"/></init> <condition><expr><name pos:line="71" pos:column="21">i<pos:position pos:line="71" pos:column="22"/></name> <operator pos:line="71" pos:column="23">&lt;<pos:position pos:line="71" pos:column="27"/></operator> <name pos:line="71" pos:column="25">n<pos:position pos:line="71" pos:column="26"/></name></expr>;<pos:position pos:line="71" pos:column="27"/></condition> <incr><expr><name pos:line="71" pos:column="28">i<pos:position pos:line="71" pos:column="29"/></name><operator pos:line="71" pos:column="29">++<pos:position pos:line="71" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="71" pos:column="32"/></control> <block pos:line="71" pos:column="33">{
		<decl_stmt><decl><type><name><name pos:line="72" pos:column="17">struct<pos:position pos:line="72" pos:column="23"/></name> <name pos:line="72" pos:column="24">ref_update<pos:position pos:line="72" pos:column="34"/></name></name> <modifier pos:line="72" pos:column="35">*<pos:position pos:line="72" pos:column="36"/></modifier></type><name pos:line="72" pos:column="36">update<pos:position pos:line="72" pos:column="42"/></name> <init pos:line="72" pos:column="43">= <expr><name><name pos:line="72" pos:column="45">updates<pos:position pos:line="72" pos:column="52"/></name><index pos:line="72" pos:column="52">[<expr><name pos:line="72" pos:column="53">i<pos:position pos:line="72" pos:column="54"/></name></expr>]<pos:position pos:line="72" pos:column="55"/></index></name></expr></init></decl>;<pos:position pos:line="72" pos:column="56"/></decl_stmt>

		<if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><name><name pos:line="74" pos:column="21">update<pos:position pos:line="74" pos:column="27"/></name><operator pos:line="74" pos:column="27">-&gt;<pos:position pos:line="74" pos:column="32"/></operator><name pos:line="74" pos:column="29">lock<pos:position pos:line="74" pos:column="33"/></name></name></expr>)<pos:position pos:line="74" pos:column="34"/></condition><then pos:line="74" pos:column="34"> <block pos:line="74" pos:column="35">{
			<if pos:line="75" pos:column="25">if <condition pos:line="75" pos:column="28">(<expr><call><name pos:line="75" pos:column="29">delete_ref_loose<pos:position pos:line="75" pos:column="45"/></name><argument_list pos:line="75" pos:column="45">(<argument><expr><name><name pos:line="75" pos:column="46">update<pos:position pos:line="75" pos:column="52"/></name><operator pos:line="75" pos:column="52">-&gt;<pos:position pos:line="75" pos:column="57"/></operator><name pos:line="75" pos:column="54">lock<pos:position pos:line="75" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="60">update<pos:position pos:line="75" pos:column="66"/></name><operator pos:line="75" pos:column="66">-&gt;<pos:position pos:line="75" pos:column="71"/></operator><name pos:line="75" pos:column="68">type<pos:position pos:line="75" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="74">err<pos:position pos:line="75" pos:column="77"/></name></expr></argument>)<pos:position pos:line="75" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="79"/></condition><then pos:line="75" pos:column="79"> <block pos:line="75" pos:column="80">{
				<expr_stmt><expr><name pos:line="76" pos:column="33">ret<pos:position pos:line="76" pos:column="36"/></name> <operator pos:line="76" pos:column="37">=<pos:position pos:line="76" pos:column="38"/></operator> <name pos:line="76" pos:column="39">TRANSACTION_GENERIC_ERROR<pos:position pos:line="76" pos:column="64"/></name></expr>;<pos:position pos:line="76" pos:column="65"/></expr_stmt>
				<goto pos:line="77" pos:column="33">goto <name pos:line="77" pos:column="38">cleanup<pos:position pos:line="77" pos:column="45"/></name>;<pos:position pos:line="77" pos:column="46"/></goto>
			}<pos:position pos:line="78" pos:column="26"/></block></then></if>

			<if pos:line="80" pos:column="25">if <condition pos:line="80" pos:column="28">(<expr><operator pos:line="80" pos:column="29">!<pos:position pos:line="80" pos:column="30"/></operator><operator pos:line="80" pos:column="30">(<pos:position pos:line="80" pos:column="31"/></operator><name><name pos:line="80" pos:column="31">update<pos:position pos:line="80" pos:column="37"/></name><operator pos:line="80" pos:column="37">-&gt;<pos:position pos:line="80" pos:column="42"/></operator><name pos:line="80" pos:column="39">flags<pos:position pos:line="80" pos:column="44"/></name></name> <operator pos:line="80" pos:column="45">&amp;<pos:position pos:line="80" pos:column="50"/></operator> <name pos:line="80" pos:column="47">REF_ISPRUNING<pos:position pos:line="80" pos:column="60"/></name><operator pos:line="80" pos:column="60">)<pos:position pos:line="80" pos:column="61"/></operator></expr>)<pos:position pos:line="80" pos:column="62"/></condition><then pos:line="80" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="81" pos:column="33">delnames<pos:position pos:line="81" pos:column="41"/></name><index pos:line="81" pos:column="41">[<expr><name pos:line="81" pos:column="42">delnum<pos:position pos:line="81" pos:column="48"/></name><operator pos:line="81" pos:column="48">++<pos:position pos:line="81" pos:column="50"/></operator></expr>]<pos:position pos:line="81" pos:column="51"/></index></name> <operator pos:line="81" pos:column="52">=<pos:position pos:line="81" pos:column="53"/></operator> <name><name pos:line="81" pos:column="54">update<pos:position pos:line="81" pos:column="60"/></name><operator pos:line="81" pos:column="60">-&gt;<pos:position pos:line="81" pos:column="65"/></operator><name pos:line="81" pos:column="62">lock<pos:position pos:line="81" pos:column="66"/></name><operator pos:line="81" pos:column="66">-&gt;<pos:position pos:line="81" pos:column="71"/></operator><name pos:line="81" pos:column="68">ref_name<pos:position pos:line="81" pos:column="76"/></name></name></expr>;<pos:position pos:line="81" pos:column="77"/></expr_stmt></block></then></if>
		}<pos:position pos:line="82" pos:column="18"/></block></then></if>
	}<pos:position pos:line="83" pos:column="10"/></block></for>

	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><call><name pos:line="85" pos:column="13">repack_without_refs<pos:position pos:line="85" pos:column="32"/></name><argument_list pos:line="85" pos:column="32">(<argument><expr><name pos:line="85" pos:column="33">delnames<pos:position pos:line="85" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="43">delnum<pos:position pos:line="85" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="51">err<pos:position pos:line="85" pos:column="54"/></name></expr></argument>)<pos:position pos:line="85" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="56"/></condition><then pos:line="85" pos:column="56"> <block pos:line="85" pos:column="57">{
		<expr_stmt><expr><name pos:line="86" pos:column="17">ret<pos:position pos:line="86" pos:column="20"/></name> <operator pos:line="86" pos:column="21">=<pos:position pos:line="86" pos:column="22"/></operator> <name pos:line="86" pos:column="23">TRANSACTION_GENERIC_ERROR<pos:position pos:line="86" pos:column="48"/></name></expr>;<pos:position pos:line="86" pos:column="49"/></expr_stmt>
		<goto pos:line="87" pos:column="17">goto <name pos:line="87" pos:column="22">cleanup<pos:position pos:line="87" pos:column="29"/></name>;<pos:position pos:line="87" pos:column="30"/></goto>
	}<pos:position pos:line="88" pos:column="10"/></block></then></if>
	<for pos:line="89" pos:column="9">for <control pos:line="89" pos:column="13">(<init><expr><name pos:line="89" pos:column="14">i<pos:position pos:line="89" pos:column="15"/></name> <operator pos:line="89" pos:column="16">=<pos:position pos:line="89" pos:column="17"/></operator> <literal type="number" pos:line="89" pos:column="18">0<pos:position pos:line="89" pos:column="19"/></literal></expr>;<pos:position pos:line="89" pos:column="20"/></init> <condition><expr><name pos:line="89" pos:column="21">i<pos:position pos:line="89" pos:column="22"/></name> <operator pos:line="89" pos:column="23">&lt;<pos:position pos:line="89" pos:column="27"/></operator> <name pos:line="89" pos:column="25">delnum<pos:position pos:line="89" pos:column="31"/></name></expr>;<pos:position pos:line="89" pos:column="32"/></condition> <incr><expr><name pos:line="89" pos:column="33">i<pos:position pos:line="89" pos:column="34"/></name><operator pos:line="89" pos:column="34">++<pos:position pos:line="89" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="89" pos:column="37"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="17">unlink_or_warn<pos:position pos:line="90" pos:column="31"/></name><argument_list pos:line="90" pos:column="31">(<argument><expr><call><name pos:line="90" pos:column="32">git_path<pos:position pos:line="90" pos:column="40"/></name><argument_list pos:line="90" pos:column="40">(<argument><expr><literal type="string" pos:line="90" pos:column="41">"logs/%s"<pos:position pos:line="90" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="52">delnames<pos:position pos:line="90" pos:column="60"/></name><index pos:line="90" pos:column="60">[<expr><name pos:line="90" pos:column="61">i<pos:position pos:line="90" pos:column="62"/></name></expr>]<pos:position pos:line="90" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="90" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="90" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="66"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="91" pos:column="9">clear_loose_ref_cache<pos:position pos:line="91" pos:column="30"/></name><argument_list pos:line="91" pos:column="30">(<argument><expr><operator pos:line="91" pos:column="31">&amp;<pos:position pos:line="91" pos:column="36"/></operator><name pos:line="91" pos:column="32">ref_cache<pos:position pos:line="91" pos:column="41"/></name></expr></argument>)<pos:position pos:line="91" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="43"/></expr_stmt>

<label><name pos:line="93" pos:column="1">cleanup<pos:position pos:line="93" pos:column="8"/></name>:<pos:position pos:line="93" pos:column="9"/></label>
	<expr_stmt><expr><name><name pos:line="94" pos:column="9">transaction<pos:position pos:line="94" pos:column="20"/></name><operator pos:line="94" pos:column="20">-&gt;<pos:position pos:line="94" pos:column="25"/></operator><name pos:line="94" pos:column="22">state<pos:position pos:line="94" pos:column="27"/></name></name> <operator pos:line="94" pos:column="28">=<pos:position pos:line="94" pos:column="29"/></operator> <name pos:line="94" pos:column="30">REF_TRANSACTION_CLOSED<pos:position pos:line="94" pos:column="52"/></name></expr>;<pos:position pos:line="94" pos:column="53"/></expr_stmt>

	<for pos:line="96" pos:column="9">for <control pos:line="96" pos:column="13">(<init><expr><name pos:line="96" pos:column="14">i<pos:position pos:line="96" pos:column="15"/></name> <operator pos:line="96" pos:column="16">=<pos:position pos:line="96" pos:column="17"/></operator> <literal type="number" pos:line="96" pos:column="18">0<pos:position pos:line="96" pos:column="19"/></literal></expr>;<pos:position pos:line="96" pos:column="20"/></init> <condition><expr><name pos:line="96" pos:column="21">i<pos:position pos:line="96" pos:column="22"/></name> <operator pos:line="96" pos:column="23">&lt;<pos:position pos:line="96" pos:column="27"/></operator> <name pos:line="96" pos:column="25">n<pos:position pos:line="96" pos:column="26"/></name></expr>;<pos:position pos:line="96" pos:column="27"/></condition> <incr><expr><name pos:line="96" pos:column="28">i<pos:position pos:line="96" pos:column="29"/></name><operator pos:line="96" pos:column="29">++<pos:position pos:line="96" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="96" pos:column="32"/></control>
		<block type="pseudo"><if pos:line="97" pos:column="17">if <condition pos:line="97" pos:column="20">(<expr><name><name pos:line="97" pos:column="21">updates<pos:position pos:line="97" pos:column="28"/></name><index pos:line="97" pos:column="28">[<expr><name pos:line="97" pos:column="29">i<pos:position pos:line="97" pos:column="30"/></name></expr>]<pos:position pos:line="97" pos:column="31"/></index></name><operator pos:line="97" pos:column="31">-&gt;<pos:position pos:line="97" pos:column="36"/></operator><name pos:line="97" pos:column="33">lock<pos:position pos:line="97" pos:column="37"/></name></expr>)<pos:position pos:line="97" pos:column="38"/></condition><then pos:line="97" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="25">unlock_ref<pos:position pos:line="98" pos:column="35"/></name><argument_list pos:line="98" pos:column="35">(<argument><expr><name><name pos:line="98" pos:column="36">updates<pos:position pos:line="98" pos:column="43"/></name><index pos:line="98" pos:column="43">[<expr><name pos:line="98" pos:column="44">i<pos:position pos:line="98" pos:column="45"/></name></expr>]<pos:position pos:line="98" pos:column="46"/></index></name><operator pos:line="98" pos:column="46">-&gt;<pos:position pos:line="98" pos:column="51"/></operator><name pos:line="98" pos:column="48">lock<pos:position pos:line="98" pos:column="52"/></name></expr></argument>)<pos:position pos:line="98" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="54"/></expr_stmt></block></then></if></block></for>
	<expr_stmt><expr><call><name pos:line="99" pos:column="9">free<pos:position pos:line="99" pos:column="13"/></name><argument_list pos:line="99" pos:column="13">(<argument><expr><name pos:line="99" pos:column="14">delnames<pos:position pos:line="99" pos:column="22"/></name></expr></argument>)<pos:position pos:line="99" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="24"/></expr_stmt>
	<return pos:line="100" pos:column="9">return <expr><name pos:line="100" pos:column="16">ret<pos:position pos:line="100" pos:column="19"/></name></expr>;<pos:position pos:line="100" pos:column="20"/></return>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

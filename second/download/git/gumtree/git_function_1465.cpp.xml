<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1465.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">fast_export_read_path<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">path<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">uint32_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">mode_out<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">err<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name><name pos:line="4" pos:column="16">struct<pos:position pos:line="4" pos:column="22"/></name> <name pos:line="4" pos:column="23">strbuf<pos:position pos:line="4" pos:column="29"/></name></name></type> <name pos:line="4" pos:column="30">buf<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><name pos:line="4" pos:column="36">STRBUF_INIT<pos:position pos:line="4" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">strbuf_reset<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><operator pos:line="6" pos:column="22">&amp;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="23">buf<pos:position pos:line="6" pos:column="26"/></name></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">err<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <call><name pos:line="7" pos:column="15">fast_export_ls<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">path<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="36">mode_out<pos:position pos:line="7" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="46">&amp;<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="47">buf<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="52"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">err<pos:position pos:line="8" pos:column="16"/></name></expr>)<pos:position pos:line="8" pos:column="17"/></condition><then pos:line="8" pos:column="17"> <block pos:line="8" pos:column="18">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">errno<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">!=<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">ENOENT<pos:position pos:line="9" pos:column="36"/></name></expr>)<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">die_errno<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><literal type="string" pos:line="10" pos:column="35">"BUG: unexpected fast_export_ls error"<pos:position pos:line="10" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="75"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="11" pos:column="17">/* Treat missing paths as directories. */</comment>
		<expr_stmt><expr><operator pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">mode_out<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="29">S_IFDIR<pos:position pos:line="12" pos:column="36"/></name></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt>
		<return pos:line="13" pos:column="17">return <expr><name pos:line="13" pos:column="24">NULL<pos:position pos:line="13" pos:column="28"/></name></expr>;<pos:position pos:line="13" pos:column="29"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
	<return pos:line="15" pos:column="9">return <expr><name><name pos:line="15" pos:column="16">buf<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">.<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">buf<pos:position pos:line="15" pos:column="23"/></name></name></expr>;<pos:position pos:line="15" pos:column="24"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1134.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">unsigned<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">is_submodule_modified<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">path<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">ignore_untracked<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">ssize_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">len<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">child_process<pos:position pos:line="4" pos:column="29"/></name></name></type> <name pos:line="4" pos:column="30">cp<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><name pos:line="4" pos:column="35">CHILD_PROCESS_INIT<pos:position pos:line="4" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name><name pos:line="5" pos:column="21">argv<pos:position pos:line="5" pos:column="25"/></name><index pos:line="5" pos:column="25">[]<pos:position pos:line="5" pos:column="27"/></index></name> <init pos:line="5" pos:column="28">= <expr><block pos:line="5" pos:column="30">{
		<expr><literal type="string" pos:line="6" pos:column="17">"status"<pos:position pos:line="6" pos:column="25"/></literal></expr>,
		<expr><literal type="string" pos:line="7" pos:column="17">"--porcelain"<pos:position pos:line="7" pos:column="30"/></literal></expr>,
		<expr><name pos:line="8" pos:column="17">NULL<pos:position pos:line="8" pos:column="21"/></name></expr>,
		<expr><name pos:line="9" pos:column="17">NULL<pos:position pos:line="9" pos:column="21"/></name></expr>,
	}<pos:position pos:line="10" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="10" pos:column="11"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">strbuf<pos:position pos:line="11" pos:column="22"/></name></name></type> <name pos:line="11" pos:column="23">buf<pos:position pos:line="11" pos:column="26"/></name> <init pos:line="11" pos:column="27">= <expr><name pos:line="11" pos:column="29">STRBUF_INIT<pos:position pos:line="11" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">unsigned<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">dirty_submodule<pos:position pos:line="12" pos:column="33"/></name> <init pos:line="12" pos:column="34">= <expr><literal type="number" pos:line="12" pos:column="36">0<pos:position pos:line="12" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name pos:line="13" pos:column="15">char<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">line<pos:position pos:line="13" pos:column="25"/></name></decl>, <modifier pos:line="13" pos:column="27">*<pos:position pos:line="13" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="28">next_line<pos:position pos:line="13" pos:column="37"/></name></decl>;<pos:position pos:line="13" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <name pos:line="14" pos:column="15">char<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">git_dir<pos:position pos:line="14" pos:column="28"/></name></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">strbuf_addf<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><operator pos:line="16" pos:column="21">&amp;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="22">buf<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="27">"%s/.git"<pos:position pos:line="16" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">path<pos:position pos:line="16" pos:column="42"/></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">git_dir<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <call><name pos:line="17" pos:column="19">read_gitfile<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name><name pos:line="17" pos:column="32">buf<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">.<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="36">buf<pos:position pos:line="17" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">git_dir<pos:position pos:line="18" pos:column="21"/></name></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">git_dir<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <name><name pos:line="19" pos:column="27">buf<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">.<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="31">buf<pos:position pos:line="19" pos:column="34"/></name></name></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><call><name pos:line="20" pos:column="14">is_directory<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">git_dir<pos:position pos:line="20" pos:column="34"/></name></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="36"/></condition><then pos:line="20" pos:column="36"> <block pos:line="20" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">strbuf_release<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><operator pos:line="21" pos:column="32">&amp;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="33">buf<pos:position pos:line="21" pos:column="36"/></name></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
		<comment type="block" pos:line="22" pos:column="17">/* The submodule is not checked out, so it is not modified */</comment>
		<return pos:line="23" pos:column="17">return <expr><literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></return>

	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">strbuf_reset<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><operator pos:line="26" pos:column="22">&amp;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="23">buf<pos:position pos:line="26" pos:column="26"/></name></expr></argument>)<pos:position pos:line="26" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">ignore_untracked<pos:position pos:line="28" pos:column="29"/></name></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="17">argv<pos:position pos:line="29" pos:column="21"/></name><index pos:line="29" pos:column="21">[<expr><literal type="number" pos:line="29" pos:column="22">2<pos:position pos:line="29" pos:column="23"/></literal></expr>]<pos:position pos:line="29" pos:column="24"/></index></name> <operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <literal type="string" pos:line="29" pos:column="27">"-uno"<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="31" pos:column="9">cp<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">.<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">argv<pos:position pos:line="31" pos:column="16"/></name></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">argv<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">prepare_submodule_repo_env<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><operator pos:line="32" pos:column="36">&amp;<pos:position pos:line="32" pos:column="41"/></operator><name><name pos:line="32" pos:column="37">cp<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">.<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="40">env_array<pos:position pos:line="32" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="33" pos:column="9">cp<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">.<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="12">git_cmd<pos:position pos:line="33" pos:column="19"/></name></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <literal type="number" pos:line="33" pos:column="22">1<pos:position pos:line="33" pos:column="23"/></literal></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">cp<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">.<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="12">no_stdin<pos:position pos:line="34" pos:column="20"/></name></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <literal type="number" pos:line="34" pos:column="23">1<pos:position pos:line="34" pos:column="24"/></literal></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="35" pos:column="9">cp<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">.<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="12">out<pos:position pos:line="35" pos:column="15"/></name></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <operator pos:line="35" pos:column="18">-<pos:position pos:line="35" pos:column="19"/></operator><literal type="number" pos:line="35" pos:column="19">1<pos:position pos:line="35" pos:column="20"/></literal></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">cp<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">.<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">dir<pos:position pos:line="36" pos:column="15"/></name></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <name pos:line="36" pos:column="18">path<pos:position pos:line="36" pos:column="22"/></name></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">start_command<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><operator pos:line="37" pos:column="27">&amp;<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="28">cp<pos:position pos:line="37" pos:column="30"/></name></expr></argument>)<pos:position pos:line="37" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="32"/></condition><then pos:line="37" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="17">die<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><literal type="string" pos:line="38" pos:column="21">"Could not run 'git status --porcelain' in submodule %s"<pos:position pos:line="38" pos:column="77"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="79">path<pos:position pos:line="38" pos:column="83"/></name></expr></argument>)<pos:position pos:line="38" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="85"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="40" pos:column="9">len<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <call><name pos:line="40" pos:column="15">strbuf_read<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><operator pos:line="40" pos:column="27">&amp;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="28">buf<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="33">cp<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">.<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="36">out<pos:position pos:line="40" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="41">1024<pos:position pos:line="40" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name pos:line="41" pos:column="9">line<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <name><name pos:line="41" pos:column="16">buf<pos:position pos:line="41" pos:column="19"/></name><operator pos:line="41" pos:column="19">.<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="20">buf<pos:position pos:line="41" pos:column="23"/></name></name></expr>;<pos:position pos:line="41" pos:column="24"/></expr_stmt>
	<while pos:line="42" pos:column="9">while <condition pos:line="42" pos:column="15">(<expr><name pos:line="42" pos:column="16">len<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">&gt;<pos:position pos:line="42" pos:column="24"/></operator> <literal type="number" pos:line="42" pos:column="22">2<pos:position pos:line="42" pos:column="23"/></literal></expr>)<pos:position pos:line="42" pos:column="24"/></condition> <block pos:line="42" pos:column="25">{
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><operator pos:line="43" pos:column="21">(<pos:position pos:line="43" pos:column="22"/></operator><name><name pos:line="43" pos:column="22">line<pos:position pos:line="43" pos:column="26"/></name><index pos:line="43" pos:column="26">[<expr><literal type="number" pos:line="43" pos:column="27">0<pos:position pos:line="43" pos:column="28"/></literal></expr>]<pos:position pos:line="43" pos:column="29"/></index></name> <operator pos:line="43" pos:column="30">==<pos:position pos:line="43" pos:column="32"/></operator> <literal type="char" pos:line="43" pos:column="33">'?'<pos:position pos:line="43" pos:column="36"/></literal><operator pos:line="43" pos:column="36">)<pos:position pos:line="43" pos:column="37"/></operator> <operator pos:line="43" pos:column="38">&amp;&amp;<pos:position pos:line="43" pos:column="48"/></operator> <operator pos:line="43" pos:column="41">(<pos:position pos:line="43" pos:column="42"/></operator><name><name pos:line="43" pos:column="42">line<pos:position pos:line="43" pos:column="46"/></name><index pos:line="43" pos:column="46">[<expr><literal type="number" pos:line="43" pos:column="47">1<pos:position pos:line="43" pos:column="48"/></literal></expr>]<pos:position pos:line="43" pos:column="49"/></index></name> <operator pos:line="43" pos:column="50">==<pos:position pos:line="43" pos:column="52"/></operator> <literal type="char" pos:line="43" pos:column="53">'?'<pos:position pos:line="43" pos:column="56"/></literal><operator pos:line="43" pos:column="56">)<pos:position pos:line="43" pos:column="57"/></operator></expr>)<pos:position pos:line="43" pos:column="58"/></condition><then pos:line="43" pos:column="58"> <block pos:line="43" pos:column="59">{
			<expr_stmt><expr><name pos:line="44" pos:column="25">dirty_submodule<pos:position pos:line="44" pos:column="40"/></name> <operator pos:line="44" pos:column="41">|=<pos:position pos:line="44" pos:column="43"/></operator> <name pos:line="44" pos:column="44">DIRTY_SUBMODULE_UNTRACKED<pos:position pos:line="44" pos:column="69"/></name></expr>;<pos:position pos:line="44" pos:column="70"/></expr_stmt>
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><name pos:line="45" pos:column="29">dirty_submodule<pos:position pos:line="45" pos:column="44"/></name> <operator pos:line="45" pos:column="45">&amp;<pos:position pos:line="45" pos:column="50"/></operator> <name pos:line="45" pos:column="47">DIRTY_SUBMODULE_MODIFIED<pos:position pos:line="45" pos:column="71"/></name></expr>)<pos:position pos:line="45" pos:column="72"/></condition><then pos:line="45" pos:column="72">
				<block type="pseudo"><break pos:line="46" pos:column="33">break;<pos:position pos:line="46" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="47" pos:column="18"/></block></then> <else pos:line="47" pos:column="19">else <block pos:line="47" pos:column="24">{
			<expr_stmt><expr><name pos:line="48" pos:column="25">dirty_submodule<pos:position pos:line="48" pos:column="40"/></name> <operator pos:line="48" pos:column="41">|=<pos:position pos:line="48" pos:column="43"/></operator> <name pos:line="48" pos:column="44">DIRTY_SUBMODULE_MODIFIED<pos:position pos:line="48" pos:column="68"/></name></expr>;<pos:position pos:line="48" pos:column="69"/></expr_stmt>
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><name pos:line="49" pos:column="29">ignore_untracked<pos:position pos:line="49" pos:column="45"/></name> <operator pos:line="49" pos:column="46">||<pos:position pos:line="49" pos:column="48"/></operator>
			    <operator pos:line="50" pos:column="29">(<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="30">dirty_submodule<pos:position pos:line="50" pos:column="45"/></name> <operator pos:line="50" pos:column="46">&amp;<pos:position pos:line="50" pos:column="51"/></operator> <name pos:line="50" pos:column="48">DIRTY_SUBMODULE_UNTRACKED<pos:position pos:line="50" pos:column="73"/></name><operator pos:line="50" pos:column="73">)<pos:position pos:line="50" pos:column="74"/></operator></expr>)<pos:position pos:line="50" pos:column="75"/></condition><then pos:line="50" pos:column="75">
				<block type="pseudo"><break pos:line="51" pos:column="33">break;<pos:position pos:line="51" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="52" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="53" pos:column="17">next_line<pos:position pos:line="53" pos:column="26"/></name> <operator pos:line="53" pos:column="27">=<pos:position pos:line="53" pos:column="28"/></operator> <call><name pos:line="53" pos:column="29">strchr<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">(<argument><expr><name pos:line="53" pos:column="36">line<pos:position pos:line="53" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="53" pos:column="42">'\n'<pos:position pos:line="53" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="48"/></expr_stmt>
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><operator pos:line="54" pos:column="21">!<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="22">next_line<pos:position pos:line="54" pos:column="31"/></name></expr>)<pos:position pos:line="54" pos:column="32"/></condition><then pos:line="54" pos:column="32">
			<block type="pseudo"><break pos:line="55" pos:column="25">break;<pos:position pos:line="55" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="56" pos:column="17">next_line<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">++<pos:position pos:line="56" pos:column="28"/></operator></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="57" pos:column="17">len<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">-=<pos:position pos:line="57" pos:column="23"/></operator> <operator pos:line="57" pos:column="24">(<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="25">next_line<pos:position pos:line="57" pos:column="34"/></name> <operator pos:line="57" pos:column="35">-<pos:position pos:line="57" pos:column="36"/></operator> <name pos:line="57" pos:column="37">line<pos:position pos:line="57" pos:column="41"/></name><operator pos:line="57" pos:column="41">)<pos:position pos:line="57" pos:column="42"/></operator></expr>;<pos:position pos:line="57" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="58" pos:column="17">line<pos:position pos:line="58" pos:column="21"/></name> <operator pos:line="58" pos:column="22">=<pos:position pos:line="58" pos:column="23"/></operator> <name pos:line="58" pos:column="24">next_line<pos:position pos:line="58" pos:column="33"/></name></expr>;<pos:position pos:line="58" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="59" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">close<pos:position pos:line="60" pos:column="14"/></name><argument_list pos:line="60" pos:column="14">(<argument><expr><name><name pos:line="60" pos:column="15">cp<pos:position pos:line="60" pos:column="17"/></name><operator pos:line="60" pos:column="17">.<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="18">out<pos:position pos:line="60" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="23"/></expr_stmt>

	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><call><name pos:line="62" pos:column="13">finish_command<pos:position pos:line="62" pos:column="27"/></name><argument_list pos:line="62" pos:column="27">(<argument><expr><operator pos:line="62" pos:column="28">&amp;<pos:position pos:line="62" pos:column="33"/></operator><name pos:line="62" pos:column="29">cp<pos:position pos:line="62" pos:column="31"/></name></expr></argument>)<pos:position pos:line="62" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="33"/></condition><then pos:line="62" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="17">die<pos:position pos:line="63" pos:column="20"/></name><argument_list pos:line="63" pos:column="20">(<argument><expr><literal type="string" pos:line="63" pos:column="21">"'git status --porcelain' failed in submodule %s"<pos:position pos:line="63" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="72">path<pos:position pos:line="63" pos:column="76"/></name></expr></argument>)<pos:position pos:line="63" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="78"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="65" pos:column="9">strbuf_release<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><operator pos:line="65" pos:column="24">&amp;<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="25">buf<pos:position pos:line="65" pos:column="28"/></name></expr></argument>)<pos:position pos:line="65" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>
	<return pos:line="66" pos:column="9">return <expr><name pos:line="66" pos:column="16">dirty_submodule<pos:position pos:line="66" pos:column="31"/></name></expr>;<pos:position pos:line="66" pos:column="32"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2266_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">off_t<pos:position pos:line="1" pos:column="6"/></name></type> <name pos:line="1" pos:column="7">nth_packed_object_offset<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">packed_git<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">p<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">uint32_t<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">n<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">unsigned<pos:position pos:line="3" pos:column="23"/></name> <name pos:line="3" pos:column="24">char<pos:position pos:line="3" pos:column="28"/></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">index<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><name><name pos:line="3" pos:column="38">p<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">-&gt;<pos:position pos:line="3" pos:column="44"/></operator><name pos:line="3" pos:column="41">index_data<pos:position pos:line="3" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>
	<expr_stmt><expr><name pos:line="4" pos:column="9">index<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">+=<pos:position pos:line="4" pos:column="17"/></operator> <literal type="number" pos:line="4" pos:column="18">4<pos:position pos:line="4" pos:column="19"/></literal> <operator pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></operator> <literal type="number" pos:line="4" pos:column="22">256<pos:position pos:line="4" pos:column="25"/></literal></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">p<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">index_version<pos:position pos:line="5" pos:column="29"/></name></name> <operator pos:line="5" pos:column="30">==<pos:position pos:line="5" pos:column="32"/></operator> <literal type="number" pos:line="5" pos:column="33">1<pos:position pos:line="5" pos:column="34"/></literal></expr>)<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35"> <block pos:line="5" pos:column="36">{
		<return pos:line="6" pos:column="17">return <expr><call><name pos:line="6" pos:column="24">ntohl<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><operator pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></operator><operator pos:line="6" pos:column="31">(<pos:position pos:line="6" pos:column="32"/></operator><operator pos:line="6" pos:column="32">(<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">uint32_t<pos:position pos:line="6" pos:column="41"/></name> <operator pos:line="6" pos:column="42">*<pos:position pos:line="6" pos:column="43"/></operator><operator pos:line="6" pos:column="43">)<pos:position pos:line="6" pos:column="44"/></operator><operator pos:line="6" pos:column="44">(<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="45">index<pos:position pos:line="6" pos:column="50"/></name> <operator pos:line="6" pos:column="51">+<pos:position pos:line="6" pos:column="52"/></operator> <literal type="number" pos:line="6" pos:column="53">24<pos:position pos:line="6" pos:column="55"/></literal> <operator pos:line="6" pos:column="56">*<pos:position pos:line="6" pos:column="57"/></operator> <name pos:line="6" pos:column="58">n<pos:position pos:line="6" pos:column="59"/></name><operator pos:line="6" pos:column="59">)<pos:position pos:line="6" pos:column="60"/></operator><operator pos:line="6" pos:column="60">)<pos:position pos:line="6" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="63"/></return>
	}<pos:position pos:line="7" pos:column="10"/></block></then> <else pos:line="7" pos:column="11">else <block pos:line="7" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">uint32_t<pos:position pos:line="8" pos:column="25"/></name></type> <name pos:line="8" pos:column="26">off<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
		<expr_stmt><expr><name pos:line="9" pos:column="17">index<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">+=<pos:position pos:line="9" pos:column="25"/></operator> <literal type="number" pos:line="9" pos:column="26">8<pos:position pos:line="9" pos:column="27"/></literal> <operator pos:line="9" pos:column="28">+<pos:position pos:line="9" pos:column="29"/></operator> <name><name pos:line="9" pos:column="30">p<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">num_objects<pos:position pos:line="9" pos:column="44"/></name></name> <operator pos:line="9" pos:column="45">*<pos:position pos:line="9" pos:column="46"/></operator> <operator pos:line="9" pos:column="47">(<pos:position pos:line="9" pos:column="48"/></operator><literal type="number" pos:line="9" pos:column="48">20<pos:position pos:line="9" pos:column="50"/></literal> <operator pos:line="9" pos:column="51">+<pos:position pos:line="9" pos:column="52"/></operator> <literal type="number" pos:line="9" pos:column="53">4<pos:position pos:line="9" pos:column="54"/></literal><operator pos:line="9" pos:column="54">)<pos:position pos:line="9" pos:column="55"/></operator></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">off<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <call><name pos:line="10" pos:column="23">ntohl<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><operator pos:line="10" pos:column="29">*<pos:position pos:line="10" pos:column="30"/></operator><operator pos:line="10" pos:column="30">(<pos:position pos:line="10" pos:column="31"/></operator><operator pos:line="10" pos:column="31">(<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">uint32_t<pos:position pos:line="10" pos:column="40"/></name> <operator pos:line="10" pos:column="41">*<pos:position pos:line="10" pos:column="42"/></operator><operator pos:line="10" pos:column="42">)<pos:position pos:line="10" pos:column="43"/></operator><operator pos:line="10" pos:column="43">(<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="44">index<pos:position pos:line="10" pos:column="49"/></name> <operator pos:line="10" pos:column="50">+<pos:position pos:line="10" pos:column="51"/></operator> <literal type="number" pos:line="10" pos:column="52">4<pos:position pos:line="10" pos:column="53"/></literal> <operator pos:line="10" pos:column="54">*<pos:position pos:line="10" pos:column="55"/></operator> <name pos:line="10" pos:column="56">n<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">)<pos:position pos:line="10" pos:column="58"/></operator><operator pos:line="10" pos:column="58">)<pos:position pos:line="10" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><operator pos:line="11" pos:column="22">(<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">off<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">&amp;<pos:position pos:line="11" pos:column="32"/></operator> <literal type="number" pos:line="11" pos:column="29">0x80000000<pos:position pos:line="11" pos:column="39"/></literal><operator pos:line="11" pos:column="39">)<pos:position pos:line="11" pos:column="40"/></operator></expr>)<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41">
			<block type="pseudo"><return pos:line="12" pos:column="25">return <expr><name pos:line="12" pos:column="32">off<pos:position pos:line="12" pos:column="35"/></name></expr>;<pos:position pos:line="12" pos:column="36"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="13" pos:column="17">index<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">+=<pos:position pos:line="13" pos:column="25"/></operator> <name><name pos:line="13" pos:column="26">p<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">num_objects<pos:position pos:line="13" pos:column="40"/></name></name> <operator pos:line="13" pos:column="41">*<pos:position pos:line="13" pos:column="42"/></operator> <literal type="number" pos:line="13" pos:column="43">4<pos:position pos:line="13" pos:column="44"/></literal> <operator pos:line="13" pos:column="45">+<pos:position pos:line="13" pos:column="46"/></operator> <operator pos:line="13" pos:column="47">(<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="48">off<pos:position pos:line="13" pos:column="51"/></name> <operator pos:line="13" pos:column="52">&amp;<pos:position pos:line="13" pos:column="57"/></operator> <literal type="number" pos:line="13" pos:column="54">0x7fffffff<pos:position pos:line="13" pos:column="64"/></literal><operator pos:line="13" pos:column="64">)<pos:position pos:line="13" pos:column="65"/></operator> <operator pos:line="13" pos:column="66">*<pos:position pos:line="13" pos:column="67"/></operator> <literal type="number" pos:line="13" pos:column="68">8<pos:position pos:line="13" pos:column="69"/></literal></expr>;<pos:position pos:line="13" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">check_pack_index_ptr<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">p<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">index<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><operator pos:line="15" pos:column="25">(<pos:position pos:line="15" pos:column="26"/></operator><operator pos:line="15" pos:column="26">(<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">uint64_t<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">)<pos:position pos:line="15" pos:column="36"/></operator><call><name pos:line="15" pos:column="36">ntohl<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><operator pos:line="15" pos:column="42">*<pos:position pos:line="15" pos:column="43"/></operator><operator pos:line="15" pos:column="43">(<pos:position pos:line="15" pos:column="44"/></operator><operator pos:line="15" pos:column="44">(<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="45">uint32_t<pos:position pos:line="15" pos:column="53"/></name> <operator pos:line="15" pos:column="54">*<pos:position pos:line="15" pos:column="55"/></operator><operator pos:line="15" pos:column="55">)<pos:position pos:line="15" pos:column="56"/></operator><operator pos:line="15" pos:column="56">(<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="57">index<pos:position pos:line="15" pos:column="62"/></name> <operator pos:line="15" pos:column="63">+<pos:position pos:line="15" pos:column="64"/></operator> <literal type="number" pos:line="15" pos:column="65">0<pos:position pos:line="15" pos:column="66"/></literal><operator pos:line="15" pos:column="66">)<pos:position pos:line="15" pos:column="67"/></operator><operator pos:line="15" pos:column="67">)<pos:position pos:line="15" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call><operator pos:line="15" pos:column="69">)<pos:position pos:line="15" pos:column="70"/></operator> <operator pos:line="15" pos:column="71">&lt;&lt;<pos:position pos:line="15" pos:column="79"/></operator> <literal type="number" pos:line="15" pos:column="74">32<pos:position pos:line="15" pos:column="76"/></literal><operator pos:line="15" pos:column="76">)<pos:position pos:line="15" pos:column="77"/></operator> <operator pos:line="15" pos:column="78">|<pos:position pos:line="15" pos:column="79"/></operator>
				   <call><name pos:line="16" pos:column="36">ntohl<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><operator pos:line="16" pos:column="42">*<pos:position pos:line="16" pos:column="43"/></operator><operator pos:line="16" pos:column="43">(<pos:position pos:line="16" pos:column="44"/></operator><operator pos:line="16" pos:column="44">(<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="45">uint32_t<pos:position pos:line="16" pos:column="53"/></name> <operator pos:line="16" pos:column="54">*<pos:position pos:line="16" pos:column="55"/></operator><operator pos:line="16" pos:column="55">)<pos:position pos:line="16" pos:column="56"/></operator><operator pos:line="16" pos:column="56">(<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="57">index<pos:position pos:line="16" pos:column="62"/></name> <operator pos:line="16" pos:column="63">+<pos:position pos:line="16" pos:column="64"/></operator> <literal type="number" pos:line="16" pos:column="65">4<pos:position pos:line="16" pos:column="66"/></literal><operator pos:line="16" pos:column="66">)<pos:position pos:line="16" pos:column="67"/></operator><operator pos:line="16" pos:column="67">)<pos:position pos:line="16" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="70"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></else></if>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

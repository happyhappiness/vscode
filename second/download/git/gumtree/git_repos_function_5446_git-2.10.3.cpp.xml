<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5446_git-2.10.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">export_marks<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">file<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">int<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">i<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">uint32_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">mark<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object_decoration<pos:position pos:line="5" pos:column="33"/></name></name> <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier></type><name pos:line="5" pos:column="35">deco<pos:position pos:line="5" pos:column="39"/></name> <init pos:line="5" pos:column="40">= <expr><name><name pos:line="5" pos:column="42">idnums<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">.<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="49">hash<pos:position pos:line="5" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">FILE<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">f<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">e<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">f<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <call><name pos:line="9" pos:column="13">fopen_for_writing<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">file<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">f<pos:position pos:line="10" pos:column="15"/></name></expr>)<pos:position pos:line="10" pos:column="16"/></condition><then pos:line="10" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">die_errno<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><literal type="string" pos:line="11" pos:column="27">"Unable to open marks file %s for writing."<pos:position pos:line="11" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="72">file<pos:position pos:line="11" pos:column="76"/></name></expr></argument>)<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="78"/></expr_stmt></block></then></if>

	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></init> <condition><expr><name pos:line="13" pos:column="21">i<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <name><name pos:line="13" pos:column="25">idnums<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">.<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="32">size<pos:position pos:line="13" pos:column="36"/></name></name></expr>;<pos:position pos:line="13" pos:column="37"/></condition> <incr><expr><name pos:line="13" pos:column="38">i<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">++<pos:position pos:line="13" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="42"/></control> <block pos:line="13" pos:column="43">{
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name><name pos:line="14" pos:column="21">deco<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">base<pos:position pos:line="14" pos:column="31"/></name></name> <operator pos:line="14" pos:column="32">&amp;&amp;<pos:position pos:line="14" pos:column="42"/></operator> <name><name pos:line="14" pos:column="35">deco<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">-&gt;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="41">base<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">-&gt;<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="47">type<pos:position pos:line="14" pos:column="51"/></name></name> <operator pos:line="14" pos:column="52">==<pos:position pos:line="14" pos:column="54"/></operator> <literal type="number" pos:line="14" pos:column="55">1<pos:position pos:line="14" pos:column="56"/></literal></expr>)<pos:position pos:line="14" pos:column="57"/></condition><then pos:line="14" pos:column="57"> <block pos:line="14" pos:column="58">{
			<expr_stmt><expr><name pos:line="15" pos:column="25">mark<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">=<pos:position pos:line="15" pos:column="31"/></operator> <call><name pos:line="15" pos:column="32">ptr_to_mark<pos:position pos:line="15" pos:column="43"/></name><argument_list pos:line="15" pos:column="43">(<argument><expr><name><name pos:line="15" pos:column="44">deco<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">-&gt;<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="50">decoration<pos:position pos:line="15" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><call><name pos:line="16" pos:column="29">fprintf<pos:position pos:line="16" pos:column="36"/></name><argument_list pos:line="16" pos:column="36">(<argument><expr><name pos:line="16" pos:column="37">f<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="40">":%"<pos:position pos:line="16" pos:column="44"/></literal><name pos:line="16" pos:column="44">PRIu32<pos:position pos:line="16" pos:column="50"/></name><literal type="string" pos:line="16" pos:column="50">" %s\n"<pos:position pos:line="16" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="59">mark<pos:position pos:line="16" pos:column="63"/></name></expr></argument>,
				<argument><expr><call><name pos:line="17" pos:column="33">oid_to_hex<pos:position pos:line="17" pos:column="43"/></name><argument_list pos:line="17" pos:column="43">(<argument><expr><operator pos:line="17" pos:column="44">&amp;<pos:position pos:line="17" pos:column="49"/></operator><name><name pos:line="17" pos:column="45">deco<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">-&gt;<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="51">base<pos:position pos:line="17" pos:column="55"/></name><operator pos:line="17" pos:column="55">-&gt;<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="57">oid<pos:position pos:line="17" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call> <operator pos:line="17" pos:column="63">&lt;<pos:position pos:line="17" pos:column="67"/></operator> <literal type="number" pos:line="17" pos:column="65">0<pos:position pos:line="17" pos:column="66"/></literal></expr>)<pos:position pos:line="17" pos:column="67"/></condition><then pos:line="17" pos:column="67"> <block pos:line="17" pos:column="68">{
			    <expr_stmt><expr><name pos:line="18" pos:column="29">e<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">=<pos:position pos:line="18" pos:column="32"/></operator> <literal type="number" pos:line="18" pos:column="33">1<pos:position pos:line="18" pos:column="34"/></literal></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
			    <break pos:line="19" pos:column="29">break;<pos:position pos:line="19" pos:column="35"/></break>
			}<pos:position pos:line="20" pos:column="26"/></block></then></if>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="22" pos:column="17">deco<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">++<pos:position pos:line="22" pos:column="23"/></operator></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></for>

	<expr_stmt><expr><name pos:line="25" pos:column="9">e<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">|=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">ferror<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">f<pos:position pos:line="25" pos:column="22"/></name></expr></argument>)<pos:position pos:line="25" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">e<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">|=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">fclose<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">f<pos:position pos:line="26" pos:column="22"/></name></expr></argument>)<pos:position pos:line="26" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">e<pos:position pos:line="27" pos:column="14"/></name></expr>)<pos:position pos:line="27" pos:column="15"/></condition><then pos:line="27" pos:column="15">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">error<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><literal type="string" pos:line="28" pos:column="23">"Unable to write marks file %s."<pos:position pos:line="28" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="57">file<pos:position pos:line="28" pos:column="61"/></name></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="63"/></expr_stmt></block></then></if>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

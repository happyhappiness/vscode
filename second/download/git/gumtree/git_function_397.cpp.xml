<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_397.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_help<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name pos:line="1" pos:column="14">int<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">argc<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">argv<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">prefix<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">nongit<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">alias<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">enum<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">help_format<pos:position pos:line="5" pos:column="25"/></name></name></type> <name pos:line="5" pos:column="26">parsed_help_format<pos:position pos:line="5" pos:column="44"/></name></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">argc<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">=<pos:position pos:line="7" pos:column="15"/></operator> <call><name pos:line="7" pos:column="16">parse_options<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">argc<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="36">argv<pos:position pos:line="7" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="42">prefix<pos:position pos:line="7" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="50">builtin_help_options<pos:position pos:line="7" pos:column="70"/></name></expr></argument>,
			<argument><expr><name pos:line="8" pos:column="25">builtin_help_usage<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="45">0<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">parsed_help_format<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">=<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">help_format<pos:position pos:line="9" pos:column="41"/></name></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">show_all<pos:position pos:line="11" pos:column="21"/></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22"> <block pos:line="11" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">git_config<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">git_help_config<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">NULL<pos:position pos:line="12" pos:column="49"/></name></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">printf<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><call><name pos:line="13" pos:column="24">_<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><literal type="string" pos:line="13" pos:column="26">"usage: %s%s"<pos:position pos:line="13" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="42">_<pos:position pos:line="13" pos:column="43"/></name><argument_list pos:line="13" pos:column="43">(<argument><expr><name pos:line="13" pos:column="44">git_usage_string<pos:position pos:line="13" pos:column="60"/></name></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="63">"\n\n"<pos:position pos:line="13" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">load_command_list<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><literal type="string" pos:line="14" pos:column="35">"git-"<pos:position pos:line="14" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="43">&amp;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="44">main_cmds<pos:position pos:line="14" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="55">&amp;<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="56">other_cmds<pos:position pos:line="14" pos:column="66"/></name></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">list_commands<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">colopts<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="40">&amp;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="41">main_cmds<pos:position pos:line="15" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="52">&amp;<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="53">other_cmds<pos:position pos:line="15" pos:column="63"/></name></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">show_guides<pos:position pos:line="18" pos:column="24"/></name></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">list_common_guides_help<pos:position pos:line="19" pos:column="40"/></name><argument_list pos:line="19" pos:column="40">()<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">show_all<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">||<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">show_guides<pos:position pos:line="21" pos:column="36"/></name></expr>)<pos:position pos:line="21" pos:column="37"/></condition><then pos:line="21" pos:column="37"> <block pos:line="21" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">printf<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><literal type="string" pos:line="22" pos:column="24">"%s\n"<pos:position pos:line="22" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="32">_<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">git_more_info_string<pos:position pos:line="22" pos:column="54"/></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="57"/></expr_stmt>
		<comment type="block" pos:line="23" pos:column="17">/*
		* We're done. Ignore any remaining args
		*/</comment>
		<return pos:line="26" pos:column="17">return <expr><literal type="number" pos:line="26" pos:column="24">0<pos:position pos:line="26" pos:column="25"/></literal></expr>;<pos:position pos:line="26" pos:column="26"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name><name pos:line="29" pos:column="14">argv<pos:position pos:line="29" pos:column="18"/></name><index pos:line="29" pos:column="18">[<expr><literal type="number" pos:line="29" pos:column="19">0<pos:position pos:line="29" pos:column="20"/></literal></expr>]<pos:position pos:line="29" pos:column="21"/></index></name></expr>)<pos:position pos:line="29" pos:column="22"/></condition><then pos:line="29" pos:column="22"> <block pos:line="29" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">printf<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><call><name pos:line="30" pos:column="24">_<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><literal type="string" pos:line="30" pos:column="26">"usage: %s%s"<pos:position pos:line="30" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="42">_<pos:position pos:line="30" pos:column="43"/></name><argument_list pos:line="30" pos:column="43">(<argument><expr><name pos:line="30" pos:column="44">git_usage_string<pos:position pos:line="30" pos:column="60"/></name></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="63">"\n\n"<pos:position pos:line="30" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">list_common_cmds_help<pos:position pos:line="31" pos:column="38"/></name><argument_list pos:line="31" pos:column="38">()<pos:position pos:line="31" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">printf<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><literal type="string" pos:line="32" pos:column="24">"\n%s\n"<pos:position pos:line="32" pos:column="32"/></literal></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="34">_<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">git_more_info_string<pos:position pos:line="32" pos:column="56"/></name></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>
		<return pos:line="33" pos:column="17">return <expr><literal type="number" pos:line="33" pos:column="24">0<pos:position pos:line="33" pos:column="25"/></literal></expr>;<pos:position pos:line="33" pos:column="26"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="36" pos:column="9">setup_git_directory_gently<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><operator pos:line="36" pos:column="36">&amp;<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="37">nongit<pos:position pos:line="36" pos:column="43"/></name></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">git_config<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><name pos:line="37" pos:column="20">git_help_config<pos:position pos:line="37" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="37">NULL<pos:position pos:line="37" pos:column="41"/></name></expr></argument>)<pos:position pos:line="37" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="43"/></expr_stmt>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">parsed_help_format<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">!=<pos:position pos:line="39" pos:column="34"/></operator> <name pos:line="39" pos:column="35">HELP_FORMAT_NONE<pos:position pos:line="39" pos:column="51"/></name></expr>)<pos:position pos:line="39" pos:column="52"/></condition><then pos:line="39" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="17">help_format<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">=<pos:position pos:line="40" pos:column="30"/></operator> <name pos:line="40" pos:column="31">parsed_help_format<pos:position pos:line="40" pos:column="49"/></name></expr>;<pos:position pos:line="40" pos:column="50"/></expr_stmt></block></then></if>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">help_format<pos:position pos:line="41" pos:column="24"/></name> <operator pos:line="41" pos:column="25">==<pos:position pos:line="41" pos:column="27"/></operator> <name pos:line="41" pos:column="28">HELP_FORMAT_NONE<pos:position pos:line="41" pos:column="44"/></name></expr>)<pos:position pos:line="41" pos:column="45"/></condition><then pos:line="41" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="17">help_format<pos:position pos:line="42" pos:column="28"/></name> <operator pos:line="42" pos:column="29">=<pos:position pos:line="42" pos:column="30"/></operator> <call><name pos:line="42" pos:column="31">parse_help_format<pos:position pos:line="42" pos:column="48"/></name><argument_list pos:line="42" pos:column="48">(<argument><expr><name pos:line="42" pos:column="49">DEFAULT_HELP_FORMAT<pos:position pos:line="42" pos:column="68"/></name></expr></argument>)<pos:position pos:line="42" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="70"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="44" pos:column="9">alias<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <call><name pos:line="44" pos:column="17">alias_lookup<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><name><name pos:line="44" pos:column="30">argv<pos:position pos:line="44" pos:column="34"/></name><index pos:line="44" pos:column="34">[<expr><literal type="number" pos:line="44" pos:column="35">0<pos:position pos:line="44" pos:column="36"/></literal></expr>]<pos:position pos:line="44" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">alias<pos:position pos:line="45" pos:column="18"/></name> <operator pos:line="45" pos:column="19">&amp;&amp;<pos:position pos:line="45" pos:column="29"/></operator> <operator pos:line="45" pos:column="22">!<pos:position pos:line="45" pos:column="23"/></operator><call><name pos:line="45" pos:column="23">is_git_command<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><name><name pos:line="45" pos:column="38">argv<pos:position pos:line="45" pos:column="42"/></name><index pos:line="45" pos:column="42">[<expr><literal type="number" pos:line="45" pos:column="43">0<pos:position pos:line="45" pos:column="44"/></literal></expr>]<pos:position pos:line="45" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="45" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="47"/></condition><then pos:line="45" pos:column="47"> <block pos:line="45" pos:column="48">{
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">printf_ln<pos:position pos:line="46" pos:column="26"/></name><argument_list pos:line="46" pos:column="26">(<argument><expr><call><name pos:line="46" pos:column="27">_<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><literal type="string" pos:line="46" pos:column="29">"`git %s' is aliased to `%s'"<pos:position pos:line="46" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="61">argv<pos:position pos:line="46" pos:column="65"/></name><index pos:line="46" pos:column="65">[<expr><literal type="number" pos:line="46" pos:column="66">0<pos:position pos:line="46" pos:column="67"/></literal></expr>]<pos:position pos:line="46" pos:column="68"/></index></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="70">alias<pos:position pos:line="46" pos:column="75"/></name></expr></argument>)<pos:position pos:line="46" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">free<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">alias<pos:position pos:line="47" pos:column="27"/></name></expr></argument>)<pos:position pos:line="47" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt>
		<return pos:line="48" pos:column="17">return <expr><literal type="number" pos:line="48" pos:column="24">0<pos:position pos:line="48" pos:column="25"/></literal></expr>;<pos:position pos:line="48" pos:column="26"/></return>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>

	<switch pos:line="51" pos:column="9">switch <condition pos:line="51" pos:column="16">(<expr><name pos:line="51" pos:column="17">help_format<pos:position pos:line="51" pos:column="28"/></name></expr>)<pos:position pos:line="51" pos:column="29"/></condition> <block pos:line="51" pos:column="30">{
	<case pos:line="52" pos:column="9">case <expr><name pos:line="52" pos:column="14">HELP_FORMAT_NONE<pos:position pos:line="52" pos:column="30"/></name></expr>:<pos:position pos:line="52" pos:column="31"/></case>
	<case pos:line="53" pos:column="9">case <expr><name pos:line="53" pos:column="14">HELP_FORMAT_MAN<pos:position pos:line="53" pos:column="29"/></name></expr>:<pos:position pos:line="53" pos:column="30"/></case>
		<expr_stmt><expr><call><name pos:line="54" pos:column="17">show_man_page<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name><name pos:line="54" pos:column="31">argv<pos:position pos:line="54" pos:column="35"/></name><index pos:line="54" pos:column="35">[<expr><literal type="number" pos:line="54" pos:column="36">0<pos:position pos:line="54" pos:column="37"/></literal></expr>]<pos:position pos:line="54" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="54" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="40"/></expr_stmt>
		<break pos:line="55" pos:column="17">break;<pos:position pos:line="55" pos:column="23"/></break>
	<case pos:line="56" pos:column="9">case <expr><name pos:line="56" pos:column="14">HELP_FORMAT_INFO<pos:position pos:line="56" pos:column="30"/></name></expr>:<pos:position pos:line="56" pos:column="31"/></case>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">show_info_page<pos:position pos:line="57" pos:column="31"/></name><argument_list pos:line="57" pos:column="31">(<argument><expr><name><name pos:line="57" pos:column="32">argv<pos:position pos:line="57" pos:column="36"/></name><index pos:line="57" pos:column="36">[<expr><literal type="number" pos:line="57" pos:column="37">0<pos:position pos:line="57" pos:column="38"/></literal></expr>]<pos:position pos:line="57" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="57" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="41"/></expr_stmt>
		<break pos:line="58" pos:column="17">break;<pos:position pos:line="58" pos:column="23"/></break>
	<case pos:line="59" pos:column="9">case <expr><name pos:line="59" pos:column="14">HELP_FORMAT_WEB<pos:position pos:line="59" pos:column="29"/></name></expr>:<pos:position pos:line="59" pos:column="30"/></case>
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">show_html_page<pos:position pos:line="60" pos:column="31"/></name><argument_list pos:line="60" pos:column="31">(<argument><expr><name><name pos:line="60" pos:column="32">argv<pos:position pos:line="60" pos:column="36"/></name><index pos:line="60" pos:column="36">[<expr><literal type="number" pos:line="60" pos:column="37">0<pos:position pos:line="60" pos:column="38"/></literal></expr>]<pos:position pos:line="60" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="60" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt>
		<break pos:line="61" pos:column="17">break;<pos:position pos:line="61" pos:column="23"/></break>
	}<pos:position pos:line="62" pos:column="10"/></block></switch>

	<return pos:line="64" pos:column="9">return <expr><literal type="number" pos:line="64" pos:column="16">0<pos:position pos:line="64" pos:column="17"/></literal></expr>;<pos:position pos:line="64" pos:column="18"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

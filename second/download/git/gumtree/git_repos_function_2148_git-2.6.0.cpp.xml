<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2148_git-2.6.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">strbuf_addftime<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">strbuf<pos:position pos:line="1" pos:column="35"/></name></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">sb<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">fmt<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name><name pos:line="1" pos:column="64">struct<pos:position pos:line="1" pos:column="70"/></name> <name pos:line="1" pos:column="71">tm<pos:position pos:line="1" pos:column="73"/></name></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">tm<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">hint<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><literal type="number" pos:line="3" pos:column="23">128<pos:position pos:line="3" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">len<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><operator pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">fmt<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19">
		<block type="pseudo"><return pos:line="7" pos:column="17">return;<pos:position pos:line="7" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">strbuf_grow<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">sb<pos:position pos:line="9" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="25">hint<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">len<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">strftime<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name><name pos:line="10" pos:column="24">sb<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">buf<pos:position pos:line="10" pos:column="31"/></name></name> <operator pos:line="10" pos:column="32">+<pos:position pos:line="10" pos:column="33"/></operator> <name><name pos:line="10" pos:column="34">sb<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">len<pos:position pos:line="10" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="43">sb<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">-&gt;<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="47">alloc<pos:position pos:line="10" pos:column="52"/></name></name> <operator pos:line="10" pos:column="53">-<pos:position pos:line="10" pos:column="54"/></operator> <name><name pos:line="10" pos:column="55">sb<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">-&gt;<pos:position pos:line="10" pos:column="62"/></operator><name pos:line="10" pos:column="59">len<pos:position pos:line="10" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="64">fmt<pos:position pos:line="10" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="69">tm<pos:position pos:line="10" pos:column="71"/></name></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="73"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">len<pos:position pos:line="12" pos:column="17"/></name></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18"> <block pos:line="12" pos:column="19">{
		<comment type="block" pos:line="13" pos:column="17">/*
		 * strftime reports "0" if it could not fit the result in the buffer.
		 * Unfortunately, it also reports "0" if the requested time string
		 * takes 0 bytes. So our strategy is to munge the format so that the
		 * output contains at least one character, and then drop the extra
		 * character before returning.
		 */</comment>
		<decl_stmt><decl><type><name><name pos:line="20" pos:column="17">struct<pos:position pos:line="20" pos:column="23"/></name> <name pos:line="20" pos:column="24">strbuf<pos:position pos:line="20" pos:column="30"/></name></name></type> <name pos:line="20" pos:column="31">munged_fmt<pos:position pos:line="20" pos:column="41"/></name> <init pos:line="20" pos:column="42">= <expr><name pos:line="20" pos:column="44">STRBUF_INIT<pos:position pos:line="20" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="56"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">strbuf_addf<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><operator pos:line="21" pos:column="29">&amp;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="30">munged_fmt<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="42">"%s "<pos:position pos:line="21" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="49">fmt<pos:position pos:line="21" pos:column="52"/></name></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt>
		<while pos:line="22" pos:column="17">while <condition pos:line="22" pos:column="23">(<expr><operator pos:line="22" pos:column="24">!<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">len<pos:position pos:line="22" pos:column="28"/></name></expr>)<pos:position pos:line="22" pos:column="29"/></condition> <block pos:line="22" pos:column="30">{
			<expr_stmt><expr><name pos:line="23" pos:column="25">hint<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">*=<pos:position pos:line="23" pos:column="32"/></operator> <literal type="number" pos:line="23" pos:column="33">2<pos:position pos:line="23" pos:column="34"/></literal></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">strbuf_grow<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><name pos:line="24" pos:column="37">sb<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">hint<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="25" pos:column="25">len<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator> <call><name pos:line="25" pos:column="31">strftime<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">(<argument><expr><name><name pos:line="25" pos:column="40">sb<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">buf<pos:position pos:line="25" pos:column="47"/></name></name> <operator pos:line="25" pos:column="48">+<pos:position pos:line="25" pos:column="49"/></operator> <name><name pos:line="25" pos:column="50">sb<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">-&gt;<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="54">len<pos:position pos:line="25" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="59">sb<pos:position pos:line="25" pos:column="61"/></name><operator pos:line="25" pos:column="61">-&gt;<pos:position pos:line="25" pos:column="66"/></operator><name pos:line="25" pos:column="63">alloc<pos:position pos:line="25" pos:column="68"/></name></name> <operator pos:line="25" pos:column="69">-<pos:position pos:line="25" pos:column="70"/></operator> <name><name pos:line="25" pos:column="71">sb<pos:position pos:line="25" pos:column="73"/></name><operator pos:line="25" pos:column="73">-&gt;<pos:position pos:line="25" pos:column="78"/></operator><name pos:line="25" pos:column="75">len<pos:position pos:line="25" pos:column="78"/></name></name></expr></argument>,
				       <argument><expr><name><name pos:line="26" pos:column="40">munged_fmt<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">.<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="51">buf<pos:position pos:line="26" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="56">tm<pos:position pos:line="26" pos:column="58"/></name></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="60"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></while>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">strbuf_release<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><operator pos:line="28" pos:column="32">&amp;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="33">munged_fmt<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">len<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">--<pos:position pos:line="29" pos:column="22"/></operator></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt> <comment type="block" pos:line="29" pos:column="24">/* drop munged space */</comment>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">strbuf_setlen<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">sb<pos:position pos:line="31" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="27">sb<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">len<pos:position pos:line="31" pos:column="34"/></name></name> <operator pos:line="31" pos:column="35">+<pos:position pos:line="31" pos:column="36"/></operator> <name pos:line="31" pos:column="37">len<pos:position pos:line="31" pos:column="40"/></name></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

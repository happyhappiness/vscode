<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6647_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">githstrerror<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">int<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">err<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name></type> <name><name pos:line="3" pos:column="21">buffer<pos:position pos:line="3" pos:column="27"/></name><index pos:line="3" pos:column="27">[<expr><literal type="number" pos:line="3" pos:column="28">48<pos:position pos:line="3" pos:column="30"/></literal></expr>]<pos:position pos:line="3" pos:column="31"/></index></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<switch pos:line="4" pos:column="9">switch <condition pos:line="4" pos:column="16">(<expr><name pos:line="4" pos:column="17">err<pos:position pos:line="4" pos:column="20"/></name></expr>)<pos:position pos:line="4" pos:column="21"/></condition>
	<block pos:line="5" pos:column="9">{
	<case pos:line="6" pos:column="9">case <expr><name pos:line="6" pos:column="14">HOST_NOT_FOUND<pos:position pos:line="6" pos:column="28"/></name></expr>:<pos:position pos:line="6" pos:column="29"/></case>
		<return pos:line="7" pos:column="17">return <expr><literal type="string" pos:line="7" pos:column="24">"Authoritative answer: host not found"<pos:position pos:line="7" pos:column="62"/></literal></expr>;<pos:position pos:line="7" pos:column="63"/></return>
	<case pos:line="8" pos:column="9">case <expr><name pos:line="8" pos:column="14">NO_DATA<pos:position pos:line="8" pos:column="21"/></name></expr>:<pos:position pos:line="8" pos:column="22"/></case>
		<return pos:line="9" pos:column="17">return <expr><literal type="string" pos:line="9" pos:column="24">"Valid name, no data record of requested type"<pos:position pos:line="9" pos:column="70"/></literal></expr>;<pos:position pos:line="9" pos:column="71"/></return>
	<case pos:line="10" pos:column="9">case <expr><name pos:line="10" pos:column="14">NO_RECOVERY<pos:position pos:line="10" pos:column="25"/></name></expr>:<pos:position pos:line="10" pos:column="26"/></case>
		<return pos:line="11" pos:column="17">return <expr><literal type="string" pos:line="11" pos:column="24">"Non recoverable errors, FORMERR, REFUSED, NOTIMP"<pos:position pos:line="11" pos:column="74"/></literal></expr>;<pos:position pos:line="11" pos:column="75"/></return>
	<case pos:line="12" pos:column="9">case <expr><name pos:line="12" pos:column="14">TRY_AGAIN<pos:position pos:line="12" pos:column="23"/></name></expr>:<pos:position pos:line="12" pos:column="24"/></case>
		<return pos:line="13" pos:column="17">return <expr><literal type="string" pos:line="13" pos:column="24">"Non-authoritative \"host not found\", or SERVERFAIL"<pos:position pos:line="13" pos:column="77"/></literal></expr>;<pos:position pos:line="13" pos:column="78"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></switch>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">snprintf<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><name pos:line="15" pos:column="18">buffer<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="26">sizeof<argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">buffer<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="42">"Name resolution error %d"<pos:position pos:line="15" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="70">err<pos:position pos:line="15" pos:column="73"/></name></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="75"/></expr_stmt>
	<return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">buffer<pos:position pos:line="16" pos:column="22"/></name></expr>;<pos:position pos:line="16" pos:column="23"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

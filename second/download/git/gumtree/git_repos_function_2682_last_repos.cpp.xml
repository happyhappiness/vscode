<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2682_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">strbuf_grow<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name><name pos:line="1" pos:column="18">struct<pos:position pos:line="1" pos:column="24"/></name> <name pos:line="1" pos:column="25">strbuf<pos:position pos:line="1" pos:column="31"/></name></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">sb<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">size_t<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">extra<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">new_buf<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><operator pos:line="3" pos:column="23">!<pos:position pos:line="3" pos:column="24"/></operator><name><name pos:line="3" pos:column="24">sb<pos:position pos:line="3" pos:column="26"/></name><operator pos:line="3" pos:column="26">-&gt;<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="28">alloc<pos:position pos:line="3" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><call><name pos:line="4" pos:column="13">unsigned_add_overflows<pos:position pos:line="4" pos:column="35"/></name><argument_list pos:line="4" pos:column="35">(<argument><expr><name pos:line="4" pos:column="36">extra<pos:position pos:line="4" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="43">1<pos:position pos:line="4" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="45"/></argument_list></call> <operator pos:line="4" pos:column="46">||<pos:position pos:line="4" pos:column="48"/></operator>
	    <call><name pos:line="5" pos:column="13">unsigned_add_overflows<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">(<argument><expr><name><name pos:line="5" pos:column="36">sb<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">-&gt;<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="40">len<pos:position pos:line="5" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="45">extra<pos:position pos:line="5" pos:column="50"/></name> <operator pos:line="5" pos:column="51">+<pos:position pos:line="5" pos:column="52"/></operator> <literal type="number" pos:line="5" pos:column="53">1<pos:position pos:line="5" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="56"/></condition><then pos:line="5" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">die<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="string" pos:line="6" pos:column="21">"you want to use way too much memory"<pos:position pos:line="6" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="60"/></expr_stmt></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">new_buf<pos:position pos:line="7" pos:column="20"/></name></expr>)<pos:position pos:line="7" pos:column="21"/></condition><then pos:line="7" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="17">sb<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">buf<pos:position pos:line="8" pos:column="24"/></name></name> <operator pos:line="8" pos:column="25">=<pos:position pos:line="8" pos:column="26"/></operator> <name pos:line="8" pos:column="27">NULL<pos:position pos:line="8" pos:column="31"/></name></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">ALLOC_GROW<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name><name pos:line="9" pos:column="20">sb<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">buf<pos:position pos:line="9" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="29">sb<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">len<pos:position pos:line="9" pos:column="36"/></name></name> <operator pos:line="9" pos:column="37">+<pos:position pos:line="9" pos:column="38"/></operator> <name pos:line="9" pos:column="39">extra<pos:position pos:line="9" pos:column="44"/></name> <operator pos:line="9" pos:column="45">+<pos:position pos:line="9" pos:column="46"/></operator> <literal type="number" pos:line="9" pos:column="47">1<pos:position pos:line="9" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="50">sb<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">-&gt;<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="54">alloc<pos:position pos:line="9" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">new_buf<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="17">sb<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">buf<pos:position pos:line="11" pos:column="24"/></name><index pos:line="11" pos:column="24">[<expr><literal type="number" pos:line="11" pos:column="25">0<pos:position pos:line="11" pos:column="26"/></literal></expr>]<pos:position pos:line="11" pos:column="27"/></index></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <literal type="char" pos:line="11" pos:column="30">'\0'<pos:position pos:line="11" pos:column="34"/></literal></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt></block></then></if>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

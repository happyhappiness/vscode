<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_652_git-2.5.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">remove_redundant<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">commit<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">array<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">cnt<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/*
	 * Some commit in the array may be an ancestor of
	 * another commit.  Move such commit to the end of
	 * the array, and return the number of commits that
	 * are independent from each other.
	 */</comment>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">commit<pos:position pos:line="9" pos:column="22"/></name></name> <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier><modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">work<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">unsigned<pos:position pos:line="10" pos:column="17"/></name> <name pos:line="10" pos:column="18">char<pos:position pos:line="10" pos:column="22"/></name> <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="24">redundant<pos:position pos:line="10" pos:column="33"/></name></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name> <modifier pos:line="11" pos:column="13">*<pos:position pos:line="11" pos:column="14"/></modifier></type><name pos:line="11" pos:column="14">filled_index<pos:position pos:line="11" pos:column="26"/></name></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">i<pos:position pos:line="12" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="16">j<pos:position pos:line="12" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="19">filled<pos:position pos:line="12" pos:column="25"/></name></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>

	<expr_stmt><expr><name pos:line="14" pos:column="9">work<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">xcalloc<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">cnt<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="29">sizeof<argument_list pos:line="14" pos:column="35">(<argument><expr><operator pos:line="14" pos:column="36">*<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">work<pos:position pos:line="14" pos:column="41"/></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">redundant<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">xcalloc<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">cnt<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="34">1<pos:position pos:line="15" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">filled_index<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <call><name pos:line="16" pos:column="24">xmalloc<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><sizeof pos:line="16" pos:column="32">sizeof<argument_list pos:line="16" pos:column="38">(<argument><expr><operator pos:line="16" pos:column="39">*<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="40">filled_index<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></sizeof> <operator pos:line="16" pos:column="54">*<pos:position pos:line="16" pos:column="55"/></operator> <operator pos:line="16" pos:column="56">(<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="57">cnt<pos:position pos:line="16" pos:column="60"/></name> <operator pos:line="16" pos:column="61">-<pos:position pos:line="16" pos:column="62"/></operator> <literal type="number" pos:line="16" pos:column="63">1<pos:position pos:line="16" pos:column="64"/></literal><operator pos:line="16" pos:column="64">)<pos:position pos:line="16" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt>

	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="25">cnt<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></condition> <incr><expr><name pos:line="18" pos:column="30">i<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">++<pos:position pos:line="18" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="34"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">parse_commit<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name><name pos:line="19" pos:column="30">array<pos:position pos:line="19" pos:column="35"/></name><index pos:line="19" pos:column="35">[<expr><name pos:line="19" pos:column="36">i<pos:position pos:line="19" pos:column="37"/></name></expr>]<pos:position pos:line="19" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt></block></for>
	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">i<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></init> <condition><expr><name pos:line="20" pos:column="21">i<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="25">cnt<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></condition> <incr><expr><name pos:line="20" pos:column="30">i<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">++<pos:position pos:line="20" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="34"/></control> <block pos:line="20" pos:column="35">{
		<decl_stmt><decl><type><name><name pos:line="21" pos:column="17">struct<pos:position pos:line="21" pos:column="23"/></name> <name pos:line="21" pos:column="24">commit_list<pos:position pos:line="21" pos:column="35"/></name></name> <modifier pos:line="21" pos:column="36">*<pos:position pos:line="21" pos:column="37"/></modifier></type><name pos:line="21" pos:column="37">common<pos:position pos:line="21" pos:column="43"/></name></decl>;<pos:position pos:line="21" pos:column="44"/></decl_stmt>

		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name><name pos:line="23" pos:column="21">redundant<pos:position pos:line="23" pos:column="30"/></name><index pos:line="23" pos:column="30">[<expr><name pos:line="23" pos:column="31">i<pos:position pos:line="23" pos:column="32"/></name></expr>]<pos:position pos:line="23" pos:column="33"/></index></name></expr>)<pos:position pos:line="23" pos:column="34"/></condition><then pos:line="23" pos:column="34">
			<block type="pseudo"><continue pos:line="24" pos:column="25">continue;<pos:position pos:line="24" pos:column="34"/></continue></block></then></if>
		<for pos:line="25" pos:column="17">for <control pos:line="25" pos:column="21">(<init><expr><name pos:line="25" pos:column="22">j<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <name pos:line="25" pos:column="26">filled<pos:position pos:line="25" pos:column="32"/></name> <operator pos:line="25" pos:column="33">=<pos:position pos:line="25" pos:column="34"/></operator> <literal type="number" pos:line="25" pos:column="35">0<pos:position pos:line="25" pos:column="36"/></literal></expr>;<pos:position pos:line="25" pos:column="37"/></init> <condition><expr><name pos:line="25" pos:column="38">j<pos:position pos:line="25" pos:column="39"/></name> <operator pos:line="25" pos:column="40">&lt;<pos:position pos:line="25" pos:column="44"/></operator> <name pos:line="25" pos:column="42">cnt<pos:position pos:line="25" pos:column="45"/></name></expr>;<pos:position pos:line="25" pos:column="46"/></condition> <incr><expr><name pos:line="25" pos:column="47">j<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">++<pos:position pos:line="25" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="51"/></control> <block pos:line="25" pos:column="52">{
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><name pos:line="26" pos:column="29">i<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">==<pos:position pos:line="26" pos:column="33"/></operator> <name pos:line="26" pos:column="34">j<pos:position pos:line="26" pos:column="35"/></name> <operator pos:line="26" pos:column="36">||<pos:position pos:line="26" pos:column="38"/></operator> <name><name pos:line="26" pos:column="39">redundant<pos:position pos:line="26" pos:column="48"/></name><index pos:line="26" pos:column="48">[<expr><name pos:line="26" pos:column="49">j<pos:position pos:line="26" pos:column="50"/></name></expr>]<pos:position pos:line="26" pos:column="51"/></index></name></expr>)<pos:position pos:line="26" pos:column="52"/></condition><then pos:line="26" pos:column="52">
				<block type="pseudo"><continue pos:line="27" pos:column="33">continue;<pos:position pos:line="27" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name><name pos:line="28" pos:column="25">filled_index<pos:position pos:line="28" pos:column="37"/></name><index pos:line="28" pos:column="37">[<expr><name pos:line="28" pos:column="38">filled<pos:position pos:line="28" pos:column="44"/></name></expr>]<pos:position pos:line="28" pos:column="45"/></index></name> <operator pos:line="28" pos:column="46">=<pos:position pos:line="28" pos:column="47"/></operator> <name pos:line="28" pos:column="48">j<pos:position pos:line="28" pos:column="49"/></name></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="29" pos:column="25">work<pos:position pos:line="29" pos:column="29"/></name><index pos:line="29" pos:column="29">[<expr><name pos:line="29" pos:column="30">filled<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">++<pos:position pos:line="29" pos:column="38"/></operator></expr>]<pos:position pos:line="29" pos:column="39"/></index></name> <operator pos:line="29" pos:column="40">=<pos:position pos:line="29" pos:column="41"/></operator> <name><name pos:line="29" pos:column="42">array<pos:position pos:line="29" pos:column="47"/></name><index pos:line="29" pos:column="47">[<expr><name pos:line="29" pos:column="48">j<pos:position pos:line="29" pos:column="49"/></name></expr>]<pos:position pos:line="29" pos:column="50"/></index></name></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="30" pos:column="18"/></block></for>
		<expr_stmt><expr><name pos:line="31" pos:column="17">common<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <call><name pos:line="31" pos:column="26">paint_down_to_common<pos:position pos:line="31" pos:column="46"/></name><argument_list pos:line="31" pos:column="46">(<argument><expr><name><name pos:line="31" pos:column="47">array<pos:position pos:line="31" pos:column="52"/></name><index pos:line="31" pos:column="52">[<expr><name pos:line="31" pos:column="53">i<pos:position pos:line="31" pos:column="54"/></name></expr>]<pos:position pos:line="31" pos:column="55"/></index></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="57">filled<pos:position pos:line="31" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="65">work<pos:position pos:line="31" pos:column="69"/></name></expr></argument>)<pos:position pos:line="31" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="71"/></expr_stmt>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name><name pos:line="32" pos:column="21">array<pos:position pos:line="32" pos:column="26"/></name><index pos:line="32" pos:column="26">[<expr><name pos:line="32" pos:column="27">i<pos:position pos:line="32" pos:column="28"/></name></expr>]<pos:position pos:line="32" pos:column="29"/></index></name><operator pos:line="32" pos:column="29">-&gt;<pos:position pos:line="32" pos:column="34"/></operator><name><name pos:line="32" pos:column="31">object<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">.<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="38">flags<pos:position pos:line="32" pos:column="43"/></name></name> <operator pos:line="32" pos:column="44">&amp;<pos:position pos:line="32" pos:column="49"/></operator> <name pos:line="32" pos:column="46">PARENT2<pos:position pos:line="32" pos:column="53"/></name></expr>)<pos:position pos:line="32" pos:column="54"/></condition><then pos:line="32" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="33" pos:column="25">redundant<pos:position pos:line="33" pos:column="34"/></name><index pos:line="33" pos:column="34">[<expr><name pos:line="33" pos:column="35">i<pos:position pos:line="33" pos:column="36"/></name></expr>]<pos:position pos:line="33" pos:column="37"/></index></name> <operator pos:line="33" pos:column="38">=<pos:position pos:line="33" pos:column="39"/></operator> <literal type="number" pos:line="33" pos:column="40">1<pos:position pos:line="33" pos:column="41"/></literal></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt></block></then></if>
		<for pos:line="34" pos:column="17">for <control pos:line="34" pos:column="21">(<init><expr><name pos:line="34" pos:column="22">j<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">=<pos:position pos:line="34" pos:column="25"/></operator> <literal type="number" pos:line="34" pos:column="26">0<pos:position pos:line="34" pos:column="27"/></literal></expr>;<pos:position pos:line="34" pos:column="28"/></init> <condition><expr><name pos:line="34" pos:column="29">j<pos:position pos:line="34" pos:column="30"/></name> <operator pos:line="34" pos:column="31">&lt;<pos:position pos:line="34" pos:column="35"/></operator> <name pos:line="34" pos:column="33">filled<pos:position pos:line="34" pos:column="39"/></name></expr>;<pos:position pos:line="34" pos:column="40"/></condition> <incr><expr><name pos:line="34" pos:column="41">j<pos:position pos:line="34" pos:column="42"/></name><operator pos:line="34" pos:column="42">++<pos:position pos:line="34" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="45"/></control>
			<block type="pseudo"><if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><name><name pos:line="35" pos:column="29">work<pos:position pos:line="35" pos:column="33"/></name><index pos:line="35" pos:column="33">[<expr><name pos:line="35" pos:column="34">j<pos:position pos:line="35" pos:column="35"/></name></expr>]<pos:position pos:line="35" pos:column="36"/></index></name><operator pos:line="35" pos:column="36">-&gt;<pos:position pos:line="35" pos:column="41"/></operator><name><name pos:line="35" pos:column="38">object<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">.<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="45">flags<pos:position pos:line="35" pos:column="50"/></name></name> <operator pos:line="35" pos:column="51">&amp;<pos:position pos:line="35" pos:column="56"/></operator> <name pos:line="35" pos:column="53">PARENT1<pos:position pos:line="35" pos:column="60"/></name></expr>)<pos:position pos:line="35" pos:column="61"/></condition><then pos:line="35" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="33">redundant<pos:position pos:line="36" pos:column="42"/></name><index pos:line="36" pos:column="42">[<expr><name><name pos:line="36" pos:column="43">filled_index<pos:position pos:line="36" pos:column="55"/></name><index pos:line="36" pos:column="55">[<expr><name pos:line="36" pos:column="56">j<pos:position pos:line="36" pos:column="57"/></name></expr>]<pos:position pos:line="36" pos:column="58"/></index></name></expr>]<pos:position pos:line="36" pos:column="59"/></index></name> <operator pos:line="36" pos:column="60">=<pos:position pos:line="36" pos:column="61"/></operator> <literal type="number" pos:line="36" pos:column="62">1<pos:position pos:line="36" pos:column="63"/></literal></expr>;<pos:position pos:line="36" pos:column="64"/></expr_stmt></block></then></if></block></for>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">clear_commit_marks<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><name><name pos:line="37" pos:column="36">array<pos:position pos:line="37" pos:column="41"/></name><index pos:line="37" pos:column="41">[<expr><name pos:line="37" pos:column="42">i<pos:position pos:line="37" pos:column="43"/></name></expr>]<pos:position pos:line="37" pos:column="44"/></index></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="46">all_flags<pos:position pos:line="37" pos:column="55"/></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="57"/></expr_stmt>
		<for pos:line="38" pos:column="17">for <control pos:line="38" pos:column="21">(<init><expr><name pos:line="38" pos:column="22">j<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <literal type="number" pos:line="38" pos:column="26">0<pos:position pos:line="38" pos:column="27"/></literal></expr>;<pos:position pos:line="38" pos:column="28"/></init> <condition><expr><name pos:line="38" pos:column="29">j<pos:position pos:line="38" pos:column="30"/></name> <operator pos:line="38" pos:column="31">&lt;<pos:position pos:line="38" pos:column="35"/></operator> <name pos:line="38" pos:column="33">filled<pos:position pos:line="38" pos:column="39"/></name></expr>;<pos:position pos:line="38" pos:column="40"/></condition> <incr><expr><name pos:line="38" pos:column="41">j<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">++<pos:position pos:line="38" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="45"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="25">clear_commit_marks<pos:position pos:line="39" pos:column="43"/></name><argument_list pos:line="39" pos:column="43">(<argument><expr><name><name pos:line="39" pos:column="44">work<pos:position pos:line="39" pos:column="48"/></name><index pos:line="39" pos:column="48">[<expr><name pos:line="39" pos:column="49">j<pos:position pos:line="39" pos:column="50"/></name></expr>]<pos:position pos:line="39" pos:column="51"/></index></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="53">all_flags<pos:position pos:line="39" pos:column="62"/></name></expr></argument>)<pos:position pos:line="39" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="64"/></expr_stmt></block></for>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">free_commit_list<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">common<pos:position pos:line="40" pos:column="40"/></name></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></for>

	<comment type="block" pos:line="43" pos:column="9">/* Now collect the result */</comment>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">memcpy<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><name pos:line="44" pos:column="16">work<pos:position pos:line="44" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="22">array<pos:position pos:line="44" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="29">sizeof<argument_list pos:line="44" pos:column="35">(<argument><expr><operator pos:line="44" pos:column="36">*<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="37">array<pos:position pos:line="44" pos:column="42"/></name></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></sizeof> <operator pos:line="44" pos:column="44">*<pos:position pos:line="44" pos:column="45"/></operator> <name pos:line="44" pos:column="46">cnt<pos:position pos:line="44" pos:column="49"/></name></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>
	<for pos:line="45" pos:column="9">for <control pos:line="45" pos:column="13">(<init><expr><name pos:line="45" pos:column="14">i<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <name pos:line="45" pos:column="18">filled<pos:position pos:line="45" pos:column="24"/></name> <operator pos:line="45" pos:column="25">=<pos:position pos:line="45" pos:column="26"/></operator> <literal type="number" pos:line="45" pos:column="27">0<pos:position pos:line="45" pos:column="28"/></literal></expr>;<pos:position pos:line="45" pos:column="29"/></init> <condition><expr><name pos:line="45" pos:column="30">i<pos:position pos:line="45" pos:column="31"/></name> <operator pos:line="45" pos:column="32">&lt;<pos:position pos:line="45" pos:column="36"/></operator> <name pos:line="45" pos:column="34">cnt<pos:position pos:line="45" pos:column="37"/></name></expr>;<pos:position pos:line="45" pos:column="38"/></condition> <incr><expr><name pos:line="45" pos:column="39">i<pos:position pos:line="45" pos:column="40"/></name><operator pos:line="45" pos:column="40">++<pos:position pos:line="45" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="45" pos:column="43"/></control>
		<block type="pseudo"><if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><operator pos:line="46" pos:column="21">!<pos:position pos:line="46" pos:column="22"/></operator><name><name pos:line="46" pos:column="22">redundant<pos:position pos:line="46" pos:column="31"/></name><index pos:line="46" pos:column="31">[<expr><name pos:line="46" pos:column="32">i<pos:position pos:line="46" pos:column="33"/></name></expr>]<pos:position pos:line="46" pos:column="34"/></index></name></expr>)<pos:position pos:line="46" pos:column="35"/></condition><then pos:line="46" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="25">array<pos:position pos:line="47" pos:column="30"/></name><index pos:line="47" pos:column="30">[<expr><name pos:line="47" pos:column="31">filled<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">++<pos:position pos:line="47" pos:column="39"/></operator></expr>]<pos:position pos:line="47" pos:column="40"/></index></name> <operator pos:line="47" pos:column="41">=<pos:position pos:line="47" pos:column="42"/></operator> <name><name pos:line="47" pos:column="43">work<pos:position pos:line="47" pos:column="47"/></name><index pos:line="47" pos:column="47">[<expr><name pos:line="47" pos:column="48">i<pos:position pos:line="47" pos:column="49"/></name></expr>]<pos:position pos:line="47" pos:column="50"/></index></name></expr>;<pos:position pos:line="47" pos:column="51"/></expr_stmt></block></then></if></block></for>
	<for pos:line="48" pos:column="9">for <control pos:line="48" pos:column="13">(<init><expr><name pos:line="48" pos:column="14">j<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <name pos:line="48" pos:column="18">filled<pos:position pos:line="48" pos:column="24"/></name></expr><operator pos:line="48" pos:column="24">,<pos:position pos:line="48" pos:column="25"/></operator> <expr><name pos:line="48" pos:column="26">i<pos:position pos:line="48" pos:column="27"/></name> <operator pos:line="48" pos:column="28">=<pos:position pos:line="48" pos:column="29"/></operator> <literal type="number" pos:line="48" pos:column="30">0<pos:position pos:line="48" pos:column="31"/></literal></expr>;<pos:position pos:line="48" pos:column="32"/></init> <condition><expr><name pos:line="48" pos:column="33">i<pos:position pos:line="48" pos:column="34"/></name> <operator pos:line="48" pos:column="35">&lt;<pos:position pos:line="48" pos:column="39"/></operator> <name pos:line="48" pos:column="37">cnt<pos:position pos:line="48" pos:column="40"/></name></expr>;<pos:position pos:line="48" pos:column="41"/></condition> <incr><expr><name pos:line="48" pos:column="42">i<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">++<pos:position pos:line="48" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="48" pos:column="46"/></control>
		<block type="pseudo"><if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name><name pos:line="49" pos:column="21">redundant<pos:position pos:line="49" pos:column="30"/></name><index pos:line="49" pos:column="30">[<expr><name pos:line="49" pos:column="31">i<pos:position pos:line="49" pos:column="32"/></name></expr>]<pos:position pos:line="49" pos:column="33"/></index></name></expr>)<pos:position pos:line="49" pos:column="34"/></condition><then pos:line="49" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="25">array<pos:position pos:line="50" pos:column="30"/></name><index pos:line="50" pos:column="30">[<expr><name pos:line="50" pos:column="31">j<pos:position pos:line="50" pos:column="32"/></name><operator pos:line="50" pos:column="32">++<pos:position pos:line="50" pos:column="34"/></operator></expr>]<pos:position pos:line="50" pos:column="35"/></index></name> <operator pos:line="50" pos:column="36">=<pos:position pos:line="50" pos:column="37"/></operator> <name><name pos:line="50" pos:column="38">work<pos:position pos:line="50" pos:column="42"/></name><index pos:line="50" pos:column="42">[<expr><name pos:line="50" pos:column="43">i<pos:position pos:line="50" pos:column="44"/></name></expr>]<pos:position pos:line="50" pos:column="45"/></index></name></expr>;<pos:position pos:line="50" pos:column="46"/></expr_stmt></block></then></if></block></for>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">free<pos:position pos:line="51" pos:column="13"/></name><argument_list pos:line="51" pos:column="13">(<argument><expr><name pos:line="51" pos:column="14">work<pos:position pos:line="51" pos:column="18"/></name></expr></argument>)<pos:position pos:line="51" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">free<pos:position pos:line="52" pos:column="13"/></name><argument_list pos:line="52" pos:column="13">(<argument><expr><name pos:line="52" pos:column="14">redundant<pos:position pos:line="52" pos:column="23"/></name></expr></argument>)<pos:position pos:line="52" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="53" pos:column="9">free<pos:position pos:line="53" pos:column="13"/></name><argument_list pos:line="53" pos:column="13">(<argument><expr><name pos:line="53" pos:column="14">filled_index<pos:position pos:line="53" pos:column="26"/></name></expr></argument>)<pos:position pos:line="53" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="28"/></expr_stmt>
	<return pos:line="54" pos:column="9">return <expr><name pos:line="54" pos:column="16">filled<pos:position pos:line="54" pos:column="22"/></name></expr>;<pos:position pos:line="54" pos:column="23"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

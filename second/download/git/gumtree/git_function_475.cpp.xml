<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_475.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">prepare_possible_alternates<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">sm_name<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">string_list<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">reference<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">sm_alternate<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">NULL<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="36">*<pos:position pos:line="4" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="37">error_strategy<pos:position pos:line="4" pos:column="51"/></name> <init pos:line="4" pos:column="52">= <expr><name pos:line="4" pos:column="54">NULL<pos:position pos:line="4" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">submodule_alternate_setup<pos:position pos:line="5" pos:column="41"/></name></name></type> <name pos:line="5" pos:column="42">sas<pos:position pos:line="5" pos:column="45"/></name> <init pos:line="5" pos:column="46">= <expr><name pos:line="5" pos:column="48">SUBMODULE_ALTERNATE_SETUP_INIT<pos:position pos:line="5" pos:column="78"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="79"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">git_config_get_string<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><literal type="string" pos:line="7" pos:column="31">"submodule.alternateLocation"<pos:position pos:line="7" pos:column="60"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="62">&amp;<pos:position pos:line="7" pos:column="67"/></operator><name pos:line="7" pos:column="63">sm_alternate<pos:position pos:line="7" pos:column="75"/></name></expr></argument>)<pos:position pos:line="7" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="77"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">sm_alternate<pos:position pos:line="8" pos:column="26"/></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27">
		<block type="pseudo"><return pos:line="9" pos:column="17">return;<pos:position pos:line="9" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">git_config_get_string<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><literal type="string" pos:line="11" pos:column="31">"submodule.alternateErrorStrategy"<pos:position pos:line="11" pos:column="65"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="67">&amp;<pos:position pos:line="11" pos:column="72"/></operator><name pos:line="11" pos:column="68">error_strategy<pos:position pos:line="11" pos:column="82"/></name></expr></argument>)<pos:position pos:line="11" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="84"/></expr_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">error_strategy<pos:position pos:line="13" pos:column="28"/></name></expr>)<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">error_strategy<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">=<pos:position pos:line="14" pos:column="33"/></operator> <call><name pos:line="14" pos:column="34">xstrdup<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">(<argument><expr><literal type="string" pos:line="14" pos:column="42">"die"<pos:position pos:line="14" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="16" pos:column="9">sas<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">.<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">submodule_name<pos:position pos:line="16" pos:column="27"/></name></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <name pos:line="16" pos:column="30">sm_name<pos:position pos:line="16" pos:column="37"/></name></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">sas<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">.<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">reference<pos:position pos:line="17" pos:column="22"/></name></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">reference<pos:position pos:line="17" pos:column="34"/></name></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><call><name pos:line="18" pos:column="14">strcmp<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">error_strategy<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="37">"die"<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="44"/></condition><then pos:line="18" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="17">sas<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">.<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">error_mode<pos:position pos:line="19" pos:column="31"/></name></name> <operator pos:line="19" pos:column="32">=<pos:position pos:line="19" pos:column="33"/></operator> <name pos:line="19" pos:column="34">SUBMODULE_ALTERNATE_ERROR_DIE<pos:position pos:line="19" pos:column="63"/></name></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt></block></then>
	<elseif pos:line="20" pos:column="9">else <if pos:line="20" pos:column="14">if <condition pos:line="20" pos:column="17">(<expr><operator pos:line="20" pos:column="18">!<pos:position pos:line="20" pos:column="19"/></operator><call><name pos:line="20" pos:column="19">strcmp<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">error_strategy<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="42">"info"<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="50"/></condition><then pos:line="20" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="17">sas<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">.<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">error_mode<pos:position pos:line="21" pos:column="31"/></name></name> <operator pos:line="21" pos:column="32">=<pos:position pos:line="21" pos:column="33"/></operator> <name pos:line="21" pos:column="34">SUBMODULE_ALTERNATE_ERROR_INFO<pos:position pos:line="21" pos:column="64"/></name></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="22" pos:column="9">else <if pos:line="22" pos:column="14">if <condition pos:line="22" pos:column="17">(<expr><operator pos:line="22" pos:column="18">!<pos:position pos:line="22" pos:column="19"/></operator><call><name pos:line="22" pos:column="19">strcmp<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">error_strategy<pos:position pos:line="22" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="42">"ignore"<pos:position pos:line="22" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="52"/></condition><then pos:line="22" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="17">sas<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">.<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">error_mode<pos:position pos:line="23" pos:column="31"/></name></name> <operator pos:line="23" pos:column="32">=<pos:position pos:line="23" pos:column="33"/></operator> <name pos:line="23" pos:column="34">SUBMODULE_ALTERNATE_ERROR_IGNORE<pos:position pos:line="23" pos:column="66"/></name></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt></block></then></if></elseif>
	<else pos:line="24" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">die<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><call><name pos:line="25" pos:column="21">_<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><literal type="string" pos:line="25" pos:column="23">"Value '%s' for submodule.alternateErrorStrategy is not recognized"<pos:position pos:line="25" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="25" pos:column="93">error_strategy<pos:position pos:line="25" pos:column="107"/></name></expr></argument>)<pos:position pos:line="25" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="109"/></expr_stmt></block></else></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><call><name pos:line="27" pos:column="14">strcmp<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">sm_alternate<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="35">"superproject"<pos:position pos:line="27" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="51"/></condition><then pos:line="27" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">foreach_alt_odb<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">add_possible_reference_from_superproject<pos:position pos:line="28" pos:column="73"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="75">&amp;<pos:position pos:line="28" pos:column="80"/></operator><name pos:line="28" pos:column="76">sas<pos:position pos:line="28" pos:column="79"/></name></expr></argument>)<pos:position pos:line="28" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="81"/></expr_stmt></block></then>
	<elseif pos:line="29" pos:column="9">else <if pos:line="29" pos:column="14">if <condition pos:line="29" pos:column="17">(<expr><operator pos:line="29" pos:column="18">!<pos:position pos:line="29" pos:column="19"/></operator><call><name pos:line="29" pos:column="19">strcmp<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">sm_alternate<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="40">"no"<pos:position pos:line="29" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="46"/></condition><then pos:line="29" pos:column="46">
		<block type="pseudo"><empty_stmt pos:line="30" pos:column="17">;<pos:position pos:line="30" pos:column="18"/></empty_stmt></block></then></if></elseif> <comment type="block" pos:line="30" pos:column="19">/* do nothing */</comment>
	<else pos:line="31" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">die<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><call><name pos:line="32" pos:column="21">_<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><literal type="string" pos:line="32" pos:column="23">"Value '%s' for submodule.alternateLocation is not recognized"<pos:position pos:line="32" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="86"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="32" pos:column="88">sm_alternate<pos:position pos:line="32" pos:column="100"/></name></expr></argument>)<pos:position pos:line="32" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="102"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="34" pos:column="9">free<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><name pos:line="34" pos:column="14">sm_alternate<pos:position pos:line="34" pos:column="26"/></name></expr></argument>)<pos:position pos:line="34" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">free<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">error_strategy<pos:position pos:line="35" pos:column="28"/></name></expr></argument>)<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6783_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">mode_t<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">mode_native_to_git<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">mode_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">native_mode<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">mode_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">perm_bits<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name pos:line="3" pos:column="28">native_mode<pos:position pos:line="3" pos:column="39"/></name> <operator pos:line="3" pos:column="40">&amp;<pos:position pos:line="3" pos:column="45"/></operator> <literal type="number" pos:line="3" pos:column="42">07777<pos:position pos:line="3" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><call><name pos:line="4" pos:column="13">S_ISREG<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">native_mode<pos:position pos:line="4" pos:column="32"/></name></expr></argument>)<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="34"/></condition><then pos:line="4" pos:column="34">
		<block type="pseudo"><return pos:line="5" pos:column="17">return <expr><literal type="number" pos:line="5" pos:column="24">0100000<pos:position pos:line="5" pos:column="31"/></literal> <operator pos:line="5" pos:column="32">|<pos:position pos:line="5" pos:column="33"/></operator> <name pos:line="5" pos:column="34">perm_bits<pos:position pos:line="5" pos:column="43"/></name></expr>;<pos:position pos:line="5" pos:column="44"/></return></block></then></if>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">S_ISDIR<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">native_mode<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><literal type="number" pos:line="7" pos:column="24">0040000<pos:position pos:line="7" pos:column="31"/></literal> <operator pos:line="7" pos:column="32">|<pos:position pos:line="7" pos:column="33"/></operator> <name pos:line="7" pos:column="34">perm_bits<pos:position pos:line="7" pos:column="43"/></name></expr>;<pos:position pos:line="7" pos:column="44"/></return></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">S_ISLNK<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">native_mode<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0120000<pos:position pos:line="9" pos:column="31"/></literal> <operator pos:line="9" pos:column="32">|<pos:position pos:line="9" pos:column="33"/></operator> <name pos:line="9" pos:column="34">perm_bits<pos:position pos:line="9" pos:column="43"/></name></expr>;<pos:position pos:line="9" pos:column="44"/></return></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">S_ISBLK<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">native_mode<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="34"/></condition><then pos:line="10" pos:column="34">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">0060000<pos:position pos:line="11" pos:column="31"/></literal> <operator pos:line="11" pos:column="32">|<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="34">perm_bits<pos:position pos:line="11" pos:column="43"/></name></expr>;<pos:position pos:line="11" pos:column="44"/></return></block></then></if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">S_ISCHR<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">native_mode<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><literal type="number" pos:line="13" pos:column="24">0020000<pos:position pos:line="13" pos:column="31"/></literal> <operator pos:line="13" pos:column="32">|<pos:position pos:line="13" pos:column="33"/></operator> <name pos:line="13" pos:column="34">perm_bits<pos:position pos:line="13" pos:column="43"/></name></expr>;<pos:position pos:line="13" pos:column="44"/></return></block></then></if>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">S_ISFIFO<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">native_mode<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="35"/></condition><then pos:line="14" pos:column="35">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">0010000<pos:position pos:line="15" pos:column="31"/></literal> <operator pos:line="15" pos:column="32">|<pos:position pos:line="15" pos:column="33"/></operator> <name pos:line="15" pos:column="34">perm_bits<pos:position pos:line="15" pos:column="43"/></name></expr>;<pos:position pos:line="15" pos:column="44"/></return></block></then></if>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">S_ISSOCK<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">native_mode<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">0140000<pos:position pos:line="17" pos:column="31"/></literal> <operator pos:line="17" pos:column="32">|<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">perm_bits<pos:position pos:line="17" pos:column="43"/></name></expr>;<pos:position pos:line="17" pos:column="44"/></return></block></then></if>
	<comment type="block" pos:line="18" pos:column="9">/* Non-standard type bits were given. */</comment>
	<return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">perm_bits<pos:position pos:line="19" pos:column="25"/></name></expr>;<pos:position pos:line="19" pos:column="26"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

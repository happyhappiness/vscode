<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5719_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">prepare_bases<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">base_tree_info<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">bases<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
			  <parameter><decl><type><name><name pos:line="2" pos:column="27">struct<pos:position pos:line="2" pos:column="33"/></name> <name pos:line="2" pos:column="34">commit<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">base<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
			  <parameter><decl><type><name><name pos:line="3" pos:column="27">struct<pos:position pos:line="3" pos:column="33"/></name> <name pos:line="3" pos:column="34">commit<pos:position pos:line="3" pos:column="40"/></name></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier><modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">list<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>,
			  <parameter><decl><type><name pos:line="4" pos:column="27">int<pos:position pos:line="4" pos:column="30"/></name></type> <name pos:line="4" pos:column="31">total<pos:position pos:line="4" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="37"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">commit<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">rev_info<pos:position pos:line="7" pos:column="24"/></name></name></type> <name pos:line="7" pos:column="25">revs<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">diff_options<pos:position pos:line="8" pos:column="28"/></name></name></type> <name pos:line="8" pos:column="29">diffopt<pos:position pos:line="8" pos:column="36"/></name></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">base<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19">
		<block type="pseudo"><return pos:line="12" pos:column="17">return;<pos:position pos:line="12" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">diff_setup<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><operator pos:line="14" pos:column="20">&amp;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="21">diffopt<pos:position pos:line="14" pos:column="28"/></name></expr></argument>)<pos:position pos:line="14" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">DIFF_OPT_SET<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><operator pos:line="15" pos:column="22">&amp;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="23">diffopt<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">RECURSIVE<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">diff_setup_done<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><operator pos:line="16" pos:column="25">&amp;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="26">diffopt<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">oidcpy<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><operator pos:line="18" pos:column="16">&amp;<pos:position pos:line="18" pos:column="21"/></operator><name><name pos:line="18" pos:column="17">bases<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">base_commit<pos:position pos:line="18" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="37">&amp;<pos:position pos:line="18" pos:column="42"/></operator><name><name pos:line="18" pos:column="38">base<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">-&gt;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="44">object<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">.<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="51">oid<pos:position pos:line="18" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">init_revisions<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><operator pos:line="20" pos:column="24">&amp;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="25">revs<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">NULL<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">revs<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">.<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">max_parents<pos:position pos:line="21" pos:column="25"/></name></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <literal type="number" pos:line="21" pos:column="28">1<pos:position pos:line="21" pos:column="29"/></literal></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">revs<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">.<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">topo_order<pos:position pos:line="22" pos:column="24"/></name></name> <operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator> <literal type="number" pos:line="22" pos:column="27">1<pos:position pos:line="22" pos:column="28"/></literal></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">i<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">0<pos:position pos:line="23" pos:column="19"/></literal></expr>;<pos:position pos:line="23" pos:column="20"/></init> <condition><expr><name pos:line="23" pos:column="21">i<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">&lt;<pos:position pos:line="23" pos:column="27"/></operator> <name pos:line="23" pos:column="25">total<pos:position pos:line="23" pos:column="30"/></name></expr>;<pos:position pos:line="23" pos:column="31"/></condition> <incr><expr><name pos:line="23" pos:column="32">i<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">++<pos:position pos:line="23" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="36"/></control> <block pos:line="23" pos:column="37">{
		<expr_stmt><expr><name><name pos:line="24" pos:column="17">list<pos:position pos:line="24" pos:column="21"/></name><index pos:line="24" pos:column="21">[<expr><name pos:line="24" pos:column="22">i<pos:position pos:line="24" pos:column="23"/></name></expr>]<pos:position pos:line="24" pos:column="24"/></index></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name><name pos:line="24" pos:column="26">object<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">.<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">flags<pos:position pos:line="24" pos:column="38"/></name></name> <operator pos:line="24" pos:column="39">&amp;=<pos:position pos:line="24" pos:column="45"/></operator> <operator pos:line="24" pos:column="42">~<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="43">UNINTERESTING<pos:position pos:line="24" pos:column="56"/></name></expr>;<pos:position pos:line="24" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">add_pending_object<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><operator pos:line="25" pos:column="36">&amp;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="37">revs<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="43">&amp;<pos:position pos:line="25" pos:column="48"/></operator><name><name pos:line="25" pos:column="44">list<pos:position pos:line="25" pos:column="48"/></name><index pos:line="25" pos:column="48">[<expr><name pos:line="25" pos:column="49">i<pos:position pos:line="25" pos:column="50"/></name></expr>]<pos:position pos:line="25" pos:column="51"/></index></name><operator pos:line="25" pos:column="51">-&gt;<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="53">object<pos:position pos:line="25" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="61">"rev_list"<pos:position pos:line="25" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">list<pos:position pos:line="26" pos:column="21"/></name><index pos:line="26" pos:column="21">[<expr><name pos:line="26" pos:column="22">i<pos:position pos:line="26" pos:column="23"/></name></expr>]<pos:position pos:line="26" pos:column="24"/></index></name><operator pos:line="26" pos:column="24">-&gt;<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="26">util<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">=<pos:position pos:line="26" pos:column="32"/></operator> <operator pos:line="26" pos:column="33">(<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="34">void<pos:position pos:line="26" pos:column="38"/></name> <operator pos:line="26" pos:column="39">*<pos:position pos:line="26" pos:column="40"/></operator><operator pos:line="26" pos:column="40">)<pos:position pos:line="26" pos:column="41"/></operator><literal type="number" pos:line="26" pos:column="41">1<pos:position pos:line="26" pos:column="42"/></literal></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></for>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">base<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">object<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">.<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">flags<pos:position pos:line="28" pos:column="27"/></name></name> <operator pos:line="28" pos:column="28">|=<pos:position pos:line="28" pos:column="30"/></operator> <name pos:line="28" pos:column="31">UNINTERESTING<pos:position pos:line="28" pos:column="44"/></name></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">add_pending_object<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><operator pos:line="29" pos:column="28">&amp;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="29">revs<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="35">&amp;<pos:position pos:line="29" pos:column="40"/></operator><name><name pos:line="29" pos:column="36">base<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">-&gt;<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="42">object<pos:position pos:line="29" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="50">"base"<pos:position pos:line="29" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">prepare_revision_walk<pos:position pos:line="31" pos:column="34"/></name><argument_list pos:line="31" pos:column="34">(<argument><expr><operator pos:line="31" pos:column="35">&amp;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="36">revs<pos:position pos:line="31" pos:column="40"/></name></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="42"/></condition><then pos:line="31" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">die<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><call><name pos:line="32" pos:column="21">_<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><literal type="string" pos:line="32" pos:column="23">"revision walk setup failed"<pos:position pos:line="32" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt></block></then></if>
	<comment type="block" pos:line="33" pos:column="9">/*
	 * Traverse the commits list, get prerequisite patch ids
	 * and stuff them in bases structure.
	 */</comment>
	<while pos:line="37" pos:column="9">while <condition pos:line="37" pos:column="15">(<expr><operator pos:line="37" pos:column="16">(<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">commit<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <call><name pos:line="37" pos:column="26">get_revision<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><operator pos:line="37" pos:column="39">&amp;<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="40">revs<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call><operator pos:line="37" pos:column="45">)<pos:position pos:line="37" pos:column="46"/></operator> <operator pos:line="37" pos:column="47">!=<pos:position pos:line="37" pos:column="49"/></operator> <name pos:line="37" pos:column="50">NULL<pos:position pos:line="37" pos:column="54"/></name></expr>)<pos:position pos:line="37" pos:column="55"/></condition> <block pos:line="37" pos:column="56">{
		<decl_stmt><decl><type><name><name pos:line="38" pos:column="17">struct<pos:position pos:line="38" pos:column="23"/></name> <name pos:line="38" pos:column="24">object_id<pos:position pos:line="38" pos:column="33"/></name></name></type> <name pos:line="38" pos:column="34">oid<pos:position pos:line="38" pos:column="37"/></name></decl>;<pos:position pos:line="38" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="39" pos:column="17">struct<pos:position pos:line="39" pos:column="23"/></name> <name pos:line="39" pos:column="24">object_id<pos:position pos:line="39" pos:column="33"/></name></name> <modifier pos:line="39" pos:column="34">*<pos:position pos:line="39" pos:column="35"/></modifier></type><name pos:line="39" pos:column="35">patch_id<pos:position pos:line="39" pos:column="43"/></name></decl>;<pos:position pos:line="39" pos:column="44"/></decl_stmt>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name><name pos:line="40" pos:column="21">commit<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">-&gt;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="29">util<pos:position pos:line="40" pos:column="33"/></name></name></expr>)<pos:position pos:line="40" pos:column="34"/></condition><then pos:line="40" pos:column="34">
			<block type="pseudo"><continue pos:line="41" pos:column="25">continue;<pos:position pos:line="41" pos:column="34"/></continue></block></then></if>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><call><name pos:line="42" pos:column="21">commit_patch_id<pos:position pos:line="42" pos:column="36"/></name><argument_list pos:line="42" pos:column="36">(<argument><expr><name pos:line="42" pos:column="37">commit<pos:position pos:line="42" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="45">&amp;<pos:position pos:line="42" pos:column="50"/></operator><name pos:line="42" pos:column="46">diffopt<pos:position pos:line="42" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="55">&amp;<pos:position pos:line="42" pos:column="60"/></operator><name pos:line="42" pos:column="56">oid<pos:position pos:line="42" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="61">0<pos:position pos:line="42" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="64"/></condition><then pos:line="42" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="25">die<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><call><name pos:line="43" pos:column="29">_<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><literal type="string" pos:line="43" pos:column="31">"cannot get patch id"<pos:position pos:line="43" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="55"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">ALLOC_GROW<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><name><name pos:line="44" pos:column="28">bases<pos:position pos:line="44" pos:column="33"/></name><operator pos:line="44" pos:column="33">-&gt;<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="35">patch_id<pos:position pos:line="44" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="45">bases<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">-&gt;<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="52">nr_patch_id<pos:position pos:line="44" pos:column="63"/></name></name> <operator pos:line="44" pos:column="64">+<pos:position pos:line="44" pos:column="65"/></operator> <literal type="number" pos:line="44" pos:column="66">1<pos:position pos:line="44" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="69">bases<pos:position pos:line="44" pos:column="74"/></name><operator pos:line="44" pos:column="74">-&gt;<pos:position pos:line="44" pos:column="79"/></operator><name pos:line="44" pos:column="76">alloc_patch_id<pos:position pos:line="44" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="92"/></expr_stmt>
		<expr_stmt><expr><name pos:line="45" pos:column="17">patch_id<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">=<pos:position pos:line="45" pos:column="27"/></operator> <name><name pos:line="45" pos:column="28">bases<pos:position pos:line="45" pos:column="33"/></name><operator pos:line="45" pos:column="33">-&gt;<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="35">patch_id<pos:position pos:line="45" pos:column="43"/></name></name> <operator pos:line="45" pos:column="44">+<pos:position pos:line="45" pos:column="45"/></operator> <name><name pos:line="45" pos:column="46">bases<pos:position pos:line="45" pos:column="51"/></name><operator pos:line="45" pos:column="51">-&gt;<pos:position pos:line="45" pos:column="56"/></operator><name pos:line="45" pos:column="53">nr_patch_id<pos:position pos:line="45" pos:column="64"/></name></name></expr>;<pos:position pos:line="45" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">oidcpy<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><name pos:line="46" pos:column="24">patch_id<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="34">&amp;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="35">oid<pos:position pos:line="46" pos:column="38"/></name></expr></argument>)<pos:position pos:line="46" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="47" pos:column="17">bases<pos:position pos:line="47" pos:column="22"/></name><operator pos:line="47" pos:column="22">-&gt;<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="24">nr_patch_id<pos:position pos:line="47" pos:column="35"/></name></name><operator pos:line="47" pos:column="35">++<pos:position pos:line="47" pos:column="37"/></operator></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></while>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

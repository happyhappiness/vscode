<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6084_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">update_index_from_diff<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">diff_queue_struct<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">q<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">diff_options<pos:position pos:line="2" pos:column="36"/></name></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">opt<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">void<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">data<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">intent_to_add<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><operator pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></operator><operator pos:line="5" pos:column="30">(<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">int<pos:position pos:line="5" pos:column="34"/></name> <operator pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></operator><operator pos:line="5" pos:column="36">)<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="37">data<pos:position pos:line="5" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>

	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <name><name pos:line="7" pos:column="25">q<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">nr<pos:position pos:line="7" pos:column="30"/></name></name></expr>;<pos:position pos:line="7" pos:column="31"/></condition> <incr><expr><name pos:line="7" pos:column="32">i<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">++<pos:position pos:line="7" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="36"/></control> <block pos:line="7" pos:column="37">{
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">diff_filespec<pos:position pos:line="8" pos:column="37"/></name></name> <modifier pos:line="8" pos:column="38">*<pos:position pos:line="8" pos:column="39"/></modifier></type><name pos:line="8" pos:column="39">one<pos:position pos:line="8" pos:column="42"/></name> <init pos:line="8" pos:column="43">= <expr><name><name pos:line="8" pos:column="45">q<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">-&gt;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="48">queue<pos:position pos:line="8" pos:column="53"/></name><index pos:line="8" pos:column="53">[<expr><name pos:line="8" pos:column="54">i<pos:position pos:line="8" pos:column="55"/></name></expr>]<pos:position pos:line="8" pos:column="56"/></index></name><operator pos:line="8" pos:column="56">-&gt;<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="58">one<pos:position pos:line="8" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="62"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">is_missing<pos:position pos:line="9" pos:column="31"/></name> <init pos:line="9" pos:column="32">= <expr><operator pos:line="9" pos:column="34">!<pos:position pos:line="9" pos:column="35"/></operator><operator pos:line="9" pos:column="35">(<pos:position pos:line="9" pos:column="36"/></operator><name><name pos:line="9" pos:column="36">one<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">mode<pos:position pos:line="9" pos:column="45"/></name></name> <operator pos:line="9" pos:column="46">&amp;&amp;<pos:position pos:line="9" pos:column="56"/></operator> <operator pos:line="9" pos:column="49">!<pos:position pos:line="9" pos:column="50"/></operator><call><name pos:line="9" pos:column="50">is_null_oid<pos:position pos:line="9" pos:column="61"/></name><argument_list pos:line="9" pos:column="61">(<argument><expr><operator pos:line="9" pos:column="62">&amp;<pos:position pos:line="9" pos:column="67"/></operator><name><name pos:line="9" pos:column="63">one<pos:position pos:line="9" pos:column="66"/></name><operator pos:line="9" pos:column="66">-&gt;<pos:position pos:line="9" pos:column="71"/></operator><name pos:line="9" pos:column="68">oid<pos:position pos:line="9" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call><operator pos:line="9" pos:column="72">)<pos:position pos:line="9" pos:column="73"/></operator></expr></init></decl>;<pos:position pos:line="9" pos:column="74"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="10" pos:column="17">struct<pos:position pos:line="10" pos:column="23"/></name> <name pos:line="10" pos:column="24">cache_entry<pos:position pos:line="10" pos:column="35"/></name></name> <modifier pos:line="10" pos:column="36">*<pos:position pos:line="10" pos:column="37"/></modifier></type><name pos:line="10" pos:column="37">ce<pos:position pos:line="10" pos:column="39"/></name></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">is_missing<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">&amp;&amp;<pos:position pos:line="12" pos:column="42"/></operator> <operator pos:line="12" pos:column="35">!<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="36">intent_to_add<pos:position pos:line="12" pos:column="49"/></name></expr>)<pos:position pos:line="12" pos:column="50"/></condition><then pos:line="12" pos:column="50"> <block pos:line="12" pos:column="51">{
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">remove_file_from_cache<pos:position pos:line="13" pos:column="47"/></name><argument_list pos:line="13" pos:column="47">(<argument><expr><name><name pos:line="13" pos:column="48">one<pos:position pos:line="13" pos:column="51"/></name><operator pos:line="13" pos:column="51">-&gt;<pos:position pos:line="13" pos:column="56"/></operator><name pos:line="13" pos:column="53">path<pos:position pos:line="13" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>
			<continue pos:line="14" pos:column="25">continue;<pos:position pos:line="14" pos:column="34"/></continue>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="17" pos:column="17">ce<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <call><name pos:line="17" pos:column="22">make_cache_entry<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name><name pos:line="17" pos:column="39">one<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">-&gt;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="44">mode<pos:position pos:line="17" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="50">one<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">-&gt;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="55">oid<pos:position pos:line="17" pos:column="58"/></name><operator pos:line="17" pos:column="58">.<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="59">hash<pos:position pos:line="17" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="65">one<pos:position pos:line="17" pos:column="68"/></name><operator pos:line="17" pos:column="68">-&gt;<pos:position pos:line="17" pos:column="73"/></operator><name pos:line="17" pos:column="70">path<pos:position pos:line="17" pos:column="74"/></name></name></expr></argument>,
				      <argument><expr><literal type="number" pos:line="18" pos:column="39">0<pos:position pos:line="18" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="42">0<pos:position pos:line="18" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">ce<pos:position pos:line="19" pos:column="24"/></name></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="25">die<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><call><name pos:line="20" pos:column="29">_<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><literal type="string" pos:line="20" pos:column="31">"make_cache_entry failed for path '%s'"<pos:position pos:line="20" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call></expr></argument>,
			    <argument><expr><name><name pos:line="21" pos:column="29">one<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">-&gt;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="34">path<pos:position pos:line="21" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt></block></then></if>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">is_missing<pos:position pos:line="22" pos:column="31"/></name></expr>)<pos:position pos:line="22" pos:column="32"/></condition><then pos:line="22" pos:column="32"> <block pos:line="22" pos:column="33">{
			<expr_stmt><expr><name><name pos:line="23" pos:column="25">ce<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">-&gt;<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="29">ce_flags<pos:position pos:line="23" pos:column="37"/></name></name> <operator pos:line="23" pos:column="38">|=<pos:position pos:line="23" pos:column="40"/></operator> <name pos:line="23" pos:column="41">CE_INTENT_TO_ADD<pos:position pos:line="23" pos:column="57"/></name></expr>;<pos:position pos:line="23" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">set_object_name_for_intent_to_add_entry<pos:position pos:line="24" pos:column="64"/></name><argument_list pos:line="24" pos:column="64">(<argument><expr><name pos:line="24" pos:column="65">ce<pos:position pos:line="24" pos:column="67"/></name></expr></argument>)<pos:position pos:line="24" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">add_cache_entry<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">ce<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="37">ADD_CACHE_OK_TO_ADD<pos:position pos:line="26" pos:column="56"/></name> <operator pos:line="26" pos:column="57">|<pos:position pos:line="26" pos:column="58"/></operator> <name pos:line="26" pos:column="59">ADD_CACHE_OK_TO_REPLACE<pos:position pos:line="26" pos:column="82"/></name></expr></argument>)<pos:position pos:line="26" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="84"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></for>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

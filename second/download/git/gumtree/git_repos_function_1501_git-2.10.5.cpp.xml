<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1501_git-2.10.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_argv<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">int<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">i<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">i<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <literal type="number" pos:line="5" pos:column="18">1<pos:position pos:line="5" pos:column="19"/></literal></expr>;<pos:position pos:line="5" pos:column="20"/></init> <condition><expr><name pos:line="5" pos:column="21">i<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&lt;<pos:position pos:line="5" pos:column="27"/></operator> <name pos:line="5" pos:column="25">global_argc<pos:position pos:line="5" pos:column="36"/></name></expr>;<pos:position pos:line="5" pos:column="37"/></condition> <incr><expr><name pos:line="5" pos:column="38">i<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">++<pos:position pos:line="5" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="42"/></control> <block pos:line="5" pos:column="43">{
		<decl_stmt><decl><type><specifier pos:line="6" pos:column="17">const<pos:position pos:line="6" pos:column="22"/></specifier> <name pos:line="6" pos:column="23">char<pos:position pos:line="6" pos:column="27"/></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">a<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><name><name pos:line="6" pos:column="33">global_argv<pos:position pos:line="6" pos:column="44"/></name><index pos:line="6" pos:column="44">[<expr><name pos:line="6" pos:column="45">i<pos:position pos:line="6" pos:column="46"/></name></expr>]<pos:position pos:line="6" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>

		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">a<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">!=<pos:position pos:line="8" pos:column="26"/></operator> <literal type="char" pos:line="8" pos:column="27">'-'<pos:position pos:line="8" pos:column="30"/></literal> <operator pos:line="8" pos:column="31">||<pos:position pos:line="8" pos:column="33"/></operator> <operator pos:line="8" pos:column="34">!<pos:position pos:line="8" pos:column="35"/></operator><call><name pos:line="8" pos:column="35">strcmp<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">(<argument><expr><name pos:line="8" pos:column="42">a<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="45">"--"<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="51"/></condition><then pos:line="8" pos:column="51">
			<block type="pseudo"><break pos:line="9" pos:column="25">break;<pos:position pos:line="9" pos:column="31"/></break></block></then></if>

		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><call><name pos:line="11" pos:column="22">skip_prefix<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">a<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="37">"--"<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="43">&amp;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="44">a<pos:position pos:line="11" pos:column="45"/></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="47"/></condition><then pos:line="11" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">die<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><literal type="string" pos:line="12" pos:column="29">"unknown option %s"<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">a<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt></block></then></if>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><call><name pos:line="14" pos:column="21">parse_one_option<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">a<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="41"/></condition><then pos:line="14" pos:column="41">
			<block type="pseudo"><continue pos:line="15" pos:column="25">continue;<pos:position pos:line="15" pos:column="34"/></continue></block></then></if>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">parse_one_feature<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">a<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="42">0<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="45"/></condition><then pos:line="17" pos:column="45">
			<block type="pseudo"><continue pos:line="18" pos:column="25">continue;<pos:position pos:line="18" pos:column="34"/></continue></block></then></if>

		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">skip_prefix<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">a<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="36">"cat-blob-fd="<pos:position pos:line="20" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="52">&amp;<pos:position pos:line="20" pos:column="57"/></operator><name pos:line="20" pos:column="53">a<pos:position pos:line="20" pos:column="54"/></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="56"/></condition><then pos:line="20" pos:column="56"> <block pos:line="20" pos:column="57">{
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">option_cat_blob_fd<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">a<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
			<continue pos:line="22" pos:column="25">continue;<pos:position pos:line="22" pos:column="34"/></continue>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="25" pos:column="17">die<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><literal type="string" pos:line="25" pos:column="21">"unknown option --%s"<pos:position pos:line="25" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">a<pos:position pos:line="25" pos:column="45"/></name></expr></argument>)<pos:position pos:line="25" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></for>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">i<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">!=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">global_argc<pos:position pos:line="27" pos:column="29"/></name></expr>)<pos:position pos:line="27" pos:column="30"/></condition><then pos:line="27" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">usage<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">fast_import_usage<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="30" pos:column="9">seen_data_command<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">=<pos:position pos:line="30" pos:column="28"/></operator> <literal type="number" pos:line="30" pos:column="29">1<pos:position pos:line="30" pos:column="30"/></literal></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">import_marks_file<pos:position pos:line="31" pos:column="30"/></name></expr>)<pos:position pos:line="31" pos:column="31"/></condition><then pos:line="31" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">read_marks<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">()<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt></block></then></if>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

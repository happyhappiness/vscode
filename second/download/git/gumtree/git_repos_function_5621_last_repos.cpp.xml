<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5621_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">copy_to_sideband<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">in<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">int<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">out<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">void<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">arg<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">data<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><literal type="number" pos:line="3" pos:column="19">128<pos:position pos:line="3" pos:column="22"/></literal></expr>]<pos:position pos:line="3" pos:column="23"/></index></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">keepalive_active<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><literal type="number" pos:line="4" pos:column="32">0<pos:position pos:line="4" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">keepalive_in_sec<pos:position pos:line="6" pos:column="29"/></name> <operator pos:line="6" pos:column="30">&lt;=<pos:position pos:line="6" pos:column="35"/></operator> <literal type="number" pos:line="6" pos:column="33">0<pos:position pos:line="6" pos:column="34"/></literal></expr>)<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">use_keepalive<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">=<pos:position pos:line="7" pos:column="32"/></operator> <name pos:line="7" pos:column="33">KEEPALIVE_NEVER<pos:position pos:line="7" pos:column="48"/></name></expr>;<pos:position pos:line="7" pos:column="49"/></expr_stmt></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">use_keepalive<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">==<pos:position pos:line="8" pos:column="29"/></operator> <name pos:line="8" pos:column="30">KEEPALIVE_ALWAYS<pos:position pos:line="8" pos:column="46"/></name></expr>)<pos:position pos:line="8" pos:column="47"/></condition><then pos:line="8" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">keepalive_active<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">=<pos:position pos:line="9" pos:column="35"/></operator> <literal type="number" pos:line="9" pos:column="36">1<pos:position pos:line="9" pos:column="37"/></literal></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt></block></then></if>

	<while pos:line="11" pos:column="9">while <condition pos:line="11" pos:column="15">(<expr><literal type="number" pos:line="11" pos:column="16">1<pos:position pos:line="11" pos:column="17"/></literal></expr>)<pos:position pos:line="11" pos:column="18"/></condition> <block pos:line="11" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">ssize_t<pos:position pos:line="12" pos:column="24"/></name></type> <name pos:line="12" pos:column="25">sz<pos:position pos:line="12" pos:column="27"/></name></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">keepalive_active<pos:position pos:line="14" pos:column="37"/></name></expr>)<pos:position pos:line="14" pos:column="38"/></condition><then pos:line="14" pos:column="38"> <block pos:line="14" pos:column="39">{
			<decl_stmt><decl><type><name><name pos:line="15" pos:column="25">struct<pos:position pos:line="15" pos:column="31"/></name> <name pos:line="15" pos:column="32">pollfd<pos:position pos:line="15" pos:column="38"/></name></name></type> <name pos:line="15" pos:column="39">pfd<pos:position pos:line="15" pos:column="42"/></name></decl>;<pos:position pos:line="15" pos:column="43"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="16" pos:column="25">int<pos:position pos:line="16" pos:column="28"/></name></type> <name pos:line="16" pos:column="29">ret<pos:position pos:line="16" pos:column="32"/></name></decl>;<pos:position pos:line="16" pos:column="33"/></decl_stmt>

			<expr_stmt><expr><name><name pos:line="18" pos:column="25">pfd<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">.<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">fd<pos:position pos:line="18" pos:column="31"/></name></name> <operator pos:line="18" pos:column="32">=<pos:position pos:line="18" pos:column="33"/></operator> <name pos:line="18" pos:column="34">in<pos:position pos:line="18" pos:column="36"/></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="19" pos:column="25">pfd<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">.<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">events<pos:position pos:line="19" pos:column="35"/></name></name> <operator pos:line="19" pos:column="36">=<pos:position pos:line="19" pos:column="37"/></operator> <name pos:line="19" pos:column="38">POLLIN<pos:position pos:line="19" pos:column="44"/></name></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="20" pos:column="25">ret<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <call><name pos:line="20" pos:column="31">poll<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><operator pos:line="20" pos:column="36">&amp;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="37">pfd<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="42">1<pos:position pos:line="20" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="45">1000<pos:position pos:line="20" pos:column="49"/></literal> <operator pos:line="20" pos:column="50">*<pos:position pos:line="20" pos:column="51"/></operator> <name pos:line="20" pos:column="52">keepalive_in_sec<pos:position pos:line="20" pos:column="68"/></name></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="70"/></expr_stmt>

			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><name pos:line="22" pos:column="29">ret<pos:position pos:line="22" pos:column="32"/></name> <operator pos:line="22" pos:column="33">&lt;<pos:position pos:line="22" pos:column="37"/></operator> <literal type="number" pos:line="22" pos:column="35">0<pos:position pos:line="22" pos:column="36"/></literal></expr>)<pos:position pos:line="22" pos:column="37"/></condition><then pos:line="22" pos:column="37"> <block pos:line="22" pos:column="38">{
				<if pos:line="23" pos:column="33">if <condition pos:line="23" pos:column="36">(<expr><name pos:line="23" pos:column="37">errno<pos:position pos:line="23" pos:column="42"/></name> <operator pos:line="23" pos:column="43">==<pos:position pos:line="23" pos:column="45"/></operator> <name pos:line="23" pos:column="46">EINTR<pos:position pos:line="23" pos:column="51"/></name></expr>)<pos:position pos:line="23" pos:column="52"/></condition><then pos:line="23" pos:column="52">
					<block type="pseudo"><continue pos:line="24" pos:column="41">continue;<pos:position pos:line="24" pos:column="50"/></continue></block></then>
				<else pos:line="25" pos:column="33">else
					<block type="pseudo"><break pos:line="26" pos:column="41">break;<pos:position pos:line="26" pos:column="47"/></break></block></else></if>
			}<pos:position pos:line="27" pos:column="26"/></block></then> <elseif pos:line="27" pos:column="27">else <if pos:line="27" pos:column="32">if <condition pos:line="27" pos:column="35">(<expr><name pos:line="27" pos:column="36">ret<pos:position pos:line="27" pos:column="39"/></name> <operator pos:line="27" pos:column="40">==<pos:position pos:line="27" pos:column="42"/></operator> <literal type="number" pos:line="27" pos:column="43">0<pos:position pos:line="27" pos:column="44"/></literal></expr>)<pos:position pos:line="27" pos:column="45"/></condition><then pos:line="27" pos:column="45"> <block pos:line="27" pos:column="46">{
				<comment type="block" pos:line="28" pos:column="33">/* no data; send a keepalive packet */</comment>
				<decl_stmt><decl><specifier pos:line="29" pos:column="33">static<pos:position pos:line="29" pos:column="39"/></specifier> <type><specifier pos:line="29" pos:column="40">const<pos:position pos:line="29" pos:column="45"/></specifier> <name pos:line="29" pos:column="46">char<pos:position pos:line="29" pos:column="50"/></name></type> <name><name pos:line="29" pos:column="51">buf<pos:position pos:line="29" pos:column="54"/></name><index pos:line="29" pos:column="54">[]<pos:position pos:line="29" pos:column="56"/></index></name> <init pos:line="29" pos:column="57">= <expr><literal type="string" pos:line="29" pos:column="59">"0005\1"<pos:position pos:line="29" pos:column="67"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="68"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="30" pos:column="33">write_or_die<pos:position pos:line="30" pos:column="45"/></name><argument_list pos:line="30" pos:column="45">(<argument><expr><literal type="number" pos:line="30" pos:column="46">1<pos:position pos:line="30" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">buf<pos:position pos:line="30" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="54">sizeof<argument_list pos:line="30" pos:column="60">(<argument><expr><name pos:line="30" pos:column="61">buf<pos:position pos:line="30" pos:column="64"/></name></expr></argument>)<pos:position pos:line="30" pos:column="65"/></argument_list></sizeof> <operator pos:line="30" pos:column="66">-<pos:position pos:line="30" pos:column="67"/></operator> <literal type="number" pos:line="30" pos:column="68">1<pos:position pos:line="30" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="71"/></expr_stmt>
				<continue pos:line="31" pos:column="33">continue;<pos:position pos:line="31" pos:column="42"/></continue>
			}<pos:position pos:line="32" pos:column="26"/></block></then></if></elseif></if> <comment type="block" pos:line="32" pos:column="27">/* else there is actual data to read */</comment>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="35" pos:column="17">sz<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <call><name pos:line="35" pos:column="22">xread<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">in<pos:position pos:line="35" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="32">data<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="38">sizeof<argument_list pos:line="35" pos:column="44">(<argument><expr><name pos:line="35" pos:column="45">data<pos:position pos:line="35" pos:column="49"/></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="52"/></expr_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">sz<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">&lt;=<pos:position pos:line="36" pos:column="29"/></operator> <literal type="number" pos:line="36" pos:column="27">0<pos:position pos:line="36" pos:column="28"/></literal></expr>)<pos:position pos:line="36" pos:column="29"/></condition><then pos:line="36" pos:column="29">
			<block type="pseudo"><break pos:line="37" pos:column="25">break;<pos:position pos:line="37" pos:column="31"/></break></block></then></if>

		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">use_keepalive<pos:position pos:line="39" pos:column="34"/></name> <operator pos:line="39" pos:column="35">==<pos:position pos:line="39" pos:column="37"/></operator> <name pos:line="39" pos:column="38">KEEPALIVE_AFTER_NUL<pos:position pos:line="39" pos:column="57"/></name> <operator pos:line="39" pos:column="58">&amp;&amp;<pos:position pos:line="39" pos:column="68"/></operator> <operator pos:line="39" pos:column="61">!<pos:position pos:line="39" pos:column="62"/></operator><name pos:line="39" pos:column="62">keepalive_active<pos:position pos:line="39" pos:column="78"/></name></expr>)<pos:position pos:line="39" pos:column="79"/></condition><then pos:line="39" pos:column="79"> <block pos:line="39" pos:column="80">{
			<decl_stmt><decl><type><specifier pos:line="40" pos:column="25">const<pos:position pos:line="40" pos:column="30"/></specifier> <name pos:line="40" pos:column="31">char<pos:position pos:line="40" pos:column="35"/></name> <modifier pos:line="40" pos:column="36">*<pos:position pos:line="40" pos:column="37"/></modifier></type><name pos:line="40" pos:column="37">p<pos:position pos:line="40" pos:column="38"/></name> <init pos:line="40" pos:column="39">= <expr><call><name pos:line="40" pos:column="41">memchr<pos:position pos:line="40" pos:column="47"/></name><argument_list pos:line="40" pos:column="47">(<argument><expr><name pos:line="40" pos:column="48">data<pos:position pos:line="40" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="40" pos:column="54">'\0'<pos:position pos:line="40" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="60">sz<pos:position pos:line="40" pos:column="62"/></name></expr></argument>)<pos:position pos:line="40" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="64"/></decl_stmt>
			<if pos:line="41" pos:column="25">if <condition pos:line="41" pos:column="28">(<expr><name pos:line="41" pos:column="29">p<pos:position pos:line="41" pos:column="30"/></name></expr>)<pos:position pos:line="41" pos:column="31"/></condition><then pos:line="41" pos:column="31"> <block pos:line="41" pos:column="32">{
				<comment type="block" pos:line="42" pos:column="33">/*
				 * The NUL tells us to start sending keepalives. Make
				 * sure we send any other data we read along
				 * with it.
				 */</comment>
				<expr_stmt><expr><name pos:line="47" pos:column="33">keepalive_active<pos:position pos:line="47" pos:column="49"/></name> <operator pos:line="47" pos:column="50">=<pos:position pos:line="47" pos:column="51"/></operator> <literal type="number" pos:line="47" pos:column="52">1<pos:position pos:line="47" pos:column="53"/></literal></expr>;<pos:position pos:line="47" pos:column="54"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="48" pos:column="33">send_sideband<pos:position pos:line="48" pos:column="46"/></name><argument_list pos:line="48" pos:column="46">(<argument><expr><literal type="number" pos:line="48" pos:column="47">1<pos:position pos:line="48" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="50">2<pos:position pos:line="48" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="53">data<pos:position pos:line="48" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="59">p<pos:position pos:line="48" pos:column="60"/></name> <operator pos:line="48" pos:column="61">-<pos:position pos:line="48" pos:column="62"/></operator> <name pos:line="48" pos:column="63">data<pos:position pos:line="48" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="69">use_sideband<pos:position pos:line="48" pos:column="81"/></name></expr></argument>)<pos:position pos:line="48" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="83"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="49" pos:column="33">send_sideband<pos:position pos:line="49" pos:column="46"/></name><argument_list pos:line="49" pos:column="46">(<argument><expr><literal type="number" pos:line="49" pos:column="47">1<pos:position pos:line="49" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="50">2<pos:position pos:line="49" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="53">p<pos:position pos:line="49" pos:column="54"/></name> <operator pos:line="49" pos:column="55">+<pos:position pos:line="49" pos:column="56"/></operator> <literal type="number" pos:line="49" pos:column="57">1<pos:position pos:line="49" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="60">sz<pos:position pos:line="49" pos:column="62"/></name> <operator pos:line="49" pos:column="63">-<pos:position pos:line="49" pos:column="64"/></operator> <operator pos:line="49" pos:column="65">(<pos:position pos:line="49" pos:column="66"/></operator><name pos:line="49" pos:column="66">p<pos:position pos:line="49" pos:column="67"/></name> <operator pos:line="49" pos:column="68">-<pos:position pos:line="49" pos:column="69"/></operator> <name pos:line="49" pos:column="70">data<pos:position pos:line="49" pos:column="74"/></name> <operator pos:line="49" pos:column="75">+<pos:position pos:line="49" pos:column="76"/></operator> <literal type="number" pos:line="49" pos:column="77">1<pos:position pos:line="49" pos:column="78"/></literal><operator pos:line="49" pos:column="78">)<pos:position pos:line="49" pos:column="79"/></operator></expr></argument>, <argument><expr><name pos:line="49" pos:column="81">use_sideband<pos:position pos:line="49" pos:column="93"/></name></expr></argument>)<pos:position pos:line="49" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="95"/></expr_stmt>
				<continue pos:line="50" pos:column="33">continue;<pos:position pos:line="50" pos:column="42"/></continue>
			}<pos:position pos:line="51" pos:column="26"/></block></then></if>
		}<pos:position pos:line="52" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="54" pos:column="17">/*
		 * Either we're not looking for a NUL signal, or we didn't see
		 * it yet; just pass along the data.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">send_sideband<pos:position pos:line="58" pos:column="30"/></name><argument_list pos:line="58" pos:column="30">(<argument><expr><literal type="number" pos:line="58" pos:column="31">1<pos:position pos:line="58" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="34">2<pos:position pos:line="58" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="37">data<pos:position pos:line="58" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="43">sz<pos:position pos:line="58" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="47">use_sideband<pos:position pos:line="58" pos:column="59"/></name></expr></argument>)<pos:position pos:line="58" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="59" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">close<pos:position pos:line="60" pos:column="14"/></name><argument_list pos:line="60" pos:column="14">(<argument><expr><name pos:line="60" pos:column="15">in<pos:position pos:line="60" pos:column="17"/></name></expr></argument>)<pos:position pos:line="60" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="19"/></expr_stmt>
	<return pos:line="61" pos:column="9">return <expr><literal type="number" pos:line="61" pos:column="16">0<pos:position pos:line="61" pos:column="17"/></literal></expr>;<pos:position pos:line="61" pos:column="18"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

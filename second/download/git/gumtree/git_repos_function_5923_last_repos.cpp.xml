<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5923_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">depth_first<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">a_<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">void<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">b_<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name><name pos:line="3" pos:column="15">struct<pos:position pos:line="3" pos:column="21"/></name> <name pos:line="3" pos:column="22">diff_filepair<pos:position pos:line="3" pos:column="35"/></name></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">a<pos:position pos:line="3" pos:column="38"/></name> <init pos:line="3" pos:column="39">= <expr><operator pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></operator><operator pos:line="3" pos:column="42">(<pos:position pos:line="3" pos:column="43"/></operator><operator pos:line="3" pos:column="43">(<pos:position pos:line="3" pos:column="44"/></operator><specifier pos:line="3" pos:column="44">const<pos:position pos:line="3" pos:column="49"/></specifier> struct <name pos:line="3" pos:column="57">diff_filepair<pos:position pos:line="3" pos:column="70"/></name> <operator pos:line="3" pos:column="71">*<pos:position pos:line="3" pos:column="72"/></operator><operator pos:line="3" pos:column="72">*<pos:position pos:line="3" pos:column="73"/></operator><operator pos:line="3" pos:column="73">)<pos:position pos:line="3" pos:column="74"/></operator><name pos:line="3" pos:column="74">a_<pos:position pos:line="3" pos:column="76"/></name><operator pos:line="3" pos:column="76">)<pos:position pos:line="3" pos:column="77"/></operator></expr></init></decl>;<pos:position pos:line="3" pos:column="78"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name><name pos:line="4" pos:column="15">struct<pos:position pos:line="4" pos:column="21"/></name> <name pos:line="4" pos:column="22">diff_filepair<pos:position pos:line="4" pos:column="35"/></name></name> <modifier pos:line="4" pos:column="36">*<pos:position pos:line="4" pos:column="37"/></modifier></type><name pos:line="4" pos:column="37">b<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><operator pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></operator><operator pos:line="4" pos:column="42">(<pos:position pos:line="4" pos:column="43"/></operator><operator pos:line="4" pos:column="43">(<pos:position pos:line="4" pos:column="44"/></operator><specifier pos:line="4" pos:column="44">const<pos:position pos:line="4" pos:column="49"/></specifier> struct <name pos:line="4" pos:column="57">diff_filepair<pos:position pos:line="4" pos:column="70"/></name> <operator pos:line="4" pos:column="71">*<pos:position pos:line="4" pos:column="72"/></operator><operator pos:line="4" pos:column="72">*<pos:position pos:line="4" pos:column="73"/></operator><operator pos:line="4" pos:column="73">)<pos:position pos:line="4" pos:column="74"/></operator><name pos:line="4" pos:column="74">b_<pos:position pos:line="4" pos:column="76"/></name><operator pos:line="4" pos:column="76">)<pos:position pos:line="4" pos:column="77"/></operator></expr></init></decl>;<pos:position pos:line="4" pos:column="78"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">name_a<pos:position pos:line="5" pos:column="27"/></name></decl>, <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="30">name_b<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">len_a<pos:position pos:line="6" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="20">len_b<pos:position pos:line="6" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="27">len<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">cmp<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">name_a<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <ternary><condition><expr><name><name pos:line="9" pos:column="18">a<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">one<pos:position pos:line="9" pos:column="24"/></name></name></expr> ?<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26"> <expr><name><name pos:line="9" pos:column="27">a<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">one<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="35">path<pos:position pos:line="9" pos:column="39"/></name></name></expr> <pos:position pos:line="9" pos:column="40"/></then><else pos:line="9" pos:column="40">: <expr><name><name pos:line="9" pos:column="42">a<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">-&gt;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="45">two<pos:position pos:line="9" pos:column="48"/></name><operator pos:line="9" pos:column="48">-&gt;<pos:position pos:line="9" pos:column="53"/></operator><name pos:line="9" pos:column="50">path<pos:position pos:line="9" pos:column="54"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">name_b<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <ternary><condition><expr><name><name pos:line="10" pos:column="18">b<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">one<pos:position pos:line="10" pos:column="24"/></name></name></expr> ?<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26"> <expr><name><name pos:line="10" pos:column="27">b<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">-&gt;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="30">one<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">-&gt;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="35">path<pos:position pos:line="10" pos:column="39"/></name></name></expr> <pos:position pos:line="10" pos:column="40"/></then><else pos:line="10" pos:column="40">: <expr><name><name pos:line="10" pos:column="42">b<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">two<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">-&gt;<pos:position pos:line="10" pos:column="53"/></operator><name pos:line="10" pos:column="50">path<pos:position pos:line="10" pos:column="54"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">len_a<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">strlen<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">name_a<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">len_b<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <call><name pos:line="13" pos:column="17">strlen<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">name_b<pos:position pos:line="13" pos:column="30"/></name></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">len<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="14" pos:column="15">(<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">len_a<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">&lt;<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="24">len_b<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">)<pos:position pos:line="14" pos:column="30"/></operator></expr> ?<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32"> <expr><name pos:line="14" pos:column="33">len_a<pos:position pos:line="14" pos:column="38"/></name></expr> <pos:position pos:line="14" pos:column="39"/></then><else pos:line="14" pos:column="39">: <expr><name pos:line="14" pos:column="41">len_b<pos:position pos:line="14" pos:column="46"/></name></expr></else></ternary></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>

	<comment type="block" pos:line="16" pos:column="9">/* strcmp will sort 'd' before 'd/e', we want 'd/e' before 'd' */</comment>
	<expr_stmt><expr><name pos:line="17" pos:column="9">cmp<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">memcmp<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">name_a<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">name_b<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">len<pos:position pos:line="17" pos:column="41"/></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">cmp<pos:position pos:line="18" pos:column="16"/></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition><then pos:line="18" pos:column="17">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><name pos:line="19" pos:column="24">cmp<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="20" pos:column="9">cmp<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="15">len_b<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">-<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">len_a<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">cmp<pos:position pos:line="21" pos:column="16"/></name></expr>)<pos:position pos:line="21" pos:column="17"/></condition><then pos:line="21" pos:column="17">
		<block type="pseudo"><return pos:line="22" pos:column="17">return <expr><name pos:line="22" pos:column="24">cmp<pos:position pos:line="22" pos:column="27"/></name></expr>;<pos:position pos:line="22" pos:column="28"/></return></block></then></if>
	<comment type="block" pos:line="23" pos:column="9">/*
	 * Move 'R'ename entries last so that all references of the file
	 * appear in the output before it is renamed (e.g., when a file
	 * was copied and renamed in the same commit).
	 */</comment>
	<return pos:line="28" pos:column="9">return <expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><name><name pos:line="28" pos:column="17">a<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">status<pos:position pos:line="28" pos:column="26"/></name></name> <operator pos:line="28" pos:column="27">==<pos:position pos:line="28" pos:column="29"/></operator> <literal type="char" pos:line="28" pos:column="30">'R'<pos:position pos:line="28" pos:column="33"/></literal><operator pos:line="28" pos:column="33">)<pos:position pos:line="28" pos:column="34"/></operator> <operator pos:line="28" pos:column="35">-<pos:position pos:line="28" pos:column="36"/></operator> <operator pos:line="28" pos:column="37">(<pos:position pos:line="28" pos:column="38"/></operator><name><name pos:line="28" pos:column="38">b<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">status<pos:position pos:line="28" pos:column="47"/></name></name> <operator pos:line="28" pos:column="48">==<pos:position pos:line="28" pos:column="50"/></operator> <literal type="char" pos:line="28" pos:column="51">'R'<pos:position pos:line="28" pos:column="54"/></literal><operator pos:line="28" pos:column="54">)<pos:position pos:line="28" pos:column="55"/></operator></expr>;<pos:position pos:line="28" pos:column="56"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

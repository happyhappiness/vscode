<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5565_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">list<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ac<pos:position pos:line="1" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">av<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">prefix<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">porcelain<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><literal type="number" pos:line="3" pos:column="25">0<pos:position pos:line="3" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">option<pos:position pos:line="5" pos:column="22"/></name></name></type> <name><name pos:line="5" pos:column="23">options<pos:position pos:line="5" pos:column="30"/></name><index pos:line="5" pos:column="30">[]<pos:position pos:line="5" pos:column="32"/></index></name> <init pos:line="5" pos:column="33">= <expr><block pos:line="5" pos:column="35">{
		<expr><call><name pos:line="6" pos:column="17">OPT_BOOL<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><literal type="number" pos:line="6" pos:column="26">0<pos:position pos:line="6" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="29">"porcelain"<pos:position pos:line="6" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="6" pos:column="42">&amp;<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="43">porcelain<pos:position pos:line="6" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="54">N_<pos:position pos:line="6" pos:column="56"/></name><argument_list pos:line="6" pos:column="56">(<argument><expr><literal type="string" pos:line="6" pos:column="57">"machine-readable output"<pos:position pos:line="6" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="84"/></argument_list></call></expr>,
		<macro><name pos:line="7" pos:column="17">OPT_END<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">()<pos:position pos:line="7" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="8" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">ac<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">parse_options<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">ac<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="32">av<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="36">prefix<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">options<pos:position pos:line="10" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="53">worktree_usage<pos:position pos:line="10" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="69">0<pos:position pos:line="10" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="72"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">ac<pos:position pos:line="11" pos:column="15"/></name></expr>)<pos:position pos:line="11" pos:column="16"/></condition><then pos:line="11" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">usage_with_options<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">worktree_usage<pos:position pos:line="12" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="52">options<pos:position pos:line="12" pos:column="59"/></name></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="61"/></expr_stmt></block></then>
	<else pos:line="13" pos:column="9">else <block pos:line="13" pos:column="14">{
		<decl_stmt><decl><type><name><name pos:line="14" pos:column="17">struct<pos:position pos:line="14" pos:column="23"/></name> <name pos:line="14" pos:column="24">worktree<pos:position pos:line="14" pos:column="32"/></name></name> <modifier pos:line="14" pos:column="33">*<pos:position pos:line="14" pos:column="34"/></modifier><modifier pos:line="14" pos:column="34">*<pos:position pos:line="14" pos:column="35"/></modifier></type><name pos:line="14" pos:column="35">worktrees<pos:position pos:line="14" pos:column="44"/></name> <init pos:line="14" pos:column="45">= <expr><call><name pos:line="14" pos:column="47">get_worktrees<pos:position pos:line="14" pos:column="60"/></name><argument_list pos:line="14" pos:column="60">(<argument><expr><name pos:line="14" pos:column="61">GWT_SORT_LINKED<pos:position pos:line="14" pos:column="76"/></name></expr></argument>)<pos:position pos:line="14" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="78"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">int<pos:position pos:line="15" pos:column="20"/></name></type> <name pos:line="15" pos:column="21">path_maxlen<pos:position pos:line="15" pos:column="32"/></name> <init pos:line="15" pos:column="33">= <expr><literal type="number" pos:line="15" pos:column="35">0<pos:position pos:line="15" pos:column="36"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="38">abbrev<pos:position pos:line="15" pos:column="44"/></name> <init pos:line="15" pos:column="45">= <expr><name pos:line="15" pos:column="47">DEFAULT_ABBREV<pos:position pos:line="15" pos:column="61"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="63">i<pos:position pos:line="15" pos:column="64"/></name></decl>;<pos:position pos:line="15" pos:column="65"/></decl_stmt>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">porcelain<pos:position pos:line="17" pos:column="31"/></name></expr>)<pos:position pos:line="17" pos:column="32"/></condition><then pos:line="17" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="25">measure_widths<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">(<argument><expr><name pos:line="18" pos:column="40">worktrees<pos:position pos:line="18" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="51">&amp;<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="52">abbrev<pos:position pos:line="18" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="60">&amp;<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="61">path_maxlen<pos:position pos:line="18" pos:column="72"/></name></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="74"/></expr_stmt></block></then></if>

		<for pos:line="20" pos:column="17">for <control pos:line="20" pos:column="21">(<init><expr><name pos:line="20" pos:column="22">i<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="26">0<pos:position pos:line="20" pos:column="27"/></literal></expr>;<pos:position pos:line="20" pos:column="28"/></init> <condition><expr><name><name pos:line="20" pos:column="29">worktrees<pos:position pos:line="20" pos:column="38"/></name><index pos:line="20" pos:column="38">[<expr><name pos:line="20" pos:column="39">i<pos:position pos:line="20" pos:column="40"/></name></expr>]<pos:position pos:line="20" pos:column="41"/></index></name></expr>;<pos:position pos:line="20" pos:column="42"/></condition> <incr><expr><name pos:line="20" pos:column="43">i<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">++<pos:position pos:line="20" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="47"/></control> <block pos:line="20" pos:column="48">{
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><name pos:line="21" pos:column="29">porcelain<pos:position pos:line="21" pos:column="38"/></name></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="33">show_worktree_porcelain<pos:position pos:line="22" pos:column="56"/></name><argument_list pos:line="22" pos:column="56">(<argument><expr><name><name pos:line="22" pos:column="57">worktrees<pos:position pos:line="22" pos:column="66"/></name><index pos:line="22" pos:column="66">[<expr><name pos:line="22" pos:column="67">i<pos:position pos:line="22" pos:column="68"/></name></expr>]<pos:position pos:line="22" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="71"/></expr_stmt></block></then>
			<else pos:line="23" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="33">show_worktree<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">(<argument><expr><name><name pos:line="24" pos:column="47">worktrees<pos:position pos:line="24" pos:column="56"/></name><index pos:line="24" pos:column="56">[<expr><name pos:line="24" pos:column="57">i<pos:position pos:line="24" pos:column="58"/></name></expr>]<pos:position pos:line="24" pos:column="59"/></index></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="61">path_maxlen<pos:position pos:line="24" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="74">abbrev<pos:position pos:line="24" pos:column="80"/></name></expr></argument>)<pos:position pos:line="24" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="82"/></expr_stmt></block></else></if>
		}<pos:position pos:line="25" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">free_worktrees<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">worktrees<pos:position pos:line="26" pos:column="41"/></name></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></else></if>
	<return pos:line="28" pos:column="9">return <expr><literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

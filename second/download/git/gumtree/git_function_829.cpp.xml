<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_829.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">update_squash_messages<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">enum<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">todo_command<pos:position pos:line="1" pos:column="52"/></name></name></type> <name pos:line="1" pos:column="53">command<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">commit<pos:position pos:line="2" pos:column="30"/></name></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">commit<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="40">struct<pos:position pos:line="2" pos:column="46"/></name> <name pos:line="2" pos:column="47">replay_opts<pos:position pos:line="2" pos:column="58"/></name></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">opts<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">count<pos:position pos:line="5" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="20">res<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">message<pos:position pos:line="6" pos:column="28"/></name></decl>, <modifier pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="31">body<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">file_exists<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><call><name pos:line="8" pos:column="25">rebase_path_squash_msg<pos:position pos:line="8" pos:column="47"/></name><argument_list pos:line="8" pos:column="47">()<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="51"/></condition><then pos:line="8" pos:column="51"> <block pos:line="8" pos:column="52">{
		<decl_stmt><decl><type><name><name pos:line="9" pos:column="17">struct<pos:position pos:line="9" pos:column="23"/></name> <name pos:line="9" pos:column="24">strbuf<pos:position pos:line="9" pos:column="30"/></name></name></type> <name pos:line="9" pos:column="31">header<pos:position pos:line="9" pos:column="37"/></name> <init pos:line="9" pos:column="38">= <expr><name pos:line="9" pos:column="40">STRBUF_INIT<pos:position pos:line="9" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="52"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">char<pos:position pos:line="10" pos:column="21"/></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name pos:line="10" pos:column="23">eol<pos:position pos:line="10" pos:column="26"/></name></decl>, <modifier pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="29">p<pos:position pos:line="10" pos:column="30"/></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><call><name pos:line="12" pos:column="21">strbuf_read_file<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><operator pos:line="12" pos:column="38">&amp;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="39">buf<pos:position pos:line="12" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="44">rebase_path_squash_msg<pos:position pos:line="12" pos:column="66"/></name><argument_list pos:line="12" pos:column="66">()<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="70">2048<pos:position pos:line="12" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call> <operator pos:line="12" pos:column="76">&lt;=<pos:position pos:line="12" pos:column="81"/></operator> <literal type="number" pos:line="12" pos:column="79">0<pos:position pos:line="12" pos:column="80"/></literal></expr>)<pos:position pos:line="12" pos:column="81"/></condition><then pos:line="12" pos:column="81">
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><call><name pos:line="13" pos:column="32">error<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">(<argument><expr><call><name pos:line="13" pos:column="38">_<pos:position pos:line="13" pos:column="39"/></name><argument_list pos:line="13" pos:column="39">(<argument><expr><literal type="string" pos:line="13" pos:column="40">"could not read '%s'"<pos:position pos:line="13" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="14" pos:column="33">rebase_path_squash_msg<pos:position pos:line="14" pos:column="55"/></name><argument_list pos:line="14" pos:column="55">()<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="59"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="16" pos:column="17">p<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <name><name pos:line="16" pos:column="21">buf<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">.<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">buf<pos:position pos:line="16" pos:column="28"/></name></name> <operator pos:line="16" pos:column="29">+<pos:position pos:line="16" pos:column="30"/></operator> <literal type="number" pos:line="16" pos:column="31">1<pos:position pos:line="16" pos:column="32"/></literal></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">eol<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <call><name pos:line="17" pos:column="23">strchrnul<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name><name pos:line="17" pos:column="33">buf<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">.<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">buf<pos:position pos:line="17" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="42">'\n'<pos:position pos:line="17" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="48"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">buf<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">.<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">buf<pos:position pos:line="18" pos:column="28"/></name><index pos:line="18" pos:column="28">[<expr><literal type="number" pos:line="18" pos:column="29">0<pos:position pos:line="18" pos:column="30"/></literal></expr>]<pos:position pos:line="18" pos:column="31"/></index></name> <operator pos:line="18" pos:column="32">!=<pos:position pos:line="18" pos:column="34"/></operator> <name pos:line="18" pos:column="35">comment_line_char<pos:position pos:line="18" pos:column="52"/></name> <operator pos:line="18" pos:column="53">||<pos:position pos:line="18" pos:column="55"/></operator>
		    <operator pos:line="19" pos:column="21">(<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">p<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">+=<pos:position pos:line="19" pos:column="26"/></operator> <call><name pos:line="19" pos:column="27">strcspn<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><name pos:line="19" pos:column="35">p<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="38">"0123456789\n"<pos:position pos:line="19" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call><operator pos:line="19" pos:column="53">)<pos:position pos:line="19" pos:column="54"/></operator> <operator pos:line="19" pos:column="55">==<pos:position pos:line="19" pos:column="57"/></operator> <name pos:line="19" pos:column="58">eol<pos:position pos:line="19" pos:column="61"/></name></expr>)<pos:position pos:line="19" pos:column="62"/></condition><then pos:line="19" pos:column="62">
			<block type="pseudo"><return pos:line="20" pos:column="25">return <expr><call><name pos:line="20" pos:column="32">error<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><call><name pos:line="20" pos:column="38">_<pos:position pos:line="20" pos:column="39"/></name><argument_list pos:line="20" pos:column="39">(<argument><expr><literal type="string" pos:line="20" pos:column="40">"unexpected 1st line of squash message:"<pos:position pos:line="20" pos:column="80"/></literal>
				       <literal type="string" pos:line="21" pos:column="40">"\n\n\t%.*s"<pos:position pos:line="21" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr></argument>,
				     <argument><expr><call pos:line="22" pos:column="38">(<name pos:line="22" pos:column="39">int<pos:position pos:line="22" pos:column="42"/></name>)<argument_list pos:line="22" pos:column="43">(<argument><expr><name pos:line="22" pos:column="44">eol<pos:position pos:line="22" pos:column="47"/></name> <operator pos:line="22" pos:column="48">-<pos:position pos:line="22" pos:column="49"/></operator> <name><name pos:line="22" pos:column="50">buf<pos:position pos:line="22" pos:column="53"/></name><operator pos:line="22" pos:column="53">.<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="54">buf<pos:position pos:line="22" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="60">buf<pos:position pos:line="22" pos:column="63"/></name><operator pos:line="22" pos:column="63">.<pos:position pos:line="22" pos:column="64"/></operator><name pos:line="22" pos:column="64">buf<pos:position pos:line="22" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="69"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="23" pos:column="17">count<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <call><name pos:line="23" pos:column="25">strtol<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">p<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="35">NULL<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="41">10<pos:position pos:line="23" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">count<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">&lt;<pos:position pos:line="25" pos:column="31"/></operator> <literal type="number" pos:line="25" pos:column="29">1<pos:position pos:line="25" pos:column="30"/></literal></expr>)<pos:position pos:line="25" pos:column="31"/></condition><then pos:line="25" pos:column="31">
			<block type="pseudo"><return pos:line="26" pos:column="25">return <expr><call><name pos:line="26" pos:column="32">error<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><call><name pos:line="26" pos:column="38">_<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><literal type="string" pos:line="26" pos:column="40">"invalid 1st line of squash message:\n"<pos:position pos:line="26" pos:column="79"/></literal>
				       <literal type="string" pos:line="27" pos:column="40">"\n\t%.*s"<pos:position pos:line="27" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr></argument>,
				     <argument><expr><call pos:line="28" pos:column="38">(<name pos:line="28" pos:column="39">int<pos:position pos:line="28" pos:column="42"/></name>)<argument_list pos:line="28" pos:column="43">(<argument><expr><name pos:line="28" pos:column="44">eol<pos:position pos:line="28" pos:column="47"/></name> <operator pos:line="28" pos:column="48">-<pos:position pos:line="28" pos:column="49"/></operator> <name><name pos:line="28" pos:column="50">buf<pos:position pos:line="28" pos:column="53"/></name><operator pos:line="28" pos:column="53">.<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="54">buf<pos:position pos:line="28" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="60">buf<pos:position pos:line="28" pos:column="63"/></name><operator pos:line="28" pos:column="63">.<pos:position pos:line="28" pos:column="64"/></operator><name pos:line="28" pos:column="64">buf<pos:position pos:line="28" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="69"/></return></block></then></if>

		<expr_stmt><expr><call><name pos:line="30" pos:column="17">strbuf_addf<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><operator pos:line="30" pos:column="29">&amp;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="30">header<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="38">"%c "<pos:position pos:line="30" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">comment_line_char<pos:position pos:line="30" pos:column="62"/></name></expr></argument>)<pos:position pos:line="30" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">strbuf_addf<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><operator pos:line="31" pos:column="29">&amp;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="30">header<pos:position pos:line="31" pos:column="36"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="32" pos:column="29">_<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><literal type="string" pos:line="32" pos:column="31">"This is a combination of %d commits."<pos:position pos:line="32" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="32" pos:column="72">++<pos:position pos:line="32" pos:column="74"/></operator><name pos:line="32" pos:column="74">count<pos:position pos:line="32" pos:column="79"/></name></expr></argument>)<pos:position pos:line="32" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="81"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">strbuf_splice<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><operator pos:line="33" pos:column="31">&amp;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="32">buf<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="37">0<pos:position pos:line="33" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="40">eol<pos:position pos:line="33" pos:column="43"/></name> <operator pos:line="33" pos:column="44">-<pos:position pos:line="33" pos:column="45"/></operator> <name><name pos:line="33" pos:column="46">buf<pos:position pos:line="33" pos:column="49"/></name><operator pos:line="33" pos:column="49">.<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="50">buf<pos:position pos:line="33" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="55">header<pos:position pos:line="33" pos:column="61"/></name><operator pos:line="33" pos:column="61">.<pos:position pos:line="33" pos:column="62"/></operator><name pos:line="33" pos:column="62">buf<pos:position pos:line="33" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="67">header<pos:position pos:line="33" pos:column="73"/></name><operator pos:line="33" pos:column="73">.<pos:position pos:line="33" pos:column="74"/></operator><name pos:line="33" pos:column="74">len<pos:position pos:line="33" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">strbuf_release<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><operator pos:line="34" pos:column="32">&amp;<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="33">header<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then> <else pos:line="35" pos:column="11">else <block pos:line="35" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="36" pos:column="17">unsigned<pos:position pos:line="36" pos:column="25"/></name> <name pos:line="36" pos:column="26">char<pos:position pos:line="36" pos:column="30"/></name></type> <name><name pos:line="36" pos:column="31">head<pos:position pos:line="36" pos:column="35"/></name><index pos:line="36" pos:column="35">[<expr><literal type="number" pos:line="36" pos:column="36">20<pos:position pos:line="36" pos:column="38"/></literal></expr>]<pos:position pos:line="36" pos:column="39"/></index></name></decl>;<pos:position pos:line="36" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="37" pos:column="17">struct<pos:position pos:line="37" pos:column="23"/></name> <name pos:line="37" pos:column="24">commit<pos:position pos:line="37" pos:column="30"/></name></name> <modifier pos:line="37" pos:column="31">*<pos:position pos:line="37" pos:column="32"/></modifier></type><name pos:line="37" pos:column="32">head_commit<pos:position pos:line="37" pos:column="43"/></name></decl>;<pos:position pos:line="37" pos:column="44"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="38" pos:column="17">const<pos:position pos:line="38" pos:column="22"/></specifier> <name pos:line="38" pos:column="23">char<pos:position pos:line="38" pos:column="27"/></name> <modifier pos:line="38" pos:column="28">*<pos:position pos:line="38" pos:column="29"/></modifier></type><name pos:line="38" pos:column="29">head_message<pos:position pos:line="38" pos:column="41"/></name></decl>, <modifier pos:line="38" pos:column="43">*<pos:position pos:line="38" pos:column="44"/></modifier><decl><type ref="prev"/><name pos:line="38" pos:column="44">body<pos:position pos:line="38" pos:column="48"/></name></decl>;<pos:position pos:line="38" pos:column="49"/></decl_stmt>

		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><call><name pos:line="40" pos:column="21">get_sha1<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><literal type="string" pos:line="40" pos:column="30">"HEAD"<pos:position pos:line="40" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="38">head<pos:position pos:line="40" pos:column="42"/></name></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="44"/></condition><then pos:line="40" pos:column="44">
			<block type="pseudo"><return pos:line="41" pos:column="25">return <expr><call><name pos:line="41" pos:column="32">error<pos:position pos:line="41" pos:column="37"/></name><argument_list pos:line="41" pos:column="37">(<argument><expr><call><name pos:line="41" pos:column="38">_<pos:position pos:line="41" pos:column="39"/></name><argument_list pos:line="41" pos:column="39">(<argument><expr><literal type="string" pos:line="41" pos:column="40">"need a HEAD to fixup"<pos:position pos:line="41" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="65"/></return></block></then></if>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">!<pos:position pos:line="42" pos:column="22"/></operator><operator pos:line="42" pos:column="22">(<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="23">head_commit<pos:position pos:line="42" pos:column="34"/></name> <operator pos:line="42" pos:column="35">=<pos:position pos:line="42" pos:column="36"/></operator> <call><name pos:line="42" pos:column="37">lookup_commit_reference<pos:position pos:line="42" pos:column="60"/></name><argument_list pos:line="42" pos:column="60">(<argument><expr><name pos:line="42" pos:column="61">head<pos:position pos:line="42" pos:column="65"/></name></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call><operator pos:line="42" pos:column="66">)<pos:position pos:line="42" pos:column="67"/></operator></expr>)<pos:position pos:line="42" pos:column="68"/></condition><then pos:line="42" pos:column="68">
			<block type="pseudo"><return pos:line="43" pos:column="25">return <expr><call><name pos:line="43" pos:column="32">error<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><call><name pos:line="43" pos:column="38">_<pos:position pos:line="43" pos:column="39"/></name><argument_list pos:line="43" pos:column="39">(<argument><expr><literal type="string" pos:line="43" pos:column="40">"could not read HEAD"<pos:position pos:line="43" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="64"/></return></block></then></if>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><operator pos:line="44" pos:column="21">!<pos:position pos:line="44" pos:column="22"/></operator><operator pos:line="44" pos:column="22">(<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="23">head_message<pos:position pos:line="44" pos:column="35"/></name> <operator pos:line="44" pos:column="36">=<pos:position pos:line="44" pos:column="37"/></operator> <call><name pos:line="44" pos:column="38">get_commit_buffer<pos:position pos:line="44" pos:column="55"/></name><argument_list pos:line="44" pos:column="55">(<argument><expr><name pos:line="44" pos:column="56">head_commit<pos:position pos:line="44" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="69">NULL<pos:position pos:line="44" pos:column="73"/></name></expr></argument>)<pos:position pos:line="44" pos:column="74"/></argument_list></call><operator pos:line="44" pos:column="74">)<pos:position pos:line="44" pos:column="75"/></operator></expr>)<pos:position pos:line="44" pos:column="76"/></condition><then pos:line="44" pos:column="76">
			<block type="pseudo"><return pos:line="45" pos:column="25">return <expr><call><name pos:line="45" pos:column="32">error<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><call><name pos:line="45" pos:column="38">_<pos:position pos:line="45" pos:column="39"/></name><argument_list pos:line="45" pos:column="39">(<argument><expr><literal type="string" pos:line="45" pos:column="40">"could not read HEAD's commit message"<pos:position pos:line="45" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="81"/></return></block></then></if>

		<expr_stmt><expr><call><name pos:line="47" pos:column="17">find_commit_subject<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><name pos:line="47" pos:column="37">head_message<pos:position pos:line="47" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="51">&amp;<pos:position pos:line="47" pos:column="56"/></operator><name pos:line="47" pos:column="52">body<pos:position pos:line="47" pos:column="56"/></name></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="58"/></expr_stmt>
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><call><name pos:line="48" pos:column="21">write_message<pos:position pos:line="48" pos:column="34"/></name><argument_list pos:line="48" pos:column="34">(<argument><expr><name pos:line="48" pos:column="35">body<pos:position pos:line="48" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="41">strlen<pos:position pos:line="48" pos:column="47"/></name><argument_list pos:line="48" pos:column="47">(<argument><expr><name pos:line="48" pos:column="48">body<pos:position pos:line="48" pos:column="52"/></name></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call></expr></argument>,
				  <argument><expr><call><name pos:line="49" pos:column="35">rebase_path_fixup_msg<pos:position pos:line="49" pos:column="56"/></name><argument_list pos:line="49" pos:column="56">()<pos:position pos:line="49" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="60">0<pos:position pos:line="49" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="63"/></condition><then pos:line="49" pos:column="63"> <block pos:line="49" pos:column="64">{
			<expr_stmt><expr><call><name pos:line="50" pos:column="25">unuse_commit_buffer<pos:position pos:line="50" pos:column="44"/></name><argument_list pos:line="50" pos:column="44">(<argument><expr><name pos:line="50" pos:column="45">head_commit<pos:position pos:line="50" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="58">head_message<pos:position pos:line="50" pos:column="70"/></name></expr></argument>)<pos:position pos:line="50" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="72"/></expr_stmt>
			<return pos:line="51" pos:column="25">return <expr><call><name pos:line="51" pos:column="32">error<pos:position pos:line="51" pos:column="37"/></name><argument_list pos:line="51" pos:column="37">(<argument><expr><call><name pos:line="51" pos:column="38">_<pos:position pos:line="51" pos:column="39"/></name><argument_list pos:line="51" pos:column="39">(<argument><expr><literal type="string" pos:line="51" pos:column="40">"cannot write '%s'"<pos:position pos:line="51" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></call></expr></argument>,
				     <argument><expr><call><name pos:line="52" pos:column="38">rebase_path_fixup_msg<pos:position pos:line="52" pos:column="59"/></name><argument_list pos:line="52" pos:column="59">()<pos:position pos:line="52" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="63"/></return>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="55" pos:column="17">count<pos:position pos:line="55" pos:column="22"/></name> <operator pos:line="55" pos:column="23">=<pos:position pos:line="55" pos:column="24"/></operator> <literal type="number" pos:line="55" pos:column="25">2<pos:position pos:line="55" pos:column="26"/></literal></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">strbuf_addf<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><operator pos:line="56" pos:column="29">&amp;<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="30">buf<pos:position pos:line="56" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="35">"%c "<pos:position pos:line="56" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="42">comment_line_char<pos:position pos:line="56" pos:column="59"/></name></expr></argument>)<pos:position pos:line="56" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">strbuf_addf<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">(<argument><expr><operator pos:line="57" pos:column="29">&amp;<pos:position pos:line="57" pos:column="34"/></operator><name pos:line="57" pos:column="30">buf<pos:position pos:line="57" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="35">_<pos:position pos:line="57" pos:column="36"/></name><argument_list pos:line="57" pos:column="36">(<argument><expr><literal type="string" pos:line="57" pos:column="37">"This is a combination of %d commits."<pos:position pos:line="57" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="76"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="58" pos:column="29">count<pos:position pos:line="58" pos:column="34"/></name></expr></argument>)<pos:position pos:line="58" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">strbuf_addf<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><operator pos:line="59" pos:column="29">&amp;<pos:position pos:line="59" pos:column="34"/></operator><name pos:line="59" pos:column="30">buf<pos:position pos:line="59" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="35">"\n%c "<pos:position pos:line="59" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="44">comment_line_char<pos:position pos:line="59" pos:column="61"/></name></expr></argument>)<pos:position pos:line="59" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">strbuf_addstr<pos:position pos:line="60" pos:column="30"/></name><argument_list pos:line="60" pos:column="30">(<argument><expr><operator pos:line="60" pos:column="31">&amp;<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="32">buf<pos:position pos:line="60" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="37">_<pos:position pos:line="60" pos:column="38"/></name><argument_list pos:line="60" pos:column="38">(<argument><expr><literal type="string" pos:line="60" pos:column="39">"This is the 1st commit message:"<pos:position pos:line="60" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="61" pos:column="17">strbuf_addstr<pos:position pos:line="61" pos:column="30"/></name><argument_list pos:line="61" pos:column="30">(<argument><expr><operator pos:line="61" pos:column="31">&amp;<pos:position pos:line="61" pos:column="36"/></operator><name pos:line="61" pos:column="32">buf<pos:position pos:line="61" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="37">"\n\n"<pos:position pos:line="61" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">strbuf_addstr<pos:position pos:line="62" pos:column="30"/></name><argument_list pos:line="62" pos:column="30">(<argument><expr><operator pos:line="62" pos:column="31">&amp;<pos:position pos:line="62" pos:column="36"/></operator><name pos:line="62" pos:column="32">buf<pos:position pos:line="62" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="37">body<pos:position pos:line="62" pos:column="41"/></name></expr></argument>)<pos:position pos:line="62" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="43"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="64" pos:column="17">unuse_commit_buffer<pos:position pos:line="64" pos:column="36"/></name><argument_list pos:line="64" pos:column="36">(<argument><expr><name pos:line="64" pos:column="37">head_commit<pos:position pos:line="64" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="50">head_message<pos:position pos:line="64" pos:column="62"/></name></expr></argument>)<pos:position pos:line="64" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="64"/></expr_stmt>
	}<pos:position pos:line="65" pos:column="10"/></block></else></if>

	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><operator pos:line="67" pos:column="13">!<pos:position pos:line="67" pos:column="14"/></operator><operator pos:line="67" pos:column="14">(<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="15">message<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">=<pos:position pos:line="67" pos:column="24"/></operator> <call><name pos:line="67" pos:column="25">get_commit_buffer<pos:position pos:line="67" pos:column="42"/></name><argument_list pos:line="67" pos:column="42">(<argument><expr><name pos:line="67" pos:column="43">commit<pos:position pos:line="67" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="51">NULL<pos:position pos:line="67" pos:column="55"/></name></expr></argument>)<pos:position pos:line="67" pos:column="56"/></argument_list></call><operator pos:line="67" pos:column="56">)<pos:position pos:line="67" pos:column="57"/></operator></expr>)<pos:position pos:line="67" pos:column="58"/></condition><then pos:line="67" pos:column="58">
		<block type="pseudo"><return pos:line="68" pos:column="17">return <expr><call><name pos:line="68" pos:column="24">error<pos:position pos:line="68" pos:column="29"/></name><argument_list pos:line="68" pos:column="29">(<argument><expr><call><name pos:line="68" pos:column="30">_<pos:position pos:line="68" pos:column="31"/></name><argument_list pos:line="68" pos:column="31">(<argument><expr><literal type="string" pos:line="68" pos:column="32">"could not read commit message of %s"<pos:position pos:line="68" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="70"/></argument_list></call></expr></argument>,
			     <argument><expr><call><name pos:line="69" pos:column="30">oid_to_hex<pos:position pos:line="69" pos:column="40"/></name><argument_list pos:line="69" pos:column="40">(<argument><expr><operator pos:line="69" pos:column="41">&amp;<pos:position pos:line="69" pos:column="46"/></operator><name><name pos:line="69" pos:column="42">commit<pos:position pos:line="69" pos:column="48"/></name><operator pos:line="69" pos:column="48">-&gt;<pos:position pos:line="69" pos:column="53"/></operator><name pos:line="69" pos:column="50">object<pos:position pos:line="69" pos:column="56"/></name><operator pos:line="69" pos:column="56">.<pos:position pos:line="69" pos:column="57"/></operator><name pos:line="69" pos:column="57">oid<pos:position pos:line="69" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="69" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="63"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">find_commit_subject<pos:position pos:line="70" pos:column="28"/></name><argument_list pos:line="70" pos:column="28">(<argument><expr><name pos:line="70" pos:column="29">message<pos:position pos:line="70" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="38">&amp;<pos:position pos:line="70" pos:column="43"/></operator><name pos:line="70" pos:column="39">body<pos:position pos:line="70" pos:column="43"/></name></expr></argument>)<pos:position pos:line="70" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="45"/></expr_stmt>

	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name pos:line="72" pos:column="13">command<pos:position pos:line="72" pos:column="20"/></name> <operator pos:line="72" pos:column="21">==<pos:position pos:line="72" pos:column="23"/></operator> <name pos:line="72" pos:column="24">TODO_SQUASH<pos:position pos:line="72" pos:column="35"/></name></expr>)<pos:position pos:line="72" pos:column="36"/></condition><then pos:line="72" pos:column="36"> <block pos:line="72" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="73" pos:column="17">unlink<pos:position pos:line="73" pos:column="23"/></name><argument_list pos:line="73" pos:column="23">(<argument><expr><call><name pos:line="73" pos:column="24">rebase_path_fixup_msg<pos:position pos:line="73" pos:column="45"/></name><argument_list pos:line="73" pos:column="45">()<pos:position pos:line="73" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="74" pos:column="17">strbuf_addf<pos:position pos:line="74" pos:column="28"/></name><argument_list pos:line="74" pos:column="28">(<argument><expr><operator pos:line="74" pos:column="29">&amp;<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="30">buf<pos:position pos:line="74" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="35">"\n%c "<pos:position pos:line="74" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="44">comment_line_char<pos:position pos:line="74" pos:column="61"/></name></expr></argument>)<pos:position pos:line="74" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="75" pos:column="17">strbuf_addf<pos:position pos:line="75" pos:column="28"/></name><argument_list pos:line="75" pos:column="28">(<argument><expr><operator pos:line="75" pos:column="29">&amp;<pos:position pos:line="75" pos:column="34"/></operator><name pos:line="75" pos:column="30">buf<pos:position pos:line="75" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="75" pos:column="35">_<pos:position pos:line="75" pos:column="36"/></name><argument_list pos:line="75" pos:column="36">(<argument><expr><literal type="string" pos:line="75" pos:column="37">"This is the commit message #%d:"<pos:position pos:line="75" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="75" pos:column="73">count<pos:position pos:line="75" pos:column="78"/></name></expr></argument>)<pos:position pos:line="75" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="76" pos:column="17">strbuf_addstr<pos:position pos:line="76" pos:column="30"/></name><argument_list pos:line="76" pos:column="30">(<argument><expr><operator pos:line="76" pos:column="31">&amp;<pos:position pos:line="76" pos:column="36"/></operator><name pos:line="76" pos:column="32">buf<pos:position pos:line="76" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="37">"\n\n"<pos:position pos:line="76" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="77" pos:column="17">strbuf_addstr<pos:position pos:line="77" pos:column="30"/></name><argument_list pos:line="77" pos:column="30">(<argument><expr><operator pos:line="77" pos:column="31">&amp;<pos:position pos:line="77" pos:column="36"/></operator><name pos:line="77" pos:column="32">buf<pos:position pos:line="77" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="37">body<pos:position pos:line="77" pos:column="41"/></name></expr></argument>)<pos:position pos:line="77" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="78" pos:column="10"/></block></then> <elseif pos:line="78" pos:column="11">else <if pos:line="78" pos:column="16">if <condition pos:line="78" pos:column="19">(<expr><name pos:line="78" pos:column="20">command<pos:position pos:line="78" pos:column="27"/></name> <operator pos:line="78" pos:column="28">==<pos:position pos:line="78" pos:column="30"/></operator> <name pos:line="78" pos:column="31">TODO_FIXUP<pos:position pos:line="78" pos:column="41"/></name></expr>)<pos:position pos:line="78" pos:column="42"/></condition><then pos:line="78" pos:column="42"> <block pos:line="78" pos:column="43">{
		<expr_stmt><expr><call><name pos:line="79" pos:column="17">strbuf_addf<pos:position pos:line="79" pos:column="28"/></name><argument_list pos:line="79" pos:column="28">(<argument><expr><operator pos:line="79" pos:column="29">&amp;<pos:position pos:line="79" pos:column="34"/></operator><name pos:line="79" pos:column="30">buf<pos:position pos:line="79" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="35">"\n%c "<pos:position pos:line="79" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="44">comment_line_char<pos:position pos:line="79" pos:column="61"/></name></expr></argument>)<pos:position pos:line="79" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="80" pos:column="17">strbuf_addf<pos:position pos:line="80" pos:column="28"/></name><argument_list pos:line="80" pos:column="28">(<argument><expr><operator pos:line="80" pos:column="29">&amp;<pos:position pos:line="80" pos:column="34"/></operator><name pos:line="80" pos:column="30">buf<pos:position pos:line="80" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="80" pos:column="35">_<pos:position pos:line="80" pos:column="36"/></name><argument_list pos:line="80" pos:column="36">(<argument><expr><literal type="string" pos:line="80" pos:column="37">"The commit message #%d will be skipped:"<pos:position pos:line="80" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="79"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="81" pos:column="29">count<pos:position pos:line="81" pos:column="34"/></name></expr></argument>)<pos:position pos:line="81" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="82" pos:column="17">strbuf_addstr<pos:position pos:line="82" pos:column="30"/></name><argument_list pos:line="82" pos:column="30">(<argument><expr><operator pos:line="82" pos:column="31">&amp;<pos:position pos:line="82" pos:column="36"/></operator><name pos:line="82" pos:column="32">buf<pos:position pos:line="82" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="37">"\n\n"<pos:position pos:line="82" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="83" pos:column="17">strbuf_add_commented_lines<pos:position pos:line="83" pos:column="43"/></name><argument_list pos:line="83" pos:column="43">(<argument><expr><operator pos:line="83" pos:column="44">&amp;<pos:position pos:line="83" pos:column="49"/></operator><name pos:line="83" pos:column="45">buf<pos:position pos:line="83" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="50">body<pos:position pos:line="83" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="83" pos:column="56">strlen<pos:position pos:line="83" pos:column="62"/></name><argument_list pos:line="83" pos:column="62">(<argument><expr><name pos:line="83" pos:column="63">body<pos:position pos:line="83" pos:column="67"/></name></expr></argument>)<pos:position pos:line="83" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="70"/></expr_stmt>
	}<pos:position pos:line="84" pos:column="10"/></block></then></if></elseif> <else pos:line="84" pos:column="11">else
		<block type="pseudo"><return pos:line="85" pos:column="17">return <expr><call><name pos:line="85" pos:column="24">error<pos:position pos:line="85" pos:column="29"/></name><argument_list pos:line="85" pos:column="29">(<argument><expr><call><name pos:line="85" pos:column="30">_<pos:position pos:line="85" pos:column="31"/></name><argument_list pos:line="85" pos:column="31">(<argument><expr><literal type="string" pos:line="85" pos:column="32">"unknown command: %d"<pos:position pos:line="85" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="85" pos:column="56">command<pos:position pos:line="85" pos:column="63"/></name></expr></argument>)<pos:position pos:line="85" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="65"/></return></block></else></if>
	<expr_stmt><expr><call><name pos:line="86" pos:column="9">unuse_commit_buffer<pos:position pos:line="86" pos:column="28"/></name><argument_list pos:line="86" pos:column="28">(<argument><expr><name pos:line="86" pos:column="29">commit<pos:position pos:line="86" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="37">message<pos:position pos:line="86" pos:column="44"/></name></expr></argument>)<pos:position pos:line="86" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><name pos:line="88" pos:column="9">res<pos:position pos:line="88" pos:column="12"/></name> <operator pos:line="88" pos:column="13">=<pos:position pos:line="88" pos:column="14"/></operator> <call><name pos:line="88" pos:column="15">write_message<pos:position pos:line="88" pos:column="28"/></name><argument_list pos:line="88" pos:column="28">(<argument><expr><name><name pos:line="88" pos:column="29">buf<pos:position pos:line="88" pos:column="32"/></name><operator pos:line="88" pos:column="32">.<pos:position pos:line="88" pos:column="33"/></operator><name pos:line="88" pos:column="33">buf<pos:position pos:line="88" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="38">buf<pos:position pos:line="88" pos:column="41"/></name><operator pos:line="88" pos:column="41">.<pos:position pos:line="88" pos:column="42"/></operator><name pos:line="88" pos:column="42">len<pos:position pos:line="88" pos:column="45"/></name></name></expr></argument>, <argument><expr><call><name pos:line="88" pos:column="47">rebase_path_squash_msg<pos:position pos:line="88" pos:column="69"/></name><argument_list pos:line="88" pos:column="69">()<pos:position pos:line="88" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="73">0<pos:position pos:line="88" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="76"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="89" pos:column="9">strbuf_release<pos:position pos:line="89" pos:column="23"/></name><argument_list pos:line="89" pos:column="23">(<argument><expr><operator pos:line="89" pos:column="24">&amp;<pos:position pos:line="89" pos:column="29"/></operator><name pos:line="89" pos:column="25">buf<pos:position pos:line="89" pos:column="28"/></name></expr></argument>)<pos:position pos:line="89" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="30"/></expr_stmt>
	<return pos:line="90" pos:column="9">return <expr><name pos:line="90" pos:column="16">res<pos:position pos:line="90" pos:column="19"/></name></expr>;<pos:position pos:line="90" pos:column="20"/></return>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

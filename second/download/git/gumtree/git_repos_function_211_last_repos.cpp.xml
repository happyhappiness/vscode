<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_211_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">consume_line<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">state_<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">line<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">unsigned<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">long<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">len<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">combine_diff_state<pos:position pos:line="3" pos:column="34"/></name></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">state<pos:position pos:line="3" pos:column="41"/></name> <init pos:line="3" pos:column="42">= <expr><name pos:line="3" pos:column="44">state_<pos:position pos:line="3" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><literal type="number" pos:line="4" pos:column="13">5<pos:position pos:line="4" pos:column="14"/></literal> <operator pos:line="4" pos:column="15">&lt;<pos:position pos:line="4" pos:column="19"/></operator> <name pos:line="4" pos:column="17">len<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">&amp;&amp;<pos:position pos:line="4" pos:column="31"/></operator> <operator pos:line="4" pos:column="24">!<pos:position pos:line="4" pos:column="25"/></operator><call><name pos:line="4" pos:column="25">memcmp<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">(<argument><expr><literal type="string" pos:line="4" pos:column="32">"@@ -"<pos:position pos:line="4" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="40">line<pos:position pos:line="4" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="46">4<pos:position pos:line="4" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="49"/></condition><then pos:line="4" pos:column="49"> <block pos:line="4" pos:column="50">{
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><call><name pos:line="5" pos:column="21">parse_hunk_header<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">line<pos:position pos:line="5" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="45">len<pos:position pos:line="5" pos:column="48"/></name></expr></argument>,
				      <argument><expr><operator pos:line="6" pos:column="39">&amp;<pos:position pos:line="6" pos:column="44"/></operator><name><name pos:line="6" pos:column="40">state<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">-&gt;<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="47">ob<pos:position pos:line="6" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="51">&amp;<pos:position pos:line="6" pos:column="56"/></operator><name><name pos:line="6" pos:column="52">state<pos:position pos:line="6" pos:column="57"/></name><operator pos:line="6" pos:column="57">-&gt;<pos:position pos:line="6" pos:column="62"/></operator><name pos:line="6" pos:column="59">on<pos:position pos:line="6" pos:column="61"/></name></name></expr></argument>,
				      <argument><expr><operator pos:line="7" pos:column="39">&amp;<pos:position pos:line="7" pos:column="44"/></operator><name><name pos:line="7" pos:column="40">state<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">-&gt;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="47">nb<pos:position pos:line="7" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="51">&amp;<pos:position pos:line="7" pos:column="56"/></operator><name><name pos:line="7" pos:column="52">state<pos:position pos:line="7" pos:column="57"/></name><operator pos:line="7" pos:column="57">-&gt;<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="59">nn<pos:position pos:line="7" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="63"/></condition><then pos:line="7" pos:column="63">
			<block type="pseudo"><return pos:line="8" pos:column="25">return;<pos:position pos:line="8" pos:column="32"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="9" pos:column="17">state<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">lno<pos:position pos:line="9" pos:column="27"/></name></name> <operator pos:line="9" pos:column="28">=<pos:position pos:line="9" pos:column="29"/></operator> <name><name pos:line="9" pos:column="30">state<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">nb<pos:position pos:line="9" pos:column="39"/></name></name></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name><name pos:line="10" pos:column="21">state<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">nn<pos:position pos:line="10" pos:column="30"/></name></name> <operator pos:line="10" pos:column="31">==<pos:position pos:line="10" pos:column="33"/></operator> <literal type="number" pos:line="10" pos:column="34">0<pos:position pos:line="10" pos:column="35"/></literal></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36"> <block pos:line="10" pos:column="37">{
			<comment type="block" pos:line="11" pos:column="25">/* @@ -X,Y +N,0 @@ removed Y lines
			 * that would have come *after* line N
			 * in the result.  Our lost buckets hang
			 * to the line after the removed lines,
			 *
			 * Note that this is correct even when N == 0,
			 * in which case the hunk removes the first
			 * line in the file.
			 */</comment>
			<expr_stmt><expr><name><name pos:line="20" pos:column="25">state<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">lost_bucket<pos:position pos:line="20" pos:column="43"/></name></name> <operator pos:line="20" pos:column="44">=<pos:position pos:line="20" pos:column="45"/></operator> <operator pos:line="20" pos:column="46">&amp;<pos:position pos:line="20" pos:column="51"/></operator><name><name pos:line="20" pos:column="47">state<pos:position pos:line="20" pos:column="52"/></name><operator pos:line="20" pos:column="52">-&gt;<pos:position pos:line="20" pos:column="57"/></operator><name pos:line="20" pos:column="54">sline<pos:position pos:line="20" pos:column="59"/></name><index pos:line="20" pos:column="59">[<expr><name><name pos:line="20" pos:column="60">state<pos:position pos:line="20" pos:column="65"/></name><operator pos:line="20" pos:column="65">-&gt;<pos:position pos:line="20" pos:column="70"/></operator><name pos:line="20" pos:column="67">nb<pos:position pos:line="20" pos:column="69"/></name></name></expr>]<pos:position pos:line="20" pos:column="70"/></index></name></expr>;<pos:position pos:line="20" pos:column="71"/></expr_stmt>
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><operator pos:line="21" pos:column="29">!<pos:position pos:line="21" pos:column="30"/></operator><name><name pos:line="21" pos:column="30">state<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">-&gt;<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="37">nb<pos:position pos:line="21" pos:column="39"/></name></name></expr>)<pos:position pos:line="21" pos:column="40"/></condition><then pos:line="21" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="33">state<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">nb<pos:position pos:line="22" pos:column="42"/></name></name> <operator pos:line="22" pos:column="43">=<pos:position pos:line="22" pos:column="44"/></operator> <literal type="number" pos:line="22" pos:column="45">1<pos:position pos:line="22" pos:column="46"/></literal></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt></block></then></if>
		}<pos:position pos:line="23" pos:column="18"/></block></then> <else pos:line="23" pos:column="19">else <block pos:line="23" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="24" pos:column="25">state<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">-&gt;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="32">lost_bucket<pos:position pos:line="24" pos:column="43"/></name></name> <operator pos:line="24" pos:column="44">=<pos:position pos:line="24" pos:column="45"/></operator> <operator pos:line="24" pos:column="46">&amp;<pos:position pos:line="24" pos:column="51"/></operator><name><name pos:line="24" pos:column="47">state<pos:position pos:line="24" pos:column="52"/></name><operator pos:line="24" pos:column="52">-&gt;<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="54">sline<pos:position pos:line="24" pos:column="59"/></name><index pos:line="24" pos:column="59">[<expr><name><name pos:line="24" pos:column="60">state<pos:position pos:line="24" pos:column="65"/></name><operator pos:line="24" pos:column="65">-&gt;<pos:position pos:line="24" pos:column="70"/></operator><name pos:line="24" pos:column="67">nb<pos:position pos:line="24" pos:column="69"/></name></name><operator pos:line="24" pos:column="69">-<pos:position pos:line="24" pos:column="70"/></operator><literal type="number" pos:line="24" pos:column="70">1<pos:position pos:line="24" pos:column="71"/></literal></expr>]<pos:position pos:line="24" pos:column="72"/></index></name></expr>;<pos:position pos:line="24" pos:column="73"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></else></if>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><name><name pos:line="26" pos:column="22">state<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">sline<pos:position pos:line="26" pos:column="34"/></name><index pos:line="26" pos:column="34">[<expr><name><name pos:line="26" pos:column="35">state<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">-&gt;<pos:position pos:line="26" pos:column="45"/></operator><name pos:line="26" pos:column="42">nb<pos:position pos:line="26" pos:column="44"/></name></name><operator pos:line="26" pos:column="44">-<pos:position pos:line="26" pos:column="45"/></operator><literal type="number" pos:line="26" pos:column="45">1<pos:position pos:line="26" pos:column="46"/></literal></expr>]<pos:position pos:line="26" pos:column="47"/></index></name><operator pos:line="26" pos:column="47">.<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="48">p_lno<pos:position pos:line="26" pos:column="53"/></name></expr>)<pos:position pos:line="26" pos:column="54"/></condition><then pos:line="26" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="25">state<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">sline<pos:position pos:line="27" pos:column="37"/></name><index pos:line="27" pos:column="37">[<expr><name><name pos:line="27" pos:column="38">state<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">-&gt;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="45">nb<pos:position pos:line="27" pos:column="47"/></name></name><operator pos:line="27" pos:column="47">-<pos:position pos:line="27" pos:column="48"/></operator><literal type="number" pos:line="27" pos:column="48">1<pos:position pos:line="27" pos:column="49"/></literal></expr>]<pos:position pos:line="27" pos:column="50"/></index></name><operator pos:line="27" pos:column="50">.<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="51">p_lno<pos:position pos:line="27" pos:column="56"/></name> <operator pos:line="27" pos:column="57">=<pos:position pos:line="27" pos:column="58"/></operator>
				<call><name pos:line="28" pos:column="33">xcalloc<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><name><name pos:line="28" pos:column="41">state<pos:position pos:line="28" pos:column="46"/></name><operator pos:line="28" pos:column="46">-&gt;<pos:position pos:line="28" pos:column="51"/></operator><name pos:line="28" pos:column="48">num_parent<pos:position pos:line="28" pos:column="58"/></name></name></expr></argument>,
					<argument><expr pos:line="29" pos:column="41">sizeof<operator pos:line="29" pos:column="47">(<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="48">unsigned<pos:position pos:line="29" pos:column="56"/></name> <name pos:line="29" pos:column="57">long<pos:position pos:line="29" pos:column="61"/></name><operator pos:line="29" pos:column="61">)<pos:position pos:line="29" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="64"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="30" pos:column="17">state<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">-&gt;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="24">sline<pos:position pos:line="30" pos:column="29"/></name><index pos:line="30" pos:column="29">[<expr><name><name pos:line="30" pos:column="30">state<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">nb<pos:position pos:line="30" pos:column="39"/></name></name><operator pos:line="30" pos:column="39">-<pos:position pos:line="30" pos:column="40"/></operator><literal type="number" pos:line="30" pos:column="40">1<pos:position pos:line="30" pos:column="41"/></literal></expr>]<pos:position pos:line="30" pos:column="42"/></index></name><operator pos:line="30" pos:column="42">.<pos:position pos:line="30" pos:column="43"/></operator><name><name pos:line="30" pos:column="43">p_lno<pos:position pos:line="30" pos:column="48"/></name><index pos:line="30" pos:column="48">[<expr><name><name pos:line="30" pos:column="49">state<pos:position pos:line="30" pos:column="54"/></name><operator pos:line="30" pos:column="54">-&gt;<pos:position pos:line="30" pos:column="59"/></operator><name pos:line="30" pos:column="56">n<pos:position pos:line="30" pos:column="57"/></name></name></expr>]<pos:position pos:line="30" pos:column="58"/></index></name> <operator pos:line="30" pos:column="59">=<pos:position pos:line="30" pos:column="60"/></operator> <name><name pos:line="30" pos:column="61">state<pos:position pos:line="30" pos:column="66"/></name><operator pos:line="30" pos:column="66">-&gt;<pos:position pos:line="30" pos:column="71"/></operator><name pos:line="30" pos:column="68">ob<pos:position pos:line="30" pos:column="70"/></name></name></expr>;<pos:position pos:line="30" pos:column="71"/></expr_stmt>
		<return pos:line="31" pos:column="17">return;<pos:position pos:line="31" pos:column="24"/></return>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><name><name pos:line="33" pos:column="14">state<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">lost_bucket<pos:position pos:line="33" pos:column="32"/></name></name></expr>)<pos:position pos:line="33" pos:column="33"/></condition><then pos:line="33" pos:column="33">
		<block type="pseudo"><return pos:line="34" pos:column="17">return;<pos:position pos:line="34" pos:column="24"/></return></block></then></if> <comment type="block" pos:line="34" pos:column="25">/* not in any hunk yet */</comment>
	<switch pos:line="35" pos:column="9">switch <condition pos:line="35" pos:column="16">(<expr><name><name pos:line="35" pos:column="17">line<pos:position pos:line="35" pos:column="21"/></name><index pos:line="35" pos:column="21">[<expr><literal type="number" pos:line="35" pos:column="22">0<pos:position pos:line="35" pos:column="23"/></literal></expr>]<pos:position pos:line="35" pos:column="24"/></index></name></expr>)<pos:position pos:line="35" pos:column="25"/></condition> <block pos:line="35" pos:column="26">{
	<case pos:line="36" pos:column="9">case <expr><literal type="char" pos:line="36" pos:column="14">'-'<pos:position pos:line="36" pos:column="17"/></literal></expr>:<pos:position pos:line="36" pos:column="18"/></case>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">append_lost<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><name><name pos:line="37" pos:column="29">state<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">-&gt;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="36">lost_bucket<pos:position pos:line="37" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="49">state<pos:position pos:line="37" pos:column="54"/></name><operator pos:line="37" pos:column="54">-&gt;<pos:position pos:line="37" pos:column="59"/></operator><name pos:line="37" pos:column="56">n<pos:position pos:line="37" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="59">line<pos:position pos:line="37" pos:column="63"/></name><operator pos:line="37" pos:column="63">+<pos:position pos:line="37" pos:column="64"/></operator><literal type="number" pos:line="37" pos:column="64">1<pos:position pos:line="37" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="67">len<pos:position pos:line="37" pos:column="70"/></name><operator pos:line="37" pos:column="70">-<pos:position pos:line="37" pos:column="71"/></operator><literal type="number" pos:line="37" pos:column="71">1<pos:position pos:line="37" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="74"/></expr_stmt>
		<break pos:line="38" pos:column="17">break;<pos:position pos:line="38" pos:column="23"/></break>
	<case pos:line="39" pos:column="9">case <expr><literal type="char" pos:line="39" pos:column="14">'+'<pos:position pos:line="39" pos:column="17"/></literal></expr>:<pos:position pos:line="39" pos:column="18"/></case>
		<expr_stmt><expr><name><name pos:line="40" pos:column="17">state<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">-&gt;<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="24">sline<pos:position pos:line="40" pos:column="29"/></name><index pos:line="40" pos:column="29">[<expr><name><name pos:line="40" pos:column="30">state<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">-&gt;<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="37">lno<pos:position pos:line="40" pos:column="40"/></name></name><operator pos:line="40" pos:column="40">-<pos:position pos:line="40" pos:column="41"/></operator><literal type="number" pos:line="40" pos:column="41">1<pos:position pos:line="40" pos:column="42"/></literal></expr>]<pos:position pos:line="40" pos:column="43"/></index></name><operator pos:line="40" pos:column="43">.<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="44">flag<pos:position pos:line="40" pos:column="48"/></name> <operator pos:line="40" pos:column="49">|=<pos:position pos:line="40" pos:column="51"/></operator> <name><name pos:line="40" pos:column="52">state<pos:position pos:line="40" pos:column="57"/></name><operator pos:line="40" pos:column="57">-&gt;<pos:position pos:line="40" pos:column="62"/></operator><name pos:line="40" pos:column="59">nmask<pos:position pos:line="40" pos:column="64"/></name></name></expr>;<pos:position pos:line="40" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="41" pos:column="17">state<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">-&gt;<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="24">lno<pos:position pos:line="41" pos:column="27"/></name></name><operator pos:line="41" pos:column="27">++<pos:position pos:line="41" pos:column="29"/></operator></expr>;<pos:position pos:line="41" pos:column="30"/></expr_stmt>
		<break pos:line="42" pos:column="17">break;<pos:position pos:line="42" pos:column="23"/></break>
	}<pos:position pos:line="43" pos:column="10"/></block></switch>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

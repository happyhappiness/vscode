<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_554_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">is_empty<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">s<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<while pos:line="3" pos:column="9">while <condition pos:line="3" pos:column="15">(<expr><operator pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="17">s<pos:position pos:line="3" pos:column="18"/></name> <operator pos:line="3" pos:column="19">!=<pos:position pos:line="3" pos:column="21"/></operator> <literal type="char" pos:line="3" pos:column="22">'\0'<pos:position pos:line="3" pos:column="26"/></literal></expr>)<pos:position pos:line="3" pos:column="27"/></condition> <block pos:line="3" pos:column="28">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><operator pos:line="4" pos:column="21">!<pos:position pos:line="4" pos:column="22"/></operator><call><name pos:line="4" pos:column="22">isspace<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">(<argument><expr><operator pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">s<pos:position pos:line="4" pos:column="32"/></name></expr></argument>)<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="34"/></condition><then pos:line="4" pos:column="34">
			<block type="pseudo"><return pos:line="5" pos:column="25">return <expr><literal type="number" pos:line="5" pos:column="32">0<pos:position pos:line="5" pos:column="33"/></literal></expr>;<pos:position pos:line="5" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="6" pos:column="17">s<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">++<pos:position pos:line="6" pos:column="20"/></operator></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="7" pos:column="10"/></block></while>
	<return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">1<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_982_git-2.11.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">wt_status_check_rebase<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">worktree<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">wt<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
			   <parameter><decl><type><name><name pos:line="2" pos:column="28">struct<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">wt_status_state<pos:position pos:line="2" pos:column="50"/></name></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">state<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">stat<pos:position pos:line="4" pos:column="20"/></name></name></type> <name pos:line="4" pos:column="21">st<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">stat<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><call><name pos:line="6" pos:column="19">worktree_git_path<pos:position pos:line="6" pos:column="36"/></name><argument_list pos:line="6" pos:column="36">(<argument><expr><name pos:line="6" pos:column="37">wt<pos:position pos:line="6" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="41">"rebase-apply"<pos:position pos:line="6" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="6" pos:column="58">&amp;<pos:position pos:line="6" pos:column="63"/></operator><name pos:line="6" pos:column="59">st<pos:position pos:line="6" pos:column="61"/></name></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="63"/></condition><then pos:line="6" pos:column="63"> <block pos:line="6" pos:column="64">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">!<pos:position pos:line="7" pos:column="22"/></operator><call><name pos:line="7" pos:column="22">stat<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><call><name pos:line="7" pos:column="27">worktree_git_path<pos:position pos:line="7" pos:column="44"/></name><argument_list pos:line="7" pos:column="44">(<argument><expr><name pos:line="7" pos:column="45">wt<pos:position pos:line="7" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="49">"rebase-apply/applying"<pos:position pos:line="7" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="7" pos:column="75">&amp;<pos:position pos:line="7" pos:column="80"/></operator><name pos:line="7" pos:column="76">st<pos:position pos:line="7" pos:column="78"/></name></expr></argument>)<pos:position pos:line="7" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="80"/></condition><then pos:line="7" pos:column="80"> <block pos:line="7" pos:column="81">{
			<expr_stmt><expr><name><name pos:line="8" pos:column="25">state<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">-&gt;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="32">am_in_progress<pos:position pos:line="8" pos:column="46"/></name></name> <operator pos:line="8" pos:column="47">=<pos:position pos:line="8" pos:column="48"/></operator> <literal type="number" pos:line="8" pos:column="49">1<pos:position pos:line="8" pos:column="50"/></literal></expr>;<pos:position pos:line="8" pos:column="51"/></expr_stmt>
			<if pos:line="9" pos:column="25">if <condition pos:line="9" pos:column="28">(<expr><operator pos:line="9" pos:column="29">!<pos:position pos:line="9" pos:column="30"/></operator><call><name pos:line="9" pos:column="30">stat<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><call><name pos:line="9" pos:column="35">worktree_git_path<pos:position pos:line="9" pos:column="52"/></name><argument_list pos:line="9" pos:column="52">(<argument><expr><name pos:line="9" pos:column="53">wt<pos:position pos:line="9" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="57">"rebase-apply/patch"<pos:position pos:line="9" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="9" pos:column="80">&amp;<pos:position pos:line="9" pos:column="85"/></operator><name pos:line="9" pos:column="81">st<pos:position pos:line="9" pos:column="83"/></name></expr></argument>)<pos:position pos:line="9" pos:column="84"/></argument_list></call> <operator pos:line="9" pos:column="85">&amp;&amp;<pos:position pos:line="9" pos:column="95"/></operator> <operator pos:line="9" pos:column="88">!<pos:position pos:line="9" pos:column="89"/></operator><name><name pos:line="9" pos:column="89">st<pos:position pos:line="9" pos:column="91"/></name><operator pos:line="9" pos:column="91">.<pos:position pos:line="9" pos:column="92"/></operator><name pos:line="9" pos:column="92">st_size<pos:position pos:line="9" pos:column="99"/></name></name></expr>)<pos:position pos:line="9" pos:column="100"/></condition><then pos:line="9" pos:column="100">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="10" pos:column="33">state<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">-&gt;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="40">am_empty_patch<pos:position pos:line="10" pos:column="54"/></name></name> <operator pos:line="10" pos:column="55">=<pos:position pos:line="10" pos:column="56"/></operator> <literal type="number" pos:line="10" pos:column="57">1<pos:position pos:line="10" pos:column="58"/></literal></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt></block></then></if>
		}<pos:position pos:line="11" pos:column="18"/></block></then> <else pos:line="11" pos:column="19">else <block pos:line="11" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="12" pos:column="25">state<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">rebase_in_progress<pos:position pos:line="12" pos:column="50"/></name></name> <operator pos:line="12" pos:column="51">=<pos:position pos:line="12" pos:column="52"/></operator> <literal type="number" pos:line="12" pos:column="53">1<pos:position pos:line="12" pos:column="54"/></literal></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="13" pos:column="25">state<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">branch<pos:position pos:line="13" pos:column="38"/></name></name> <operator pos:line="13" pos:column="39">=<pos:position pos:line="13" pos:column="40"/></operator> <call><name pos:line="13" pos:column="41">get_branch<pos:position pos:line="13" pos:column="51"/></name><argument_list pos:line="13" pos:column="51">(<argument><expr><name pos:line="13" pos:column="52">wt<pos:position pos:line="13" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="56">"rebase-apply/head-name"<pos:position pos:line="13" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="82"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="14" pos:column="25">state<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">onto<pos:position pos:line="14" pos:column="36"/></name></name> <operator pos:line="14" pos:column="37">=<pos:position pos:line="14" pos:column="38"/></operator> <call><name pos:line="14" pos:column="39">get_branch<pos:position pos:line="14" pos:column="49"/></name><argument_list pos:line="14" pos:column="49">(<argument><expr><name pos:line="14" pos:column="50">wt<pos:position pos:line="14" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="54">"rebase-apply/onto"<pos:position pos:line="14" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="15" pos:column="18"/></block></else></if>
	}<pos:position pos:line="16" pos:column="10"/></block></then> <elseif pos:line="16" pos:column="11">else <if pos:line="16" pos:column="16">if <condition pos:line="16" pos:column="19">(<expr><operator pos:line="16" pos:column="20">!<pos:position pos:line="16" pos:column="21"/></operator><call><name pos:line="16" pos:column="21">stat<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><call><name pos:line="16" pos:column="26">worktree_git_path<pos:position pos:line="16" pos:column="43"/></name><argument_list pos:line="16" pos:column="43">(<argument><expr><name pos:line="16" pos:column="44">wt<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="48">"rebase-merge"<pos:position pos:line="16" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="16" pos:column="65">&amp;<pos:position pos:line="16" pos:column="70"/></operator><name pos:line="16" pos:column="66">st<pos:position pos:line="16" pos:column="68"/></name></expr></argument>)<pos:position pos:line="16" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="70"/></condition><then pos:line="16" pos:column="70"> <block pos:line="16" pos:column="71">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><call><name pos:line="17" pos:column="22">stat<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><call><name pos:line="17" pos:column="27">worktree_git_path<pos:position pos:line="17" pos:column="44"/></name><argument_list pos:line="17" pos:column="44">(<argument><expr><name pos:line="17" pos:column="45">wt<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="49">"rebase-merge/interactive"<pos:position pos:line="17" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="17" pos:column="78">&amp;<pos:position pos:line="17" pos:column="83"/></operator><name pos:line="17" pos:column="79">st<pos:position pos:line="17" pos:column="81"/></name></expr></argument>)<pos:position pos:line="17" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="83"/></condition><then pos:line="17" pos:column="83">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="25">state<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">rebase_interactive_in_progress<pos:position pos:line="18" pos:column="62"/></name></name> <operator pos:line="18" pos:column="63">=<pos:position pos:line="18" pos:column="64"/></operator> <literal type="number" pos:line="18" pos:column="65">1<pos:position pos:line="18" pos:column="66"/></literal></expr>;<pos:position pos:line="18" pos:column="67"/></expr_stmt></block></then>
		<else pos:line="19" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="25">state<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">rebase_in_progress<pos:position pos:line="20" pos:column="50"/></name></name> <operator pos:line="20" pos:column="51">=<pos:position pos:line="20" pos:column="52"/></operator> <literal type="number" pos:line="20" pos:column="53">1<pos:position pos:line="20" pos:column="54"/></literal></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">state<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">branch<pos:position pos:line="21" pos:column="30"/></name></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <call><name pos:line="21" pos:column="33">get_branch<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">wt<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="48">"rebase-merge/head-name"<pos:position pos:line="21" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="22" pos:column="17">state<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">onto<pos:position pos:line="22" pos:column="28"/></name></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <call><name pos:line="22" pos:column="31">get_branch<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">(<argument><expr><name pos:line="22" pos:column="42">wt<pos:position pos:line="22" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="46">"rebase-merge/onto"<pos:position pos:line="22" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if></elseif> <else pos:line="23" pos:column="11">else
		<block type="pseudo"><return pos:line="24" pos:column="17">return <expr><literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></return></block></else></if>
	<return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">1<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

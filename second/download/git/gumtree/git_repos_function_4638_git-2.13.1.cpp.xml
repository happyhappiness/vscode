<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4638_git-2.13.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">xdl_recs_cmp<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">diffdata_t<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">dd1<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">long<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">off1<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">long<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">lim1<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
		 <parameter><decl><type><name pos:line="2" pos:column="18">diffdata_t<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">dd2<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">long<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">off2<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">long<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">lim2<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
		 <parameter><decl><type><name pos:line="3" pos:column="18">long<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">kvdf<pos:position pos:line="3" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="30">long<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">kvdb<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="42">int<pos:position pos:line="3" pos:column="45"/></name></type> <name pos:line="3" pos:column="46">need_min<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="56">xdalgoenv_t<pos:position pos:line="3" pos:column="67"/></name> <modifier pos:line="3" pos:column="68">*<pos:position pos:line="3" pos:column="69"/></modifier></type><name pos:line="3" pos:column="69">xenv<pos:position pos:line="3" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="74"/></parameter_list> <block pos:line="3" pos:column="75">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">long<pos:position pos:line="4" pos:column="22"/></name> <specifier pos:line="4" pos:column="23">const<pos:position pos:line="4" pos:column="28"/></specifier> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">ha1<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><name><name pos:line="4" pos:column="36">dd1<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">-&gt;<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="41">ha<pos:position pos:line="4" pos:column="43"/></name></name></expr></init></decl>, <modifier pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="46">ha2<pos:position pos:line="4" pos:column="49"/></name> <init pos:line="4" pos:column="50">= <expr><name><name pos:line="4" pos:column="52">dd2<pos:position pos:line="4" pos:column="55"/></name><operator pos:line="4" pos:column="55">-&gt;<pos:position pos:line="4" pos:column="60"/></operator><name pos:line="4" pos:column="57">ha<pos:position pos:line="4" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/*
	 * Shrink the box by walking through each diagonal snake (SW and NE).
	 */</comment>
	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init pos:line="9" pos:column="14">;<pos:position pos:line="9" pos:column="15"/></init> <condition><expr><name pos:line="9" pos:column="16">off1<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">&lt;<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="23">lim1<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">&amp;&amp;<pos:position pos:line="9" pos:column="38"/></operator> <name pos:line="9" pos:column="31">off2<pos:position pos:line="9" pos:column="35"/></name> <operator pos:line="9" pos:column="36">&lt;<pos:position pos:line="9" pos:column="40"/></operator> <name pos:line="9" pos:column="38">lim2<pos:position pos:line="9" pos:column="42"/></name> <operator pos:line="9" pos:column="43">&amp;&amp;<pos:position pos:line="9" pos:column="53"/></operator> <name><name pos:line="9" pos:column="46">ha1<pos:position pos:line="9" pos:column="49"/></name><index pos:line="9" pos:column="49">[<expr><name pos:line="9" pos:column="50">off1<pos:position pos:line="9" pos:column="54"/></name></expr>]<pos:position pos:line="9" pos:column="55"/></index></name> <operator pos:line="9" pos:column="56">==<pos:position pos:line="9" pos:column="58"/></operator> <name><name pos:line="9" pos:column="59">ha2<pos:position pos:line="9" pos:column="62"/></name><index pos:line="9" pos:column="62">[<expr><name pos:line="9" pos:column="63">off2<pos:position pos:line="9" pos:column="67"/></name></expr>]<pos:position pos:line="9" pos:column="68"/></index></name></expr>;<pos:position pos:line="9" pos:column="69"/></condition> <incr><expr><name pos:line="9" pos:column="70">off1<pos:position pos:line="9" pos:column="74"/></name><operator pos:line="9" pos:column="74">++<pos:position pos:line="9" pos:column="76"/></operator></expr><operator pos:line="9" pos:column="76">,<pos:position pos:line="9" pos:column="77"/></operator> <expr><name pos:line="9" pos:column="78">off2<pos:position pos:line="9" pos:column="82"/></name><operator pos:line="9" pos:column="82">++<pos:position pos:line="9" pos:column="84"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="85"/></control><block type="pseudo"><empty_stmt pos:line="9" pos:column="85">;<pos:position pos:line="9" pos:column="86"/></empty_stmt></block></for>
	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init pos:line="10" pos:column="14">;<pos:position pos:line="10" pos:column="15"/></init> <condition><expr><name pos:line="10" pos:column="16">off1<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">&lt;<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="23">lim1<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">&amp;&amp;<pos:position pos:line="10" pos:column="38"/></operator> <name pos:line="10" pos:column="31">off2<pos:position pos:line="10" pos:column="35"/></name> <operator pos:line="10" pos:column="36">&lt;<pos:position pos:line="10" pos:column="40"/></operator> <name pos:line="10" pos:column="38">lim2<pos:position pos:line="10" pos:column="42"/></name> <operator pos:line="10" pos:column="43">&amp;&amp;<pos:position pos:line="10" pos:column="53"/></operator> <name><name pos:line="10" pos:column="46">ha1<pos:position pos:line="10" pos:column="49"/></name><index pos:line="10" pos:column="49">[<expr><name pos:line="10" pos:column="50">lim1<pos:position pos:line="10" pos:column="54"/></name> <operator pos:line="10" pos:column="55">-<pos:position pos:line="10" pos:column="56"/></operator> <literal type="number" pos:line="10" pos:column="57">1<pos:position pos:line="10" pos:column="58"/></literal></expr>]<pos:position pos:line="10" pos:column="59"/></index></name> <operator pos:line="10" pos:column="60">==<pos:position pos:line="10" pos:column="62"/></operator> <name><name pos:line="10" pos:column="63">ha2<pos:position pos:line="10" pos:column="66"/></name><index pos:line="10" pos:column="66">[<expr><name pos:line="10" pos:column="67">lim2<pos:position pos:line="10" pos:column="71"/></name> <operator pos:line="10" pos:column="72">-<pos:position pos:line="10" pos:column="73"/></operator> <literal type="number" pos:line="10" pos:column="74">1<pos:position pos:line="10" pos:column="75"/></literal></expr>]<pos:position pos:line="10" pos:column="76"/></index></name></expr>;<pos:position pos:line="10" pos:column="77"/></condition> <incr><expr><name pos:line="10" pos:column="78">lim1<pos:position pos:line="10" pos:column="82"/></name><operator pos:line="10" pos:column="82">--<pos:position pos:line="10" pos:column="84"/></operator></expr><operator pos:line="10" pos:column="84">,<pos:position pos:line="10" pos:column="85"/></operator> <expr><name pos:line="10" pos:column="86">lim2<pos:position pos:line="10" pos:column="90"/></name><operator pos:line="10" pos:column="90">--<pos:position pos:line="10" pos:column="92"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="93"/></control><block type="pseudo"><empty_stmt pos:line="10" pos:column="93">;<pos:position pos:line="10" pos:column="94"/></empty_stmt></block></for>

	<comment type="block" pos:line="12" pos:column="9">/*
	 * If one dimension is empty, then all records on the other one must
	 * be obviously changed.
	 */</comment>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">off1<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">==<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">lim1<pos:position pos:line="16" pos:column="25"/></name></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26"> <block pos:line="16" pos:column="27">{
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">char<pos:position pos:line="17" pos:column="21"/></name> <modifier pos:line="17" pos:column="22">*<pos:position pos:line="17" pos:column="23"/></modifier></type><name pos:line="17" pos:column="23">rchg2<pos:position pos:line="17" pos:column="28"/></name> <init pos:line="17" pos:column="29">= <expr><name><name pos:line="17" pos:column="31">dd2<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">rchg<pos:position pos:line="17" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="17" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">long<pos:position pos:line="18" pos:column="21"/></name> <modifier pos:line="18" pos:column="22">*<pos:position pos:line="18" pos:column="23"/></modifier></type><name pos:line="18" pos:column="23">rindex2<pos:position pos:line="18" pos:column="30"/></name> <init pos:line="18" pos:column="31">= <expr><name><name pos:line="18" pos:column="33">dd2<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">-&gt;<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="38">rindex<pos:position pos:line="18" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="18" pos:column="45"/></decl_stmt>

		<for pos:line="20" pos:column="17">for <control pos:line="20" pos:column="21">(<init pos:line="20" pos:column="22">;<pos:position pos:line="20" pos:column="23"/></init> <condition><expr><name pos:line="20" pos:column="24">off2<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">&lt;<pos:position pos:line="20" pos:column="33"/></operator> <name pos:line="20" pos:column="31">lim2<pos:position pos:line="20" pos:column="35"/></name></expr>;<pos:position pos:line="20" pos:column="36"/></condition> <incr><expr><name pos:line="20" pos:column="37">off2<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">++<pos:position pos:line="20" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="44"/></control>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="25">rchg2<pos:position pos:line="21" pos:column="30"/></name><index pos:line="21" pos:column="30">[<expr><name><name pos:line="21" pos:column="31">rindex2<pos:position pos:line="21" pos:column="38"/></name><index pos:line="21" pos:column="38">[<expr><name pos:line="21" pos:column="39">off2<pos:position pos:line="21" pos:column="43"/></name></expr>]<pos:position pos:line="21" pos:column="44"/></index></name></expr>]<pos:position pos:line="21" pos:column="45"/></index></name> <operator pos:line="21" pos:column="46">=<pos:position pos:line="21" pos:column="47"/></operator> <literal type="number" pos:line="21" pos:column="48">1<pos:position pos:line="21" pos:column="49"/></literal></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt></block></for>
	}<pos:position pos:line="22" pos:column="10"/></block></then> <elseif pos:line="22" pos:column="11">else <if pos:line="22" pos:column="16">if <condition pos:line="22" pos:column="19">(<expr><name pos:line="22" pos:column="20">off2<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">==<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="28">lim2<pos:position pos:line="22" pos:column="32"/></name></expr>)<pos:position pos:line="22" pos:column="33"/></condition><then pos:line="22" pos:column="33"> <block pos:line="22" pos:column="34">{
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">char<pos:position pos:line="23" pos:column="21"/></name> <modifier pos:line="23" pos:column="22">*<pos:position pos:line="23" pos:column="23"/></modifier></type><name pos:line="23" pos:column="23">rchg1<pos:position pos:line="23" pos:column="28"/></name> <init pos:line="23" pos:column="29">= <expr><name><name pos:line="23" pos:column="31">dd1<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">rchg<pos:position pos:line="23" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="23" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">long<pos:position pos:line="24" pos:column="21"/></name> <modifier pos:line="24" pos:column="22">*<pos:position pos:line="24" pos:column="23"/></modifier></type><name pos:line="24" pos:column="23">rindex1<pos:position pos:line="24" pos:column="30"/></name> <init pos:line="24" pos:column="31">= <expr><name><name pos:line="24" pos:column="33">dd1<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">rindex<pos:position pos:line="24" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="24" pos:column="45"/></decl_stmt>

		<for pos:line="26" pos:column="17">for <control pos:line="26" pos:column="21">(<init pos:line="26" pos:column="22">;<pos:position pos:line="26" pos:column="23"/></init> <condition><expr><name pos:line="26" pos:column="24">off1<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">&lt;<pos:position pos:line="26" pos:column="33"/></operator> <name pos:line="26" pos:column="31">lim1<pos:position pos:line="26" pos:column="35"/></name></expr>;<pos:position pos:line="26" pos:column="36"/></condition> <incr><expr><name pos:line="26" pos:column="37">off1<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">++<pos:position pos:line="26" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="44"/></control>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="25">rchg1<pos:position pos:line="27" pos:column="30"/></name><index pos:line="27" pos:column="30">[<expr><name><name pos:line="27" pos:column="31">rindex1<pos:position pos:line="27" pos:column="38"/></name><index pos:line="27" pos:column="38">[<expr><name pos:line="27" pos:column="39">off1<pos:position pos:line="27" pos:column="43"/></name></expr>]<pos:position pos:line="27" pos:column="44"/></index></name></expr>]<pos:position pos:line="27" pos:column="45"/></index></name> <operator pos:line="27" pos:column="46">=<pos:position pos:line="27" pos:column="47"/></operator> <literal type="number" pos:line="27" pos:column="48">1<pos:position pos:line="27" pos:column="49"/></literal></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt></block></for>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if></elseif> <else pos:line="28" pos:column="11">else <block pos:line="28" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="29" pos:column="17">xdpsplit_t<pos:position pos:line="29" pos:column="27"/></name></type> <name pos:line="29" pos:column="28">spl<pos:position pos:line="29" pos:column="31"/></name></decl>;<pos:position pos:line="29" pos:column="32"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="30" pos:column="17">spl<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">.<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">i1<pos:position pos:line="30" pos:column="23"/></name></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <name><name pos:line="30" pos:column="26">spl<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">.<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="30">i2<pos:position pos:line="30" pos:column="32"/></name></name> <operator pos:line="30" pos:column="33">=<pos:position pos:line="30" pos:column="34"/></operator> <literal type="number" pos:line="30" pos:column="35">0<pos:position pos:line="30" pos:column="36"/></literal></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>

		<comment type="block" pos:line="32" pos:column="17">/*
		 * Divide ...
		 */</comment>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><call><name pos:line="35" pos:column="21">xdl_split<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">ha1<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="36">off1<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">lim1<pos:position pos:line="35" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="48">ha2<pos:position pos:line="35" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="53">off2<pos:position pos:line="35" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="59">lim2<pos:position pos:line="35" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="65">kvdf<pos:position pos:line="35" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="71">kvdb<pos:position pos:line="35" pos:column="75"/></name></expr></argument>,
			      <argument><expr><name pos:line="36" pos:column="31">need_min<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="41">&amp;<pos:position pos:line="36" pos:column="46"/></operator><name pos:line="36" pos:column="42">spl<pos:position pos:line="36" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">xenv<pos:position pos:line="36" pos:column="51"/></name></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></call> <operator pos:line="36" pos:column="53">&lt;<pos:position pos:line="36" pos:column="57"/></operator> <literal type="number" pos:line="36" pos:column="55">0<pos:position pos:line="36" pos:column="56"/></literal></expr>)<pos:position pos:line="36" pos:column="57"/></condition><then pos:line="36" pos:column="57"> <block pos:line="36" pos:column="58">{

			<return pos:line="38" pos:column="25">return <expr><operator pos:line="38" pos:column="32">-<pos:position pos:line="38" pos:column="33"/></operator><literal type="number" pos:line="38" pos:column="33">1<pos:position pos:line="38" pos:column="34"/></literal></expr>;<pos:position pos:line="38" pos:column="35"/></return>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="41" pos:column="17">/*
		 * ... et Impera.
		 */</comment>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><call><name pos:line="44" pos:column="21">xdl_recs_cmp<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name pos:line="44" pos:column="34">dd1<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="39">off1<pos:position pos:line="44" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="45">spl<pos:position pos:line="44" pos:column="48"/></name><operator pos:line="44" pos:column="48">.<pos:position pos:line="44" pos:column="49"/></operator><name pos:line="44" pos:column="49">i1<pos:position pos:line="44" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="53">dd2<pos:position pos:line="44" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="58">off2<pos:position pos:line="44" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="64">spl<pos:position pos:line="44" pos:column="67"/></name><operator pos:line="44" pos:column="67">.<pos:position pos:line="44" pos:column="68"/></operator><name pos:line="44" pos:column="68">i2<pos:position pos:line="44" pos:column="70"/></name></name></expr></argument>,
				 <argument><expr><name pos:line="45" pos:column="34">kvdf<pos:position pos:line="45" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="40">kvdb<pos:position pos:line="45" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="46">spl<pos:position pos:line="45" pos:column="49"/></name><operator pos:line="45" pos:column="49">.<pos:position pos:line="45" pos:column="50"/></operator><name pos:line="45" pos:column="50">min_lo<pos:position pos:line="45" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="58">xenv<pos:position pos:line="45" pos:column="62"/></name></expr></argument>)<pos:position pos:line="45" pos:column="63"/></argument_list></call> <operator pos:line="45" pos:column="64">&lt;<pos:position pos:line="45" pos:column="68"/></operator> <literal type="number" pos:line="45" pos:column="66">0<pos:position pos:line="45" pos:column="67"/></literal> <operator pos:line="45" pos:column="68">||<pos:position pos:line="45" pos:column="70"/></operator>
		    <call><name pos:line="46" pos:column="21">xdl_recs_cmp<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">dd1<pos:position pos:line="46" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="39">spl<pos:position pos:line="46" pos:column="42"/></name><operator pos:line="46" pos:column="42">.<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="43">i1<pos:position pos:line="46" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="47">lim1<pos:position pos:line="46" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="53">dd2<pos:position pos:line="46" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="58">spl<pos:position pos:line="46" pos:column="61"/></name><operator pos:line="46" pos:column="61">.<pos:position pos:line="46" pos:column="62"/></operator><name pos:line="46" pos:column="62">i2<pos:position pos:line="46" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="66">lim2<pos:position pos:line="46" pos:column="70"/></name></expr></argument>,
				 <argument><expr><name pos:line="47" pos:column="34">kvdf<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="40">kvdb<pos:position pos:line="47" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="46">spl<pos:position pos:line="47" pos:column="49"/></name><operator pos:line="47" pos:column="49">.<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="50">min_hi<pos:position pos:line="47" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="58">xenv<pos:position pos:line="47" pos:column="62"/></name></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call> <operator pos:line="47" pos:column="64">&lt;<pos:position pos:line="47" pos:column="68"/></operator> <literal type="number" pos:line="47" pos:column="66">0<pos:position pos:line="47" pos:column="67"/></literal></expr>)<pos:position pos:line="47" pos:column="68"/></condition><then pos:line="47" pos:column="68"> <block pos:line="47" pos:column="69">{

			<return pos:line="49" pos:column="25">return <expr><operator pos:line="49" pos:column="32">-<pos:position pos:line="49" pos:column="33"/></operator><literal type="number" pos:line="49" pos:column="33">1<pos:position pos:line="49" pos:column="34"/></literal></expr>;<pos:position pos:line="49" pos:column="35"/></return>
		}<pos:position pos:line="50" pos:column="18"/></block></then></if>
	}<pos:position pos:line="51" pos:column="10"/></block></else></if>

	<return pos:line="53" pos:column="9">return <expr><literal type="number" pos:line="53" pos:column="16">0<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

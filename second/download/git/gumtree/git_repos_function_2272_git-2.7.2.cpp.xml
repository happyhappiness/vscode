<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2272_git-2.7.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">url_normalize<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">url<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">url_info<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">out_info<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/*
	 * Normalize NUL-terminated url using the following rules:
	 *
	 * 1. Case-insensitive parts of url will be converted to lower case
	 * 2. %-encoded characters that do not need to be will be unencoded
	 * 3. Characters that are not %-encoded and must be will be encoded
	 * 4. All %-encodings will be converted to upper case hexadecimal
	 * 5. Leading 0s are removed from port numbers
	 * 6. If the default port for the scheme is given it will be removed
	 * 7. A path part (including empty) not starting with '/' has one added
	 * 8. Any dot segments (. or ..) in the path are resolved and removed
	 * 9. IPv6 host literals are allowed (but not normalized or validated)
	 *
	 * The rules are based on information in RFC 3986.
	 *
	 * Please note this function requires a full URL including a scheme
	 * and host part (except for file: URLs which may have an empty host).
	 *
	 * The return value is a newly allocated string that must be freed
	 * or NULL if the url is not valid.
	 *
	 * If out_info is non-NULL, the url and err fields therein will always
	 * be set.  If a non-NULL value is returned, it will be stored in
	 * out_info-&gt;url as well, out_info-&gt;err will be set to NULL and the
	 * other fields of *out_info will also be filled in.  If a NULL value
	 * is returned, NULL will be stored in out_info-&gt;url and out_info-&gt;err
	 * will be set to a brief, translated, error message, but no other
	 * fields will be filled in.
	 *
	 * This is NOT a URL validation function.  Full URL validation is NOT
	 * performed.  Some invalid host names are passed through this function
	 * undetected.  However, most all other problems that make a URL invalid
	 * will be detected (including a missing host for non file: URLs).
	 */</comment>

	<decl_stmt><decl><type><name pos:line="38" pos:column="9">size_t<pos:position pos:line="38" pos:column="15"/></name></type> <name pos:line="38" pos:column="16">url_len<pos:position pos:line="38" pos:column="23"/></name> <init pos:line="38" pos:column="24">= <expr><call><name pos:line="38" pos:column="26">strlen<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">url<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="39" pos:column="9">struct<pos:position pos:line="39" pos:column="15"/></name> <name pos:line="39" pos:column="16">strbuf<pos:position pos:line="39" pos:column="22"/></name></name></type> <name pos:line="39" pos:column="23">norm<pos:position pos:line="39" pos:column="27"/></name></decl>;<pos:position pos:line="39" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="40" pos:column="9">size_t<pos:position pos:line="40" pos:column="15"/></name></type> <name pos:line="40" pos:column="16">spanned<pos:position pos:line="40" pos:column="23"/></name></decl>;<pos:position pos:line="40" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="41" pos:column="9">size_t<pos:position pos:line="41" pos:column="15"/></name></type> <name pos:line="41" pos:column="16">scheme_len<pos:position pos:line="41" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="41" pos:column="28">user_off<pos:position pos:line="41" pos:column="36"/></name><init pos:line="41" pos:column="36">=<expr><literal type="number" pos:line="41" pos:column="37">0<pos:position pos:line="41" pos:column="38"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="41" pos:column="40">user_len<pos:position pos:line="41" pos:column="48"/></name><init pos:line="41" pos:column="48">=<expr><literal type="number" pos:line="41" pos:column="49">0<pos:position pos:line="41" pos:column="50"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="41" pos:column="52">passwd_off<pos:position pos:line="41" pos:column="62"/></name><init pos:line="41" pos:column="62">=<expr><literal type="number" pos:line="41" pos:column="63">0<pos:position pos:line="41" pos:column="64"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="41" pos:column="66">passwd_len<pos:position pos:line="41" pos:column="76"/></name><init pos:line="41" pos:column="76">=<expr><literal type="number" pos:line="41" pos:column="77">0<pos:position pos:line="41" pos:column="78"/></literal></expr></init></decl>;<pos:position pos:line="41" pos:column="79"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="42" pos:column="9">size_t<pos:position pos:line="42" pos:column="15"/></name></type> <name pos:line="42" pos:column="16">host_off<pos:position pos:line="42" pos:column="24"/></name><init pos:line="42" pos:column="24">=<expr><literal type="number" pos:line="42" pos:column="25">0<pos:position pos:line="42" pos:column="26"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="42" pos:column="28">host_len<pos:position pos:line="42" pos:column="36"/></name><init pos:line="42" pos:column="36">=<expr><literal type="number" pos:line="42" pos:column="37">0<pos:position pos:line="42" pos:column="38"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="42" pos:column="40">port_len<pos:position pos:line="42" pos:column="48"/></name><init pos:line="42" pos:column="48">=<expr><literal type="number" pos:line="42" pos:column="49">0<pos:position pos:line="42" pos:column="50"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="42" pos:column="52">path_off<pos:position pos:line="42" pos:column="60"/></name></decl>, <decl><type ref="prev"/><name pos:line="42" pos:column="62">path_len<pos:position pos:line="42" pos:column="70"/></name></decl>, <decl><type ref="prev"/><name pos:line="42" pos:column="72">result_len<pos:position pos:line="42" pos:column="82"/></name></decl>;<pos:position pos:line="42" pos:column="83"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="43" pos:column="9">const<pos:position pos:line="43" pos:column="14"/></specifier> <name pos:line="43" pos:column="15">char<pos:position pos:line="43" pos:column="19"/></name> <modifier pos:line="43" pos:column="20">*<pos:position pos:line="43" pos:column="21"/></modifier></type><name pos:line="43" pos:column="21">slash_ptr<pos:position pos:line="43" pos:column="30"/></name></decl>, <modifier pos:line="43" pos:column="32">*<pos:position pos:line="43" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="43" pos:column="33">at_ptr<pos:position pos:line="43" pos:column="39"/></name></decl>, <modifier pos:line="43" pos:column="41">*<pos:position pos:line="43" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="43" pos:column="42">colon_ptr<pos:position pos:line="43" pos:column="51"/></name></decl>, <modifier pos:line="43" pos:column="53">*<pos:position pos:line="43" pos:column="54"/></modifier><decl><type ref="prev"/><name pos:line="43" pos:column="54">path_start<pos:position pos:line="43" pos:column="64"/></name></decl>;<pos:position pos:line="43" pos:column="65"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="44" pos:column="9">char<pos:position pos:line="44" pos:column="13"/></name> <modifier pos:line="44" pos:column="14">*<pos:position pos:line="44" pos:column="15"/></modifier></type><name pos:line="44" pos:column="15">result<pos:position pos:line="44" pos:column="21"/></name></decl>;<pos:position pos:line="44" pos:column="22"/></decl_stmt>

	<comment type="block" pos:line="46" pos:column="9">/*
	 * Copy lowercased scheme and :// suffix, %-escapes are not allowed
	 * First character of scheme must be URL_ALPHA
	 */</comment>
	<expr_stmt><expr><name pos:line="50" pos:column="9">spanned<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">=<pos:position pos:line="50" pos:column="18"/></operator> <call><name pos:line="50" pos:column="19">strspn<pos:position pos:line="50" pos:column="25"/></name><argument_list pos:line="50" pos:column="25">(<argument><expr><name pos:line="50" pos:column="26">url<pos:position pos:line="50" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="31">URL_SCHEME_CHARS<pos:position pos:line="50" pos:column="47"/></name></expr></argument>)<pos:position pos:line="50" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="49"/></expr_stmt>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">!<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">spanned<pos:position pos:line="51" pos:column="21"/></name> <operator pos:line="51" pos:column="22">||<pos:position pos:line="51" pos:column="24"/></operator> <operator pos:line="51" pos:column="25">!<pos:position pos:line="51" pos:column="26"/></operator><call><name pos:line="51" pos:column="26">isalpha<pos:position pos:line="51" pos:column="33"/></name><argument_list pos:line="51" pos:column="33">(<argument><expr><name><name pos:line="51" pos:column="34">url<pos:position pos:line="51" pos:column="37"/></name><index pos:line="51" pos:column="37">[<expr><literal type="number" pos:line="51" pos:column="38">0<pos:position pos:line="51" pos:column="39"/></literal></expr>]<pos:position pos:line="51" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="51" pos:column="41"/></argument_list></call> <operator pos:line="51" pos:column="42">||<pos:position pos:line="51" pos:column="44"/></operator> <name pos:line="51" pos:column="45">spanned<pos:position pos:line="51" pos:column="52"/></name> <operator pos:line="51" pos:column="53">+<pos:position pos:line="51" pos:column="54"/></operator> <literal type="number" pos:line="51" pos:column="55">3<pos:position pos:line="51" pos:column="56"/></literal> <operator pos:line="51" pos:column="57">&gt;<pos:position pos:line="51" pos:column="61"/></operator> <name pos:line="51" pos:column="59">url_len<pos:position pos:line="51" pos:column="66"/></name> <operator pos:line="51" pos:column="67">||<pos:position pos:line="51" pos:column="69"/></operator>
	    <name><name pos:line="52" pos:column="13">url<pos:position pos:line="52" pos:column="16"/></name><index pos:line="52" pos:column="16">[<expr><name pos:line="52" pos:column="17">spanned<pos:position pos:line="52" pos:column="24"/></name></expr>]<pos:position pos:line="52" pos:column="25"/></index></name> <operator pos:line="52" pos:column="26">!=<pos:position pos:line="52" pos:column="28"/></operator> <literal type="char" pos:line="52" pos:column="29">':'<pos:position pos:line="52" pos:column="32"/></literal> <operator pos:line="52" pos:column="33">||<pos:position pos:line="52" pos:column="35"/></operator> <name><name pos:line="52" pos:column="36">url<pos:position pos:line="52" pos:column="39"/></name><index pos:line="52" pos:column="39">[<expr><name pos:line="52" pos:column="40">spanned<pos:position pos:line="52" pos:column="47"/></name><operator pos:line="52" pos:column="47">+<pos:position pos:line="52" pos:column="48"/></operator><literal type="number" pos:line="52" pos:column="48">1<pos:position pos:line="52" pos:column="49"/></literal></expr>]<pos:position pos:line="52" pos:column="50"/></index></name> <operator pos:line="52" pos:column="51">!=<pos:position pos:line="52" pos:column="53"/></operator> <literal type="char" pos:line="52" pos:column="54">'/'<pos:position pos:line="52" pos:column="57"/></literal> <operator pos:line="52" pos:column="58">||<pos:position pos:line="52" pos:column="60"/></operator> <name><name pos:line="52" pos:column="61">url<pos:position pos:line="52" pos:column="64"/></name><index pos:line="52" pos:column="64">[<expr><name pos:line="52" pos:column="65">spanned<pos:position pos:line="52" pos:column="72"/></name><operator pos:line="52" pos:column="72">+<pos:position pos:line="52" pos:column="73"/></operator><literal type="number" pos:line="52" pos:column="73">2<pos:position pos:line="52" pos:column="74"/></literal></expr>]<pos:position pos:line="52" pos:column="75"/></index></name> <operator pos:line="52" pos:column="76">!=<pos:position pos:line="52" pos:column="78"/></operator> <literal type="char" pos:line="52" pos:column="79">'/'<pos:position pos:line="52" pos:column="82"/></literal></expr>)<pos:position pos:line="52" pos:column="83"/></condition><then pos:line="52" pos:column="83"> <block pos:line="52" pos:column="84">{
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name pos:line="53" pos:column="21">out_info<pos:position pos:line="53" pos:column="29"/></name></expr>)<pos:position pos:line="53" pos:column="30"/></condition><then pos:line="53" pos:column="30"> <block pos:line="53" pos:column="31">{
			<expr_stmt><expr><name><name pos:line="54" pos:column="25">out_info<pos:position pos:line="54" pos:column="33"/></name><operator pos:line="54" pos:column="33">-&gt;<pos:position pos:line="54" pos:column="38"/></operator><name pos:line="54" pos:column="35">url<pos:position pos:line="54" pos:column="38"/></name></name> <operator pos:line="54" pos:column="39">=<pos:position pos:line="54" pos:column="40"/></operator> <name pos:line="54" pos:column="41">NULL<pos:position pos:line="54" pos:column="45"/></name></expr>;<pos:position pos:line="54" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="55" pos:column="25">out_info<pos:position pos:line="55" pos:column="33"/></name><operator pos:line="55" pos:column="33">-&gt;<pos:position pos:line="55" pos:column="38"/></operator><name pos:line="55" pos:column="35">err<pos:position pos:line="55" pos:column="38"/></name></name> <operator pos:line="55" pos:column="39">=<pos:position pos:line="55" pos:column="40"/></operator> <call><name pos:line="55" pos:column="41">_<pos:position pos:line="55" pos:column="42"/></name><argument_list pos:line="55" pos:column="42">(<argument><expr><literal type="string" pos:line="55" pos:column="43">"invalid URL scheme name or missing '://' suffix"<pos:position pos:line="55" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="94"/></expr_stmt>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if>
		<return pos:line="57" pos:column="17">return <expr><name pos:line="57" pos:column="24">NULL<pos:position pos:line="57" pos:column="28"/></name></expr>;<pos:position pos:line="57" pos:column="29"/></return> <comment type="block" pos:line="57" pos:column="30">/* Bad scheme and/or missing "://" part */</comment>
	}<pos:position pos:line="58" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">strbuf_init<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><operator pos:line="59" pos:column="21">&amp;<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="22">norm<pos:position pos:line="59" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="28">url_len<pos:position pos:line="59" pos:column="35"/></name></expr></argument>)<pos:position pos:line="59" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name pos:line="60" pos:column="9">scheme_len<pos:position pos:line="60" pos:column="19"/></name> <operator pos:line="60" pos:column="20">=<pos:position pos:line="60" pos:column="21"/></operator> <name pos:line="60" pos:column="22">spanned<pos:position pos:line="60" pos:column="29"/></name></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="61" pos:column="9">spanned<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">+=<pos:position pos:line="61" pos:column="19"/></operator> <literal type="number" pos:line="61" pos:column="20">3<pos:position pos:line="61" pos:column="21"/></literal></expr>;<pos:position pos:line="61" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="62" pos:column="9">url_len<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">-=<pos:position pos:line="62" pos:column="19"/></operator> <name pos:line="62" pos:column="20">spanned<pos:position pos:line="62" pos:column="27"/></name></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
	<while pos:line="63" pos:column="9">while <condition pos:line="63" pos:column="15">(<expr><name pos:line="63" pos:column="16">spanned<pos:position pos:line="63" pos:column="23"/></name><operator pos:line="63" pos:column="23">--<pos:position pos:line="63" pos:column="25"/></operator></expr>)<pos:position pos:line="63" pos:column="26"/></condition>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="17">strbuf_addch<pos:position pos:line="64" pos:column="29"/></name><argument_list pos:line="64" pos:column="29">(<argument><expr><operator pos:line="64" pos:column="30">&amp;<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="31">norm<pos:position pos:line="64" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="37">tolower<pos:position pos:line="64" pos:column="44"/></name><argument_list pos:line="64" pos:column="44">(<argument><expr><operator pos:line="64" pos:column="45">*<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="46">url<pos:position pos:line="64" pos:column="49"/></name><operator pos:line="64" pos:column="49">++<pos:position pos:line="64" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="64" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="54"/></expr_stmt></block></while>


	<comment type="block" pos:line="67" pos:column="9">/*
	 * Copy any username:password if present normalizing %-escapes
	 */</comment>
	<expr_stmt><expr><name pos:line="70" pos:column="9">at_ptr<pos:position pos:line="70" pos:column="15"/></name> <operator pos:line="70" pos:column="16">=<pos:position pos:line="70" pos:column="17"/></operator> <call><name pos:line="70" pos:column="18">strchr<pos:position pos:line="70" pos:column="24"/></name><argument_list pos:line="70" pos:column="24">(<argument><expr><name pos:line="70" pos:column="25">url<pos:position pos:line="70" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="70" pos:column="30">'@'<pos:position pos:line="70" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="71" pos:column="9">slash_ptr<pos:position pos:line="71" pos:column="18"/></name> <operator pos:line="71" pos:column="19">=<pos:position pos:line="71" pos:column="20"/></operator> <name pos:line="71" pos:column="21">url<pos:position pos:line="71" pos:column="24"/></name> <operator pos:line="71" pos:column="25">+<pos:position pos:line="71" pos:column="26"/></operator> <call><name pos:line="71" pos:column="27">strcspn<pos:position pos:line="71" pos:column="34"/></name><argument_list pos:line="71" pos:column="34">(<argument><expr><name pos:line="71" pos:column="35">url<pos:position pos:line="71" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="40">"/?#"<pos:position pos:line="71" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="47"/></expr_stmt>
	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name pos:line="72" pos:column="13">at_ptr<pos:position pos:line="72" pos:column="19"/></name> <operator pos:line="72" pos:column="20">&amp;&amp;<pos:position pos:line="72" pos:column="30"/></operator> <name pos:line="72" pos:column="23">at_ptr<pos:position pos:line="72" pos:column="29"/></name> <operator pos:line="72" pos:column="30">&lt;<pos:position pos:line="72" pos:column="34"/></operator> <name pos:line="72" pos:column="32">slash_ptr<pos:position pos:line="72" pos:column="41"/></name></expr>)<pos:position pos:line="72" pos:column="42"/></condition><then pos:line="72" pos:column="42"> <block pos:line="72" pos:column="43">{
		<expr_stmt><expr><name pos:line="73" pos:column="17">user_off<pos:position pos:line="73" pos:column="25"/></name> <operator pos:line="73" pos:column="26">=<pos:position pos:line="73" pos:column="27"/></operator> <name><name pos:line="73" pos:column="28">norm<pos:position pos:line="73" pos:column="32"/></name><operator pos:line="73" pos:column="32">.<pos:position pos:line="73" pos:column="33"/></operator><name pos:line="73" pos:column="33">len<pos:position pos:line="73" pos:column="36"/></name></name></expr>;<pos:position pos:line="73" pos:column="37"/></expr_stmt>
		<if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><name pos:line="74" pos:column="21">at_ptr<pos:position pos:line="74" pos:column="27"/></name> <operator pos:line="74" pos:column="28">&gt;<pos:position pos:line="74" pos:column="32"/></operator> <name pos:line="74" pos:column="30">url<pos:position pos:line="74" pos:column="33"/></name></expr>)<pos:position pos:line="74" pos:column="34"/></condition><then pos:line="74" pos:column="34"> <block pos:line="74" pos:column="35">{
			<if pos:line="75" pos:column="25">if <condition pos:line="75" pos:column="28">(<expr><operator pos:line="75" pos:column="29">!<pos:position pos:line="75" pos:column="30"/></operator><call><name pos:line="75" pos:column="30">append_normalized_escapes<pos:position pos:line="75" pos:column="55"/></name><argument_list pos:line="75" pos:column="55">(<argument><expr><operator pos:line="75" pos:column="56">&amp;<pos:position pos:line="75" pos:column="61"/></operator><name pos:line="75" pos:column="57">norm<pos:position pos:line="75" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="63">url<pos:position pos:line="75" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="68">at_ptr<pos:position pos:line="75" pos:column="74"/></name> <operator pos:line="75" pos:column="75">-<pos:position pos:line="75" pos:column="76"/></operator> <name pos:line="75" pos:column="77">url<pos:position pos:line="75" pos:column="80"/></name></expr></argument>,
						       <argument><expr><literal type="string" pos:line="76" pos:column="56">""<pos:position pos:line="76" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="60">URL_RESERVED<pos:position pos:line="76" pos:column="72"/></name></expr></argument>)<pos:position pos:line="76" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="74"/></condition><then pos:line="76" pos:column="74"> <block pos:line="76" pos:column="75">{
				<if pos:line="77" pos:column="33">if <condition pos:line="77" pos:column="36">(<expr><name pos:line="77" pos:column="37">out_info<pos:position pos:line="77" pos:column="45"/></name></expr>)<pos:position pos:line="77" pos:column="46"/></condition><then pos:line="77" pos:column="46"> <block pos:line="77" pos:column="47">{
					<expr_stmt><expr><name><name pos:line="78" pos:column="41">out_info<pos:position pos:line="78" pos:column="49"/></name><operator pos:line="78" pos:column="49">-&gt;<pos:position pos:line="78" pos:column="54"/></operator><name pos:line="78" pos:column="51">url<pos:position pos:line="78" pos:column="54"/></name></name> <operator pos:line="78" pos:column="55">=<pos:position pos:line="78" pos:column="56"/></operator> <name pos:line="78" pos:column="57">NULL<pos:position pos:line="78" pos:column="61"/></name></expr>;<pos:position pos:line="78" pos:column="62"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="79" pos:column="41">out_info<pos:position pos:line="79" pos:column="49"/></name><operator pos:line="79" pos:column="49">-&gt;<pos:position pos:line="79" pos:column="54"/></operator><name pos:line="79" pos:column="51">err<pos:position pos:line="79" pos:column="54"/></name></name> <operator pos:line="79" pos:column="55">=<pos:position pos:line="79" pos:column="56"/></operator> <call><name pos:line="79" pos:column="57">_<pos:position pos:line="79" pos:column="58"/></name><argument_list pos:line="79" pos:column="58">(<argument><expr><literal type="string" pos:line="79" pos:column="59">"invalid %XX escape sequence"<pos:position pos:line="79" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="90"/></expr_stmt>
				}<pos:position pos:line="80" pos:column="34"/></block></then></if>
				<expr_stmt><expr><call><name pos:line="81" pos:column="33">strbuf_release<pos:position pos:line="81" pos:column="47"/></name><argument_list pos:line="81" pos:column="47">(<argument><expr><operator pos:line="81" pos:column="48">&amp;<pos:position pos:line="81" pos:column="53"/></operator><name pos:line="81" pos:column="49">norm<pos:position pos:line="81" pos:column="53"/></name></expr></argument>)<pos:position pos:line="81" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="55"/></expr_stmt>
				<return pos:line="82" pos:column="33">return <expr><name pos:line="82" pos:column="40">NULL<pos:position pos:line="82" pos:column="44"/></name></expr>;<pos:position pos:line="82" pos:column="45"/></return>
			}<pos:position pos:line="83" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="84" pos:column="25">colon_ptr<pos:position pos:line="84" pos:column="34"/></name> <operator pos:line="84" pos:column="35">=<pos:position pos:line="84" pos:column="36"/></operator> <call><name pos:line="84" pos:column="37">strchr<pos:position pos:line="84" pos:column="43"/></name><argument_list pos:line="84" pos:column="43">(<argument><expr><name><name pos:line="84" pos:column="44">norm<pos:position pos:line="84" pos:column="48"/></name><operator pos:line="84" pos:column="48">.<pos:position pos:line="84" pos:column="49"/></operator><name pos:line="84" pos:column="49">buf<pos:position pos:line="84" pos:column="52"/></name></name> <operator pos:line="84" pos:column="53">+<pos:position pos:line="84" pos:column="54"/></operator> <name pos:line="84" pos:column="55">scheme_len<pos:position pos:line="84" pos:column="65"/></name> <operator pos:line="84" pos:column="66">+<pos:position pos:line="84" pos:column="67"/></operator> <literal type="number" pos:line="84" pos:column="68">3<pos:position pos:line="84" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="84" pos:column="71">':'<pos:position pos:line="84" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="76"/></expr_stmt>
			<if pos:line="85" pos:column="25">if <condition pos:line="85" pos:column="28">(<expr><name pos:line="85" pos:column="29">colon_ptr<pos:position pos:line="85" pos:column="38"/></name></expr>)<pos:position pos:line="85" pos:column="39"/></condition><then pos:line="85" pos:column="39"> <block pos:line="85" pos:column="40">{
				<expr_stmt><expr><name pos:line="86" pos:column="33">passwd_off<pos:position pos:line="86" pos:column="43"/></name> <operator pos:line="86" pos:column="44">=<pos:position pos:line="86" pos:column="45"/></operator> <operator pos:line="86" pos:column="46">(<pos:position pos:line="86" pos:column="47"/></operator><name pos:line="86" pos:column="47">colon_ptr<pos:position pos:line="86" pos:column="56"/></name> <operator pos:line="86" pos:column="57">+<pos:position pos:line="86" pos:column="58"/></operator> <literal type="number" pos:line="86" pos:column="59">1<pos:position pos:line="86" pos:column="60"/></literal><operator pos:line="86" pos:column="60">)<pos:position pos:line="86" pos:column="61"/></operator> <operator pos:line="86" pos:column="62">-<pos:position pos:line="86" pos:column="63"/></operator> <name><name pos:line="86" pos:column="64">norm<pos:position pos:line="86" pos:column="68"/></name><operator pos:line="86" pos:column="68">.<pos:position pos:line="86" pos:column="69"/></operator><name pos:line="86" pos:column="69">buf<pos:position pos:line="86" pos:column="72"/></name></name></expr>;<pos:position pos:line="86" pos:column="73"/></expr_stmt>
				<expr_stmt><expr><name pos:line="87" pos:column="33">passwd_len<pos:position pos:line="87" pos:column="43"/></name> <operator pos:line="87" pos:column="44">=<pos:position pos:line="87" pos:column="45"/></operator> <name><name pos:line="87" pos:column="46">norm<pos:position pos:line="87" pos:column="50"/></name><operator pos:line="87" pos:column="50">.<pos:position pos:line="87" pos:column="51"/></operator><name pos:line="87" pos:column="51">len<pos:position pos:line="87" pos:column="54"/></name></name> <operator pos:line="87" pos:column="55">-<pos:position pos:line="87" pos:column="56"/></operator> <name pos:line="87" pos:column="57">passwd_off<pos:position pos:line="87" pos:column="67"/></name></expr>;<pos:position pos:line="87" pos:column="68"/></expr_stmt>
				<expr_stmt><expr><name pos:line="88" pos:column="33">user_len<pos:position pos:line="88" pos:column="41"/></name> <operator pos:line="88" pos:column="42">=<pos:position pos:line="88" pos:column="43"/></operator> <operator pos:line="88" pos:column="44">(<pos:position pos:line="88" pos:column="45"/></operator><name pos:line="88" pos:column="45">passwd_off<pos:position pos:line="88" pos:column="55"/></name> <operator pos:line="88" pos:column="56">-<pos:position pos:line="88" pos:column="57"/></operator> <literal type="number" pos:line="88" pos:column="58">1<pos:position pos:line="88" pos:column="59"/></literal><operator pos:line="88" pos:column="59">)<pos:position pos:line="88" pos:column="60"/></operator> <operator pos:line="88" pos:column="61">-<pos:position pos:line="88" pos:column="62"/></operator> <operator pos:line="88" pos:column="63">(<pos:position pos:line="88" pos:column="64"/></operator><name pos:line="88" pos:column="64">scheme_len<pos:position pos:line="88" pos:column="74"/></name> <operator pos:line="88" pos:column="75">+<pos:position pos:line="88" pos:column="76"/></operator> <literal type="number" pos:line="88" pos:column="77">3<pos:position pos:line="88" pos:column="78"/></literal><operator pos:line="88" pos:column="78">)<pos:position pos:line="88" pos:column="79"/></operator></expr>;<pos:position pos:line="88" pos:column="80"/></expr_stmt>
			}<pos:position pos:line="89" pos:column="26"/></block></then> <else pos:line="89" pos:column="27">else <block pos:line="89" pos:column="32">{
				<expr_stmt><expr><name pos:line="90" pos:column="33">user_len<pos:position pos:line="90" pos:column="41"/></name> <operator pos:line="90" pos:column="42">=<pos:position pos:line="90" pos:column="43"/></operator> <name><name pos:line="90" pos:column="44">norm<pos:position pos:line="90" pos:column="48"/></name><operator pos:line="90" pos:column="48">.<pos:position pos:line="90" pos:column="49"/></operator><name pos:line="90" pos:column="49">len<pos:position pos:line="90" pos:column="52"/></name></name> <operator pos:line="90" pos:column="53">-<pos:position pos:line="90" pos:column="54"/></operator> <operator pos:line="90" pos:column="55">(<pos:position pos:line="90" pos:column="56"/></operator><name pos:line="90" pos:column="56">scheme_len<pos:position pos:line="90" pos:column="66"/></name> <operator pos:line="90" pos:column="67">+<pos:position pos:line="90" pos:column="68"/></operator> <literal type="number" pos:line="90" pos:column="69">3<pos:position pos:line="90" pos:column="70"/></literal><operator pos:line="90" pos:column="70">)<pos:position pos:line="90" pos:column="71"/></operator></expr>;<pos:position pos:line="90" pos:column="72"/></expr_stmt>
			}<pos:position pos:line="91" pos:column="26"/></block></else></if>
		}<pos:position pos:line="92" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="93" pos:column="17">strbuf_addch<pos:position pos:line="93" pos:column="29"/></name><argument_list pos:line="93" pos:column="29">(<argument><expr><operator pos:line="93" pos:column="30">&amp;<pos:position pos:line="93" pos:column="35"/></operator><name pos:line="93" pos:column="31">norm<pos:position pos:line="93" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="93" pos:column="37">'@'<pos:position pos:line="93" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="94" pos:column="17">url_len<pos:position pos:line="94" pos:column="24"/></name> <operator pos:line="94" pos:column="25">-=<pos:position pos:line="94" pos:column="27"/></operator> <operator pos:line="94" pos:column="28">(<pos:position pos:line="94" pos:column="29"/></operator><operator pos:line="94" pos:column="29">++<pos:position pos:line="94" pos:column="31"/></operator><name pos:line="94" pos:column="31">at_ptr<pos:position pos:line="94" pos:column="37"/></name> <operator pos:line="94" pos:column="38">-<pos:position pos:line="94" pos:column="39"/></operator> <name pos:line="94" pos:column="40">url<pos:position pos:line="94" pos:column="43"/></name><operator pos:line="94" pos:column="43">)<pos:position pos:line="94" pos:column="44"/></operator></expr>;<pos:position pos:line="94" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="95" pos:column="17">url<pos:position pos:line="95" pos:column="20"/></name> <operator pos:line="95" pos:column="21">=<pos:position pos:line="95" pos:column="22"/></operator> <name pos:line="95" pos:column="23">at_ptr<pos:position pos:line="95" pos:column="29"/></name></expr>;<pos:position pos:line="95" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="96" pos:column="10"/></block></then></if>


	<comment type="block" pos:line="99" pos:column="9">/*
	 * Copy the host part excluding any port part, no %-escapes allowed
	 */</comment>
	<if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><operator pos:line="102" pos:column="13">!<pos:position pos:line="102" pos:column="14"/></operator><name pos:line="102" pos:column="14">url_len<pos:position pos:line="102" pos:column="21"/></name> <operator pos:line="102" pos:column="22">||<pos:position pos:line="102" pos:column="24"/></operator> <call><name pos:line="102" pos:column="25">strchr<pos:position pos:line="102" pos:column="31"/></name><argument_list pos:line="102" pos:column="31">(<argument><expr><literal type="string" pos:line="102" pos:column="32">":/?#"<pos:position pos:line="102" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="102" pos:column="40">*<pos:position pos:line="102" pos:column="41"/></operator><name pos:line="102" pos:column="41">url<pos:position pos:line="102" pos:column="44"/></name></expr></argument>)<pos:position pos:line="102" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="46"/></condition><then pos:line="102" pos:column="46"> <block pos:line="102" pos:column="47">{
		<comment type="block" pos:line="103" pos:column="17">/* Missing host invalid for all URL schemes except file */</comment>
		<if pos:line="104" pos:column="17">if <condition pos:line="104" pos:column="20">(<expr><call><name pos:line="104" pos:column="21">strncmp<pos:position pos:line="104" pos:column="28"/></name><argument_list pos:line="104" pos:column="28">(<argument><expr><name><name pos:line="104" pos:column="29">norm<pos:position pos:line="104" pos:column="33"/></name><operator pos:line="104" pos:column="33">.<pos:position pos:line="104" pos:column="34"/></operator><name pos:line="104" pos:column="34">buf<pos:position pos:line="104" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="39">"file:"<pos:position pos:line="104" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="104" pos:column="48">5<pos:position pos:line="104" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="104" pos:column="51"/></condition><then pos:line="104" pos:column="51"> <block pos:line="104" pos:column="52">{
			<if pos:line="105" pos:column="25">if <condition pos:line="105" pos:column="28">(<expr><name pos:line="105" pos:column="29">out_info<pos:position pos:line="105" pos:column="37"/></name></expr>)<pos:position pos:line="105" pos:column="38"/></condition><then pos:line="105" pos:column="38"> <block pos:line="105" pos:column="39">{
				<expr_stmt><expr><name><name pos:line="106" pos:column="33">out_info<pos:position pos:line="106" pos:column="41"/></name><operator pos:line="106" pos:column="41">-&gt;<pos:position pos:line="106" pos:column="46"/></operator><name pos:line="106" pos:column="43">url<pos:position pos:line="106" pos:column="46"/></name></name> <operator pos:line="106" pos:column="47">=<pos:position pos:line="106" pos:column="48"/></operator> <name pos:line="106" pos:column="49">NULL<pos:position pos:line="106" pos:column="53"/></name></expr>;<pos:position pos:line="106" pos:column="54"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="107" pos:column="33">out_info<pos:position pos:line="107" pos:column="41"/></name><operator pos:line="107" pos:column="41">-&gt;<pos:position pos:line="107" pos:column="46"/></operator><name pos:line="107" pos:column="43">err<pos:position pos:line="107" pos:column="46"/></name></name> <operator pos:line="107" pos:column="47">=<pos:position pos:line="107" pos:column="48"/></operator> <call><name pos:line="107" pos:column="49">_<pos:position pos:line="107" pos:column="50"/></name><argument_list pos:line="107" pos:column="50">(<argument><expr><literal type="string" pos:line="107" pos:column="51">"missing host and scheme is not 'file:'"<pos:position pos:line="107" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="93"/></expr_stmt>
			}<pos:position pos:line="108" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="109" pos:column="25">strbuf_release<pos:position pos:line="109" pos:column="39"/></name><argument_list pos:line="109" pos:column="39">(<argument><expr><operator pos:line="109" pos:column="40">&amp;<pos:position pos:line="109" pos:column="45"/></operator><name pos:line="109" pos:column="41">norm<pos:position pos:line="109" pos:column="45"/></name></expr></argument>)<pos:position pos:line="109" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="47"/></expr_stmt>
			<return pos:line="110" pos:column="25">return <expr><name pos:line="110" pos:column="32">NULL<pos:position pos:line="110" pos:column="36"/></name></expr>;<pos:position pos:line="110" pos:column="37"/></return>
		}<pos:position pos:line="111" pos:column="18"/></block></then></if>
	}<pos:position pos:line="112" pos:column="10"/></block></then> <else pos:line="112" pos:column="11">else <block pos:line="112" pos:column="16">{
		<expr_stmt><expr><name pos:line="113" pos:column="17">host_off<pos:position pos:line="113" pos:column="25"/></name> <operator pos:line="113" pos:column="26">=<pos:position pos:line="113" pos:column="27"/></operator> <name><name pos:line="113" pos:column="28">norm<pos:position pos:line="113" pos:column="32"/></name><operator pos:line="113" pos:column="32">.<pos:position pos:line="113" pos:column="33"/></operator><name pos:line="113" pos:column="33">len<pos:position pos:line="113" pos:column="36"/></name></name></expr>;<pos:position pos:line="113" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="114" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name pos:line="115" pos:column="9">colon_ptr<pos:position pos:line="115" pos:column="18"/></name> <operator pos:line="115" pos:column="19">=<pos:position pos:line="115" pos:column="20"/></operator> <name pos:line="115" pos:column="21">slash_ptr<pos:position pos:line="115" pos:column="30"/></name> <operator pos:line="115" pos:column="31">-<pos:position pos:line="115" pos:column="32"/></operator> <literal type="number" pos:line="115" pos:column="33">1<pos:position pos:line="115" pos:column="34"/></literal></expr>;<pos:position pos:line="115" pos:column="35"/></expr_stmt>
	<while pos:line="116" pos:column="9">while <condition pos:line="116" pos:column="15">(<expr><name pos:line="116" pos:column="16">colon_ptr<pos:position pos:line="116" pos:column="25"/></name> <operator pos:line="116" pos:column="26">&gt;<pos:position pos:line="116" pos:column="30"/></operator> <name pos:line="116" pos:column="28">url<pos:position pos:line="116" pos:column="31"/></name> <operator pos:line="116" pos:column="32">&amp;&amp;<pos:position pos:line="116" pos:column="42"/></operator> <operator pos:line="116" pos:column="35">*<pos:position pos:line="116" pos:column="36"/></operator><name pos:line="116" pos:column="36">colon_ptr<pos:position pos:line="116" pos:column="45"/></name> <operator pos:line="116" pos:column="46">!=<pos:position pos:line="116" pos:column="48"/></operator> <literal type="char" pos:line="116" pos:column="49">':'<pos:position pos:line="116" pos:column="52"/></literal> <operator pos:line="116" pos:column="53">&amp;&amp;<pos:position pos:line="116" pos:column="63"/></operator> <operator pos:line="116" pos:column="56">*<pos:position pos:line="116" pos:column="57"/></operator><name pos:line="116" pos:column="57">colon_ptr<pos:position pos:line="116" pos:column="66"/></name> <operator pos:line="116" pos:column="67">!=<pos:position pos:line="116" pos:column="69"/></operator> <literal type="char" pos:line="116" pos:column="70">']'<pos:position pos:line="116" pos:column="73"/></literal></expr>)<pos:position pos:line="116" pos:column="74"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="117" pos:column="17">colon_ptr<pos:position pos:line="117" pos:column="26"/></name><operator pos:line="117" pos:column="26">--<pos:position pos:line="117" pos:column="28"/></operator></expr>;<pos:position pos:line="117" pos:column="29"/></expr_stmt></block></while>
	<if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><operator pos:line="118" pos:column="13">*<pos:position pos:line="118" pos:column="14"/></operator><name pos:line="118" pos:column="14">colon_ptr<pos:position pos:line="118" pos:column="23"/></name> <operator pos:line="118" pos:column="24">!=<pos:position pos:line="118" pos:column="26"/></operator> <literal type="char" pos:line="118" pos:column="27">':'<pos:position pos:line="118" pos:column="30"/></literal></expr>)<pos:position pos:line="118" pos:column="31"/></condition><then pos:line="118" pos:column="31"> <block pos:line="118" pos:column="32">{
		<expr_stmt><expr><name pos:line="119" pos:column="17">colon_ptr<pos:position pos:line="119" pos:column="26"/></name> <operator pos:line="119" pos:column="27">=<pos:position pos:line="119" pos:column="28"/></operator> <name pos:line="119" pos:column="29">slash_ptr<pos:position pos:line="119" pos:column="38"/></name></expr>;<pos:position pos:line="119" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="120" pos:column="10"/></block></then> <elseif pos:line="120" pos:column="11">else <if pos:line="120" pos:column="16">if <condition pos:line="120" pos:column="19">(<expr><operator pos:line="120" pos:column="20">!<pos:position pos:line="120" pos:column="21"/></operator><name pos:line="120" pos:column="21">host_off<pos:position pos:line="120" pos:column="29"/></name> <operator pos:line="120" pos:column="30">&amp;&amp;<pos:position pos:line="120" pos:column="40"/></operator> <name pos:line="120" pos:column="33">colon_ptr<pos:position pos:line="120" pos:column="42"/></name> <operator pos:line="120" pos:column="43">&lt;<pos:position pos:line="120" pos:column="47"/></operator> <name pos:line="120" pos:column="45">slash_ptr<pos:position pos:line="120" pos:column="54"/></name> <operator pos:line="120" pos:column="55">&amp;&amp;<pos:position pos:line="120" pos:column="65"/></operator> <name pos:line="120" pos:column="58">colon_ptr<pos:position pos:line="120" pos:column="67"/></name> <operator pos:line="120" pos:column="68">+<pos:position pos:line="120" pos:column="69"/></operator> <literal type="number" pos:line="120" pos:column="70">1<pos:position pos:line="120" pos:column="71"/></literal> <operator pos:line="120" pos:column="72">!=<pos:position pos:line="120" pos:column="74"/></operator> <name pos:line="120" pos:column="75">slash_ptr<pos:position pos:line="120" pos:column="84"/></name></expr>)<pos:position pos:line="120" pos:column="85"/></condition><then pos:line="120" pos:column="85"> <block pos:line="120" pos:column="86">{
		<comment type="block" pos:line="121" pos:column="17">/* file: URLs may not have a port number */</comment>
		<if pos:line="122" pos:column="17">if <condition pos:line="122" pos:column="20">(<expr><name pos:line="122" pos:column="21">out_info<pos:position pos:line="122" pos:column="29"/></name></expr>)<pos:position pos:line="122" pos:column="30"/></condition><then pos:line="122" pos:column="30"> <block pos:line="122" pos:column="31">{
			<expr_stmt><expr><name><name pos:line="123" pos:column="25">out_info<pos:position pos:line="123" pos:column="33"/></name><operator pos:line="123" pos:column="33">-&gt;<pos:position pos:line="123" pos:column="38"/></operator><name pos:line="123" pos:column="35">url<pos:position pos:line="123" pos:column="38"/></name></name> <operator pos:line="123" pos:column="39">=<pos:position pos:line="123" pos:column="40"/></operator> <name pos:line="123" pos:column="41">NULL<pos:position pos:line="123" pos:column="45"/></name></expr>;<pos:position pos:line="123" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="124" pos:column="25">out_info<pos:position pos:line="124" pos:column="33"/></name><operator pos:line="124" pos:column="33">-&gt;<pos:position pos:line="124" pos:column="38"/></operator><name pos:line="124" pos:column="35">err<pos:position pos:line="124" pos:column="38"/></name></name> <operator pos:line="124" pos:column="39">=<pos:position pos:line="124" pos:column="40"/></operator> <call><name pos:line="124" pos:column="41">_<pos:position pos:line="124" pos:column="42"/></name><argument_list pos:line="124" pos:column="42">(<argument><expr><literal type="string" pos:line="124" pos:column="43">"a 'file:' URL may not have a port number"<pos:position pos:line="124" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="87"/></expr_stmt>
		}<pos:position pos:line="125" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="126" pos:column="17">strbuf_release<pos:position pos:line="126" pos:column="31"/></name><argument_list pos:line="126" pos:column="31">(<argument><expr><operator pos:line="126" pos:column="32">&amp;<pos:position pos:line="126" pos:column="37"/></operator><name pos:line="126" pos:column="33">norm<pos:position pos:line="126" pos:column="37"/></name></expr></argument>)<pos:position pos:line="126" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="39"/></expr_stmt>
		<return pos:line="127" pos:column="17">return <expr><name pos:line="127" pos:column="24">NULL<pos:position pos:line="127" pos:column="28"/></name></expr>;<pos:position pos:line="127" pos:column="29"/></return>
	}<pos:position pos:line="128" pos:column="10"/></block></then></if></elseif></if>
	<expr_stmt><expr><name pos:line="129" pos:column="9">spanned<pos:position pos:line="129" pos:column="16"/></name> <operator pos:line="129" pos:column="17">=<pos:position pos:line="129" pos:column="18"/></operator> <call><name pos:line="129" pos:column="19">strspn<pos:position pos:line="129" pos:column="25"/></name><argument_list pos:line="129" pos:column="25">(<argument><expr><name pos:line="129" pos:column="26">url<pos:position pos:line="129" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="31">URL_HOST_CHARS<pos:position pos:line="129" pos:column="45"/></name></expr></argument>)<pos:position pos:line="129" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="47"/></expr_stmt>
	<if pos:line="130" pos:column="9">if <condition pos:line="130" pos:column="12">(<expr><name pos:line="130" pos:column="13">spanned<pos:position pos:line="130" pos:column="20"/></name> <operator pos:line="130" pos:column="21">&lt;<pos:position pos:line="130" pos:column="25"/></operator> <name pos:line="130" pos:column="23">colon_ptr<pos:position pos:line="130" pos:column="32"/></name> <operator pos:line="130" pos:column="33">-<pos:position pos:line="130" pos:column="34"/></operator> <name pos:line="130" pos:column="35">url<pos:position pos:line="130" pos:column="38"/></name></expr>)<pos:position pos:line="130" pos:column="39"/></condition><then pos:line="130" pos:column="39"> <block pos:line="130" pos:column="40">{
		<comment type="block" pos:line="131" pos:column="17">/* Host name has invalid characters */</comment>
		<if pos:line="132" pos:column="17">if <condition pos:line="132" pos:column="20">(<expr><name pos:line="132" pos:column="21">out_info<pos:position pos:line="132" pos:column="29"/></name></expr>)<pos:position pos:line="132" pos:column="30"/></condition><then pos:line="132" pos:column="30"> <block pos:line="132" pos:column="31">{
			<expr_stmt><expr><name><name pos:line="133" pos:column="25">out_info<pos:position pos:line="133" pos:column="33"/></name><operator pos:line="133" pos:column="33">-&gt;<pos:position pos:line="133" pos:column="38"/></operator><name pos:line="133" pos:column="35">url<pos:position pos:line="133" pos:column="38"/></name></name> <operator pos:line="133" pos:column="39">=<pos:position pos:line="133" pos:column="40"/></operator> <name pos:line="133" pos:column="41">NULL<pos:position pos:line="133" pos:column="45"/></name></expr>;<pos:position pos:line="133" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="134" pos:column="25">out_info<pos:position pos:line="134" pos:column="33"/></name><operator pos:line="134" pos:column="33">-&gt;<pos:position pos:line="134" pos:column="38"/></operator><name pos:line="134" pos:column="35">err<pos:position pos:line="134" pos:column="38"/></name></name> <operator pos:line="134" pos:column="39">=<pos:position pos:line="134" pos:column="40"/></operator> <call><name pos:line="134" pos:column="41">_<pos:position pos:line="134" pos:column="42"/></name><argument_list pos:line="134" pos:column="42">(<argument><expr><literal type="string" pos:line="134" pos:column="43">"invalid characters in host name"<pos:position pos:line="134" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="78"/></expr_stmt>
		}<pos:position pos:line="135" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="136" pos:column="17">strbuf_release<pos:position pos:line="136" pos:column="31"/></name><argument_list pos:line="136" pos:column="31">(<argument><expr><operator pos:line="136" pos:column="32">&amp;<pos:position pos:line="136" pos:column="37"/></operator><name pos:line="136" pos:column="33">norm<pos:position pos:line="136" pos:column="37"/></name></expr></argument>)<pos:position pos:line="136" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="39"/></expr_stmt>
		<return pos:line="137" pos:column="17">return <expr><name pos:line="137" pos:column="24">NULL<pos:position pos:line="137" pos:column="28"/></name></expr>;<pos:position pos:line="137" pos:column="29"/></return>
	}<pos:position pos:line="138" pos:column="10"/></block></then></if>
	<while pos:line="139" pos:column="9">while <condition pos:line="139" pos:column="15">(<expr><name pos:line="139" pos:column="16">url<pos:position pos:line="139" pos:column="19"/></name> <operator pos:line="139" pos:column="20">&lt;<pos:position pos:line="139" pos:column="24"/></operator> <name pos:line="139" pos:column="22">colon_ptr<pos:position pos:line="139" pos:column="31"/></name></expr>)<pos:position pos:line="139" pos:column="32"/></condition> <block pos:line="139" pos:column="33">{
		<expr_stmt><expr><call><name pos:line="140" pos:column="17">strbuf_addch<pos:position pos:line="140" pos:column="29"/></name><argument_list pos:line="140" pos:column="29">(<argument><expr><operator pos:line="140" pos:column="30">&amp;<pos:position pos:line="140" pos:column="35"/></operator><name pos:line="140" pos:column="31">norm<pos:position pos:line="140" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="140" pos:column="37">tolower<pos:position pos:line="140" pos:column="44"/></name><argument_list pos:line="140" pos:column="44">(<argument><expr><operator pos:line="140" pos:column="45">*<pos:position pos:line="140" pos:column="46"/></operator><name pos:line="140" pos:column="46">url<pos:position pos:line="140" pos:column="49"/></name><operator pos:line="140" pos:column="49">++<pos:position pos:line="140" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="140" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="140" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="141" pos:column="17">url_len<pos:position pos:line="141" pos:column="24"/></name><operator pos:line="141" pos:column="24">--<pos:position pos:line="141" pos:column="26"/></operator></expr>;<pos:position pos:line="141" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="142" pos:column="10"/></block></while>


	<comment type="block" pos:line="145" pos:column="9">/*
	 * Check the port part and copy if not the default (after removing any
	 * leading 0s); no %-escapes allowed
	 */</comment>
	<if pos:line="149" pos:column="9">if <condition pos:line="149" pos:column="12">(<expr><name pos:line="149" pos:column="13">colon_ptr<pos:position pos:line="149" pos:column="22"/></name> <operator pos:line="149" pos:column="23">&lt;<pos:position pos:line="149" pos:column="27"/></operator> <name pos:line="149" pos:column="25">slash_ptr<pos:position pos:line="149" pos:column="34"/></name></expr>)<pos:position pos:line="149" pos:column="35"/></condition><then pos:line="149" pos:column="35"> <block pos:line="149" pos:column="36">{
		<comment type="block" pos:line="150" pos:column="17">/* skip the ':' and leading 0s but not the last one if all 0s */</comment>
		<expr_stmt><expr><name pos:line="151" pos:column="17">url<pos:position pos:line="151" pos:column="20"/></name><operator pos:line="151" pos:column="20">++<pos:position pos:line="151" pos:column="22"/></operator></expr>;<pos:position pos:line="151" pos:column="23"/></expr_stmt>
		<expr_stmt><expr><name pos:line="152" pos:column="17">url<pos:position pos:line="152" pos:column="20"/></name> <operator pos:line="152" pos:column="21">+=<pos:position pos:line="152" pos:column="23"/></operator> <call><name pos:line="152" pos:column="24">strspn<pos:position pos:line="152" pos:column="30"/></name><argument_list pos:line="152" pos:column="30">(<argument><expr><name pos:line="152" pos:column="31">url<pos:position pos:line="152" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="36">"0"<pos:position pos:line="152" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="41"/></expr_stmt>
		<if pos:line="153" pos:column="17">if <condition pos:line="153" pos:column="20">(<expr><name pos:line="153" pos:column="21">url<pos:position pos:line="153" pos:column="24"/></name> <operator pos:line="153" pos:column="25">==<pos:position pos:line="153" pos:column="27"/></operator> <name pos:line="153" pos:column="28">slash_ptr<pos:position pos:line="153" pos:column="37"/></name> <operator pos:line="153" pos:column="38">&amp;&amp;<pos:position pos:line="153" pos:column="48"/></operator> <name><name pos:line="153" pos:column="41">url<pos:position pos:line="153" pos:column="44"/></name><index pos:line="153" pos:column="44">[<expr><operator pos:line="153" pos:column="45">-<pos:position pos:line="153" pos:column="46"/></operator><literal type="number" pos:line="153" pos:column="46">1<pos:position pos:line="153" pos:column="47"/></literal></expr>]<pos:position pos:line="153" pos:column="48"/></index></name> <operator pos:line="153" pos:column="49">==<pos:position pos:line="153" pos:column="51"/></operator> <literal type="char" pos:line="153" pos:column="52">'0'<pos:position pos:line="153" pos:column="55"/></literal></expr>)<pos:position pos:line="153" pos:column="56"/></condition><then pos:line="153" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><name pos:line="154" pos:column="25">url<pos:position pos:line="154" pos:column="28"/></name><operator pos:line="154" pos:column="28">--<pos:position pos:line="154" pos:column="30"/></operator></expr>;<pos:position pos:line="154" pos:column="31"/></expr_stmt></block></then></if>
		<if pos:line="155" pos:column="17">if <condition pos:line="155" pos:column="20">(<expr><name pos:line="155" pos:column="21">url<pos:position pos:line="155" pos:column="24"/></name> <operator pos:line="155" pos:column="25">==<pos:position pos:line="155" pos:column="27"/></operator> <name pos:line="155" pos:column="28">slash_ptr<pos:position pos:line="155" pos:column="37"/></name></expr>)<pos:position pos:line="155" pos:column="38"/></condition><then pos:line="155" pos:column="38"> <block pos:line="155" pos:column="39">{
			<comment type="block" pos:line="156" pos:column="25">/* Skip ":" port with no number, it's same as default */</comment>
		}<pos:position pos:line="157" pos:column="18"/></block></then> <elseif pos:line="157" pos:column="19">else <if pos:line="157" pos:column="24">if <condition pos:line="157" pos:column="27">(<expr><name pos:line="157" pos:column="28">slash_ptr<pos:position pos:line="157" pos:column="37"/></name> <operator pos:line="157" pos:column="38">-<pos:position pos:line="157" pos:column="39"/></operator> <name pos:line="157" pos:column="40">url<pos:position pos:line="157" pos:column="43"/></name> <operator pos:line="157" pos:column="44">==<pos:position pos:line="157" pos:column="46"/></operator> <literal type="number" pos:line="157" pos:column="47">2<pos:position pos:line="157" pos:column="48"/></literal> <operator pos:line="157" pos:column="49">&amp;&amp;<pos:position pos:line="157" pos:column="59"/></operator>
			   <operator pos:line="158" pos:column="28">!<pos:position pos:line="158" pos:column="29"/></operator><call><name pos:line="158" pos:column="29">strncmp<pos:position pos:line="158" pos:column="36"/></name><argument_list pos:line="158" pos:column="36">(<argument><expr><name><name pos:line="158" pos:column="37">norm<pos:position pos:line="158" pos:column="41"/></name><operator pos:line="158" pos:column="41">.<pos:position pos:line="158" pos:column="42"/></operator><name pos:line="158" pos:column="42">buf<pos:position pos:line="158" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="47">"http:"<pos:position pos:line="158" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="158" pos:column="56">5<pos:position pos:line="158" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="58"/></argument_list></call> <operator pos:line="158" pos:column="59">&amp;&amp;<pos:position pos:line="158" pos:column="69"/></operator>
			   <operator pos:line="159" pos:column="28">!<pos:position pos:line="159" pos:column="29"/></operator><call><name pos:line="159" pos:column="29">strncmp<pos:position pos:line="159" pos:column="36"/></name><argument_list pos:line="159" pos:column="36">(<argument><expr><name pos:line="159" pos:column="37">url<pos:position pos:line="159" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="42">"80"<pos:position pos:line="159" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="159" pos:column="48">2<pos:position pos:line="159" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="159" pos:column="51"/></condition><then pos:line="159" pos:column="51"> <block pos:line="159" pos:column="52">{
			<comment type="block" pos:line="160" pos:column="25">/* Skip http :80 as it's the default */</comment>
		}<pos:position pos:line="161" pos:column="18"/></block></then></if></elseif> <elseif pos:line="161" pos:column="19">else <if pos:line="161" pos:column="24">if <condition pos:line="161" pos:column="27">(<expr><name pos:line="161" pos:column="28">slash_ptr<pos:position pos:line="161" pos:column="37"/></name> <operator pos:line="161" pos:column="38">-<pos:position pos:line="161" pos:column="39"/></operator> <name pos:line="161" pos:column="40">url<pos:position pos:line="161" pos:column="43"/></name> <operator pos:line="161" pos:column="44">==<pos:position pos:line="161" pos:column="46"/></operator> <literal type="number" pos:line="161" pos:column="47">3<pos:position pos:line="161" pos:column="48"/></literal> <operator pos:line="161" pos:column="49">&amp;&amp;<pos:position pos:line="161" pos:column="59"/></operator>
			   <operator pos:line="162" pos:column="28">!<pos:position pos:line="162" pos:column="29"/></operator><call><name pos:line="162" pos:column="29">strncmp<pos:position pos:line="162" pos:column="36"/></name><argument_list pos:line="162" pos:column="36">(<argument><expr><name><name pos:line="162" pos:column="37">norm<pos:position pos:line="162" pos:column="41"/></name><operator pos:line="162" pos:column="41">.<pos:position pos:line="162" pos:column="42"/></operator><name pos:line="162" pos:column="42">buf<pos:position pos:line="162" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="47">"https:"<pos:position pos:line="162" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="162" pos:column="57">6<pos:position pos:line="162" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="59"/></argument_list></call> <operator pos:line="162" pos:column="60">&amp;&amp;<pos:position pos:line="162" pos:column="70"/></operator>
			   <operator pos:line="163" pos:column="28">!<pos:position pos:line="163" pos:column="29"/></operator><call><name pos:line="163" pos:column="29">strncmp<pos:position pos:line="163" pos:column="36"/></name><argument_list pos:line="163" pos:column="36">(<argument><expr><name pos:line="163" pos:column="37">url<pos:position pos:line="163" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="42">"443"<pos:position pos:line="163" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="163" pos:column="49">3<pos:position pos:line="163" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="163" pos:column="52"/></condition><then pos:line="163" pos:column="52"> <block pos:line="163" pos:column="53">{
			<comment type="block" pos:line="164" pos:column="25">/* Skip https :443 as it's the default */</comment>
		}<pos:position pos:line="165" pos:column="18"/></block></then></if></elseif> <else pos:line="165" pos:column="19">else <block pos:line="165" pos:column="24">{
			<comment type="block" pos:line="166" pos:column="25">/*
			 * Port number must be all digits with leading 0s removed
			 * and since all the protocols we deal with have a 16-bit
			 * port number it must also be in the range 1..65535
			 * 0 is not allowed because that means "next available"
			 * on just about every system and therefore cannot be used
			 */</comment>
			<decl_stmt><decl><type><name pos:line="173" pos:column="25">unsigned<pos:position pos:line="173" pos:column="33"/></name> <name pos:line="173" pos:column="34">long<pos:position pos:line="173" pos:column="38"/></name></type> <name pos:line="173" pos:column="39">pnum<pos:position pos:line="173" pos:column="43"/></name> <init pos:line="173" pos:column="44">= <expr><literal type="number" pos:line="173" pos:column="46">0<pos:position pos:line="173" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="173" pos:column="48"/></decl_stmt>
			<expr_stmt><expr><name pos:line="174" pos:column="25">spanned<pos:position pos:line="174" pos:column="32"/></name> <operator pos:line="174" pos:column="33">=<pos:position pos:line="174" pos:column="34"/></operator> <call><name pos:line="174" pos:column="35">strspn<pos:position pos:line="174" pos:column="41"/></name><argument_list pos:line="174" pos:column="41">(<argument><expr><name pos:line="174" pos:column="42">url<pos:position pos:line="174" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="47">URL_DIGIT<pos:position pos:line="174" pos:column="56"/></name></expr></argument>)<pos:position pos:line="174" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="58"/></expr_stmt>
			<if pos:line="175" pos:column="25">if <condition pos:line="175" pos:column="28">(<expr><name pos:line="175" pos:column="29">spanned<pos:position pos:line="175" pos:column="36"/></name> <operator pos:line="175" pos:column="37">&lt;<pos:position pos:line="175" pos:column="41"/></operator> <name pos:line="175" pos:column="39">slash_ptr<pos:position pos:line="175" pos:column="48"/></name> <operator pos:line="175" pos:column="49">-<pos:position pos:line="175" pos:column="50"/></operator> <name pos:line="175" pos:column="51">url<pos:position pos:line="175" pos:column="54"/></name></expr>)<pos:position pos:line="175" pos:column="55"/></condition><then pos:line="175" pos:column="55"> <block pos:line="175" pos:column="56">{
				<comment type="block" pos:line="176" pos:column="33">/* port number has invalid characters */</comment>
				<if pos:line="177" pos:column="33">if <condition pos:line="177" pos:column="36">(<expr><name pos:line="177" pos:column="37">out_info<pos:position pos:line="177" pos:column="45"/></name></expr>)<pos:position pos:line="177" pos:column="46"/></condition><then pos:line="177" pos:column="46"> <block pos:line="177" pos:column="47">{
					<expr_stmt><expr><name><name pos:line="178" pos:column="41">out_info<pos:position pos:line="178" pos:column="49"/></name><operator pos:line="178" pos:column="49">-&gt;<pos:position pos:line="178" pos:column="54"/></operator><name pos:line="178" pos:column="51">url<pos:position pos:line="178" pos:column="54"/></name></name> <operator pos:line="178" pos:column="55">=<pos:position pos:line="178" pos:column="56"/></operator> <name pos:line="178" pos:column="57">NULL<pos:position pos:line="178" pos:column="61"/></name></expr>;<pos:position pos:line="178" pos:column="62"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="179" pos:column="41">out_info<pos:position pos:line="179" pos:column="49"/></name><operator pos:line="179" pos:column="49">-&gt;<pos:position pos:line="179" pos:column="54"/></operator><name pos:line="179" pos:column="51">err<pos:position pos:line="179" pos:column="54"/></name></name> <operator pos:line="179" pos:column="55">=<pos:position pos:line="179" pos:column="56"/></operator> <call><name pos:line="179" pos:column="57">_<pos:position pos:line="179" pos:column="58"/></name><argument_list pos:line="179" pos:column="58">(<argument><expr><literal type="string" pos:line="179" pos:column="59">"invalid port number"<pos:position pos:line="179" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="82"/></expr_stmt>
				}<pos:position pos:line="180" pos:column="34"/></block></then></if>
				<expr_stmt><expr><call><name pos:line="181" pos:column="33">strbuf_release<pos:position pos:line="181" pos:column="47"/></name><argument_list pos:line="181" pos:column="47">(<argument><expr><operator pos:line="181" pos:column="48">&amp;<pos:position pos:line="181" pos:column="53"/></operator><name pos:line="181" pos:column="49">norm<pos:position pos:line="181" pos:column="53"/></name></expr></argument>)<pos:position pos:line="181" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="55"/></expr_stmt>
				<return pos:line="182" pos:column="33">return <expr><name pos:line="182" pos:column="40">NULL<pos:position pos:line="182" pos:column="44"/></name></expr>;<pos:position pos:line="182" pos:column="45"/></return>
			}<pos:position pos:line="183" pos:column="26"/></block></then></if>
			<if pos:line="184" pos:column="25">if <condition pos:line="184" pos:column="28">(<expr><name pos:line="184" pos:column="29">slash_ptr<pos:position pos:line="184" pos:column="38"/></name> <operator pos:line="184" pos:column="39">-<pos:position pos:line="184" pos:column="40"/></operator> <name pos:line="184" pos:column="41">url<pos:position pos:line="184" pos:column="44"/></name> <operator pos:line="184" pos:column="45">&lt;=<pos:position pos:line="184" pos:column="50"/></operator> <literal type="number" pos:line="184" pos:column="48">5<pos:position pos:line="184" pos:column="49"/></literal></expr>)<pos:position pos:line="184" pos:column="50"/></condition><then pos:line="184" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><name pos:line="185" pos:column="33">pnum<pos:position pos:line="185" pos:column="37"/></name> <operator pos:line="185" pos:column="38">=<pos:position pos:line="185" pos:column="39"/></operator> <call><name pos:line="185" pos:column="40">strtoul<pos:position pos:line="185" pos:column="47"/></name><argument_list pos:line="185" pos:column="47">(<argument><expr><name pos:line="185" pos:column="48">url<pos:position pos:line="185" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="53">NULL<pos:position pos:line="185" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="185" pos:column="59">10<pos:position pos:line="185" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="63"/></expr_stmt></block></then></if>
			<if pos:line="186" pos:column="25">if <condition pos:line="186" pos:column="28">(<expr><name pos:line="186" pos:column="29">pnum<pos:position pos:line="186" pos:column="33"/></name> <operator pos:line="186" pos:column="34">==<pos:position pos:line="186" pos:column="36"/></operator> <literal type="number" pos:line="186" pos:column="37">0<pos:position pos:line="186" pos:column="38"/></literal> <operator pos:line="186" pos:column="39">||<pos:position pos:line="186" pos:column="41"/></operator> <name pos:line="186" pos:column="42">pnum<pos:position pos:line="186" pos:column="46"/></name> <operator pos:line="186" pos:column="47">&gt;<pos:position pos:line="186" pos:column="51"/></operator> <literal type="number" pos:line="186" pos:column="49">65535<pos:position pos:line="186" pos:column="54"/></literal></expr>)<pos:position pos:line="186" pos:column="55"/></condition><then pos:line="186" pos:column="55"> <block pos:line="186" pos:column="56">{
				<comment type="block" pos:line="187" pos:column="33">/* port number not in range 1..65535 */</comment>
				<if pos:line="188" pos:column="33">if <condition pos:line="188" pos:column="36">(<expr><name pos:line="188" pos:column="37">out_info<pos:position pos:line="188" pos:column="45"/></name></expr>)<pos:position pos:line="188" pos:column="46"/></condition><then pos:line="188" pos:column="46"> <block pos:line="188" pos:column="47">{
					<expr_stmt><expr><name><name pos:line="189" pos:column="41">out_info<pos:position pos:line="189" pos:column="49"/></name><operator pos:line="189" pos:column="49">-&gt;<pos:position pos:line="189" pos:column="54"/></operator><name pos:line="189" pos:column="51">url<pos:position pos:line="189" pos:column="54"/></name></name> <operator pos:line="189" pos:column="55">=<pos:position pos:line="189" pos:column="56"/></operator> <name pos:line="189" pos:column="57">NULL<pos:position pos:line="189" pos:column="61"/></name></expr>;<pos:position pos:line="189" pos:column="62"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="190" pos:column="41">out_info<pos:position pos:line="190" pos:column="49"/></name><operator pos:line="190" pos:column="49">-&gt;<pos:position pos:line="190" pos:column="54"/></operator><name pos:line="190" pos:column="51">err<pos:position pos:line="190" pos:column="54"/></name></name> <operator pos:line="190" pos:column="55">=<pos:position pos:line="190" pos:column="56"/></operator> <call><name pos:line="190" pos:column="57">_<pos:position pos:line="190" pos:column="58"/></name><argument_list pos:line="190" pos:column="58">(<argument><expr><literal type="string" pos:line="190" pos:column="59">"invalid port number"<pos:position pos:line="190" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="82"/></expr_stmt>
				}<pos:position pos:line="191" pos:column="34"/></block></then></if>
				<expr_stmt><expr><call><name pos:line="192" pos:column="33">strbuf_release<pos:position pos:line="192" pos:column="47"/></name><argument_list pos:line="192" pos:column="47">(<argument><expr><operator pos:line="192" pos:column="48">&amp;<pos:position pos:line="192" pos:column="53"/></operator><name pos:line="192" pos:column="49">norm<pos:position pos:line="192" pos:column="53"/></name></expr></argument>)<pos:position pos:line="192" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="55"/></expr_stmt>
				<return pos:line="193" pos:column="33">return <expr><name pos:line="193" pos:column="40">NULL<pos:position pos:line="193" pos:column="44"/></name></expr>;<pos:position pos:line="193" pos:column="45"/></return>
			}<pos:position pos:line="194" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="195" pos:column="25">strbuf_addch<pos:position pos:line="195" pos:column="37"/></name><argument_list pos:line="195" pos:column="37">(<argument><expr><operator pos:line="195" pos:column="38">&amp;<pos:position pos:line="195" pos:column="43"/></operator><name pos:line="195" pos:column="39">norm<pos:position pos:line="195" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="195" pos:column="45">':'<pos:position pos:line="195" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="195" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="196" pos:column="25">strbuf_add<pos:position pos:line="196" pos:column="35"/></name><argument_list pos:line="196" pos:column="35">(<argument><expr><operator pos:line="196" pos:column="36">&amp;<pos:position pos:line="196" pos:column="41"/></operator><name pos:line="196" pos:column="37">norm<pos:position pos:line="196" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="196" pos:column="43">url<pos:position pos:line="196" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="196" pos:column="48">slash_ptr<pos:position pos:line="196" pos:column="57"/></name> <operator pos:line="196" pos:column="58">-<pos:position pos:line="196" pos:column="59"/></operator> <name pos:line="196" pos:column="60">url<pos:position pos:line="196" pos:column="63"/></name></expr></argument>)<pos:position pos:line="196" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><name pos:line="197" pos:column="25">port_len<pos:position pos:line="197" pos:column="33"/></name> <operator pos:line="197" pos:column="34">=<pos:position pos:line="197" pos:column="35"/></operator> <name pos:line="197" pos:column="36">slash_ptr<pos:position pos:line="197" pos:column="45"/></name> <operator pos:line="197" pos:column="46">-<pos:position pos:line="197" pos:column="47"/></operator> <name pos:line="197" pos:column="48">url<pos:position pos:line="197" pos:column="51"/></name></expr>;<pos:position pos:line="197" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="198" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="199" pos:column="17">url_len<pos:position pos:line="199" pos:column="24"/></name> <operator pos:line="199" pos:column="25">-=<pos:position pos:line="199" pos:column="27"/></operator> <name pos:line="199" pos:column="28">slash_ptr<pos:position pos:line="199" pos:column="37"/></name> <operator pos:line="199" pos:column="38">-<pos:position pos:line="199" pos:column="39"/></operator> <name pos:line="199" pos:column="40">colon_ptr<pos:position pos:line="199" pos:column="49"/></name></expr>;<pos:position pos:line="199" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name pos:line="200" pos:column="17">url<pos:position pos:line="200" pos:column="20"/></name> <operator pos:line="200" pos:column="21">=<pos:position pos:line="200" pos:column="22"/></operator> <name pos:line="200" pos:column="23">slash_ptr<pos:position pos:line="200" pos:column="32"/></name></expr>;<pos:position pos:line="200" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="201" pos:column="10"/></block></then></if>
	<if pos:line="202" pos:column="9">if <condition pos:line="202" pos:column="12">(<expr><name pos:line="202" pos:column="13">host_off<pos:position pos:line="202" pos:column="21"/></name></expr>)<pos:position pos:line="202" pos:column="22"/></condition><then pos:line="202" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="203" pos:column="17">host_len<pos:position pos:line="203" pos:column="25"/></name> <operator pos:line="203" pos:column="26">=<pos:position pos:line="203" pos:column="27"/></operator> <name><name pos:line="203" pos:column="28">norm<pos:position pos:line="203" pos:column="32"/></name><operator pos:line="203" pos:column="32">.<pos:position pos:line="203" pos:column="33"/></operator><name pos:line="203" pos:column="33">len<pos:position pos:line="203" pos:column="36"/></name></name> <operator pos:line="203" pos:column="37">-<pos:position pos:line="203" pos:column="38"/></operator> <name pos:line="203" pos:column="39">host_off<pos:position pos:line="203" pos:column="47"/></name></expr>;<pos:position pos:line="203" pos:column="48"/></expr_stmt></block></then></if>


	<comment type="block" pos:line="206" pos:column="9">/*
	 * Now copy the path resolving any . and .. segments being careful not
	 * to corrupt the URL by unescaping any delimiters, but do add an
	 * initial '/' if it's missing and do normalize any %-escape sequences.
	 */</comment>
	<expr_stmt><expr><name pos:line="211" pos:column="9">path_off<pos:position pos:line="211" pos:column="17"/></name> <operator pos:line="211" pos:column="18">=<pos:position pos:line="211" pos:column="19"/></operator> <name><name pos:line="211" pos:column="20">norm<pos:position pos:line="211" pos:column="24"/></name><operator pos:line="211" pos:column="24">.<pos:position pos:line="211" pos:column="25"/></operator><name pos:line="211" pos:column="25">len<pos:position pos:line="211" pos:column="28"/></name></name></expr>;<pos:position pos:line="211" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="212" pos:column="9">path_start<pos:position pos:line="212" pos:column="19"/></name> <operator pos:line="212" pos:column="20">=<pos:position pos:line="212" pos:column="21"/></operator> <name><name pos:line="212" pos:column="22">norm<pos:position pos:line="212" pos:column="26"/></name><operator pos:line="212" pos:column="26">.<pos:position pos:line="212" pos:column="27"/></operator><name pos:line="212" pos:column="27">buf<pos:position pos:line="212" pos:column="30"/></name></name> <operator pos:line="212" pos:column="31">+<pos:position pos:line="212" pos:column="32"/></operator> <name pos:line="212" pos:column="33">path_off<pos:position pos:line="212" pos:column="41"/></name></expr>;<pos:position pos:line="212" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="213" pos:column="9">strbuf_addch<pos:position pos:line="213" pos:column="21"/></name><argument_list pos:line="213" pos:column="21">(<argument><expr><operator pos:line="213" pos:column="22">&amp;<pos:position pos:line="213" pos:column="27"/></operator><name pos:line="213" pos:column="23">norm<pos:position pos:line="213" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="213" pos:column="29">'/'<pos:position pos:line="213" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="213" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="34"/></expr_stmt>
	<if pos:line="214" pos:column="9">if <condition pos:line="214" pos:column="12">(<expr><operator pos:line="214" pos:column="13">*<pos:position pos:line="214" pos:column="14"/></operator><name pos:line="214" pos:column="14">url<pos:position pos:line="214" pos:column="17"/></name> <operator pos:line="214" pos:column="18">==<pos:position pos:line="214" pos:column="20"/></operator> <literal type="char" pos:line="214" pos:column="21">'/'<pos:position pos:line="214" pos:column="24"/></literal></expr>)<pos:position pos:line="214" pos:column="25"/></condition><then pos:line="214" pos:column="25"> <block pos:line="214" pos:column="26">{
		<expr_stmt><expr><name pos:line="215" pos:column="17">url<pos:position pos:line="215" pos:column="20"/></name><operator pos:line="215" pos:column="20">++<pos:position pos:line="215" pos:column="22"/></operator></expr>;<pos:position pos:line="215" pos:column="23"/></expr_stmt>
		<expr_stmt><expr><name pos:line="216" pos:column="17">url_len<pos:position pos:line="216" pos:column="24"/></name><operator pos:line="216" pos:column="24">--<pos:position pos:line="216" pos:column="26"/></operator></expr>;<pos:position pos:line="216" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="217" pos:column="10"/></block></then></if>
	<for pos:line="218" pos:column="9">for <control pos:line="218" pos:column="13">(<init pos:line="218" pos:column="14">;<pos:position pos:line="218" pos:column="15"/></init><condition pos:line="218" pos:column="15">;<pos:position pos:line="218" pos:column="16"/></condition><incr/>)<pos:position pos:line="218" pos:column="17"/></control> <block pos:line="218" pos:column="18">{
		<decl_stmt><decl><type><specifier pos:line="219" pos:column="17">const<pos:position pos:line="219" pos:column="22"/></specifier> <name pos:line="219" pos:column="23">char<pos:position pos:line="219" pos:column="27"/></name> <modifier pos:line="219" pos:column="28">*<pos:position pos:line="219" pos:column="29"/></modifier></type><name pos:line="219" pos:column="29">seg_start<pos:position pos:line="219" pos:column="38"/></name></decl>;<pos:position pos:line="219" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="220" pos:column="17">size_t<pos:position pos:line="220" pos:column="23"/></name></type> <name pos:line="220" pos:column="24">seg_start_off<pos:position pos:line="220" pos:column="37"/></name> <init pos:line="220" pos:column="38">= <expr><name><name pos:line="220" pos:column="40">norm<pos:position pos:line="220" pos:column="44"/></name><operator pos:line="220" pos:column="44">.<pos:position pos:line="220" pos:column="45"/></operator><name pos:line="220" pos:column="45">len<pos:position pos:line="220" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="220" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="221" pos:column="17">const<pos:position pos:line="221" pos:column="22"/></specifier> <name pos:line="221" pos:column="23">char<pos:position pos:line="221" pos:column="27"/></name> <modifier pos:line="221" pos:column="28">*<pos:position pos:line="221" pos:column="29"/></modifier></type><name pos:line="221" pos:column="29">next_slash<pos:position pos:line="221" pos:column="39"/></name> <init pos:line="221" pos:column="40">= <expr><name pos:line="221" pos:column="42">url<pos:position pos:line="221" pos:column="45"/></name> <operator pos:line="221" pos:column="46">+<pos:position pos:line="221" pos:column="47"/></operator> <call><name pos:line="221" pos:column="48">strcspn<pos:position pos:line="221" pos:column="55"/></name><argument_list pos:line="221" pos:column="55">(<argument><expr><name pos:line="221" pos:column="56">url<pos:position pos:line="221" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="221" pos:column="61">"/?#"<pos:position pos:line="221" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="221" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="221" pos:column="68"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="222" pos:column="17">int<pos:position pos:line="222" pos:column="20"/></name></type> <name pos:line="222" pos:column="21">skip_add_slash<pos:position pos:line="222" pos:column="35"/></name> <init pos:line="222" pos:column="36">= <expr><literal type="number" pos:line="222" pos:column="38">0<pos:position pos:line="222" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="222" pos:column="40"/></decl_stmt>

		<comment type="block" pos:line="224" pos:column="17">/*
		 * RFC 3689 indicates that any . or .. segments should be
		 * unescaped before being checked for.
		 */</comment>
		<if pos:line="228" pos:column="17">if <condition pos:line="228" pos:column="20">(<expr><operator pos:line="228" pos:column="21">!<pos:position pos:line="228" pos:column="22"/></operator><call><name pos:line="228" pos:column="22">append_normalized_escapes<pos:position pos:line="228" pos:column="47"/></name><argument_list pos:line="228" pos:column="47">(<argument><expr><operator pos:line="228" pos:column="48">&amp;<pos:position pos:line="228" pos:column="53"/></operator><name pos:line="228" pos:column="49">norm<pos:position pos:line="228" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="228" pos:column="55">url<pos:position pos:line="228" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="228" pos:column="60">next_slash<pos:position pos:line="228" pos:column="70"/></name> <operator pos:line="228" pos:column="71">-<pos:position pos:line="228" pos:column="72"/></operator> <name pos:line="228" pos:column="73">url<pos:position pos:line="228" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="228" pos:column="78">""<pos:position pos:line="228" pos:column="80"/></literal></expr></argument>,
					       <argument><expr><name pos:line="229" pos:column="48">URL_RESERVED<pos:position pos:line="229" pos:column="60"/></name></expr></argument>)<pos:position pos:line="229" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="229" pos:column="62"/></condition><then pos:line="229" pos:column="62"> <block pos:line="229" pos:column="63">{
			<if pos:line="230" pos:column="25">if <condition pos:line="230" pos:column="28">(<expr><name pos:line="230" pos:column="29">out_info<pos:position pos:line="230" pos:column="37"/></name></expr>)<pos:position pos:line="230" pos:column="38"/></condition><then pos:line="230" pos:column="38"> <block pos:line="230" pos:column="39">{
				<expr_stmt><expr><name><name pos:line="231" pos:column="33">out_info<pos:position pos:line="231" pos:column="41"/></name><operator pos:line="231" pos:column="41">-&gt;<pos:position pos:line="231" pos:column="46"/></operator><name pos:line="231" pos:column="43">url<pos:position pos:line="231" pos:column="46"/></name></name> <operator pos:line="231" pos:column="47">=<pos:position pos:line="231" pos:column="48"/></operator> <name pos:line="231" pos:column="49">NULL<pos:position pos:line="231" pos:column="53"/></name></expr>;<pos:position pos:line="231" pos:column="54"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="232" pos:column="33">out_info<pos:position pos:line="232" pos:column="41"/></name><operator pos:line="232" pos:column="41">-&gt;<pos:position pos:line="232" pos:column="46"/></operator><name pos:line="232" pos:column="43">err<pos:position pos:line="232" pos:column="46"/></name></name> <operator pos:line="232" pos:column="47">=<pos:position pos:line="232" pos:column="48"/></operator> <call><name pos:line="232" pos:column="49">_<pos:position pos:line="232" pos:column="50"/></name><argument_list pos:line="232" pos:column="50">(<argument><expr><literal type="string" pos:line="232" pos:column="51">"invalid %XX escape sequence"<pos:position pos:line="232" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="232" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="82"/></expr_stmt>
			}<pos:position pos:line="233" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="234" pos:column="25">strbuf_release<pos:position pos:line="234" pos:column="39"/></name><argument_list pos:line="234" pos:column="39">(<argument><expr><operator pos:line="234" pos:column="40">&amp;<pos:position pos:line="234" pos:column="45"/></operator><name pos:line="234" pos:column="41">norm<pos:position pos:line="234" pos:column="45"/></name></expr></argument>)<pos:position pos:line="234" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="47"/></expr_stmt>
			<return pos:line="235" pos:column="25">return <expr><name pos:line="235" pos:column="32">NULL<pos:position pos:line="235" pos:column="36"/></name></expr>;<pos:position pos:line="235" pos:column="37"/></return>
		}<pos:position pos:line="236" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="238" pos:column="17">seg_start<pos:position pos:line="238" pos:column="26"/></name> <operator pos:line="238" pos:column="27">=<pos:position pos:line="238" pos:column="28"/></operator> <name><name pos:line="238" pos:column="29">norm<pos:position pos:line="238" pos:column="33"/></name><operator pos:line="238" pos:column="33">.<pos:position pos:line="238" pos:column="34"/></operator><name pos:line="238" pos:column="34">buf<pos:position pos:line="238" pos:column="37"/></name></name> <operator pos:line="238" pos:column="38">+<pos:position pos:line="238" pos:column="39"/></operator> <name pos:line="238" pos:column="40">seg_start_off<pos:position pos:line="238" pos:column="53"/></name></expr>;<pos:position pos:line="238" pos:column="54"/></expr_stmt>
		<if pos:line="239" pos:column="17">if <condition pos:line="239" pos:column="20">(<expr><operator pos:line="239" pos:column="21">!<pos:position pos:line="239" pos:column="22"/></operator><call><name pos:line="239" pos:column="22">strcmp<pos:position pos:line="239" pos:column="28"/></name><argument_list pos:line="239" pos:column="28">(<argument><expr><name pos:line="239" pos:column="29">seg_start<pos:position pos:line="239" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="239" pos:column="40">"."<pos:position pos:line="239" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="239" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="239" pos:column="45"/></condition><then pos:line="239" pos:column="45"> <block pos:line="239" pos:column="46">{
			<comment type="block" pos:line="240" pos:column="25">/* ignore a . segment; be careful not to remove initial '/' */</comment>
			<if pos:line="241" pos:column="25">if <condition pos:line="241" pos:column="28">(<expr><name pos:line="241" pos:column="29">seg_start<pos:position pos:line="241" pos:column="38"/></name> <operator pos:line="241" pos:column="39">==<pos:position pos:line="241" pos:column="41"/></operator> <name pos:line="241" pos:column="42">path_start<pos:position pos:line="241" pos:column="52"/></name> <operator pos:line="241" pos:column="53">+<pos:position pos:line="241" pos:column="54"/></operator> <literal type="number" pos:line="241" pos:column="55">1<pos:position pos:line="241" pos:column="56"/></literal></expr>)<pos:position pos:line="241" pos:column="57"/></condition><then pos:line="241" pos:column="57"> <block pos:line="241" pos:column="58">{
				<expr_stmt><expr><call><name pos:line="242" pos:column="33">strbuf_setlen<pos:position pos:line="242" pos:column="46"/></name><argument_list pos:line="242" pos:column="46">(<argument><expr><operator pos:line="242" pos:column="47">&amp;<pos:position pos:line="242" pos:column="52"/></operator><name pos:line="242" pos:column="48">norm<pos:position pos:line="242" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="242" pos:column="54">norm<pos:position pos:line="242" pos:column="58"/></name><operator pos:line="242" pos:column="58">.<pos:position pos:line="242" pos:column="59"/></operator><name pos:line="242" pos:column="59">len<pos:position pos:line="242" pos:column="62"/></name></name> <operator pos:line="242" pos:column="63">-<pos:position pos:line="242" pos:column="64"/></operator> <literal type="number" pos:line="242" pos:column="65">1<pos:position pos:line="242" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="242" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="68"/></expr_stmt>
				<expr_stmt><expr><name pos:line="243" pos:column="33">skip_add_slash<pos:position pos:line="243" pos:column="47"/></name> <operator pos:line="243" pos:column="48">=<pos:position pos:line="243" pos:column="49"/></operator> <literal type="number" pos:line="243" pos:column="50">1<pos:position pos:line="243" pos:column="51"/></literal></expr>;<pos:position pos:line="243" pos:column="52"/></expr_stmt>
			}<pos:position pos:line="244" pos:column="26"/></block></then> <else pos:line="244" pos:column="27">else <block pos:line="244" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="245" pos:column="33">strbuf_setlen<pos:position pos:line="245" pos:column="46"/></name><argument_list pos:line="245" pos:column="46">(<argument><expr><operator pos:line="245" pos:column="47">&amp;<pos:position pos:line="245" pos:column="52"/></operator><name pos:line="245" pos:column="48">norm<pos:position pos:line="245" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="245" pos:column="54">norm<pos:position pos:line="245" pos:column="58"/></name><operator pos:line="245" pos:column="58">.<pos:position pos:line="245" pos:column="59"/></operator><name pos:line="245" pos:column="59">len<pos:position pos:line="245" pos:column="62"/></name></name> <operator pos:line="245" pos:column="63">-<pos:position pos:line="245" pos:column="64"/></operator> <literal type="number" pos:line="245" pos:column="65">2<pos:position pos:line="245" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="245" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="68"/></expr_stmt>
			}<pos:position pos:line="246" pos:column="26"/></block></else></if>
		}<pos:position pos:line="247" pos:column="18"/></block></then> <elseif pos:line="247" pos:column="19">else <if pos:line="247" pos:column="24">if <condition pos:line="247" pos:column="27">(<expr><operator pos:line="247" pos:column="28">!<pos:position pos:line="247" pos:column="29"/></operator><call><name pos:line="247" pos:column="29">strcmp<pos:position pos:line="247" pos:column="35"/></name><argument_list pos:line="247" pos:column="35">(<argument><expr><name pos:line="247" pos:column="36">seg_start<pos:position pos:line="247" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="247" pos:column="47">".."<pos:position pos:line="247" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="247" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="247" pos:column="53"/></condition><then pos:line="247" pos:column="53"> <block pos:line="247" pos:column="54">{
			<comment type="block" pos:line="248" pos:column="25">/*
			 * ignore a .. segment and remove the previous segment;
			 * be careful not to remove initial '/' from path
			 */</comment>
			<decl_stmt><decl><type><specifier pos:line="252" pos:column="25">const<pos:position pos:line="252" pos:column="30"/></specifier> <name pos:line="252" pos:column="31">char<pos:position pos:line="252" pos:column="35"/></name> <modifier pos:line="252" pos:column="36">*<pos:position pos:line="252" pos:column="37"/></modifier></type><name pos:line="252" pos:column="37">prev_slash<pos:position pos:line="252" pos:column="47"/></name> <init pos:line="252" pos:column="48">= <expr><name><name pos:line="252" pos:column="50">norm<pos:position pos:line="252" pos:column="54"/></name><operator pos:line="252" pos:column="54">.<pos:position pos:line="252" pos:column="55"/></operator><name pos:line="252" pos:column="55">buf<pos:position pos:line="252" pos:column="58"/></name></name> <operator pos:line="252" pos:column="59">+<pos:position pos:line="252" pos:column="60"/></operator> <name><name pos:line="252" pos:column="61">norm<pos:position pos:line="252" pos:column="65"/></name><operator pos:line="252" pos:column="65">.<pos:position pos:line="252" pos:column="66"/></operator><name pos:line="252" pos:column="66">len<pos:position pos:line="252" pos:column="69"/></name></name> <operator pos:line="252" pos:column="70">-<pos:position pos:line="252" pos:column="71"/></operator> <literal type="number" pos:line="252" pos:column="72">3<pos:position pos:line="252" pos:column="73"/></literal></expr></init></decl>;<pos:position pos:line="252" pos:column="74"/></decl_stmt>
			<if pos:line="253" pos:column="25">if <condition pos:line="253" pos:column="28">(<expr><name pos:line="253" pos:column="29">prev_slash<pos:position pos:line="253" pos:column="39"/></name> <operator pos:line="253" pos:column="40">==<pos:position pos:line="253" pos:column="42"/></operator> <name pos:line="253" pos:column="43">path_start<pos:position pos:line="253" pos:column="53"/></name></expr>)<pos:position pos:line="253" pos:column="54"/></condition><then pos:line="253" pos:column="54"> <block pos:line="253" pos:column="55">{
				<comment type="block" pos:line="254" pos:column="33">/* invalid .. because no previous segment to remove */</comment>
				<if pos:line="255" pos:column="33">if <condition pos:line="255" pos:column="36">(<expr><name pos:line="255" pos:column="37">out_info<pos:position pos:line="255" pos:column="45"/></name></expr>)<pos:position pos:line="255" pos:column="46"/></condition><then pos:line="255" pos:column="46"> <block pos:line="255" pos:column="47">{
					<expr_stmt><expr><name><name pos:line="256" pos:column="41">out_info<pos:position pos:line="256" pos:column="49"/></name><operator pos:line="256" pos:column="49">-&gt;<pos:position pos:line="256" pos:column="54"/></operator><name pos:line="256" pos:column="51">url<pos:position pos:line="256" pos:column="54"/></name></name> <operator pos:line="256" pos:column="55">=<pos:position pos:line="256" pos:column="56"/></operator> <name pos:line="256" pos:column="57">NULL<pos:position pos:line="256" pos:column="61"/></name></expr>;<pos:position pos:line="256" pos:column="62"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="257" pos:column="41">out_info<pos:position pos:line="257" pos:column="49"/></name><operator pos:line="257" pos:column="49">-&gt;<pos:position pos:line="257" pos:column="54"/></operator><name pos:line="257" pos:column="51">err<pos:position pos:line="257" pos:column="54"/></name></name> <operator pos:line="257" pos:column="55">=<pos:position pos:line="257" pos:column="56"/></operator> <call><name pos:line="257" pos:column="57">_<pos:position pos:line="257" pos:column="58"/></name><argument_list pos:line="257" pos:column="58">(<argument><expr><literal type="string" pos:line="257" pos:column="59">"invalid '..' path segment"<pos:position pos:line="257" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="257" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="88"/></expr_stmt>
				}<pos:position pos:line="258" pos:column="34"/></block></then></if>
				<expr_stmt><expr><call><name pos:line="259" pos:column="33">strbuf_release<pos:position pos:line="259" pos:column="47"/></name><argument_list pos:line="259" pos:column="47">(<argument><expr><operator pos:line="259" pos:column="48">&amp;<pos:position pos:line="259" pos:column="53"/></operator><name pos:line="259" pos:column="49">norm<pos:position pos:line="259" pos:column="53"/></name></expr></argument>)<pos:position pos:line="259" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="55"/></expr_stmt>
				<return pos:line="260" pos:column="33">return <expr><name pos:line="260" pos:column="40">NULL<pos:position pos:line="260" pos:column="44"/></name></expr>;<pos:position pos:line="260" pos:column="45"/></return>
			}<pos:position pos:line="261" pos:column="26"/></block></then></if>
			<while pos:line="262" pos:column="25">while <condition pos:line="262" pos:column="31">(<expr><operator pos:line="262" pos:column="32">*<pos:position pos:line="262" pos:column="33"/></operator><operator pos:line="262" pos:column="33">--<pos:position pos:line="262" pos:column="35"/></operator><name pos:line="262" pos:column="35">prev_slash<pos:position pos:line="262" pos:column="45"/></name> <operator pos:line="262" pos:column="46">!=<pos:position pos:line="262" pos:column="48"/></operator> <literal type="char" pos:line="262" pos:column="49">'/'<pos:position pos:line="262" pos:column="52"/></literal></expr>)<pos:position pos:line="262" pos:column="53"/></condition> <block pos:line="262" pos:column="54">{}<pos:position pos:line="262" pos:column="56"/></block></while>
			<if pos:line="263" pos:column="25">if <condition pos:line="263" pos:column="28">(<expr><name pos:line="263" pos:column="29">prev_slash<pos:position pos:line="263" pos:column="39"/></name> <operator pos:line="263" pos:column="40">==<pos:position pos:line="263" pos:column="42"/></operator> <name pos:line="263" pos:column="43">path_start<pos:position pos:line="263" pos:column="53"/></name></expr>)<pos:position pos:line="263" pos:column="54"/></condition><then pos:line="263" pos:column="54"> <block pos:line="263" pos:column="55">{
				<expr_stmt><expr><call><name pos:line="264" pos:column="33">strbuf_setlen<pos:position pos:line="264" pos:column="46"/></name><argument_list pos:line="264" pos:column="46">(<argument><expr><operator pos:line="264" pos:column="47">&amp;<pos:position pos:line="264" pos:column="52"/></operator><name pos:line="264" pos:column="48">norm<pos:position pos:line="264" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="264" pos:column="54">prev_slash<pos:position pos:line="264" pos:column="64"/></name> <operator pos:line="264" pos:column="65">-<pos:position pos:line="264" pos:column="66"/></operator> <name><name pos:line="264" pos:column="67">norm<pos:position pos:line="264" pos:column="71"/></name><operator pos:line="264" pos:column="71">.<pos:position pos:line="264" pos:column="72"/></operator><name pos:line="264" pos:column="72">buf<pos:position pos:line="264" pos:column="75"/></name></name> <operator pos:line="264" pos:column="76">+<pos:position pos:line="264" pos:column="77"/></operator> <literal type="number" pos:line="264" pos:column="78">1<pos:position pos:line="264" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="264" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="81"/></expr_stmt>
				<expr_stmt><expr><name pos:line="265" pos:column="33">skip_add_slash<pos:position pos:line="265" pos:column="47"/></name> <operator pos:line="265" pos:column="48">=<pos:position pos:line="265" pos:column="49"/></operator> <literal type="number" pos:line="265" pos:column="50">1<pos:position pos:line="265" pos:column="51"/></literal></expr>;<pos:position pos:line="265" pos:column="52"/></expr_stmt>
			}<pos:position pos:line="266" pos:column="26"/></block></then> <else pos:line="266" pos:column="27">else <block pos:line="266" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="267" pos:column="33">strbuf_setlen<pos:position pos:line="267" pos:column="46"/></name><argument_list pos:line="267" pos:column="46">(<argument><expr><operator pos:line="267" pos:column="47">&amp;<pos:position pos:line="267" pos:column="52"/></operator><name pos:line="267" pos:column="48">norm<pos:position pos:line="267" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="267" pos:column="54">prev_slash<pos:position pos:line="267" pos:column="64"/></name> <operator pos:line="267" pos:column="65">-<pos:position pos:line="267" pos:column="66"/></operator> <name><name pos:line="267" pos:column="67">norm<pos:position pos:line="267" pos:column="71"/></name><operator pos:line="267" pos:column="71">.<pos:position pos:line="267" pos:column="72"/></operator><name pos:line="267" pos:column="72">buf<pos:position pos:line="267" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="267" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="77"/></expr_stmt>
			}<pos:position pos:line="268" pos:column="26"/></block></else></if>
		}<pos:position pos:line="269" pos:column="18"/></block></then></if></elseif></if>
		<expr_stmt><expr><name pos:line="270" pos:column="17">url_len<pos:position pos:line="270" pos:column="24"/></name> <operator pos:line="270" pos:column="25">-=<pos:position pos:line="270" pos:column="27"/></operator> <name pos:line="270" pos:column="28">next_slash<pos:position pos:line="270" pos:column="38"/></name> <operator pos:line="270" pos:column="39">-<pos:position pos:line="270" pos:column="40"/></operator> <name pos:line="270" pos:column="41">url<pos:position pos:line="270" pos:column="44"/></name></expr>;<pos:position pos:line="270" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="271" pos:column="17">url<pos:position pos:line="271" pos:column="20"/></name> <operator pos:line="271" pos:column="21">=<pos:position pos:line="271" pos:column="22"/></operator> <name pos:line="271" pos:column="23">next_slash<pos:position pos:line="271" pos:column="33"/></name></expr>;<pos:position pos:line="271" pos:column="34"/></expr_stmt>
		<comment type="block" pos:line="272" pos:column="17">/* if the next char is not '/' done with the path */</comment>
		<if pos:line="273" pos:column="17">if <condition pos:line="273" pos:column="20">(<expr><operator pos:line="273" pos:column="21">*<pos:position pos:line="273" pos:column="22"/></operator><name pos:line="273" pos:column="22">url<pos:position pos:line="273" pos:column="25"/></name> <operator pos:line="273" pos:column="26">!=<pos:position pos:line="273" pos:column="28"/></operator> <literal type="char" pos:line="273" pos:column="29">'/'<pos:position pos:line="273" pos:column="32"/></literal></expr>)<pos:position pos:line="273" pos:column="33"/></condition><then pos:line="273" pos:column="33">
			<block type="pseudo"><break pos:line="274" pos:column="25">break;<pos:position pos:line="274" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="275" pos:column="17">url<pos:position pos:line="275" pos:column="20"/></name><operator pos:line="275" pos:column="20">++<pos:position pos:line="275" pos:column="22"/></operator></expr>;<pos:position pos:line="275" pos:column="23"/></expr_stmt>
		<expr_stmt><expr><name pos:line="276" pos:column="17">url_len<pos:position pos:line="276" pos:column="24"/></name><operator pos:line="276" pos:column="24">--<pos:position pos:line="276" pos:column="26"/></operator></expr>;<pos:position pos:line="276" pos:column="27"/></expr_stmt>
		<if pos:line="277" pos:column="17">if <condition pos:line="277" pos:column="20">(<expr><operator pos:line="277" pos:column="21">!<pos:position pos:line="277" pos:column="22"/></operator><name pos:line="277" pos:column="22">skip_add_slash<pos:position pos:line="277" pos:column="36"/></name></expr>)<pos:position pos:line="277" pos:column="37"/></condition><then pos:line="277" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="278" pos:column="25">strbuf_addch<pos:position pos:line="278" pos:column="37"/></name><argument_list pos:line="278" pos:column="37">(<argument><expr><operator pos:line="278" pos:column="38">&amp;<pos:position pos:line="278" pos:column="43"/></operator><name pos:line="278" pos:column="39">norm<pos:position pos:line="278" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="278" pos:column="45">'/'<pos:position pos:line="278" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="278" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="50"/></expr_stmt></block></then></if>
	}<pos:position pos:line="279" pos:column="10"/></block></for>
	<expr_stmt><expr><name pos:line="280" pos:column="9">path_len<pos:position pos:line="280" pos:column="17"/></name> <operator pos:line="280" pos:column="18">=<pos:position pos:line="280" pos:column="19"/></operator> <name><name pos:line="280" pos:column="20">norm<pos:position pos:line="280" pos:column="24"/></name><operator pos:line="280" pos:column="24">.<pos:position pos:line="280" pos:column="25"/></operator><name pos:line="280" pos:column="25">len<pos:position pos:line="280" pos:column="28"/></name></name> <operator pos:line="280" pos:column="29">-<pos:position pos:line="280" pos:column="30"/></operator> <name pos:line="280" pos:column="31">path_off<pos:position pos:line="280" pos:column="39"/></name></expr>;<pos:position pos:line="280" pos:column="40"/></expr_stmt>


	<comment type="block" pos:line="283" pos:column="9">/*
	 * Now simply copy the rest, if any, only normalizing %-escapes and
	 * being careful not to corrupt the URL by unescaping any delimiters.
	 */</comment>
	<if pos:line="287" pos:column="9">if <condition pos:line="287" pos:column="12">(<expr><operator pos:line="287" pos:column="13">*<pos:position pos:line="287" pos:column="14"/></operator><name pos:line="287" pos:column="14">url<pos:position pos:line="287" pos:column="17"/></name></expr>)<pos:position pos:line="287" pos:column="18"/></condition><then pos:line="287" pos:column="18"> <block pos:line="287" pos:column="19">{
		<if pos:line="288" pos:column="17">if <condition pos:line="288" pos:column="20">(<expr><operator pos:line="288" pos:column="21">!<pos:position pos:line="288" pos:column="22"/></operator><call><name pos:line="288" pos:column="22">append_normalized_escapes<pos:position pos:line="288" pos:column="47"/></name><argument_list pos:line="288" pos:column="47">(<argument><expr><operator pos:line="288" pos:column="48">&amp;<pos:position pos:line="288" pos:column="53"/></operator><name pos:line="288" pos:column="49">norm<pos:position pos:line="288" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="288" pos:column="55">url<pos:position pos:line="288" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="288" pos:column="60">url_len<pos:position pos:line="288" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="288" pos:column="69">""<pos:position pos:line="288" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="288" pos:column="73">URL_RESERVED<pos:position pos:line="288" pos:column="85"/></name></expr></argument>)<pos:position pos:line="288" pos:column="86"/></argument_list></call></expr>)<pos:position pos:line="288" pos:column="87"/></condition><then pos:line="288" pos:column="87"> <block pos:line="288" pos:column="88">{
			<if pos:line="289" pos:column="25">if <condition pos:line="289" pos:column="28">(<expr><name pos:line="289" pos:column="29">out_info<pos:position pos:line="289" pos:column="37"/></name></expr>)<pos:position pos:line="289" pos:column="38"/></condition><then pos:line="289" pos:column="38"> <block pos:line="289" pos:column="39">{
				<expr_stmt><expr><name><name pos:line="290" pos:column="33">out_info<pos:position pos:line="290" pos:column="41"/></name><operator pos:line="290" pos:column="41">-&gt;<pos:position pos:line="290" pos:column="46"/></operator><name pos:line="290" pos:column="43">url<pos:position pos:line="290" pos:column="46"/></name></name> <operator pos:line="290" pos:column="47">=<pos:position pos:line="290" pos:column="48"/></operator> <name pos:line="290" pos:column="49">NULL<pos:position pos:line="290" pos:column="53"/></name></expr>;<pos:position pos:line="290" pos:column="54"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="291" pos:column="33">out_info<pos:position pos:line="291" pos:column="41"/></name><operator pos:line="291" pos:column="41">-&gt;<pos:position pos:line="291" pos:column="46"/></operator><name pos:line="291" pos:column="43">err<pos:position pos:line="291" pos:column="46"/></name></name> <operator pos:line="291" pos:column="47">=<pos:position pos:line="291" pos:column="48"/></operator> <call><name pos:line="291" pos:column="49">_<pos:position pos:line="291" pos:column="50"/></name><argument_list pos:line="291" pos:column="50">(<argument><expr><literal type="string" pos:line="291" pos:column="51">"invalid %XX escape sequence"<pos:position pos:line="291" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="291" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="82"/></expr_stmt>
			}<pos:position pos:line="292" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="293" pos:column="25">strbuf_release<pos:position pos:line="293" pos:column="39"/></name><argument_list pos:line="293" pos:column="39">(<argument><expr><operator pos:line="293" pos:column="40">&amp;<pos:position pos:line="293" pos:column="45"/></operator><name pos:line="293" pos:column="41">norm<pos:position pos:line="293" pos:column="45"/></name></expr></argument>)<pos:position pos:line="293" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="47"/></expr_stmt>
			<return pos:line="294" pos:column="25">return <expr><name pos:line="294" pos:column="32">NULL<pos:position pos:line="294" pos:column="36"/></name></expr>;<pos:position pos:line="294" pos:column="37"/></return>
		}<pos:position pos:line="295" pos:column="18"/></block></then></if>
	}<pos:position pos:line="296" pos:column="10"/></block></then></if>


	<expr_stmt><expr><name pos:line="299" pos:column="9">result<pos:position pos:line="299" pos:column="15"/></name> <operator pos:line="299" pos:column="16">=<pos:position pos:line="299" pos:column="17"/></operator> <call><name pos:line="299" pos:column="18">strbuf_detach<pos:position pos:line="299" pos:column="31"/></name><argument_list pos:line="299" pos:column="31">(<argument><expr><operator pos:line="299" pos:column="32">&amp;<pos:position pos:line="299" pos:column="37"/></operator><name pos:line="299" pos:column="33">norm<pos:position pos:line="299" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="299" pos:column="39">&amp;<pos:position pos:line="299" pos:column="44"/></operator><name pos:line="299" pos:column="40">result_len<pos:position pos:line="299" pos:column="50"/></name></expr></argument>)<pos:position pos:line="299" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="52"/></expr_stmt>
	<if pos:line="300" pos:column="9">if <condition pos:line="300" pos:column="12">(<expr><name pos:line="300" pos:column="13">out_info<pos:position pos:line="300" pos:column="21"/></name></expr>)<pos:position pos:line="300" pos:column="22"/></condition><then pos:line="300" pos:column="22"> <block pos:line="300" pos:column="23">{
		<expr_stmt><expr><name><name pos:line="301" pos:column="17">out_info<pos:position pos:line="301" pos:column="25"/></name><operator pos:line="301" pos:column="25">-&gt;<pos:position pos:line="301" pos:column="30"/></operator><name pos:line="301" pos:column="27">url<pos:position pos:line="301" pos:column="30"/></name></name> <operator pos:line="301" pos:column="31">=<pos:position pos:line="301" pos:column="32"/></operator> <name pos:line="301" pos:column="33">result<pos:position pos:line="301" pos:column="39"/></name></expr>;<pos:position pos:line="301" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="302" pos:column="17">out_info<pos:position pos:line="302" pos:column="25"/></name><operator pos:line="302" pos:column="25">-&gt;<pos:position pos:line="302" pos:column="30"/></operator><name pos:line="302" pos:column="27">err<pos:position pos:line="302" pos:column="30"/></name></name> <operator pos:line="302" pos:column="31">=<pos:position pos:line="302" pos:column="32"/></operator> <name pos:line="302" pos:column="33">NULL<pos:position pos:line="302" pos:column="37"/></name></expr>;<pos:position pos:line="302" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="303" pos:column="17">out_info<pos:position pos:line="303" pos:column="25"/></name><operator pos:line="303" pos:column="25">-&gt;<pos:position pos:line="303" pos:column="30"/></operator><name pos:line="303" pos:column="27">url_len<pos:position pos:line="303" pos:column="34"/></name></name> <operator pos:line="303" pos:column="35">=<pos:position pos:line="303" pos:column="36"/></operator> <name pos:line="303" pos:column="37">result_len<pos:position pos:line="303" pos:column="47"/></name></expr>;<pos:position pos:line="303" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="304" pos:column="17">out_info<pos:position pos:line="304" pos:column="25"/></name><operator pos:line="304" pos:column="25">-&gt;<pos:position pos:line="304" pos:column="30"/></operator><name pos:line="304" pos:column="27">scheme_len<pos:position pos:line="304" pos:column="37"/></name></name> <operator pos:line="304" pos:column="38">=<pos:position pos:line="304" pos:column="39"/></operator> <name pos:line="304" pos:column="40">scheme_len<pos:position pos:line="304" pos:column="50"/></name></expr>;<pos:position pos:line="304" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="305" pos:column="17">out_info<pos:position pos:line="305" pos:column="25"/></name><operator pos:line="305" pos:column="25">-&gt;<pos:position pos:line="305" pos:column="30"/></operator><name pos:line="305" pos:column="27">user_off<pos:position pos:line="305" pos:column="35"/></name></name> <operator pos:line="305" pos:column="36">=<pos:position pos:line="305" pos:column="37"/></operator> <name pos:line="305" pos:column="38">user_off<pos:position pos:line="305" pos:column="46"/></name></expr>;<pos:position pos:line="305" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="306" pos:column="17">out_info<pos:position pos:line="306" pos:column="25"/></name><operator pos:line="306" pos:column="25">-&gt;<pos:position pos:line="306" pos:column="30"/></operator><name pos:line="306" pos:column="27">user_len<pos:position pos:line="306" pos:column="35"/></name></name> <operator pos:line="306" pos:column="36">=<pos:position pos:line="306" pos:column="37"/></operator> <name pos:line="306" pos:column="38">user_len<pos:position pos:line="306" pos:column="46"/></name></expr>;<pos:position pos:line="306" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="307" pos:column="17">out_info<pos:position pos:line="307" pos:column="25"/></name><operator pos:line="307" pos:column="25">-&gt;<pos:position pos:line="307" pos:column="30"/></operator><name pos:line="307" pos:column="27">passwd_off<pos:position pos:line="307" pos:column="37"/></name></name> <operator pos:line="307" pos:column="38">=<pos:position pos:line="307" pos:column="39"/></operator> <name pos:line="307" pos:column="40">passwd_off<pos:position pos:line="307" pos:column="50"/></name></expr>;<pos:position pos:line="307" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="308" pos:column="17">out_info<pos:position pos:line="308" pos:column="25"/></name><operator pos:line="308" pos:column="25">-&gt;<pos:position pos:line="308" pos:column="30"/></operator><name pos:line="308" pos:column="27">passwd_len<pos:position pos:line="308" pos:column="37"/></name></name> <operator pos:line="308" pos:column="38">=<pos:position pos:line="308" pos:column="39"/></operator> <name pos:line="308" pos:column="40">passwd_len<pos:position pos:line="308" pos:column="50"/></name></expr>;<pos:position pos:line="308" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="309" pos:column="17">out_info<pos:position pos:line="309" pos:column="25"/></name><operator pos:line="309" pos:column="25">-&gt;<pos:position pos:line="309" pos:column="30"/></operator><name pos:line="309" pos:column="27">host_off<pos:position pos:line="309" pos:column="35"/></name></name> <operator pos:line="309" pos:column="36">=<pos:position pos:line="309" pos:column="37"/></operator> <name pos:line="309" pos:column="38">host_off<pos:position pos:line="309" pos:column="46"/></name></expr>;<pos:position pos:line="309" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="310" pos:column="17">out_info<pos:position pos:line="310" pos:column="25"/></name><operator pos:line="310" pos:column="25">-&gt;<pos:position pos:line="310" pos:column="30"/></operator><name pos:line="310" pos:column="27">host_len<pos:position pos:line="310" pos:column="35"/></name></name> <operator pos:line="310" pos:column="36">=<pos:position pos:line="310" pos:column="37"/></operator> <name pos:line="310" pos:column="38">host_len<pos:position pos:line="310" pos:column="46"/></name></expr>;<pos:position pos:line="310" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="311" pos:column="17">out_info<pos:position pos:line="311" pos:column="25"/></name><operator pos:line="311" pos:column="25">-&gt;<pos:position pos:line="311" pos:column="30"/></operator><name pos:line="311" pos:column="27">port_len<pos:position pos:line="311" pos:column="35"/></name></name> <operator pos:line="311" pos:column="36">=<pos:position pos:line="311" pos:column="37"/></operator> <name pos:line="311" pos:column="38">port_len<pos:position pos:line="311" pos:column="46"/></name></expr>;<pos:position pos:line="311" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="312" pos:column="17">out_info<pos:position pos:line="312" pos:column="25"/></name><operator pos:line="312" pos:column="25">-&gt;<pos:position pos:line="312" pos:column="30"/></operator><name pos:line="312" pos:column="27">path_off<pos:position pos:line="312" pos:column="35"/></name></name> <operator pos:line="312" pos:column="36">=<pos:position pos:line="312" pos:column="37"/></operator> <name pos:line="312" pos:column="38">path_off<pos:position pos:line="312" pos:column="46"/></name></expr>;<pos:position pos:line="312" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="313" pos:column="17">out_info<pos:position pos:line="313" pos:column="25"/></name><operator pos:line="313" pos:column="25">-&gt;<pos:position pos:line="313" pos:column="30"/></operator><name pos:line="313" pos:column="27">path_len<pos:position pos:line="313" pos:column="35"/></name></name> <operator pos:line="313" pos:column="36">=<pos:position pos:line="313" pos:column="37"/></operator> <name pos:line="313" pos:column="38">path_len<pos:position pos:line="313" pos:column="46"/></name></expr>;<pos:position pos:line="313" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="314" pos:column="10"/></block></then></if>
	<return pos:line="315" pos:column="9">return <expr><name pos:line="315" pos:column="16">result<pos:position pos:line="315" pos:column="22"/></name></expr>;<pos:position pos:line="315" pos:column="23"/></return>
}<pos:position pos:line="316" pos:column="2"/></block></function></unit>

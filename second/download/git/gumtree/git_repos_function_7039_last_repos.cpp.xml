<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7039_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">fetch_number<pos:position pos:line="2" pos:column="13"/></name> <parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">re_string_t<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">input<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">re_token_t<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">token<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">reg_syntax_t<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">syntax<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">num<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><operator pos:line="4" pos:column="13">-<pos:position pos:line="4" pos:column="14"/></operator><literal type="number" pos:line="4" pos:column="14">1<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">c<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <while pos:line="6" pos:column="3">while <condition pos:line="6" pos:column="9">(<expr><literal type="number" pos:line="6" pos:column="10">1<pos:position pos:line="6" pos:column="11"/></literal></expr>)<pos:position pos:line="6" pos:column="12"/></condition>
    <block pos:line="7" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="8" pos:column="7">fetch_token<pos:position pos:line="8" pos:column="18"/></name> <argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">token<pos:position pos:line="8" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="27">input<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">syntax<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name pos:line="9" pos:column="7">c<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <name><name pos:line="9" pos:column="11">token<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">opr<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">.<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">c<pos:position pos:line="9" pos:column="23"/></name></name></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>
      <if pos:line="10" pos:column="7">if <condition pos:line="10" pos:column="10">(<expr><call><name pos:line="10" pos:column="11">BE<pos:position pos:line="10" pos:column="13"/></name> <argument_list pos:line="10" pos:column="14">(<argument><expr><name><name pos:line="10" pos:column="15">token<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">type<pos:position pos:line="10" pos:column="26"/></name></name> <operator pos:line="10" pos:column="27">==<pos:position pos:line="10" pos:column="29"/></operator> <name pos:line="10" pos:column="30">END_OF_RE<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="41">0<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44">
	<block type="pseudo"><return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">-<pos:position pos:line="11" pos:column="17"/></operator><literal type="number" pos:line="11" pos:column="17">2<pos:position pos:line="11" pos:column="18"/></literal></expr>;<pos:position pos:line="11" pos:column="19"/></return></block></then></if>
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><name><name pos:line="12" pos:column="11">token<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">type<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">==<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">OP_CLOSE_DUP_NUM<pos:position pos:line="12" pos:column="42"/></name> <operator pos:line="12" pos:column="43">||<pos:position pos:line="12" pos:column="45"/></operator> <name pos:line="12" pos:column="46">c<pos:position pos:line="12" pos:column="47"/></name> <operator pos:line="12" pos:column="48">==<pos:position pos:line="12" pos:column="50"/></operator> <literal type="char" pos:line="12" pos:column="51">','<pos:position pos:line="12" pos:column="54"/></literal></expr>)<pos:position pos:line="12" pos:column="55"/></condition><then pos:line="12" pos:column="55">
	<block type="pseudo"><break pos:line="13" pos:column="9">break;<pos:position pos:line="13" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="14" pos:column="7">num<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <operator pos:line="14" pos:column="13">(<pos:position pos:line="14" pos:column="14"/></operator><ternary><condition><expr><operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><name><name pos:line="14" pos:column="15">token<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">type<pos:position pos:line="14" pos:column="26"/></name></name> <operator pos:line="14" pos:column="27">!=<pos:position pos:line="14" pos:column="29"/></operator> <name pos:line="14" pos:column="30">CHARACTER<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">||<pos:position pos:line="14" pos:column="42"/></operator> <name pos:line="14" pos:column="43">c<pos:position pos:line="14" pos:column="44"/></name> <operator pos:line="14" pos:column="45">&lt;<pos:position pos:line="14" pos:column="49"/></operator> <literal type="char" pos:line="14" pos:column="47">'0'<pos:position pos:line="14" pos:column="50"/></literal> <operator pos:line="14" pos:column="51">||<pos:position pos:line="14" pos:column="53"/></operator> <literal type="char" pos:line="14" pos:column="54">'9'<pos:position pos:line="14" pos:column="57"/></literal> <operator pos:line="14" pos:column="58">&lt;<pos:position pos:line="14" pos:column="62"/></operator> <name pos:line="14" pos:column="60">c<pos:position pos:line="14" pos:column="61"/></name> <operator pos:line="14" pos:column="62">||<pos:position pos:line="14" pos:column="64"/></operator> <name pos:line="14" pos:column="65">num<pos:position pos:line="14" pos:column="68"/></name> <operator pos:line="14" pos:column="69">==<pos:position pos:line="14" pos:column="71"/></operator> <operator pos:line="14" pos:column="72">-<pos:position pos:line="14" pos:column="73"/></operator><literal type="number" pos:line="14" pos:column="73">2<pos:position pos:line="14" pos:column="74"/></literal><operator pos:line="14" pos:column="74">)<pos:position pos:line="14" pos:column="75"/></operator></expr>
	     ?<pos:position pos:line="15" pos:column="15"/></condition><then pos:line="15" pos:column="15"> <expr><operator pos:line="15" pos:column="16">-<pos:position pos:line="15" pos:column="17"/></operator><literal type="number" pos:line="15" pos:column="17">2<pos:position pos:line="15" pos:column="18"/></literal></expr> <pos:position pos:line="15" pos:column="19"/></then><else pos:line="15" pos:column="19">: <expr><operator pos:line="15" pos:column="21">(<pos:position pos:line="15" pos:column="22"/></operator><ternary><condition><expr><operator pos:line="15" pos:column="22">(<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">num<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">==<pos:position pos:line="15" pos:column="29"/></operator> <operator pos:line="15" pos:column="30">-<pos:position pos:line="15" pos:column="31"/></operator><literal type="number" pos:line="15" pos:column="31">1<pos:position pos:line="15" pos:column="32"/></literal><operator pos:line="15" pos:column="32">)<pos:position pos:line="15" pos:column="33"/></operator></expr> ?<pos:position pos:line="15" pos:column="35"/></condition><then pos:line="15" pos:column="35"> <expr><name pos:line="15" pos:column="36">c<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">-<pos:position pos:line="15" pos:column="39"/></operator> <literal type="char" pos:line="15" pos:column="40">'0'<pos:position pos:line="15" pos:column="43"/></literal></expr> <pos:position pos:line="15" pos:column="44"/></then><else pos:line="15" pos:column="44">: <expr><name pos:line="15" pos:column="46">num<pos:position pos:line="15" pos:column="49"/></name> <operator pos:line="15" pos:column="50">*<pos:position pos:line="15" pos:column="51"/></operator> <literal type="number" pos:line="15" pos:column="52">10<pos:position pos:line="15" pos:column="54"/></literal> <operator pos:line="15" pos:column="55">+<pos:position pos:line="15" pos:column="56"/></operator> <name pos:line="15" pos:column="57">c<pos:position pos:line="15" pos:column="58"/></name> <operator pos:line="15" pos:column="59">-<pos:position pos:line="15" pos:column="60"/></operator> <literal type="char" pos:line="15" pos:column="61">'0'<pos:position pos:line="15" pos:column="64"/></literal></expr></else></ternary><operator pos:line="15" pos:column="64">)<pos:position pos:line="15" pos:column="65"/></operator></expr></else></ternary><operator pos:line="15" pos:column="65">)<pos:position pos:line="15" pos:column="66"/></operator></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><name pos:line="16" pos:column="7">num<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <ternary><condition><expr><operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">num<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">&gt;<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="20">RE_DUP_MAX<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">)<pos:position pos:line="16" pos:column="31"/></operator></expr> ?<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33"> <expr><operator pos:line="16" pos:column="34">-<pos:position pos:line="16" pos:column="35"/></operator><literal type="number" pos:line="16" pos:column="35">2<pos:position pos:line="16" pos:column="36"/></literal></expr> <pos:position pos:line="16" pos:column="37"/></then><else pos:line="16" pos:column="37">: <expr><name pos:line="16" pos:column="39">num<pos:position pos:line="16" pos:column="42"/></name></expr></else></ternary></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></while>
  <return pos:line="18" pos:column="3">return <expr><name pos:line="18" pos:column="10">num<pos:position pos:line="18" pos:column="13"/></name></expr>;<pos:position pos:line="18" pos:column="14"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2669.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_ls_remote<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">argc<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">argv<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">prefix<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">dest<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name pos:line="4" pos:column="28">NULL<pos:position pos:line="4" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">flags<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">get_url<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><literal type="number" pos:line="6" pos:column="23">0<pos:position pos:line="6" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">quiet<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">status<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">uploadpack<pos:position pos:line="9" pos:column="31"/></name> <init pos:line="9" pos:column="32">= <expr><name pos:line="9" pos:column="34">NULL<pos:position pos:line="9" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier><modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">pattern<pos:position pos:line="10" pos:column="29"/></name> <init pos:line="10" pos:column="30">= <expr><name pos:line="10" pos:column="32">NULL<pos:position pos:line="10" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">remote<pos:position pos:line="12" pos:column="22"/></name></name> <modifier pos:line="12" pos:column="23">*<pos:position pos:line="12" pos:column="24"/></modifier></type><name pos:line="12" pos:column="24">remote<pos:position pos:line="12" pos:column="30"/></name></decl>;<pos:position pos:line="12" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">transport<pos:position pos:line="13" pos:column="25"/></name></name> <modifier pos:line="13" pos:column="26">*<pos:position pos:line="13" pos:column="27"/></modifier></type><name pos:line="13" pos:column="27">transport<pos:position pos:line="13" pos:column="36"/></name></decl>;<pos:position pos:line="13" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <name><name pos:line="14" pos:column="15">struct<pos:position pos:line="14" pos:column="21"/></name> <name pos:line="14" pos:column="22">ref<pos:position pos:line="14" pos:column="25"/></name></name> <modifier pos:line="14" pos:column="26">*<pos:position pos:line="14" pos:column="27"/></modifier></type><name pos:line="14" pos:column="27">ref<pos:position pos:line="14" pos:column="30"/></name></decl>;<pos:position pos:line="14" pos:column="31"/></decl_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">argc<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">==<pos:position pos:line="16" pos:column="20"/></operator> <literal type="number" pos:line="16" pos:column="21">2<pos:position pos:line="16" pos:column="22"/></literal> <operator pos:line="16" pos:column="23">&amp;&amp;<pos:position pos:line="16" pos:column="33"/></operator> <operator pos:line="16" pos:column="26">!<pos:position pos:line="16" pos:column="27"/></operator><call><name pos:line="16" pos:column="27">strcmp<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><literal type="string" pos:line="16" pos:column="34">"-h"<pos:position pos:line="16" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="40">argv<pos:position pos:line="16" pos:column="44"/></name><index pos:line="16" pos:column="44">[<expr><literal type="number" pos:line="16" pos:column="45">1<pos:position pos:line="16" pos:column="46"/></literal></expr>]<pos:position pos:line="16" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="49"/></condition><then pos:line="16" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">usage<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">ls_remote_usage<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt></block></then></if>

	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">1<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></init> <condition><expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="25">argc<pos:position pos:line="19" pos:column="29"/></name></expr>;<pos:position pos:line="19" pos:column="30"/></condition> <incr><expr><name pos:line="19" pos:column="31">i<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">++<pos:position pos:line="19" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="35"/></control> <block pos:line="19" pos:column="36">{
		<decl_stmt><decl><type><specifier pos:line="20" pos:column="17">const<pos:position pos:line="20" pos:column="22"/></specifier> <name pos:line="20" pos:column="23">char<pos:position pos:line="20" pos:column="27"/></name> <modifier pos:line="20" pos:column="28">*<pos:position pos:line="20" pos:column="29"/></modifier></type><name pos:line="20" pos:column="29">arg<pos:position pos:line="20" pos:column="32"/></name> <init pos:line="20" pos:column="33">= <expr><name><name pos:line="20" pos:column="35">argv<pos:position pos:line="20" pos:column="39"/></name><index pos:line="20" pos:column="39">[<expr><name pos:line="20" pos:column="40">i<pos:position pos:line="20" pos:column="41"/></name></expr>]<pos:position pos:line="20" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="20" pos:column="43"/></decl_stmt>

		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">*<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">arg<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">==<pos:position pos:line="22" pos:column="28"/></operator> <literal type="char" pos:line="22" pos:column="29">'-'<pos:position pos:line="22" pos:column="32"/></literal></expr>)<pos:position pos:line="22" pos:column="33"/></condition><then pos:line="22" pos:column="33"> <block pos:line="22" pos:column="34">{
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><call><name pos:line="23" pos:column="29">starts_with<pos:position pos:line="23" pos:column="40"/></name><argument_list pos:line="23" pos:column="40">(<argument><expr><name pos:line="23" pos:column="41">arg<pos:position pos:line="23" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="46">"--upload-pack="<pos:position pos:line="23" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="64"/></condition><then pos:line="23" pos:column="64"> <block pos:line="23" pos:column="65">{
				<expr_stmt><expr><name pos:line="24" pos:column="33">uploadpack<pos:position pos:line="24" pos:column="43"/></name> <operator pos:line="24" pos:column="44">=<pos:position pos:line="24" pos:column="45"/></operator> <name pos:line="24" pos:column="46">arg<pos:position pos:line="24" pos:column="49"/></name> <operator pos:line="24" pos:column="50">+<pos:position pos:line="24" pos:column="51"/></operator> <literal type="number" pos:line="24" pos:column="52">14<pos:position pos:line="24" pos:column="54"/></literal></expr>;<pos:position pos:line="24" pos:column="55"/></expr_stmt>
				<continue pos:line="25" pos:column="33">continue;<pos:position pos:line="25" pos:column="42"/></continue>
			}<pos:position pos:line="26" pos:column="26"/></block></then></if>
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><call><name pos:line="27" pos:column="29">starts_with<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name pos:line="27" pos:column="41">arg<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="46">"--exec="<pos:position pos:line="27" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="57"/></condition><then pos:line="27" pos:column="57"> <block pos:line="27" pos:column="58">{
				<expr_stmt><expr><name pos:line="28" pos:column="33">uploadpack<pos:position pos:line="28" pos:column="43"/></name> <operator pos:line="28" pos:column="44">=<pos:position pos:line="28" pos:column="45"/></operator> <name pos:line="28" pos:column="46">arg<pos:position pos:line="28" pos:column="49"/></name> <operator pos:line="28" pos:column="50">+<pos:position pos:line="28" pos:column="51"/></operator> <literal type="number" pos:line="28" pos:column="52">7<pos:position pos:line="28" pos:column="53"/></literal></expr>;<pos:position pos:line="28" pos:column="54"/></expr_stmt>
				<continue pos:line="29" pos:column="33">continue;<pos:position pos:line="29" pos:column="42"/></continue>
			}<pos:position pos:line="30" pos:column="26"/></block></then></if>
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><operator pos:line="31" pos:column="29">!<pos:position pos:line="31" pos:column="30"/></operator><call><name pos:line="31" pos:column="30">strcmp<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><literal type="string" pos:line="31" pos:column="37">"--tags"<pos:position pos:line="31" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="47">arg<pos:position pos:line="31" pos:column="50"/></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call> <operator pos:line="31" pos:column="52">||<pos:position pos:line="31" pos:column="54"/></operator> <operator pos:line="31" pos:column="55">!<pos:position pos:line="31" pos:column="56"/></operator><call><name pos:line="31" pos:column="56">strcmp<pos:position pos:line="31" pos:column="62"/></name><argument_list pos:line="31" pos:column="62">(<argument><expr><literal type="string" pos:line="31" pos:column="63">"-t"<pos:position pos:line="31" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="69">arg<pos:position pos:line="31" pos:column="72"/></name></expr></argument>)<pos:position pos:line="31" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="74"/></condition><then pos:line="31" pos:column="74"> <block pos:line="31" pos:column="75">{
				<expr_stmt><expr><name pos:line="32" pos:column="33">flags<pos:position pos:line="32" pos:column="38"/></name> <operator pos:line="32" pos:column="39">|=<pos:position pos:line="32" pos:column="41"/></operator> <name pos:line="32" pos:column="42">REF_TAGS<pos:position pos:line="32" pos:column="50"/></name></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt>
				<continue pos:line="33" pos:column="33">continue;<pos:position pos:line="33" pos:column="42"/></continue>
			}<pos:position pos:line="34" pos:column="26"/></block></then></if>
			<if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><operator pos:line="35" pos:column="29">!<pos:position pos:line="35" pos:column="30"/></operator><call><name pos:line="35" pos:column="30">strcmp<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><literal type="string" pos:line="35" pos:column="37">"--heads"<pos:position pos:line="35" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="48">arg<pos:position pos:line="35" pos:column="51"/></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call> <operator pos:line="35" pos:column="53">||<pos:position pos:line="35" pos:column="55"/></operator> <operator pos:line="35" pos:column="56">!<pos:position pos:line="35" pos:column="57"/></operator><call><name pos:line="35" pos:column="57">strcmp<pos:position pos:line="35" pos:column="63"/></name><argument_list pos:line="35" pos:column="63">(<argument><expr><literal type="string" pos:line="35" pos:column="64">"-h"<pos:position pos:line="35" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="70">arg<pos:position pos:line="35" pos:column="73"/></name></expr></argument>)<pos:position pos:line="35" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="75"/></condition><then pos:line="35" pos:column="75"> <block pos:line="35" pos:column="76">{
				<expr_stmt><expr><name pos:line="36" pos:column="33">flags<pos:position pos:line="36" pos:column="38"/></name> <operator pos:line="36" pos:column="39">|=<pos:position pos:line="36" pos:column="41"/></operator> <name pos:line="36" pos:column="42">REF_HEADS<pos:position pos:line="36" pos:column="51"/></name></expr>;<pos:position pos:line="36" pos:column="52"/></expr_stmt>
				<continue pos:line="37" pos:column="33">continue;<pos:position pos:line="37" pos:column="42"/></continue>
			}<pos:position pos:line="38" pos:column="26"/></block></then></if>
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><operator pos:line="39" pos:column="29">!<pos:position pos:line="39" pos:column="30"/></operator><call><name pos:line="39" pos:column="30">strcmp<pos:position pos:line="39" pos:column="36"/></name><argument_list pos:line="39" pos:column="36">(<argument><expr><literal type="string" pos:line="39" pos:column="37">"--refs"<pos:position pos:line="39" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="47">arg<pos:position pos:line="39" pos:column="50"/></name></expr></argument>)<pos:position pos:line="39" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="52"/></condition><then pos:line="39" pos:column="52"> <block pos:line="39" pos:column="53">{
				<expr_stmt><expr><name pos:line="40" pos:column="33">flags<pos:position pos:line="40" pos:column="38"/></name> <operator pos:line="40" pos:column="39">|=<pos:position pos:line="40" pos:column="41"/></operator> <name pos:line="40" pos:column="42">REF_NORMAL<pos:position pos:line="40" pos:column="52"/></name></expr>;<pos:position pos:line="40" pos:column="53"/></expr_stmt>
				<continue pos:line="41" pos:column="33">continue;<pos:position pos:line="41" pos:column="42"/></continue>
			}<pos:position pos:line="42" pos:column="26"/></block></then></if>
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><operator pos:line="43" pos:column="29">!<pos:position pos:line="43" pos:column="30"/></operator><call><name pos:line="43" pos:column="30">strcmp<pos:position pos:line="43" pos:column="36"/></name><argument_list pos:line="43" pos:column="36">(<argument><expr><literal type="string" pos:line="43" pos:column="37">"--quiet"<pos:position pos:line="43" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="48">arg<pos:position pos:line="43" pos:column="51"/></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call> <operator pos:line="43" pos:column="53">||<pos:position pos:line="43" pos:column="55"/></operator> <operator pos:line="43" pos:column="56">!<pos:position pos:line="43" pos:column="57"/></operator><call><name pos:line="43" pos:column="57">strcmp<pos:position pos:line="43" pos:column="63"/></name><argument_list pos:line="43" pos:column="63">(<argument><expr><literal type="string" pos:line="43" pos:column="64">"-q"<pos:position pos:line="43" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="70">arg<pos:position pos:line="43" pos:column="73"/></name></expr></argument>)<pos:position pos:line="43" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="75"/></condition><then pos:line="43" pos:column="75"> <block pos:line="43" pos:column="76">{
				<expr_stmt><expr><name pos:line="44" pos:column="33">quiet<pos:position pos:line="44" pos:column="38"/></name> <operator pos:line="44" pos:column="39">=<pos:position pos:line="44" pos:column="40"/></operator> <literal type="number" pos:line="44" pos:column="41">1<pos:position pos:line="44" pos:column="42"/></literal></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>
				<continue pos:line="45" pos:column="33">continue;<pos:position pos:line="45" pos:column="42"/></continue>
			}<pos:position pos:line="46" pos:column="26"/></block></then></if>
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><operator pos:line="47" pos:column="29">!<pos:position pos:line="47" pos:column="30"/></operator><call><name pos:line="47" pos:column="30">strcmp<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><literal type="string" pos:line="47" pos:column="37">"--get-url"<pos:position pos:line="47" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="50">arg<pos:position pos:line="47" pos:column="53"/></name></expr></argument>)<pos:position pos:line="47" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="55"/></condition><then pos:line="47" pos:column="55"> <block pos:line="47" pos:column="56">{
				<expr_stmt><expr><name pos:line="48" pos:column="33">get_url<pos:position pos:line="48" pos:column="40"/></name> <operator pos:line="48" pos:column="41">=<pos:position pos:line="48" pos:column="42"/></operator> <literal type="number" pos:line="48" pos:column="43">1<pos:position pos:line="48" pos:column="44"/></literal></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>
				<continue pos:line="49" pos:column="33">continue;<pos:position pos:line="49" pos:column="42"/></continue>
			}<pos:position pos:line="50" pos:column="26"/></block></then></if>
			<if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><operator pos:line="51" pos:column="29">!<pos:position pos:line="51" pos:column="30"/></operator><call><name pos:line="51" pos:column="30">strcmp<pos:position pos:line="51" pos:column="36"/></name><argument_list pos:line="51" pos:column="36">(<argument><expr><literal type="string" pos:line="51" pos:column="37">"--exit-code"<pos:position pos:line="51" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="52">arg<pos:position pos:line="51" pos:column="55"/></name></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="57"/></condition><then pos:line="51" pos:column="57"> <block pos:line="51" pos:column="58">{
				<comment type="block" pos:line="52" pos:column="33">/* return this code if no refs are reported */</comment>
				<expr_stmt><expr><name pos:line="53" pos:column="33">status<pos:position pos:line="53" pos:column="39"/></name> <operator pos:line="53" pos:column="40">=<pos:position pos:line="53" pos:column="41"/></operator> <literal type="number" pos:line="53" pos:column="42">2<pos:position pos:line="53" pos:column="43"/></literal></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt>
				<continue pos:line="54" pos:column="33">continue;<pos:position pos:line="54" pos:column="42"/></continue>
			}<pos:position pos:line="55" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="56" pos:column="25">usage<pos:position pos:line="56" pos:column="30"/></name><argument_list pos:line="56" pos:column="30">(<argument><expr><name pos:line="56" pos:column="31">ls_remote_usage<pos:position pos:line="56" pos:column="46"/></name></expr></argument>)<pos:position pos:line="56" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="57" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="58" pos:column="17">dest<pos:position pos:line="58" pos:column="21"/></name> <operator pos:line="58" pos:column="22">=<pos:position pos:line="58" pos:column="23"/></operator> <name pos:line="58" pos:column="24">arg<pos:position pos:line="58" pos:column="27"/></name></expr>;<pos:position pos:line="58" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="59" pos:column="17">i<pos:position pos:line="59" pos:column="18"/></name><operator pos:line="59" pos:column="18">++<pos:position pos:line="59" pos:column="20"/></operator></expr>;<pos:position pos:line="59" pos:column="21"/></expr_stmt>
		<break pos:line="60" pos:column="17">break;<pos:position pos:line="60" pos:column="23"/></break>
	}<pos:position pos:line="61" pos:column="10"/></block></for>

	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name><name pos:line="63" pos:column="13">argv<pos:position pos:line="63" pos:column="17"/></name><index pos:line="63" pos:column="17">[<expr><name pos:line="63" pos:column="18">i<pos:position pos:line="63" pos:column="19"/></name></expr>]<pos:position pos:line="63" pos:column="20"/></index></name></expr>)<pos:position pos:line="63" pos:column="21"/></condition><then pos:line="63" pos:column="21"> <block pos:line="63" pos:column="22">{
		<decl_stmt><decl><type><name pos:line="64" pos:column="17">int<pos:position pos:line="64" pos:column="20"/></name></type> <name pos:line="64" pos:column="21">j<pos:position pos:line="64" pos:column="22"/></name></decl>;<pos:position pos:line="64" pos:column="23"/></decl_stmt>
		<expr_stmt><expr><name pos:line="65" pos:column="17">pattern<pos:position pos:line="65" pos:column="24"/></name> <operator pos:line="65" pos:column="25">=<pos:position pos:line="65" pos:column="26"/></operator> <call><name pos:line="65" pos:column="27">xcalloc<pos:position pos:line="65" pos:column="34"/></name><argument_list pos:line="65" pos:column="34">(<argument><expr><name pos:line="65" pos:column="35">argc<pos:position pos:line="65" pos:column="39"/></name> <operator pos:line="65" pos:column="40">-<pos:position pos:line="65" pos:column="41"/></operator> <name pos:line="65" pos:column="42">i<pos:position pos:line="65" pos:column="43"/></name> <operator pos:line="65" pos:column="44">+<pos:position pos:line="65" pos:column="45"/></operator> <literal type="number" pos:line="65" pos:column="46">1<pos:position pos:line="65" pos:column="47"/></literal></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="49">sizeof<argument_list pos:line="65" pos:column="55">(<argument><expr><specifier pos:line="65" pos:column="56">const<pos:position pos:line="65" pos:column="61"/></specifier> <name pos:line="65" pos:column="62">char<pos:position pos:line="65" pos:column="66"/></name> <operator pos:line="65" pos:column="67">*<pos:position pos:line="65" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="65" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="71"/></expr_stmt>
		<for pos:line="66" pos:column="17">for <control pos:line="66" pos:column="21">(<init><expr><name pos:line="66" pos:column="22">j<pos:position pos:line="66" pos:column="23"/></name> <operator pos:line="66" pos:column="24">=<pos:position pos:line="66" pos:column="25"/></operator> <name pos:line="66" pos:column="26">i<pos:position pos:line="66" pos:column="27"/></name></expr>;<pos:position pos:line="66" pos:column="28"/></init> <condition><expr><name pos:line="66" pos:column="29">j<pos:position pos:line="66" pos:column="30"/></name> <operator pos:line="66" pos:column="31">&lt;<pos:position pos:line="66" pos:column="35"/></operator> <name pos:line="66" pos:column="33">argc<pos:position pos:line="66" pos:column="37"/></name></expr>;<pos:position pos:line="66" pos:column="38"/></condition> <incr><expr><name pos:line="66" pos:column="39">j<pos:position pos:line="66" pos:column="40"/></name><operator pos:line="66" pos:column="40">++<pos:position pos:line="66" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="66" pos:column="43"/></control>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="67" pos:column="25">pattern<pos:position pos:line="67" pos:column="32"/></name><index pos:line="67" pos:column="32">[<expr><name pos:line="67" pos:column="33">j<pos:position pos:line="67" pos:column="34"/></name> <operator pos:line="67" pos:column="35">-<pos:position pos:line="67" pos:column="36"/></operator> <name pos:line="67" pos:column="37">i<pos:position pos:line="67" pos:column="38"/></name></expr>]<pos:position pos:line="67" pos:column="39"/></index></name> <operator pos:line="67" pos:column="40">=<pos:position pos:line="67" pos:column="41"/></operator> <call><name pos:line="67" pos:column="42">xstrfmt<pos:position pos:line="67" pos:column="49"/></name><argument_list pos:line="67" pos:column="49">(<argument><expr><literal type="string" pos:line="67" pos:column="50">"*/%s"<pos:position pos:line="67" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="58">argv<pos:position pos:line="67" pos:column="62"/></name><index pos:line="67" pos:column="62">[<expr><name pos:line="67" pos:column="63">j<pos:position pos:line="67" pos:column="64"/></name></expr>]<pos:position pos:line="67" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="67" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="67"/></expr_stmt></block></for>
	}<pos:position pos:line="68" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="69" pos:column="9">remote<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">=<pos:position pos:line="69" pos:column="17"/></operator> <call><name pos:line="69" pos:column="18">remote_get<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><name pos:line="69" pos:column="29">dest<pos:position pos:line="69" pos:column="33"/></name></expr></argument>)<pos:position pos:line="69" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="35"/></expr_stmt>
	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><operator pos:line="70" pos:column="13">!<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="14">remote<pos:position pos:line="70" pos:column="20"/></name></expr>)<pos:position pos:line="70" pos:column="21"/></condition><then pos:line="70" pos:column="21"> <block pos:line="70" pos:column="22">{
		<if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><name pos:line="71" pos:column="21">dest<pos:position pos:line="71" pos:column="25"/></name></expr>)<pos:position pos:line="71" pos:column="26"/></condition><then pos:line="71" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="25">die<pos:position pos:line="72" pos:column="28"/></name><argument_list pos:line="72" pos:column="28">(<argument><expr><literal type="string" pos:line="72" pos:column="29">"bad repository '%s'"<pos:position pos:line="72" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="52">dest<pos:position pos:line="72" pos:column="56"/></name></expr></argument>)<pos:position pos:line="72" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="58"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="73" pos:column="17">die<pos:position pos:line="73" pos:column="20"/></name><argument_list pos:line="73" pos:column="20">(<argument><expr><literal type="string" pos:line="73" pos:column="21">"No remote configured to list refs from."<pos:position pos:line="73" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="64"/></expr_stmt>
	}<pos:position pos:line="74" pos:column="10"/></block></then></if>
	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><operator pos:line="75" pos:column="13">!<pos:position pos:line="75" pos:column="14"/></operator><name><name pos:line="75" pos:column="14">remote<pos:position pos:line="75" pos:column="20"/></name><operator pos:line="75" pos:column="20">-&gt;<pos:position pos:line="75" pos:column="25"/></operator><name pos:line="75" pos:column="22">url_nr<pos:position pos:line="75" pos:column="28"/></name></name></expr>)<pos:position pos:line="75" pos:column="29"/></condition><then pos:line="75" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="17">die<pos:position pos:line="76" pos:column="20"/></name><argument_list pos:line="76" pos:column="20">(<argument><expr><literal type="string" pos:line="76" pos:column="21">"remote %s has no configured URL"<pos:position pos:line="76" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="56">dest<pos:position pos:line="76" pos:column="60"/></name></expr></argument>)<pos:position pos:line="76" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="62"/></expr_stmt></block></then></if>

	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name pos:line="78" pos:column="13">get_url<pos:position pos:line="78" pos:column="20"/></name></expr>)<pos:position pos:line="78" pos:column="21"/></condition><then pos:line="78" pos:column="21"> <block pos:line="78" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="79" pos:column="17">printf<pos:position pos:line="79" pos:column="23"/></name><argument_list pos:line="79" pos:column="23">(<argument><expr><literal type="string" pos:line="79" pos:column="24">"%s\n"<pos:position pos:line="79" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="79" pos:column="32">*<pos:position pos:line="79" pos:column="33"/></operator><name><name pos:line="79" pos:column="33">remote<pos:position pos:line="79" pos:column="39"/></name><operator pos:line="79" pos:column="39">-&gt;<pos:position pos:line="79" pos:column="44"/></operator><name pos:line="79" pos:column="41">url<pos:position pos:line="79" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="46"/></expr_stmt>
		<return pos:line="80" pos:column="17">return <expr><literal type="number" pos:line="80" pos:column="24">0<pos:position pos:line="80" pos:column="25"/></literal></expr>;<pos:position pos:line="80" pos:column="26"/></return>
	}<pos:position pos:line="81" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="83" pos:column="9">transport<pos:position pos:line="83" pos:column="18"/></name> <operator pos:line="83" pos:column="19">=<pos:position pos:line="83" pos:column="20"/></operator> <call><name pos:line="83" pos:column="21">transport_get<pos:position pos:line="83" pos:column="34"/></name><argument_list pos:line="83" pos:column="34">(<argument><expr><name pos:line="83" pos:column="35">remote<pos:position pos:line="83" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="43">NULL<pos:position pos:line="83" pos:column="47"/></name></expr></argument>)<pos:position pos:line="83" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="49"/></expr_stmt>
	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name pos:line="84" pos:column="13">uploadpack<pos:position pos:line="84" pos:column="23"/></name> <operator pos:line="84" pos:column="24">!=<pos:position pos:line="84" pos:column="26"/></operator> <name pos:line="84" pos:column="27">NULL<pos:position pos:line="84" pos:column="31"/></name></expr>)<pos:position pos:line="84" pos:column="32"/></condition><then pos:line="84" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="17">transport_set_option<pos:position pos:line="85" pos:column="37"/></name><argument_list pos:line="85" pos:column="37">(<argument><expr><name pos:line="85" pos:column="38">transport<pos:position pos:line="85" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="49">TRANS_OPT_UPLOADPACK<pos:position pos:line="85" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="71">uploadpack<pos:position pos:line="85" pos:column="81"/></name></expr></argument>)<pos:position pos:line="85" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="83"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="87" pos:column="9">ref<pos:position pos:line="87" pos:column="12"/></name> <operator pos:line="87" pos:column="13">=<pos:position pos:line="87" pos:column="14"/></operator> <call><name pos:line="87" pos:column="15">transport_get_remote_refs<pos:position pos:line="87" pos:column="40"/></name><argument_list pos:line="87" pos:column="40">(<argument><expr><name pos:line="87" pos:column="41">transport<pos:position pos:line="87" pos:column="50"/></name></expr></argument>)<pos:position pos:line="87" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="52"/></expr_stmt>
	<if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><call><name pos:line="88" pos:column="13">transport_disconnect<pos:position pos:line="88" pos:column="33"/></name><argument_list pos:line="88" pos:column="33">(<argument><expr><name pos:line="88" pos:column="34">transport<pos:position pos:line="88" pos:column="43"/></name></expr></argument>)<pos:position pos:line="88" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="45"/></condition><then pos:line="88" pos:column="45">
		<block type="pseudo"><return pos:line="89" pos:column="17">return <expr><literal type="number" pos:line="89" pos:column="24">1<pos:position pos:line="89" pos:column="25"/></literal></expr>;<pos:position pos:line="89" pos:column="26"/></return></block></then></if>

	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><operator pos:line="91" pos:column="13">!<pos:position pos:line="91" pos:column="14"/></operator><name pos:line="91" pos:column="14">dest<pos:position pos:line="91" pos:column="18"/></name> <operator pos:line="91" pos:column="19">&amp;&amp;<pos:position pos:line="91" pos:column="29"/></operator> <operator pos:line="91" pos:column="22">!<pos:position pos:line="91" pos:column="23"/></operator><name pos:line="91" pos:column="23">quiet<pos:position pos:line="91" pos:column="28"/></name></expr>)<pos:position pos:line="91" pos:column="29"/></condition><then pos:line="91" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="17">fprintf<pos:position pos:line="92" pos:column="24"/></name><argument_list pos:line="92" pos:column="24">(<argument><expr><name pos:line="92" pos:column="25">stderr<pos:position pos:line="92" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="33">"From %s\n"<pos:position pos:line="92" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="92" pos:column="46">*<pos:position pos:line="92" pos:column="47"/></operator><name><name pos:line="92" pos:column="47">remote<pos:position pos:line="92" pos:column="53"/></name><operator pos:line="92" pos:column="53">-&gt;<pos:position pos:line="92" pos:column="58"/></operator><name pos:line="92" pos:column="55">url<pos:position pos:line="92" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="60"/></expr_stmt></block></then></if>
	<for pos:line="93" pos:column="9">for <control pos:line="93" pos:column="13">( <init pos:line="93" pos:column="15">;<pos:position pos:line="93" pos:column="16"/></init> <condition><expr><name pos:line="93" pos:column="17">ref<pos:position pos:line="93" pos:column="20"/></name></expr>;<pos:position pos:line="93" pos:column="21"/></condition> <incr><expr><name pos:line="93" pos:column="22">ref<pos:position pos:line="93" pos:column="25"/></name> <operator pos:line="93" pos:column="26">=<pos:position pos:line="93" pos:column="27"/></operator> <name><name pos:line="93" pos:column="28">ref<pos:position pos:line="93" pos:column="31"/></name><operator pos:line="93" pos:column="31">-&gt;<pos:position pos:line="93" pos:column="36"/></operator><name pos:line="93" pos:column="33">next<pos:position pos:line="93" pos:column="37"/></name></name></expr></incr>)<pos:position pos:line="93" pos:column="38"/></control> <block pos:line="93" pos:column="39">{
		<if pos:line="94" pos:column="17">if <condition pos:line="94" pos:column="20">(<expr><operator pos:line="94" pos:column="21">!<pos:position pos:line="94" pos:column="22"/></operator><call><name pos:line="94" pos:column="22">check_ref_type<pos:position pos:line="94" pos:column="36"/></name><argument_list pos:line="94" pos:column="36">(<argument><expr><name pos:line="94" pos:column="37">ref<pos:position pos:line="94" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="42">flags<pos:position pos:line="94" pos:column="47"/></name></expr></argument>)<pos:position pos:line="94" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="49"/></condition><then pos:line="94" pos:column="49">
			<block type="pseudo"><continue pos:line="95" pos:column="25">continue;<pos:position pos:line="95" pos:column="34"/></continue></block></then></if>
		<if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><operator pos:line="96" pos:column="21">!<pos:position pos:line="96" pos:column="22"/></operator><call><name pos:line="96" pos:column="22">tail_match<pos:position pos:line="96" pos:column="32"/></name><argument_list pos:line="96" pos:column="32">(<argument><expr><name pos:line="96" pos:column="33">pattern<pos:position pos:line="96" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="42">ref<pos:position pos:line="96" pos:column="45"/></name><operator pos:line="96" pos:column="45">-&gt;<pos:position pos:line="96" pos:column="50"/></operator><name pos:line="96" pos:column="47">name<pos:position pos:line="96" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="53"/></condition><then pos:line="96" pos:column="53">
			<block type="pseudo"><continue pos:line="97" pos:column="25">continue;<pos:position pos:line="97" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="98" pos:column="17">printf<pos:position pos:line="98" pos:column="23"/></name><argument_list pos:line="98" pos:column="23">(<argument><expr><literal type="string" pos:line="98" pos:column="24">"%s	%s\n"<pos:position pos:line="98" pos:column="33"/></literal></expr></argument>, <argument><expr><call><name pos:line="98" pos:column="40">oid_to_hex<pos:position pos:line="98" pos:column="50"/></name><argument_list pos:line="98" pos:column="50">(<argument><expr><operator pos:line="98" pos:column="51">&amp;<pos:position pos:line="98" pos:column="56"/></operator><name><name pos:line="98" pos:column="52">ref<pos:position pos:line="98" pos:column="55"/></name><operator pos:line="98" pos:column="55">-&gt;<pos:position pos:line="98" pos:column="60"/></operator><name pos:line="98" pos:column="57">old_oid<pos:position pos:line="98" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="67">ref<pos:position pos:line="98" pos:column="70"/></name><operator pos:line="98" pos:column="70">-&gt;<pos:position pos:line="98" pos:column="75"/></operator><name pos:line="98" pos:column="72">name<pos:position pos:line="98" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><name pos:line="99" pos:column="17">status<pos:position pos:line="99" pos:column="23"/></name> <operator pos:line="99" pos:column="24">=<pos:position pos:line="99" pos:column="25"/></operator> <literal type="number" pos:line="99" pos:column="26">0<pos:position pos:line="99" pos:column="27"/></literal></expr>;<pos:position pos:line="99" pos:column="28"/></expr_stmt> <comment type="block" pos:line="99" pos:column="29">/* we found something */</comment>
	}<pos:position pos:line="100" pos:column="10"/></block></for>
	<return pos:line="101" pos:column="9">return <expr><name pos:line="101" pos:column="16">status<pos:position pos:line="101" pos:column="22"/></name></expr>;<pos:position pos:line="101" pos:column="23"/></return>
}<pos:position pos:line="102" pos:column="2"/></block></function></unit>

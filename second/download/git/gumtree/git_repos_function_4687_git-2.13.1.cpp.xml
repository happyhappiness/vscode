<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4687_git-2.13.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">xdl_emit_hunk_hdr<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">long<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">s1<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">long<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">c1<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">long<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">s2<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">long<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">c2<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">func<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">long<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">funclen<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">xdemitcb_t<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">ecb<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list> <block pos:line="2" pos:column="72">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">nb<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><literal type="number" pos:line="3" pos:column="18">0<pos:position pos:line="3" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">mmbuffer_t<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">mb<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">buf<pos:position pos:line="5" pos:column="17"/></name><index pos:line="5" pos:column="17">[<expr><literal type="number" pos:line="5" pos:column="18">128<pos:position pos:line="5" pos:column="21"/></literal></expr>]<pos:position pos:line="5" pos:column="22"/></index></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">memcpy<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">buf<pos:position pos:line="7" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="21">"@@ -"<pos:position pos:line="7" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="29">4<pos:position pos:line="7" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">nb<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">+=<pos:position pos:line="8" pos:column="14"/></operator> <literal type="number" pos:line="8" pos:column="15">4<pos:position pos:line="8" pos:column="16"/></literal></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">nb<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">+=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">xdl_num_out<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">buf<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">+<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="33">nb<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="10" pos:column="37">c1<pos:position pos:line="10" pos:column="39"/></name></expr> ?<pos:position pos:line="10" pos:column="41"/></condition><then pos:line="10" pos:column="41"> <expr><name pos:line="10" pos:column="42">s1<pos:position pos:line="10" pos:column="44"/></name></expr></then><else pos:line="10" pos:column="44">: <expr><name pos:line="10" pos:column="46">s1<pos:position pos:line="10" pos:column="48"/></name> <operator pos:line="10" pos:column="49">-<pos:position pos:line="10" pos:column="50"/></operator> <literal type="number" pos:line="10" pos:column="51">1<pos:position pos:line="10" pos:column="52"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">c1<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">!=<pos:position pos:line="12" pos:column="18"/></operator> <literal type="number" pos:line="12" pos:column="19">1<pos:position pos:line="12" pos:column="20"/></literal></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21"> <block pos:line="12" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">memcpy<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">buf<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">+<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="30">nb<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="34">","<pos:position pos:line="13" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="39">1<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="14" pos:column="17">nb<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">+=<pos:position pos:line="14" pos:column="22"/></operator> <literal type="number" pos:line="14" pos:column="23">1<pos:position pos:line="14" pos:column="24"/></literal></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>

		<expr_stmt><expr><name pos:line="16" pos:column="17">nb<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">+=<pos:position pos:line="16" pos:column="22"/></operator> <call><name pos:line="16" pos:column="23">xdl_num_out<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">buf<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">+<pos:position pos:line="16" pos:column="40"/></operator> <name pos:line="16" pos:column="41">nb<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">c1<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">memcpy<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">buf<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">+<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="22">nb<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="26">" +"<pos:position pos:line="19" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="32">2<pos:position pos:line="19" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">nb<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">+=<pos:position pos:line="20" pos:column="14"/></operator> <literal type="number" pos:line="20" pos:column="15">2<pos:position pos:line="20" pos:column="16"/></literal></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>

	<expr_stmt><expr><name pos:line="22" pos:column="9">nb<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">+=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">xdl_num_out<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">buf<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">+<pos:position pos:line="22" pos:column="32"/></operator> <name pos:line="22" pos:column="33">nb<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="22" pos:column="37">c2<pos:position pos:line="22" pos:column="39"/></name></expr> ?<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41"> <expr><name pos:line="22" pos:column="42">s2<pos:position pos:line="22" pos:column="44"/></name></expr></then><else pos:line="22" pos:column="44">: <expr><name pos:line="22" pos:column="46">s2<pos:position pos:line="22" pos:column="48"/></name> <operator pos:line="22" pos:column="49">-<pos:position pos:line="22" pos:column="50"/></operator> <literal type="number" pos:line="22" pos:column="51">1<pos:position pos:line="22" pos:column="52"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">c2<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">!=<pos:position pos:line="24" pos:column="18"/></operator> <literal type="number" pos:line="24" pos:column="19">1<pos:position pos:line="24" pos:column="20"/></literal></expr>)<pos:position pos:line="24" pos:column="21"/></condition><then pos:line="24" pos:column="21"> <block pos:line="24" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">memcpy<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name pos:line="25" pos:column="24">buf<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">+<pos:position pos:line="25" pos:column="29"/></operator> <name pos:line="25" pos:column="30">nb<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="34">","<pos:position pos:line="25" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="39">1<pos:position pos:line="25" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">nb<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">+=<pos:position pos:line="26" pos:column="22"/></operator> <literal type="number" pos:line="26" pos:column="23">1<pos:position pos:line="26" pos:column="24"/></literal></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>

		<expr_stmt><expr><name pos:line="28" pos:column="17">nb<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">+=<pos:position pos:line="28" pos:column="22"/></operator> <call><name pos:line="28" pos:column="23">xdl_num_out<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">buf<pos:position pos:line="28" pos:column="38"/></name> <operator pos:line="28" pos:column="39">+<pos:position pos:line="28" pos:column="40"/></operator> <name pos:line="28" pos:column="41">nb<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="45">c2<pos:position pos:line="28" pos:column="47"/></name></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">memcpy<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><name pos:line="31" pos:column="16">buf<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">+<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">nb<pos:position pos:line="31" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="26">" @@"<pos:position pos:line="31" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="33">3<pos:position pos:line="31" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="32" pos:column="9">nb<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">+=<pos:position pos:line="32" pos:column="14"/></operator> <literal type="number" pos:line="32" pos:column="15">3<pos:position pos:line="32" pos:column="16"/></literal></expr>;<pos:position pos:line="32" pos:column="17"/></expr_stmt>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">func<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">&amp;&amp;<pos:position pos:line="33" pos:column="28"/></operator> <name pos:line="33" pos:column="21">funclen<pos:position pos:line="33" pos:column="28"/></name></expr>)<pos:position pos:line="33" pos:column="29"/></condition><then pos:line="33" pos:column="29"> <block pos:line="33" pos:column="30">{
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">buf<pos:position pos:line="34" pos:column="20"/></name><index pos:line="34" pos:column="20">[<expr><name pos:line="34" pos:column="21">nb<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">++<pos:position pos:line="34" pos:column="25"/></operator></expr>]<pos:position pos:line="34" pos:column="26"/></index></name> <operator pos:line="34" pos:column="27">=<pos:position pos:line="34" pos:column="28"/></operator> <literal type="char" pos:line="34" pos:column="29">' '<pos:position pos:line="34" pos:column="32"/></literal></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">funclen<pos:position pos:line="35" pos:column="28"/></name> <operator pos:line="35" pos:column="29">&gt;<pos:position pos:line="35" pos:column="33"/></operator> <sizeof pos:line="35" pos:column="31">sizeof<argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">buf<pos:position pos:line="35" pos:column="41"/></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></sizeof> <operator pos:line="35" pos:column="43">-<pos:position pos:line="35" pos:column="44"/></operator> <name pos:line="35" pos:column="45">nb<pos:position pos:line="35" pos:column="47"/></name> <operator pos:line="35" pos:column="48">-<pos:position pos:line="35" pos:column="49"/></operator> <literal type="number" pos:line="35" pos:column="50">1<pos:position pos:line="35" pos:column="51"/></literal></expr>)<pos:position pos:line="35" pos:column="52"/></condition><then pos:line="35" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="25">funclen<pos:position pos:line="36" pos:column="32"/></name> <operator pos:line="36" pos:column="33">=<pos:position pos:line="36" pos:column="34"/></operator> <sizeof pos:line="36" pos:column="35">sizeof<argument_list pos:line="36" pos:column="41">(<argument><expr><name pos:line="36" pos:column="42">buf<pos:position pos:line="36" pos:column="45"/></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></sizeof> <operator pos:line="36" pos:column="47">-<pos:position pos:line="36" pos:column="48"/></operator> <name pos:line="36" pos:column="49">nb<pos:position pos:line="36" pos:column="51"/></name> <operator pos:line="36" pos:column="52">-<pos:position pos:line="36" pos:column="53"/></operator> <literal type="number" pos:line="36" pos:column="54">1<pos:position pos:line="36" pos:column="55"/></literal></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">memcpy<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><name pos:line="37" pos:column="24">buf<pos:position pos:line="37" pos:column="27"/></name> <operator pos:line="37" pos:column="28">+<pos:position pos:line="37" pos:column="29"/></operator> <name pos:line="37" pos:column="30">nb<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">func<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="40">funclen<pos:position pos:line="37" pos:column="47"/></name></expr></argument>)<pos:position pos:line="37" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="38" pos:column="17">nb<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">+=<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">funclen<pos:position pos:line="38" pos:column="30"/></name></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="40" pos:column="9">buf<pos:position pos:line="40" pos:column="12"/></name><index pos:line="40" pos:column="12">[<expr><name pos:line="40" pos:column="13">nb<pos:position pos:line="40" pos:column="15"/></name><operator pos:line="40" pos:column="15">++<pos:position pos:line="40" pos:column="17"/></operator></expr>]<pos:position pos:line="40" pos:column="18"/></index></name> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <literal type="char" pos:line="40" pos:column="21">'\n'<pos:position pos:line="40" pos:column="25"/></literal></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="42" pos:column="9">mb<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">.<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="12">ptr<pos:position pos:line="42" pos:column="15"/></name></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <name pos:line="42" pos:column="18">buf<pos:position pos:line="42" pos:column="21"/></name></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="43" pos:column="9">mb<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">.<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="12">size<pos:position pos:line="43" pos:column="16"/></name></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <name pos:line="43" pos:column="19">nb<pos:position pos:line="43" pos:column="21"/></name></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><call><name><name pos:line="44" pos:column="13">ecb<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">outf<pos:position pos:line="44" pos:column="22"/></name></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name><name pos:line="44" pos:column="23">ecb<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">-&gt;<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="28">priv<pos:position pos:line="44" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="34">&amp;<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="35">mb<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="39">1<pos:position pos:line="44" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="41"/></argument_list></call> <operator pos:line="44" pos:column="42">&lt;<pos:position pos:line="44" pos:column="46"/></operator> <literal type="number" pos:line="44" pos:column="44">0<pos:position pos:line="44" pos:column="45"/></literal></expr>)<pos:position pos:line="44" pos:column="46"/></condition><then pos:line="44" pos:column="46">
		<block type="pseudo"><return pos:line="45" pos:column="17">return <expr><operator pos:line="45" pos:column="24">-<pos:position pos:line="45" pos:column="25"/></operator><literal type="number" pos:line="45" pos:column="25">1<pos:position pos:line="45" pos:column="26"/></literal></expr>;<pos:position pos:line="45" pos:column="27"/></return></block></then></if>

	<return pos:line="47" pos:column="9">return <expr><literal type="number" pos:line="47" pos:column="16">0<pos:position pos:line="47" pos:column="17"/></literal></expr>;<pos:position pos:line="47" pos:column="18"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

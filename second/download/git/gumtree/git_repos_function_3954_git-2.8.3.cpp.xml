<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3954_git-2.8.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">quote_crnl<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">path<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name><name pos:line="3" pos:column="16">struct<pos:position pos:line="3" pos:column="22"/></name> <name pos:line="3" pos:column="23">strbuf<pos:position pos:line="3" pos:column="29"/></name></name></type> <name pos:line="3" pos:column="30">new_path<pos:position pos:line="3" pos:column="38"/></name> <init pos:line="3" pos:column="39">= <expr><name pos:line="3" pos:column="41">STRBUF_INIT<pos:position pos:line="3" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">path<pos:position pos:line="5" pos:column="18"/></name></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr>;<pos:position pos:line="6" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">strbuf_reset<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><operator pos:line="8" pos:column="22">&amp;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="23">new_path<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>

	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><operator pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">path<pos:position pos:line="10" pos:column="21"/></name></expr>)<pos:position pos:line="10" pos:column="22"/></condition> <block pos:line="10" pos:column="23">{
		<switch pos:line="11" pos:column="17">switch <condition pos:line="11" pos:column="24">(<expr><operator pos:line="11" pos:column="25">*<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">path<pos:position pos:line="11" pos:column="30"/></name></expr>)<pos:position pos:line="11" pos:column="31"/></condition> <block pos:line="11" pos:column="32">{
		<case pos:line="12" pos:column="17">case <expr><literal type="char" pos:line="12" pos:column="22">'\\'<pos:position pos:line="12" pos:column="26"/></literal></expr>:<pos:position pos:line="12" pos:column="27"/></case> <expr_stmt><expr><call><name pos:line="12" pos:column="28">strbuf_addstr<pos:position pos:line="12" pos:column="41"/></name><argument_list pos:line="12" pos:column="41">(<argument><expr><operator pos:line="12" pos:column="42">&amp;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="43">new_path<pos:position pos:line="12" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="53">"\\\\"<pos:position pos:line="12" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="61"/></expr_stmt> <break pos:line="12" pos:column="62">break;<pos:position pos:line="12" pos:column="68"/></break>
		<case pos:line="13" pos:column="17">case <expr><literal type="char" pos:line="13" pos:column="22">'\n'<pos:position pos:line="13" pos:column="26"/></literal></expr>:<pos:position pos:line="13" pos:column="27"/></case> <expr_stmt><expr><call><name pos:line="13" pos:column="28">strbuf_addstr<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><operator pos:line="13" pos:column="42">&amp;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="43">new_path<pos:position pos:line="13" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="53">"\\n"<pos:position pos:line="13" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt> <break pos:line="13" pos:column="61">break;<pos:position pos:line="13" pos:column="67"/></break>
		<case pos:line="14" pos:column="17">case <expr><literal type="char" pos:line="14" pos:column="22">'\r'<pos:position pos:line="14" pos:column="26"/></literal></expr>:<pos:position pos:line="14" pos:column="27"/></case> <expr_stmt><expr><call><name pos:line="14" pos:column="28">strbuf_addstr<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">(<argument><expr><operator pos:line="14" pos:column="42">&amp;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="43">new_path<pos:position pos:line="14" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="53">"\\r"<pos:position pos:line="14" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt> <break pos:line="14" pos:column="61">break;<pos:position pos:line="14" pos:column="67"/></break>
		<default pos:line="15" pos:column="17">default:<pos:position pos:line="15" pos:column="25"/></default>
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">strbuf_addch<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><operator pos:line="16" pos:column="38">&amp;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="39">new_path<pos:position pos:line="16" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="49">*<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="50">path<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></switch>
		<expr_stmt><expr><name pos:line="18" pos:column="17">path<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">++<pos:position pos:line="18" pos:column="23"/></operator></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></while>
	<return pos:line="20" pos:column="9">return <expr><name><name pos:line="20" pos:column="16">new_path<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">.<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">buf<pos:position pos:line="20" pos:column="28"/></name></name></expr>;<pos:position pos:line="20" pos:column="29"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

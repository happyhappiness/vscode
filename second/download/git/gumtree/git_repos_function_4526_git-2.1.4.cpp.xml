<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4526_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">receive_pack_config<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">var<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">value<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">void<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">cb<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">status<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><call><name pos:line="3" pos:column="22">parse_hide_refs_config<pos:position pos:line="3" pos:column="44"/></name><argument_list pos:line="3" pos:column="44">(<argument><expr><name pos:line="3" pos:column="45">var<pos:position pos:line="3" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="50">value<pos:position pos:line="3" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="57">"receive"<pos:position pos:line="3" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="68"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">status<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><name pos:line="6" pos:column="24">status<pos:position pos:line="6" pos:column="30"/></name></expr>;<pos:position pos:line="6" pos:column="31"/></return></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">strcmp<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">var<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="25">"receive.denydeletes"<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call> <operator pos:line="8" pos:column="48">==<pos:position pos:line="8" pos:column="50"/></operator> <literal type="number" pos:line="8" pos:column="51">0<pos:position pos:line="8" pos:column="52"/></literal></expr>)<pos:position pos:line="8" pos:column="53"/></condition><then pos:line="8" pos:column="53"> <block pos:line="8" pos:column="54">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">deny_deletes<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">=<pos:position pos:line="9" pos:column="31"/></operator> <call><name pos:line="9" pos:column="32">git_config_bool<pos:position pos:line="9" pos:column="47"/></name><argument_list pos:line="9" pos:column="47">(<argument><expr><name pos:line="9" pos:column="48">var<pos:position pos:line="9" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="53">value<pos:position pos:line="9" pos:column="58"/></name></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt>
		<return pos:line="10" pos:column="17">return <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">strcmp<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">var<pos:position pos:line="13" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="25">"receive.denynonfastforwards"<pos:position pos:line="13" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call> <operator pos:line="13" pos:column="56">==<pos:position pos:line="13" pos:column="58"/></operator> <literal type="number" pos:line="13" pos:column="59">0<pos:position pos:line="13" pos:column="60"/></literal></expr>)<pos:position pos:line="13" pos:column="61"/></condition><then pos:line="13" pos:column="61"> <block pos:line="13" pos:column="62">{
		<expr_stmt><expr><name pos:line="14" pos:column="17">deny_non_fast_forwards<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">=<pos:position pos:line="14" pos:column="41"/></operator> <call><name pos:line="14" pos:column="42">git_config_bool<pos:position pos:line="14" pos:column="57"/></name><argument_list pos:line="14" pos:column="57">(<argument><expr><name pos:line="14" pos:column="58">var<pos:position pos:line="14" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="63">value<pos:position pos:line="14" pos:column="68"/></name></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="70"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">strcmp<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">var<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="25">"receive.unpacklimit"<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call> <operator pos:line="18" pos:column="48">==<pos:position pos:line="18" pos:column="50"/></operator> <literal type="number" pos:line="18" pos:column="51">0<pos:position pos:line="18" pos:column="52"/></literal></expr>)<pos:position pos:line="18" pos:column="53"/></condition><then pos:line="18" pos:column="53"> <block pos:line="18" pos:column="54">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">receive_unpack_limit<pos:position pos:line="19" pos:column="37"/></name> <operator pos:line="19" pos:column="38">=<pos:position pos:line="19" pos:column="39"/></operator> <call><name pos:line="19" pos:column="40">git_config_int<pos:position pos:line="19" pos:column="54"/></name><argument_list pos:line="19" pos:column="54">(<argument><expr><name pos:line="19" pos:column="55">var<pos:position pos:line="19" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="60">value<pos:position pos:line="19" pos:column="65"/></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="67"/></expr_stmt>
		<return pos:line="20" pos:column="17">return <expr><literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">strcmp<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">var<pos:position pos:line="23" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="25">"transfer.unpacklimit"<pos:position pos:line="23" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call> <operator pos:line="23" pos:column="49">==<pos:position pos:line="23" pos:column="51"/></operator> <literal type="number" pos:line="23" pos:column="52">0<pos:position pos:line="23" pos:column="53"/></literal></expr>)<pos:position pos:line="23" pos:column="54"/></condition><then pos:line="23" pos:column="54"> <block pos:line="23" pos:column="55">{
		<expr_stmt><expr><name pos:line="24" pos:column="17">transfer_unpack_limit<pos:position pos:line="24" pos:column="38"/></name> <operator pos:line="24" pos:column="39">=<pos:position pos:line="24" pos:column="40"/></operator> <call><name pos:line="24" pos:column="41">git_config_int<pos:position pos:line="24" pos:column="55"/></name><argument_list pos:line="24" pos:column="55">(<argument><expr><name pos:line="24" pos:column="56">var<pos:position pos:line="24" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="61">value<pos:position pos:line="24" pos:column="66"/></name></expr></argument>)<pos:position pos:line="24" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="68"/></expr_stmt>
		<return pos:line="25" pos:column="17">return <expr><literal type="number" pos:line="25" pos:column="24">0<pos:position pos:line="25" pos:column="25"/></literal></expr>;<pos:position pos:line="25" pos:column="26"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name pos:line="28" pos:column="13">strcmp<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">var<pos:position pos:line="28" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="25">"receive.fsckobjects"<pos:position pos:line="28" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call> <operator pos:line="28" pos:column="48">==<pos:position pos:line="28" pos:column="50"/></operator> <literal type="number" pos:line="28" pos:column="51">0<pos:position pos:line="28" pos:column="52"/></literal></expr>)<pos:position pos:line="28" pos:column="53"/></condition><then pos:line="28" pos:column="53"> <block pos:line="28" pos:column="54">{
		<expr_stmt><expr><name pos:line="29" pos:column="17">receive_fsck_objects<pos:position pos:line="29" pos:column="37"/></name> <operator pos:line="29" pos:column="38">=<pos:position pos:line="29" pos:column="39"/></operator> <call><name pos:line="29" pos:column="40">git_config_bool<pos:position pos:line="29" pos:column="55"/></name><argument_list pos:line="29" pos:column="55">(<argument><expr><name pos:line="29" pos:column="56">var<pos:position pos:line="29" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="61">value<pos:position pos:line="29" pos:column="66"/></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="68"/></expr_stmt>
		<return pos:line="30" pos:column="17">return <expr><literal type="number" pos:line="30" pos:column="24">0<pos:position pos:line="30" pos:column="25"/></literal></expr>;<pos:position pos:line="30" pos:column="26"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><call><name pos:line="33" pos:column="13">strcmp<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><name pos:line="33" pos:column="20">var<pos:position pos:line="33" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="25">"transfer.fsckobjects"<pos:position pos:line="33" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call> <operator pos:line="33" pos:column="49">==<pos:position pos:line="33" pos:column="51"/></operator> <literal type="number" pos:line="33" pos:column="52">0<pos:position pos:line="33" pos:column="53"/></literal></expr>)<pos:position pos:line="33" pos:column="54"/></condition><then pos:line="33" pos:column="54"> <block pos:line="33" pos:column="55">{
		<expr_stmt><expr><name pos:line="34" pos:column="17">transfer_fsck_objects<pos:position pos:line="34" pos:column="38"/></name> <operator pos:line="34" pos:column="39">=<pos:position pos:line="34" pos:column="40"/></operator> <call><name pos:line="34" pos:column="41">git_config_bool<pos:position pos:line="34" pos:column="56"/></name><argument_list pos:line="34" pos:column="56">(<argument><expr><name pos:line="34" pos:column="57">var<pos:position pos:line="34" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="62">value<pos:position pos:line="34" pos:column="67"/></name></expr></argument>)<pos:position pos:line="34" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="69"/></expr_stmt>
		<return pos:line="35" pos:column="17">return <expr><literal type="number" pos:line="35" pos:column="24">0<pos:position pos:line="35" pos:column="25"/></literal></expr>;<pos:position pos:line="35" pos:column="26"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><call><name pos:line="38" pos:column="14">strcmp<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><name pos:line="38" pos:column="21">var<pos:position pos:line="38" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="26">"receive.denycurrentbranch"<pos:position pos:line="38" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="55"/></condition><then pos:line="38" pos:column="55"> <block pos:line="38" pos:column="56">{
		<expr_stmt><expr><name pos:line="39" pos:column="17">deny_current_branch<pos:position pos:line="39" pos:column="36"/></name> <operator pos:line="39" pos:column="37">=<pos:position pos:line="39" pos:column="38"/></operator> <call><name pos:line="39" pos:column="39">parse_deny_action<pos:position pos:line="39" pos:column="56"/></name><argument_list pos:line="39" pos:column="56">(<argument><expr><name pos:line="39" pos:column="57">var<pos:position pos:line="39" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="62">value<pos:position pos:line="39" pos:column="67"/></name></expr></argument>)<pos:position pos:line="39" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="69"/></expr_stmt>
		<return pos:line="40" pos:column="17">return <expr><literal type="number" pos:line="40" pos:column="24">0<pos:position pos:line="40" pos:column="25"/></literal></expr>;<pos:position pos:line="40" pos:column="26"/></return>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name pos:line="43" pos:column="13">strcmp<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><name pos:line="43" pos:column="20">var<pos:position pos:line="43" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="25">"receive.denydeletecurrent"<pos:position pos:line="43" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call> <operator pos:line="43" pos:column="54">==<pos:position pos:line="43" pos:column="56"/></operator> <literal type="number" pos:line="43" pos:column="57">0<pos:position pos:line="43" pos:column="58"/></literal></expr>)<pos:position pos:line="43" pos:column="59"/></condition><then pos:line="43" pos:column="59"> <block pos:line="43" pos:column="60">{
		<expr_stmt><expr><name pos:line="44" pos:column="17">deny_delete_current<pos:position pos:line="44" pos:column="36"/></name> <operator pos:line="44" pos:column="37">=<pos:position pos:line="44" pos:column="38"/></operator> <call><name pos:line="44" pos:column="39">parse_deny_action<pos:position pos:line="44" pos:column="56"/></name><argument_list pos:line="44" pos:column="56">(<argument><expr><name pos:line="44" pos:column="57">var<pos:position pos:line="44" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="62">value<pos:position pos:line="44" pos:column="67"/></name></expr></argument>)<pos:position pos:line="44" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="69"/></expr_stmt>
		<return pos:line="45" pos:column="17">return <expr><literal type="number" pos:line="45" pos:column="24">0<pos:position pos:line="45" pos:column="25"/></literal></expr>;<pos:position pos:line="45" pos:column="26"/></return>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><call><name pos:line="48" pos:column="13">strcmp<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><name pos:line="48" pos:column="20">var<pos:position pos:line="48" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="25">"repack.usedeltabaseoffset"<pos:position pos:line="48" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call> <operator pos:line="48" pos:column="54">==<pos:position pos:line="48" pos:column="56"/></operator> <literal type="number" pos:line="48" pos:column="57">0<pos:position pos:line="48" pos:column="58"/></literal></expr>)<pos:position pos:line="48" pos:column="59"/></condition><then pos:line="48" pos:column="59"> <block pos:line="48" pos:column="60">{
		<expr_stmt><expr><name pos:line="49" pos:column="17">prefer_ofs_delta<pos:position pos:line="49" pos:column="33"/></name> <operator pos:line="49" pos:column="34">=<pos:position pos:line="49" pos:column="35"/></operator> <call><name pos:line="49" pos:column="36">git_config_bool<pos:position pos:line="49" pos:column="51"/></name><argument_list pos:line="49" pos:column="51">(<argument><expr><name pos:line="49" pos:column="52">var<pos:position pos:line="49" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="57">value<pos:position pos:line="49" pos:column="62"/></name></expr></argument>)<pos:position pos:line="49" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="64"/></expr_stmt>
		<return pos:line="50" pos:column="17">return <expr><literal type="number" pos:line="50" pos:column="24">0<pos:position pos:line="50" pos:column="25"/></literal></expr>;<pos:position pos:line="50" pos:column="26"/></return>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>

	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><call><name pos:line="53" pos:column="13">strcmp<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><name pos:line="53" pos:column="20">var<pos:position pos:line="53" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="25">"receive.updateserverinfo"<pos:position pos:line="53" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="52"/></argument_list></call> <operator pos:line="53" pos:column="53">==<pos:position pos:line="53" pos:column="55"/></operator> <literal type="number" pos:line="53" pos:column="56">0<pos:position pos:line="53" pos:column="57"/></literal></expr>)<pos:position pos:line="53" pos:column="58"/></condition><then pos:line="53" pos:column="58"> <block pos:line="53" pos:column="59">{
		<expr_stmt><expr><name pos:line="54" pos:column="17">auto_update_server_info<pos:position pos:line="54" pos:column="40"/></name> <operator pos:line="54" pos:column="41">=<pos:position pos:line="54" pos:column="42"/></operator> <call><name pos:line="54" pos:column="43">git_config_bool<pos:position pos:line="54" pos:column="58"/></name><argument_list pos:line="54" pos:column="58">(<argument><expr><name pos:line="54" pos:column="59">var<pos:position pos:line="54" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="64">value<pos:position pos:line="54" pos:column="69"/></name></expr></argument>)<pos:position pos:line="54" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="71"/></expr_stmt>
		<return pos:line="55" pos:column="17">return <expr><literal type="number" pos:line="55" pos:column="24">0<pos:position pos:line="55" pos:column="25"/></literal></expr>;<pos:position pos:line="55" pos:column="26"/></return>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>

	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><call><name pos:line="58" pos:column="13">strcmp<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><name pos:line="58" pos:column="20">var<pos:position pos:line="58" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="25">"receive.autogc"<pos:position pos:line="58" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="42"/></argument_list></call> <operator pos:line="58" pos:column="43">==<pos:position pos:line="58" pos:column="45"/></operator> <literal type="number" pos:line="58" pos:column="46">0<pos:position pos:line="58" pos:column="47"/></literal></expr>)<pos:position pos:line="58" pos:column="48"/></condition><then pos:line="58" pos:column="48"> <block pos:line="58" pos:column="49">{
		<expr_stmt><expr><name pos:line="59" pos:column="17">auto_gc<pos:position pos:line="59" pos:column="24"/></name> <operator pos:line="59" pos:column="25">=<pos:position pos:line="59" pos:column="26"/></operator> <call><name pos:line="59" pos:column="27">git_config_bool<pos:position pos:line="59" pos:column="42"/></name><argument_list pos:line="59" pos:column="42">(<argument><expr><name pos:line="59" pos:column="43">var<pos:position pos:line="59" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="48">value<pos:position pos:line="59" pos:column="53"/></name></expr></argument>)<pos:position pos:line="59" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="55"/></expr_stmt>
		<return pos:line="60" pos:column="17">return <expr><literal type="number" pos:line="60" pos:column="24">0<pos:position pos:line="60" pos:column="25"/></literal></expr>;<pos:position pos:line="60" pos:column="26"/></return>
	}<pos:position pos:line="61" pos:column="10"/></block></then></if>

	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><call><name pos:line="63" pos:column="13">strcmp<pos:position pos:line="63" pos:column="19"/></name><argument_list pos:line="63" pos:column="19">(<argument><expr><name pos:line="63" pos:column="20">var<pos:position pos:line="63" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="25">"receive.shallowupdate"<pos:position pos:line="63" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="49"/></argument_list></call> <operator pos:line="63" pos:column="50">==<pos:position pos:line="63" pos:column="52"/></operator> <literal type="number" pos:line="63" pos:column="53">0<pos:position pos:line="63" pos:column="54"/></literal></expr>)<pos:position pos:line="63" pos:column="55"/></condition><then pos:line="63" pos:column="55"> <block pos:line="63" pos:column="56">{
		<expr_stmt><expr><name pos:line="64" pos:column="17">shallow_update<pos:position pos:line="64" pos:column="31"/></name> <operator pos:line="64" pos:column="32">=<pos:position pos:line="64" pos:column="33"/></operator> <call><name pos:line="64" pos:column="34">git_config_bool<pos:position pos:line="64" pos:column="49"/></name><argument_list pos:line="64" pos:column="49">(<argument><expr><name pos:line="64" pos:column="50">var<pos:position pos:line="64" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="55">value<pos:position pos:line="64" pos:column="60"/></name></expr></argument>)<pos:position pos:line="64" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="62"/></expr_stmt>
		<return pos:line="65" pos:column="17">return <expr><literal type="number" pos:line="65" pos:column="24">0<pos:position pos:line="65" pos:column="25"/></literal></expr>;<pos:position pos:line="65" pos:column="26"/></return>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>

	<return pos:line="68" pos:column="9">return <expr><call><name pos:line="68" pos:column="16">git_default_config<pos:position pos:line="68" pos:column="34"/></name><argument_list pos:line="68" pos:column="34">(<argument><expr><name pos:line="68" pos:column="35">var<pos:position pos:line="68" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="40">value<pos:position pos:line="68" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="47">cb<pos:position pos:line="68" pos:column="49"/></name></expr></argument>)<pos:position pos:line="68" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="51"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

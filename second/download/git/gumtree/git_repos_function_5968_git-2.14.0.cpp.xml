<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5968_git-2.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">prune_packed_objects<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">opts<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">opts<pos:position pos:line="3" pos:column="17"/></name> <operator pos:line="3" pos:column="18">&amp;<pos:position pos:line="3" pos:column="23"/></operator> <name pos:line="3" pos:column="20">PRUNE_PACKED_VERBOSE<pos:position pos:line="3" pos:column="40"/></name></expr>)<pos:position pos:line="3" pos:column="41"/></condition><then pos:line="3" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><name pos:line="4" pos:column="17">progress<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">=<pos:position pos:line="4" pos:column="27"/></operator> <call><name pos:line="4" pos:column="28">start_progress_delay<pos:position pos:line="4" pos:column="48"/></name><argument_list pos:line="4" pos:column="48">(<argument><expr><call><name pos:line="4" pos:column="49">_<pos:position pos:line="4" pos:column="50"/></name><argument_list pos:line="4" pos:column="50">(<argument><expr><literal type="string" pos:line="4" pos:column="51">"Removing duplicate objects"<pos:position pos:line="4" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="80"/></argument_list></call></expr></argument>,
			<argument><expr><literal type="number" pos:line="5" pos:column="25">256<pos:position pos:line="5" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="30">95<pos:position pos:line="5" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="34">2<pos:position pos:line="5" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">for_each_loose_file_in_objdir<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><call><name pos:line="7" pos:column="39">get_object_directory<pos:position pos:line="7" pos:column="59"/></name><argument_list pos:line="7" pos:column="59">()<pos:position pos:line="7" pos:column="61"/></argument_list></call></expr></argument>,
				      <argument><expr><name pos:line="8" pos:column="39">prune_object<pos:position pos:line="8" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="53">NULL<pos:position pos:line="8" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="59">prune_subdir<pos:position pos:line="8" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="73">&amp;<pos:position pos:line="8" pos:column="78"/></operator><name pos:line="8" pos:column="74">opts<pos:position pos:line="8" pos:column="78"/></name></expr></argument>)<pos:position pos:line="8" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="80"/></expr_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* Ensure we show 100% before finishing progress */</comment>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">display_progress<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">progress<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="36">256<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">stop_progress<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><operator pos:line="12" pos:column="23">&amp;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="24">progress<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4720_git-2.11.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_mv<pos:position pos:line="1" pos:column="11"/></name><parameter_list pos:line="1" pos:column="11">(<parameter><decl><type><name pos:line="1" pos:column="12">int<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">argc<pos:position pos:line="1" pos:column="20"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier><modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">argv<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">prefix<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">flags<pos:position pos:line="3" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="23">gitmodules_modified<pos:position pos:line="3" pos:column="42"/></name> <init pos:line="3" pos:column="43">= <expr><literal type="number" pos:line="3" pos:column="45">0<pos:position pos:line="3" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">verbose<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="26">show_only<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><literal type="number" pos:line="4" pos:column="38">0<pos:position pos:line="4" pos:column="39"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="41">force<pos:position pos:line="4" pos:column="46"/></name> <init pos:line="4" pos:column="47">= <expr><literal type="number" pos:line="4" pos:column="49">0<pos:position pos:line="4" pos:column="50"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="52">ignore_errors<pos:position pos:line="4" pos:column="65"/></name> <init pos:line="4" pos:column="66">= <expr><literal type="number" pos:line="4" pos:column="68">0<pos:position pos:line="4" pos:column="69"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="70"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">option<pos:position pos:line="5" pos:column="22"/></name></name></type> <name><name pos:line="5" pos:column="23">builtin_mv_options<pos:position pos:line="5" pos:column="41"/></name><index pos:line="5" pos:column="41">[]<pos:position pos:line="5" pos:column="43"/></index></name> <init pos:line="5" pos:column="44">= <expr><block pos:line="5" pos:column="46">{
		<expr><call><name pos:line="6" pos:column="17">OPT__VERBOSE<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><operator pos:line="6" pos:column="30">&amp;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="31">verbose<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="40">N_<pos:position pos:line="6" pos:column="42"/></name><argument_list pos:line="6" pos:column="42">(<argument><expr><literal type="string" pos:line="6" pos:column="43">"be verbose"<pos:position pos:line="6" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="57"/></argument_list></call></expr>,
		<expr><call><name pos:line="7" pos:column="17">OPT__DRY_RUN<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><operator pos:line="7" pos:column="30">&amp;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="31">show_only<pos:position pos:line="7" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="42">N_<pos:position pos:line="7" pos:column="44"/></name><argument_list pos:line="7" pos:column="44">(<argument><expr><literal type="string" pos:line="7" pos:column="45">"dry run"<pos:position pos:line="7" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr>,
		<expr><call><name pos:line="8" pos:column="17">OPT__FORCE<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><operator pos:line="8" pos:column="28">&amp;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="29">force<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="36">N_<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><literal type="string" pos:line="8" pos:column="39">"force move/rename even if target exists"<pos:position pos:line="8" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="82"/></argument_list></call></expr>,
		<expr><call><name pos:line="9" pos:column="17">OPT_BOOL<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><literal type="char" pos:line="9" pos:column="26">'k'<pos:position pos:line="9" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="31">NULL<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="37">&amp;<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="38">ignore_errors<pos:position pos:line="9" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="53">N_<pos:position pos:line="9" pos:column="55"/></name><argument_list pos:line="9" pos:column="55">(<argument><expr><literal type="string" pos:line="9" pos:column="56">"skip move/rename errors"<pos:position pos:line="9" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="83"/></argument_list></call></expr>,
		<expr><call><name pos:line="10" pos:column="17">OPT_END<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">()<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>,
	}<pos:position pos:line="11" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="11" pos:column="11"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">char<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier><modifier pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></modifier></type><name pos:line="12" pos:column="22">source<pos:position pos:line="12" pos:column="28"/></name></decl>, <modifier pos:line="12" pos:column="30">*<pos:position pos:line="12" pos:column="31"/></modifier><modifier pos:line="12" pos:column="31">*<pos:position pos:line="12" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="32">destination<pos:position pos:line="12" pos:column="43"/></name></decl>, <modifier pos:line="12" pos:column="45">*<pos:position pos:line="12" pos:column="46"/></modifier><modifier pos:line="12" pos:column="46">*<pos:position pos:line="12" pos:column="47"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="47">dest_path<pos:position pos:line="12" pos:column="56"/></name></decl>, <modifier pos:line="12" pos:column="58">*<pos:position pos:line="12" pos:column="59"/></modifier><modifier pos:line="12" pos:column="59">*<pos:position pos:line="12" pos:column="60"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="60">submodule_gitfile<pos:position pos:line="12" pos:column="77"/></name></decl>;<pos:position pos:line="12" pos:column="78"/></decl_stmt>
	<enum pos:line="13" pos:column="9">enum <name pos:line="13" pos:column="14">update_mode<pos:position pos:line="13" pos:column="25"/></name> <block pos:line="13" pos:column="26">{ <decl><name pos:line="13" pos:column="28">BOTH<pos:position pos:line="13" pos:column="32"/></name> <init pos:line="13" pos:column="33">= <expr><literal type="number" pos:line="13" pos:column="35">0<pos:position pos:line="13" pos:column="36"/></literal></expr></init></decl>, <decl><name pos:line="13" pos:column="38">WORKING_DIRECTORY<pos:position pos:line="13" pos:column="55"/></name></decl>, <decl><name pos:line="13" pos:column="57">INDEX<pos:position pos:line="13" pos:column="62"/></name></decl> }<pos:position pos:line="13" pos:column="64"/></block> <decl><modifier pos:line="13" pos:column="65">*<pos:position pos:line="13" pos:column="66"/></modifier><name pos:line="13" pos:column="66">modes<pos:position pos:line="13" pos:column="71"/></name></decl>;<pos:position pos:line="13" pos:column="72"/></enum>
	<decl_stmt><decl><type><name><name pos:line="14" pos:column="9">struct<pos:position pos:line="14" pos:column="15"/></name> <name pos:line="14" pos:column="16">stat<pos:position pos:line="14" pos:column="20"/></name></name></type> <name pos:line="14" pos:column="21">st<pos:position pos:line="14" pos:column="23"/></name></decl>;<pos:position pos:line="14" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="15" pos:column="9">struct<pos:position pos:line="15" pos:column="15"/></name> <name pos:line="15" pos:column="16">string_list<pos:position pos:line="15" pos:column="27"/></name></name></type> <name pos:line="15" pos:column="28">src_for_dst<pos:position pos:line="15" pos:column="39"/></name> <init pos:line="15" pos:column="40">= <expr><name pos:line="15" pos:column="42">STRING_LIST_INIT_NODUP<pos:position pos:line="15" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="65"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">gitmodules_config<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">()<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">git_config<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">git_default_config<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">NULL<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><name pos:line="20" pos:column="9">argc<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">parse_options<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">argc<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="36">argv<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="42">prefix<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="50">builtin_mv_options<pos:position pos:line="20" pos:column="68"/></name></expr></argument>,
			     <argument><expr><name pos:line="21" pos:column="30">builtin_mv_usage<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="48">0<pos:position pos:line="21" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">--<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">argc<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">&lt;<pos:position pos:line="22" pos:column="24"/></operator> <literal type="number" pos:line="22" pos:column="22">1<pos:position pos:line="22" pos:column="23"/></literal></expr>)<pos:position pos:line="22" pos:column="24"/></condition><then pos:line="22" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">usage_with_options<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">builtin_mv_usage<pos:position pos:line="23" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="54">builtin_mv_options<pos:position pos:line="23" pos:column="72"/></name></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="74"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">hold_locked_index<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><operator pos:line="25" pos:column="27">&amp;<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="28">lock_file<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="39">1<pos:position pos:line="25" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">read_cache<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">()<pos:position pos:line="26" pos:column="25"/></argument_list></call> <operator pos:line="26" pos:column="26">&lt;<pos:position pos:line="26" pos:column="30"/></operator> <literal type="number" pos:line="26" pos:column="28">0<pos:position pos:line="26" pos:column="29"/></literal></expr>)<pos:position pos:line="26" pos:column="30"/></condition><then pos:line="26" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">die<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><call><name pos:line="27" pos:column="21">_<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><literal type="string" pos:line="27" pos:column="23">"index file corrupt"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="29" pos:column="9">source<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <call><name pos:line="29" pos:column="18">internal_copy_pathspec<pos:position pos:line="29" pos:column="40"/></name><argument_list pos:line="29" pos:column="40">(<argument><expr><name pos:line="29" pos:column="41">prefix<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">argv<pos:position pos:line="29" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="55">argc<pos:position pos:line="29" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="61">0<pos:position pos:line="29" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">modes<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <call><name pos:line="30" pos:column="17">xcalloc<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">argc<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="31">sizeof<argument_list pos:line="30" pos:column="37">(<argument><expr pos:line="30" pos:column="38">enum <name pos:line="30" pos:column="43">update_mode<pos:position pos:line="30" pos:column="54"/></name></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt>
	<comment type="block" pos:line="31" pos:column="9">/*
	 * Keep trailing slash, needed to let
	 * "git mv file no-such-dir/" error out, except in the case
	 * "git mv directory no-such-dir/".
	 */</comment>
	<expr_stmt><expr><name pos:line="36" pos:column="9">flags<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <name pos:line="36" pos:column="17">KEEP_TRAILING_SLASH<pos:position pos:line="36" pos:column="36"/></name></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">argc<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">==<pos:position pos:line="37" pos:column="20"/></operator> <literal type="number" pos:line="37" pos:column="21">1<pos:position pos:line="37" pos:column="22"/></literal> <operator pos:line="37" pos:column="23">&amp;&amp;<pos:position pos:line="37" pos:column="33"/></operator> <call><name pos:line="37" pos:column="26">is_directory<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><name><name pos:line="37" pos:column="39">argv<pos:position pos:line="37" pos:column="43"/></name><index pos:line="37" pos:column="43">[<expr><literal type="number" pos:line="37" pos:column="44">0<pos:position pos:line="37" pos:column="45"/></literal></expr>]<pos:position pos:line="37" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call> <operator pos:line="37" pos:column="48">&amp;&amp;<pos:position pos:line="37" pos:column="58"/></operator> <operator pos:line="37" pos:column="51">!<pos:position pos:line="37" pos:column="52"/></operator><call><name pos:line="37" pos:column="52">is_directory<pos:position pos:line="37" pos:column="64"/></name><argument_list pos:line="37" pos:column="64">(<argument><expr><name><name pos:line="37" pos:column="65">argv<pos:position pos:line="37" pos:column="69"/></name><index pos:line="37" pos:column="69">[<expr><literal type="number" pos:line="37" pos:column="70">1<pos:position pos:line="37" pos:column="71"/></literal></expr>]<pos:position pos:line="37" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="37" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="74"/></condition><then pos:line="37" pos:column="74">
		<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="17">flags<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <literal type="number" pos:line="38" pos:column="25">0<pos:position pos:line="38" pos:column="26"/></literal></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="39" pos:column="9">dest_path<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <call><name pos:line="39" pos:column="21">internal_copy_pathspec<pos:position pos:line="39" pos:column="43"/></name><argument_list pos:line="39" pos:column="43">(<argument><expr><name pos:line="39" pos:column="44">prefix<pos:position pos:line="39" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="52">argv<pos:position pos:line="39" pos:column="56"/></name> <operator pos:line="39" pos:column="57">+<pos:position pos:line="39" pos:column="58"/></operator> <name pos:line="39" pos:column="59">argc<pos:position pos:line="39" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="65">1<pos:position pos:line="39" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="68">flags<pos:position pos:line="39" pos:column="73"/></name></expr></argument>)<pos:position pos:line="39" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><name pos:line="40" pos:column="9">submodule_gitfile<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <call><name pos:line="40" pos:column="29">xcalloc<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><name pos:line="40" pos:column="37">argc<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="43">sizeof<argument_list pos:line="40" pos:column="49">(<argument><expr><name pos:line="40" pos:column="50">char<pos:position pos:line="40" pos:column="54"/></name> <operator pos:line="40" pos:column="55">*<pos:position pos:line="40" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="40" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="59"/></expr_stmt>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name><name pos:line="42" pos:column="13">dest_path<pos:position pos:line="42" pos:column="22"/></name><index pos:line="42" pos:column="22">[<expr><literal type="number" pos:line="42" pos:column="23">0<pos:position pos:line="42" pos:column="24"/></literal></expr>]<pos:position pos:line="42" pos:column="25"/></index><index pos:line="42" pos:column="25">[<expr><literal type="number" pos:line="42" pos:column="26">0<pos:position pos:line="42" pos:column="27"/></literal></expr>]<pos:position pos:line="42" pos:column="28"/></index></name> <operator pos:line="42" pos:column="29">==<pos:position pos:line="42" pos:column="31"/></operator> <literal type="char" pos:line="42" pos:column="32">'\0'<pos:position pos:line="42" pos:column="36"/></literal></expr>)<pos:position pos:line="42" pos:column="37"/></condition><then pos:line="42" pos:column="37">
		<comment type="block" pos:line="43" pos:column="17">/* special case: "." was normalized to "" */</comment>
		<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="17">destination<pos:position pos:line="44" pos:column="28"/></name> <operator pos:line="44" pos:column="29">=<pos:position pos:line="44" pos:column="30"/></operator> <call><name pos:line="44" pos:column="31">internal_copy_pathspec<pos:position pos:line="44" pos:column="53"/></name><argument_list pos:line="44" pos:column="53">(<argument><expr><name><name pos:line="44" pos:column="54">dest_path<pos:position pos:line="44" pos:column="63"/></name><index pos:line="44" pos:column="63">[<expr><literal type="number" pos:line="44" pos:column="64">0<pos:position pos:line="44" pos:column="65"/></literal></expr>]<pos:position pos:line="44" pos:column="66"/></index></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="68">argv<pos:position pos:line="44" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="74">argc<pos:position pos:line="44" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="80">DUP_BASENAME<pos:position pos:line="44" pos:column="92"/></name></expr></argument>)<pos:position pos:line="44" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="94"/></expr_stmt></block></then>
	<elseif pos:line="45" pos:column="9">else <if pos:line="45" pos:column="14">if <condition pos:line="45" pos:column="17">(<expr><operator pos:line="45" pos:column="18">!<pos:position pos:line="45" pos:column="19"/></operator><call><name pos:line="45" pos:column="19">lstat<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name><name pos:line="45" pos:column="25">dest_path<pos:position pos:line="45" pos:column="34"/></name><index pos:line="45" pos:column="34">[<expr><literal type="number" pos:line="45" pos:column="35">0<pos:position pos:line="45" pos:column="36"/></literal></expr>]<pos:position pos:line="45" pos:column="37"/></index></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="39">&amp;<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="40">st<pos:position pos:line="45" pos:column="42"/></name></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></call> <operator pos:line="45" pos:column="44">&amp;&amp;<pos:position pos:line="45" pos:column="54"/></operator>
			<call><name pos:line="46" pos:column="25">S_ISDIR<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name><name pos:line="46" pos:column="33">st<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">.<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="36">st_mode<pos:position pos:line="46" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="45"/></condition><then pos:line="46" pos:column="45"> <block pos:line="46" pos:column="46">{
		<expr_stmt><expr><name><name pos:line="47" pos:column="17">dest_path<pos:position pos:line="47" pos:column="26"/></name><index pos:line="47" pos:column="26">[<expr><literal type="number" pos:line="47" pos:column="27">0<pos:position pos:line="47" pos:column="28"/></literal></expr>]<pos:position pos:line="47" pos:column="29"/></index></name> <operator pos:line="47" pos:column="30">=<pos:position pos:line="47" pos:column="31"/></operator> <call><name pos:line="47" pos:column="32">add_slash<pos:position pos:line="47" pos:column="41"/></name><argument_list pos:line="47" pos:column="41">(<argument><expr><name><name pos:line="47" pos:column="42">dest_path<pos:position pos:line="47" pos:column="51"/></name><index pos:line="47" pos:column="51">[<expr><literal type="number" pos:line="47" pos:column="52">0<pos:position pos:line="47" pos:column="53"/></literal></expr>]<pos:position pos:line="47" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="47" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name pos:line="48" pos:column="17">destination<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <call><name pos:line="48" pos:column="31">internal_copy_pathspec<pos:position pos:line="48" pos:column="53"/></name><argument_list pos:line="48" pos:column="53">(<argument><expr><name><name pos:line="48" pos:column="54">dest_path<pos:position pos:line="48" pos:column="63"/></name><index pos:line="48" pos:column="63">[<expr><literal type="number" pos:line="48" pos:column="64">0<pos:position pos:line="48" pos:column="65"/></literal></expr>]<pos:position pos:line="48" pos:column="66"/></index></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="68">argv<pos:position pos:line="48" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="74">argc<pos:position pos:line="48" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="80">DUP_BASENAME<pos:position pos:line="48" pos:column="92"/></name></expr></argument>)<pos:position pos:line="48" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="94"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if></elseif> <else pos:line="49" pos:column="11">else <block pos:line="49" pos:column="16">{
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name pos:line="50" pos:column="21">argc<pos:position pos:line="50" pos:column="25"/></name> <operator pos:line="50" pos:column="26">!=<pos:position pos:line="50" pos:column="28"/></operator> <literal type="number" pos:line="50" pos:column="29">1<pos:position pos:line="50" pos:column="30"/></literal></expr>)<pos:position pos:line="50" pos:column="31"/></condition><then pos:line="50" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="25">die<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><call><name pos:line="51" pos:column="29">_<pos:position pos:line="51" pos:column="30"/></name><argument_list pos:line="51" pos:column="30">(<argument><expr><literal type="string" pos:line="51" pos:column="31">"destination '%s' is not a directory"<pos:position pos:line="51" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="71">dest_path<pos:position pos:line="51" pos:column="80"/></name><index pos:line="51" pos:column="80">[<expr><literal type="number" pos:line="51" pos:column="81">0<pos:position pos:line="51" pos:column="82"/></literal></expr>]<pos:position pos:line="51" pos:column="83"/></index></name></expr></argument>)<pos:position pos:line="51" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="85"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="52" pos:column="17">destination<pos:position pos:line="52" pos:column="28"/></name> <operator pos:line="52" pos:column="29">=<pos:position pos:line="52" pos:column="30"/></operator> <name pos:line="52" pos:column="31">dest_path<pos:position pos:line="52" pos:column="40"/></name></expr>;<pos:position pos:line="52" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="53" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="55" pos:column="9">/* Checking */</comment>
	<for pos:line="56" pos:column="9">for <control pos:line="56" pos:column="13">(<init><expr><name pos:line="56" pos:column="14">i<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <literal type="number" pos:line="56" pos:column="18">0<pos:position pos:line="56" pos:column="19"/></literal></expr>;<pos:position pos:line="56" pos:column="20"/></init> <condition><expr><name pos:line="56" pos:column="21">i<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">&lt;<pos:position pos:line="56" pos:column="27"/></operator> <name pos:line="56" pos:column="25">argc<pos:position pos:line="56" pos:column="29"/></name></expr>;<pos:position pos:line="56" pos:column="30"/></condition> <incr><expr><name pos:line="56" pos:column="31">i<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">++<pos:position pos:line="56" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="56" pos:column="35"/></control> <block pos:line="56" pos:column="36">{
		<decl_stmt><decl><type><specifier pos:line="57" pos:column="17">const<pos:position pos:line="57" pos:column="22"/></specifier> <name pos:line="57" pos:column="23">char<pos:position pos:line="57" pos:column="27"/></name> <modifier pos:line="57" pos:column="28">*<pos:position pos:line="57" pos:column="29"/></modifier></type><name pos:line="57" pos:column="29">src<pos:position pos:line="57" pos:column="32"/></name> <init pos:line="57" pos:column="33">= <expr><name><name pos:line="57" pos:column="35">source<pos:position pos:line="57" pos:column="41"/></name><index pos:line="57" pos:column="41">[<expr><name pos:line="57" pos:column="42">i<pos:position pos:line="57" pos:column="43"/></name></expr>]<pos:position pos:line="57" pos:column="44"/></index></name></expr></init></decl>, <modifier pos:line="57" pos:column="46">*<pos:position pos:line="57" pos:column="47"/></modifier><decl><type ref="prev"/><name pos:line="57" pos:column="47">dst<pos:position pos:line="57" pos:column="50"/></name> <init pos:line="57" pos:column="51">= <expr><name><name pos:line="57" pos:column="53">destination<pos:position pos:line="57" pos:column="64"/></name><index pos:line="57" pos:column="64">[<expr><name pos:line="57" pos:column="65">i<pos:position pos:line="57" pos:column="66"/></name></expr>]<pos:position pos:line="57" pos:column="67"/></index></name></expr></init></decl>;<pos:position pos:line="57" pos:column="68"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="58" pos:column="17">int<pos:position pos:line="58" pos:column="20"/></name></type> <name pos:line="58" pos:column="21">length<pos:position pos:line="58" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="58" pos:column="29">src_is_dir<pos:position pos:line="58" pos:column="39"/></name></decl>;<pos:position pos:line="58" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="59" pos:column="17">const<pos:position pos:line="59" pos:column="22"/></specifier> <name pos:line="59" pos:column="23">char<pos:position pos:line="59" pos:column="27"/></name> <modifier pos:line="59" pos:column="28">*<pos:position pos:line="59" pos:column="29"/></modifier></type><name pos:line="59" pos:column="29">bad<pos:position pos:line="59" pos:column="32"/></name> <init pos:line="59" pos:column="33">= <expr><name pos:line="59" pos:column="35">NULL<pos:position pos:line="59" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="59" pos:column="40"/></decl_stmt>

		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><name pos:line="61" pos:column="21">show_only<pos:position pos:line="61" pos:column="30"/></name></expr>)<pos:position pos:line="61" pos:column="31"/></condition><then pos:line="61" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="25">printf<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><call><name pos:line="62" pos:column="32">_<pos:position pos:line="62" pos:column="33"/></name><argument_list pos:line="62" pos:column="33">(<argument><expr><literal type="string" pos:line="62" pos:column="34">"Checking rename of '%s' to '%s'\n"<pos:position pos:line="62" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="62" pos:column="72">src<pos:position pos:line="62" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="77">dst<pos:position pos:line="62" pos:column="80"/></name></expr></argument>)<pos:position pos:line="62" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="82"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="64" pos:column="17">length<pos:position pos:line="64" pos:column="23"/></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <call><name pos:line="64" pos:column="26">strlen<pos:position pos:line="64" pos:column="32"/></name><argument_list pos:line="64" pos:column="32">(<argument><expr><name pos:line="64" pos:column="33">src<pos:position pos:line="64" pos:column="36"/></name></expr></argument>)<pos:position pos:line="64" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><call><name pos:line="65" pos:column="21">lstat<pos:position pos:line="65" pos:column="26"/></name><argument_list pos:line="65" pos:column="26">(<argument><expr><name pos:line="65" pos:column="27">src<pos:position pos:line="65" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="32">&amp;<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="33">st<pos:position pos:line="65" pos:column="35"/></name></expr></argument>)<pos:position pos:line="65" pos:column="36"/></argument_list></call> <operator pos:line="65" pos:column="37">&lt;<pos:position pos:line="65" pos:column="41"/></operator> <literal type="number" pos:line="65" pos:column="39">0<pos:position pos:line="65" pos:column="40"/></literal></expr>)<pos:position pos:line="65" pos:column="41"/></condition><then pos:line="65" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="25">bad<pos:position pos:line="66" pos:column="28"/></name> <operator pos:line="66" pos:column="29">=<pos:position pos:line="66" pos:column="30"/></operator> <call><name pos:line="66" pos:column="31">_<pos:position pos:line="66" pos:column="32"/></name><argument_list pos:line="66" pos:column="32">(<argument><expr><literal type="string" pos:line="66" pos:column="33">"bad source"<pos:position pos:line="66" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="47"/></expr_stmt></block></then>
		<elseif pos:line="67" pos:column="17">else <if pos:line="67" pos:column="22">if <condition pos:line="67" pos:column="25">(<expr><operator pos:line="67" pos:column="26">!<pos:position pos:line="67" pos:column="27"/></operator><call><name pos:line="67" pos:column="27">strncmp<pos:position pos:line="67" pos:column="34"/></name><argument_list pos:line="67" pos:column="34">(<argument><expr><name pos:line="67" pos:column="35">src<pos:position pos:line="67" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="40">dst<pos:position pos:line="67" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="45">length<pos:position pos:line="67" pos:column="51"/></name></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></call> <operator pos:line="67" pos:column="53">&amp;&amp;<pos:position pos:line="67" pos:column="63"/></operator>
				<operator pos:line="68" pos:column="33">(<pos:position pos:line="68" pos:column="34"/></operator><name><name pos:line="68" pos:column="34">dst<pos:position pos:line="68" pos:column="37"/></name><index pos:line="68" pos:column="37">[<expr><name pos:line="68" pos:column="38">length<pos:position pos:line="68" pos:column="44"/></name></expr>]<pos:position pos:line="68" pos:column="45"/></index></name> <operator pos:line="68" pos:column="46">==<pos:position pos:line="68" pos:column="48"/></operator> <literal type="number" pos:line="68" pos:column="49">0<pos:position pos:line="68" pos:column="50"/></literal> <operator pos:line="68" pos:column="51">||<pos:position pos:line="68" pos:column="53"/></operator> <name><name pos:line="68" pos:column="54">dst<pos:position pos:line="68" pos:column="57"/></name><index pos:line="68" pos:column="57">[<expr><name pos:line="68" pos:column="58">length<pos:position pos:line="68" pos:column="64"/></name></expr>]<pos:position pos:line="68" pos:column="65"/></index></name> <operator pos:line="68" pos:column="66">==<pos:position pos:line="68" pos:column="68"/></operator> <literal type="char" pos:line="68" pos:column="69">'/'<pos:position pos:line="68" pos:column="72"/></literal><operator pos:line="68" pos:column="72">)<pos:position pos:line="68" pos:column="73"/></operator></expr>)<pos:position pos:line="68" pos:column="74"/></condition><then pos:line="68" pos:column="74"> <block pos:line="68" pos:column="75">{
			<expr_stmt><expr><name pos:line="69" pos:column="25">bad<pos:position pos:line="69" pos:column="28"/></name> <operator pos:line="69" pos:column="29">=<pos:position pos:line="69" pos:column="30"/></operator> <call><name pos:line="69" pos:column="31">_<pos:position pos:line="69" pos:column="32"/></name><argument_list pos:line="69" pos:column="32">(<argument><expr><literal type="string" pos:line="69" pos:column="33">"can not move directory into itself"<pos:position pos:line="69" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="70" pos:column="18"/></block></then></if></elseif> <elseif pos:line="70" pos:column="19">else <if pos:line="70" pos:column="24">if <condition pos:line="70" pos:column="27">(<expr><operator pos:line="70" pos:column="28">(<pos:position pos:line="70" pos:column="29"/></operator><name pos:line="70" pos:column="29">src_is_dir<pos:position pos:line="70" pos:column="39"/></name> <operator pos:line="70" pos:column="40">=<pos:position pos:line="70" pos:column="41"/></operator> <call><name pos:line="70" pos:column="42">S_ISDIR<pos:position pos:line="70" pos:column="49"/></name><argument_list pos:line="70" pos:column="49">(<argument><expr><name><name pos:line="70" pos:column="50">st<pos:position pos:line="70" pos:column="52"/></name><operator pos:line="70" pos:column="52">.<pos:position pos:line="70" pos:column="53"/></operator><name pos:line="70" pos:column="53">st_mode<pos:position pos:line="70" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="61"/></argument_list></call><operator pos:line="70" pos:column="61">)<pos:position pos:line="70" pos:column="62"/></operator>
				<operator pos:line="71" pos:column="33">&amp;&amp;<pos:position pos:line="71" pos:column="43"/></operator> <call><name pos:line="71" pos:column="36">lstat<pos:position pos:line="71" pos:column="41"/></name><argument_list pos:line="71" pos:column="41">(<argument><expr><name pos:line="71" pos:column="42">dst<pos:position pos:line="71" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="47">&amp;<pos:position pos:line="71" pos:column="52"/></operator><name pos:line="71" pos:column="48">st<pos:position pos:line="71" pos:column="50"/></name></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call> <operator pos:line="71" pos:column="52">==<pos:position pos:line="71" pos:column="54"/></operator> <literal type="number" pos:line="71" pos:column="55">0<pos:position pos:line="71" pos:column="56"/></literal></expr>)<pos:position pos:line="71" pos:column="57"/></condition><then pos:line="71" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="25">bad<pos:position pos:line="72" pos:column="28"/></name> <operator pos:line="72" pos:column="29">=<pos:position pos:line="72" pos:column="30"/></operator> <call><name pos:line="72" pos:column="31">_<pos:position pos:line="72" pos:column="32"/></name><argument_list pos:line="72" pos:column="32">(<argument><expr><literal type="string" pos:line="72" pos:column="33">"cannot move directory over file"<pos:position pos:line="72" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="68"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="73" pos:column="17">else <if pos:line="73" pos:column="22">if <condition pos:line="73" pos:column="25">(<expr><name pos:line="73" pos:column="26">src_is_dir<pos:position pos:line="73" pos:column="36"/></name></expr>)<pos:position pos:line="73" pos:column="37"/></condition><then pos:line="73" pos:column="37"> <block pos:line="73" pos:column="38">{
			<decl_stmt><decl><type><name pos:line="74" pos:column="25">int<pos:position pos:line="74" pos:column="28"/></name></type> <name pos:line="74" pos:column="29">first<pos:position pos:line="74" pos:column="34"/></name> <init pos:line="74" pos:column="35">= <expr><call><name pos:line="74" pos:column="37">cache_name_pos<pos:position pos:line="74" pos:column="51"/></name><argument_list pos:line="74" pos:column="51">(<argument><expr><name pos:line="74" pos:column="52">src<pos:position pos:line="74" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="57">length<pos:position pos:line="74" pos:column="63"/></name></expr></argument>)<pos:position pos:line="74" pos:column="64"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="74" pos:column="66">last<pos:position pos:line="74" pos:column="70"/></name></decl>;<pos:position pos:line="74" pos:column="71"/></decl_stmt>

			<if pos:line="76" pos:column="25">if <condition pos:line="76" pos:column="28">(<expr><name pos:line="76" pos:column="29">first<pos:position pos:line="76" pos:column="34"/></name> <operator pos:line="76" pos:column="35">&gt;=<pos:position pos:line="76" pos:column="40"/></operator> <literal type="number" pos:line="76" pos:column="38">0<pos:position pos:line="76" pos:column="39"/></literal></expr>)<pos:position pos:line="76" pos:column="40"/></condition><then pos:line="76" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="33">prepare_move_submodule<pos:position pos:line="77" pos:column="55"/></name><argument_list pos:line="77" pos:column="55">(<argument><expr><name pos:line="77" pos:column="56">src<pos:position pos:line="77" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="61">first<pos:position pos:line="77" pos:column="66"/></name></expr></argument>,
						       <argument><expr><name pos:line="78" pos:column="56">submodule_gitfile<pos:position pos:line="78" pos:column="73"/></name> <operator pos:line="78" pos:column="74">+<pos:position pos:line="78" pos:column="75"/></operator> <name pos:line="78" pos:column="76">i<pos:position pos:line="78" pos:column="77"/></name></expr></argument>)<pos:position pos:line="78" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="79"/></expr_stmt></block></then>
			<elseif pos:line="79" pos:column="25">else <if pos:line="79" pos:column="30">if <condition pos:line="79" pos:column="33">(<expr><call><name pos:line="79" pos:column="34">index_range_of_same_dir<pos:position pos:line="79" pos:column="57"/></name><argument_list pos:line="79" pos:column="57">(<argument><expr><name pos:line="79" pos:column="58">src<pos:position pos:line="79" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="63">length<pos:position pos:line="79" pos:column="69"/></name></expr></argument>,
							 <argument><expr><operator pos:line="80" pos:column="58">&amp;<pos:position pos:line="80" pos:column="63"/></operator><name pos:line="80" pos:column="59">first<pos:position pos:line="80" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="66">&amp;<pos:position pos:line="80" pos:column="71"/></operator><name pos:line="80" pos:column="67">last<pos:position pos:line="80" pos:column="71"/></name></expr></argument>)<pos:position pos:line="80" pos:column="72"/></argument_list></call> <operator pos:line="80" pos:column="73">&lt;<pos:position pos:line="80" pos:column="77"/></operator> <literal type="number" pos:line="80" pos:column="75">1<pos:position pos:line="80" pos:column="76"/></literal></expr>)<pos:position pos:line="80" pos:column="77"/></condition><then pos:line="80" pos:column="77">
				<block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="33">bad<pos:position pos:line="81" pos:column="36"/></name> <operator pos:line="81" pos:column="37">=<pos:position pos:line="81" pos:column="38"/></operator> <call><name pos:line="81" pos:column="39">_<pos:position pos:line="81" pos:column="40"/></name><argument_list pos:line="81" pos:column="40">(<argument><expr><literal type="string" pos:line="81" pos:column="41">"source directory is empty"<pos:position pos:line="81" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="70"/></expr_stmt></block></then></if></elseif>
			<else pos:line="82" pos:column="25">else <block pos:line="82" pos:column="30">{ <comment type="block" pos:line="82" pos:column="32">/* last - first &gt;= 1 */</comment>
				<decl_stmt><decl><type><name pos:line="83" pos:column="33">int<pos:position pos:line="83" pos:column="36"/></name></type> <name pos:line="83" pos:column="37">j<pos:position pos:line="83" pos:column="38"/></name></decl>, <decl><type ref="prev"/><name pos:line="83" pos:column="40">dst_len<pos:position pos:line="83" pos:column="47"/></name></decl>, <decl><type ref="prev"/><name pos:line="83" pos:column="49">n<pos:position pos:line="83" pos:column="50"/></name></decl>;<pos:position pos:line="83" pos:column="51"/></decl_stmt>

				<expr_stmt><expr><name><name pos:line="85" pos:column="33">modes<pos:position pos:line="85" pos:column="38"/></name><index pos:line="85" pos:column="38">[<expr><name pos:line="85" pos:column="39">i<pos:position pos:line="85" pos:column="40"/></name></expr>]<pos:position pos:line="85" pos:column="41"/></index></name> <operator pos:line="85" pos:column="42">=<pos:position pos:line="85" pos:column="43"/></operator> <name pos:line="85" pos:column="44">WORKING_DIRECTORY<pos:position pos:line="85" pos:column="61"/></name></expr>;<pos:position pos:line="85" pos:column="62"/></expr_stmt>
				<expr_stmt><expr><name pos:line="86" pos:column="33">n<pos:position pos:line="86" pos:column="34"/></name> <operator pos:line="86" pos:column="35">=<pos:position pos:line="86" pos:column="36"/></operator> <name pos:line="86" pos:column="37">argc<pos:position pos:line="86" pos:column="41"/></name> <operator pos:line="86" pos:column="42">+<pos:position pos:line="86" pos:column="43"/></operator> <name pos:line="86" pos:column="44">last<pos:position pos:line="86" pos:column="48"/></name> <operator pos:line="86" pos:column="49">-<pos:position pos:line="86" pos:column="50"/></operator> <name pos:line="86" pos:column="51">first<pos:position pos:line="86" pos:column="56"/></name></expr>;<pos:position pos:line="86" pos:column="57"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="87" pos:column="33">REALLOC_ARRAY<pos:position pos:line="87" pos:column="46"/></name><argument_list pos:line="87" pos:column="46">(<argument><expr><name pos:line="87" pos:column="47">source<pos:position pos:line="87" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="55">n<pos:position pos:line="87" pos:column="56"/></name></expr></argument>)<pos:position pos:line="87" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="58"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="88" pos:column="33">REALLOC_ARRAY<pos:position pos:line="88" pos:column="46"/></name><argument_list pos:line="88" pos:column="46">(<argument><expr><name pos:line="88" pos:column="47">destination<pos:position pos:line="88" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="60">n<pos:position pos:line="88" pos:column="61"/></name></expr></argument>)<pos:position pos:line="88" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="89" pos:column="33">REALLOC_ARRAY<pos:position pos:line="89" pos:column="46"/></name><argument_list pos:line="89" pos:column="46">(<argument><expr><name pos:line="89" pos:column="47">modes<pos:position pos:line="89" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="54">n<pos:position pos:line="89" pos:column="55"/></name></expr></argument>)<pos:position pos:line="89" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="57"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="90" pos:column="33">REALLOC_ARRAY<pos:position pos:line="90" pos:column="46"/></name><argument_list pos:line="90" pos:column="46">(<argument><expr><name pos:line="90" pos:column="47">submodule_gitfile<pos:position pos:line="90" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="66">n<pos:position pos:line="90" pos:column="67"/></name></expr></argument>)<pos:position pos:line="90" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="69"/></expr_stmt>

				<expr_stmt><expr><name pos:line="92" pos:column="33">dst<pos:position pos:line="92" pos:column="36"/></name> <operator pos:line="92" pos:column="37">=<pos:position pos:line="92" pos:column="38"/></operator> <call><name pos:line="92" pos:column="39">add_slash<pos:position pos:line="92" pos:column="48"/></name><argument_list pos:line="92" pos:column="48">(<argument><expr><name pos:line="92" pos:column="49">dst<pos:position pos:line="92" pos:column="52"/></name></expr></argument>)<pos:position pos:line="92" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="54"/></expr_stmt>
				<expr_stmt><expr><name pos:line="93" pos:column="33">dst_len<pos:position pos:line="93" pos:column="40"/></name> <operator pos:line="93" pos:column="41">=<pos:position pos:line="93" pos:column="42"/></operator> <call><name pos:line="93" pos:column="43">strlen<pos:position pos:line="93" pos:column="49"/></name><argument_list pos:line="93" pos:column="49">(<argument><expr><name pos:line="93" pos:column="50">dst<pos:position pos:line="93" pos:column="53"/></name></expr></argument>)<pos:position pos:line="93" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="55"/></expr_stmt>

				<for pos:line="95" pos:column="33">for <control pos:line="95" pos:column="37">(<init><expr><name pos:line="95" pos:column="38">j<pos:position pos:line="95" pos:column="39"/></name> <operator pos:line="95" pos:column="40">=<pos:position pos:line="95" pos:column="41"/></operator> <literal type="number" pos:line="95" pos:column="42">0<pos:position pos:line="95" pos:column="43"/></literal></expr>;<pos:position pos:line="95" pos:column="44"/></init> <condition><expr><name pos:line="95" pos:column="45">j<pos:position pos:line="95" pos:column="46"/></name> <operator pos:line="95" pos:column="47">&lt;<pos:position pos:line="95" pos:column="51"/></operator> <name pos:line="95" pos:column="49">last<pos:position pos:line="95" pos:column="53"/></name> <operator pos:line="95" pos:column="54">-<pos:position pos:line="95" pos:column="55"/></operator> <name pos:line="95" pos:column="56">first<pos:position pos:line="95" pos:column="61"/></name></expr>;<pos:position pos:line="95" pos:column="62"/></condition> <incr><expr><name pos:line="95" pos:column="63">j<pos:position pos:line="95" pos:column="64"/></name><operator pos:line="95" pos:column="64">++<pos:position pos:line="95" pos:column="66"/></operator></expr></incr>)<pos:position pos:line="95" pos:column="67"/></control> <block pos:line="95" pos:column="68">{
					<decl_stmt><decl><type><specifier pos:line="96" pos:column="41">const<pos:position pos:line="96" pos:column="46"/></specifier> <name pos:line="96" pos:column="47">char<pos:position pos:line="96" pos:column="51"/></name> <modifier pos:line="96" pos:column="52">*<pos:position pos:line="96" pos:column="53"/></modifier></type><name pos:line="96" pos:column="53">path<pos:position pos:line="96" pos:column="57"/></name> <init pos:line="96" pos:column="58">= <expr><name><name pos:line="96" pos:column="60">active_cache<pos:position pos:line="96" pos:column="72"/></name><index pos:line="96" pos:column="72">[<expr><name pos:line="96" pos:column="73">first<pos:position pos:line="96" pos:column="78"/></name> <operator pos:line="96" pos:column="79">+<pos:position pos:line="96" pos:column="80"/></operator> <name pos:line="96" pos:column="81">j<pos:position pos:line="96" pos:column="82"/></name></expr>]<pos:position pos:line="96" pos:column="83"/></index></name><operator pos:line="96" pos:column="83">-&gt;<pos:position pos:line="96" pos:column="88"/></operator><name pos:line="96" pos:column="85">name<pos:position pos:line="96" pos:column="89"/></name></expr></init></decl>;<pos:position pos:line="96" pos:column="90"/></decl_stmt>
					<expr_stmt><expr><name><name pos:line="97" pos:column="41">source<pos:position pos:line="97" pos:column="47"/></name><index pos:line="97" pos:column="47">[<expr><name pos:line="97" pos:column="48">argc<pos:position pos:line="97" pos:column="52"/></name> <operator pos:line="97" pos:column="53">+<pos:position pos:line="97" pos:column="54"/></operator> <name pos:line="97" pos:column="55">j<pos:position pos:line="97" pos:column="56"/></name></expr>]<pos:position pos:line="97" pos:column="57"/></index></name> <operator pos:line="97" pos:column="58">=<pos:position pos:line="97" pos:column="59"/></operator> <name pos:line="97" pos:column="60">path<pos:position pos:line="97" pos:column="64"/></name></expr>;<pos:position pos:line="97" pos:column="65"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="98" pos:column="41">destination<pos:position pos:line="98" pos:column="52"/></name><index pos:line="98" pos:column="52">[<expr><name pos:line="98" pos:column="53">argc<pos:position pos:line="98" pos:column="57"/></name> <operator pos:line="98" pos:column="58">+<pos:position pos:line="98" pos:column="59"/></operator> <name pos:line="98" pos:column="60">j<pos:position pos:line="98" pos:column="61"/></name></expr>]<pos:position pos:line="98" pos:column="62"/></index></name> <operator pos:line="98" pos:column="63">=<pos:position pos:line="98" pos:column="64"/></operator>
						<call><name pos:line="99" pos:column="49">prefix_path<pos:position pos:line="99" pos:column="60"/></name><argument_list pos:line="99" pos:column="60">(<argument><expr><name pos:line="99" pos:column="61">dst<pos:position pos:line="99" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="66">dst_len<pos:position pos:line="99" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="75">path<pos:position pos:line="99" pos:column="79"/></name> <operator pos:line="99" pos:column="80">+<pos:position pos:line="99" pos:column="81"/></operator> <name pos:line="99" pos:column="82">length<pos:position pos:line="99" pos:column="88"/></name> <operator pos:line="99" pos:column="89">+<pos:position pos:line="99" pos:column="90"/></operator> <literal type="number" pos:line="99" pos:column="91">1<pos:position pos:line="99" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="94"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="100" pos:column="41">modes<pos:position pos:line="100" pos:column="46"/></name><index pos:line="100" pos:column="46">[<expr><name pos:line="100" pos:column="47">argc<pos:position pos:line="100" pos:column="51"/></name> <operator pos:line="100" pos:column="52">+<pos:position pos:line="100" pos:column="53"/></operator> <name pos:line="100" pos:column="54">j<pos:position pos:line="100" pos:column="55"/></name></expr>]<pos:position pos:line="100" pos:column="56"/></index></name> <operator pos:line="100" pos:column="57">=<pos:position pos:line="100" pos:column="58"/></operator> <name pos:line="100" pos:column="59">INDEX<pos:position pos:line="100" pos:column="64"/></name></expr>;<pos:position pos:line="100" pos:column="65"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="101" pos:column="41">submodule_gitfile<pos:position pos:line="101" pos:column="58"/></name><index pos:line="101" pos:column="58">[<expr><name pos:line="101" pos:column="59">argc<pos:position pos:line="101" pos:column="63"/></name> <operator pos:line="101" pos:column="64">+<pos:position pos:line="101" pos:column="65"/></operator> <name pos:line="101" pos:column="66">j<pos:position pos:line="101" pos:column="67"/></name></expr>]<pos:position pos:line="101" pos:column="68"/></index></name> <operator pos:line="101" pos:column="69">=<pos:position pos:line="101" pos:column="70"/></operator> <name pos:line="101" pos:column="71">NULL<pos:position pos:line="101" pos:column="75"/></name></expr>;<pos:position pos:line="101" pos:column="76"/></expr_stmt>
				}<pos:position pos:line="102" pos:column="34"/></block></for>
				<expr_stmt><expr><name pos:line="103" pos:column="33">argc<pos:position pos:line="103" pos:column="37"/></name> <operator pos:line="103" pos:column="38">+=<pos:position pos:line="103" pos:column="40"/></operator> <name pos:line="103" pos:column="41">last<pos:position pos:line="103" pos:column="45"/></name> <operator pos:line="103" pos:column="46">-<pos:position pos:line="103" pos:column="47"/></operator> <name pos:line="103" pos:column="48">first<pos:position pos:line="103" pos:column="53"/></name></expr>;<pos:position pos:line="103" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="104" pos:column="26"/></block></else></if>
		}<pos:position pos:line="105" pos:column="18"/></block></then></if></elseif> <elseif pos:line="105" pos:column="19">else <if pos:line="105" pos:column="24">if <condition pos:line="105" pos:column="27">(<expr><call><name pos:line="105" pos:column="28">cache_name_pos<pos:position pos:line="105" pos:column="42"/></name><argument_list pos:line="105" pos:column="42">(<argument><expr><name pos:line="105" pos:column="43">src<pos:position pos:line="105" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="48">length<pos:position pos:line="105" pos:column="54"/></name></expr></argument>)<pos:position pos:line="105" pos:column="55"/></argument_list></call> <operator pos:line="105" pos:column="56">&lt;<pos:position pos:line="105" pos:column="60"/></operator> <literal type="number" pos:line="105" pos:column="58">0<pos:position pos:line="105" pos:column="59"/></literal></expr>)<pos:position pos:line="105" pos:column="60"/></condition><then pos:line="105" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><name pos:line="106" pos:column="25">bad<pos:position pos:line="106" pos:column="28"/></name> <operator pos:line="106" pos:column="29">=<pos:position pos:line="106" pos:column="30"/></operator> <call><name pos:line="106" pos:column="31">_<pos:position pos:line="106" pos:column="32"/></name><argument_list pos:line="106" pos:column="32">(<argument><expr><literal type="string" pos:line="106" pos:column="33">"not under version control"<pos:position pos:line="106" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="62"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="107" pos:column="17">else <if pos:line="107" pos:column="22">if <condition pos:line="107" pos:column="25">(<expr><call><name pos:line="107" pos:column="26">lstat<pos:position pos:line="107" pos:column="31"/></name><argument_list pos:line="107" pos:column="31">(<argument><expr><name pos:line="107" pos:column="32">dst<pos:position pos:line="107" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="37">&amp;<pos:position pos:line="107" pos:column="42"/></operator><name pos:line="107" pos:column="38">st<pos:position pos:line="107" pos:column="40"/></name></expr></argument>)<pos:position pos:line="107" pos:column="41"/></argument_list></call> <operator pos:line="107" pos:column="42">==<pos:position pos:line="107" pos:column="44"/></operator> <literal type="number" pos:line="107" pos:column="45">0<pos:position pos:line="107" pos:column="46"/></literal> <operator pos:line="107" pos:column="47">&amp;&amp;<pos:position pos:line="107" pos:column="57"/></operator>
			 <operator pos:line="108" pos:column="26">(<pos:position pos:line="108" pos:column="27"/></operator><operator pos:line="108" pos:column="27">!<pos:position pos:line="108" pos:column="28"/></operator><name pos:line="108" pos:column="28">ignore_case<pos:position pos:line="108" pos:column="39"/></name> <operator pos:line="108" pos:column="40">||<pos:position pos:line="108" pos:column="42"/></operator> <call><name pos:line="108" pos:column="43">strcasecmp<pos:position pos:line="108" pos:column="53"/></name><argument_list pos:line="108" pos:column="53">(<argument><expr><name pos:line="108" pos:column="54">src<pos:position pos:line="108" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="59">dst<pos:position pos:line="108" pos:column="62"/></name></expr></argument>)<pos:position pos:line="108" pos:column="63"/></argument_list></call><operator pos:line="108" pos:column="63">)<pos:position pos:line="108" pos:column="64"/></operator></expr>)<pos:position pos:line="108" pos:column="65"/></condition><then pos:line="108" pos:column="65"> <block pos:line="108" pos:column="66">{
			<expr_stmt><expr><name pos:line="109" pos:column="25">bad<pos:position pos:line="109" pos:column="28"/></name> <operator pos:line="109" pos:column="29">=<pos:position pos:line="109" pos:column="30"/></operator> <call><name pos:line="109" pos:column="31">_<pos:position pos:line="109" pos:column="32"/></name><argument_list pos:line="109" pos:column="32">(<argument><expr><literal type="string" pos:line="109" pos:column="33">"destination exists"<pos:position pos:line="109" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="55"/></expr_stmt>
			<if pos:line="110" pos:column="25">if <condition pos:line="110" pos:column="28">(<expr><name pos:line="110" pos:column="29">force<pos:position pos:line="110" pos:column="34"/></name></expr>)<pos:position pos:line="110" pos:column="35"/></condition><then pos:line="110" pos:column="35"> <block pos:line="110" pos:column="36">{
				<comment type="block" pos:line="111" pos:column="33">/*
				 * only files can overwrite each other:
				 * check both source and destination
				 */</comment>
				<if pos:line="115" pos:column="33">if <condition pos:line="115" pos:column="36">(<expr><call><name pos:line="115" pos:column="37">S_ISREG<pos:position pos:line="115" pos:column="44"/></name><argument_list pos:line="115" pos:column="44">(<argument><expr><name><name pos:line="115" pos:column="45">st<pos:position pos:line="115" pos:column="47"/></name><operator pos:line="115" pos:column="47">.<pos:position pos:line="115" pos:column="48"/></operator><name pos:line="115" pos:column="48">st_mode<pos:position pos:line="115" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="56"/></argument_list></call> <operator pos:line="115" pos:column="57">||<pos:position pos:line="115" pos:column="59"/></operator> <call><name pos:line="115" pos:column="60">S_ISLNK<pos:position pos:line="115" pos:column="67"/></name><argument_list pos:line="115" pos:column="67">(<argument><expr><name><name pos:line="115" pos:column="68">st<pos:position pos:line="115" pos:column="70"/></name><operator pos:line="115" pos:column="70">.<pos:position pos:line="115" pos:column="71"/></operator><name pos:line="115" pos:column="71">st_mode<pos:position pos:line="115" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="115" pos:column="80"/></condition><then pos:line="115" pos:column="80"> <block pos:line="115" pos:column="81">{
					<if pos:line="116" pos:column="41">if <condition pos:line="116" pos:column="44">(<expr><name pos:line="116" pos:column="45">verbose<pos:position pos:line="116" pos:column="52"/></name></expr>)<pos:position pos:line="116" pos:column="53"/></condition><then pos:line="116" pos:column="53">
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="117" pos:column="49">warning<pos:position pos:line="117" pos:column="56"/></name><argument_list pos:line="117" pos:column="56">(<argument><expr><call><name pos:line="117" pos:column="57">_<pos:position pos:line="117" pos:column="58"/></name><argument_list pos:line="117" pos:column="58">(<argument><expr><literal type="string" pos:line="117" pos:column="59">"overwriting '%s'"<pos:position pos:line="117" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="117" pos:column="80">dst<pos:position pos:line="117" pos:column="83"/></name></expr></argument>)<pos:position pos:line="117" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="85"/></expr_stmt></block></then></if>
					<expr_stmt><expr><name pos:line="118" pos:column="41">bad<pos:position pos:line="118" pos:column="44"/></name> <operator pos:line="118" pos:column="45">=<pos:position pos:line="118" pos:column="46"/></operator> <name pos:line="118" pos:column="47">NULL<pos:position pos:line="118" pos:column="51"/></name></expr>;<pos:position pos:line="118" pos:column="52"/></expr_stmt>
				}<pos:position pos:line="119" pos:column="34"/></block></then> <else pos:line="119" pos:column="35">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="120" pos:column="41">bad<pos:position pos:line="120" pos:column="44"/></name> <operator pos:line="120" pos:column="45">=<pos:position pos:line="120" pos:column="46"/></operator> <call><name pos:line="120" pos:column="47">_<pos:position pos:line="120" pos:column="48"/></name><argument_list pos:line="120" pos:column="48">(<argument><expr><literal type="string" pos:line="120" pos:column="49">"Cannot overwrite"<pos:position pos:line="120" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="69"/></expr_stmt></block></else></if>
			}<pos:position pos:line="121" pos:column="26"/></block></then></if>
		}<pos:position pos:line="122" pos:column="18"/></block></then></if></elseif> <elseif pos:line="122" pos:column="19">else <if pos:line="122" pos:column="24">if <condition pos:line="122" pos:column="27">(<expr><call><name pos:line="122" pos:column="28">string_list_has_string<pos:position pos:line="122" pos:column="50"/></name><argument_list pos:line="122" pos:column="50">(<argument><expr><operator pos:line="122" pos:column="51">&amp;<pos:position pos:line="122" pos:column="56"/></operator><name pos:line="122" pos:column="52">src_for_dst<pos:position pos:line="122" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="65">dst<pos:position pos:line="122" pos:column="68"/></name></expr></argument>)<pos:position pos:line="122" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="70"/></condition><then pos:line="122" pos:column="70">
			<block type="pseudo"><expr_stmt><expr><name pos:line="123" pos:column="25">bad<pos:position pos:line="123" pos:column="28"/></name> <operator pos:line="123" pos:column="29">=<pos:position pos:line="123" pos:column="30"/></operator> <call><name pos:line="123" pos:column="31">_<pos:position pos:line="123" pos:column="32"/></name><argument_list pos:line="123" pos:column="32">(<argument><expr><literal type="string" pos:line="123" pos:column="33">"multiple sources for the same target"<pos:position pos:line="123" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="73"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="124" pos:column="17">else <if pos:line="124" pos:column="22">if <condition pos:line="124" pos:column="25">(<expr><call><name pos:line="124" pos:column="26">is_dir_sep<pos:position pos:line="124" pos:column="36"/></name><argument_list pos:line="124" pos:column="36">(<argument><expr><name><name pos:line="124" pos:column="37">dst<pos:position pos:line="124" pos:column="40"/></name><index pos:line="124" pos:column="40">[<expr><call><name pos:line="124" pos:column="41">strlen<pos:position pos:line="124" pos:column="47"/></name><argument_list pos:line="124" pos:column="47">(<argument><expr><name pos:line="124" pos:column="48">dst<pos:position pos:line="124" pos:column="51"/></name></expr></argument>)<pos:position pos:line="124" pos:column="52"/></argument_list></call> <operator pos:line="124" pos:column="53">-<pos:position pos:line="124" pos:column="54"/></operator> <literal type="number" pos:line="124" pos:column="55">1<pos:position pos:line="124" pos:column="56"/></literal></expr>]<pos:position pos:line="124" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="124" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="124" pos:column="59"/></condition><then pos:line="124" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name pos:line="125" pos:column="25">bad<pos:position pos:line="125" pos:column="28"/></name> <operator pos:line="125" pos:column="29">=<pos:position pos:line="125" pos:column="30"/></operator> <call><name pos:line="125" pos:column="31">_<pos:position pos:line="125" pos:column="32"/></name><argument_list pos:line="125" pos:column="32">(<argument><expr><literal type="string" pos:line="125" pos:column="33">"destination directory does not exist"<pos:position pos:line="125" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="73"/></expr_stmt></block></then></if></elseif>
		<else pos:line="126" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="127" pos:column="25">string_list_insert<pos:position pos:line="127" pos:column="43"/></name><argument_list pos:line="127" pos:column="43">(<argument><expr><operator pos:line="127" pos:column="44">&amp;<pos:position pos:line="127" pos:column="49"/></operator><name pos:line="127" pos:column="45">src_for_dst<pos:position pos:line="127" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="58">dst<pos:position pos:line="127" pos:column="61"/></name></expr></argument>)<pos:position pos:line="127" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="63"/></expr_stmt></block></else></if>

		<if pos:line="129" pos:column="17">if <condition pos:line="129" pos:column="20">(<expr><operator pos:line="129" pos:column="21">!<pos:position pos:line="129" pos:column="22"/></operator><name pos:line="129" pos:column="22">bad<pos:position pos:line="129" pos:column="25"/></name></expr>)<pos:position pos:line="129" pos:column="26"/></condition><then pos:line="129" pos:column="26">
			<block type="pseudo"><continue pos:line="130" pos:column="25">continue;<pos:position pos:line="130" pos:column="34"/></continue></block></then></if>
		<if pos:line="131" pos:column="17">if <condition pos:line="131" pos:column="20">(<expr><operator pos:line="131" pos:column="21">!<pos:position pos:line="131" pos:column="22"/></operator><name pos:line="131" pos:column="22">ignore_errors<pos:position pos:line="131" pos:column="35"/></name></expr>)<pos:position pos:line="131" pos:column="36"/></condition><then pos:line="131" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="132" pos:column="25">die<pos:position pos:line="132" pos:column="28"/></name><argument_list pos:line="132" pos:column="28">(<argument><expr><call><name pos:line="132" pos:column="29">_<pos:position pos:line="132" pos:column="30"/></name><argument_list pos:line="132" pos:column="30">(<argument><expr><literal type="string" pos:line="132" pos:column="31">"%s, source=%s, destination=%s"<pos:position pos:line="132" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="63"/></argument_list></call></expr></argument>,
			     <argument><expr><name pos:line="133" pos:column="30">bad<pos:position pos:line="133" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="35">src<pos:position pos:line="133" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="40">dst<pos:position pos:line="133" pos:column="43"/></name></expr></argument>)<pos:position pos:line="133" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="45"/></expr_stmt></block></then></if>
		<if pos:line="134" pos:column="17">if <condition pos:line="134" pos:column="20">(<expr><operator pos:line="134" pos:column="21">--<pos:position pos:line="134" pos:column="23"/></operator><name pos:line="134" pos:column="23">argc<pos:position pos:line="134" pos:column="27"/></name> <operator pos:line="134" pos:column="28">&gt;<pos:position pos:line="134" pos:column="32"/></operator> <literal type="number" pos:line="134" pos:column="30">0<pos:position pos:line="134" pos:column="31"/></literal></expr>)<pos:position pos:line="134" pos:column="32"/></condition><then pos:line="134" pos:column="32"> <block pos:line="134" pos:column="33">{
			<decl_stmt><decl><type><name pos:line="135" pos:column="25">int<pos:position pos:line="135" pos:column="28"/></name></type> <name pos:line="135" pos:column="29">n<pos:position pos:line="135" pos:column="30"/></name> <init pos:line="135" pos:column="31">= <expr><name pos:line="135" pos:column="33">argc<pos:position pos:line="135" pos:column="37"/></name> <operator pos:line="135" pos:column="38">-<pos:position pos:line="135" pos:column="39"/></operator> <name pos:line="135" pos:column="40">i<pos:position pos:line="135" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="135" pos:column="42"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="136" pos:column="25">memmove<pos:position pos:line="136" pos:column="32"/></name><argument_list pos:line="136" pos:column="32">(<argument><expr><name pos:line="136" pos:column="33">source<pos:position pos:line="136" pos:column="39"/></name> <operator pos:line="136" pos:column="40">+<pos:position pos:line="136" pos:column="41"/></operator> <name pos:line="136" pos:column="42">i<pos:position pos:line="136" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="45">source<pos:position pos:line="136" pos:column="51"/></name> <operator pos:line="136" pos:column="52">+<pos:position pos:line="136" pos:column="53"/></operator> <name pos:line="136" pos:column="54">i<pos:position pos:line="136" pos:column="55"/></name> <operator pos:line="136" pos:column="56">+<pos:position pos:line="136" pos:column="57"/></operator> <literal type="number" pos:line="136" pos:column="58">1<pos:position pos:line="136" pos:column="59"/></literal></expr></argument>,
				<argument><expr><name pos:line="137" pos:column="33">n<pos:position pos:line="137" pos:column="34"/></name> <operator pos:line="137" pos:column="35">*<pos:position pos:line="137" pos:column="36"/></operator> <sizeof pos:line="137" pos:column="37">sizeof<argument_list pos:line="137" pos:column="43">(<argument><expr><name pos:line="137" pos:column="44">char<pos:position pos:line="137" pos:column="48"/></name> <operator pos:line="137" pos:column="49">*<pos:position pos:line="137" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="137" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="137" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="138" pos:column="25">memmove<pos:position pos:line="138" pos:column="32"/></name><argument_list pos:line="138" pos:column="32">(<argument><expr><name pos:line="138" pos:column="33">destination<pos:position pos:line="138" pos:column="44"/></name> <operator pos:line="138" pos:column="45">+<pos:position pos:line="138" pos:column="46"/></operator> <name pos:line="138" pos:column="47">i<pos:position pos:line="138" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="50">destination<pos:position pos:line="138" pos:column="61"/></name> <operator pos:line="138" pos:column="62">+<pos:position pos:line="138" pos:column="63"/></operator> <name pos:line="138" pos:column="64">i<pos:position pos:line="138" pos:column="65"/></name> <operator pos:line="138" pos:column="66">+<pos:position pos:line="138" pos:column="67"/></operator> <literal type="number" pos:line="138" pos:column="68">1<pos:position pos:line="138" pos:column="69"/></literal></expr></argument>,
				<argument><expr><name pos:line="139" pos:column="33">n<pos:position pos:line="139" pos:column="34"/></name> <operator pos:line="139" pos:column="35">*<pos:position pos:line="139" pos:column="36"/></operator> <sizeof pos:line="139" pos:column="37">sizeof<argument_list pos:line="139" pos:column="43">(<argument><expr><name pos:line="139" pos:column="44">char<pos:position pos:line="139" pos:column="48"/></name> <operator pos:line="139" pos:column="49">*<pos:position pos:line="139" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="139" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="139" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="140" pos:column="25">memmove<pos:position pos:line="140" pos:column="32"/></name><argument_list pos:line="140" pos:column="32">(<argument><expr><name pos:line="140" pos:column="33">modes<pos:position pos:line="140" pos:column="38"/></name> <operator pos:line="140" pos:column="39">+<pos:position pos:line="140" pos:column="40"/></operator> <name pos:line="140" pos:column="41">i<pos:position pos:line="140" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="44">modes<pos:position pos:line="140" pos:column="49"/></name> <operator pos:line="140" pos:column="50">+<pos:position pos:line="140" pos:column="51"/></operator> <name pos:line="140" pos:column="52">i<pos:position pos:line="140" pos:column="53"/></name> <operator pos:line="140" pos:column="54">+<pos:position pos:line="140" pos:column="55"/></operator> <literal type="number" pos:line="140" pos:column="56">1<pos:position pos:line="140" pos:column="57"/></literal></expr></argument>,
				<argument><expr><name pos:line="141" pos:column="33">n<pos:position pos:line="141" pos:column="34"/></name> <operator pos:line="141" pos:column="35">*<pos:position pos:line="141" pos:column="36"/></operator> <sizeof pos:line="141" pos:column="37">sizeof<argument_list pos:line="141" pos:column="43">(<argument><expr pos:line="141" pos:column="44">enum <name pos:line="141" pos:column="49">update_mode<pos:position pos:line="141" pos:column="60"/></name></expr></argument>)<pos:position pos:line="141" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="141" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="142" pos:column="25">memmove<pos:position pos:line="142" pos:column="32"/></name><argument_list pos:line="142" pos:column="32">(<argument><expr><name pos:line="142" pos:column="33">submodule_gitfile<pos:position pos:line="142" pos:column="50"/></name> <operator pos:line="142" pos:column="51">+<pos:position pos:line="142" pos:column="52"/></operator> <name pos:line="142" pos:column="53">i<pos:position pos:line="142" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="56">submodule_gitfile<pos:position pos:line="142" pos:column="73"/></name> <operator pos:line="142" pos:column="74">+<pos:position pos:line="142" pos:column="75"/></operator> <name pos:line="142" pos:column="76">i<pos:position pos:line="142" pos:column="77"/></name> <operator pos:line="142" pos:column="78">+<pos:position pos:line="142" pos:column="79"/></operator> <literal type="number" pos:line="142" pos:column="80">1<pos:position pos:line="142" pos:column="81"/></literal></expr></argument>,
				<argument><expr><name pos:line="143" pos:column="33">n<pos:position pos:line="143" pos:column="34"/></name> <operator pos:line="143" pos:column="35">*<pos:position pos:line="143" pos:column="36"/></operator> <sizeof pos:line="143" pos:column="37">sizeof<argument_list pos:line="143" pos:column="43">(<argument><expr><name pos:line="143" pos:column="44">char<pos:position pos:line="143" pos:column="48"/></name> <operator pos:line="143" pos:column="49">*<pos:position pos:line="143" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="143" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="143" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name pos:line="144" pos:column="25">i<pos:position pos:line="144" pos:column="26"/></name><operator pos:line="144" pos:column="26">--<pos:position pos:line="144" pos:column="28"/></operator></expr>;<pos:position pos:line="144" pos:column="29"/></expr_stmt>
		}<pos:position pos:line="145" pos:column="18"/></block></then></if>
	}<pos:position pos:line="146" pos:column="10"/></block></for>

	<for pos:line="148" pos:column="9">for <control pos:line="148" pos:column="13">(<init><expr><name pos:line="148" pos:column="14">i<pos:position pos:line="148" pos:column="15"/></name> <operator pos:line="148" pos:column="16">=<pos:position pos:line="148" pos:column="17"/></operator> <literal type="number" pos:line="148" pos:column="18">0<pos:position pos:line="148" pos:column="19"/></literal></expr>;<pos:position pos:line="148" pos:column="20"/></init> <condition><expr><name pos:line="148" pos:column="21">i<pos:position pos:line="148" pos:column="22"/></name> <operator pos:line="148" pos:column="23">&lt;<pos:position pos:line="148" pos:column="27"/></operator> <name pos:line="148" pos:column="25">argc<pos:position pos:line="148" pos:column="29"/></name></expr>;<pos:position pos:line="148" pos:column="30"/></condition> <incr><expr><name pos:line="148" pos:column="31">i<pos:position pos:line="148" pos:column="32"/></name><operator pos:line="148" pos:column="32">++<pos:position pos:line="148" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="148" pos:column="35"/></control> <block pos:line="148" pos:column="36">{
		<decl_stmt><decl><type><specifier pos:line="149" pos:column="17">const<pos:position pos:line="149" pos:column="22"/></specifier> <name pos:line="149" pos:column="23">char<pos:position pos:line="149" pos:column="27"/></name> <modifier pos:line="149" pos:column="28">*<pos:position pos:line="149" pos:column="29"/></modifier></type><name pos:line="149" pos:column="29">src<pos:position pos:line="149" pos:column="32"/></name> <init pos:line="149" pos:column="33">= <expr><name><name pos:line="149" pos:column="35">source<pos:position pos:line="149" pos:column="41"/></name><index pos:line="149" pos:column="41">[<expr><name pos:line="149" pos:column="42">i<pos:position pos:line="149" pos:column="43"/></name></expr>]<pos:position pos:line="149" pos:column="44"/></index></name></expr></init></decl>, <modifier pos:line="149" pos:column="46">*<pos:position pos:line="149" pos:column="47"/></modifier><decl><type ref="prev"/><name pos:line="149" pos:column="47">dst<pos:position pos:line="149" pos:column="50"/></name> <init pos:line="149" pos:column="51">= <expr><name><name pos:line="149" pos:column="53">destination<pos:position pos:line="149" pos:column="64"/></name><index pos:line="149" pos:column="64">[<expr><name pos:line="149" pos:column="65">i<pos:position pos:line="149" pos:column="66"/></name></expr>]<pos:position pos:line="149" pos:column="67"/></index></name></expr></init></decl>;<pos:position pos:line="149" pos:column="68"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="150" pos:column="17">enum<pos:position pos:line="150" pos:column="21"/></name> <name pos:line="150" pos:column="22">update_mode<pos:position pos:line="150" pos:column="33"/></name></name></type> <name pos:line="150" pos:column="34">mode<pos:position pos:line="150" pos:column="38"/></name> <init pos:line="150" pos:column="39">= <expr><name><name pos:line="150" pos:column="41">modes<pos:position pos:line="150" pos:column="46"/></name><index pos:line="150" pos:column="46">[<expr><name pos:line="150" pos:column="47">i<pos:position pos:line="150" pos:column="48"/></name></expr>]<pos:position pos:line="150" pos:column="49"/></index></name></expr></init></decl>;<pos:position pos:line="150" pos:column="50"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="151" pos:column="17">int<pos:position pos:line="151" pos:column="20"/></name></type> <name pos:line="151" pos:column="21">pos<pos:position pos:line="151" pos:column="24"/></name></decl>;<pos:position pos:line="151" pos:column="25"/></decl_stmt>
		<if pos:line="152" pos:column="17">if <condition pos:line="152" pos:column="20">(<expr><name pos:line="152" pos:column="21">show_only<pos:position pos:line="152" pos:column="30"/></name> <operator pos:line="152" pos:column="31">||<pos:position pos:line="152" pos:column="33"/></operator> <name pos:line="152" pos:column="34">verbose<pos:position pos:line="152" pos:column="41"/></name></expr>)<pos:position pos:line="152" pos:column="42"/></condition><then pos:line="152" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="153" pos:column="25">printf<pos:position pos:line="153" pos:column="31"/></name><argument_list pos:line="153" pos:column="31">(<argument><expr><call><name pos:line="153" pos:column="32">_<pos:position pos:line="153" pos:column="33"/></name><argument_list pos:line="153" pos:column="33">(<argument><expr><literal type="string" pos:line="153" pos:column="34">"Renaming %s to %s\n"<pos:position pos:line="153" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="153" pos:column="58">src<pos:position pos:line="153" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="63">dst<pos:position pos:line="153" pos:column="66"/></name></expr></argument>)<pos:position pos:line="153" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="68"/></expr_stmt></block></then></if>
		<if pos:line="154" pos:column="17">if <condition pos:line="154" pos:column="20">(<expr><name pos:line="154" pos:column="21">show_only<pos:position pos:line="154" pos:column="30"/></name></expr>)<pos:position pos:line="154" pos:column="31"/></condition><then pos:line="154" pos:column="31">
			<block type="pseudo"><continue pos:line="155" pos:column="25">continue;<pos:position pos:line="155" pos:column="34"/></continue></block></then></if>
		<if pos:line="156" pos:column="17">if <condition pos:line="156" pos:column="20">(<expr><name pos:line="156" pos:column="21">mode<pos:position pos:line="156" pos:column="25"/></name> <operator pos:line="156" pos:column="26">!=<pos:position pos:line="156" pos:column="28"/></operator> <name pos:line="156" pos:column="29">INDEX<pos:position pos:line="156" pos:column="34"/></name> <operator pos:line="156" pos:column="35">&amp;&amp;<pos:position pos:line="156" pos:column="45"/></operator> <call><name pos:line="156" pos:column="38">rename<pos:position pos:line="156" pos:column="44"/></name><argument_list pos:line="156" pos:column="44">(<argument><expr><name pos:line="156" pos:column="45">src<pos:position pos:line="156" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="50">dst<pos:position pos:line="156" pos:column="53"/></name></expr></argument>)<pos:position pos:line="156" pos:column="54"/></argument_list></call> <operator pos:line="156" pos:column="55">&lt;<pos:position pos:line="156" pos:column="59"/></operator> <literal type="number" pos:line="156" pos:column="57">0<pos:position pos:line="156" pos:column="58"/></literal></expr>)<pos:position pos:line="156" pos:column="59"/></condition><then pos:line="156" pos:column="59"> <block pos:line="156" pos:column="60">{
			<if pos:line="157" pos:column="25">if <condition pos:line="157" pos:column="28">(<expr><name pos:line="157" pos:column="29">ignore_errors<pos:position pos:line="157" pos:column="42"/></name></expr>)<pos:position pos:line="157" pos:column="43"/></condition><then pos:line="157" pos:column="43">
				<block type="pseudo"><continue pos:line="158" pos:column="33">continue;<pos:position pos:line="158" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><call><name pos:line="159" pos:column="25">die_errno<pos:position pos:line="159" pos:column="34"/></name><argument_list pos:line="159" pos:column="34">(<argument><expr><call><name pos:line="159" pos:column="35">_<pos:position pos:line="159" pos:column="36"/></name><argument_list pos:line="159" pos:column="36">(<argument><expr><literal type="string" pos:line="159" pos:column="37">"renaming '%s' failed"<pos:position pos:line="159" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="159" pos:column="62">src<pos:position pos:line="159" pos:column="65"/></name></expr></argument>)<pos:position pos:line="159" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="160" pos:column="18"/></block></then></if>
		<if pos:line="161" pos:column="17">if <condition pos:line="161" pos:column="20">(<expr><name><name pos:line="161" pos:column="21">submodule_gitfile<pos:position pos:line="161" pos:column="38"/></name><index pos:line="161" pos:column="38">[<expr><name pos:line="161" pos:column="39">i<pos:position pos:line="161" pos:column="40"/></name></expr>]<pos:position pos:line="161" pos:column="41"/></index></name></expr>)<pos:position pos:line="161" pos:column="42"/></condition><then pos:line="161" pos:column="42"> <block pos:line="161" pos:column="43">{
			<if pos:line="162" pos:column="25">if <condition pos:line="162" pos:column="28">(<expr><name><name pos:line="162" pos:column="29">submodule_gitfile<pos:position pos:line="162" pos:column="46"/></name><index pos:line="162" pos:column="46">[<expr><name pos:line="162" pos:column="47">i<pos:position pos:line="162" pos:column="48"/></name></expr>]<pos:position pos:line="162" pos:column="49"/></index></name> <operator pos:line="162" pos:column="50">!=<pos:position pos:line="162" pos:column="52"/></operator> <name pos:line="162" pos:column="53">SUBMODULE_WITH_GITDIR<pos:position pos:line="162" pos:column="74"/></name></expr>)<pos:position pos:line="162" pos:column="75"/></condition><then pos:line="162" pos:column="75">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="163" pos:column="33">connect_work_tree_and_git_dir<pos:position pos:line="163" pos:column="62"/></name><argument_list pos:line="163" pos:column="62">(<argument><expr><name pos:line="163" pos:column="63">dst<pos:position pos:line="163" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="163" pos:column="68">submodule_gitfile<pos:position pos:line="163" pos:column="85"/></name><index pos:line="163" pos:column="85">[<expr><name pos:line="163" pos:column="86">i<pos:position pos:line="163" pos:column="87"/></name></expr>]<pos:position pos:line="163" pos:column="88"/></index></name></expr></argument>)<pos:position pos:line="163" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="90"/></expr_stmt></block></then></if>
			<if pos:line="164" pos:column="25">if <condition pos:line="164" pos:column="28">(<expr><operator pos:line="164" pos:column="29">!<pos:position pos:line="164" pos:column="30"/></operator><call><name pos:line="164" pos:column="30">update_path_in_gitmodules<pos:position pos:line="164" pos:column="55"/></name><argument_list pos:line="164" pos:column="55">(<argument><expr><name pos:line="164" pos:column="56">src<pos:position pos:line="164" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="61">dst<pos:position pos:line="164" pos:column="64"/></name></expr></argument>)<pos:position pos:line="164" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="164" pos:column="66"/></condition><then pos:line="164" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name pos:line="165" pos:column="33">gitmodules_modified<pos:position pos:line="165" pos:column="52"/></name> <operator pos:line="165" pos:column="53">=<pos:position pos:line="165" pos:column="54"/></operator> <literal type="number" pos:line="165" pos:column="55">1<pos:position pos:line="165" pos:column="56"/></literal></expr>;<pos:position pos:line="165" pos:column="57"/></expr_stmt></block></then></if>
		}<pos:position pos:line="166" pos:column="18"/></block></then></if>

		<if pos:line="168" pos:column="17">if <condition pos:line="168" pos:column="20">(<expr><name pos:line="168" pos:column="21">mode<pos:position pos:line="168" pos:column="25"/></name> <operator pos:line="168" pos:column="26">==<pos:position pos:line="168" pos:column="28"/></operator> <name pos:line="168" pos:column="29">WORKING_DIRECTORY<pos:position pos:line="168" pos:column="46"/></name></expr>)<pos:position pos:line="168" pos:column="47"/></condition><then pos:line="168" pos:column="47">
			<block type="pseudo"><continue pos:line="169" pos:column="25">continue;<pos:position pos:line="169" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="171" pos:column="17">pos<pos:position pos:line="171" pos:column="20"/></name> <operator pos:line="171" pos:column="21">=<pos:position pos:line="171" pos:column="22"/></operator> <call><name pos:line="171" pos:column="23">cache_name_pos<pos:position pos:line="171" pos:column="37"/></name><argument_list pos:line="171" pos:column="37">(<argument><expr><name pos:line="171" pos:column="38">src<pos:position pos:line="171" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="171" pos:column="43">strlen<pos:position pos:line="171" pos:column="49"/></name><argument_list pos:line="171" pos:column="49">(<argument><expr><name pos:line="171" pos:column="50">src<pos:position pos:line="171" pos:column="53"/></name></expr></argument>)<pos:position pos:line="171" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="171" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="172" pos:column="17">assert<pos:position pos:line="172" pos:column="23"/></name><argument_list pos:line="172" pos:column="23">(<argument><expr><name pos:line="172" pos:column="24">pos<pos:position pos:line="172" pos:column="27"/></name> <operator pos:line="172" pos:column="28">&gt;=<pos:position pos:line="172" pos:column="33"/></operator> <literal type="number" pos:line="172" pos:column="31">0<pos:position pos:line="172" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="34"/></expr_stmt>
		<if pos:line="173" pos:column="17">if <condition pos:line="173" pos:column="20">(<expr><operator pos:line="173" pos:column="21">!<pos:position pos:line="173" pos:column="22"/></operator><name pos:line="173" pos:column="22">show_only<pos:position pos:line="173" pos:column="31"/></name></expr>)<pos:position pos:line="173" pos:column="32"/></condition><then pos:line="173" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="174" pos:column="25">rename_cache_entry_at<pos:position pos:line="174" pos:column="46"/></name><argument_list pos:line="174" pos:column="46">(<argument><expr><name pos:line="174" pos:column="47">pos<pos:position pos:line="174" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="52">dst<pos:position pos:line="174" pos:column="55"/></name></expr></argument>)<pos:position pos:line="174" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="57"/></expr_stmt></block></then></if>
	}<pos:position pos:line="175" pos:column="10"/></block></for>

	<if pos:line="177" pos:column="9">if <condition pos:line="177" pos:column="12">(<expr><name pos:line="177" pos:column="13">gitmodules_modified<pos:position pos:line="177" pos:column="32"/></name></expr>)<pos:position pos:line="177" pos:column="33"/></condition><then pos:line="177" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="178" pos:column="17">stage_updated_gitmodules<pos:position pos:line="178" pos:column="41"/></name><argument_list pos:line="178" pos:column="41">()<pos:position pos:line="178" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="44"/></expr_stmt></block></then></if>

	<if pos:line="180" pos:column="9">if <condition pos:line="180" pos:column="12">(<expr><name pos:line="180" pos:column="13">active_cache_changed<pos:position pos:line="180" pos:column="33"/></name> <operator pos:line="180" pos:column="34">&amp;&amp;<pos:position pos:line="180" pos:column="44"/></operator>
	    <call><name pos:line="181" pos:column="13">write_locked_index<pos:position pos:line="181" pos:column="31"/></name><argument_list pos:line="181" pos:column="31">(<argument><expr><operator pos:line="181" pos:column="32">&amp;<pos:position pos:line="181" pos:column="37"/></operator><name pos:line="181" pos:column="33">the_index<pos:position pos:line="181" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="181" pos:column="44">&amp;<pos:position pos:line="181" pos:column="49"/></operator><name pos:line="181" pos:column="45">lock_file<pos:position pos:line="181" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="56">COMMIT_LOCK<pos:position pos:line="181" pos:column="67"/></name></expr></argument>)<pos:position pos:line="181" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="181" pos:column="69"/></condition><then pos:line="181" pos:column="69">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="182" pos:column="17">die<pos:position pos:line="182" pos:column="20"/></name><argument_list pos:line="182" pos:column="20">(<argument><expr><call><name pos:line="182" pos:column="21">_<pos:position pos:line="182" pos:column="22"/></name><argument_list pos:line="182" pos:column="22">(<argument><expr><literal type="string" pos:line="182" pos:column="23">"Unable to write new index file"<pos:position pos:line="182" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="182" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="58"/></expr_stmt></block></then></if>

	<return pos:line="184" pos:column="9">return <expr><literal type="number" pos:line="184" pos:column="16">0<pos:position pos:line="184" pos:column="17"/></literal></expr>;<pos:position pos:line="184" pos:column="18"/></return>
}<pos:position pos:line="185" pos:column="2"/></block></function></unit>

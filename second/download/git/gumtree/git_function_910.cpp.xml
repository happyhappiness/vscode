<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_910.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">vreportf<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><specifier pos:line="1" pos:column="15">const<pos:position pos:line="1" pos:column="20"/></specifier> <name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">prefix<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">err<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">va_list<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">params<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">fh<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><ternary><condition><expr><name pos:line="3" pos:column="20">error_handle<pos:position pos:line="3" pos:column="32"/></name></expr> ?<pos:position pos:line="3" pos:column="34"/></condition><then pos:line="3" pos:column="34"> <expr><name pos:line="3" pos:column="35">error_handle<pos:position pos:line="3" pos:column="47"/></name></expr> <pos:position pos:line="3" pos:column="48"/></then><else pos:line="3" pos:column="48">: <expr><name pos:line="3" pos:column="50">stderr<pos:position pos:line="3" pos:column="56"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="3" pos:column="57"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">fflush<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">fh<pos:position pos:line="5" pos:column="18"/></name></expr></argument>)<pos:position pos:line="5" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="20"/></expr_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">tweaked_error_buffering<pos:position pos:line="6" pos:column="37"/></name></expr>)<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38"> <block pos:line="6" pos:column="39">{
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">setvbuf<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">fh<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="29">NULL<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="35">_IOLBF<pos:position pos:line="7" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="43">0<pos:position pos:line="7" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="8" pos:column="17">tweaked_error_buffering<pos:position pos:line="8" pos:column="40"/></name> <operator pos:line="8" pos:column="41">=<pos:position pos:line="8" pos:column="42"/></operator> <literal type="number" pos:line="8" pos:column="43">1<pos:position pos:line="8" pos:column="44"/></literal></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">fputs<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">prefix<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="23">fh<pos:position pos:line="11" pos:column="25"/></name></expr></argument>)<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">vfprintf<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">fh<pos:position pos:line="12" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="22">err<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="27">params<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">fputc<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><literal type="char" pos:line="13" pos:column="15">'\n'<pos:position pos:line="13" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="21">fh<pos:position pos:line="13" pos:column="23"/></name></expr></argument>)<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

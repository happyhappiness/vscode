<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6455_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">split_symref_update<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">files_ref_store<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">refs<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
			       <parameter><decl><type><name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">ref_update<pos:position pos:line="2" pos:column="49"/></name></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">update<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
			       <parameter><decl><type><specifier pos:line="3" pos:column="32">const<pos:position pos:line="3" pos:column="37"/></specifier> <name pos:line="3" pos:column="38">char<pos:position pos:line="3" pos:column="42"/></name> <modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier></type><name pos:line="3" pos:column="44">referent<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>,
			       <parameter><decl><type><name><name pos:line="4" pos:column="32">struct<pos:position pos:line="4" pos:column="38"/></name> <name pos:line="4" pos:column="39">ref_transaction<pos:position pos:line="4" pos:column="54"/></name></name> <modifier pos:line="4" pos:column="55">*<pos:position pos:line="4" pos:column="56"/></modifier></type><name pos:line="4" pos:column="56">transaction<pos:position pos:line="4" pos:column="67"/></name></decl></parameter>,
			       <parameter><decl><type><name><name pos:line="5" pos:column="32">struct<pos:position pos:line="5" pos:column="38"/></name> <name pos:line="5" pos:column="39">string_list<pos:position pos:line="5" pos:column="50"/></name></name> <modifier pos:line="5" pos:column="51">*<pos:position pos:line="5" pos:column="52"/></modifier></type><name pos:line="5" pos:column="52">affected_refnames<pos:position pos:line="5" pos:column="69"/></name></decl></parameter>,
			       <parameter><decl><type><name><name pos:line="6" pos:column="32">struct<pos:position pos:line="6" pos:column="38"/></name> <name pos:line="6" pos:column="39">strbuf<pos:position pos:line="6" pos:column="45"/></name></name> <modifier pos:line="6" pos:column="46">*<pos:position pos:line="6" pos:column="47"/></modifier></type><name pos:line="6" pos:column="47">err<pos:position pos:line="6" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="51"/></parameter_list>
<block pos:line="7" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">string_list_item<pos:position pos:line="8" pos:column="32"/></name></name> <modifier pos:line="8" pos:column="33">*<pos:position pos:line="8" pos:column="34"/></modifier></type><name pos:line="8" pos:column="34">item<pos:position pos:line="8" pos:column="38"/></name></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">ref_update<pos:position pos:line="9" pos:column="26"/></name></name> <modifier pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></modifier></type><name pos:line="9" pos:column="28">new_update<pos:position pos:line="9" pos:column="38"/></name></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">unsigned<pos:position pos:line="10" pos:column="17"/></name> <name pos:line="10" pos:column="18">int<pos:position pos:line="10" pos:column="21"/></name></type> <name pos:line="10" pos:column="22">new_flags<pos:position pos:line="10" pos:column="31"/></name></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>

	<comment type="block" pos:line="12" pos:column="9">/*
	 * First make sure that referent is not already in the
	 * transaction. This insertion is O(N) in the transaction
	 * size, but it happens at most once per symref in a
	 * transaction.
	 */</comment>
	<expr_stmt><expr><name pos:line="18" pos:column="9">item<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <call><name pos:line="18" pos:column="16">string_list_insert<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><name pos:line="18" pos:column="35">affected_refnames<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">referent<pos:position pos:line="18" pos:column="62"/></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">item<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">util<pos:position pos:line="19" pos:column="23"/></name></name></expr>)<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24"> <block pos:line="19" pos:column="25">{
		<comment type="block" pos:line="20" pos:column="17">/* An entry already existed */</comment>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">strbuf_addf<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">err<pos:position pos:line="21" pos:column="32"/></name></expr></argument>,
			    <argument><expr><literal type="string" pos:line="22" pos:column="29">"multiple updates for '%s' (including one "<pos:position pos:line="22" pos:column="72"/></literal>
			    <literal type="string" pos:line="23" pos:column="29">"via symref '%s') are not allowed"<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>,
			    <argument><expr><name pos:line="24" pos:column="29">referent<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="39">update<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="47">refname<pos:position pos:line="24" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="56"/></expr_stmt>
		<return pos:line="25" pos:column="17">return <expr><name pos:line="25" pos:column="24">TRANSACTION_NAME_CONFLICT<pos:position pos:line="25" pos:column="49"/></name></expr>;<pos:position pos:line="25" pos:column="50"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="28" pos:column="9">new_flags<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <name><name pos:line="28" pos:column="21">update<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">-&gt;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="29">flags<pos:position pos:line="28" pos:column="34"/></name></name></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><call><name pos:line="29" pos:column="14">strcmp<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name><name pos:line="29" pos:column="21">update<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">refname<pos:position pos:line="29" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="38">"HEAD"<pos:position pos:line="29" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="46"/></condition><then pos:line="29" pos:column="46"> <block pos:line="29" pos:column="47">{
		<comment type="block" pos:line="30" pos:column="17">/*
		 * Record that the new update came via HEAD, so that
		 * when we process it, split_head_update() doesn't try
		 * to add another reflog update for HEAD. Note that
		 * this bit will be propagated if the new_update
		 * itself needs to be split.
		 */</comment>
		<expr_stmt><expr><name pos:line="37" pos:column="17">new_flags<pos:position pos:line="37" pos:column="26"/></name> <operator pos:line="37" pos:column="27">|=<pos:position pos:line="37" pos:column="29"/></operator> <name pos:line="37" pos:column="30">REF_UPDATE_VIA_HEAD<pos:position pos:line="37" pos:column="49"/></name></expr>;<pos:position pos:line="37" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="40" pos:column="9">new_update<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <call><name pos:line="40" pos:column="22">ref_transaction_add_update<pos:position pos:line="40" pos:column="48"/></name><argument_list pos:line="40" pos:column="48">(
			<argument><expr><name pos:line="41" pos:column="25">transaction<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="38">referent<pos:position pos:line="41" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="48">new_flags<pos:position pos:line="41" pos:column="57"/></name></expr></argument>,
			<argument><expr><name><name pos:line="42" pos:column="25">update<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">-&gt;<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="33">new_oid<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">.<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="41">hash<pos:position pos:line="42" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="47">update<pos:position pos:line="42" pos:column="53"/></name><operator pos:line="42" pos:column="53">-&gt;<pos:position pos:line="42" pos:column="58"/></operator><name pos:line="42" pos:column="55">old_oid<pos:position pos:line="42" pos:column="62"/></name><operator pos:line="42" pos:column="62">.<pos:position pos:line="42" pos:column="63"/></operator><name pos:line="42" pos:column="63">hash<pos:position pos:line="42" pos:column="67"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="43" pos:column="25">update<pos:position pos:line="43" pos:column="31"/></name><operator pos:line="43" pos:column="31">-&gt;<pos:position pos:line="43" pos:column="36"/></operator><name pos:line="43" pos:column="33">msg<pos:position pos:line="43" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="45" pos:column="9">new_update<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">-&gt;<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="21">parent_update<pos:position pos:line="45" pos:column="34"/></name></name> <operator pos:line="45" pos:column="35">=<pos:position pos:line="45" pos:column="36"/></operator> <name pos:line="45" pos:column="37">update<pos:position pos:line="45" pos:column="43"/></name></expr>;<pos:position pos:line="45" pos:column="44"/></expr_stmt>

	<comment type="block" pos:line="47" pos:column="9">/*
	 * Change the symbolic ref update to log only. Also, it
	 * doesn't need to check its old SHA-1 value, as that will be
	 * done when new_update is processed.
	 */</comment>
	<expr_stmt><expr><name><name pos:line="52" pos:column="9">update<pos:position pos:line="52" pos:column="15"/></name><operator pos:line="52" pos:column="15">-&gt;<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="17">flags<pos:position pos:line="52" pos:column="22"/></name></name> <operator pos:line="52" pos:column="23">|=<pos:position pos:line="52" pos:column="25"/></operator> <name pos:line="52" pos:column="26">REF_LOG_ONLY<pos:position pos:line="52" pos:column="38"/></name> <operator pos:line="52" pos:column="39">|<pos:position pos:line="52" pos:column="40"/></operator> <name pos:line="52" pos:column="41">REF_NODEREF<pos:position pos:line="52" pos:column="52"/></name></expr>;<pos:position pos:line="52" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="53" pos:column="9">update<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">-&gt;<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="17">flags<pos:position pos:line="53" pos:column="22"/></name></name> <operator pos:line="53" pos:column="23">&amp;=<pos:position pos:line="53" pos:column="29"/></operator> <operator pos:line="53" pos:column="26">~<pos:position pos:line="53" pos:column="27"/></operator><name pos:line="53" pos:column="27">REF_HAVE_OLD<pos:position pos:line="53" pos:column="39"/></name></expr>;<pos:position pos:line="53" pos:column="40"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="55" pos:column="9">item<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">-&gt;<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="15">util<pos:position pos:line="55" pos:column="19"/></name></name> <operator pos:line="55" pos:column="20">=<pos:position pos:line="55" pos:column="21"/></operator> <name pos:line="55" pos:column="22">new_update<pos:position pos:line="55" pos:column="32"/></name></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt>

	<return pos:line="57" pos:column="9">return <expr><literal type="number" pos:line="57" pos:column="16">0<pos:position pos:line="57" pos:column="17"/></literal></expr>;<pos:position pos:line="57" pos:column="18"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

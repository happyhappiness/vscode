<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_758_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">wt_shortstatus_print_tracking<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">wt_status<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">s<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">branch<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">branch<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">header_color<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><call><name pos:line="4" pos:column="36">color<pos:position pos:line="4" pos:column="41"/></name><argument_list pos:line="4" pos:column="41">(<argument><expr><name pos:line="4" pos:column="42">WT_STATUS_HEADER<pos:position pos:line="4" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="60">s<pos:position pos:line="4" pos:column="61"/></name></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="63"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">branch_color_local<pos:position pos:line="5" pos:column="39"/></name> <init pos:line="5" pos:column="40">= <expr><call><name pos:line="5" pos:column="42">color<pos:position pos:line="5" pos:column="47"/></name><argument_list pos:line="5" pos:column="47">(<argument><expr><name pos:line="5" pos:column="48">WT_STATUS_LOCAL_BRANCH<pos:position pos:line="5" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="72">s<pos:position pos:line="5" pos:column="73"/></name></expr></argument>)<pos:position pos:line="5" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="75"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">branch_color_remote<pos:position pos:line="6" pos:column="40"/></name> <init pos:line="6" pos:column="41">= <expr><call><name pos:line="6" pos:column="43">color<pos:position pos:line="6" pos:column="48"/></name><argument_list pos:line="6" pos:column="48">(<argument><expr><name pos:line="6" pos:column="49">WT_STATUS_REMOTE_BRANCH<pos:position pos:line="6" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="74">s<pos:position pos:line="6" pos:column="75"/></name></expr></argument>)<pos:position pos:line="6" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="77"/></decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">base<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">branch_name<pos:position pos:line="9" pos:column="32"/></name></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">num_ours<pos:position pos:line="10" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="23">num_theirs<pos:position pos:line="10" pos:column="33"/></name></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">upstream_is_gone<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">color_fprintf<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name><name pos:line="13" pos:column="23">s<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">-&gt;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="26">fp<pos:position pos:line="13" pos:column="28"/></name></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="30">color<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">WT_STATUS_HEADER<pos:position pos:line="13" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="54">s<pos:position pos:line="13" pos:column="55"/></name></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="58">"## "<pos:position pos:line="13" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name><name pos:line="15" pos:column="14">s<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">-&gt;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="17">branch<pos:position pos:line="15" pos:column="23"/></name></name></expr>)<pos:position pos:line="15" pos:column="24"/></condition><then pos:line="15" pos:column="24">
		<block type="pseudo"><return pos:line="16" pos:column="17">return;<pos:position pos:line="16" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">branch_name<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <name><name pos:line="17" pos:column="23">s<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">branch<pos:position pos:line="17" pos:column="32"/></name></name></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">starts_with<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">branch_name<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="38">"refs/heads/"<pos:position pos:line="19" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="53"/></condition><then pos:line="19" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="17">branch_name<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">+=<pos:position pos:line="20" pos:column="31"/></operator> <literal type="number" pos:line="20" pos:column="32">11<pos:position pos:line="20" pos:column="34"/></literal></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt></block></then>
	<elseif pos:line="21" pos:column="9">else <if pos:line="21" pos:column="14">if <condition pos:line="21" pos:column="17">(<expr><operator pos:line="21" pos:column="18">!<pos:position pos:line="21" pos:column="19"/></operator><call><name pos:line="21" pos:column="19">strcmp<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">branch_name<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="39">"HEAD"<pos:position pos:line="21" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="47"/></condition><then pos:line="21" pos:column="47"> <block pos:line="21" pos:column="48">{
		<expr_stmt><expr><name pos:line="22" pos:column="17">branch_name<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <call><name pos:line="22" pos:column="31">_<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><literal type="string" pos:line="22" pos:column="33">"HEAD (no branch)"<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">branch_color_local<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <call><name pos:line="23" pos:column="38">color<pos:position pos:line="23" pos:column="43"/></name><argument_list pos:line="23" pos:column="43">(<argument><expr><name pos:line="23" pos:column="44">WT_STATUS_NOBRANCH<pos:position pos:line="23" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="64">s<pos:position pos:line="23" pos:column="65"/></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><name pos:line="26" pos:column="9">branch<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <call><name pos:line="26" pos:column="18">branch_get<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name><name pos:line="26" pos:column="29">s<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">branch<pos:position pos:line="26" pos:column="38"/></name></name> <operator pos:line="26" pos:column="39">+<pos:position pos:line="26" pos:column="40"/></operator> <literal type="number" pos:line="26" pos:column="41">11<pos:position pos:line="26" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">s<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">-&gt;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="16">is_initial<pos:position pos:line="27" pos:column="26"/></name></name></expr>)<pos:position pos:line="27" pos:column="27"/></condition><then pos:line="27" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">color_fprintf<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name><name pos:line="28" pos:column="31">s<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">fp<pos:position pos:line="28" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">header_color<pos:position pos:line="28" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="52">_<pos:position pos:line="28" pos:column="53"/></name><argument_list pos:line="28" pos:column="53">(<argument><expr><literal type="string" pos:line="28" pos:column="54">"Initial commit on "<pos:position pos:line="28" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="77"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="30" pos:column="9">color_fprintf<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name><name pos:line="30" pos:column="23">s<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">fp<pos:position pos:line="30" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="30">branch_color_local<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="50">"%s"<pos:position pos:line="30" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="56">branch_name<pos:position pos:line="30" pos:column="67"/></name></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="69"/></expr_stmt>

	<switch pos:line="32" pos:column="9">switch <condition pos:line="32" pos:column="16">(<expr><call><name pos:line="32" pos:column="17">stat_tracking_info<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">branch<pos:position pos:line="32" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="44">&amp;<pos:position pos:line="32" pos:column="49"/></operator><name pos:line="32" pos:column="45">num_ours<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="55">&amp;<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="56">num_theirs<pos:position pos:line="32" pos:column="66"/></name></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="68"/></condition> <block pos:line="32" pos:column="69">{
	<case pos:line="33" pos:column="9">case <expr><literal type="number" pos:line="33" pos:column="14">0<pos:position pos:line="33" pos:column="15"/></literal></expr>:<pos:position pos:line="33" pos:column="16"/></case>
		<comment type="block" pos:line="34" pos:column="17">/* no base */</comment>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">fputc<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><ternary><condition><expr><name><name pos:line="35" pos:column="23">s<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">-&gt;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="26">null_termination<pos:position pos:line="35" pos:column="42"/></name></name></expr> ?<pos:position pos:line="35" pos:column="44"/></condition><then pos:line="35" pos:column="44"> <expr><literal type="char" pos:line="35" pos:column="45">'\0'<pos:position pos:line="35" pos:column="49"/></literal></expr> <pos:position pos:line="35" pos:column="50"/></then><else pos:line="35" pos:column="50">: <expr><literal type="char" pos:line="35" pos:column="52">'\n'<pos:position pos:line="35" pos:column="56"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="58">s<pos:position pos:line="35" pos:column="59"/></name><operator pos:line="35" pos:column="59">-&gt;<pos:position pos:line="35" pos:column="64"/></operator><name pos:line="35" pos:column="61">fp<pos:position pos:line="35" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
		<return pos:line="36" pos:column="17">return;<pos:position pos:line="36" pos:column="24"/></return>
	<case pos:line="37" pos:column="9">case <expr><operator pos:line="37" pos:column="14">-<pos:position pos:line="37" pos:column="15"/></operator><literal type="number" pos:line="37" pos:column="15">1<pos:position pos:line="37" pos:column="16"/></literal></expr>:<pos:position pos:line="37" pos:column="17"/></case>
		<comment type="block" pos:line="38" pos:column="17">/* with "gone" base */</comment>
		<expr_stmt><expr><name pos:line="39" pos:column="17">upstream_is_gone<pos:position pos:line="39" pos:column="33"/></name> <operator pos:line="39" pos:column="34">=<pos:position pos:line="39" pos:column="35"/></operator> <literal type="number" pos:line="39" pos:column="36">1<pos:position pos:line="39" pos:column="37"/></literal></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
		<break pos:line="40" pos:column="17">break;<pos:position pos:line="40" pos:column="23"/></break>
	<default pos:line="41" pos:column="9">default:<pos:position pos:line="41" pos:column="17"/></default>
		<comment type="block" pos:line="42" pos:column="17">/* with base */</comment>
		<break pos:line="43" pos:column="17">break;<pos:position pos:line="43" pos:column="23"/></break>
	}<pos:position pos:line="44" pos:column="10"/></block></switch>

	<expr_stmt><expr><name pos:line="46" pos:column="9">base<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <name><name pos:line="46" pos:column="16">branch<pos:position pos:line="46" pos:column="22"/></name><operator pos:line="46" pos:column="22">-&gt;<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="24">merge<pos:position pos:line="46" pos:column="29"/></name><index pos:line="46" pos:column="29">[<expr><literal type="number" pos:line="46" pos:column="30">0<pos:position pos:line="46" pos:column="31"/></literal></expr>]<pos:position pos:line="46" pos:column="32"/></index></name><operator pos:line="46" pos:column="32">-&gt;<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="34">dst<pos:position pos:line="46" pos:column="37"/></name></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name pos:line="47" pos:column="9">base<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <call><name pos:line="47" pos:column="16">shorten_unambiguous_ref<pos:position pos:line="47" pos:column="39"/></name><argument_list pos:line="47" pos:column="39">(<argument><expr><name pos:line="47" pos:column="40">base<pos:position pos:line="47" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="46">0<pos:position pos:line="47" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">color_fprintf<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><name><name pos:line="48" pos:column="23">s<pos:position pos:line="48" pos:column="24"/></name><operator pos:line="48" pos:column="24">-&gt;<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="26">fp<pos:position pos:line="48" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="30">header_color<pos:position pos:line="48" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="44">"..."<pos:position pos:line="48" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">color_fprintf<pos:position pos:line="49" pos:column="22"/></name><argument_list pos:line="49" pos:column="22">(<argument><expr><name><name pos:line="49" pos:column="23">s<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">-&gt;<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="26">fp<pos:position pos:line="49" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="30">branch_color_remote<pos:position pos:line="49" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="51">"%s"<pos:position pos:line="49" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="57">base<pos:position pos:line="49" pos:column="61"/></name></expr></argument>)<pos:position pos:line="49" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="63"/></expr_stmt>

	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">!<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">upstream_is_gone<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">&amp;&amp;<pos:position pos:line="51" pos:column="41"/></operator> <operator pos:line="51" pos:column="34">!<pos:position pos:line="51" pos:column="35"/></operator><name pos:line="51" pos:column="35">num_ours<pos:position pos:line="51" pos:column="43"/></name> <operator pos:line="51" pos:column="44">&amp;&amp;<pos:position pos:line="51" pos:column="54"/></operator> <operator pos:line="51" pos:column="47">!<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="48">num_theirs<pos:position pos:line="51" pos:column="58"/></name></expr>)<pos:position pos:line="51" pos:column="59"/></condition><then pos:line="51" pos:column="59"> <block pos:line="51" pos:column="60">{
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">fputc<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><ternary><condition><expr><name><name pos:line="52" pos:column="23">s<pos:position pos:line="52" pos:column="24"/></name><operator pos:line="52" pos:column="24">-&gt;<pos:position pos:line="52" pos:column="29"/></operator><name pos:line="52" pos:column="26">null_termination<pos:position pos:line="52" pos:column="42"/></name></name></expr> ?<pos:position pos:line="52" pos:column="44"/></condition><then pos:line="52" pos:column="44"> <expr><literal type="char" pos:line="52" pos:column="45">'\0'<pos:position pos:line="52" pos:column="49"/></literal></expr> <pos:position pos:line="52" pos:column="50"/></then><else pos:line="52" pos:column="50">: <expr><literal type="char" pos:line="52" pos:column="52">'\n'<pos:position pos:line="52" pos:column="56"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="58">s<pos:position pos:line="52" pos:column="59"/></name><operator pos:line="52" pos:column="59">-&gt;<pos:position pos:line="52" pos:column="64"/></operator><name pos:line="52" pos:column="61">fp<pos:position pos:line="52" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="65"/></expr_stmt>
		<return pos:line="53" pos:column="17">return;<pos:position pos:line="53" pos:column="24"/></return>
	}<pos:position pos:line="54" pos:column="10"/></block></then></if>

<cpp:define pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">define<pos:position pos:line="56" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="56" pos:column="9">LABEL<pos:position pos:line="56" pos:column="14"/></name><parameter_list pos:line="56" pos:column="14">(<parameter><type><name pos:line="56" pos:column="15">string<pos:position pos:line="56" pos:column="21"/></name></type></parameter>)<pos:position pos:line="56" pos:column="22"/></parameter_list></cpp:macro> <cpp:value pos:line="56" pos:column="23">(s-&gt;no_gettext ? (string) : _(string))<pos:position pos:line="56" pos:column="61"/></cpp:value></cpp:define>

	<expr_stmt><expr><call><name pos:line="58" pos:column="9">color_fprintf<pos:position pos:line="58" pos:column="22"/></name><argument_list pos:line="58" pos:column="22">(<argument><expr><name><name pos:line="58" pos:column="23">s<pos:position pos:line="58" pos:column="24"/></name><operator pos:line="58" pos:column="24">-&gt;<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="26">fp<pos:position pos:line="58" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="30">header_color<pos:position pos:line="58" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="44">" ["<pos:position pos:line="58" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="50"/></expr_stmt>
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">upstream_is_gone<pos:position pos:line="59" pos:column="29"/></name></expr>)<pos:position pos:line="59" pos:column="30"/></condition><then pos:line="59" pos:column="30"> <block pos:line="59" pos:column="31">{
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">color_fprintf<pos:position pos:line="60" pos:column="30"/></name><argument_list pos:line="60" pos:column="30">(<argument><expr><name><name pos:line="60" pos:column="31">s<pos:position pos:line="60" pos:column="32"/></name><operator pos:line="60" pos:column="32">-&gt;<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="34">fp<pos:position pos:line="60" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="38">header_color<pos:position pos:line="60" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="52">LABEL<pos:position pos:line="60" pos:column="57"/></name><argument_list pos:line="60" pos:column="57">(<argument><expr><call><name pos:line="60" pos:column="58">N_<pos:position pos:line="60" pos:column="60"/></name><argument_list pos:line="60" pos:column="60">(<argument><expr><literal type="string" pos:line="60" pos:column="61">"gone"<pos:position pos:line="60" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="71"/></expr_stmt>
	}<pos:position pos:line="61" pos:column="10"/></block></then> <elseif pos:line="61" pos:column="11">else <if pos:line="61" pos:column="16">if <condition pos:line="61" pos:column="19">(<expr><operator pos:line="61" pos:column="20">!<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="21">num_ours<pos:position pos:line="61" pos:column="29"/></name></expr>)<pos:position pos:line="61" pos:column="30"/></condition><then pos:line="61" pos:column="30"> <block pos:line="61" pos:column="31">{
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">color_fprintf<pos:position pos:line="62" pos:column="30"/></name><argument_list pos:line="62" pos:column="30">(<argument><expr><name><name pos:line="62" pos:column="31">s<pos:position pos:line="62" pos:column="32"/></name><operator pos:line="62" pos:column="32">-&gt;<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="34">fp<pos:position pos:line="62" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="38">header_color<pos:position pos:line="62" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="52">LABEL<pos:position pos:line="62" pos:column="57"/></name><argument_list pos:line="62" pos:column="57">(<argument><expr><call><name pos:line="62" pos:column="58">N_<pos:position pos:line="62" pos:column="60"/></name><argument_list pos:line="62" pos:column="60">(<argument><expr><literal type="string" pos:line="62" pos:column="61">"behind "<pos:position pos:line="62" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">color_fprintf<pos:position pos:line="63" pos:column="30"/></name><argument_list pos:line="63" pos:column="30">(<argument><expr><name><name pos:line="63" pos:column="31">s<pos:position pos:line="63" pos:column="32"/></name><operator pos:line="63" pos:column="32">-&gt;<pos:position pos:line="63" pos:column="37"/></operator><name pos:line="63" pos:column="34">fp<pos:position pos:line="63" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="38">branch_color_remote<pos:position pos:line="63" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="59">"%d"<pos:position pos:line="63" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="65">num_theirs<pos:position pos:line="63" pos:column="75"/></name></expr></argument>)<pos:position pos:line="63" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="64" pos:column="10"/></block></then></if></elseif> <elseif pos:line="64" pos:column="11">else <if pos:line="64" pos:column="16">if <condition pos:line="64" pos:column="19">(<expr><operator pos:line="64" pos:column="20">!<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="21">num_theirs<pos:position pos:line="64" pos:column="31"/></name></expr>)<pos:position pos:line="64" pos:column="32"/></condition><then pos:line="64" pos:column="32"> <block pos:line="64" pos:column="33">{
		<expr_stmt><expr><call><name pos:line="65" pos:column="17">color_fprintf<pos:position pos:line="65" pos:column="30"/></name><argument_list pos:line="65" pos:column="30">(<argument><expr><name><name pos:line="65" pos:column="31">s<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">-&gt;<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="34">fp<pos:position pos:line="65" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="38">header_color<pos:position pos:line="65" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="52">LABEL<pos:position pos:line="65" pos:column="57"/></name><argument_list pos:line="65" pos:column="57">(<argument><expr><call><name pos:line="65" pos:column="58">N_<pos:position pos:line="65" pos:column="60"/></name><argument_list pos:line="65" pos:column="60">(<argument><expr><operator pos:line="65" pos:column="61">(<pos:position pos:line="65" pos:column="62"/></operator><literal type="string" pos:line="65" pos:column="62">"ahead "<pos:position pos:line="65" pos:column="70"/></literal><operator pos:line="65" pos:column="70">)<pos:position pos:line="65" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="65" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="66" pos:column="17">color_fprintf<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><name><name pos:line="66" pos:column="31">s<pos:position pos:line="66" pos:column="32"/></name><operator pos:line="66" pos:column="32">-&gt;<pos:position pos:line="66" pos:column="37"/></operator><name pos:line="66" pos:column="34">fp<pos:position pos:line="66" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="38">branch_color_local<pos:position pos:line="66" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="58">"%d"<pos:position pos:line="66" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="64">num_ours<pos:position pos:line="66" pos:column="72"/></name></expr></argument>)<pos:position pos:line="66" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="67" pos:column="10"/></block></then></if></elseif> <else pos:line="67" pos:column="11">else <block pos:line="67" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="68" pos:column="17">color_fprintf<pos:position pos:line="68" pos:column="30"/></name><argument_list pos:line="68" pos:column="30">(<argument><expr><name><name pos:line="68" pos:column="31">s<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">-&gt;<pos:position pos:line="68" pos:column="37"/></operator><name pos:line="68" pos:column="34">fp<pos:position pos:line="68" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="38">header_color<pos:position pos:line="68" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="52">LABEL<pos:position pos:line="68" pos:column="57"/></name><argument_list pos:line="68" pos:column="57">(<argument><expr><call><name pos:line="68" pos:column="58">N_<pos:position pos:line="68" pos:column="60"/></name><argument_list pos:line="68" pos:column="60">(<argument><expr><operator pos:line="68" pos:column="61">(<pos:position pos:line="68" pos:column="62"/></operator><literal type="string" pos:line="68" pos:column="62">"ahead "<pos:position pos:line="68" pos:column="70"/></literal><operator pos:line="68" pos:column="70">)<pos:position pos:line="68" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="68" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">color_fprintf<pos:position pos:line="69" pos:column="30"/></name><argument_list pos:line="69" pos:column="30">(<argument><expr><name><name pos:line="69" pos:column="31">s<pos:position pos:line="69" pos:column="32"/></name><operator pos:line="69" pos:column="32">-&gt;<pos:position pos:line="69" pos:column="37"/></operator><name pos:line="69" pos:column="34">fp<pos:position pos:line="69" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="38">branch_color_local<pos:position pos:line="69" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="58">"%d"<pos:position pos:line="69" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="64">num_ours<pos:position pos:line="69" pos:column="72"/></name></expr></argument>)<pos:position pos:line="69" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="70" pos:column="17">color_fprintf<pos:position pos:line="70" pos:column="30"/></name><argument_list pos:line="70" pos:column="30">(<argument><expr><name><name pos:line="70" pos:column="31">s<pos:position pos:line="70" pos:column="32"/></name><operator pos:line="70" pos:column="32">-&gt;<pos:position pos:line="70" pos:column="37"/></operator><name pos:line="70" pos:column="34">fp<pos:position pos:line="70" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="38">header_color<pos:position pos:line="70" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="52">", %s"<pos:position pos:line="70" pos:column="58"/></literal></expr></argument>, <argument><expr><call><name pos:line="70" pos:column="60">LABEL<pos:position pos:line="70" pos:column="65"/></name><argument_list pos:line="70" pos:column="65">(<argument><expr><call><name pos:line="70" pos:column="66">N_<pos:position pos:line="70" pos:column="68"/></name><argument_list pos:line="70" pos:column="68">(<argument><expr><literal type="string" pos:line="70" pos:column="69">"behind "<pos:position pos:line="70" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="82"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="71" pos:column="17">color_fprintf<pos:position pos:line="71" pos:column="30"/></name><argument_list pos:line="71" pos:column="30">(<argument><expr><name><name pos:line="71" pos:column="31">s<pos:position pos:line="71" pos:column="32"/></name><operator pos:line="71" pos:column="32">-&gt;<pos:position pos:line="71" pos:column="37"/></operator><name pos:line="71" pos:column="34">fp<pos:position pos:line="71" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="38">branch_color_remote<pos:position pos:line="71" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="59">"%d"<pos:position pos:line="71" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="65">num_theirs<pos:position pos:line="71" pos:column="75"/></name></expr></argument>)<pos:position pos:line="71" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="72" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="74" pos:column="9">color_fprintf<pos:position pos:line="74" pos:column="22"/></name><argument_list pos:line="74" pos:column="22">(<argument><expr><name><name pos:line="74" pos:column="23">s<pos:position pos:line="74" pos:column="24"/></name><operator pos:line="74" pos:column="24">-&gt;<pos:position pos:line="74" pos:column="29"/></operator><name pos:line="74" pos:column="26">fp<pos:position pos:line="74" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="30">header_color<pos:position pos:line="74" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="44">"]"<pos:position pos:line="74" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="75" pos:column="9">fputc<pos:position pos:line="75" pos:column="14"/></name><argument_list pos:line="75" pos:column="14">(<argument><expr><ternary><condition><expr><name><name pos:line="75" pos:column="15">s<pos:position pos:line="75" pos:column="16"/></name><operator pos:line="75" pos:column="16">-&gt;<pos:position pos:line="75" pos:column="21"/></operator><name pos:line="75" pos:column="18">null_termination<pos:position pos:line="75" pos:column="34"/></name></name></expr> ?<pos:position pos:line="75" pos:column="36"/></condition><then pos:line="75" pos:column="36"> <expr><literal type="char" pos:line="75" pos:column="37">'\0'<pos:position pos:line="75" pos:column="41"/></literal></expr> <pos:position pos:line="75" pos:column="42"/></then><else pos:line="75" pos:column="42">: <expr><literal type="char" pos:line="75" pos:column="44">'\n'<pos:position pos:line="75" pos:column="48"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="50">s<pos:position pos:line="75" pos:column="51"/></name><operator pos:line="75" pos:column="51">-&gt;<pos:position pos:line="75" pos:column="56"/></operator><name pos:line="75" pos:column="53">fp<pos:position pos:line="75" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="57"/></expr_stmt>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

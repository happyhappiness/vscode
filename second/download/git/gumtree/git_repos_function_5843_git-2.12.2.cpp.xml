<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5843_git-2.12.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wait_all<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">hit<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">grep_lock<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">()<pos:position pos:line="6" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">all_work_added<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">=<pos:position pos:line="7" pos:column="25"/></operator> <literal type="number" pos:line="7" pos:column="26">1<pos:position pos:line="7" pos:column="27"/></literal></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>

	<comment type="block" pos:line="9" pos:column="9">/* Wait until all work is done. */</comment>
	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><name pos:line="10" pos:column="16">todo_done<pos:position pos:line="10" pos:column="25"/></name> <operator pos:line="10" pos:column="26">!=<pos:position pos:line="10" pos:column="28"/></operator> <name pos:line="10" pos:column="29">todo_end<pos:position pos:line="10" pos:column="37"/></name></expr>)<pos:position pos:line="10" pos:column="38"/></condition>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">pthread_cond_wait<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><operator pos:line="11" pos:column="35">&amp;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="36">cond_result<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="49">&amp;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="50">grep_mutex<pos:position pos:line="11" pos:column="60"/></name></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt></block></while>

	<comment type="block" pos:line="13" pos:column="9">/* Wake up all the consumer threads so they can see that there
	 * is no more work to do.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">pthread_cond_broadcast<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><operator pos:line="16" pos:column="32">&amp;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="33">cond_add<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">grep_unlock<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">()<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>

	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></init> <condition><expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="25">num_threads<pos:position pos:line="19" pos:column="36"/></name></expr>;<pos:position pos:line="19" pos:column="37"/></condition> <incr><expr><name pos:line="19" pos:column="38">i<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">++<pos:position pos:line="19" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="42"/></control> <block pos:line="19" pos:column="43">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">void<pos:position pos:line="20" pos:column="21"/></name> <modifier pos:line="20" pos:column="22">*<pos:position pos:line="20" pos:column="23"/></modifier></type><name pos:line="20" pos:column="23">h<pos:position pos:line="20" pos:column="24"/></name></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">pthread_join<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name><name pos:line="21" pos:column="30">threads<pos:position pos:line="21" pos:column="37"/></name><index pos:line="21" pos:column="37">[<expr><name pos:line="21" pos:column="38">i<pos:position pos:line="21" pos:column="39"/></name></expr>]<pos:position pos:line="21" pos:column="40"/></index></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="42">&amp;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="43">h<pos:position pos:line="21" pos:column="44"/></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">hit<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">|=<pos:position pos:line="22" pos:column="23"/></operator> <operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">int<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">)<pos:position pos:line="22" pos:column="29"/></operator> <operator pos:line="22" pos:column="30">(<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="31">intptr_t<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">)<pos:position pos:line="22" pos:column="40"/></operator> <name pos:line="22" pos:column="41">h<pos:position pos:line="22" pos:column="42"/></name></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">free<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">threads<pos:position pos:line="25" pos:column="21"/></name></expr></argument>)<pos:position pos:line="25" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="27" pos:column="9">pthread_mutex_destroy<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><operator pos:line="27" pos:column="31">&amp;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="32">grep_mutex<pos:position pos:line="27" pos:column="42"/></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">pthread_mutex_destroy<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><operator pos:line="28" pos:column="31">&amp;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="32">grep_read_mutex<pos:position pos:line="28" pos:column="47"/></name></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">pthread_mutex_destroy<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><operator pos:line="29" pos:column="31">&amp;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="32">grep_attr_mutex<pos:position pos:line="29" pos:column="47"/></name></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">pthread_cond_destroy<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><operator pos:line="30" pos:column="30">&amp;<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="31">cond_add<pos:position pos:line="30" pos:column="39"/></name></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">pthread_cond_destroy<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><operator pos:line="31" pos:column="30">&amp;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="31">cond_write<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">pthread_cond_destroy<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><operator pos:line="32" pos:column="30">&amp;<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="31">cond_result<pos:position pos:line="32" pos:column="42"/></name></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="33" pos:column="9">grep_use_locks<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <literal type="number" pos:line="33" pos:column="26">0<pos:position pos:line="33" pos:column="27"/></literal></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>

	<return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">hit<pos:position pos:line="35" pos:column="19"/></name></expr>;<pos:position pos:line="35" pos:column="20"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6955_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">reg_errcode_t<pos:position pos:line="1" pos:column="21"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">merge_state_array<pos:position pos:line="3" pos:column="18"/></name> <parameter_list pos:line="3" pos:column="19">(<parameter><decl><type><specifier pos:line="3" pos:column="20">const<pos:position pos:line="3" pos:column="25"/></specifier> <name pos:line="3" pos:column="26">re_dfa_t<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">dfa<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="41">re_dfastate_t<pos:position pos:line="3" pos:column="54"/></name> <modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier><modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type><name pos:line="3" pos:column="57">dst<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>,
		   <parameter><decl><type><name pos:line="4" pos:column="20">re_dfastate_t<pos:position pos:line="4" pos:column="33"/></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier><modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier></type><name pos:line="4" pos:column="36">src<pos:position pos:line="4" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="41">int<pos:position pos:line="4" pos:column="44"/></name></type> <name pos:line="4" pos:column="45">num<pos:position pos:line="4" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="49"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">st_idx<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">reg_errcode_t<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">err<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init><expr><name pos:line="8" pos:column="8">st_idx<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal></expr>;<pos:position pos:line="8" pos:column="19"/></init> <condition><expr><name pos:line="8" pos:column="20">st_idx<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">&lt;<pos:position pos:line="8" pos:column="31"/></operator> <name pos:line="8" pos:column="29">num<pos:position pos:line="8" pos:column="32"/></name></expr>;<pos:position pos:line="8" pos:column="33"/></condition> <incr><expr><operator pos:line="8" pos:column="34">++<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">st_idx<pos:position pos:line="8" pos:column="42"/></name></expr></incr>)<pos:position pos:line="8" pos:column="43"/></control>
    <block pos:line="9" pos:column="5">{
      <if pos:line="10" pos:column="7">if <condition pos:line="10" pos:column="10">(<expr><name><name pos:line="10" pos:column="11">dst<pos:position pos:line="10" pos:column="14"/></name><index pos:line="10" pos:column="14">[<expr><name pos:line="10" pos:column="15">st_idx<pos:position pos:line="10" pos:column="21"/></name></expr>]<pos:position pos:line="10" pos:column="22"/></index></name> <operator pos:line="10" pos:column="23">==<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">NULL<pos:position pos:line="10" pos:column="30"/></name></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="9">dst<pos:position pos:line="11" pos:column="12"/></name><index pos:line="11" pos:column="12">[<expr><name pos:line="11" pos:column="13">st_idx<pos:position pos:line="11" pos:column="19"/></name></expr>]<pos:position pos:line="11" pos:column="20"/></index></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <name><name pos:line="11" pos:column="23">src<pos:position pos:line="11" pos:column="26"/></name><index pos:line="11" pos:column="26">[<expr><name pos:line="11" pos:column="27">st_idx<pos:position pos:line="11" pos:column="33"/></name></expr>]<pos:position pos:line="11" pos:column="34"/></index></name></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt></block></then>
      <elseif pos:line="12" pos:column="7">else <if pos:line="12" pos:column="12">if <condition pos:line="12" pos:column="15">(<expr><name><name pos:line="12" pos:column="16">src<pos:position pos:line="12" pos:column="19"/></name><index pos:line="12" pos:column="19">[<expr><name pos:line="12" pos:column="20">st_idx<pos:position pos:line="12" pos:column="26"/></name></expr>]<pos:position pos:line="12" pos:column="27"/></index></name> <operator pos:line="12" pos:column="28">!=<pos:position pos:line="12" pos:column="30"/></operator> <name pos:line="12" pos:column="31">NULL<pos:position pos:line="12" pos:column="35"/></name></expr>)<pos:position pos:line="12" pos:column="36"/></condition><then pos:line="12" pos:column="36">
	<block pos:line="13" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="14" pos:column="11">re_node_set<pos:position pos:line="14" pos:column="22"/></name></type> <name pos:line="14" pos:column="23">merged_set<pos:position pos:line="14" pos:column="33"/></name></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>
	  <expr_stmt><expr><name pos:line="15" pos:column="11">err<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <call><name pos:line="15" pos:column="17">re_node_set_init_union<pos:position pos:line="15" pos:column="39"/></name> <argument_list pos:line="15" pos:column="40">(<argument><expr><operator pos:line="15" pos:column="41">&amp;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="42">merged_set<pos:position pos:line="15" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="54">&amp;<pos:position pos:line="15" pos:column="59"/></operator><name><name pos:line="15" pos:column="55">dst<pos:position pos:line="15" pos:column="58"/></name><index pos:line="15" pos:column="58">[<expr><name pos:line="15" pos:column="59">st_idx<pos:position pos:line="15" pos:column="65"/></name></expr>]<pos:position pos:line="15" pos:column="66"/></index></name><operator pos:line="15" pos:column="66">-&gt;<pos:position pos:line="15" pos:column="71"/></operator><name pos:line="15" pos:column="68">nodes<pos:position pos:line="15" pos:column="73"/></name></expr></argument>,
					<argument><expr><operator pos:line="16" pos:column="41">&amp;<pos:position pos:line="16" pos:column="46"/></operator><name><name pos:line="16" pos:column="42">src<pos:position pos:line="16" pos:column="45"/></name><index pos:line="16" pos:column="45">[<expr><name pos:line="16" pos:column="46">st_idx<pos:position pos:line="16" pos:column="52"/></name></expr>]<pos:position pos:line="16" pos:column="53"/></index></name><operator pos:line="16" pos:column="53">-&gt;<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="55">nodes<pos:position pos:line="16" pos:column="60"/></name></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="62"/></expr_stmt>
	  <if pos:line="17" pos:column="11">if <condition pos:line="17" pos:column="14">(<expr><call><name pos:line="17" pos:column="15">BE<pos:position pos:line="17" pos:column="17"/></name> <argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">err<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">!=<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="26">REG_NOERROR<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="39">0<pos:position pos:line="17" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42">
	    <block type="pseudo"><return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">err<pos:position pos:line="18" pos:column="23"/></name></expr>;<pos:position pos:line="18" pos:column="24"/></return></block></then></if>
	  <expr_stmt><expr><name><name pos:line="19" pos:column="11">dst<pos:position pos:line="19" pos:column="14"/></name><index pos:line="19" pos:column="14">[<expr><name pos:line="19" pos:column="15">st_idx<pos:position pos:line="19" pos:column="21"/></name></expr>]<pos:position pos:line="19" pos:column="22"/></index></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <call><name pos:line="19" pos:column="25">re_acquire_state<pos:position pos:line="19" pos:column="41"/></name> <argument_list pos:line="19" pos:column="42">(<argument><expr><operator pos:line="19" pos:column="43">&amp;<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="44">err<pos:position pos:line="19" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="49">dfa<pos:position pos:line="19" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="54">&amp;<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="55">merged_set<pos:position pos:line="19" pos:column="65"/></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="67"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="20" pos:column="11">re_node_set_free<pos:position pos:line="20" pos:column="27"/></name> <argument_list pos:line="20" pos:column="28">(<argument><expr><operator pos:line="20" pos:column="29">&amp;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="30">merged_set<pos:position pos:line="20" pos:column="40"/></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt>
	  <if pos:line="21" pos:column="11">if <condition pos:line="21" pos:column="14">(<expr><call><name pos:line="21" pos:column="15">BE<pos:position pos:line="21" pos:column="17"/></name> <argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">err<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">!=<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">REG_NOERROR<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="39">0<pos:position pos:line="21" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42">
	    <block type="pseudo"><return pos:line="22" pos:column="13">return <expr><name pos:line="22" pos:column="20">err<pos:position pos:line="22" pos:column="23"/></name></expr>;<pos:position pos:line="22" pos:column="24"/></return></block></then></if>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="24" pos:column="6"/></block></for>
  <return pos:line="25" pos:column="3">return <expr><name pos:line="25" pos:column="10">REG_NOERROR<pos:position pos:line="25" pos:column="21"/></name></expr>;<pos:position pos:line="25" pos:column="22"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

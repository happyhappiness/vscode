<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1022.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">push_check<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">argc<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier><modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">argv<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">prefix<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">remote<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">remote<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">argc<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">&lt;<pos:position pos:line="5" pos:column="22"/></operator> <literal type="number" pos:line="5" pos:column="20">2<pos:position pos:line="5" pos:column="21"/></literal></expr>)<pos:position pos:line="5" pos:column="22"/></condition><then pos:line="5" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">die<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="string" pos:line="6" pos:column="21">"submodule--helper push-check requires at least 1 argument"<pos:position pos:line="6" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="82"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="8" pos:column="9">/*
	 * The remote must be configured.
	 * This is to avoid pushing to the exact same URL as the parent.
	 */</comment>
	<expr_stmt><expr><name pos:line="12" pos:column="9">remote<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">pushremote_get<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name><name pos:line="12" pos:column="33">argv<pos:position pos:line="12" pos:column="37"/></name><index pos:line="12" pos:column="37">[<expr><literal type="number" pos:line="12" pos:column="38">1<pos:position pos:line="12" pos:column="39"/></literal></expr>]<pos:position pos:line="12" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">remote<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">||<pos:position pos:line="13" pos:column="23"/></operator> <name><name pos:line="13" pos:column="24">remote<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">origin<pos:position pos:line="13" pos:column="38"/></name></name> <operator pos:line="13" pos:column="39">==<pos:position pos:line="13" pos:column="41"/></operator> <name pos:line="13" pos:column="42">REMOTE_UNCONFIGURED<pos:position pos:line="13" pos:column="61"/></name></expr>)<pos:position pos:line="13" pos:column="62"/></condition><then pos:line="13" pos:column="62">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">die<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><literal type="string" pos:line="14" pos:column="21">"remote '%s' not configured"<pos:position pos:line="14" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="51">argv<pos:position pos:line="14" pos:column="55"/></name><index pos:line="14" pos:column="55">[<expr><literal type="number" pos:line="14" pos:column="56">1<pos:position pos:line="14" pos:column="57"/></literal></expr>]<pos:position pos:line="14" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="16" pos:column="9">/* Check the refspec */</comment>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">argc<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">&gt;<pos:position pos:line="17" pos:column="22"/></operator> <literal type="number" pos:line="17" pos:column="20">2<pos:position pos:line="17" pos:column="21"/></literal></expr>)<pos:position pos:line="17" pos:column="22"/></condition><then pos:line="17" pos:column="22"> <block pos:line="17" pos:column="23">{
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">int<pos:position pos:line="18" pos:column="20"/></name></type> <name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="18" pos:column="24">refspec_nr<pos:position pos:line="18" pos:column="34"/></name> <init pos:line="18" pos:column="35">= <expr><name pos:line="18" pos:column="37">argc<pos:position pos:line="18" pos:column="41"/></name> <operator pos:line="18" pos:column="42">-<pos:position pos:line="18" pos:column="43"/></operator> <literal type="number" pos:line="18" pos:column="44">2<pos:position pos:line="18" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="46"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="19" pos:column="17">struct<pos:position pos:line="19" pos:column="23"/></name> <name pos:line="19" pos:column="24">ref<pos:position pos:line="19" pos:column="27"/></name></name> <modifier pos:line="19" pos:column="28">*<pos:position pos:line="19" pos:column="29"/></modifier></type><name pos:line="19" pos:column="29">local_refs<pos:position pos:line="19" pos:column="39"/></name> <init pos:line="19" pos:column="40">= <expr><call><name pos:line="19" pos:column="42">get_local_heads<pos:position pos:line="19" pos:column="57"/></name><argument_list pos:line="19" pos:column="57">()<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="60"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="20" pos:column="17">struct<pos:position pos:line="20" pos:column="23"/></name> <name pos:line="20" pos:column="24">refspec<pos:position pos:line="20" pos:column="31"/></name></name> <modifier pos:line="20" pos:column="32">*<pos:position pos:line="20" pos:column="33"/></modifier></type><name pos:line="20" pos:column="33">refspec<pos:position pos:line="20" pos:column="40"/></name> <init pos:line="20" pos:column="41">= <expr><call><name pos:line="20" pos:column="43">parse_push_refspec<pos:position pos:line="20" pos:column="61"/></name><argument_list pos:line="20" pos:column="61">(<argument><expr><name pos:line="20" pos:column="62">refspec_nr<pos:position pos:line="20" pos:column="72"/></name></expr></argument>,
							     <argument><expr><name pos:line="21" pos:column="62">argv<pos:position pos:line="21" pos:column="66"/></name> <operator pos:line="21" pos:column="67">+<pos:position pos:line="21" pos:column="68"/></operator> <literal type="number" pos:line="21" pos:column="69">2<pos:position pos:line="21" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="72"/></decl_stmt>

		<for pos:line="23" pos:column="17">for <control pos:line="23" pos:column="21">(<init><expr><name pos:line="23" pos:column="22">i<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <literal type="number" pos:line="23" pos:column="26">0<pos:position pos:line="23" pos:column="27"/></literal></expr>;<pos:position pos:line="23" pos:column="28"/></init> <condition><expr><name pos:line="23" pos:column="29">i<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">&lt;<pos:position pos:line="23" pos:column="35"/></operator> <name pos:line="23" pos:column="33">refspec_nr<pos:position pos:line="23" pos:column="43"/></name></expr>;<pos:position pos:line="23" pos:column="44"/></condition> <incr><expr><name pos:line="23" pos:column="45">i<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">++<pos:position pos:line="23" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="49"/></control> <block pos:line="23" pos:column="50">{
			<decl_stmt><decl><type><name><name pos:line="24" pos:column="25">struct<pos:position pos:line="24" pos:column="31"/></name> <name pos:line="24" pos:column="32">refspec<pos:position pos:line="24" pos:column="39"/></name></name> <modifier pos:line="24" pos:column="40">*<pos:position pos:line="24" pos:column="41"/></modifier></type><name pos:line="24" pos:column="41">rs<pos:position pos:line="24" pos:column="43"/></name> <init pos:line="24" pos:column="44">= <expr><name pos:line="24" pos:column="46">refspec<pos:position pos:line="24" pos:column="53"/></name> <operator pos:line="24" pos:column="54">+<pos:position pos:line="24" pos:column="55"/></operator> <name pos:line="24" pos:column="56">i<pos:position pos:line="24" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="58"/></decl_stmt>

			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><name><name pos:line="26" pos:column="29">rs<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">-&gt;<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="33">pattern<pos:position pos:line="26" pos:column="40"/></name></name> <operator pos:line="26" pos:column="41">||<pos:position pos:line="26" pos:column="43"/></operator> <name><name pos:line="26" pos:column="44">rs<pos:position pos:line="26" pos:column="46"/></name><operator pos:line="26" pos:column="46">-&gt;<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="48">matching<pos:position pos:line="26" pos:column="56"/></name></name></expr>)<pos:position pos:line="26" pos:column="57"/></condition><then pos:line="26" pos:column="57">
				<block type="pseudo"><continue pos:line="27" pos:column="33">continue;<pos:position pos:line="27" pos:column="42"/></continue></block></then></if>

			<comment type="block" pos:line="29" pos:column="25">/*
			 * LHS must match a single ref
			 * NEEDSWORK: add logic to special case 'HEAD' once
			 * working with submodules in a detached head state
			 * ceases to be the norm.
			 */</comment>
			<if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><call><name pos:line="35" pos:column="29">count_refspec_match<pos:position pos:line="35" pos:column="48"/></name><argument_list pos:line="35" pos:column="48">(<argument><expr><name><name pos:line="35" pos:column="49">rs<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">-&gt;<pos:position pos:line="35" pos:column="56"/></operator><name pos:line="35" pos:column="53">src<pos:position pos:line="35" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="58">local_refs<pos:position pos:line="35" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="70">NULL<pos:position pos:line="35" pos:column="74"/></name></expr></argument>)<pos:position pos:line="35" pos:column="75"/></argument_list></call> <operator pos:line="35" pos:column="76">!=<pos:position pos:line="35" pos:column="78"/></operator> <literal type="number" pos:line="35" pos:column="79">1<pos:position pos:line="35" pos:column="80"/></literal></expr>)<pos:position pos:line="35" pos:column="81"/></condition><then pos:line="35" pos:column="81">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="33">die<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><literal type="string" pos:line="36" pos:column="37">"src refspec '%s' must name a ref"<pos:position pos:line="36" pos:column="71"/></literal></expr></argument>,
				    <argument><expr><name><name pos:line="37" pos:column="37">rs<pos:position pos:line="37" pos:column="39"/></name><operator pos:line="37" pos:column="39">-&gt;<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="41">src<pos:position pos:line="37" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt></block></then></if>
		}<pos:position pos:line="38" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">free_refspec<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">refspec_nr<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="42">refspec<pos:position pos:line="39" pos:column="49"/></name></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>

	<return pos:line="42" pos:column="9">return <expr><literal type="number" pos:line="42" pos:column="16">0<pos:position pos:line="42" pos:column="17"/></literal></expr>;<pos:position pos:line="42" pos:column="18"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

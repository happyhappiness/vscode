<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_360_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_index_extension<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">index_state<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">istate<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">ext<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">void<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">data<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">unsigned<pos:position pos:line="2" pos:column="70"/></name> <name pos:line="2" pos:column="71">long<pos:position pos:line="2" pos:column="75"/></name></type> <name pos:line="2" pos:column="76">sz<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="79"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<switch pos:line="4" pos:column="9">switch <condition pos:line="4" pos:column="16">(<expr><call><name pos:line="4" pos:column="17">CACHE_EXT<pos:position pos:line="4" pos:column="26"/></name><argument_list pos:line="4" pos:column="26">(<argument><expr><name pos:line="4" pos:column="27">ext<pos:position pos:line="4" pos:column="30"/></name></expr></argument>)<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="32"/></condition> <block pos:line="4" pos:column="33">{
	<case pos:line="5" pos:column="9">case <expr><name pos:line="5" pos:column="14">CACHE_EXT_TREE<pos:position pos:line="5" pos:column="28"/></name></expr>:<pos:position pos:line="5" pos:column="29"/></case>
		<expr_stmt><expr><name><name pos:line="6" pos:column="17">istate<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">cache_tree<pos:position pos:line="6" pos:column="35"/></name></name> <operator pos:line="6" pos:column="36">=<pos:position pos:line="6" pos:column="37"/></operator> <call><name pos:line="6" pos:column="38">cache_tree_read<pos:position pos:line="6" pos:column="53"/></name><argument_list pos:line="6" pos:column="53">(<argument><expr><name pos:line="6" pos:column="54">data<pos:position pos:line="6" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="60">sz<pos:position pos:line="6" pos:column="62"/></name></expr></argument>)<pos:position pos:line="6" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="64"/></expr_stmt>
		<break pos:line="7" pos:column="17">break;<pos:position pos:line="7" pos:column="23"/></break>
	<case pos:line="8" pos:column="9">case <expr><name pos:line="8" pos:column="14">CACHE_EXT_RESOLVE_UNDO<pos:position pos:line="8" pos:column="36"/></name></expr>:<pos:position pos:line="8" pos:column="37"/></case>
		<expr_stmt><expr><name><name pos:line="9" pos:column="17">istate<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">-&gt;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="25">resolve_undo<pos:position pos:line="9" pos:column="37"/></name></name> <operator pos:line="9" pos:column="38">=<pos:position pos:line="9" pos:column="39"/></operator> <call><name pos:line="9" pos:column="40">resolve_undo_read<pos:position pos:line="9" pos:column="57"/></name><argument_list pos:line="9" pos:column="57">(<argument><expr><name pos:line="9" pos:column="58">data<pos:position pos:line="9" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="64">sz<pos:position pos:line="9" pos:column="66"/></name></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
		<break pos:line="10" pos:column="17">break;<pos:position pos:line="10" pos:column="23"/></break>
	<case pos:line="11" pos:column="9">case <expr><name pos:line="11" pos:column="14">CACHE_EXT_LINK<pos:position pos:line="11" pos:column="28"/></name></expr>:<pos:position pos:line="11" pos:column="29"/></case>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><call><name pos:line="12" pos:column="21">read_link_extension<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">istate<pos:position pos:line="12" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">data<pos:position pos:line="12" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="55">sz<pos:position pos:line="12" pos:column="57"/></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="59"/></condition><then pos:line="12" pos:column="59">
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><operator pos:line="13" pos:column="32">-<pos:position pos:line="13" pos:column="33"/></operator><literal type="number" pos:line="13" pos:column="33">1<pos:position pos:line="13" pos:column="34"/></literal></expr>;<pos:position pos:line="13" pos:column="35"/></return></block></then></if>
		<break pos:line="14" pos:column="17">break;<pos:position pos:line="14" pos:column="23"/></break>
	<case pos:line="15" pos:column="9">case <expr><name pos:line="15" pos:column="14">CACHE_EXT_UNTRACKED<pos:position pos:line="15" pos:column="33"/></name></expr>:<pos:position pos:line="15" pos:column="34"/></case>
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">istate<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">-&gt;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="25">untracked<pos:position pos:line="16" pos:column="34"/></name></name> <operator pos:line="16" pos:column="35">=<pos:position pos:line="16" pos:column="36"/></operator> <call><name pos:line="16" pos:column="37">read_untracked_extension<pos:position pos:line="16" pos:column="61"/></name><argument_list pos:line="16" pos:column="61">(<argument><expr><name pos:line="16" pos:column="62">data<pos:position pos:line="16" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="68">sz<pos:position pos:line="16" pos:column="70"/></name></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="72"/></expr_stmt>
		<break pos:line="17" pos:column="17">break;<pos:position pos:line="17" pos:column="23"/></break>
	<default pos:line="18" pos:column="9">default:<pos:position pos:line="18" pos:column="17"/></default>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">*<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">ext<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">&lt;<pos:position pos:line="19" pos:column="30"/></operator> <literal type="char" pos:line="19" pos:column="28">'A'<pos:position pos:line="19" pos:column="31"/></literal> <operator pos:line="19" pos:column="32">||<pos:position pos:line="19" pos:column="34"/></operator> <literal type="char" pos:line="19" pos:column="35">'Z'<pos:position pos:line="19" pos:column="38"/></literal> <operator pos:line="19" pos:column="39">&lt;<pos:position pos:line="19" pos:column="43"/></operator> <operator pos:line="19" pos:column="41">*<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">ext<pos:position pos:line="19" pos:column="45"/></name></expr>)<pos:position pos:line="19" pos:column="46"/></condition><then pos:line="19" pos:column="46">
			<block type="pseudo"><return pos:line="20" pos:column="25">return <expr><call><name pos:line="20" pos:column="32">error<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><literal type="string" pos:line="20" pos:column="38">"index uses %.4s extension, which we do not understand"<pos:position pos:line="20" pos:column="93"/></literal></expr></argument>,
				     <argument><expr><name pos:line="21" pos:column="38">ext<pos:position pos:line="21" pos:column="41"/></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="43"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">fprintf<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">stderr<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="33">"ignoring %.4s extension\n"<pos:position pos:line="22" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="62">ext<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
		<break pos:line="23" pos:column="17">break;<pos:position pos:line="23" pos:column="23"/></break>
	}<pos:position pos:line="24" pos:column="10"/></block></switch>
	<return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

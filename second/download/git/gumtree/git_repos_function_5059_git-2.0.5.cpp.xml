<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5059_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">copy<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">argc<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">argv<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">prefix<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">retval<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="25">force<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><literal type="number" pos:line="3" pos:column="33">0<pos:position pos:line="3" pos:column="34"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="36">from_stdin<pos:position pos:line="3" pos:column="46"/></name> <init pos:line="3" pos:column="47">= <expr><literal type="number" pos:line="3" pos:column="49">0<pos:position pos:line="3" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">unsigned<pos:position pos:line="4" pos:column="23"/></name> <name pos:line="4" pos:column="24">char<pos:position pos:line="4" pos:column="28"/></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">from_note<pos:position pos:line="4" pos:column="39"/></name></decl>, <modifier pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="42">note<pos:position pos:line="4" pos:column="46"/></name></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">object_ref<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">char<pos:position pos:line="6" pos:column="22"/></name></type> <name><name pos:line="6" pos:column="23">object<pos:position pos:line="6" pos:column="29"/></name><index pos:line="6" pos:column="29">[<expr><literal type="number" pos:line="6" pos:column="30">20<pos:position pos:line="6" pos:column="32"/></literal></expr>]<pos:position pos:line="6" pos:column="33"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="6" pos:column="35">from_obj<pos:position pos:line="6" pos:column="43"/></name><index pos:line="6" pos:column="43">[<expr><literal type="number" pos:line="6" pos:column="44">20<pos:position pos:line="6" pos:column="46"/></literal></expr>]<pos:position pos:line="6" pos:column="47"/></index></name></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">notes_tree<pos:position pos:line="7" pos:column="26"/></name></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">t<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">rewrite_cmd<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><name pos:line="8" pos:column="35">NULL<pos:position pos:line="8" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">option<pos:position pos:line="9" pos:column="22"/></name></name></type> <name><name pos:line="9" pos:column="23">options<pos:position pos:line="9" pos:column="30"/></name><index pos:line="9" pos:column="30">[]<pos:position pos:line="9" pos:column="32"/></index></name> <init pos:line="9" pos:column="33">= <expr><block pos:line="9" pos:column="35">{
		<expr><call><name pos:line="10" pos:column="17">OPT__FORCE<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><operator pos:line="10" pos:column="28">&amp;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="29">force<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="36">N_<pos:position pos:line="10" pos:column="38"/></name><argument_list pos:line="10" pos:column="38">(<argument><expr><literal type="string" pos:line="10" pos:column="39">"replace existing notes"<pos:position pos:line="10" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr>,
		<expr><call><name pos:line="11" pos:column="17">OPT_BOOL<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="29">"stdin"<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="38">&amp;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="39">from_stdin<pos:position pos:line="11" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="51">N_<pos:position pos:line="11" pos:column="53"/></name><argument_list pos:line="11" pos:column="53">(<argument><expr><literal type="string" pos:line="11" pos:column="54">"read objects from stdin"<pos:position pos:line="11" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="81"/></argument_list></call></expr>,
		<expr><call><name pos:line="12" pos:column="17">OPT_STRING<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><literal type="number" pos:line="12" pos:column="28">0<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="31">"for-rewrite"<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="46">&amp;<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="47">rewrite_cmd<pos:position pos:line="12" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="60">N_<pos:position pos:line="12" pos:column="62"/></name><argument_list pos:line="12" pos:column="62">(<argument><expr><literal type="string" pos:line="12" pos:column="63">"command"<pos:position pos:line="12" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr></argument>,
			   <argument><expr><call><name pos:line="13" pos:column="28">N_<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><literal type="string" pos:line="13" pos:column="31">"load rewriting config for &lt;command&gt; (implies "<pos:position pos:line="13" pos:column="84"/></literal>
			      <literal type="string" pos:line="14" pos:column="31">"--stdin)"<pos:position pos:line="14" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>,
		<macro><name pos:line="15" pos:column="17">OPT_END<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">()<pos:position pos:line="15" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="16" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="16" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="18" pos:column="9">argc<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <call><name pos:line="18" pos:column="16">parse_options<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">argc<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="36">argv<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="42">prefix<pos:position pos:line="18" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">options<pos:position pos:line="18" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="59">git_notes_copy_usage<pos:position pos:line="18" pos:column="79"/></name></expr></argument>,
			     <argument><expr><literal type="number" pos:line="19" pos:column="30">0<pos:position pos:line="19" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">from_stdin<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">||<pos:position pos:line="21" pos:column="26"/></operator> <name pos:line="21" pos:column="27">rewrite_cmd<pos:position pos:line="21" pos:column="38"/></name></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39"> <block pos:line="21" pos:column="40">{
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">argc<pos:position pos:line="22" pos:column="25"/></name></expr>)<pos:position pos:line="22" pos:column="26"/></condition><then pos:line="22" pos:column="26"> <block pos:line="22" pos:column="27">{
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">error<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><call><name pos:line="23" pos:column="31">_<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><literal type="string" pos:line="23" pos:column="33">"too many parameters"<pos:position pos:line="23" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">usage_with_options<pos:position pos:line="24" pos:column="43"/></name><argument_list pos:line="24" pos:column="43">(<argument><expr><name pos:line="24" pos:column="44">git_notes_copy_usage<pos:position pos:line="24" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="66">options<pos:position pos:line="24" pos:column="73"/></name></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></then> <else pos:line="25" pos:column="19">else <block pos:line="25" pos:column="24">{
			<return pos:line="26" pos:column="25">return <expr><call><name pos:line="26" pos:column="32">notes_copy_from_stdin<pos:position pos:line="26" pos:column="53"/></name><argument_list pos:line="26" pos:column="53">(<argument><expr><name pos:line="26" pos:column="54">force<pos:position pos:line="26" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="61">rewrite_cmd<pos:position pos:line="26" pos:column="72"/></name></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="74"/></return>
		}<pos:position pos:line="27" pos:column="18"/></block></else></if>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">argc<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">&lt;<pos:position pos:line="30" pos:column="22"/></operator> <literal type="number" pos:line="30" pos:column="20">2<pos:position pos:line="30" pos:column="21"/></literal></expr>)<pos:position pos:line="30" pos:column="22"/></condition><then pos:line="30" pos:column="22"> <block pos:line="30" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">error<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><call><name pos:line="31" pos:column="23">_<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="string" pos:line="31" pos:column="25">"too few parameters"<pos:position pos:line="31" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">usage_with_options<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">git_notes_copy_usage<pos:position pos:line="32" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="58">options<pos:position pos:line="32" pos:column="65"/></name></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><literal type="number" pos:line="34" pos:column="13">2<pos:position pos:line="34" pos:column="14"/></literal> <operator pos:line="34" pos:column="15">&lt;<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="17">argc<pos:position pos:line="34" pos:column="21"/></name></expr>)<pos:position pos:line="34" pos:column="22"/></condition><then pos:line="34" pos:column="22"> <block pos:line="34" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">error<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><call><name pos:line="35" pos:column="23">_<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><literal type="string" pos:line="35" pos:column="25">"too many parameters"<pos:position pos:line="35" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">usage_with_options<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><name pos:line="36" pos:column="36">git_notes_copy_usage<pos:position pos:line="36" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="58">options<pos:position pos:line="36" pos:column="65"/></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><call><name pos:line="39" pos:column="13">get_sha1<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name><name pos:line="39" pos:column="22">argv<pos:position pos:line="39" pos:column="26"/></name><index pos:line="39" pos:column="26">[<expr><literal type="number" pos:line="39" pos:column="27">0<pos:position pos:line="39" pos:column="28"/></literal></expr>]<pos:position pos:line="39" pos:column="29"/></index></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="31">from_obj<pos:position pos:line="39" pos:column="39"/></name></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="41"/></condition><then pos:line="39" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="17">die<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><call><name pos:line="40" pos:column="21">_<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><literal type="string" pos:line="40" pos:column="23">"Failed to resolve '%s' as a valid ref."<pos:position pos:line="40" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="66">argv<pos:position pos:line="40" pos:column="70"/></name><index pos:line="40" pos:column="70">[<expr><literal type="number" pos:line="40" pos:column="71">0<pos:position pos:line="40" pos:column="72"/></literal></expr>]<pos:position pos:line="40" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="75"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="42" pos:column="9">object_ref<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <ternary><condition><expr><literal type="number" pos:line="42" pos:column="22">1<pos:position pos:line="42" pos:column="23"/></literal> <operator pos:line="42" pos:column="24">&lt;<pos:position pos:line="42" pos:column="28"/></operator> <name pos:line="42" pos:column="26">argc<pos:position pos:line="42" pos:column="30"/></name></expr> ?<pos:position pos:line="42" pos:column="32"/></condition><then pos:line="42" pos:column="32"> <expr><name><name pos:line="42" pos:column="33">argv<pos:position pos:line="42" pos:column="37"/></name><index pos:line="42" pos:column="37">[<expr><literal type="number" pos:line="42" pos:column="38">1<pos:position pos:line="42" pos:column="39"/></literal></expr>]<pos:position pos:line="42" pos:column="40"/></index></name></expr> <pos:position pos:line="42" pos:column="41"/></then><else pos:line="42" pos:column="41">: <expr><literal type="string" pos:line="42" pos:column="43">"HEAD"<pos:position pos:line="42" pos:column="49"/></literal></expr></else></ternary></expr>;<pos:position pos:line="42" pos:column="50"/></expr_stmt>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><call><name pos:line="44" pos:column="13">get_sha1<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">object_ref<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="34">object<pos:position pos:line="44" pos:column="40"/></name></expr></argument>)<pos:position pos:line="44" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="42"/></condition><then pos:line="44" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="17">die<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><call><name pos:line="45" pos:column="21">_<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><literal type="string" pos:line="45" pos:column="23">"Failed to resolve '%s' as a valid ref."<pos:position pos:line="45" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="45" pos:column="66">object_ref<pos:position pos:line="45" pos:column="76"/></name></expr></argument>)<pos:position pos:line="45" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="78"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="47" pos:column="9">t<pos:position pos:line="47" pos:column="10"/></name> <operator pos:line="47" pos:column="11">=<pos:position pos:line="47" pos:column="12"/></operator> <call><name pos:line="47" pos:column="13">init_notes_check<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><literal type="string" pos:line="47" pos:column="30">"copy"<pos:position pos:line="47" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name pos:line="48" pos:column="9">note<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <call><name pos:line="48" pos:column="16">get_note<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">t<pos:position pos:line="48" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="28">object<pos:position pos:line="48" pos:column="34"/></name></expr></argument>)<pos:position pos:line="48" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt>

	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">note<pos:position pos:line="50" pos:column="17"/></name></expr>)<pos:position pos:line="50" pos:column="18"/></condition><then pos:line="50" pos:column="18"> <block pos:line="50" pos:column="19">{
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><operator pos:line="51" pos:column="21">!<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="22">force<pos:position pos:line="51" pos:column="27"/></name></expr>)<pos:position pos:line="51" pos:column="28"/></condition><then pos:line="51" pos:column="28"> <block pos:line="51" pos:column="29">{
			<expr_stmt><expr><name pos:line="52" pos:column="25">retval<pos:position pos:line="52" pos:column="31"/></name> <operator pos:line="52" pos:column="32">=<pos:position pos:line="52" pos:column="33"/></operator> <call><name pos:line="52" pos:column="34">error<pos:position pos:line="52" pos:column="39"/></name><argument_list pos:line="52" pos:column="39">(<argument><expr><call><name pos:line="52" pos:column="40">_<pos:position pos:line="52" pos:column="41"/></name><argument_list pos:line="52" pos:column="41">(<argument><expr><literal type="string" pos:line="52" pos:column="42">"Cannot copy notes. Found existing "<pos:position pos:line="52" pos:column="78"/></literal>
				       <literal type="string" pos:line="53" pos:column="40">"notes for object %s. Use '-f' to "<pos:position pos:line="53" pos:column="75"/></literal>
				       <literal type="string" pos:line="54" pos:column="40">"overwrite existing notes"<pos:position pos:line="54" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="67"/></argument_list></call></expr></argument>,
				       <argument><expr><call><name pos:line="55" pos:column="40">sha1_to_hex<pos:position pos:line="55" pos:column="51"/></name><argument_list pos:line="55" pos:column="51">(<argument><expr><name pos:line="55" pos:column="52">object<pos:position pos:line="55" pos:column="58"/></name></expr></argument>)<pos:position pos:line="55" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="61"/></expr_stmt>
			<goto pos:line="56" pos:column="25">goto <name pos:line="56" pos:column="30">out<pos:position pos:line="56" pos:column="33"/></name>;<pos:position pos:line="56" pos:column="34"/></goto>
		}<pos:position pos:line="57" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">fprintf<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><name pos:line="58" pos:column="25">stderr<pos:position pos:line="58" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="33">_<pos:position pos:line="58" pos:column="34"/></name><argument_list pos:line="58" pos:column="34">(<argument><expr><literal type="string" pos:line="58" pos:column="35">"Overwriting existing notes for object %s\n"<pos:position pos:line="58" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="80"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="59" pos:column="25">sha1_to_hex<pos:position pos:line="59" pos:column="36"/></name><argument_list pos:line="59" pos:column="36">(<argument><expr><name pos:line="59" pos:column="37">object<pos:position pos:line="59" pos:column="43"/></name></expr></argument>)<pos:position pos:line="59" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="60" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="62" pos:column="9">from_note<pos:position pos:line="62" pos:column="18"/></name> <operator pos:line="62" pos:column="19">=<pos:position pos:line="62" pos:column="20"/></operator> <call><name pos:line="62" pos:column="21">get_note<pos:position pos:line="62" pos:column="29"/></name><argument_list pos:line="62" pos:column="29">(<argument><expr><name pos:line="62" pos:column="30">t<pos:position pos:line="62" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="33">from_obj<pos:position pos:line="62" pos:column="41"/></name></expr></argument>)<pos:position pos:line="62" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="43"/></expr_stmt>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><operator pos:line="63" pos:column="13">!<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="14">from_note<pos:position pos:line="63" pos:column="23"/></name></expr>)<pos:position pos:line="63" pos:column="24"/></condition><then pos:line="63" pos:column="24"> <block pos:line="63" pos:column="25">{
		<expr_stmt><expr><name pos:line="64" pos:column="17">retval<pos:position pos:line="64" pos:column="23"/></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <call><name pos:line="64" pos:column="26">error<pos:position pos:line="64" pos:column="31"/></name><argument_list pos:line="64" pos:column="31">(<argument><expr><call><name pos:line="64" pos:column="32">_<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><literal type="string" pos:line="64" pos:column="34">"Missing notes on source object %s. Cannot "<pos:position pos:line="64" pos:column="78"/></literal>
			       <literal type="string" pos:line="65" pos:column="32">"copy."<pos:position pos:line="65" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="42">sha1_to_hex<pos:position pos:line="65" pos:column="53"/></name><argument_list pos:line="65" pos:column="53">(<argument><expr><name pos:line="65" pos:column="54">from_obj<pos:position pos:line="65" pos:column="62"/></name></expr></argument>)<pos:position pos:line="65" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="65"/></expr_stmt>
		<goto pos:line="66" pos:column="17">goto <name pos:line="66" pos:column="22">out<pos:position pos:line="66" pos:column="25"/></name>;<pos:position pos:line="66" pos:column="26"/></goto>
	}<pos:position pos:line="67" pos:column="10"/></block></then></if>

	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><call><name pos:line="69" pos:column="13">add_note<pos:position pos:line="69" pos:column="21"/></name><argument_list pos:line="69" pos:column="21">(<argument><expr><name pos:line="69" pos:column="22">t<pos:position pos:line="69" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="25">object<pos:position pos:line="69" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="33">from_note<pos:position pos:line="69" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="44">combine_notes_overwrite<pos:position pos:line="69" pos:column="67"/></name></expr></argument>)<pos:position pos:line="69" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="69"/></condition><then pos:line="69" pos:column="69">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="17">die<pos:position pos:line="70" pos:column="20"/></name><argument_list pos:line="70" pos:column="20">(<argument><expr><literal type="string" pos:line="70" pos:column="21">"BUG: combine_notes_overwrite failed"<pos:position pos:line="70" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="60"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">commit_notes<pos:position pos:line="71" pos:column="21"/></name><argument_list pos:line="71" pos:column="21">(<argument><expr><name pos:line="71" pos:column="22">t<pos:position pos:line="71" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="25">"Notes added by 'git notes copy'"<pos:position pos:line="71" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="60"/></expr_stmt>
<label><name pos:line="72" pos:column="1">out<pos:position pos:line="72" pos:column="4"/></name>:<pos:position pos:line="72" pos:column="5"/></label>
	<expr_stmt><expr><call><name pos:line="73" pos:column="9">free_notes<pos:position pos:line="73" pos:column="19"/></name><argument_list pos:line="73" pos:column="19">(<argument><expr><name pos:line="73" pos:column="20">t<pos:position pos:line="73" pos:column="21"/></name></expr></argument>)<pos:position pos:line="73" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="23"/></expr_stmt>
	<return pos:line="74" pos:column="9">return <expr><name pos:line="74" pos:column="16">retval<pos:position pos:line="74" pos:column="22"/></name></expr>;<pos:position pos:line="74" pos:column="23"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

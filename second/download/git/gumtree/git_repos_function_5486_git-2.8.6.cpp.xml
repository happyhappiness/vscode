<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5486_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">argc<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">argv<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">fetch<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="24">fetch_tags<pos:position pos:line="3" pos:column="34"/></name> <init pos:line="3" pos:column="35">= <expr><name pos:line="3" pos:column="37">TAGS_DEFAULT<pos:position pos:line="3" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">mirror<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">MIRROR_NONE<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">string_list<pos:position pos:line="5" pos:column="27"/></name></name></type> <name pos:line="5" pos:column="28">track<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><name pos:line="5" pos:column="36">STRING_LIST_INIT_NODUP<pos:position pos:line="5" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">master<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><name pos:line="6" pos:column="30">NULL<pos:position pos:line="6" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">remote<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">remote<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">buf<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><name pos:line="8" pos:column="29">STRBUF_INIT<pos:position pos:line="8" pos:column="40"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="42">buf2<pos:position pos:line="8" pos:column="46"/></name> <init pos:line="8" pos:column="47">= <expr><name pos:line="8" pos:column="49">STRBUF_INIT<pos:position pos:line="8" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">name<pos:position pos:line="9" pos:column="25"/></name></decl>, <modifier pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="28">url<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">i<pos:position pos:line="10" pos:column="14"/></name></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">option<pos:position pos:line="12" pos:column="22"/></name></name></type> <name><name pos:line="12" pos:column="23">options<pos:position pos:line="12" pos:column="30"/></name><index pos:line="12" pos:column="30">[]<pos:position pos:line="12" pos:column="32"/></index></name> <init pos:line="12" pos:column="33">= <expr><block pos:line="12" pos:column="35">{
		<expr><call><name pos:line="13" pos:column="17">OPT_BOOL<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><literal type="char" pos:line="13" pos:column="26">'f'<pos:position pos:line="13" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="31">"fetch"<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="40">&amp;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="41">fetch<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="48">N_<pos:position pos:line="13" pos:column="50"/></name><argument_list pos:line="13" pos:column="50">(<argument><expr><literal type="string" pos:line="13" pos:column="51">"fetch the remote branches"<pos:position pos:line="13" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="80"/></argument_list></call></expr>,
		<expr><call><name pos:line="14" pos:column="17">OPT_SET_INT<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><literal type="number" pos:line="14" pos:column="29">0<pos:position pos:line="14" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="32">"tags"<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="40">&amp;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="41">fetch_tags<pos:position pos:line="14" pos:column="51"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="15" pos:column="29">N_<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><literal type="string" pos:line="15" pos:column="32">"import all tags and associated objects when fetching"<pos:position pos:line="15" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="87"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="16" pos:column="29">TAGS_SET<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>,
		<expr><call><name pos:line="17" pos:column="17">OPT_SET_INT<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><literal type="number" pos:line="17" pos:column="29">0<pos:position pos:line="17" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="32">NULL<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="38">&amp;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="39">fetch_tags<pos:position pos:line="17" pos:column="49"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="18" pos:column="29">N_<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><literal type="string" pos:line="18" pos:column="32">"or do not fetch any tag at all (--no-tags)"<pos:position pos:line="18" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="18" pos:column="79">TAGS_UNSET<pos:position pos:line="18" pos:column="89"/></name></expr></argument>)<pos:position pos:line="18" pos:column="90"/></argument_list></call></expr>,
		<expr><call><name pos:line="19" pos:column="17">OPT_STRING_LIST<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><literal type="char" pos:line="19" pos:column="33">'t'<pos:position pos:line="19" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="38">"track"<pos:position pos:line="19" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="47">&amp;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="48">track<pos:position pos:line="19" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="55">N_<pos:position pos:line="19" pos:column="57"/></name><argument_list pos:line="19" pos:column="57">(<argument><expr><literal type="string" pos:line="19" pos:column="58">"branch"<pos:position pos:line="19" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="20" pos:column="33">N_<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><literal type="string" pos:line="20" pos:column="36">"branch(es) to track"<pos:position pos:line="20" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr>,
		<expr><call><name pos:line="21" pos:column="17">OPT_STRING<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><literal type="char" pos:line="21" pos:column="28">'m'<pos:position pos:line="21" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="33">"master"<pos:position pos:line="21" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="43">&amp;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="44">master<pos:position pos:line="21" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="52">N_<pos:position pos:line="21" pos:column="54"/></name><argument_list pos:line="21" pos:column="54">(<argument><expr><literal type="string" pos:line="21" pos:column="55">"branch"<pos:position pos:line="21" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="66">N_<pos:position pos:line="21" pos:column="68"/></name><argument_list pos:line="21" pos:column="68">(<argument><expr><literal type="string" pos:line="21" pos:column="69">"master branch"<pos:position pos:line="21" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="86"/></argument_list></call></expr>,
		<expr><block pos:line="22" pos:column="17">{ <expr><name pos:line="22" pos:column="19">OPTION_CALLBACK<pos:position pos:line="22" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="22" pos:column="36">0<pos:position pos:line="22" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="22" pos:column="39">"mirror"<pos:position pos:line="22" pos:column="47"/></literal></expr>, <expr><operator pos:line="22" pos:column="49">&amp;<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="50">mirror<pos:position pos:line="22" pos:column="56"/></name></expr>, <expr><call><name pos:line="22" pos:column="58">N_<pos:position pos:line="22" pos:column="60"/></name><argument_list pos:line="22" pos:column="60">(<argument><expr><literal type="string" pos:line="22" pos:column="61">"push|fetch"<pos:position pos:line="22" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="74"/></argument_list></call></expr>,
			<expr><call><name pos:line="23" pos:column="25">N_<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><literal type="string" pos:line="23" pos:column="28">"set up remote as a mirror to push to or fetch from"<pos:position pos:line="23" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="81"/></argument_list></call></expr>,
			<expr><name pos:line="24" pos:column="25">PARSE_OPT_OPTARG<pos:position pos:line="24" pos:column="41"/></name></expr>, <expr><name pos:line="24" pos:column="43">parse_mirror_opt<pos:position pos:line="24" pos:column="59"/></name></expr> }<pos:position pos:line="24" pos:column="61"/></block></expr>,
		<macro><name pos:line="25" pos:column="17">OPT_END<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">()<pos:position pos:line="25" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="26" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="26" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="28" pos:column="9">argc<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">parse_options<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">argc<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="36">argv<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">NULL<pos:position pos:line="28" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="48">options<pos:position pos:line="28" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="57">builtin_remote_add_usage<pos:position pos:line="28" pos:column="81"/></name></expr></argument>,
			     <argument><expr><literal type="number" pos:line="29" pos:column="30">0<pos:position pos:line="29" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">argc<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">!=<pos:position pos:line="31" pos:column="20"/></operator> <literal type="number" pos:line="31" pos:column="21">2<pos:position pos:line="31" pos:column="22"/></literal></expr>)<pos:position pos:line="31" pos:column="23"/></condition><then pos:line="31" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">usage_with_options<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">builtin_remote_add_usage<pos:position pos:line="32" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="62">options<pos:position pos:line="32" pos:column="69"/></name></expr></argument>)<pos:position pos:line="32" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="71"/></expr_stmt></block></then></if>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">mirror<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">&amp;&amp;<pos:position pos:line="34" pos:column="30"/></operator> <name pos:line="34" pos:column="23">master<pos:position pos:line="34" pos:column="29"/></name></expr>)<pos:position pos:line="34" pos:column="30"/></condition><then pos:line="34" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="17">die<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><call><name pos:line="35" pos:column="21">_<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><literal type="string" pos:line="35" pos:column="23">"specifying a master branch makes no sense with --mirror"<pos:position pos:line="35" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="83"/></expr_stmt></block></then></if>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">mirror<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">&amp;&amp;<pos:position pos:line="36" pos:column="30"/></operator> <operator pos:line="36" pos:column="23">!<pos:position pos:line="36" pos:column="24"/></operator><operator pos:line="36" pos:column="24">(<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="25">mirror<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">&amp;<pos:position pos:line="36" pos:column="37"/></operator> <name pos:line="36" pos:column="34">MIRROR_FETCH<pos:position pos:line="36" pos:column="46"/></name><operator pos:line="36" pos:column="46">)<pos:position pos:line="36" pos:column="47"/></operator> <operator pos:line="36" pos:column="48">&amp;&amp;<pos:position pos:line="36" pos:column="58"/></operator> <name><name pos:line="36" pos:column="51">track<pos:position pos:line="36" pos:column="56"/></name><operator pos:line="36" pos:column="56">.<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="57">nr<pos:position pos:line="36" pos:column="59"/></name></name></expr>)<pos:position pos:line="36" pos:column="60"/></condition><then pos:line="36" pos:column="60">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="17">die<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><call><name pos:line="37" pos:column="21">_<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><literal type="string" pos:line="37" pos:column="23">"specifying branches to track makes sense only with fetch mirrors"<pos:position pos:line="37" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="92"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="39" pos:column="9">name<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <name><name pos:line="39" pos:column="16">argv<pos:position pos:line="39" pos:column="20"/></name><index pos:line="39" pos:column="20">[<expr><literal type="number" pos:line="39" pos:column="21">0<pos:position pos:line="39" pos:column="22"/></literal></expr>]<pos:position pos:line="39" pos:column="23"/></index></name></expr>;<pos:position pos:line="39" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="40" pos:column="9">url<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <name><name pos:line="40" pos:column="15">argv<pos:position pos:line="40" pos:column="19"/></name><index pos:line="40" pos:column="19">[<expr><literal type="number" pos:line="40" pos:column="20">1<pos:position pos:line="40" pos:column="21"/></literal></expr>]<pos:position pos:line="40" pos:column="22"/></index></name></expr>;<pos:position pos:line="40" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><name pos:line="42" pos:column="9">remote<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <call><name pos:line="42" pos:column="18">remote_get<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">name<pos:position pos:line="42" pos:column="33"/></name></expr></argument>)<pos:position pos:line="42" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name pos:line="43" pos:column="13">remote_is_configured<pos:position pos:line="43" pos:column="33"/></name><argument_list pos:line="43" pos:column="33">(<argument><expr><name pos:line="43" pos:column="34">remote<pos:position pos:line="43" pos:column="40"/></name></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="42"/></condition><then pos:line="43" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="17">die<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><call><name pos:line="44" pos:column="21">_<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><literal type="string" pos:line="44" pos:column="23">"remote %s already exists."<pos:position pos:line="44" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="44" pos:column="53">name<pos:position pos:line="44" pos:column="57"/></name></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="59"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="46" pos:column="9">strbuf_addf<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><operator pos:line="46" pos:column="21">&amp;<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="22">buf2<pos:position pos:line="46" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="28">"refs/heads/test:refs/remotes/%s/test"<pos:position pos:line="46" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="68">name<pos:position pos:line="46" pos:column="72"/></name></expr></argument>)<pos:position pos:line="46" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="74"/></expr_stmt>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator><call><name pos:line="47" pos:column="14">valid_fetch_refspec<pos:position pos:line="47" pos:column="33"/></name><argument_list pos:line="47" pos:column="33">(<argument><expr><name><name pos:line="47" pos:column="34">buf2<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">.<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="39">buf<pos:position pos:line="47" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="44"/></condition><then pos:line="47" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="17">die<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><call><name pos:line="48" pos:column="21">_<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><literal type="string" pos:line="48" pos:column="23">"'%s' is not a valid remote name"<pos:position pos:line="48" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="48" pos:column="59">name<pos:position pos:line="48" pos:column="63"/></name></expr></argument>)<pos:position pos:line="48" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="65"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="50" pos:column="9">strbuf_addf<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><operator pos:line="50" pos:column="21">&amp;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="22">buf<pos:position pos:line="50" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="27">"remote.%s.url"<pos:position pos:line="50" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="44">name<pos:position pos:line="50" pos:column="48"/></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">git_config_set<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><name><name pos:line="51" pos:column="24">buf<pos:position pos:line="51" pos:column="27"/></name><operator pos:line="51" pos:column="27">.<pos:position pos:line="51" pos:column="28"/></operator><name pos:line="51" pos:column="28">buf<pos:position pos:line="51" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="33">url<pos:position pos:line="51" pos:column="36"/></name></expr></argument>)<pos:position pos:line="51" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="38"/></expr_stmt>

	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><operator pos:line="53" pos:column="13">!<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="14">mirror<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">||<pos:position pos:line="53" pos:column="23"/></operator> <name pos:line="53" pos:column="24">mirror<pos:position pos:line="53" pos:column="30"/></name> <operator pos:line="53" pos:column="31">&amp;<pos:position pos:line="53" pos:column="36"/></operator> <name pos:line="53" pos:column="33">MIRROR_FETCH<pos:position pos:line="53" pos:column="45"/></name></expr>)<pos:position pos:line="53" pos:column="46"/></condition><then pos:line="53" pos:column="46"> <block pos:line="53" pos:column="47">{
		<expr_stmt><expr><call><name pos:line="54" pos:column="17">strbuf_reset<pos:position pos:line="54" pos:column="29"/></name><argument_list pos:line="54" pos:column="29">(<argument><expr><operator pos:line="54" pos:column="30">&amp;<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="31">buf<pos:position pos:line="54" pos:column="34"/></name></expr></argument>)<pos:position pos:line="54" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="55" pos:column="17">strbuf_addf<pos:position pos:line="55" pos:column="28"/></name><argument_list pos:line="55" pos:column="28">(<argument><expr><operator pos:line="55" pos:column="29">&amp;<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="30">buf<pos:position pos:line="55" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="35">"remote.%s.fetch"<pos:position pos:line="55" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="54">name<pos:position pos:line="55" pos:column="58"/></name></expr></argument>)<pos:position pos:line="55" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="60"/></expr_stmt>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name><name pos:line="56" pos:column="21">track<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">.<pos:position pos:line="56" pos:column="27"/></operator><name pos:line="56" pos:column="27">nr<pos:position pos:line="56" pos:column="29"/></name></name> <operator pos:line="56" pos:column="30">==<pos:position pos:line="56" pos:column="32"/></operator> <literal type="number" pos:line="56" pos:column="33">0<pos:position pos:line="56" pos:column="34"/></literal></expr>)<pos:position pos:line="56" pos:column="35"/></condition><then pos:line="56" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="25">string_list_append<pos:position pos:line="57" pos:column="43"/></name><argument_list pos:line="57" pos:column="43">(<argument><expr><operator pos:line="57" pos:column="44">&amp;<pos:position pos:line="57" pos:column="49"/></operator><name pos:line="57" pos:column="45">track<pos:position pos:line="57" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="52">"*"<pos:position pos:line="57" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="57"/></expr_stmt></block></then></if>
		<for pos:line="58" pos:column="17">for <control pos:line="58" pos:column="21">(<init><expr><name pos:line="58" pos:column="22">i<pos:position pos:line="58" pos:column="23"/></name> <operator pos:line="58" pos:column="24">=<pos:position pos:line="58" pos:column="25"/></operator> <literal type="number" pos:line="58" pos:column="26">0<pos:position pos:line="58" pos:column="27"/></literal></expr>;<pos:position pos:line="58" pos:column="28"/></init> <condition><expr><name pos:line="58" pos:column="29">i<pos:position pos:line="58" pos:column="30"/></name> <operator pos:line="58" pos:column="31">&lt;<pos:position pos:line="58" pos:column="35"/></operator> <name><name pos:line="58" pos:column="33">track<pos:position pos:line="58" pos:column="38"/></name><operator pos:line="58" pos:column="38">.<pos:position pos:line="58" pos:column="39"/></operator><name pos:line="58" pos:column="39">nr<pos:position pos:line="58" pos:column="41"/></name></name></expr>;<pos:position pos:line="58" pos:column="42"/></condition> <incr><expr><name pos:line="58" pos:column="43">i<pos:position pos:line="58" pos:column="44"/></name><operator pos:line="58" pos:column="44">++<pos:position pos:line="58" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="58" pos:column="47"/></control> <block pos:line="58" pos:column="48">{
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">add_branch<pos:position pos:line="59" pos:column="35"/></name><argument_list pos:line="59" pos:column="35">(<argument><expr><name><name pos:line="59" pos:column="36">buf<pos:position pos:line="59" pos:column="39"/></name><operator pos:line="59" pos:column="39">.<pos:position pos:line="59" pos:column="40"/></operator><name pos:line="59" pos:column="40">buf<pos:position pos:line="59" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="45">track<pos:position pos:line="59" pos:column="50"/></name><operator pos:line="59" pos:column="50">.<pos:position pos:line="59" pos:column="51"/></operator><name pos:line="59" pos:column="51">items<pos:position pos:line="59" pos:column="56"/></name><index pos:line="59" pos:column="56">[<expr><name pos:line="59" pos:column="57">i<pos:position pos:line="59" pos:column="58"/></name></expr>]<pos:position pos:line="59" pos:column="59"/></index></name><operator pos:line="59" pos:column="59">.<pos:position pos:line="59" pos:column="60"/></operator><name pos:line="59" pos:column="60">string<pos:position pos:line="59" pos:column="66"/></name></expr></argument>,
				   <argument><expr><name pos:line="60" pos:column="36">name<pos:position pos:line="60" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="42">mirror<pos:position pos:line="60" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="50">&amp;<pos:position pos:line="60" pos:column="55"/></operator><name pos:line="60" pos:column="51">buf2<pos:position pos:line="60" pos:column="55"/></name></expr></argument>)<pos:position pos:line="60" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="61" pos:column="18"/></block></for>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if>

	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">mirror<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">&amp;<pos:position pos:line="64" pos:column="25"/></operator> <name pos:line="64" pos:column="22">MIRROR_PUSH<pos:position pos:line="64" pos:column="33"/></name></expr>)<pos:position pos:line="64" pos:column="34"/></condition><then pos:line="64" pos:column="34"> <block pos:line="64" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="65" pos:column="17">strbuf_reset<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><operator pos:line="65" pos:column="30">&amp;<pos:position pos:line="65" pos:column="35"/></operator><name pos:line="65" pos:column="31">buf<pos:position pos:line="65" pos:column="34"/></name></expr></argument>)<pos:position pos:line="65" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="66" pos:column="17">strbuf_addf<pos:position pos:line="66" pos:column="28"/></name><argument_list pos:line="66" pos:column="28">(<argument><expr><operator pos:line="66" pos:column="29">&amp;<pos:position pos:line="66" pos:column="34"/></operator><name pos:line="66" pos:column="30">buf<pos:position pos:line="66" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="35">"remote.%s.mirror"<pos:position pos:line="66" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="55">name<pos:position pos:line="66" pos:column="59"/></name></expr></argument>)<pos:position pos:line="66" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">git_config_set<pos:position pos:line="67" pos:column="31"/></name><argument_list pos:line="67" pos:column="31">(<argument><expr><name><name pos:line="67" pos:column="32">buf<pos:position pos:line="67" pos:column="35"/></name><operator pos:line="67" pos:column="35">.<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="36">buf<pos:position pos:line="67" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="41">"true"<pos:position pos:line="67" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="68" pos:column="10"/></block></then></if>

	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">fetch_tags<pos:position pos:line="70" pos:column="23"/></name> <operator pos:line="70" pos:column="24">!=<pos:position pos:line="70" pos:column="26"/></operator> <name pos:line="70" pos:column="27">TAGS_DEFAULT<pos:position pos:line="70" pos:column="39"/></name></expr>)<pos:position pos:line="70" pos:column="40"/></condition><then pos:line="70" pos:column="40"> <block pos:line="70" pos:column="41">{
		<expr_stmt><expr><call><name pos:line="71" pos:column="17">strbuf_reset<pos:position pos:line="71" pos:column="29"/></name><argument_list pos:line="71" pos:column="29">(<argument><expr><operator pos:line="71" pos:column="30">&amp;<pos:position pos:line="71" pos:column="35"/></operator><name pos:line="71" pos:column="31">buf<pos:position pos:line="71" pos:column="34"/></name></expr></argument>)<pos:position pos:line="71" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="72" pos:column="17">strbuf_addf<pos:position pos:line="72" pos:column="28"/></name><argument_list pos:line="72" pos:column="28">(<argument><expr><operator pos:line="72" pos:column="29">&amp;<pos:position pos:line="72" pos:column="34"/></operator><name pos:line="72" pos:column="30">buf<pos:position pos:line="72" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="35">"remote.%s.tagopt"<pos:position pos:line="72" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="55">name<pos:position pos:line="72" pos:column="59"/></name></expr></argument>)<pos:position pos:line="72" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="73" pos:column="17">git_config_set<pos:position pos:line="73" pos:column="31"/></name><argument_list pos:line="73" pos:column="31">(<argument><expr><name><name pos:line="73" pos:column="32">buf<pos:position pos:line="73" pos:column="35"/></name><operator pos:line="73" pos:column="35">.<pos:position pos:line="73" pos:column="36"/></operator><name pos:line="73" pos:column="36">buf<pos:position pos:line="73" pos:column="39"/></name></name></expr></argument>,
			       <argument><expr><ternary><condition><expr><name pos:line="74" pos:column="32">fetch_tags<pos:position pos:line="74" pos:column="42"/></name> <operator pos:line="74" pos:column="43">==<pos:position pos:line="74" pos:column="45"/></operator> <name pos:line="74" pos:column="46">TAGS_SET<pos:position pos:line="74" pos:column="54"/></name></expr> ?<pos:position pos:line="74" pos:column="56"/></condition><then pos:line="74" pos:column="56"> <expr><literal type="string" pos:line="74" pos:column="57">"--tags"<pos:position pos:line="74" pos:column="65"/></literal></expr> <pos:position pos:line="74" pos:column="66"/></then><else pos:line="74" pos:column="66">: <expr><literal type="string" pos:line="74" pos:column="68">"--no-tags"<pos:position pos:line="74" pos:column="79"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="74" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="81"/></expr_stmt>
	}<pos:position pos:line="75" pos:column="10"/></block></then></if>

	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><name pos:line="77" pos:column="13">fetch<pos:position pos:line="77" pos:column="18"/></name> <operator pos:line="77" pos:column="19">&amp;&amp;<pos:position pos:line="77" pos:column="29"/></operator> <call><name pos:line="77" pos:column="22">fetch_remote<pos:position pos:line="77" pos:column="34"/></name><argument_list pos:line="77" pos:column="34">(<argument><expr><name pos:line="77" pos:column="35">name<pos:position pos:line="77" pos:column="39"/></name></expr></argument>)<pos:position pos:line="77" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="41"/></condition><then pos:line="77" pos:column="41">
		<block type="pseudo"><return pos:line="78" pos:column="17">return <expr><literal type="number" pos:line="78" pos:column="24">1<pos:position pos:line="78" pos:column="25"/></literal></expr>;<pos:position pos:line="78" pos:column="26"/></return></block></then></if>

	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name pos:line="80" pos:column="13">master<pos:position pos:line="80" pos:column="19"/></name></expr>)<pos:position pos:line="80" pos:column="20"/></condition><then pos:line="80" pos:column="20"> <block pos:line="80" pos:column="21">{
		<expr_stmt><expr><call><name pos:line="81" pos:column="17">strbuf_reset<pos:position pos:line="81" pos:column="29"/></name><argument_list pos:line="81" pos:column="29">(<argument><expr><operator pos:line="81" pos:column="30">&amp;<pos:position pos:line="81" pos:column="35"/></operator><name pos:line="81" pos:column="31">buf<pos:position pos:line="81" pos:column="34"/></name></expr></argument>)<pos:position pos:line="81" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="82" pos:column="17">strbuf_addf<pos:position pos:line="82" pos:column="28"/></name><argument_list pos:line="82" pos:column="28">(<argument><expr><operator pos:line="82" pos:column="29">&amp;<pos:position pos:line="82" pos:column="34"/></operator><name pos:line="82" pos:column="30">buf<pos:position pos:line="82" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="35">"refs/remotes/%s/HEAD"<pos:position pos:line="82" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="59">name<pos:position pos:line="82" pos:column="63"/></name></expr></argument>)<pos:position pos:line="82" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="65"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="84" pos:column="17">strbuf_reset<pos:position pos:line="84" pos:column="29"/></name><argument_list pos:line="84" pos:column="29">(<argument><expr><operator pos:line="84" pos:column="30">&amp;<pos:position pos:line="84" pos:column="35"/></operator><name pos:line="84" pos:column="31">buf2<pos:position pos:line="84" pos:column="35"/></name></expr></argument>)<pos:position pos:line="84" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="85" pos:column="17">strbuf_addf<pos:position pos:line="85" pos:column="28"/></name><argument_list pos:line="85" pos:column="28">(<argument><expr><operator pos:line="85" pos:column="29">&amp;<pos:position pos:line="85" pos:column="34"/></operator><name pos:line="85" pos:column="30">buf2<pos:position pos:line="85" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="36">"refs/remotes/%s/%s"<pos:position pos:line="85" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="58">name<pos:position pos:line="85" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="64">master<pos:position pos:line="85" pos:column="70"/></name></expr></argument>)<pos:position pos:line="85" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="72"/></expr_stmt>

		<if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><call><name pos:line="87" pos:column="21">create_symref<pos:position pos:line="87" pos:column="34"/></name><argument_list pos:line="87" pos:column="34">(<argument><expr><name><name pos:line="87" pos:column="35">buf<pos:position pos:line="87" pos:column="38"/></name><operator pos:line="87" pos:column="38">.<pos:position pos:line="87" pos:column="39"/></operator><name pos:line="87" pos:column="39">buf<pos:position pos:line="87" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="44">buf2<pos:position pos:line="87" pos:column="48"/></name><operator pos:line="87" pos:column="48">.<pos:position pos:line="87" pos:column="49"/></operator><name pos:line="87" pos:column="49">buf<pos:position pos:line="87" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="54">"remote add"<pos:position pos:line="87" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="68"/></condition><then pos:line="87" pos:column="68">
			<block type="pseudo"><return pos:line="88" pos:column="25">return <expr><call><name pos:line="88" pos:column="32">error<pos:position pos:line="88" pos:column="37"/></name><argument_list pos:line="88" pos:column="37">(<argument><expr><call><name pos:line="88" pos:column="38">_<pos:position pos:line="88" pos:column="39"/></name><argument_list pos:line="88" pos:column="39">(<argument><expr><literal type="string" pos:line="88" pos:column="40">"Could not setup master '%s'"<pos:position pos:line="88" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="88" pos:column="72">master<pos:position pos:line="88" pos:column="78"/></name></expr></argument>)<pos:position pos:line="88" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="80"/></return></block></then></if>
	}<pos:position pos:line="89" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="91" pos:column="9">strbuf_release<pos:position pos:line="91" pos:column="23"/></name><argument_list pos:line="91" pos:column="23">(<argument><expr><operator pos:line="91" pos:column="24">&amp;<pos:position pos:line="91" pos:column="29"/></operator><name pos:line="91" pos:column="25">buf<pos:position pos:line="91" pos:column="28"/></name></expr></argument>)<pos:position pos:line="91" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="92" pos:column="9">strbuf_release<pos:position pos:line="92" pos:column="23"/></name><argument_list pos:line="92" pos:column="23">(<argument><expr><operator pos:line="92" pos:column="24">&amp;<pos:position pos:line="92" pos:column="29"/></operator><name pos:line="92" pos:column="25">buf2<pos:position pos:line="92" pos:column="29"/></name></expr></argument>)<pos:position pos:line="92" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="93" pos:column="9">string_list_clear<pos:position pos:line="93" pos:column="26"/></name><argument_list pos:line="93" pos:column="26">(<argument><expr><operator pos:line="93" pos:column="27">&amp;<pos:position pos:line="93" pos:column="32"/></operator><name pos:line="93" pos:column="28">track<pos:position pos:line="93" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="35">0<pos:position pos:line="93" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="38"/></expr_stmt>

	<return pos:line="95" pos:column="9">return <expr><literal type="number" pos:line="95" pos:column="16">0<pos:position pos:line="95" pos:column="17"/></literal></expr>;<pos:position pos:line="95" pos:column="18"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

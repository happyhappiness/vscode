<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1878_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">init_pack_info<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">infofile<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">force<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">packed_git<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">p<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">stale<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">objdir<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <call><name pos:line="7" pos:column="18">get_object_directory<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">()<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">objdirlen<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <call><name pos:line="8" pos:column="21">strlen<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">objdir<pos:position pos:line="8" pos:column="34"/></name></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">prepare_packed_git<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">()<pos:position pos:line="10" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>
	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">p<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">packed_git<pos:position pos:line="11" pos:column="28"/></name></expr>;<pos:position pos:line="11" pos:column="29"/></init> <condition><expr><name pos:line="11" pos:column="30">p<pos:position pos:line="11" pos:column="31"/></name></expr>;<pos:position pos:line="11" pos:column="32"/></condition> <incr><expr><name pos:line="11" pos:column="33">p<pos:position pos:line="11" pos:column="34"/></name> <operator pos:line="11" pos:column="35">=<pos:position pos:line="11" pos:column="36"/></operator> <name><name pos:line="11" pos:column="37">p<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">next<pos:position pos:line="11" pos:column="44"/></name></name></expr></incr>)<pos:position pos:line="11" pos:column="45"/></control> <block pos:line="11" pos:column="46">{
		<comment type="block" pos:line="12" pos:column="17">/* we ignore things on alternate path since they are
		 * not available to the pullers in general.
		 */</comment>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><name><name pos:line="15" pos:column="22">p<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">-&gt;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="25">pack_local<pos:position pos:line="15" pos:column="35"/></name></name></expr>)<pos:position pos:line="15" pos:column="36"/></condition><then pos:line="15" pos:column="36">
			<block type="pseudo"><continue pos:line="16" pos:column="25">continue;<pos:position pos:line="16" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="17" pos:column="17">i<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">++<pos:position pos:line="17" pos:column="20"/></operator></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
	<expr_stmt><expr><name pos:line="19" pos:column="9">num_pack<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">i<pos:position pos:line="19" pos:column="21"/></name></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">info<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">xcalloc<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">num_pack<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="34">sizeof<argument_list pos:line="20" pos:column="40">(<argument><expr pos:line="20" pos:column="41">struct <name pos:line="20" pos:column="48">pack_info<pos:position pos:line="20" pos:column="57"/></name> <operator pos:line="20" pos:column="58">*<pos:position pos:line="20" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt>
	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">i<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr><operator pos:line="21" pos:column="19">,<pos:position pos:line="21" pos:column="20"/></operator> <expr><name pos:line="21" pos:column="21">p<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">packed_git<pos:position pos:line="21" pos:column="35"/></name></expr>;<pos:position pos:line="21" pos:column="36"/></init> <condition><expr><name pos:line="21" pos:column="37">p<pos:position pos:line="21" pos:column="38"/></name></expr>;<pos:position pos:line="21" pos:column="39"/></condition> <incr><expr><name pos:line="21" pos:column="40">p<pos:position pos:line="21" pos:column="41"/></name> <operator pos:line="21" pos:column="42">=<pos:position pos:line="21" pos:column="43"/></operator> <name><name pos:line="21" pos:column="44">p<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">next<pos:position pos:line="21" pos:column="51"/></name></name></expr></incr>)<pos:position pos:line="21" pos:column="52"/></control> <block pos:line="21" pos:column="53">{
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><name><name pos:line="22" pos:column="22">p<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">pack_local<pos:position pos:line="22" pos:column="35"/></name></name></expr>)<pos:position pos:line="22" pos:column="36"/></condition><then pos:line="22" pos:column="36">
			<block type="pseudo"><continue pos:line="23" pos:column="25">continue;<pos:position pos:line="23" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name><name pos:line="24" pos:column="17">info<pos:position pos:line="24" pos:column="21"/></name><index pos:line="24" pos:column="21">[<expr><name pos:line="24" pos:column="22">i<pos:position pos:line="24" pos:column="23"/></name></expr>]<pos:position pos:line="24" pos:column="24"/></index></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <call><name pos:line="24" pos:column="27">xcalloc<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><literal type="number" pos:line="24" pos:column="35">1<pos:position pos:line="24" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="38">sizeof<argument_list pos:line="24" pos:column="44">(<argument><expr pos:line="24" pos:column="45">struct <name pos:line="24" pos:column="52">pack_info<pos:position pos:line="24" pos:column="61"/></name></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">info<pos:position pos:line="25" pos:column="21"/></name><index pos:line="25" pos:column="21">[<expr><name pos:line="25" pos:column="22">i<pos:position pos:line="25" pos:column="23"/></name></expr>]<pos:position pos:line="25" pos:column="24"/></index></name><operator pos:line="25" pos:column="24">-&gt;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="26">p<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">=<pos:position pos:line="25" pos:column="29"/></operator> <name pos:line="25" pos:column="30">p<pos:position pos:line="25" pos:column="31"/></name></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">info<pos:position pos:line="26" pos:column="21"/></name><index pos:line="26" pos:column="21">[<expr><name pos:line="26" pos:column="22">i<pos:position pos:line="26" pos:column="23"/></name></expr>]<pos:position pos:line="26" pos:column="24"/></index></name><operator pos:line="26" pos:column="24">-&gt;<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="26">old_num<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">=<pos:position pos:line="26" pos:column="35"/></operator> <operator pos:line="26" pos:column="36">-<pos:position pos:line="26" pos:column="37"/></operator><literal type="number" pos:line="26" pos:column="37">1<pos:position pos:line="26" pos:column="38"/></literal></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="27" pos:column="17">i<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">++<pos:position pos:line="27" pos:column="20"/></operator></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></for>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">infofile<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">&amp;&amp;<pos:position pos:line="30" pos:column="32"/></operator> <operator pos:line="30" pos:column="25">!<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="26">force<pos:position pos:line="30" pos:column="31"/></name></expr>)<pos:position pos:line="30" pos:column="32"/></condition><then pos:line="30" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="17">stale<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <call><name pos:line="31" pos:column="25">read_pack_info_file<pos:position pos:line="31" pos:column="44"/></name><argument_list pos:line="31" pos:column="44">(<argument><expr><name pos:line="31" pos:column="45">infofile<pos:position pos:line="31" pos:column="53"/></name></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt></block></then>
	<else pos:line="32" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="17">stale<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <literal type="number" pos:line="33" pos:column="25">1<pos:position pos:line="33" pos:column="26"/></literal></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt></block></else></if>

	<for pos:line="35" pos:column="9">for <control pos:line="35" pos:column="13">(<init><expr><name pos:line="35" pos:column="14">i<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <literal type="number" pos:line="35" pos:column="18">0<pos:position pos:line="35" pos:column="19"/></literal></expr>;<pos:position pos:line="35" pos:column="20"/></init> <condition><expr><name pos:line="35" pos:column="21">i<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">&lt;<pos:position pos:line="35" pos:column="27"/></operator> <name pos:line="35" pos:column="25">num_pack<pos:position pos:line="35" pos:column="33"/></name></expr>;<pos:position pos:line="35" pos:column="34"/></condition> <incr><expr><name pos:line="35" pos:column="35">i<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">++<pos:position pos:line="35" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="39"/></control> <block pos:line="35" pos:column="40">{
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">stale<pos:position pos:line="36" pos:column="26"/></name></expr>)<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27"> <block pos:line="36" pos:column="28">{
			<expr_stmt><expr><name><name pos:line="37" pos:column="25">info<pos:position pos:line="37" pos:column="29"/></name><index pos:line="37" pos:column="29">[<expr><name pos:line="37" pos:column="30">i<pos:position pos:line="37" pos:column="31"/></name></expr>]<pos:position pos:line="37" pos:column="32"/></index></name><operator pos:line="37" pos:column="32">-&gt;<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="34">old_num<pos:position pos:line="37" pos:column="41"/></name> <operator pos:line="37" pos:column="42">=<pos:position pos:line="37" pos:column="43"/></operator> <operator pos:line="37" pos:column="44">-<pos:position pos:line="37" pos:column="45"/></operator><literal type="number" pos:line="37" pos:column="45">1<pos:position pos:line="37" pos:column="46"/></literal></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="38" pos:column="25">info<pos:position pos:line="38" pos:column="29"/></name><index pos:line="38" pos:column="29">[<expr><name pos:line="38" pos:column="30">i<pos:position pos:line="38" pos:column="31"/></name></expr>]<pos:position pos:line="38" pos:column="32"/></index></name><operator pos:line="38" pos:column="32">-&gt;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="34">nr_heads<pos:position pos:line="38" pos:column="42"/></name> <operator pos:line="38" pos:column="43">=<pos:position pos:line="38" pos:column="44"/></operator> <literal type="number" pos:line="38" pos:column="45">0<pos:position pos:line="38" pos:column="46"/></literal></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if>
	}<pos:position pos:line="40" pos:column="10"/></block></for>

	<comment type="block" pos:line="42" pos:column="9">/* renumber them */</comment>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">QSORT<pos:position pos:line="43" pos:column="14"/></name><argument_list pos:line="43" pos:column="14">(<argument><expr><name pos:line="43" pos:column="15">info<pos:position pos:line="43" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="21">num_pack<pos:position pos:line="43" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="31">compare_info<pos:position pos:line="43" pos:column="43"/></name></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt>
	<for pos:line="44" pos:column="9">for <control pos:line="44" pos:column="13">(<init><expr><name pos:line="44" pos:column="14">i<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal></expr>;<pos:position pos:line="44" pos:column="20"/></init> <condition><expr><name pos:line="44" pos:column="21">i<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">&lt;<pos:position pos:line="44" pos:column="27"/></operator> <name pos:line="44" pos:column="25">num_pack<pos:position pos:line="44" pos:column="33"/></name></expr>;<pos:position pos:line="44" pos:column="34"/></condition> <incr><expr><name pos:line="44" pos:column="35">i<pos:position pos:line="44" pos:column="36"/></name><operator pos:line="44" pos:column="36">++<pos:position pos:line="44" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="44" pos:column="39"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="45" pos:column="17">info<pos:position pos:line="45" pos:column="21"/></name><index pos:line="45" pos:column="21">[<expr><name pos:line="45" pos:column="22">i<pos:position pos:line="45" pos:column="23"/></name></expr>]<pos:position pos:line="45" pos:column="24"/></index></name><operator pos:line="45" pos:column="24">-&gt;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="26">new_num<pos:position pos:line="45" pos:column="33"/></name> <operator pos:line="45" pos:column="34">=<pos:position pos:line="45" pos:column="35"/></operator> <name pos:line="45" pos:column="36">i<pos:position pos:line="45" pos:column="37"/></name></expr>;<pos:position pos:line="45" pos:column="38"/></expr_stmt></block></for>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

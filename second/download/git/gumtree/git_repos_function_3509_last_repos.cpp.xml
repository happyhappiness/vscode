<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3509_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_option<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">arg<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">len<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">unsigned<pos:position pos:line="1" pos:column="59"/></name> <name pos:line="1" pos:column="60">int<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">colopts<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">group_set<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">colopt<pos:position pos:line="4" pos:column="22"/></name></name></type> <name><name pos:line="4" pos:column="23">opts<pos:position pos:line="4" pos:column="27"/></name><index pos:line="4" pos:column="27">[]<pos:position pos:line="4" pos:column="29"/></index></name> <init pos:line="4" pos:column="30">= <expr><block pos:line="4" pos:column="32">{
		<expr><block pos:line="5" pos:column="17">{ <expr><literal type="string" pos:line="5" pos:column="19">"always"<pos:position pos:line="5" pos:column="27"/></literal></expr>, <expr><name pos:line="5" pos:column="29">COL_ENABLED<pos:position pos:line="5" pos:column="40"/></name></expr>,  <expr><name pos:line="5" pos:column="43">COL_ENABLE_MASK<pos:position pos:line="5" pos:column="58"/></name></expr> }<pos:position pos:line="5" pos:column="60"/></block></expr>,
		<expr><block pos:line="6" pos:column="17">{ <expr><literal type="string" pos:line="6" pos:column="19">"never"<pos:position pos:line="6" pos:column="26"/></literal></expr>,  <expr><name pos:line="6" pos:column="29">COL_DISABLED<pos:position pos:line="6" pos:column="41"/></name></expr>, <expr><name pos:line="6" pos:column="43">COL_ENABLE_MASK<pos:position pos:line="6" pos:column="58"/></name></expr> }<pos:position pos:line="6" pos:column="60"/></block></expr>,
		<expr><block pos:line="7" pos:column="17">{ <expr><literal type="string" pos:line="7" pos:column="19">"auto"<pos:position pos:line="7" pos:column="25"/></literal></expr>,   <expr><name pos:line="7" pos:column="29">COL_AUTO<pos:position pos:line="7" pos:column="37"/></name></expr>,     <expr><name pos:line="7" pos:column="43">COL_ENABLE_MASK<pos:position pos:line="7" pos:column="58"/></name></expr> }<pos:position pos:line="7" pos:column="60"/></block></expr>,
		<expr><block pos:line="8" pos:column="17">{ <expr><literal type="string" pos:line="8" pos:column="19">"plain"<pos:position pos:line="8" pos:column="26"/></literal></expr>,  <expr><name pos:line="8" pos:column="29">COL_PLAIN<pos:position pos:line="8" pos:column="38"/></name></expr>,    <expr><name pos:line="8" pos:column="43">COL_LAYOUT_MASK<pos:position pos:line="8" pos:column="58"/></name></expr> }<pos:position pos:line="8" pos:column="60"/></block></expr>,
		<expr><block pos:line="9" pos:column="17">{ <expr><literal type="string" pos:line="9" pos:column="19">"column"<pos:position pos:line="9" pos:column="27"/></literal></expr>, <expr><name pos:line="9" pos:column="29">COL_COLUMN<pos:position pos:line="9" pos:column="39"/></name></expr>,   <expr><name pos:line="9" pos:column="43">COL_LAYOUT_MASK<pos:position pos:line="9" pos:column="58"/></name></expr> }<pos:position pos:line="9" pos:column="60"/></block></expr>,
		<expr><block pos:line="10" pos:column="17">{ <expr><literal type="string" pos:line="10" pos:column="19">"row"<pos:position pos:line="10" pos:column="24"/></literal></expr>,    <expr><name pos:line="10" pos:column="29">COL_ROW<pos:position pos:line="10" pos:column="36"/></name></expr>,      <expr><name pos:line="10" pos:column="43">COL_LAYOUT_MASK<pos:position pos:line="10" pos:column="58"/></name></expr> }<pos:position pos:line="10" pos:column="60"/></block></expr>,
		<expr><block pos:line="11" pos:column="17">{ <expr><literal type="string" pos:line="11" pos:column="19">"dense"<pos:position pos:line="11" pos:column="26"/></literal></expr>,  <expr><name pos:line="11" pos:column="29">COL_DENSE<pos:position pos:line="11" pos:column="38"/></name></expr>,    <expr><literal type="number" pos:line="11" pos:column="43">0<pos:position pos:line="11" pos:column="44"/></literal></expr> }<pos:position pos:line="11" pos:column="46"/></block></expr>,
	}<pos:position pos:line="12" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="12" pos:column="11"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">i<pos:position pos:line="13" pos:column="14"/></name></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>

	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></init> <condition><expr><name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&lt;<pos:position pos:line="15" pos:column="27"/></operator> <call><name pos:line="15" pos:column="25">ARRAY_SIZE<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">opts<pos:position pos:line="15" pos:column="40"/></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="42"/></condition> <incr><expr><name pos:line="15" pos:column="43">i<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">++<pos:position pos:line="15" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="47"/></control> <block pos:line="15" pos:column="48">{
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">int<pos:position pos:line="16" pos:column="20"/></name></type> <name pos:line="16" pos:column="21">set<pos:position pos:line="16" pos:column="24"/></name> <init pos:line="16" pos:column="25">= <expr><literal type="number" pos:line="16" pos:column="27">1<pos:position pos:line="16" pos:column="28"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="16" pos:column="30">arg_len<pos:position pos:line="16" pos:column="37"/></name> <init pos:line="16" pos:column="38">= <expr><name pos:line="16" pos:column="40">len<pos:position pos:line="16" pos:column="43"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="16" pos:column="45">name_len<pos:position pos:line="16" pos:column="53"/></name></decl>;<pos:position pos:line="16" pos:column="54"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="17" pos:column="17">const<pos:position pos:line="17" pos:column="22"/></specifier> <name pos:line="17" pos:column="23">char<pos:position pos:line="17" pos:column="27"/></name> <modifier pos:line="17" pos:column="28">*<pos:position pos:line="17" pos:column="29"/></modifier></type><name pos:line="17" pos:column="29">arg_str<pos:position pos:line="17" pos:column="36"/></name> <init pos:line="17" pos:column="37">= <expr><name pos:line="17" pos:column="39">arg<pos:position pos:line="17" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="43"/></decl_stmt>

		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><name><name pos:line="19" pos:column="22">opts<pos:position pos:line="19" pos:column="26"/></name><index pos:line="19" pos:column="26">[<expr><name pos:line="19" pos:column="27">i<pos:position pos:line="19" pos:column="28"/></name></expr>]<pos:position pos:line="19" pos:column="29"/></index></name><operator pos:line="19" pos:column="29">.<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">mask<pos:position pos:line="19" pos:column="34"/></name></expr>)<pos:position pos:line="19" pos:column="35"/></condition><then pos:line="19" pos:column="35"> <block pos:line="19" pos:column="36">{
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><name pos:line="20" pos:column="29">arg_len<pos:position pos:line="20" pos:column="36"/></name> <operator pos:line="20" pos:column="37">&gt;<pos:position pos:line="20" pos:column="41"/></operator> <literal type="number" pos:line="20" pos:column="39">2<pos:position pos:line="20" pos:column="40"/></literal> <operator pos:line="20" pos:column="41">&amp;&amp;<pos:position pos:line="20" pos:column="51"/></operator> <operator pos:line="20" pos:column="44">!<pos:position pos:line="20" pos:column="45"/></operator><call><name pos:line="20" pos:column="45">strncmp<pos:position pos:line="20" pos:column="52"/></name><argument_list pos:line="20" pos:column="52">(<argument><expr><name pos:line="20" pos:column="53">arg_str<pos:position pos:line="20" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="62">"no"<pos:position pos:line="20" pos:column="66"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="68">2<pos:position pos:line="20" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="71"/></condition><then pos:line="20" pos:column="71"> <block pos:line="20" pos:column="72">{
				<expr_stmt><expr><name pos:line="21" pos:column="33">arg_str<pos:position pos:line="21" pos:column="40"/></name> <operator pos:line="21" pos:column="41">+=<pos:position pos:line="21" pos:column="43"/></operator> <literal type="number" pos:line="21" pos:column="44">2<pos:position pos:line="21" pos:column="45"/></literal></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt>
				<expr_stmt><expr><name pos:line="22" pos:column="33">arg_len<pos:position pos:line="22" pos:column="40"/></name> <operator pos:line="22" pos:column="41">-=<pos:position pos:line="22" pos:column="43"/></operator> <literal type="number" pos:line="22" pos:column="44">2<pos:position pos:line="22" pos:column="45"/></literal></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>
				<expr_stmt><expr><name pos:line="23" pos:column="33">set<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">=<pos:position pos:line="23" pos:column="38"/></operator> <literal type="number" pos:line="23" pos:column="39">0<pos:position pos:line="23" pos:column="40"/></literal></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt>
			}<pos:position pos:line="24" pos:column="26"/></block></then></if>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="27" pos:column="17">name_len<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">=<pos:position pos:line="27" pos:column="27"/></operator> <call><name pos:line="27" pos:column="28">strlen<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name><name pos:line="27" pos:column="35">opts<pos:position pos:line="27" pos:column="39"/></name><index pos:line="27" pos:column="39">[<expr><name pos:line="27" pos:column="40">i<pos:position pos:line="27" pos:column="41"/></name></expr>]<pos:position pos:line="27" pos:column="42"/></index></name><operator pos:line="27" pos:column="42">.<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="43">name<pos:position pos:line="27" pos:column="47"/></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">arg_len<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">!=<pos:position pos:line="28" pos:column="31"/></operator> <name pos:line="28" pos:column="32">name_len<pos:position pos:line="28" pos:column="40"/></name> <operator pos:line="28" pos:column="41">||<pos:position pos:line="28" pos:column="43"/></operator>
		    <call><name pos:line="29" pos:column="21">strncmp<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name pos:line="29" pos:column="29">arg_str<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="38">opts<pos:position pos:line="29" pos:column="42"/></name><index pos:line="29" pos:column="42">[<expr><name pos:line="29" pos:column="43">i<pos:position pos:line="29" pos:column="44"/></name></expr>]<pos:position pos:line="29" pos:column="45"/></index></name><operator pos:line="29" pos:column="45">.<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="46">name<pos:position pos:line="29" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="52">name_len<pos:position pos:line="29" pos:column="60"/></name></expr></argument>)<pos:position pos:line="29" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="62"/></condition><then pos:line="29" pos:column="62">
			<block type="pseudo"><continue pos:line="30" pos:column="25">continue;<pos:position pos:line="30" pos:column="34"/></continue></block></then></if>

		<switch pos:line="32" pos:column="17">switch <condition pos:line="32" pos:column="24">(<expr><name><name pos:line="32" pos:column="25">opts<pos:position pos:line="32" pos:column="29"/></name><index pos:line="32" pos:column="29">[<expr><name pos:line="32" pos:column="30">i<pos:position pos:line="32" pos:column="31"/></name></expr>]<pos:position pos:line="32" pos:column="32"/></index></name><operator pos:line="32" pos:column="32">.<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="33">mask<pos:position pos:line="32" pos:column="37"/></name></expr>)<pos:position pos:line="32" pos:column="38"/></condition> <block pos:line="32" pos:column="39">{
		<case pos:line="33" pos:column="17">case <expr><name pos:line="33" pos:column="22">COL_ENABLE_MASK<pos:position pos:line="33" pos:column="37"/></name></expr>:<pos:position pos:line="33" pos:column="38"/></case>
			<expr_stmt><expr><operator pos:line="34" pos:column="25">*<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="26">group_set<pos:position pos:line="34" pos:column="35"/></name> <operator pos:line="34" pos:column="36">|=<pos:position pos:line="34" pos:column="38"/></operator> <name pos:line="34" pos:column="39">ENABLE_SET<pos:position pos:line="34" pos:column="49"/></name></expr>;<pos:position pos:line="34" pos:column="50"/></expr_stmt>
			<break pos:line="35" pos:column="25">break;<pos:position pos:line="35" pos:column="31"/></break>
		<case pos:line="36" pos:column="17">case <expr><name pos:line="36" pos:column="22">COL_LAYOUT_MASK<pos:position pos:line="36" pos:column="37"/></name></expr>:<pos:position pos:line="36" pos:column="38"/></case>
			<expr_stmt><expr><operator pos:line="37" pos:column="25">*<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="26">group_set<pos:position pos:line="37" pos:column="35"/></name> <operator pos:line="37" pos:column="36">|=<pos:position pos:line="37" pos:column="38"/></operator> <name pos:line="37" pos:column="39">LAYOUT_SET<pos:position pos:line="37" pos:column="49"/></name></expr>;<pos:position pos:line="37" pos:column="50"/></expr_stmt>
			<break pos:line="38" pos:column="25">break;<pos:position pos:line="38" pos:column="31"/></break>
		}<pos:position pos:line="39" pos:column="18"/></block></switch>

		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name><name pos:line="41" pos:column="21">opts<pos:position pos:line="41" pos:column="25"/></name><index pos:line="41" pos:column="25">[<expr><name pos:line="41" pos:column="26">i<pos:position pos:line="41" pos:column="27"/></name></expr>]<pos:position pos:line="41" pos:column="28"/></index></name><operator pos:line="41" pos:column="28">.<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="29">mask<pos:position pos:line="41" pos:column="33"/></name></expr>)<pos:position pos:line="41" pos:column="34"/></condition><then pos:line="41" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="42" pos:column="25">*<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="26">colopts<pos:position pos:line="42" pos:column="33"/></name> <operator pos:line="42" pos:column="34">=<pos:position pos:line="42" pos:column="35"/></operator> <operator pos:line="42" pos:column="36">(<pos:position pos:line="42" pos:column="37"/></operator><operator pos:line="42" pos:column="37">*<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="38">colopts<pos:position pos:line="42" pos:column="45"/></name> <operator pos:line="42" pos:column="46">&amp;<pos:position pos:line="42" pos:column="51"/></operator> <operator pos:line="42" pos:column="48">~<pos:position pos:line="42" pos:column="49"/></operator><name><name pos:line="42" pos:column="49">opts<pos:position pos:line="42" pos:column="53"/></name><index pos:line="42" pos:column="53">[<expr><name pos:line="42" pos:column="54">i<pos:position pos:line="42" pos:column="55"/></name></expr>]<pos:position pos:line="42" pos:column="56"/></index></name><operator pos:line="42" pos:column="56">.<pos:position pos:line="42" pos:column="57"/></operator><name pos:line="42" pos:column="57">mask<pos:position pos:line="42" pos:column="61"/></name><operator pos:line="42" pos:column="61">)<pos:position pos:line="42" pos:column="62"/></operator> <operator pos:line="42" pos:column="63">|<pos:position pos:line="42" pos:column="64"/></operator> <name><name pos:line="42" pos:column="65">opts<pos:position pos:line="42" pos:column="69"/></name><index pos:line="42" pos:column="69">[<expr><name pos:line="42" pos:column="70">i<pos:position pos:line="42" pos:column="71"/></name></expr>]<pos:position pos:line="42" pos:column="72"/></index></name><operator pos:line="42" pos:column="72">.<pos:position pos:line="42" pos:column="73"/></operator><name pos:line="42" pos:column="73">value<pos:position pos:line="42" pos:column="78"/></name></expr>;<pos:position pos:line="42" pos:column="79"/></expr_stmt></block></then>
		<else pos:line="43" pos:column="17">else <block pos:line="43" pos:column="22">{
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><name pos:line="44" pos:column="29">set<pos:position pos:line="44" pos:column="32"/></name></expr>)<pos:position pos:line="44" pos:column="33"/></condition><then pos:line="44" pos:column="33">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="45" pos:column="33">*<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="34">colopts<pos:position pos:line="45" pos:column="41"/></name> <operator pos:line="45" pos:column="42">|=<pos:position pos:line="45" pos:column="44"/></operator> <name><name pos:line="45" pos:column="45">opts<pos:position pos:line="45" pos:column="49"/></name><index pos:line="45" pos:column="49">[<expr><name pos:line="45" pos:column="50">i<pos:position pos:line="45" pos:column="51"/></name></expr>]<pos:position pos:line="45" pos:column="52"/></index></name><operator pos:line="45" pos:column="52">.<pos:position pos:line="45" pos:column="53"/></operator><name pos:line="45" pos:column="53">value<pos:position pos:line="45" pos:column="58"/></name></expr>;<pos:position pos:line="45" pos:column="59"/></expr_stmt></block></then>
			<else pos:line="46" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><operator pos:line="47" pos:column="33">*<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="34">colopts<pos:position pos:line="47" pos:column="41"/></name> <operator pos:line="47" pos:column="42">&amp;=<pos:position pos:line="47" pos:column="48"/></operator> <operator pos:line="47" pos:column="45">~<pos:position pos:line="47" pos:column="46"/></operator><name><name pos:line="47" pos:column="46">opts<pos:position pos:line="47" pos:column="50"/></name><index pos:line="47" pos:column="50">[<expr><name pos:line="47" pos:column="51">i<pos:position pos:line="47" pos:column="52"/></name></expr>]<pos:position pos:line="47" pos:column="53"/></index></name><operator pos:line="47" pos:column="53">.<pos:position pos:line="47" pos:column="54"/></operator><name pos:line="47" pos:column="54">value<pos:position pos:line="47" pos:column="59"/></name></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt></block></else></if>
		}<pos:position pos:line="48" pos:column="18"/></block></else></if>
		<return pos:line="49" pos:column="17">return <expr><literal type="number" pos:line="49" pos:column="24">0<pos:position pos:line="49" pos:column="25"/></literal></expr>;<pos:position pos:line="49" pos:column="26"/></return>
	}<pos:position pos:line="50" pos:column="10"/></block></for>

	<return pos:line="52" pos:column="9">return <expr><call><name pos:line="52" pos:column="16">error<pos:position pos:line="52" pos:column="21"/></name><argument_list pos:line="52" pos:column="21">(<argument><expr><literal type="string" pos:line="52" pos:column="22">"unsupported option '%s'"<pos:position pos:line="52" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="49">arg<pos:position pos:line="52" pos:column="52"/></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="54"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4862_git-2.10.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">delete_branches<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">argc<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">argv<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">force<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">int<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">kinds<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">quiet<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">head_rev<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><name pos:line="4" pos:column="35">NULL<pos:position pos:line="4" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">char<pos:position pos:line="5" pos:column="22"/></name></type> <name><name pos:line="5" pos:column="23">sha1<pos:position pos:line="5" pos:column="27"/></name><index pos:line="5" pos:column="27">[<expr><literal type="number" pos:line="5" pos:column="28">20<pos:position pos:line="5" pos:column="30"/></literal></expr>]<pos:position pos:line="5" pos:column="31"/></index></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">name<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">NULL<pos:position pos:line="6" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">fmt<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">ret<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">remote_branch<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">strbuf<pos:position pos:line="11" pos:column="22"/></name></name></type> <name pos:line="11" pos:column="23">bname<pos:position pos:line="11" pos:column="28"/></name> <init pos:line="11" pos:column="29">= <expr><name pos:line="11" pos:column="31">STRBUF_INIT<pos:position pos:line="11" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="43"/></decl_stmt>

	<switch pos:line="13" pos:column="9">switch <condition pos:line="13" pos:column="16">(<expr><name pos:line="13" pos:column="17">kinds<pos:position pos:line="13" pos:column="22"/></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition> <block pos:line="13" pos:column="24">{
	<case pos:line="14" pos:column="9">case <expr><name pos:line="14" pos:column="14">FILTER_REFS_REMOTES<pos:position pos:line="14" pos:column="33"/></name></expr>:<pos:position pos:line="14" pos:column="34"/></case>
		<expr_stmt><expr><name pos:line="15" pos:column="17">fmt<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <literal type="string" pos:line="15" pos:column="23">"refs/remotes/%s"<pos:position pos:line="15" pos:column="40"/></literal></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
		<comment type="block" pos:line="16" pos:column="17">/* For subsequent UI messages */</comment>
		<expr_stmt><expr><name pos:line="17" pos:column="17">remote_branch<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">=<pos:position pos:line="17" pos:column="32"/></operator> <literal type="number" pos:line="17" pos:column="33">1<pos:position pos:line="17" pos:column="34"/></literal></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>

		<expr_stmt><expr><name pos:line="19" pos:column="17">force<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
		<break pos:line="20" pos:column="17">break;<pos:position pos:line="20" pos:column="23"/></break>
	<case pos:line="21" pos:column="9">case <expr><name pos:line="21" pos:column="14">FILTER_REFS_BRANCHES<pos:position pos:line="21" pos:column="34"/></name></expr>:<pos:position pos:line="21" pos:column="35"/></case>
		<expr_stmt><expr><name pos:line="22" pos:column="17">fmt<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <literal type="string" pos:line="22" pos:column="23">"refs/heads/%s"<pos:position pos:line="22" pos:column="38"/></literal></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
		<break pos:line="23" pos:column="17">break;<pos:position pos:line="23" pos:column="23"/></break>
	<default pos:line="24" pos:column="9">default:<pos:position pos:line="24" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">die<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><call><name pos:line="25" pos:column="21">_<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><literal type="string" pos:line="25" pos:column="23">"cannot use -a with -d"<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></switch>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">force<pos:position pos:line="28" pos:column="19"/></name></expr>)<pos:position pos:line="28" pos:column="20"/></condition><then pos:line="28" pos:column="20"> <block pos:line="28" pos:column="21">{
		<expr_stmt><expr><name pos:line="29" pos:column="17">head_rev<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <call><name pos:line="29" pos:column="28">lookup_commit_reference<pos:position pos:line="29" pos:column="51"/></name><argument_list pos:line="29" pos:column="51">(<argument><expr><name pos:line="29" pos:column="52">head_sha1<pos:position pos:line="29" pos:column="61"/></name></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="63"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">head_rev<pos:position pos:line="30" pos:column="30"/></name></expr>)<pos:position pos:line="30" pos:column="31"/></condition><then pos:line="30" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="25">die<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><call><name pos:line="31" pos:column="29">_<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><literal type="string" pos:line="31" pos:column="31">"Couldn't look up commit object for HEAD"<pos:position pos:line="31" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="75"/></expr_stmt></block></then></if>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>
	<for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">(<init><expr><name pos:line="33" pos:column="14">i<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <literal type="number" pos:line="33" pos:column="18">0<pos:position pos:line="33" pos:column="19"/></literal></expr>;<pos:position pos:line="33" pos:column="20"/></init> <condition><expr><name pos:line="33" pos:column="21">i<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">&lt;<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="25">argc<pos:position pos:line="33" pos:column="29"/></name></expr>;<pos:position pos:line="33" pos:column="30"/></condition> <incr><expr><name pos:line="33" pos:column="31">i<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">++<pos:position pos:line="33" pos:column="34"/></operator></expr><operator pos:line="33" pos:column="34">,<pos:position pos:line="33" pos:column="35"/></operator> <expr><call><name pos:line="33" pos:column="36">strbuf_release<pos:position pos:line="33" pos:column="50"/></name><argument_list pos:line="33" pos:column="50">(<argument><expr><operator pos:line="33" pos:column="51">&amp;<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="52">bname<pos:position pos:line="33" pos:column="57"/></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call></expr></incr>)<pos:position pos:line="33" pos:column="59"/></control> <block pos:line="33" pos:column="60">{
		<decl_stmt><decl><type><name pos:line="34" pos:column="17">char<pos:position pos:line="34" pos:column="21"/></name> <modifier pos:line="34" pos:column="22">*<pos:position pos:line="34" pos:column="23"/></modifier></type><name pos:line="34" pos:column="23">target<pos:position pos:line="34" pos:column="29"/></name> <init pos:line="34" pos:column="30">= <expr><name pos:line="34" pos:column="32">NULL<pos:position pos:line="34" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="34" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">int<pos:position pos:line="35" pos:column="20"/></name></type> <name pos:line="35" pos:column="21">flags<pos:position pos:line="35" pos:column="26"/></name> <init pos:line="35" pos:column="27">= <expr><literal type="number" pos:line="35" pos:column="29">0<pos:position pos:line="35" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="35" pos:column="31"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="37" pos:column="17">strbuf_branchname<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><operator pos:line="37" pos:column="35">&amp;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="36">bname<pos:position pos:line="37" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="43">argv<pos:position pos:line="37" pos:column="47"/></name><index pos:line="37" pos:column="47">[<expr><name pos:line="37" pos:column="48">i<pos:position pos:line="37" pos:column="49"/></name></expr>]<pos:position pos:line="37" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">free<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">name<pos:position pos:line="38" pos:column="26"/></name></expr></argument>)<pos:position pos:line="38" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="39" pos:column="17">name<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">=<pos:position pos:line="39" pos:column="23"/></operator> <call><name pos:line="39" pos:column="24">mkpathdup<pos:position pos:line="39" pos:column="33"/></name><argument_list pos:line="39" pos:column="33">(<argument><expr><name pos:line="39" pos:column="34">fmt<pos:position pos:line="39" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="39">bname<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">.<pos:position pos:line="39" pos:column="45"/></operator><name pos:line="39" pos:column="45">buf<pos:position pos:line="39" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="50"/></expr_stmt>

		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">kinds<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">==<pos:position pos:line="41" pos:column="29"/></operator> <name pos:line="41" pos:column="30">FILTER_REFS_BRANCHES<pos:position pos:line="41" pos:column="50"/></name></expr>)<pos:position pos:line="41" pos:column="51"/></condition><then pos:line="41" pos:column="51"> <block pos:line="41" pos:column="52">{
			<decl_stmt><decl><type><specifier pos:line="42" pos:column="25">const<pos:position pos:line="42" pos:column="30"/></specifier> <name><name pos:line="42" pos:column="31">struct<pos:position pos:line="42" pos:column="37"/></name> <name pos:line="42" pos:column="38">worktree<pos:position pos:line="42" pos:column="46"/></name></name> <modifier pos:line="42" pos:column="47">*<pos:position pos:line="42" pos:column="48"/></modifier></type><name pos:line="42" pos:column="48">wt<pos:position pos:line="42" pos:column="50"/></name> <init pos:line="42" pos:column="51">=
				<expr><call><name pos:line="43" pos:column="33">find_shared_symref<pos:position pos:line="43" pos:column="51"/></name><argument_list pos:line="43" pos:column="51">(<argument><expr><literal type="string" pos:line="43" pos:column="52">"HEAD"<pos:position pos:line="43" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="60">name<pos:position pos:line="43" pos:column="64"/></name></expr></argument>)<pos:position pos:line="43" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="43" pos:column="66"/></decl_stmt>
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><name pos:line="44" pos:column="29">wt<pos:position pos:line="44" pos:column="31"/></name></expr>)<pos:position pos:line="44" pos:column="32"/></condition><then pos:line="44" pos:column="32"> <block pos:line="44" pos:column="33">{
				<expr_stmt><expr><call><name pos:line="45" pos:column="33">error<pos:position pos:line="45" pos:column="38"/></name><argument_list pos:line="45" pos:column="38">(<argument><expr><call><name pos:line="45" pos:column="39">_<pos:position pos:line="45" pos:column="40"/></name><argument_list pos:line="45" pos:column="40">(<argument><expr><literal type="string" pos:line="45" pos:column="41">"Cannot delete branch '%s' "<pos:position pos:line="45" pos:column="69"/></literal>
					<literal type="string" pos:line="46" pos:column="41">"checked out at '%s'"<pos:position pos:line="46" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="63"/></argument_list></call></expr></argument>,
				      <argument><expr><name><name pos:line="47" pos:column="39">bname<pos:position pos:line="47" pos:column="44"/></name><operator pos:line="47" pos:column="44">.<pos:position pos:line="47" pos:column="45"/></operator><name pos:line="47" pos:column="45">buf<pos:position pos:line="47" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="50">wt<pos:position pos:line="47" pos:column="52"/></name><operator pos:line="47" pos:column="52">-&gt;<pos:position pos:line="47" pos:column="57"/></operator><name pos:line="47" pos:column="54">path<pos:position pos:line="47" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><name pos:line="48" pos:column="33">ret<pos:position pos:line="48" pos:column="36"/></name> <operator pos:line="48" pos:column="37">=<pos:position pos:line="48" pos:column="38"/></operator> <literal type="number" pos:line="48" pos:column="39">1<pos:position pos:line="48" pos:column="40"/></literal></expr>;<pos:position pos:line="48" pos:column="41"/></expr_stmt>
				<continue pos:line="49" pos:column="33">continue;<pos:position pos:line="49" pos:column="42"/></continue>
			}<pos:position pos:line="50" pos:column="26"/></block></then></if>
		}<pos:position pos:line="51" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="53" pos:column="17">target<pos:position pos:line="53" pos:column="23"/></name> <operator pos:line="53" pos:column="24">=<pos:position pos:line="53" pos:column="25"/></operator> <call><name pos:line="53" pos:column="26">resolve_refdup<pos:position pos:line="53" pos:column="40"/></name><argument_list pos:line="53" pos:column="40">(<argument><expr><name pos:line="53" pos:column="41">name<pos:position pos:line="53" pos:column="45"/></name></expr></argument>,
					<argument><expr><name pos:line="54" pos:column="41">RESOLVE_REF_READING<pos:position pos:line="54" pos:column="60"/></name>
					<operator pos:line="55" pos:column="41">|<pos:position pos:line="55" pos:column="42"/></operator> <name pos:line="55" pos:column="43">RESOLVE_REF_NO_RECURSE<pos:position pos:line="55" pos:column="65"/></name>
					<operator pos:line="56" pos:column="41">|<pos:position pos:line="56" pos:column="42"/></operator> <name pos:line="56" pos:column="43">RESOLVE_REF_ALLOW_BAD_NAME<pos:position pos:line="56" pos:column="69"/></name></expr></argument>,
					<argument><expr><name pos:line="57" pos:column="41">sha1<pos:position pos:line="57" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="47">&amp;<pos:position pos:line="57" pos:column="52"/></operator><name pos:line="57" pos:column="48">flags<pos:position pos:line="57" pos:column="53"/></name></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="55"/></expr_stmt>
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><operator pos:line="58" pos:column="21">!<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="22">target<pos:position pos:line="58" pos:column="28"/></name></expr>)<pos:position pos:line="58" pos:column="29"/></condition><then pos:line="58" pos:column="29"> <block pos:line="58" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">error<pos:position pos:line="59" pos:column="30"/></name><argument_list pos:line="59" pos:column="30">(<argument><expr><ternary><condition><expr><name pos:line="59" pos:column="31">remote_branch<pos:position pos:line="59" pos:column="44"/></name></expr>
			      ?<pos:position pos:line="60" pos:column="32"/></condition><then pos:line="60" pos:column="32"> <expr><call><name pos:line="60" pos:column="33">_<pos:position pos:line="60" pos:column="34"/></name><argument_list pos:line="60" pos:column="34">(<argument><expr><literal type="string" pos:line="60" pos:column="35">"remote-tracking branch '%s' not found."<pos:position pos:line="60" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="76"/></argument_list></call></expr>
			      <pos:position pos:line="61" pos:column="10"/></then><else pos:line="61" pos:column="31">: <expr><call><name pos:line="61" pos:column="33">_<pos:position pos:line="61" pos:column="34"/></name><argument_list pos:line="61" pos:column="34">(<argument><expr><literal type="string" pos:line="61" pos:column="35">"branch '%s' not found."<pos:position pos:line="61" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="60"/></argument_list></call></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="62">bname<pos:position pos:line="61" pos:column="67"/></name><operator pos:line="61" pos:column="67">.<pos:position pos:line="61" pos:column="68"/></operator><name pos:line="61" pos:column="68">buf<pos:position pos:line="61" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><name pos:line="62" pos:column="25">ret<pos:position pos:line="62" pos:column="28"/></name> <operator pos:line="62" pos:column="29">=<pos:position pos:line="62" pos:column="30"/></operator> <literal type="number" pos:line="62" pos:column="31">1<pos:position pos:line="62" pos:column="32"/></literal></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt>
			<continue pos:line="63" pos:column="25">continue;<pos:position pos:line="63" pos:column="34"/></continue>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if>

		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><operator pos:line="66" pos:column="21">!<pos:position pos:line="66" pos:column="22"/></operator><operator pos:line="66" pos:column="22">(<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="23">flags<pos:position pos:line="66" pos:column="28"/></name> <operator pos:line="66" pos:column="29">&amp;<pos:position pos:line="66" pos:column="34"/></operator> <operator pos:line="66" pos:column="31">(<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="32">REF_ISSYMREF<pos:position pos:line="66" pos:column="44"/></name><operator pos:line="66" pos:column="44">|<pos:position pos:line="66" pos:column="45"/></operator><name pos:line="66" pos:column="45">REF_ISBROKEN<pos:position pos:line="66" pos:column="57"/></name><operator pos:line="66" pos:column="57">)<pos:position pos:line="66" pos:column="58"/></operator><operator pos:line="66" pos:column="58">)<pos:position pos:line="66" pos:column="59"/></operator> <operator pos:line="66" pos:column="60">&amp;&amp;<pos:position pos:line="66" pos:column="70"/></operator>
		    <call><name pos:line="67" pos:column="21">check_branch_commit<pos:position pos:line="67" pos:column="40"/></name><argument_list pos:line="67" pos:column="40">(<argument><expr><name><name pos:line="67" pos:column="41">bname<pos:position pos:line="67" pos:column="46"/></name><operator pos:line="67" pos:column="46">.<pos:position pos:line="67" pos:column="47"/></operator><name pos:line="67" pos:column="47">buf<pos:position pos:line="67" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="52">name<pos:position pos:line="67" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="58">sha1<pos:position pos:line="67" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="64">head_rev<pos:position pos:line="67" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="74">kinds<pos:position pos:line="67" pos:column="79"/></name></expr></argument>,
					<argument><expr><name pos:line="68" pos:column="41">force<pos:position pos:line="68" pos:column="46"/></name></expr></argument>)<pos:position pos:line="68" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="48"/></condition><then pos:line="68" pos:column="48"> <block pos:line="68" pos:column="49">{
			<expr_stmt><expr><name pos:line="69" pos:column="25">ret<pos:position pos:line="69" pos:column="28"/></name> <operator pos:line="69" pos:column="29">=<pos:position pos:line="69" pos:column="30"/></operator> <literal type="number" pos:line="69" pos:column="31">1<pos:position pos:line="69" pos:column="32"/></literal></expr>;<pos:position pos:line="69" pos:column="33"/></expr_stmt>
			<goto pos:line="70" pos:column="25">goto <name pos:line="70" pos:column="30">next<pos:position pos:line="70" pos:column="34"/></name>;<pos:position pos:line="70" pos:column="35"/></goto>
		}<pos:position pos:line="71" pos:column="18"/></block></then></if>

		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><call><name pos:line="73" pos:column="21">delete_ref<pos:position pos:line="73" pos:column="31"/></name><argument_list pos:line="73" pos:column="31">(<argument><expr><name pos:line="73" pos:column="32">name<pos:position pos:line="73" pos:column="36"/></name></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="73" pos:column="38">is_null_sha1<pos:position pos:line="73" pos:column="50"/></name><argument_list pos:line="73" pos:column="50">(<argument><expr><name pos:line="73" pos:column="51">sha1<pos:position pos:line="73" pos:column="55"/></name></expr></argument>)<pos:position pos:line="73" pos:column="56"/></argument_list></call></expr> ?<pos:position pos:line="73" pos:column="58"/></condition><then pos:line="73" pos:column="58"> <expr><name pos:line="73" pos:column="59">NULL<pos:position pos:line="73" pos:column="63"/></name></expr> <pos:position pos:line="73" pos:column="64"/></then><else pos:line="73" pos:column="64">: <expr><name pos:line="73" pos:column="66">sha1<pos:position pos:line="73" pos:column="70"/></name></expr></else></ternary></expr></argument>,
			       <argument><expr><name pos:line="74" pos:column="32">REF_NODEREF<pos:position pos:line="74" pos:column="43"/></name></expr></argument>)<pos:position pos:line="74" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="45"/></condition><then pos:line="74" pos:column="45"> <block pos:line="74" pos:column="46">{
			<expr_stmt><expr><call><name pos:line="75" pos:column="25">error<pos:position pos:line="75" pos:column="30"/></name><argument_list pos:line="75" pos:column="30">(<argument><expr><ternary><condition><expr><name pos:line="75" pos:column="31">remote_branch<pos:position pos:line="75" pos:column="44"/></name></expr>
			      ?<pos:position pos:line="76" pos:column="32"/></condition><then pos:line="76" pos:column="32"> <expr><call><name pos:line="76" pos:column="33">_<pos:position pos:line="76" pos:column="34"/></name><argument_list pos:line="76" pos:column="34">(<argument><expr><literal type="string" pos:line="76" pos:column="35">"Error deleting remote-tracking branch '%s'"<pos:position pos:line="76" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="80"/></argument_list></call></expr>
			      <pos:position pos:line="77" pos:column="10"/></then><else pos:line="77" pos:column="31">: <expr><call><name pos:line="77" pos:column="33">_<pos:position pos:line="77" pos:column="34"/></name><argument_list pos:line="77" pos:column="34">(<argument><expr><literal type="string" pos:line="77" pos:column="35">"Error deleting branch '%s'"<pos:position pos:line="77" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="64"/></argument_list></call></expr></else></ternary></expr></argument>,
			      <argument><expr><name><name pos:line="78" pos:column="31">bname<pos:position pos:line="78" pos:column="36"/></name><operator pos:line="78" pos:column="36">.<pos:position pos:line="78" pos:column="37"/></operator><name pos:line="78" pos:column="37">buf<pos:position pos:line="78" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="79" pos:column="25">ret<pos:position pos:line="79" pos:column="28"/></name> <operator pos:line="79" pos:column="29">=<pos:position pos:line="79" pos:column="30"/></operator> <literal type="number" pos:line="79" pos:column="31">1<pos:position pos:line="79" pos:column="32"/></literal></expr>;<pos:position pos:line="79" pos:column="33"/></expr_stmt>
			<goto pos:line="80" pos:column="25">goto <name pos:line="80" pos:column="30">next<pos:position pos:line="80" pos:column="34"/></name>;<pos:position pos:line="80" pos:column="35"/></goto>
		}<pos:position pos:line="81" pos:column="18"/></block></then></if>
		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><operator pos:line="82" pos:column="21">!<pos:position pos:line="82" pos:column="22"/></operator><name pos:line="82" pos:column="22">quiet<pos:position pos:line="82" pos:column="27"/></name></expr>)<pos:position pos:line="82" pos:column="28"/></condition><then pos:line="82" pos:column="28"> <block pos:line="82" pos:column="29">{
			<expr_stmt><expr><call><name pos:line="83" pos:column="25">printf<pos:position pos:line="83" pos:column="31"/></name><argument_list pos:line="83" pos:column="31">(<argument><expr><ternary><condition><expr><name pos:line="83" pos:column="32">remote_branch<pos:position pos:line="83" pos:column="45"/></name></expr>
			       ?<pos:position pos:line="84" pos:column="33"/></condition><then pos:line="84" pos:column="33"> <expr><call><name pos:line="84" pos:column="34">_<pos:position pos:line="84" pos:column="35"/></name><argument_list pos:line="84" pos:column="35">(<argument><expr><literal type="string" pos:line="84" pos:column="36">"Deleted remote-tracking branch %s (was %s).\n"<pos:position pos:line="84" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="84"/></argument_list></call></expr>
			       <pos:position pos:line="85" pos:column="11"/></then><else pos:line="85" pos:column="32">: <expr><call><name pos:line="85" pos:column="34">_<pos:position pos:line="85" pos:column="35"/></name><argument_list pos:line="85" pos:column="35">(<argument><expr><literal type="string" pos:line="85" pos:column="36">"Deleted branch %s (was %s).\n"<pos:position pos:line="85" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="68"/></argument_list></call></expr></else></ternary></expr></argument>,
			       <argument><expr><name><name pos:line="86" pos:column="32">bname<pos:position pos:line="86" pos:column="37"/></name><operator pos:line="86" pos:column="37">.<pos:position pos:line="86" pos:column="38"/></operator><name pos:line="86" pos:column="38">buf<pos:position pos:line="86" pos:column="41"/></name></name></expr></argument>,
			       <argument><expr><ternary><condition><expr><operator pos:line="87" pos:column="32">(<pos:position pos:line="87" pos:column="33"/></operator><name pos:line="87" pos:column="33">flags<pos:position pos:line="87" pos:column="38"/></name> <operator pos:line="87" pos:column="39">&amp;<pos:position pos:line="87" pos:column="44"/></operator> <name pos:line="87" pos:column="41">REF_ISBROKEN<pos:position pos:line="87" pos:column="53"/></name><operator pos:line="87" pos:column="53">)<pos:position pos:line="87" pos:column="54"/></operator></expr> ?<pos:position pos:line="87" pos:column="56"/></condition><then pos:line="87" pos:column="56"> <expr><literal type="string" pos:line="87" pos:column="57">"broken"<pos:position pos:line="87" pos:column="65"/></literal></expr>
			       <pos:position pos:line="88" pos:column="11"/></then><else pos:line="88" pos:column="32">: <expr><ternary><condition><expr><operator pos:line="88" pos:column="34">(<pos:position pos:line="88" pos:column="35"/></operator><name pos:line="88" pos:column="35">flags<pos:position pos:line="88" pos:column="40"/></name> <operator pos:line="88" pos:column="41">&amp;<pos:position pos:line="88" pos:column="46"/></operator> <name pos:line="88" pos:column="43">REF_ISSYMREF<pos:position pos:line="88" pos:column="55"/></name><operator pos:line="88" pos:column="55">)<pos:position pos:line="88" pos:column="56"/></operator></expr> ?<pos:position pos:line="88" pos:column="58"/></condition><then pos:line="88" pos:column="58"> <expr><name pos:line="88" pos:column="59">target<pos:position pos:line="88" pos:column="65"/></name></expr>
			       <pos:position pos:line="89" pos:column="11"/></then><else pos:line="89" pos:column="32">: <expr><call><name pos:line="89" pos:column="34">find_unique_abbrev<pos:position pos:line="89" pos:column="52"/></name><argument_list pos:line="89" pos:column="52">(<argument><expr><name pos:line="89" pos:column="53">sha1<pos:position pos:line="89" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="59">DEFAULT_ABBREV<pos:position pos:line="89" pos:column="73"/></name></expr></argument>)<pos:position pos:line="89" pos:column="74"/></argument_list></call></expr></else></ternary></expr></else></ternary></expr></argument>)<pos:position pos:line="89" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="90" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="91" pos:column="17">delete_branch_config<pos:position pos:line="91" pos:column="37"/></name><argument_list pos:line="91" pos:column="37">(<argument><expr><name><name pos:line="91" pos:column="38">bname<pos:position pos:line="91" pos:column="43"/></name><operator pos:line="91" pos:column="43">.<pos:position pos:line="91" pos:column="44"/></operator><name pos:line="91" pos:column="44">buf<pos:position pos:line="91" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="49"/></expr_stmt>

	<label><name pos:line="93" pos:column="9">next<pos:position pos:line="93" pos:column="13"/></name>:<pos:position pos:line="93" pos:column="14"/></label>
		<expr_stmt><expr><call><name pos:line="94" pos:column="17">free<pos:position pos:line="94" pos:column="21"/></name><argument_list pos:line="94" pos:column="21">(<argument><expr><name pos:line="94" pos:column="22">target<pos:position pos:line="94" pos:column="28"/></name></expr></argument>)<pos:position pos:line="94" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="95" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="97" pos:column="9">free<pos:position pos:line="97" pos:column="13"/></name><argument_list pos:line="97" pos:column="13">(<argument><expr><name pos:line="97" pos:column="14">name<pos:position pos:line="97" pos:column="18"/></name></expr></argument>)<pos:position pos:line="97" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="20"/></expr_stmt>

	<return pos:line="99" pos:column="9">return<expr><operator pos:line="99" pos:column="15">(<pos:position pos:line="99" pos:column="16"/></operator><name pos:line="99" pos:column="16">ret<pos:position pos:line="99" pos:column="19"/></name><operator pos:line="99" pos:column="19">)<pos:position pos:line="99" pos:column="20"/></operator></expr>;<pos:position pos:line="99" pos:column="21"/></return>
}<pos:position pos:line="100" pos:column="2"/></block></function></unit>

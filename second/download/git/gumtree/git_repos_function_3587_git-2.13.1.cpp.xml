<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3587_git-2.13.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">show_submodule_summary<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">FILE<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">f<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">path<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">line_prefix<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="3" pos:column="17">struct<pos:position pos:line="3" pos:column="23"/></name> <name pos:line="3" pos:column="24">object_id<pos:position pos:line="3" pos:column="33"/></name></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">one<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="3" pos:column="40">struct<pos:position pos:line="3" pos:column="46"/></name> <name pos:line="3" pos:column="47">object_id<pos:position pos:line="3" pos:column="56"/></name></name> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="58">two<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="4" pos:column="17">unsigned<pos:position pos:line="4" pos:column="25"/></name></type> <name pos:line="4" pos:column="26">dirty_submodule<pos:position pos:line="4" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="43">const<pos:position pos:line="4" pos:column="48"/></specifier> <name pos:line="4" pos:column="49">char<pos:position pos:line="4" pos:column="53"/></name> <modifier pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></modifier></type><name pos:line="4" pos:column="55">meta<pos:position pos:line="4" pos:column="59"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="5" pos:column="17">const<pos:position pos:line="5" pos:column="22"/></specifier> <name pos:line="5" pos:column="23">char<pos:position pos:line="5" pos:column="27"/></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">del<pos:position pos:line="5" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="5" pos:column="34">const<pos:position pos:line="5" pos:column="39"/></specifier> <name pos:line="5" pos:column="40">char<pos:position pos:line="5" pos:column="44"/></name> <modifier pos:line="5" pos:column="45">*<pos:position pos:line="5" pos:column="46"/></modifier></type><name pos:line="5" pos:column="46">add<pos:position pos:line="5" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="5" pos:column="51">const<pos:position pos:line="5" pos:column="56"/></specifier> <name pos:line="5" pos:column="57">char<pos:position pos:line="5" pos:column="61"/></name> <modifier pos:line="5" pos:column="62">*<pos:position pos:line="5" pos:column="63"/></modifier></type><name pos:line="5" pos:column="63">reset<pos:position pos:line="5" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="69"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">rev_info<pos:position pos:line="7" pos:column="24"/></name></name></type> <name pos:line="7" pos:column="25">rev<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">commit<pos:position pos:line="8" pos:column="22"/></name></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">left<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name pos:line="8" pos:column="31">NULL<pos:position pos:line="8" pos:column="35"/></name></expr></init></decl>, <modifier pos:line="8" pos:column="37">*<pos:position pos:line="8" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="38">right<pos:position pos:line="8" pos:column="43"/></name> <init pos:line="8" pos:column="44">= <expr><name pos:line="8" pos:column="46">NULL<pos:position pos:line="8" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">commit_list<pos:position pos:line="9" pos:column="27"/></name></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">merge_bases<pos:position pos:line="9" pos:column="40"/></name> <init pos:line="9" pos:column="41">= <expr><name pos:line="9" pos:column="43">NULL<pos:position pos:line="9" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="48"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">show_submodule_header<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">f<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">path<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">line_prefix<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="53">one<pos:position pos:line="11" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="58">two<pos:position pos:line="11" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="63">dirty_submodule<pos:position pos:line="11" pos:column="78"/></name></expr></argument>,
			      <argument><expr><name pos:line="12" pos:column="31">meta<pos:position pos:line="12" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="37">reset<pos:position pos:line="12" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="44">&amp;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="45">left<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="51">&amp;<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="52">right<pos:position pos:line="12" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="59">&amp;<pos:position pos:line="12" pos:column="64"/></operator><name pos:line="12" pos:column="60">merge_bases<pos:position pos:line="12" pos:column="71"/></name></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="73"/></expr_stmt>

	<comment type="block" pos:line="14" pos:column="9">/*
	 * If we don't have both a left and a right pointer, there is no
	 * reason to try and display a summary. The header line should contain
	 * all the information the user needs.
	 */</comment>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">left<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">||<pos:position pos:line="19" pos:column="21"/></operator> <operator pos:line="19" pos:column="22">!<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">right<pos:position pos:line="19" pos:column="28"/></name></expr>)<pos:position pos:line="19" pos:column="29"/></condition><then pos:line="19" pos:column="29">
		<block type="pseudo"><goto pos:line="20" pos:column="17">goto <name pos:line="20" pos:column="22">out<pos:position pos:line="20" pos:column="25"/></name>;<pos:position pos:line="20" pos:column="26"/></goto></block></then></if>

	<comment type="block" pos:line="22" pos:column="9">/* Treat revision walker failure the same as missing commits */</comment>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">prepare_submodule_summary<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><operator pos:line="23" pos:column="39">&amp;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="40">rev<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">path<pos:position pos:line="23" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="51">left<pos:position pos:line="23" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="57">right<pos:position pos:line="23" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="64">merge_bases<pos:position pos:line="23" pos:column="75"/></name></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="77"/></condition><then pos:line="23" pos:column="77"> <block pos:line="23" pos:column="78">{
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">fprintf<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">f<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="28">"%s(revision walker failed)\n"<pos:position pos:line="24" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="60">line_prefix<pos:position pos:line="24" pos:column="71"/></name></expr></argument>)<pos:position pos:line="24" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="73"/></expr_stmt>
		<goto pos:line="25" pos:column="17">goto <name pos:line="25" pos:column="22">out<pos:position pos:line="25" pos:column="25"/></name>;<pos:position pos:line="25" pos:column="26"/></goto>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">print_submodule_summary<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><operator pos:line="28" pos:column="33">&amp;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="34">rev<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="39">f<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">line_prefix<pos:position pos:line="28" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="55">del<pos:position pos:line="28" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="60">add<pos:position pos:line="28" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="65">reset<pos:position pos:line="28" pos:column="70"/></name></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="72"/></expr_stmt>

<label><name pos:line="30" pos:column="1">out<pos:position pos:line="30" pos:column="4"/></name>:<pos:position pos:line="30" pos:column="5"/></label>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">merge_bases<pos:position pos:line="31" pos:column="24"/></name></expr>)<pos:position pos:line="31" pos:column="25"/></condition><then pos:line="31" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">free_commit_list<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">merge_bases<pos:position pos:line="32" pos:column="45"/></name></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="47"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">clear_commit_marks<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">left<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="34">~<pos:position pos:line="33" pos:column="35"/></operator><literal type="number" pos:line="33" pos:column="35">0<pos:position pos:line="33" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">clear_commit_marks<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">right<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="35">~<pos:position pos:line="34" pos:column="36"/></operator><literal type="number" pos:line="34" pos:column="36">0<pos:position pos:line="34" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

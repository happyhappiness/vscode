<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4957_git-2.12.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">insert_one_record<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">shortlog<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">log<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">author<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <name pos:line="3" pos:column="37">char<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">oneline<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="51"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">string_list_item<pos:position pos:line="5" pos:column="32"/></name></name> <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></type><name pos:line="5" pos:column="34">item<pos:position pos:line="5" pos:column="38"/></name></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">mailbuf<pos:position pos:line="6" pos:column="28"/></name></decl>, <modifier pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="31">namebuf<pos:position pos:line="6" pos:column="38"/></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">namelen<pos:position pos:line="7" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="25">maillen<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">namemailbuf<pos:position pos:line="8" pos:column="34"/></name> <init pos:line="8" pos:column="35">= <expr><name pos:line="8" pos:column="37">STRBUF_INIT<pos:position pos:line="8" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">ident_split<pos:position pos:line="9" pos:column="27"/></name></name></type> <name pos:line="9" pos:column="28">ident<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">split_ident_line<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><operator pos:line="11" pos:column="30">&amp;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="31">ident<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="38">author<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="46">strlen<pos:position pos:line="11" pos:column="52"/></name><argument_list pos:line="11" pos:column="52">(<argument><expr><name pos:line="11" pos:column="53">author<pos:position pos:line="11" pos:column="59"/></name></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="62"/></condition><then pos:line="11" pos:column="62">
		<block type="pseudo"><return pos:line="12" pos:column="17">return;<pos:position pos:line="12" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">namebuf<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name><name pos:line="14" pos:column="19">ident<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">.<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">name_begin<pos:position pos:line="14" pos:column="35"/></name></name></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">mailbuf<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <name><name pos:line="15" pos:column="19">ident<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">.<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">mail_begin<pos:position pos:line="15" pos:column="35"/></name></name></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">namelen<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name><name pos:line="16" pos:column="19">ident<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">.<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">name_end<pos:position pos:line="16" pos:column="33"/></name></name> <operator pos:line="16" pos:column="34">-<pos:position pos:line="16" pos:column="35"/></operator> <name><name pos:line="16" pos:column="36">ident<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">.<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="42">name_begin<pos:position pos:line="16" pos:column="52"/></name></name></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">maillen<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name><name pos:line="17" pos:column="19">ident<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">.<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">mail_end<pos:position pos:line="17" pos:column="33"/></name></name> <operator pos:line="17" pos:column="34">-<pos:position pos:line="17" pos:column="35"/></operator> <name><name pos:line="17" pos:column="36">ident<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">.<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="42">mail_begin<pos:position pos:line="17" pos:column="52"/></name></name></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">map_user<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><operator pos:line="19" pos:column="18">&amp;<pos:position pos:line="19" pos:column="23"/></operator><name><name pos:line="19" pos:column="19">log<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">mailmap<pos:position pos:line="19" pos:column="31"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="33">&amp;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="34">mailbuf<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="43">&amp;<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="44">maillen<pos:position pos:line="19" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="53">&amp;<pos:position pos:line="19" pos:column="58"/></operator><name pos:line="19" pos:column="54">namebuf<pos:position pos:line="19" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="63">&amp;<pos:position pos:line="19" pos:column="68"/></operator><name pos:line="19" pos:column="64">namelen<pos:position pos:line="19" pos:column="71"/></name></expr></argument>)<pos:position pos:line="19" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">strbuf_add<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><operator pos:line="20" pos:column="20">&amp;<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="21">namemailbuf<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">namebuf<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="43">namelen<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">log<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">email<pos:position pos:line="22" pos:column="23"/></name></name></expr>)<pos:position pos:line="22" pos:column="24"/></condition><then pos:line="22" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">strbuf_addf<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><operator pos:line="23" pos:column="29">&amp;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="30">namemailbuf<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="43">" &lt;%.*s&gt;"<pos:position pos:line="23" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="54">(<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="55">int<pos:position pos:line="23" pos:column="58"/></name><operator pos:line="23" pos:column="58">)<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="59">maillen<pos:position pos:line="23" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="68">mailbuf<pos:position pos:line="23" pos:column="75"/></name></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="77"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="25" pos:column="9">item<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">string_list_insert<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><operator pos:line="25" pos:column="35">&amp;<pos:position pos:line="25" pos:column="40"/></operator><name><name pos:line="25" pos:column="36">log<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">-&gt;<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="41">list<pos:position pos:line="25" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="47">namemailbuf<pos:position pos:line="25" pos:column="58"/></name><operator pos:line="25" pos:column="58">.<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="59">buf<pos:position pos:line="25" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">log<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">summary<pos:position pos:line="27" pos:column="25"/></name></name></expr>)<pos:position pos:line="27" pos:column="26"/></condition><then pos:line="27" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="17">item<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">-&gt;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="23">util<pos:position pos:line="28" pos:column="27"/></name></name> <operator pos:line="28" pos:column="28">=<pos:position pos:line="28" pos:column="29"/></operator> <operator pos:line="28" pos:column="30">(<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="31">void<pos:position pos:line="28" pos:column="35"/></name> <operator pos:line="28" pos:column="36">*<pos:position pos:line="28" pos:column="37"/></operator><operator pos:line="28" pos:column="37">)<pos:position pos:line="28" pos:column="38"/></operator><operator pos:line="28" pos:column="38">(<pos:position pos:line="28" pos:column="39"/></operator><call><name pos:line="28" pos:column="39">UTIL_TO_INT<pos:position pos:line="28" pos:column="50"/></name><argument_list pos:line="28" pos:column="50">(<argument><expr><name pos:line="28" pos:column="51">item<pos:position pos:line="28" pos:column="55"/></name></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call> <operator pos:line="28" pos:column="57">+<pos:position pos:line="28" pos:column="58"/></operator> <literal type="number" pos:line="28" pos:column="59">1<pos:position pos:line="28" pos:column="60"/></literal><operator pos:line="28" pos:column="60">)<pos:position pos:line="28" pos:column="61"/></operator></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt></block></then>
	<else pos:line="29" pos:column="9">else <block pos:line="29" pos:column="14">{
		<decl_stmt><decl><type><specifier pos:line="30" pos:column="17">const<pos:position pos:line="30" pos:column="22"/></specifier> <name pos:line="30" pos:column="23">char<pos:position pos:line="30" pos:column="27"/></name> <modifier pos:line="30" pos:column="28">*<pos:position pos:line="30" pos:column="29"/></modifier></type><name pos:line="30" pos:column="29">dot3<pos:position pos:line="30" pos:column="33"/></name> <init pos:line="30" pos:column="34">= <expr><name><name pos:line="30" pos:column="36">log<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="41">common_repo_prefix<pos:position pos:line="30" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="30" pos:column="60"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="31" pos:column="17">char<pos:position pos:line="31" pos:column="21"/></name> <modifier pos:line="31" pos:column="22">*<pos:position pos:line="31" pos:column="23"/></modifier></type><name pos:line="31" pos:column="23">buffer<pos:position pos:line="31" pos:column="29"/></name></decl>, <modifier pos:line="31" pos:column="31">*<pos:position pos:line="31" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="31" pos:column="32">p<pos:position pos:line="31" pos:column="33"/></name></decl>;<pos:position pos:line="31" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="32" pos:column="17">struct<pos:position pos:line="32" pos:column="23"/></name> <name pos:line="32" pos:column="24">strbuf<pos:position pos:line="32" pos:column="30"/></name></name></type> <name pos:line="32" pos:column="31">subject<pos:position pos:line="32" pos:column="38"/></name> <init pos:line="32" pos:column="39">= <expr><name pos:line="32" pos:column="41">STRBUF_INIT<pos:position pos:line="32" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="32" pos:column="53"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="33" pos:column="17">const<pos:position pos:line="33" pos:column="22"/></specifier> <name pos:line="33" pos:column="23">char<pos:position pos:line="33" pos:column="27"/></name> <modifier pos:line="33" pos:column="28">*<pos:position pos:line="33" pos:column="29"/></modifier></type><name pos:line="33" pos:column="29">eol<pos:position pos:line="33" pos:column="32"/></name></decl>;<pos:position pos:line="33" pos:column="33"/></decl_stmt>

		<comment type="block" pos:line="35" pos:column="17">/* Skip any leading whitespace, including any blank lines. */</comment>
		<while pos:line="36" pos:column="17">while <condition pos:line="36" pos:column="23">(<expr><operator pos:line="36" pos:column="24">*<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="25">oneline<pos:position pos:line="36" pos:column="32"/></name> <operator pos:line="36" pos:column="33">&amp;&amp;<pos:position pos:line="36" pos:column="43"/></operator> <call><name pos:line="36" pos:column="36">isspace<pos:position pos:line="36" pos:column="43"/></name><argument_list pos:line="36" pos:column="43">(<argument><expr><operator pos:line="36" pos:column="44">*<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="45">oneline<pos:position pos:line="36" pos:column="52"/></name></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="54"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">oneline<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">++<pos:position pos:line="37" pos:column="34"/></operator></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt></block></while>
		<expr_stmt><expr><name pos:line="38" pos:column="17">eol<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <call><name pos:line="38" pos:column="23">strchr<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">oneline<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="38" pos:column="39">'\n'<pos:position pos:line="38" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">!<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">eol<pos:position pos:line="39" pos:column="25"/></name></expr>)<pos:position pos:line="39" pos:column="26"/></condition><then pos:line="39" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="25">eol<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">=<pos:position pos:line="40" pos:column="30"/></operator> <name pos:line="40" pos:column="31">oneline<pos:position pos:line="40" pos:column="38"/></name> <operator pos:line="40" pos:column="39">+<pos:position pos:line="40" pos:column="40"/></operator> <call><name pos:line="40" pos:column="41">strlen<pos:position pos:line="40" pos:column="47"/></name><argument_list pos:line="40" pos:column="47">(<argument><expr><name pos:line="40" pos:column="48">oneline<pos:position pos:line="40" pos:column="55"/></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt></block></then></if>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><call><name pos:line="41" pos:column="21">starts_with<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">oneline<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="42">"[PATCH"<pos:position pos:line="41" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="52"/></condition><then pos:line="41" pos:column="52"> <block pos:line="41" pos:column="53">{
			<decl_stmt><decl><type><name pos:line="42" pos:column="25">char<pos:position pos:line="42" pos:column="29"/></name> <modifier pos:line="42" pos:column="30">*<pos:position pos:line="42" pos:column="31"/></modifier></type><name pos:line="42" pos:column="31">eob<pos:position pos:line="42" pos:column="34"/></name> <init pos:line="42" pos:column="35">= <expr><call><name pos:line="42" pos:column="37">strchr<pos:position pos:line="42" pos:column="43"/></name><argument_list pos:line="42" pos:column="43">(<argument><expr><name pos:line="42" pos:column="44">oneline<pos:position pos:line="42" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="42" pos:column="53">']'<pos:position pos:line="42" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="58"/></decl_stmt>
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><name pos:line="43" pos:column="29">eob<pos:position pos:line="43" pos:column="32"/></name> <operator pos:line="43" pos:column="33">&amp;&amp;<pos:position pos:line="43" pos:column="43"/></operator> <operator pos:line="43" pos:column="36">(<pos:position pos:line="43" pos:column="37"/></operator><operator pos:line="43" pos:column="37">!<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="38">eol<pos:position pos:line="43" pos:column="41"/></name> <operator pos:line="43" pos:column="42">||<pos:position pos:line="43" pos:column="44"/></operator> <name pos:line="43" pos:column="45">eob<pos:position pos:line="43" pos:column="48"/></name> <operator pos:line="43" pos:column="49">&lt;<pos:position pos:line="43" pos:column="53"/></operator> <name pos:line="43" pos:column="51">eol<pos:position pos:line="43" pos:column="54"/></name><operator pos:line="43" pos:column="54">)<pos:position pos:line="43" pos:column="55"/></operator></expr>)<pos:position pos:line="43" pos:column="56"/></condition><then pos:line="43" pos:column="56">
				<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="33">oneline<pos:position pos:line="44" pos:column="40"/></name> <operator pos:line="44" pos:column="41">=<pos:position pos:line="44" pos:column="42"/></operator> <name pos:line="44" pos:column="43">eob<pos:position pos:line="44" pos:column="46"/></name> <operator pos:line="44" pos:column="47">+<pos:position pos:line="44" pos:column="48"/></operator> <literal type="number" pos:line="44" pos:column="49">1<pos:position pos:line="44" pos:column="50"/></literal></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt></block></then></if>
		}<pos:position pos:line="45" pos:column="18"/></block></then></if>
		<while pos:line="46" pos:column="17">while <condition pos:line="46" pos:column="23">(<expr><operator pos:line="46" pos:column="24">*<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="25">oneline<pos:position pos:line="46" pos:column="32"/></name> <operator pos:line="46" pos:column="33">&amp;&amp;<pos:position pos:line="46" pos:column="43"/></operator> <call><name pos:line="46" pos:column="36">isspace<pos:position pos:line="46" pos:column="43"/></name><argument_list pos:line="46" pos:column="43">(<argument><expr><operator pos:line="46" pos:column="44">*<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="45">oneline<pos:position pos:line="46" pos:column="52"/></name></expr></argument>)<pos:position pos:line="46" pos:column="53"/></argument_list></call> <operator pos:line="46" pos:column="54">&amp;&amp;<pos:position pos:line="46" pos:column="64"/></operator> <operator pos:line="46" pos:column="57">*<pos:position pos:line="46" pos:column="58"/></operator><name pos:line="46" pos:column="58">oneline<pos:position pos:line="46" pos:column="65"/></name> <operator pos:line="46" pos:column="66">!=<pos:position pos:line="46" pos:column="68"/></operator> <literal type="char" pos:line="46" pos:column="69">'\n'<pos:position pos:line="46" pos:column="73"/></literal></expr>)<pos:position pos:line="46" pos:column="74"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="25">oneline<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">++<pos:position pos:line="47" pos:column="34"/></operator></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt></block></while>
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">format_subject<pos:position pos:line="48" pos:column="31"/></name><argument_list pos:line="48" pos:column="31">(<argument><expr><operator pos:line="48" pos:column="32">&amp;<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="33">subject<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="42">oneline<pos:position pos:line="48" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="51">" "<pos:position pos:line="48" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name pos:line="49" pos:column="17">buffer<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">=<pos:position pos:line="49" pos:column="25"/></operator> <call><name pos:line="49" pos:column="26">strbuf_detach<pos:position pos:line="49" pos:column="39"/></name><argument_list pos:line="49" pos:column="39">(<argument><expr><operator pos:line="49" pos:column="40">&amp;<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="41">subject<pos:position pos:line="49" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="50">NULL<pos:position pos:line="49" pos:column="54"/></name></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="56"/></expr_stmt>

		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name pos:line="51" pos:column="21">dot3<pos:position pos:line="51" pos:column="25"/></name></expr>)<pos:position pos:line="51" pos:column="26"/></condition><then pos:line="51" pos:column="26"> <block pos:line="51" pos:column="27">{
			<decl_stmt><decl><type><name pos:line="52" pos:column="25">int<pos:position pos:line="52" pos:column="28"/></name></type> <name pos:line="52" pos:column="29">dot3len<pos:position pos:line="52" pos:column="36"/></name> <init pos:line="52" pos:column="37">= <expr><call><name pos:line="52" pos:column="39">strlen<pos:position pos:line="52" pos:column="45"/></name><argument_list pos:line="52" pos:column="45">(<argument><expr><name pos:line="52" pos:column="46">dot3<pos:position pos:line="52" pos:column="50"/></name></expr></argument>)<pos:position pos:line="52" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="52"/></decl_stmt>
			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><name pos:line="53" pos:column="29">dot3len<pos:position pos:line="53" pos:column="36"/></name> <operator pos:line="53" pos:column="37">&gt;<pos:position pos:line="53" pos:column="41"/></operator> <literal type="number" pos:line="53" pos:column="39">5<pos:position pos:line="53" pos:column="40"/></literal></expr>)<pos:position pos:line="53" pos:column="41"/></condition><then pos:line="53" pos:column="41"> <block pos:line="53" pos:column="42">{
				<while pos:line="54" pos:column="33">while <condition pos:line="54" pos:column="39">(<expr><operator pos:line="54" pos:column="40">(<pos:position pos:line="54" pos:column="41"/></operator><name pos:line="54" pos:column="41">p<pos:position pos:line="54" pos:column="42"/></name> <operator pos:line="54" pos:column="43">=<pos:position pos:line="54" pos:column="44"/></operator> <call><name pos:line="54" pos:column="45">strstr<pos:position pos:line="54" pos:column="51"/></name><argument_list pos:line="54" pos:column="51">(<argument><expr><name pos:line="54" pos:column="52">buffer<pos:position pos:line="54" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="60">dot3<pos:position pos:line="54" pos:column="64"/></name></expr></argument>)<pos:position pos:line="54" pos:column="65"/></argument_list></call><operator pos:line="54" pos:column="65">)<pos:position pos:line="54" pos:column="66"/></operator> <operator pos:line="54" pos:column="67">!=<pos:position pos:line="54" pos:column="69"/></operator> <name pos:line="54" pos:column="70">NULL<pos:position pos:line="54" pos:column="74"/></name></expr>)<pos:position pos:line="54" pos:column="75"/></condition> <block pos:line="54" pos:column="76">{
					<decl_stmt><decl><type><name pos:line="55" pos:column="41">int<pos:position pos:line="55" pos:column="44"/></name></type> <name pos:line="55" pos:column="45">taillen<pos:position pos:line="55" pos:column="52"/></name> <init pos:line="55" pos:column="53">= <expr><call><name pos:line="55" pos:column="55">strlen<pos:position pos:line="55" pos:column="61"/></name><argument_list pos:line="55" pos:column="61">(<argument><expr><name pos:line="55" pos:column="62">p<pos:position pos:line="55" pos:column="63"/></name></expr></argument>)<pos:position pos:line="55" pos:column="64"/></argument_list></call> <operator pos:line="55" pos:column="65">-<pos:position pos:line="55" pos:column="66"/></operator> <name pos:line="55" pos:column="67">dot3len<pos:position pos:line="55" pos:column="74"/></name></expr></init></decl>;<pos:position pos:line="55" pos:column="75"/></decl_stmt>
					<expr_stmt><expr><call><name pos:line="56" pos:column="41">memcpy<pos:position pos:line="56" pos:column="47"/></name><argument_list pos:line="56" pos:column="47">(<argument><expr><name pos:line="56" pos:column="48">p<pos:position pos:line="56" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="51">"/.../"<pos:position pos:line="56" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="60">5<pos:position pos:line="56" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="63"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="57" pos:column="41">memmove<pos:position pos:line="57" pos:column="48"/></name><argument_list pos:line="57" pos:column="48">(<argument><expr><name pos:line="57" pos:column="49">p<pos:position pos:line="57" pos:column="50"/></name> <operator pos:line="57" pos:column="51">+<pos:position pos:line="57" pos:column="52"/></operator> <literal type="number" pos:line="57" pos:column="53">5<pos:position pos:line="57" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="56">p<pos:position pos:line="57" pos:column="57"/></name> <operator pos:line="57" pos:column="58">+<pos:position pos:line="57" pos:column="59"/></operator> <name pos:line="57" pos:column="60">dot3len<pos:position pos:line="57" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="69">taillen<pos:position pos:line="57" pos:column="76"/></name> <operator pos:line="57" pos:column="77">+<pos:position pos:line="57" pos:column="78"/></operator> <literal type="number" pos:line="57" pos:column="79">1<pos:position pos:line="57" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="82"/></expr_stmt>
				}<pos:position pos:line="58" pos:column="34"/></block></while>
			}<pos:position pos:line="59" pos:column="26"/></block></then></if>
		}<pos:position pos:line="60" pos:column="18"/></block></then></if>

		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name><name pos:line="62" pos:column="21">item<pos:position pos:line="62" pos:column="25"/></name><operator pos:line="62" pos:column="25">-&gt;<pos:position pos:line="62" pos:column="30"/></operator><name pos:line="62" pos:column="27">util<pos:position pos:line="62" pos:column="31"/></name></name> <operator pos:line="62" pos:column="32">==<pos:position pos:line="62" pos:column="34"/></operator> <name pos:line="62" pos:column="35">NULL<pos:position pos:line="62" pos:column="39"/></name></expr>)<pos:position pos:line="62" pos:column="40"/></condition><then pos:line="62" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="63" pos:column="25">item<pos:position pos:line="63" pos:column="29"/></name><operator pos:line="63" pos:column="29">-&gt;<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="31">util<pos:position pos:line="63" pos:column="35"/></name></name> <operator pos:line="63" pos:column="36">=<pos:position pos:line="63" pos:column="37"/></operator> <call><name pos:line="63" pos:column="38">xcalloc<pos:position pos:line="63" pos:column="45"/></name><argument_list pos:line="63" pos:column="45">(<argument><expr><literal type="number" pos:line="63" pos:column="46">1<pos:position pos:line="63" pos:column="47"/></literal></expr></argument>, <argument><expr><sizeof pos:line="63" pos:column="49">sizeof<argument_list pos:line="63" pos:column="55">(<argument><expr pos:line="63" pos:column="56">struct <name pos:line="63" pos:column="63">string_list<pos:position pos:line="63" pos:column="74"/></name></expr></argument>)<pos:position pos:line="63" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="63" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="77"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="64" pos:column="17">string_list_append<pos:position pos:line="64" pos:column="35"/></name><argument_list pos:line="64" pos:column="35">(<argument><expr><name><name pos:line="64" pos:column="36">item<pos:position pos:line="64" pos:column="40"/></name><operator pos:line="64" pos:column="40">-&gt;<pos:position pos:line="64" pos:column="45"/></operator><name pos:line="64" pos:column="42">util<pos:position pos:line="64" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="48">buffer<pos:position pos:line="64" pos:column="54"/></name></expr></argument>)<pos:position pos:line="64" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="65" pos:column="10"/></block></else></if>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6367_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_notes<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">argc<pos:position pos:line="1" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">argv<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">prefix<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">result<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">override_notes_ref<pos:position pos:line="4" pos:column="39"/></name> <init pos:line="4" pos:column="40">= <expr><name pos:line="4" pos:column="42">NULL<pos:position pos:line="4" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">option<pos:position pos:line="5" pos:column="22"/></name></name></type> <name><name pos:line="5" pos:column="23">options<pos:position pos:line="5" pos:column="30"/></name><index pos:line="5" pos:column="30">[]<pos:position pos:line="5" pos:column="32"/></index></name> <init pos:line="5" pos:column="33">= <expr><block pos:line="5" pos:column="35">{
		<expr><call><name pos:line="6" pos:column="17">OPT_STRING<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><literal type="number" pos:line="6" pos:column="28">0<pos:position pos:line="6" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="31">"ref"<pos:position pos:line="6" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="6" pos:column="38">&amp;<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="39">override_notes_ref<pos:position pos:line="6" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="59">N_<pos:position pos:line="6" pos:column="61"/></name><argument_list pos:line="6" pos:column="61">(<argument><expr><literal type="string" pos:line="6" pos:column="62">"notes-ref"<pos:position pos:line="6" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="74"/></argument_list></call></expr></argument>,
			   <argument><expr><call><name pos:line="7" pos:column="28">N_<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><literal type="string" pos:line="7" pos:column="31">"use notes from &lt;notes-ref&gt;"<pos:position pos:line="7" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call></expr>,
		<macro><name pos:line="8" pos:column="17">OPT_END<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">()<pos:position pos:line="8" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="9" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">git_config<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">git_default_config<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">NULL<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">argc<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">parse_options<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">argc<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">argv<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">prefix<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">options<pos:position pos:line="12" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="59">git_notes_usage<pos:position pos:line="12" pos:column="74"/></name></expr></argument>,
			     <argument><expr><name pos:line="13" pos:column="30">PARSE_OPT_STOP_AT_NON_OPTION<pos:position pos:line="13" pos:column="58"/></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">override_notes_ref<pos:position pos:line="15" pos:column="31"/></name></expr>)<pos:position pos:line="15" pos:column="32"/></condition><then pos:line="15" pos:column="32"> <block pos:line="15" pos:column="33">{
		<decl_stmt><decl><type><name><name pos:line="16" pos:column="17">struct<pos:position pos:line="16" pos:column="23"/></name> <name pos:line="16" pos:column="24">strbuf<pos:position pos:line="16" pos:column="30"/></name></name></type> <name pos:line="16" pos:column="31">sb<pos:position pos:line="16" pos:column="33"/></name> <init pos:line="16" pos:column="34">= <expr><name pos:line="16" pos:column="36">STRBUF_INIT<pos:position pos:line="16" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="48"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">strbuf_addstr<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><operator pos:line="17" pos:column="31">&amp;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="32">sb<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">override_notes_ref<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">expand_notes_ref<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><operator pos:line="18" pos:column="34">&amp;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="35">sb<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">setenv<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><literal type="string" pos:line="19" pos:column="24">"GIT_NOTES_REF"<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="41">sb<pos:position pos:line="19" pos:column="43"/></name><operator pos:line="19" pos:column="43">.<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="44">buf<pos:position pos:line="19" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="49">1<pos:position pos:line="19" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">strbuf_release<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><operator pos:line="20" pos:column="32">&amp;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="33">sb<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">argc<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">&lt;<pos:position pos:line="23" pos:column="22"/></operator> <literal type="number" pos:line="23" pos:column="20">1<pos:position pos:line="23" pos:column="21"/></literal> <operator pos:line="23" pos:column="22">||<pos:position pos:line="23" pos:column="24"/></operator> <operator pos:line="23" pos:column="25">!<pos:position pos:line="23" pos:column="26"/></operator><call><name pos:line="23" pos:column="26">strcmp<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name><name pos:line="23" pos:column="33">argv<pos:position pos:line="23" pos:column="37"/></name><index pos:line="23" pos:column="37">[<expr><literal type="number" pos:line="23" pos:column="38">0<pos:position pos:line="23" pos:column="39"/></literal></expr>]<pos:position pos:line="23" pos:column="40"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="42">"list"<pos:position pos:line="23" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="50"/></condition><then pos:line="23" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="17">result<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <call><name pos:line="24" pos:column="26">list<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><name pos:line="24" pos:column="31">argc<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="37">argv<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">prefix<pos:position pos:line="24" pos:column="49"/></name></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt></block></then>
	<elseif pos:line="25" pos:column="9">else <if pos:line="25" pos:column="14">if <condition pos:line="25" pos:column="17">(<expr><operator pos:line="25" pos:column="18">!<pos:position pos:line="25" pos:column="19"/></operator><call><name pos:line="25" pos:column="19">strcmp<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name><name pos:line="25" pos:column="26">argv<pos:position pos:line="25" pos:column="30"/></name><index pos:line="25" pos:column="30">[<expr><literal type="number" pos:line="25" pos:column="31">0<pos:position pos:line="25" pos:column="32"/></literal></expr>]<pos:position pos:line="25" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="35">"add"<pos:position pos:line="25" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="42"/></condition><then pos:line="25" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="17">result<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <call><name pos:line="26" pos:column="26">add<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">argc<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="36">argv<pos:position pos:line="26" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="42">prefix<pos:position pos:line="26" pos:column="48"/></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="50"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="27" pos:column="9">else <if pos:line="27" pos:column="14">if <condition pos:line="27" pos:column="17">(<expr><operator pos:line="27" pos:column="18">!<pos:position pos:line="27" pos:column="19"/></operator><call><name pos:line="27" pos:column="19">strcmp<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name><name pos:line="27" pos:column="26">argv<pos:position pos:line="27" pos:column="30"/></name><index pos:line="27" pos:column="30">[<expr><literal type="number" pos:line="27" pos:column="31">0<pos:position pos:line="27" pos:column="32"/></literal></expr>]<pos:position pos:line="27" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="35">"copy"<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="43"/></condition><then pos:line="27" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="17">result<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <call><name pos:line="28" pos:column="26">copy<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">argc<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="37">argv<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="43">prefix<pos:position pos:line="28" pos:column="49"/></name></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="29" pos:column="9">else <if pos:line="29" pos:column="14">if <condition pos:line="29" pos:column="17">(<expr><operator pos:line="29" pos:column="18">!<pos:position pos:line="29" pos:column="19"/></operator><call><name pos:line="29" pos:column="19">strcmp<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><name><name pos:line="29" pos:column="26">argv<pos:position pos:line="29" pos:column="30"/></name><index pos:line="29" pos:column="30">[<expr><literal type="number" pos:line="29" pos:column="31">0<pos:position pos:line="29" pos:column="32"/></literal></expr>]<pos:position pos:line="29" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="35">"append"<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call> <operator pos:line="29" pos:column="45">||<pos:position pos:line="29" pos:column="47"/></operator> <operator pos:line="29" pos:column="48">!<pos:position pos:line="29" pos:column="49"/></operator><call><name pos:line="29" pos:column="49">strcmp<pos:position pos:line="29" pos:column="55"/></name><argument_list pos:line="29" pos:column="55">(<argument><expr><name><name pos:line="29" pos:column="56">argv<pos:position pos:line="29" pos:column="60"/></name><index pos:line="29" pos:column="60">[<expr><literal type="number" pos:line="29" pos:column="61">0<pos:position pos:line="29" pos:column="62"/></literal></expr>]<pos:position pos:line="29" pos:column="63"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="65">"edit"<pos:position pos:line="29" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="73"/></condition><then pos:line="29" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="17">result<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <call><name pos:line="30" pos:column="26">append_edit<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><name pos:line="30" pos:column="38">argc<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="44">argv<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="50">prefix<pos:position pos:line="30" pos:column="56"/></name></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="31" pos:column="9">else <if pos:line="31" pos:column="14">if <condition pos:line="31" pos:column="17">(<expr><operator pos:line="31" pos:column="18">!<pos:position pos:line="31" pos:column="19"/></operator><call><name pos:line="31" pos:column="19">strcmp<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name><name pos:line="31" pos:column="26">argv<pos:position pos:line="31" pos:column="30"/></name><index pos:line="31" pos:column="30">[<expr><literal type="number" pos:line="31" pos:column="31">0<pos:position pos:line="31" pos:column="32"/></literal></expr>]<pos:position pos:line="31" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="35">"show"<pos:position pos:line="31" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="43"/></condition><then pos:line="31" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="17">result<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <call><name pos:line="32" pos:column="26">show<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">argc<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="37">argv<pos:position pos:line="32" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="43">prefix<pos:position pos:line="32" pos:column="49"/></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="33" pos:column="9">else <if pos:line="33" pos:column="14">if <condition pos:line="33" pos:column="17">(<expr><operator pos:line="33" pos:column="18">!<pos:position pos:line="33" pos:column="19"/></operator><call><name pos:line="33" pos:column="19">strcmp<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name><name pos:line="33" pos:column="26">argv<pos:position pos:line="33" pos:column="30"/></name><index pos:line="33" pos:column="30">[<expr><literal type="number" pos:line="33" pos:column="31">0<pos:position pos:line="33" pos:column="32"/></literal></expr>]<pos:position pos:line="33" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="35">"merge"<pos:position pos:line="33" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="44"/></condition><then pos:line="33" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="17">result<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">=<pos:position pos:line="34" pos:column="25"/></operator> <call><name pos:line="34" pos:column="26">merge<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">argc<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="38">argv<pos:position pos:line="34" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="44">prefix<pos:position pos:line="34" pos:column="50"/></name></expr></argument>)<pos:position pos:line="34" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="52"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="35" pos:column="9">else <if pos:line="35" pos:column="14">if <condition pos:line="35" pos:column="17">(<expr><operator pos:line="35" pos:column="18">!<pos:position pos:line="35" pos:column="19"/></operator><call><name pos:line="35" pos:column="19">strcmp<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name><name pos:line="35" pos:column="26">argv<pos:position pos:line="35" pos:column="30"/></name><index pos:line="35" pos:column="30">[<expr><literal type="number" pos:line="35" pos:column="31">0<pos:position pos:line="35" pos:column="32"/></literal></expr>]<pos:position pos:line="35" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="35">"remove"<pos:position pos:line="35" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="45"/></condition><then pos:line="35" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="17">result<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <call><name pos:line="36" pos:column="26">remove_cmd<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><name pos:line="36" pos:column="37">argc<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="43">argv<pos:position pos:line="36" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="49">prefix<pos:position pos:line="36" pos:column="55"/></name></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="57"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="37" pos:column="9">else <if pos:line="37" pos:column="14">if <condition pos:line="37" pos:column="17">(<expr><operator pos:line="37" pos:column="18">!<pos:position pos:line="37" pos:column="19"/></operator><call><name pos:line="37" pos:column="19">strcmp<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name><name pos:line="37" pos:column="26">argv<pos:position pos:line="37" pos:column="30"/></name><index pos:line="37" pos:column="30">[<expr><literal type="number" pos:line="37" pos:column="31">0<pos:position pos:line="37" pos:column="32"/></literal></expr>]<pos:position pos:line="37" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="35">"prune"<pos:position pos:line="37" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="44"/></condition><then pos:line="37" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="17">result<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <call><name pos:line="38" pos:column="26">prune<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><name pos:line="38" pos:column="32">argc<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="38">argv<pos:position pos:line="38" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="44">prefix<pos:position pos:line="38" pos:column="50"/></name></expr></argument>)<pos:position pos:line="38" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="52"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="39" pos:column="9">else <if pos:line="39" pos:column="14">if <condition pos:line="39" pos:column="17">(<expr><operator pos:line="39" pos:column="18">!<pos:position pos:line="39" pos:column="19"/></operator><call><name pos:line="39" pos:column="19">strcmp<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><name><name pos:line="39" pos:column="26">argv<pos:position pos:line="39" pos:column="30"/></name><index pos:line="39" pos:column="30">[<expr><literal type="number" pos:line="39" pos:column="31">0<pos:position pos:line="39" pos:column="32"/></literal></expr>]<pos:position pos:line="39" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="35">"get-ref"<pos:position pos:line="39" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="46"/></condition><then pos:line="39" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="17">result<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <call><name pos:line="40" pos:column="26">get_ref<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">argc<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="40">argv<pos:position pos:line="40" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="46">prefix<pos:position pos:line="40" pos:column="52"/></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt></block></then></if></elseif>
	<else pos:line="41" pos:column="9">else <block pos:line="41" pos:column="14">{
		<expr_stmt><expr><name pos:line="42" pos:column="17">result<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">=<pos:position pos:line="42" pos:column="25"/></operator> <call><name pos:line="42" pos:column="26">error<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><call><name pos:line="42" pos:column="32">_<pos:position pos:line="42" pos:column="33"/></name><argument_list pos:line="42" pos:column="33">(<argument><expr><literal type="string" pos:line="42" pos:column="34">"unknown subcommand: %s"<pos:position pos:line="42" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="61">argv<pos:position pos:line="42" pos:column="65"/></name><index pos:line="42" pos:column="65">[<expr><literal type="number" pos:line="42" pos:column="66">0<pos:position pos:line="42" pos:column="67"/></literal></expr>]<pos:position pos:line="42" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">usage_with_options<pos:position pos:line="43" pos:column="35"/></name><argument_list pos:line="43" pos:column="35">(<argument><expr><name pos:line="43" pos:column="36">git_notes_usage<pos:position pos:line="43" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="53">options<pos:position pos:line="43" pos:column="60"/></name></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></else></if>

	<return pos:line="46" pos:column="9">return <expr><ternary><condition><expr><name pos:line="46" pos:column="16">result<pos:position pos:line="46" pos:column="22"/></name></expr> ?<pos:position pos:line="46" pos:column="24"/></condition><then pos:line="46" pos:column="24"> <expr><literal type="number" pos:line="46" pos:column="25">1<pos:position pos:line="46" pos:column="26"/></literal></expr> <pos:position pos:line="46" pos:column="27"/></then><else pos:line="46" pos:column="27">: <expr><literal type="number" pos:line="46" pos:column="29">0<pos:position pos:line="46" pos:column="30"/></literal></expr></else></ternary></expr>;<pos:position pos:line="46" pos:column="31"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

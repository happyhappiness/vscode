<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5963_git-2.10.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ref_transaction_commit<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">ref_transaction<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">transaction<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
			   <parameter><decl><type><name><name pos:line="2" pos:column="28">struct<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">strbuf<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">err<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">i<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">string_list<pos:position pos:line="5" pos:column="27"/></name></name></type> <name pos:line="5" pos:column="28">refs_to_delete<pos:position pos:line="5" pos:column="42"/></name> <init pos:line="5" pos:column="43">= <expr><name pos:line="5" pos:column="45">STRING_LIST_INIT_NODUP<pos:position pos:line="5" pos:column="67"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="68"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">string_list_item<pos:position pos:line="6" pos:column="32"/></name></name> <modifier pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></modifier></type><name pos:line="6" pos:column="34">ref_to_delete<pos:position pos:line="6" pos:column="47"/></name></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">string_list<pos:position pos:line="7" pos:column="27"/></name></name></type> <name pos:line="7" pos:column="28">affected_refnames<pos:position pos:line="7" pos:column="45"/></name> <init pos:line="7" pos:column="46">= <expr><name pos:line="7" pos:column="48">STRING_LIST_INIT_NODUP<pos:position pos:line="7" pos:column="70"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="71"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">head_ref<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><name pos:line="8" pos:column="26">NULL<pos:position pos:line="8" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">head_type<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">object_id<pos:position pos:line="10" pos:column="25"/></name></name></type> <name pos:line="10" pos:column="26">head_oid<pos:position pos:line="10" pos:column="34"/></name></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">assert<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">err<pos:position pos:line="12" pos:column="19"/></name></expr></argument>)<pos:position pos:line="12" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">transaction<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">state<pos:position pos:line="14" pos:column="31"/></name></name> <operator pos:line="14" pos:column="32">!=<pos:position pos:line="14" pos:column="34"/></operator> <name pos:line="14" pos:column="35">REF_TRANSACTION_OPEN<pos:position pos:line="14" pos:column="55"/></name></expr>)<pos:position pos:line="14" pos:column="56"/></condition><then pos:line="14" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">die<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><literal type="string" pos:line="15" pos:column="21">"BUG: commit called for transaction that is not open"<pos:position pos:line="15" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="76"/></expr_stmt></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name><name pos:line="17" pos:column="14">transaction<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">nr<pos:position pos:line="17" pos:column="29"/></name></name></expr>)<pos:position pos:line="17" pos:column="30"/></condition><then pos:line="17" pos:column="30"> <block pos:line="17" pos:column="31">{
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">transaction<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">-&gt;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="30">state<pos:position pos:line="18" pos:column="35"/></name></name> <operator pos:line="18" pos:column="36">=<pos:position pos:line="18" pos:column="37"/></operator> <name pos:line="18" pos:column="38">REF_TRANSACTION_CLOSED<pos:position pos:line="18" pos:column="60"/></name></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="22" pos:column="9">/*
	 * Fail if a refname appears more than once in the
	 * transaction. (If we end up splitting up any updates using
	 * split_symref_update() or split_head_update(), those
	 * functions will check that the new updates don't have the
	 * same refname as any existing ones.)
	 */</comment>
	<for pos:line="29" pos:column="9">for <control pos:line="29" pos:column="13">(<init><expr><name pos:line="29" pos:column="14">i<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <literal type="number" pos:line="29" pos:column="18">0<pos:position pos:line="29" pos:column="19"/></literal></expr>;<pos:position pos:line="29" pos:column="20"/></init> <condition><expr><name pos:line="29" pos:column="21">i<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">&lt;<pos:position pos:line="29" pos:column="27"/></operator> <name><name pos:line="29" pos:column="25">transaction<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">-&gt;<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="38">nr<pos:position pos:line="29" pos:column="40"/></name></name></expr>;<pos:position pos:line="29" pos:column="41"/></condition> <incr><expr><name pos:line="29" pos:column="42">i<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">++<pos:position pos:line="29" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="46"/></control> <block pos:line="29" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="30" pos:column="17">struct<pos:position pos:line="30" pos:column="23"/></name> <name pos:line="30" pos:column="24">ref_update<pos:position pos:line="30" pos:column="34"/></name></name> <modifier pos:line="30" pos:column="35">*<pos:position pos:line="30" pos:column="36"/></modifier></type><name pos:line="30" pos:column="36">update<pos:position pos:line="30" pos:column="42"/></name> <init pos:line="30" pos:column="43">= <expr><name><name pos:line="30" pos:column="45">transaction<pos:position pos:line="30" pos:column="56"/></name><operator pos:line="30" pos:column="56">-&gt;<pos:position pos:line="30" pos:column="61"/></operator><name pos:line="30" pos:column="58">updates<pos:position pos:line="30" pos:column="65"/></name><index pos:line="30" pos:column="65">[<expr><name pos:line="30" pos:column="66">i<pos:position pos:line="30" pos:column="67"/></name></expr>]<pos:position pos:line="30" pos:column="68"/></index></name></expr></init></decl>;<pos:position pos:line="30" pos:column="69"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="31" pos:column="17">struct<pos:position pos:line="31" pos:column="23"/></name> <name pos:line="31" pos:column="24">string_list_item<pos:position pos:line="31" pos:column="40"/></name></name> <modifier pos:line="31" pos:column="41">*<pos:position pos:line="31" pos:column="42"/></modifier></type><name pos:line="31" pos:column="42">item<pos:position pos:line="31" pos:column="46"/></name> <init pos:line="31" pos:column="47">=
			<expr><call><name pos:line="32" pos:column="25">string_list_append<pos:position pos:line="32" pos:column="43"/></name><argument_list pos:line="32" pos:column="43">(<argument><expr><operator pos:line="32" pos:column="44">&amp;<pos:position pos:line="32" pos:column="49"/></operator><name pos:line="32" pos:column="45">affected_refnames<pos:position pos:line="32" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="64">update<pos:position pos:line="32" pos:column="70"/></name><operator pos:line="32" pos:column="70">-&gt;<pos:position pos:line="32" pos:column="75"/></operator><name pos:line="32" pos:column="72">refname<pos:position pos:line="32" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="81"/></decl_stmt>

		<comment type="block" pos:line="34" pos:column="17">/*
		 * We store a pointer to update in item-&gt;util, but at
		 * the moment we never use the value of this field
		 * except to check whether it is non-NULL.
		 */</comment>
		<expr_stmt><expr><name><name pos:line="39" pos:column="17">item<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">-&gt;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="23">util<pos:position pos:line="39" pos:column="27"/></name></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <name pos:line="39" pos:column="30">update<pos:position pos:line="39" pos:column="36"/></name></expr>;<pos:position pos:line="39" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">string_list_sort<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><operator pos:line="41" pos:column="26">&amp;<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="27">affected_refnames<pos:position pos:line="41" pos:column="44"/></name></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="46"/></expr_stmt>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">ref_update_reject_duplicates<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><operator pos:line="42" pos:column="42">&amp;<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="43">affected_refnames<pos:position pos:line="42" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="62">err<pos:position pos:line="42" pos:column="65"/></name></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="67"/></condition><then pos:line="42" pos:column="67"> <block pos:line="42" pos:column="68">{
		<expr_stmt><expr><name pos:line="43" pos:column="17">ret<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">=<pos:position pos:line="43" pos:column="22"/></operator> <name pos:line="43" pos:column="23">TRANSACTION_GENERIC_ERROR<pos:position pos:line="43" pos:column="48"/></name></expr>;<pos:position pos:line="43" pos:column="49"/></expr_stmt>
		<goto pos:line="44" pos:column="17">goto <name pos:line="44" pos:column="22">cleanup<pos:position pos:line="44" pos:column="29"/></name>;<pos:position pos:line="44" pos:column="30"/></goto>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="47" pos:column="9">/*
	 * Special hack: If a branch is updated directly and HEAD
	 * points to it (may happen on the remote side of a push
	 * for example) then logically the HEAD reflog should be
	 * updated too.
	 *
	 * A generic solution would require reverse symref lookups,
	 * but finding all symrefs pointing to a given branch would be
	 * rather costly for this rare event (the direct update of a
	 * branch) to be worth it. So let's cheat and check with HEAD
	 * only, which should cover 99% of all usage scenarios (even
	 * 100% of the default ones).
	 *
	 * So if HEAD is a symbolic reference, then record the name of
	 * the reference that it points to. If we see an update of
	 * head_ref within the transaction, then split_head_update()
	 * arranges for the reflog of HEAD to be updated, too.
	 */</comment>
	<expr_stmt><expr><name pos:line="65" pos:column="9">head_ref<pos:position pos:line="65" pos:column="17"/></name> <operator pos:line="65" pos:column="18">=<pos:position pos:line="65" pos:column="19"/></operator> <call><name pos:line="65" pos:column="20">resolve_refdup<pos:position pos:line="65" pos:column="34"/></name><argument_list pos:line="65" pos:column="34">(<argument><expr><literal type="string" pos:line="65" pos:column="35">"HEAD"<pos:position pos:line="65" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="43">RESOLVE_REF_NO_RECURSE<pos:position pos:line="65" pos:column="65"/></name></expr></argument>,
				  <argument><expr><name><name pos:line="66" pos:column="35">head_oid<pos:position pos:line="66" pos:column="43"/></name><operator pos:line="66" pos:column="43">.<pos:position pos:line="66" pos:column="44"/></operator><name pos:line="66" pos:column="44">hash<pos:position pos:line="66" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="50">&amp;<pos:position pos:line="66" pos:column="55"/></operator><name pos:line="66" pos:column="51">head_type<pos:position pos:line="66" pos:column="60"/></name></expr></argument>)<pos:position pos:line="66" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="62"/></expr_stmt>

	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">head_ref<pos:position pos:line="68" pos:column="21"/></name> <operator pos:line="68" pos:column="22">&amp;&amp;<pos:position pos:line="68" pos:column="32"/></operator> <operator pos:line="68" pos:column="25">!<pos:position pos:line="68" pos:column="26"/></operator><operator pos:line="68" pos:column="26">(<pos:position pos:line="68" pos:column="27"/></operator><name pos:line="68" pos:column="27">head_type<pos:position pos:line="68" pos:column="36"/></name> <operator pos:line="68" pos:column="37">&amp;<pos:position pos:line="68" pos:column="42"/></operator> <name pos:line="68" pos:column="39">REF_ISSYMREF<pos:position pos:line="68" pos:column="51"/></name><operator pos:line="68" pos:column="51">)<pos:position pos:line="68" pos:column="52"/></operator></expr>)<pos:position pos:line="68" pos:column="53"/></condition><then pos:line="68" pos:column="53"> <block pos:line="68" pos:column="54">{
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">free<pos:position pos:line="69" pos:column="21"/></name><argument_list pos:line="69" pos:column="21">(<argument><expr><name pos:line="69" pos:column="22">head_ref<pos:position pos:line="69" pos:column="30"/></name></expr></argument>)<pos:position pos:line="69" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="70" pos:column="17">head_ref<pos:position pos:line="70" pos:column="25"/></name> <operator pos:line="70" pos:column="26">=<pos:position pos:line="70" pos:column="27"/></operator> <name pos:line="70" pos:column="28">NULL<pos:position pos:line="70" pos:column="32"/></name></expr>;<pos:position pos:line="70" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="71" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="73" pos:column="9">/*
	 * Acquire all locks, verify old values if provided, check
	 * that new values are valid, and write new values to the
	 * lockfiles, ready to be activated. Only keep one lockfile
	 * open at a time to avoid running out of file descriptors.
	 */</comment>
	<for pos:line="79" pos:column="9">for <control pos:line="79" pos:column="13">(<init><expr><name pos:line="79" pos:column="14">i<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">=<pos:position pos:line="79" pos:column="17"/></operator> <literal type="number" pos:line="79" pos:column="18">0<pos:position pos:line="79" pos:column="19"/></literal></expr>;<pos:position pos:line="79" pos:column="20"/></init> <condition><expr><name pos:line="79" pos:column="21">i<pos:position pos:line="79" pos:column="22"/></name> <operator pos:line="79" pos:column="23">&lt;<pos:position pos:line="79" pos:column="27"/></operator> <name><name pos:line="79" pos:column="25">transaction<pos:position pos:line="79" pos:column="36"/></name><operator pos:line="79" pos:column="36">-&gt;<pos:position pos:line="79" pos:column="41"/></operator><name pos:line="79" pos:column="38">nr<pos:position pos:line="79" pos:column="40"/></name></name></expr>;<pos:position pos:line="79" pos:column="41"/></condition> <incr><expr><name pos:line="79" pos:column="42">i<pos:position pos:line="79" pos:column="43"/></name><operator pos:line="79" pos:column="43">++<pos:position pos:line="79" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="79" pos:column="46"/></control> <block pos:line="79" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="80" pos:column="17">struct<pos:position pos:line="80" pos:column="23"/></name> <name pos:line="80" pos:column="24">ref_update<pos:position pos:line="80" pos:column="34"/></name></name> <modifier pos:line="80" pos:column="35">*<pos:position pos:line="80" pos:column="36"/></modifier></type><name pos:line="80" pos:column="36">update<pos:position pos:line="80" pos:column="42"/></name> <init pos:line="80" pos:column="43">= <expr><name><name pos:line="80" pos:column="45">transaction<pos:position pos:line="80" pos:column="56"/></name><operator pos:line="80" pos:column="56">-&gt;<pos:position pos:line="80" pos:column="61"/></operator><name pos:line="80" pos:column="58">updates<pos:position pos:line="80" pos:column="65"/></name><index pos:line="80" pos:column="65">[<expr><name pos:line="80" pos:column="66">i<pos:position pos:line="80" pos:column="67"/></name></expr>]<pos:position pos:line="80" pos:column="68"/></index></name></expr></init></decl>;<pos:position pos:line="80" pos:column="69"/></decl_stmt>

		<expr_stmt><expr><name pos:line="82" pos:column="17">ret<pos:position pos:line="82" pos:column="20"/></name> <operator pos:line="82" pos:column="21">=<pos:position pos:line="82" pos:column="22"/></operator> <call><name pos:line="82" pos:column="23">lock_ref_for_update<pos:position pos:line="82" pos:column="42"/></name><argument_list pos:line="82" pos:column="42">(<argument><expr><name pos:line="82" pos:column="43">update<pos:position pos:line="82" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="51">transaction<pos:position pos:line="82" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="64">head_ref<pos:position pos:line="82" pos:column="72"/></name></expr></argument>,
					  <argument><expr><operator pos:line="83" pos:column="43">&amp;<pos:position pos:line="83" pos:column="48"/></operator><name pos:line="83" pos:column="44">affected_refnames<pos:position pos:line="83" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="63">err<pos:position pos:line="83" pos:column="66"/></name></expr></argument>)<pos:position pos:line="83" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="68"/></expr_stmt>
		<if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><name pos:line="84" pos:column="21">ret<pos:position pos:line="84" pos:column="24"/></name></expr>)<pos:position pos:line="84" pos:column="25"/></condition><then pos:line="84" pos:column="25">
			<block type="pseudo"><goto pos:line="85" pos:column="25">goto <name pos:line="85" pos:column="30">cleanup<pos:position pos:line="85" pos:column="37"/></name>;<pos:position pos:line="85" pos:column="38"/></goto></block></then></if>
	}<pos:position pos:line="86" pos:column="10"/></block></for>

	<comment type="block" pos:line="88" pos:column="9">/* Perform updates first so live commits remain referenced */</comment>
	<for pos:line="89" pos:column="9">for <control pos:line="89" pos:column="13">(<init><expr><name pos:line="89" pos:column="14">i<pos:position pos:line="89" pos:column="15"/></name> <operator pos:line="89" pos:column="16">=<pos:position pos:line="89" pos:column="17"/></operator> <literal type="number" pos:line="89" pos:column="18">0<pos:position pos:line="89" pos:column="19"/></literal></expr>;<pos:position pos:line="89" pos:column="20"/></init> <condition><expr><name pos:line="89" pos:column="21">i<pos:position pos:line="89" pos:column="22"/></name> <operator pos:line="89" pos:column="23">&lt;<pos:position pos:line="89" pos:column="27"/></operator> <name><name pos:line="89" pos:column="25">transaction<pos:position pos:line="89" pos:column="36"/></name><operator pos:line="89" pos:column="36">-&gt;<pos:position pos:line="89" pos:column="41"/></operator><name pos:line="89" pos:column="38">nr<pos:position pos:line="89" pos:column="40"/></name></name></expr>;<pos:position pos:line="89" pos:column="41"/></condition> <incr><expr><name pos:line="89" pos:column="42">i<pos:position pos:line="89" pos:column="43"/></name><operator pos:line="89" pos:column="43">++<pos:position pos:line="89" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="89" pos:column="46"/></control> <block pos:line="89" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="90" pos:column="17">struct<pos:position pos:line="90" pos:column="23"/></name> <name pos:line="90" pos:column="24">ref_update<pos:position pos:line="90" pos:column="34"/></name></name> <modifier pos:line="90" pos:column="35">*<pos:position pos:line="90" pos:column="36"/></modifier></type><name pos:line="90" pos:column="36">update<pos:position pos:line="90" pos:column="42"/></name> <init pos:line="90" pos:column="43">= <expr><name><name pos:line="90" pos:column="45">transaction<pos:position pos:line="90" pos:column="56"/></name><operator pos:line="90" pos:column="56">-&gt;<pos:position pos:line="90" pos:column="61"/></operator><name pos:line="90" pos:column="58">updates<pos:position pos:line="90" pos:column="65"/></name><index pos:line="90" pos:column="65">[<expr><name pos:line="90" pos:column="66">i<pos:position pos:line="90" pos:column="67"/></name></expr>]<pos:position pos:line="90" pos:column="68"/></index></name></expr></init></decl>;<pos:position pos:line="90" pos:column="69"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="91" pos:column="17">struct<pos:position pos:line="91" pos:column="23"/></name> <name pos:line="91" pos:column="24">ref_lock<pos:position pos:line="91" pos:column="32"/></name></name> <modifier pos:line="91" pos:column="33">*<pos:position pos:line="91" pos:column="34"/></modifier></type><name pos:line="91" pos:column="34">lock<pos:position pos:line="91" pos:column="38"/></name> <init pos:line="91" pos:column="39">= <expr><name><name pos:line="91" pos:column="41">update<pos:position pos:line="91" pos:column="47"/></name><operator pos:line="91" pos:column="47">-&gt;<pos:position pos:line="91" pos:column="52"/></operator><name pos:line="91" pos:column="49">lock<pos:position pos:line="91" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="91" pos:column="54"/></decl_stmt>

		<if pos:line="93" pos:column="17">if <condition pos:line="93" pos:column="20">(<expr><name><name pos:line="93" pos:column="21">update<pos:position pos:line="93" pos:column="27"/></name><operator pos:line="93" pos:column="27">-&gt;<pos:position pos:line="93" pos:column="32"/></operator><name pos:line="93" pos:column="29">flags<pos:position pos:line="93" pos:column="34"/></name></name> <operator pos:line="93" pos:column="35">&amp;<pos:position pos:line="93" pos:column="40"/></operator> <name pos:line="93" pos:column="37">REF_NEEDS_COMMIT<pos:position pos:line="93" pos:column="53"/></name> <operator pos:line="93" pos:column="54">||<pos:position pos:line="93" pos:column="56"/></operator>
		    <name><name pos:line="94" pos:column="21">update<pos:position pos:line="94" pos:column="27"/></name><operator pos:line="94" pos:column="27">-&gt;<pos:position pos:line="94" pos:column="32"/></operator><name pos:line="94" pos:column="29">flags<pos:position pos:line="94" pos:column="34"/></name></name> <operator pos:line="94" pos:column="35">&amp;<pos:position pos:line="94" pos:column="40"/></operator> <name pos:line="94" pos:column="37">REF_LOG_ONLY<pos:position pos:line="94" pos:column="49"/></name></expr>)<pos:position pos:line="94" pos:column="50"/></condition><then pos:line="94" pos:column="50"> <block pos:line="94" pos:column="51">{
			<if pos:line="95" pos:column="25">if <condition pos:line="95" pos:column="28">(<expr><call><name pos:line="95" pos:column="29">log_ref_write<pos:position pos:line="95" pos:column="42"/></name><argument_list pos:line="95" pos:column="42">(<argument><expr><name><name pos:line="95" pos:column="43">lock<pos:position pos:line="95" pos:column="47"/></name><operator pos:line="95" pos:column="47">-&gt;<pos:position pos:line="95" pos:column="52"/></operator><name pos:line="95" pos:column="49">ref_name<pos:position pos:line="95" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="59">lock<pos:position pos:line="95" pos:column="63"/></name><operator pos:line="95" pos:column="63">-&gt;<pos:position pos:line="95" pos:column="68"/></operator><name pos:line="95" pos:column="65">old_oid<pos:position pos:line="95" pos:column="72"/></name><operator pos:line="95" pos:column="72">.<pos:position pos:line="95" pos:column="73"/></operator><name pos:line="95" pos:column="73">hash<pos:position pos:line="95" pos:column="77"/></name></name></expr></argument>,
					  <argument><expr><name><name pos:line="96" pos:column="43">update<pos:position pos:line="96" pos:column="49"/></name><operator pos:line="96" pos:column="49">-&gt;<pos:position pos:line="96" pos:column="54"/></operator><name pos:line="96" pos:column="51">new_sha1<pos:position pos:line="96" pos:column="59"/></name></name></expr></argument>,
					  <argument><expr><name><name pos:line="97" pos:column="43">update<pos:position pos:line="97" pos:column="49"/></name><operator pos:line="97" pos:column="49">-&gt;<pos:position pos:line="97" pos:column="54"/></operator><name pos:line="97" pos:column="51">msg<pos:position pos:line="97" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="56">update<pos:position pos:line="97" pos:column="62"/></name><operator pos:line="97" pos:column="62">-&gt;<pos:position pos:line="97" pos:column="67"/></operator><name pos:line="97" pos:column="64">flags<pos:position pos:line="97" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="71">err<pos:position pos:line="97" pos:column="74"/></name></expr></argument>)<pos:position pos:line="97" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="76"/></condition><then pos:line="97" pos:column="76"> <block pos:line="97" pos:column="77">{
				<decl_stmt><decl><type><name pos:line="98" pos:column="33">char<pos:position pos:line="98" pos:column="37"/></name> <modifier pos:line="98" pos:column="38">*<pos:position pos:line="98" pos:column="39"/></modifier></type><name pos:line="98" pos:column="39">old_msg<pos:position pos:line="98" pos:column="46"/></name> <init pos:line="98" pos:column="47">= <expr><call><name pos:line="98" pos:column="49">strbuf_detach<pos:position pos:line="98" pos:column="62"/></name><argument_list pos:line="98" pos:column="62">(<argument><expr><name pos:line="98" pos:column="63">err<pos:position pos:line="98" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="68">NULL<pos:position pos:line="98" pos:column="72"/></name></expr></argument>)<pos:position pos:line="98" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="98" pos:column="74"/></decl_stmt>

				<expr_stmt><expr><call><name pos:line="100" pos:column="33">strbuf_addf<pos:position pos:line="100" pos:column="44"/></name><argument_list pos:line="100" pos:column="44">(<argument><expr><name pos:line="100" pos:column="45">err<pos:position pos:line="100" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="50">"cannot update the ref '%s': %s"<pos:position pos:line="100" pos:column="82"/></literal></expr></argument>,
					    <argument><expr><name><name pos:line="101" pos:column="45">lock<pos:position pos:line="101" pos:column="49"/></name><operator pos:line="101" pos:column="49">-&gt;<pos:position pos:line="101" pos:column="54"/></operator><name pos:line="101" pos:column="51">ref_name<pos:position pos:line="101" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="61">old_msg<pos:position pos:line="101" pos:column="68"/></name></expr></argument>)<pos:position pos:line="101" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="70"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="102" pos:column="33">free<pos:position pos:line="102" pos:column="37"/></name><argument_list pos:line="102" pos:column="37">(<argument><expr><name pos:line="102" pos:column="38">old_msg<pos:position pos:line="102" pos:column="45"/></name></expr></argument>)<pos:position pos:line="102" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="103" pos:column="33">unlock_ref<pos:position pos:line="103" pos:column="43"/></name><argument_list pos:line="103" pos:column="43">(<argument><expr><name pos:line="103" pos:column="44">lock<pos:position pos:line="103" pos:column="48"/></name></expr></argument>)<pos:position pos:line="103" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="104" pos:column="33">update<pos:position pos:line="104" pos:column="39"/></name><operator pos:line="104" pos:column="39">-&gt;<pos:position pos:line="104" pos:column="44"/></operator><name pos:line="104" pos:column="41">lock<pos:position pos:line="104" pos:column="45"/></name></name> <operator pos:line="104" pos:column="46">=<pos:position pos:line="104" pos:column="47"/></operator> <name pos:line="104" pos:column="48">NULL<pos:position pos:line="104" pos:column="52"/></name></expr>;<pos:position pos:line="104" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><name pos:line="105" pos:column="33">ret<pos:position pos:line="105" pos:column="36"/></name> <operator pos:line="105" pos:column="37">=<pos:position pos:line="105" pos:column="38"/></operator> <name pos:line="105" pos:column="39">TRANSACTION_GENERIC_ERROR<pos:position pos:line="105" pos:column="64"/></name></expr>;<pos:position pos:line="105" pos:column="65"/></expr_stmt>
				<goto pos:line="106" pos:column="33">goto <name pos:line="106" pos:column="38">cleanup<pos:position pos:line="106" pos:column="45"/></name>;<pos:position pos:line="106" pos:column="46"/></goto>
			}<pos:position pos:line="107" pos:column="26"/></block></then></if>
		}<pos:position pos:line="108" pos:column="18"/></block></then></if>
		<if pos:line="109" pos:column="17">if <condition pos:line="109" pos:column="20">(<expr><name><name pos:line="109" pos:column="21">update<pos:position pos:line="109" pos:column="27"/></name><operator pos:line="109" pos:column="27">-&gt;<pos:position pos:line="109" pos:column="32"/></operator><name pos:line="109" pos:column="29">flags<pos:position pos:line="109" pos:column="34"/></name></name> <operator pos:line="109" pos:column="35">&amp;<pos:position pos:line="109" pos:column="40"/></operator> <name pos:line="109" pos:column="37">REF_NEEDS_COMMIT<pos:position pos:line="109" pos:column="53"/></name></expr>)<pos:position pos:line="109" pos:column="54"/></condition><then pos:line="109" pos:column="54"> <block pos:line="109" pos:column="55">{
			<expr_stmt><expr><call><name pos:line="110" pos:column="25">clear_loose_ref_cache<pos:position pos:line="110" pos:column="46"/></name><argument_list pos:line="110" pos:column="46">(<argument><expr><operator pos:line="110" pos:column="47">&amp;<pos:position pos:line="110" pos:column="52"/></operator><name pos:line="110" pos:column="48">ref_cache<pos:position pos:line="110" pos:column="57"/></name></expr></argument>)<pos:position pos:line="110" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="59"/></expr_stmt>
			<if pos:line="111" pos:column="25">if <condition pos:line="111" pos:column="28">(<expr><call><name pos:line="111" pos:column="29">commit_ref<pos:position pos:line="111" pos:column="39"/></name><argument_list pos:line="111" pos:column="39">(<argument><expr><name pos:line="111" pos:column="40">lock<pos:position pos:line="111" pos:column="44"/></name></expr></argument>)<pos:position pos:line="111" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="111" pos:column="46"/></condition><then pos:line="111" pos:column="46"> <block pos:line="111" pos:column="47">{
				<expr_stmt><expr><call><name pos:line="112" pos:column="33">strbuf_addf<pos:position pos:line="112" pos:column="44"/></name><argument_list pos:line="112" pos:column="44">(<argument><expr><name pos:line="112" pos:column="45">err<pos:position pos:line="112" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="50">"couldn't set '%s'"<pos:position pos:line="112" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="71">lock<pos:position pos:line="112" pos:column="75"/></name><operator pos:line="112" pos:column="75">-&gt;<pos:position pos:line="112" pos:column="80"/></operator><name pos:line="112" pos:column="77">ref_name<pos:position pos:line="112" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="87"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="113" pos:column="33">unlock_ref<pos:position pos:line="113" pos:column="43"/></name><argument_list pos:line="113" pos:column="43">(<argument><expr><name pos:line="113" pos:column="44">lock<pos:position pos:line="113" pos:column="48"/></name></expr></argument>)<pos:position pos:line="113" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="114" pos:column="33">update<pos:position pos:line="114" pos:column="39"/></name><operator pos:line="114" pos:column="39">-&gt;<pos:position pos:line="114" pos:column="44"/></operator><name pos:line="114" pos:column="41">lock<pos:position pos:line="114" pos:column="45"/></name></name> <operator pos:line="114" pos:column="46">=<pos:position pos:line="114" pos:column="47"/></operator> <name pos:line="114" pos:column="48">NULL<pos:position pos:line="114" pos:column="52"/></name></expr>;<pos:position pos:line="114" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><name pos:line="115" pos:column="33">ret<pos:position pos:line="115" pos:column="36"/></name> <operator pos:line="115" pos:column="37">=<pos:position pos:line="115" pos:column="38"/></operator> <name pos:line="115" pos:column="39">TRANSACTION_GENERIC_ERROR<pos:position pos:line="115" pos:column="64"/></name></expr>;<pos:position pos:line="115" pos:column="65"/></expr_stmt>
				<goto pos:line="116" pos:column="33">goto <name pos:line="116" pos:column="38">cleanup<pos:position pos:line="116" pos:column="45"/></name>;<pos:position pos:line="116" pos:column="46"/></goto>
			}<pos:position pos:line="117" pos:column="26"/></block></then></if>
		}<pos:position pos:line="118" pos:column="18"/></block></then></if>
	}<pos:position pos:line="119" pos:column="10"/></block></for>
	<comment type="block" pos:line="120" pos:column="9">/* Perform deletes now that updates are safely completed */</comment>
	<for pos:line="121" pos:column="9">for <control pos:line="121" pos:column="13">(<init><expr><name pos:line="121" pos:column="14">i<pos:position pos:line="121" pos:column="15"/></name> <operator pos:line="121" pos:column="16">=<pos:position pos:line="121" pos:column="17"/></operator> <literal type="number" pos:line="121" pos:column="18">0<pos:position pos:line="121" pos:column="19"/></literal></expr>;<pos:position pos:line="121" pos:column="20"/></init> <condition><expr><name pos:line="121" pos:column="21">i<pos:position pos:line="121" pos:column="22"/></name> <operator pos:line="121" pos:column="23">&lt;<pos:position pos:line="121" pos:column="27"/></operator> <name><name pos:line="121" pos:column="25">transaction<pos:position pos:line="121" pos:column="36"/></name><operator pos:line="121" pos:column="36">-&gt;<pos:position pos:line="121" pos:column="41"/></operator><name pos:line="121" pos:column="38">nr<pos:position pos:line="121" pos:column="40"/></name></name></expr>;<pos:position pos:line="121" pos:column="41"/></condition> <incr><expr><name pos:line="121" pos:column="42">i<pos:position pos:line="121" pos:column="43"/></name><operator pos:line="121" pos:column="43">++<pos:position pos:line="121" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="121" pos:column="46"/></control> <block pos:line="121" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="122" pos:column="17">struct<pos:position pos:line="122" pos:column="23"/></name> <name pos:line="122" pos:column="24">ref_update<pos:position pos:line="122" pos:column="34"/></name></name> <modifier pos:line="122" pos:column="35">*<pos:position pos:line="122" pos:column="36"/></modifier></type><name pos:line="122" pos:column="36">update<pos:position pos:line="122" pos:column="42"/></name> <init pos:line="122" pos:column="43">= <expr><name><name pos:line="122" pos:column="45">transaction<pos:position pos:line="122" pos:column="56"/></name><operator pos:line="122" pos:column="56">-&gt;<pos:position pos:line="122" pos:column="61"/></operator><name pos:line="122" pos:column="58">updates<pos:position pos:line="122" pos:column="65"/></name><index pos:line="122" pos:column="65">[<expr><name pos:line="122" pos:column="66">i<pos:position pos:line="122" pos:column="67"/></name></expr>]<pos:position pos:line="122" pos:column="68"/></index></name></expr></init></decl>;<pos:position pos:line="122" pos:column="69"/></decl_stmt>

		<if pos:line="124" pos:column="17">if <condition pos:line="124" pos:column="20">(<expr><name><name pos:line="124" pos:column="21">update<pos:position pos:line="124" pos:column="27"/></name><operator pos:line="124" pos:column="27">-&gt;<pos:position pos:line="124" pos:column="32"/></operator><name pos:line="124" pos:column="29">flags<pos:position pos:line="124" pos:column="34"/></name></name> <operator pos:line="124" pos:column="35">&amp;<pos:position pos:line="124" pos:column="40"/></operator> <name pos:line="124" pos:column="37">REF_DELETING<pos:position pos:line="124" pos:column="49"/></name> <operator pos:line="124" pos:column="50">&amp;&amp;<pos:position pos:line="124" pos:column="60"/></operator>
		    <operator pos:line="125" pos:column="21">!<pos:position pos:line="125" pos:column="22"/></operator><operator pos:line="125" pos:column="22">(<pos:position pos:line="125" pos:column="23"/></operator><name><name pos:line="125" pos:column="23">update<pos:position pos:line="125" pos:column="29"/></name><operator pos:line="125" pos:column="29">-&gt;<pos:position pos:line="125" pos:column="34"/></operator><name pos:line="125" pos:column="31">flags<pos:position pos:line="125" pos:column="36"/></name></name> <operator pos:line="125" pos:column="37">&amp;<pos:position pos:line="125" pos:column="42"/></operator> <name pos:line="125" pos:column="39">REF_LOG_ONLY<pos:position pos:line="125" pos:column="51"/></name><operator pos:line="125" pos:column="51">)<pos:position pos:line="125" pos:column="52"/></operator></expr>)<pos:position pos:line="125" pos:column="53"/></condition><then pos:line="125" pos:column="53"> <block pos:line="125" pos:column="54">{
			<if pos:line="126" pos:column="25">if <condition pos:line="126" pos:column="28">(<expr><call><name pos:line="126" pos:column="29">delete_ref_loose<pos:position pos:line="126" pos:column="45"/></name><argument_list pos:line="126" pos:column="45">(<argument><expr><name><name pos:line="126" pos:column="46">update<pos:position pos:line="126" pos:column="52"/></name><operator pos:line="126" pos:column="52">-&gt;<pos:position pos:line="126" pos:column="57"/></operator><name pos:line="126" pos:column="54">lock<pos:position pos:line="126" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="60">update<pos:position pos:line="126" pos:column="66"/></name><operator pos:line="126" pos:column="66">-&gt;<pos:position pos:line="126" pos:column="71"/></operator><name pos:line="126" pos:column="68">type<pos:position pos:line="126" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="74">err<pos:position pos:line="126" pos:column="77"/></name></expr></argument>)<pos:position pos:line="126" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="126" pos:column="79"/></condition><then pos:line="126" pos:column="79"> <block pos:line="126" pos:column="80">{
				<expr_stmt><expr><name pos:line="127" pos:column="33">ret<pos:position pos:line="127" pos:column="36"/></name> <operator pos:line="127" pos:column="37">=<pos:position pos:line="127" pos:column="38"/></operator> <name pos:line="127" pos:column="39">TRANSACTION_GENERIC_ERROR<pos:position pos:line="127" pos:column="64"/></name></expr>;<pos:position pos:line="127" pos:column="65"/></expr_stmt>
				<goto pos:line="128" pos:column="33">goto <name pos:line="128" pos:column="38">cleanup<pos:position pos:line="128" pos:column="45"/></name>;<pos:position pos:line="128" pos:column="46"/></goto>
			}<pos:position pos:line="129" pos:column="26"/></block></then></if>

			<if pos:line="131" pos:column="25">if <condition pos:line="131" pos:column="28">(<expr><operator pos:line="131" pos:column="29">!<pos:position pos:line="131" pos:column="30"/></operator><operator pos:line="131" pos:column="30">(<pos:position pos:line="131" pos:column="31"/></operator><name><name pos:line="131" pos:column="31">update<pos:position pos:line="131" pos:column="37"/></name><operator pos:line="131" pos:column="37">-&gt;<pos:position pos:line="131" pos:column="42"/></operator><name pos:line="131" pos:column="39">flags<pos:position pos:line="131" pos:column="44"/></name></name> <operator pos:line="131" pos:column="45">&amp;<pos:position pos:line="131" pos:column="50"/></operator> <name pos:line="131" pos:column="47">REF_ISPRUNING<pos:position pos:line="131" pos:column="60"/></name><operator pos:line="131" pos:column="60">)<pos:position pos:line="131" pos:column="61"/></operator></expr>)<pos:position pos:line="131" pos:column="62"/></condition><then pos:line="131" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="132" pos:column="33">string_list_append<pos:position pos:line="132" pos:column="51"/></name><argument_list pos:line="132" pos:column="51">(<argument><expr><operator pos:line="132" pos:column="52">&amp;<pos:position pos:line="132" pos:column="57"/></operator><name pos:line="132" pos:column="53">refs_to_delete<pos:position pos:line="132" pos:column="67"/></name></expr></argument>,
						   <argument><expr><name><name pos:line="133" pos:column="52">update<pos:position pos:line="133" pos:column="58"/></name><operator pos:line="133" pos:column="58">-&gt;<pos:position pos:line="133" pos:column="63"/></operator><name pos:line="133" pos:column="60">lock<pos:position pos:line="133" pos:column="64"/></name><operator pos:line="133" pos:column="64">-&gt;<pos:position pos:line="133" pos:column="69"/></operator><name pos:line="133" pos:column="66">ref_name<pos:position pos:line="133" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="76"/></expr_stmt></block></then></if>
		}<pos:position pos:line="134" pos:column="18"/></block></then></if>
	}<pos:position pos:line="135" pos:column="10"/></block></for>

	<if pos:line="137" pos:column="9">if <condition pos:line="137" pos:column="12">(<expr><call><name pos:line="137" pos:column="13">repack_without_refs<pos:position pos:line="137" pos:column="32"/></name><argument_list pos:line="137" pos:column="32">(<argument><expr><operator pos:line="137" pos:column="33">&amp;<pos:position pos:line="137" pos:column="38"/></operator><name pos:line="137" pos:column="34">refs_to_delete<pos:position pos:line="137" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="50">err<pos:position pos:line="137" pos:column="53"/></name></expr></argument>)<pos:position pos:line="137" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="137" pos:column="55"/></condition><then pos:line="137" pos:column="55"> <block pos:line="137" pos:column="56">{
		<expr_stmt><expr><name pos:line="138" pos:column="17">ret<pos:position pos:line="138" pos:column="20"/></name> <operator pos:line="138" pos:column="21">=<pos:position pos:line="138" pos:column="22"/></operator> <name pos:line="138" pos:column="23">TRANSACTION_GENERIC_ERROR<pos:position pos:line="138" pos:column="48"/></name></expr>;<pos:position pos:line="138" pos:column="49"/></expr_stmt>
		<goto pos:line="139" pos:column="17">goto <name pos:line="139" pos:column="22">cleanup<pos:position pos:line="139" pos:column="29"/></name>;<pos:position pos:line="139" pos:column="30"/></goto>
	}<pos:position pos:line="140" pos:column="10"/></block></then></if>
	<macro><name pos:line="141" pos:column="9">for_each_string_list_item<pos:position pos:line="141" pos:column="34"/></name><argument_list pos:line="141" pos:column="34">(<argument pos:line="141" pos:column="35">ref_to_delete<pos:position pos:line="141" pos:column="48"/></argument>, <argument pos:line="141" pos:column="50">&amp;refs_to_delete<pos:position pos:line="141" pos:column="65"/></argument>)<pos:position pos:line="141" pos:column="66"/></argument_list></macro>
		<expr_stmt><expr><call><name pos:line="142" pos:column="17">unlink_or_warn<pos:position pos:line="142" pos:column="31"/></name><argument_list pos:line="142" pos:column="31">(<argument><expr><call><name pos:line="142" pos:column="32">git_path<pos:position pos:line="142" pos:column="40"/></name><argument_list pos:line="142" pos:column="40">(<argument><expr><literal type="string" pos:line="142" pos:column="41">"logs/%s"<pos:position pos:line="142" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="52">ref_to_delete<pos:position pos:line="142" pos:column="65"/></name><operator pos:line="142" pos:column="65">-&gt;<pos:position pos:line="142" pos:column="70"/></operator><name pos:line="142" pos:column="67">string<pos:position pos:line="142" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="142" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="76"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="143" pos:column="9">clear_loose_ref_cache<pos:position pos:line="143" pos:column="30"/></name><argument_list pos:line="143" pos:column="30">(<argument><expr><operator pos:line="143" pos:column="31">&amp;<pos:position pos:line="143" pos:column="36"/></operator><name pos:line="143" pos:column="32">ref_cache<pos:position pos:line="143" pos:column="41"/></name></expr></argument>)<pos:position pos:line="143" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="43"/></expr_stmt>

<label><name pos:line="145" pos:column="1">cleanup<pos:position pos:line="145" pos:column="8"/></name>:<pos:position pos:line="145" pos:column="9"/></label>
	<expr_stmt><expr><name><name pos:line="146" pos:column="9">transaction<pos:position pos:line="146" pos:column="20"/></name><operator pos:line="146" pos:column="20">-&gt;<pos:position pos:line="146" pos:column="25"/></operator><name pos:line="146" pos:column="22">state<pos:position pos:line="146" pos:column="27"/></name></name> <operator pos:line="146" pos:column="28">=<pos:position pos:line="146" pos:column="29"/></operator> <name pos:line="146" pos:column="30">REF_TRANSACTION_CLOSED<pos:position pos:line="146" pos:column="52"/></name></expr>;<pos:position pos:line="146" pos:column="53"/></expr_stmt>

	<for pos:line="148" pos:column="9">for <control pos:line="148" pos:column="13">(<init><expr><name pos:line="148" pos:column="14">i<pos:position pos:line="148" pos:column="15"/></name> <operator pos:line="148" pos:column="16">=<pos:position pos:line="148" pos:column="17"/></operator> <literal type="number" pos:line="148" pos:column="18">0<pos:position pos:line="148" pos:column="19"/></literal></expr>;<pos:position pos:line="148" pos:column="20"/></init> <condition><expr><name pos:line="148" pos:column="21">i<pos:position pos:line="148" pos:column="22"/></name> <operator pos:line="148" pos:column="23">&lt;<pos:position pos:line="148" pos:column="27"/></operator> <name><name pos:line="148" pos:column="25">transaction<pos:position pos:line="148" pos:column="36"/></name><operator pos:line="148" pos:column="36">-&gt;<pos:position pos:line="148" pos:column="41"/></operator><name pos:line="148" pos:column="38">nr<pos:position pos:line="148" pos:column="40"/></name></name></expr>;<pos:position pos:line="148" pos:column="41"/></condition> <incr><expr><name pos:line="148" pos:column="42">i<pos:position pos:line="148" pos:column="43"/></name><operator pos:line="148" pos:column="43">++<pos:position pos:line="148" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="148" pos:column="46"/></control>
		<block type="pseudo"><if pos:line="149" pos:column="17">if <condition pos:line="149" pos:column="20">(<expr><name><name pos:line="149" pos:column="21">transaction<pos:position pos:line="149" pos:column="32"/></name><operator pos:line="149" pos:column="32">-&gt;<pos:position pos:line="149" pos:column="37"/></operator><name pos:line="149" pos:column="34">updates<pos:position pos:line="149" pos:column="41"/></name><index pos:line="149" pos:column="41">[<expr><name pos:line="149" pos:column="42">i<pos:position pos:line="149" pos:column="43"/></name></expr>]<pos:position pos:line="149" pos:column="44"/></index></name><operator pos:line="149" pos:column="44">-&gt;<pos:position pos:line="149" pos:column="49"/></operator><name pos:line="149" pos:column="46">lock<pos:position pos:line="149" pos:column="50"/></name></expr>)<pos:position pos:line="149" pos:column="51"/></condition><then pos:line="149" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="150" pos:column="25">unlock_ref<pos:position pos:line="150" pos:column="35"/></name><argument_list pos:line="150" pos:column="35">(<argument><expr><name><name pos:line="150" pos:column="36">transaction<pos:position pos:line="150" pos:column="47"/></name><operator pos:line="150" pos:column="47">-&gt;<pos:position pos:line="150" pos:column="52"/></operator><name pos:line="150" pos:column="49">updates<pos:position pos:line="150" pos:column="56"/></name><index pos:line="150" pos:column="56">[<expr><name pos:line="150" pos:column="57">i<pos:position pos:line="150" pos:column="58"/></name></expr>]<pos:position pos:line="150" pos:column="59"/></index></name><operator pos:line="150" pos:column="59">-&gt;<pos:position pos:line="150" pos:column="64"/></operator><name pos:line="150" pos:column="61">lock<pos:position pos:line="150" pos:column="65"/></name></expr></argument>)<pos:position pos:line="150" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="67"/></expr_stmt></block></then></if></block></for>
	<expr_stmt><expr><call><name pos:line="151" pos:column="9">string_list_clear<pos:position pos:line="151" pos:column="26"/></name><argument_list pos:line="151" pos:column="26">(<argument><expr><operator pos:line="151" pos:column="27">&amp;<pos:position pos:line="151" pos:column="32"/></operator><name pos:line="151" pos:column="28">refs_to_delete<pos:position pos:line="151" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="151" pos:column="44">0<pos:position pos:line="151" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="152" pos:column="9">free<pos:position pos:line="152" pos:column="13"/></name><argument_list pos:line="152" pos:column="13">(<argument><expr><name pos:line="152" pos:column="14">head_ref<pos:position pos:line="152" pos:column="22"/></name></expr></argument>)<pos:position pos:line="152" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="153" pos:column="9">string_list_clear<pos:position pos:line="153" pos:column="26"/></name><argument_list pos:line="153" pos:column="26">(<argument><expr><operator pos:line="153" pos:column="27">&amp;<pos:position pos:line="153" pos:column="32"/></operator><name pos:line="153" pos:column="28">affected_refnames<pos:position pos:line="153" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="153" pos:column="47">0<pos:position pos:line="153" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="50"/></expr_stmt>

	<return pos:line="155" pos:column="9">return <expr><name pos:line="155" pos:column="16">ret<pos:position pos:line="155" pos:column="19"/></name></expr>;<pos:position pos:line="155" pos:column="20"/></return>
}<pos:position pos:line="156" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1568_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">find_word_boundaries<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">mmfile_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">buffer<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">regex_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">word_regex<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">begin<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">end<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">word_regex<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&amp;&amp;<pos:position pos:line="4" pos:column="34"/></operator> <operator pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">begin<pos:position pos:line="4" pos:column="33"/></name> <operator pos:line="4" pos:column="34">&lt;<pos:position pos:line="4" pos:column="38"/></operator> <name><name pos:line="4" pos:column="36">buffer<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">-&gt;<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="44">size<pos:position pos:line="4" pos:column="48"/></name></name></expr>)<pos:position pos:line="4" pos:column="49"/></condition><then pos:line="4" pos:column="49"> <block pos:line="4" pos:column="50">{
		<decl_stmt><decl><type><name pos:line="5" pos:column="17">regmatch_t<pos:position pos:line="5" pos:column="27"/></name></type> <name><name pos:line="5" pos:column="28">match<pos:position pos:line="5" pos:column="33"/></name><index pos:line="5" pos:column="33">[<expr><literal type="number" pos:line="5" pos:column="34">1<pos:position pos:line="5" pos:column="35"/></literal></expr>]<pos:position pos:line="5" pos:column="36"/></index></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><operator pos:line="6" pos:column="21">!<pos:position pos:line="6" pos:column="22"/></operator><call><name pos:line="6" pos:column="22">regexec_buf<pos:position pos:line="6" pos:column="33"/></name><argument_list pos:line="6" pos:column="33">(<argument><expr><name pos:line="6" pos:column="34">word_regex<pos:position pos:line="6" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="46">buffer<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">-&gt;<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="54">ptr<pos:position pos:line="6" pos:column="57"/></name></name> <operator pos:line="6" pos:column="58">+<pos:position pos:line="6" pos:column="59"/></operator> <operator pos:line="6" pos:column="60">*<pos:position pos:line="6" pos:column="61"/></operator><name pos:line="6" pos:column="61">begin<pos:position pos:line="6" pos:column="66"/></name></expr></argument>,
				 <argument><expr><name><name pos:line="7" pos:column="34">buffer<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">-&gt;<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="42">size<pos:position pos:line="7" pos:column="46"/></name></name> <operator pos:line="7" pos:column="47">-<pos:position pos:line="7" pos:column="48"/></operator> <operator pos:line="7" pos:column="49">*<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="50">begin<pos:position pos:line="7" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="57">1<pos:position pos:line="7" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="60">match<pos:position pos:line="7" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="67">0<pos:position pos:line="7" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="70"/></condition><then pos:line="7" pos:column="70"> <block pos:line="7" pos:column="71">{
			<decl_stmt><decl><type><name pos:line="8" pos:column="25">char<pos:position pos:line="8" pos:column="29"/></name> <modifier pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></modifier></type><name pos:line="8" pos:column="31">p<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><call><name pos:line="8" pos:column="35">memchr<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">(<argument><expr><name><name pos:line="8" pos:column="42">buffer<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">-&gt;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="50">ptr<pos:position pos:line="8" pos:column="53"/></name></name> <operator pos:line="8" pos:column="54">+<pos:position pos:line="8" pos:column="55"/></operator> <operator pos:line="8" pos:column="56">*<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="57">begin<pos:position pos:line="8" pos:column="62"/></name> <operator pos:line="8" pos:column="63">+<pos:position pos:line="8" pos:column="64"/></operator> <name><name pos:line="8" pos:column="65">match<pos:position pos:line="8" pos:column="70"/></name><index pos:line="8" pos:column="70">[<expr><literal type="number" pos:line="8" pos:column="71">0<pos:position pos:line="8" pos:column="72"/></literal></expr>]<pos:position pos:line="8" pos:column="73"/></index></name><operator pos:line="8" pos:column="73">.<pos:position pos:line="8" pos:column="74"/></operator><name pos:line="8" pos:column="74">rm_so<pos:position pos:line="8" pos:column="79"/></name></expr></argument>,
					<argument><expr><literal type="char" pos:line="9" pos:column="41">'\n'<pos:position pos:line="9" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="47">match<pos:position pos:line="9" pos:column="52"/></name><index pos:line="9" pos:column="52">[<expr><literal type="number" pos:line="9" pos:column="53">0<pos:position pos:line="9" pos:column="54"/></literal></expr>]<pos:position pos:line="9" pos:column="55"/></index></name><operator pos:line="9" pos:column="55">.<pos:position pos:line="9" pos:column="56"/></operator><name pos:line="9" pos:column="56">rm_eo<pos:position pos:line="9" pos:column="61"/></name> <operator pos:line="9" pos:column="62">-<pos:position pos:line="9" pos:column="63"/></operator> <name><name pos:line="9" pos:column="64">match<pos:position pos:line="9" pos:column="69"/></name><index pos:line="9" pos:column="69">[<expr><literal type="number" pos:line="9" pos:column="70">0<pos:position pos:line="9" pos:column="71"/></literal></expr>]<pos:position pos:line="9" pos:column="72"/></index></name><operator pos:line="9" pos:column="72">.<pos:position pos:line="9" pos:column="73"/></operator><name pos:line="9" pos:column="73">rm_so<pos:position pos:line="9" pos:column="78"/></name></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="80"/></decl_stmt>
			<expr_stmt><expr><operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">end<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">=<pos:position pos:line="10" pos:column="31"/></operator> <ternary><condition><expr><name pos:line="10" pos:column="32">p<pos:position pos:line="10" pos:column="33"/></name></expr> ?<pos:position pos:line="10" pos:column="35"/></condition><then pos:line="10" pos:column="35"> <expr><name pos:line="10" pos:column="36">p<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">-<pos:position pos:line="10" pos:column="39"/></operator> <name><name pos:line="10" pos:column="40">buffer<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">-&gt;<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="48">ptr<pos:position pos:line="10" pos:column="51"/></name></name></expr> <pos:position pos:line="10" pos:column="52"/></then><else pos:line="10" pos:column="52">: <expr><name><name pos:line="10" pos:column="54">match<pos:position pos:line="10" pos:column="59"/></name><index pos:line="10" pos:column="59">[<expr><literal type="number" pos:line="10" pos:column="60">0<pos:position pos:line="10" pos:column="61"/></literal></expr>]<pos:position pos:line="10" pos:column="62"/></index></name><operator pos:line="10" pos:column="62">.<pos:position pos:line="10" pos:column="63"/></operator><name pos:line="10" pos:column="63">rm_eo<pos:position pos:line="10" pos:column="68"/></name> <operator pos:line="10" pos:column="69">+<pos:position pos:line="10" pos:column="70"/></operator> <operator pos:line="10" pos:column="71">*<pos:position pos:line="10" pos:column="72"/></operator><name pos:line="10" pos:column="72">begin<pos:position pos:line="10" pos:column="77"/></name></expr></else></ternary></expr>;<pos:position pos:line="10" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="11" pos:column="25">*<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">begin<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">+=<pos:position pos:line="11" pos:column="34"/></operator> <name><name pos:line="11" pos:column="35">match<pos:position pos:line="11" pos:column="40"/></name><index pos:line="11" pos:column="40">[<expr><literal type="number" pos:line="11" pos:column="41">0<pos:position pos:line="11" pos:column="42"/></literal></expr>]<pos:position pos:line="11" pos:column="43"/></index></name><operator pos:line="11" pos:column="43">.<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="44">rm_so<pos:position pos:line="11" pos:column="49"/></name></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt>
			<return pos:line="12" pos:column="25">return <expr><operator pos:line="12" pos:column="32">*<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">begin<pos:position pos:line="12" pos:column="38"/></name> <operator pos:line="12" pos:column="39">&gt;=<pos:position pos:line="12" pos:column="44"/></operator> <operator pos:line="12" pos:column="42">*<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="43">end<pos:position pos:line="12" pos:column="46"/></name></expr>;<pos:position pos:line="12" pos:column="47"/></return>
		}<pos:position pos:line="13" pos:column="18"/></block></then></if>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="17" pos:column="9">/* find the next word */</comment>
	<while pos:line="18" pos:column="9">while <condition pos:line="18" pos:column="15">(<expr><operator pos:line="18" pos:column="16">*<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">begin<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="25">buffer<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">size<pos:position pos:line="18" pos:column="37"/></name></name> <operator pos:line="18" pos:column="38">&amp;&amp;<pos:position pos:line="18" pos:column="48"/></operator> <call><name pos:line="18" pos:column="41">isspace<pos:position pos:line="18" pos:column="48"/></name><argument_list pos:line="18" pos:column="48">(<argument><expr><name><name pos:line="18" pos:column="49">buffer<pos:position pos:line="18" pos:column="55"/></name><operator pos:line="18" pos:column="55">-&gt;<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="57">ptr<pos:position pos:line="18" pos:column="60"/></name><index pos:line="18" pos:column="60">[<expr><operator pos:line="18" pos:column="61">*<pos:position pos:line="18" pos:column="62"/></operator><name pos:line="18" pos:column="62">begin<pos:position pos:line="18" pos:column="67"/></name></expr>]<pos:position pos:line="18" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="70"/></condition>
		<block type="pseudo"><expr_stmt><expr><operator pos:line="19" pos:column="17">(<pos:position pos:line="19" pos:column="18"/></operator><operator pos:line="19" pos:column="18">*<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">begin<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">)<pos:position pos:line="19" pos:column="25"/></operator><operator pos:line="19" pos:column="25">++<pos:position pos:line="19" pos:column="27"/></operator></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt></block></while>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">begin<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">&gt;=<pos:position pos:line="20" pos:column="25"/></operator> <name><name pos:line="20" pos:column="23">buffer<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">size<pos:position pos:line="20" pos:column="35"/></name></name></expr>)<pos:position pos:line="20" pos:column="36"/></condition><then pos:line="20" pos:column="36">
		<block type="pseudo"><return pos:line="21" pos:column="17">return <expr><operator pos:line="21" pos:column="24">-<pos:position pos:line="21" pos:column="25"/></operator><literal type="number" pos:line="21" pos:column="25">1<pos:position pos:line="21" pos:column="26"/></literal></expr>;<pos:position pos:line="21" pos:column="27"/></return></block></then></if>

	<comment type="block" pos:line="23" pos:column="9">/* find the end of the word */</comment>
	<expr_stmt><expr><operator pos:line="24" pos:column="9">*<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">end<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <operator pos:line="24" pos:column="16">*<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">begin<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">+<pos:position pos:line="24" pos:column="24"/></operator> <literal type="number" pos:line="24" pos:column="25">1<pos:position pos:line="24" pos:column="26"/></literal></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
	<while pos:line="25" pos:column="9">while <condition pos:line="25" pos:column="15">(<expr><operator pos:line="25" pos:column="16">*<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">end<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">&lt;<pos:position pos:line="25" pos:column="25"/></operator> <name><name pos:line="25" pos:column="23">buffer<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="31">size<pos:position pos:line="25" pos:column="35"/></name></name> <operator pos:line="25" pos:column="36">&amp;&amp;<pos:position pos:line="25" pos:column="46"/></operator> <operator pos:line="25" pos:column="39">!<pos:position pos:line="25" pos:column="40"/></operator><call><name pos:line="25" pos:column="40">isspace<pos:position pos:line="25" pos:column="47"/></name><argument_list pos:line="25" pos:column="47">(<argument><expr><name><name pos:line="25" pos:column="48">buffer<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">-&gt;<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="56">ptr<pos:position pos:line="25" pos:column="59"/></name><index pos:line="25" pos:column="59">[<expr><operator pos:line="25" pos:column="60">*<pos:position pos:line="25" pos:column="61"/></operator><name pos:line="25" pos:column="61">end<pos:position pos:line="25" pos:column="64"/></name></expr>]<pos:position pos:line="25" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="67"/></condition>
		<block type="pseudo"><expr_stmt><expr><operator pos:line="26" pos:column="17">(<pos:position pos:line="26" pos:column="18"/></operator><operator pos:line="26" pos:column="18">*<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">end<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">)<pos:position pos:line="26" pos:column="23"/></operator><operator pos:line="26" pos:column="23">++<pos:position pos:line="26" pos:column="25"/></operator></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt></block></while>

	<return pos:line="28" pos:column="9">return <expr><literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4054_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">enum<pos:position pos:line="1" pos:column="5"/></name> <name pos:line="1" pos:column="6">follow_symlinks_result<pos:position pos:line="1" pos:column="28"/></name></name></type> <name pos:line="1" pos:column="29">get_tree_entry_follow_symlinks<pos:position pos:line="1" pos:column="59"/></name><parameter_list pos:line="1" pos:column="59">(<parameter><decl><type><name pos:line="1" pos:column="60">unsigned<pos:position pos:line="1" pos:column="68"/></name> <name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">tree_sha1<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="86">const<pos:position pos:line="1" pos:column="91"/></specifier> <name pos:line="1" pos:column="92">char<pos:position pos:line="1" pos:column="96"/></name> <modifier pos:line="1" pos:column="97">*<pos:position pos:line="1" pos:column="98"/></modifier></type><name pos:line="1" pos:column="98">name<pos:position pos:line="1" pos:column="102"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="104">unsigned<pos:position pos:line="1" pos:column="112"/></name> <name pos:line="1" pos:column="113">char<pos:position pos:line="1" pos:column="117"/></name> <modifier pos:line="1" pos:column="118">*<pos:position pos:line="1" pos:column="119"/></modifier></type><name pos:line="1" pos:column="119">result<pos:position pos:line="1" pos:column="125"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="127">struct<pos:position pos:line="1" pos:column="133"/></name> <name pos:line="1" pos:column="134">strbuf<pos:position pos:line="1" pos:column="140"/></name></name> <modifier pos:line="1" pos:column="141">*<pos:position pos:line="1" pos:column="142"/></modifier></type><name pos:line="1" pos:column="142">result_path<pos:position pos:line="1" pos:column="153"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="155">unsigned<pos:position pos:line="1" pos:column="163"/></name> <modifier pos:line="1" pos:column="164">*<pos:position pos:line="1" pos:column="165"/></modifier></type><name pos:line="1" pos:column="165">mode<pos:position pos:line="1" pos:column="169"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="170"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">retval<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">MISSING_OBJECT<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">dir_state<pos:position pos:line="4" pos:column="25"/></name></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">parents<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><name pos:line="4" pos:column="37">NULL<pos:position pos:line="4" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">parents_alloc<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><literal type="number" pos:line="5" pos:column="32">0<pos:position pos:line="5" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">ssize_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">parents_nr<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><literal type="number" pos:line="6" pos:column="30">0<pos:position pos:line="6" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">char<pos:position pos:line="7" pos:column="22"/></name></type> <name><name pos:line="7" pos:column="23">current_tree_sha1<pos:position pos:line="7" pos:column="40"/></name><index pos:line="7" pos:column="40">[<expr><literal type="number" pos:line="7" pos:column="41">20<pos:position pos:line="7" pos:column="43"/></literal></expr>]<pos:position pos:line="7" pos:column="44"/></index></name></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">namebuf<pos:position pos:line="8" pos:column="30"/></name> <init pos:line="8" pos:column="31">= <expr><name pos:line="8" pos:column="33">STRBUF_INIT<pos:position pos:line="8" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">tree_desc<pos:position pos:line="9" pos:column="25"/></name></name></type> <name pos:line="9" pos:column="26">t<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">follows_remaining<pos:position pos:line="10" pos:column="30"/></name> <init pos:line="10" pos:column="31">= <expr><name pos:line="10" pos:column="33">GET_TREE_ENTRY_FOLLOW_SYMLINKS_MAX_LINKS<pos:position pos:line="10" pos:column="73"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="74"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">i<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">init_tree_desc<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><operator pos:line="13" pos:column="24">&amp;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="25">t<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">NULL<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="34">0UL<pos:position pos:line="13" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">strbuf_addstr<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><operator pos:line="14" pos:column="23">&amp;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="24">namebuf<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">name<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">hashcpy<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">current_tree_sha1<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">tree_sha1<pos:position pos:line="15" pos:column="45"/></name></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="47"/></expr_stmt>

	<while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><literal type="number" pos:line="17" pos:column="16">1<pos:position pos:line="17" pos:column="17"/></literal></expr>)<pos:position pos:line="17" pos:column="18"/></condition> <block pos:line="17" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">int<pos:position pos:line="18" pos:column="20"/></name></type> <name pos:line="18" pos:column="21">find_result<pos:position pos:line="18" pos:column="32"/></name></decl>;<pos:position pos:line="18" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">char<pos:position pos:line="19" pos:column="21"/></name> <modifier pos:line="19" pos:column="22">*<pos:position pos:line="19" pos:column="23"/></modifier></type><name pos:line="19" pos:column="23">first_slash<pos:position pos:line="19" pos:column="34"/></name></decl>;<pos:position pos:line="19" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">char<pos:position pos:line="20" pos:column="21"/></name> <modifier pos:line="20" pos:column="22">*<pos:position pos:line="20" pos:column="23"/></modifier></type><name pos:line="20" pos:column="23">remainder<pos:position pos:line="20" pos:column="32"/></name> <init pos:line="20" pos:column="33">= <expr><name pos:line="20" pos:column="35">NULL<pos:position pos:line="20" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="40"/></decl_stmt>

		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><name><name pos:line="22" pos:column="22">t<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">.<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">buffer<pos:position pos:line="22" pos:column="30"/></name></name></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31"> <block pos:line="22" pos:column="32">{
			<decl_stmt><decl><type><name pos:line="23" pos:column="25">void<pos:position pos:line="23" pos:column="29"/></name> <modifier pos:line="23" pos:column="30">*<pos:position pos:line="23" pos:column="31"/></modifier></type><name pos:line="23" pos:column="31">tree<pos:position pos:line="23" pos:column="35"/></name></decl>;<pos:position pos:line="23" pos:column="36"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="24" pos:column="25">unsigned<pos:position pos:line="24" pos:column="33"/></name> <name pos:line="24" pos:column="34">char<pos:position pos:line="24" pos:column="38"/></name></type> <name><name pos:line="24" pos:column="39">root<pos:position pos:line="24" pos:column="43"/></name><index pos:line="24" pos:column="43">[<expr><literal type="number" pos:line="24" pos:column="44">20<pos:position pos:line="24" pos:column="46"/></literal></expr>]<pos:position pos:line="24" pos:column="47"/></index></name></decl>;<pos:position pos:line="24" pos:column="48"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="25" pos:column="25">unsigned<pos:position pos:line="25" pos:column="33"/></name> <name pos:line="25" pos:column="34">long<pos:position pos:line="25" pos:column="38"/></name></type> <name pos:line="25" pos:column="39">size<pos:position pos:line="25" pos:column="43"/></name></decl>;<pos:position pos:line="25" pos:column="44"/></decl_stmt>
			<expr_stmt><expr><name pos:line="26" pos:column="25">tree<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">=<pos:position pos:line="26" pos:column="31"/></operator> <call><name pos:line="26" pos:column="32">read_object_with_reference<pos:position pos:line="26" pos:column="58"/></name><argument_list pos:line="26" pos:column="58">(<argument><expr><name pos:line="26" pos:column="59">current_tree_sha1<pos:position pos:line="26" pos:column="76"/></name></expr></argument>,
							  <argument><expr><name pos:line="27" pos:column="59">tree_type<pos:position pos:line="27" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="70">&amp;<pos:position pos:line="27" pos:column="75"/></operator><name pos:line="27" pos:column="71">size<pos:position pos:line="27" pos:column="75"/></name></expr></argument>,
							  <argument><expr><name pos:line="28" pos:column="59">root<pos:position pos:line="28" pos:column="63"/></name></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="65"/></expr_stmt>
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><operator pos:line="29" pos:column="29">!<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">tree<pos:position pos:line="29" pos:column="34"/></name></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35">
				<block type="pseudo"><goto pos:line="30" pos:column="33">goto <name pos:line="30" pos:column="38">done<pos:position pos:line="30" pos:column="42"/></name>;<pos:position pos:line="30" pos:column="43"/></goto></block></then></if>

			<expr_stmt><expr><call><name pos:line="32" pos:column="25">ALLOC_GROW<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">parents<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="45">parents_nr<pos:position pos:line="32" pos:column="55"/></name> <operator pos:line="32" pos:column="56">+<pos:position pos:line="32" pos:column="57"/></operator> <literal type="number" pos:line="32" pos:column="58">1<pos:position pos:line="32" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="61">parents_alloc<pos:position pos:line="32" pos:column="74"/></name></expr></argument>)<pos:position pos:line="32" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="33" pos:column="25">parents<pos:position pos:line="33" pos:column="32"/></name><index pos:line="33" pos:column="32">[<expr><name pos:line="33" pos:column="33">parents_nr<pos:position pos:line="33" pos:column="43"/></name></expr>]<pos:position pos:line="33" pos:column="44"/></index></name><operator pos:line="33" pos:column="44">.<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="45">tree<pos:position pos:line="33" pos:column="49"/></name> <operator pos:line="33" pos:column="50">=<pos:position pos:line="33" pos:column="51"/></operator> <name pos:line="33" pos:column="52">tree<pos:position pos:line="33" pos:column="56"/></name></expr>;<pos:position pos:line="33" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="34" pos:column="25">parents<pos:position pos:line="34" pos:column="32"/></name><index pos:line="34" pos:column="32">[<expr><name pos:line="34" pos:column="33">parents_nr<pos:position pos:line="34" pos:column="43"/></name></expr>]<pos:position pos:line="34" pos:column="44"/></index></name><operator pos:line="34" pos:column="44">.<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="45">size<pos:position pos:line="34" pos:column="49"/></name> <operator pos:line="34" pos:column="50">=<pos:position pos:line="34" pos:column="51"/></operator> <name pos:line="34" pos:column="52">size<pos:position pos:line="34" pos:column="56"/></name></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">hashcpy<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><name><name pos:line="35" pos:column="33">parents<pos:position pos:line="35" pos:column="40"/></name><index pos:line="35" pos:column="40">[<expr><name pos:line="35" pos:column="41">parents_nr<pos:position pos:line="35" pos:column="51"/></name></expr>]<pos:position pos:line="35" pos:column="52"/></index></name><operator pos:line="35" pos:column="52">.<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="53">sha1<pos:position pos:line="35" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="59">root<pos:position pos:line="35" pos:column="63"/></name></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><name pos:line="36" pos:column="25">parents_nr<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">++<pos:position pos:line="36" pos:column="37"/></operator></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>

			<if pos:line="38" pos:column="25">if <condition pos:line="38" pos:column="28">(<expr><name><name pos:line="38" pos:column="29">namebuf<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">.<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="37">buf<pos:position pos:line="38" pos:column="40"/></name><index pos:line="38" pos:column="40">[<expr><literal type="number" pos:line="38" pos:column="41">0<pos:position pos:line="38" pos:column="42"/></literal></expr>]<pos:position pos:line="38" pos:column="43"/></index></name> <operator pos:line="38" pos:column="44">==<pos:position pos:line="38" pos:column="46"/></operator> <literal type="char" pos:line="38" pos:column="47">'\0'<pos:position pos:line="38" pos:column="51"/></literal></expr>)<pos:position pos:line="38" pos:column="52"/></condition><then pos:line="38" pos:column="52"> <block pos:line="38" pos:column="53">{
				<expr_stmt><expr><call><name pos:line="39" pos:column="33">hashcpy<pos:position pos:line="39" pos:column="40"/></name><argument_list pos:line="39" pos:column="40">(<argument><expr><name pos:line="39" pos:column="41">result<pos:position pos:line="39" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="49">root<pos:position pos:line="39" pos:column="53"/></name></expr></argument>)<pos:position pos:line="39" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="55"/></expr_stmt>
				<expr_stmt><expr><name pos:line="40" pos:column="33">retval<pos:position pos:line="40" pos:column="39"/></name> <operator pos:line="40" pos:column="40">=<pos:position pos:line="40" pos:column="41"/></operator> <name pos:line="40" pos:column="42">FOUND<pos:position pos:line="40" pos:column="47"/></name></expr>;<pos:position pos:line="40" pos:column="48"/></expr_stmt>
				<goto pos:line="41" pos:column="33">goto <name pos:line="41" pos:column="38">done<pos:position pos:line="41" pos:column="42"/></name>;<pos:position pos:line="41" pos:column="43"/></goto>
			}<pos:position pos:line="42" pos:column="26"/></block></then></if>

			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><operator pos:line="44" pos:column="29">!<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="30">size<pos:position pos:line="44" pos:column="34"/></name></expr>)<pos:position pos:line="44" pos:column="35"/></condition><then pos:line="44" pos:column="35">
				<block type="pseudo"><goto pos:line="45" pos:column="33">goto <name pos:line="45" pos:column="38">done<pos:position pos:line="45" pos:column="42"/></name>;<pos:position pos:line="45" pos:column="43"/></goto></block></then></if>

			<comment type="block" pos:line="47" pos:column="25">/* descend */</comment>
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">init_tree_desc<pos:position pos:line="48" pos:column="39"/></name><argument_list pos:line="48" pos:column="39">(<argument><expr><operator pos:line="48" pos:column="40">&amp;<pos:position pos:line="48" pos:column="45"/></operator><name pos:line="48" pos:column="41">t<pos:position pos:line="48" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="44">tree<pos:position pos:line="48" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="50">size<pos:position pos:line="48" pos:column="54"/></name></expr></argument>)<pos:position pos:line="48" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="49" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="51" pos:column="17">/* Handle symlinks to e.g. a//b by removing leading slashes */</comment>
		<while pos:line="52" pos:column="17">while <condition pos:line="52" pos:column="23">(<expr><name><name pos:line="52" pos:column="24">namebuf<pos:position pos:line="52" pos:column="31"/></name><operator pos:line="52" pos:column="31">.<pos:position pos:line="52" pos:column="32"/></operator><name pos:line="52" pos:column="32">buf<pos:position pos:line="52" pos:column="35"/></name><index pos:line="52" pos:column="35">[<expr><literal type="number" pos:line="52" pos:column="36">0<pos:position pos:line="52" pos:column="37"/></literal></expr>]<pos:position pos:line="52" pos:column="38"/></index></name> <operator pos:line="52" pos:column="39">==<pos:position pos:line="52" pos:column="41"/></operator> <literal type="char" pos:line="52" pos:column="42">'/'<pos:position pos:line="52" pos:column="45"/></literal></expr>)<pos:position pos:line="52" pos:column="46"/></condition> <block pos:line="52" pos:column="47">{
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">strbuf_remove<pos:position pos:line="53" pos:column="38"/></name><argument_list pos:line="53" pos:column="38">(<argument><expr><operator pos:line="53" pos:column="39">&amp;<pos:position pos:line="53" pos:column="44"/></operator><name pos:line="53" pos:column="40">namebuf<pos:position pos:line="53" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="49">0<pos:position pos:line="53" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="52">1<pos:position pos:line="53" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="54" pos:column="18"/></block></while>

		<comment type="block" pos:line="56" pos:column="17">/* Split namebuf into a first component and a remainder */</comment>
		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><operator pos:line="57" pos:column="21">(<pos:position pos:line="57" pos:column="22"/></operator><name pos:line="57" pos:column="22">first_slash<pos:position pos:line="57" pos:column="33"/></name> <operator pos:line="57" pos:column="34">=<pos:position pos:line="57" pos:column="35"/></operator> <call><name pos:line="57" pos:column="36">strchr<pos:position pos:line="57" pos:column="42"/></name><argument_list pos:line="57" pos:column="42">(<argument><expr><name><name pos:line="57" pos:column="43">namebuf<pos:position pos:line="57" pos:column="50"/></name><operator pos:line="57" pos:column="50">.<pos:position pos:line="57" pos:column="51"/></operator><name pos:line="57" pos:column="51">buf<pos:position pos:line="57" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="57" pos:column="56">'/'<pos:position pos:line="57" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="60"/></argument_list></call><operator pos:line="57" pos:column="60">)<pos:position pos:line="57" pos:column="61"/></operator></expr>)<pos:position pos:line="57" pos:column="62"/></condition><then pos:line="57" pos:column="62"> <block pos:line="57" pos:column="63">{
			<expr_stmt><expr><operator pos:line="58" pos:column="25">*<pos:position pos:line="58" pos:column="26"/></operator><name pos:line="58" pos:column="26">first_slash<pos:position pos:line="58" pos:column="37"/></name> <operator pos:line="58" pos:column="38">=<pos:position pos:line="58" pos:column="39"/></operator> <literal type="number" pos:line="58" pos:column="40">0<pos:position pos:line="58" pos:column="41"/></literal></expr>;<pos:position pos:line="58" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="59" pos:column="25">remainder<pos:position pos:line="59" pos:column="34"/></name> <operator pos:line="59" pos:column="35">=<pos:position pos:line="59" pos:column="36"/></operator> <name pos:line="59" pos:column="37">first_slash<pos:position pos:line="59" pos:column="48"/></name> <operator pos:line="59" pos:column="49">+<pos:position pos:line="59" pos:column="50"/></operator> <literal type="number" pos:line="59" pos:column="51">1<pos:position pos:line="59" pos:column="52"/></literal></expr>;<pos:position pos:line="59" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="60" pos:column="18"/></block></then></if>

		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><operator pos:line="62" pos:column="21">!<pos:position pos:line="62" pos:column="22"/></operator><call><name pos:line="62" pos:column="22">strcmp<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><name><name pos:line="62" pos:column="29">namebuf<pos:position pos:line="62" pos:column="36"/></name><operator pos:line="62" pos:column="36">.<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="37">buf<pos:position pos:line="62" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="42">".."<pos:position pos:line="62" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="48"/></condition><then pos:line="62" pos:column="48"> <block pos:line="62" pos:column="49">{
			<decl_stmt><decl><type><name><name pos:line="63" pos:column="25">struct<pos:position pos:line="63" pos:column="31"/></name> <name pos:line="63" pos:column="32">dir_state<pos:position pos:line="63" pos:column="41"/></name></name> <modifier pos:line="63" pos:column="42">*<pos:position pos:line="63" pos:column="43"/></modifier></type><name pos:line="63" pos:column="43">parent<pos:position pos:line="63" pos:column="49"/></name></decl>;<pos:position pos:line="63" pos:column="50"/></decl_stmt>
			<comment type="block" pos:line="64" pos:column="25">/*
			 * We could end up with .. in the namebuf if it
			 * appears in a symlink.
			 */</comment>

			<if pos:line="69" pos:column="25">if <condition pos:line="69" pos:column="28">(<expr><name pos:line="69" pos:column="29">parents_nr<pos:position pos:line="69" pos:column="39"/></name> <operator pos:line="69" pos:column="40">==<pos:position pos:line="69" pos:column="42"/></operator> <literal type="number" pos:line="69" pos:column="43">1<pos:position pos:line="69" pos:column="44"/></literal></expr>)<pos:position pos:line="69" pos:column="45"/></condition><then pos:line="69" pos:column="45"> <block pos:line="69" pos:column="46">{
				<if pos:line="70" pos:column="33">if <condition pos:line="70" pos:column="36">(<expr><name pos:line="70" pos:column="37">remainder<pos:position pos:line="70" pos:column="46"/></name></expr>)<pos:position pos:line="70" pos:column="47"/></condition><then pos:line="70" pos:column="47">
					<block type="pseudo"><expr_stmt><expr><operator pos:line="71" pos:column="41">*<pos:position pos:line="71" pos:column="42"/></operator><name pos:line="71" pos:column="42">first_slash<pos:position pos:line="71" pos:column="53"/></name> <operator pos:line="71" pos:column="54">=<pos:position pos:line="71" pos:column="55"/></operator> <literal type="char" pos:line="71" pos:column="56">'/'<pos:position pos:line="71" pos:column="59"/></literal></expr>;<pos:position pos:line="71" pos:column="60"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="72" pos:column="33">strbuf_add<pos:position pos:line="72" pos:column="43"/></name><argument_list pos:line="72" pos:column="43">(<argument><expr><name pos:line="72" pos:column="44">result_path<pos:position pos:line="72" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="57">namebuf<pos:position pos:line="72" pos:column="64"/></name><operator pos:line="72" pos:column="64">.<pos:position pos:line="72" pos:column="65"/></operator><name pos:line="72" pos:column="65">buf<pos:position pos:line="72" pos:column="68"/></name></name></expr></argument>,
					   <argument><expr><name><name pos:line="73" pos:column="44">namebuf<pos:position pos:line="73" pos:column="51"/></name><operator pos:line="73" pos:column="51">.<pos:position pos:line="73" pos:column="52"/></operator><name pos:line="73" pos:column="52">len<pos:position pos:line="73" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="57"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="74" pos:column="33">*<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="34">mode<pos:position pos:line="74" pos:column="38"/></name> <operator pos:line="74" pos:column="39">=<pos:position pos:line="74" pos:column="40"/></operator> <literal type="number" pos:line="74" pos:column="41">0<pos:position pos:line="74" pos:column="42"/></literal></expr>;<pos:position pos:line="74" pos:column="43"/></expr_stmt>
				<expr_stmt><expr><name pos:line="75" pos:column="33">retval<pos:position pos:line="75" pos:column="39"/></name> <operator pos:line="75" pos:column="40">=<pos:position pos:line="75" pos:column="41"/></operator> <name pos:line="75" pos:column="42">FOUND<pos:position pos:line="75" pos:column="47"/></name></expr>;<pos:position pos:line="75" pos:column="48"/></expr_stmt>
				<goto pos:line="76" pos:column="33">goto <name pos:line="76" pos:column="38">done<pos:position pos:line="76" pos:column="42"/></name>;<pos:position pos:line="76" pos:column="43"/></goto>
			}<pos:position pos:line="77" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="78" pos:column="25">parent<pos:position pos:line="78" pos:column="31"/></name> <operator pos:line="78" pos:column="32">=<pos:position pos:line="78" pos:column="33"/></operator> <operator pos:line="78" pos:column="34">&amp;<pos:position pos:line="78" pos:column="39"/></operator><name><name pos:line="78" pos:column="35">parents<pos:position pos:line="78" pos:column="42"/></name><index pos:line="78" pos:column="42">[<expr><name pos:line="78" pos:column="43">parents_nr<pos:position pos:line="78" pos:column="53"/></name> <operator pos:line="78" pos:column="54">-<pos:position pos:line="78" pos:column="55"/></operator> <literal type="number" pos:line="78" pos:column="56">1<pos:position pos:line="78" pos:column="57"/></literal></expr>]<pos:position pos:line="78" pos:column="58"/></index></name></expr>;<pos:position pos:line="78" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="79" pos:column="25">free<pos:position pos:line="79" pos:column="29"/></name><argument_list pos:line="79" pos:column="29">(<argument><expr><name><name pos:line="79" pos:column="30">parent<pos:position pos:line="79" pos:column="36"/></name><operator pos:line="79" pos:column="36">-&gt;<pos:position pos:line="79" pos:column="41"/></operator><name pos:line="79" pos:column="38">tree<pos:position pos:line="79" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="80" pos:column="25">parents_nr<pos:position pos:line="80" pos:column="35"/></name><operator pos:line="80" pos:column="35">--<pos:position pos:line="80" pos:column="37"/></operator></expr>;<pos:position pos:line="80" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><name pos:line="81" pos:column="25">parent<pos:position pos:line="81" pos:column="31"/></name> <operator pos:line="81" pos:column="32">=<pos:position pos:line="81" pos:column="33"/></operator> <operator pos:line="81" pos:column="34">&amp;<pos:position pos:line="81" pos:column="39"/></operator><name><name pos:line="81" pos:column="35">parents<pos:position pos:line="81" pos:column="42"/></name><index pos:line="81" pos:column="42">[<expr><name pos:line="81" pos:column="43">parents_nr<pos:position pos:line="81" pos:column="53"/></name> <operator pos:line="81" pos:column="54">-<pos:position pos:line="81" pos:column="55"/></operator> <literal type="number" pos:line="81" pos:column="56">1<pos:position pos:line="81" pos:column="57"/></literal></expr>]<pos:position pos:line="81" pos:column="58"/></index></name></expr>;<pos:position pos:line="81" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="82" pos:column="25">init_tree_desc<pos:position pos:line="82" pos:column="39"/></name><argument_list pos:line="82" pos:column="39">(<argument><expr><operator pos:line="82" pos:column="40">&amp;<pos:position pos:line="82" pos:column="45"/></operator><name pos:line="82" pos:column="41">t<pos:position pos:line="82" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="44">parent<pos:position pos:line="82" pos:column="50"/></name><operator pos:line="82" pos:column="50">-&gt;<pos:position pos:line="82" pos:column="55"/></operator><name pos:line="82" pos:column="52">tree<pos:position pos:line="82" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="58">parent<pos:position pos:line="82" pos:column="64"/></name><operator pos:line="82" pos:column="64">-&gt;<pos:position pos:line="82" pos:column="69"/></operator><name pos:line="82" pos:column="66">size<pos:position pos:line="82" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="83" pos:column="25">strbuf_remove<pos:position pos:line="83" pos:column="38"/></name><argument_list pos:line="83" pos:column="38">(<argument><expr><operator pos:line="83" pos:column="39">&amp;<pos:position pos:line="83" pos:column="44"/></operator><name pos:line="83" pos:column="40">namebuf<pos:position pos:line="83" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="49">0<pos:position pos:line="83" pos:column="50"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="83" pos:column="52">remainder<pos:position pos:line="83" pos:column="61"/></name></expr> ?<pos:position pos:line="83" pos:column="63"/></condition><then pos:line="83" pos:column="63"> <expr><literal type="number" pos:line="83" pos:column="64">3<pos:position pos:line="83" pos:column="65"/></literal></expr> <pos:position pos:line="83" pos:column="66"/></then><else pos:line="83" pos:column="66">: <expr><literal type="number" pos:line="83" pos:column="68">2<pos:position pos:line="83" pos:column="69"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="83" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="71"/></expr_stmt>
			<continue pos:line="84" pos:column="25">continue;<pos:position pos:line="84" pos:column="34"/></continue>
		}<pos:position pos:line="85" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="87" pos:column="17">/* We could end up here via a symlink to dir/.. */</comment>
		<if pos:line="88" pos:column="17">if <condition pos:line="88" pos:column="20">(<expr><name><name pos:line="88" pos:column="21">namebuf<pos:position pos:line="88" pos:column="28"/></name><operator pos:line="88" pos:column="28">.<pos:position pos:line="88" pos:column="29"/></operator><name pos:line="88" pos:column="29">buf<pos:position pos:line="88" pos:column="32"/></name><index pos:line="88" pos:column="32">[<expr><literal type="number" pos:line="88" pos:column="33">0<pos:position pos:line="88" pos:column="34"/></literal></expr>]<pos:position pos:line="88" pos:column="35"/></index></name> <operator pos:line="88" pos:column="36">==<pos:position pos:line="88" pos:column="38"/></operator> <literal type="char" pos:line="88" pos:column="39">'\0'<pos:position pos:line="88" pos:column="43"/></literal></expr>)<pos:position pos:line="88" pos:column="44"/></condition><then pos:line="88" pos:column="44"> <block pos:line="88" pos:column="45">{
			<expr_stmt><expr><call><name pos:line="89" pos:column="25">hashcpy<pos:position pos:line="89" pos:column="32"/></name><argument_list pos:line="89" pos:column="32">(<argument><expr><name pos:line="89" pos:column="33">result<pos:position pos:line="89" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="41">parents<pos:position pos:line="89" pos:column="48"/></name><index pos:line="89" pos:column="48">[<expr><name pos:line="89" pos:column="49">parents_nr<pos:position pos:line="89" pos:column="59"/></name> <operator pos:line="89" pos:column="60">-<pos:position pos:line="89" pos:column="61"/></operator> <literal type="number" pos:line="89" pos:column="62">1<pos:position pos:line="89" pos:column="63"/></literal></expr>]<pos:position pos:line="89" pos:column="64"/></index></name><operator pos:line="89" pos:column="64">.<pos:position pos:line="89" pos:column="65"/></operator><name pos:line="89" pos:column="65">sha1<pos:position pos:line="89" pos:column="69"/></name></expr></argument>)<pos:position pos:line="89" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><name pos:line="90" pos:column="25">retval<pos:position pos:line="90" pos:column="31"/></name> <operator pos:line="90" pos:column="32">=<pos:position pos:line="90" pos:column="33"/></operator> <name pos:line="90" pos:column="34">FOUND<pos:position pos:line="90" pos:column="39"/></name></expr>;<pos:position pos:line="90" pos:column="40"/></expr_stmt>
			<goto pos:line="91" pos:column="25">goto <name pos:line="91" pos:column="30">done<pos:position pos:line="91" pos:column="34"/></name>;<pos:position pos:line="91" pos:column="35"/></goto>
		}<pos:position pos:line="92" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="94" pos:column="17">/* Look up the first (or only) path component in the tree. */</comment>
		<expr_stmt><expr><name pos:line="95" pos:column="17">find_result<pos:position pos:line="95" pos:column="28"/></name> <operator pos:line="95" pos:column="29">=<pos:position pos:line="95" pos:column="30"/></operator> <call><name pos:line="95" pos:column="31">find_tree_entry<pos:position pos:line="95" pos:column="46"/></name><argument_list pos:line="95" pos:column="46">(<argument><expr><operator pos:line="95" pos:column="47">&amp;<pos:position pos:line="95" pos:column="52"/></operator><name pos:line="95" pos:column="48">t<pos:position pos:line="95" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="51">namebuf<pos:position pos:line="95" pos:column="58"/></name><operator pos:line="95" pos:column="58">.<pos:position pos:line="95" pos:column="59"/></operator><name pos:line="95" pos:column="59">buf<pos:position pos:line="95" pos:column="62"/></name></name></expr></argument>,
					      <argument><expr><name pos:line="96" pos:column="47">current_tree_sha1<pos:position pos:line="96" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="66">mode<pos:position pos:line="96" pos:column="70"/></name></expr></argument>)<pos:position pos:line="96" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="72"/></expr_stmt>
		<if pos:line="97" pos:column="17">if <condition pos:line="97" pos:column="20">(<expr><name pos:line="97" pos:column="21">find_result<pos:position pos:line="97" pos:column="32"/></name></expr>)<pos:position pos:line="97" pos:column="33"/></condition><then pos:line="97" pos:column="33"> <block pos:line="97" pos:column="34">{
			<goto pos:line="98" pos:column="25">goto <name pos:line="98" pos:column="30">done<pos:position pos:line="98" pos:column="34"/></name>;<pos:position pos:line="98" pos:column="35"/></goto>
		}<pos:position pos:line="99" pos:column="18"/></block></then></if>

		<if pos:line="101" pos:column="17">if <condition pos:line="101" pos:column="20">(<expr><call><name pos:line="101" pos:column="21">S_ISDIR<pos:position pos:line="101" pos:column="28"/></name><argument_list pos:line="101" pos:column="28">(<argument><expr><operator pos:line="101" pos:column="29">*<pos:position pos:line="101" pos:column="30"/></operator><name pos:line="101" pos:column="30">mode<pos:position pos:line="101" pos:column="34"/></name></expr></argument>)<pos:position pos:line="101" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="36"/></condition><then pos:line="101" pos:column="36"> <block pos:line="101" pos:column="37">{
			<if pos:line="102" pos:column="25">if <condition pos:line="102" pos:column="28">(<expr><operator pos:line="102" pos:column="29">!<pos:position pos:line="102" pos:column="30"/></operator><name pos:line="102" pos:column="30">remainder<pos:position pos:line="102" pos:column="39"/></name></expr>)<pos:position pos:line="102" pos:column="40"/></condition><then pos:line="102" pos:column="40"> <block pos:line="102" pos:column="41">{
				<expr_stmt><expr><call><name pos:line="103" pos:column="33">hashcpy<pos:position pos:line="103" pos:column="40"/></name><argument_list pos:line="103" pos:column="40">(<argument><expr><name pos:line="103" pos:column="41">result<pos:position pos:line="103" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="49">current_tree_sha1<pos:position pos:line="103" pos:column="66"/></name></expr></argument>)<pos:position pos:line="103" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="68"/></expr_stmt>
				<expr_stmt><expr><name pos:line="104" pos:column="33">retval<pos:position pos:line="104" pos:column="39"/></name> <operator pos:line="104" pos:column="40">=<pos:position pos:line="104" pos:column="41"/></operator> <name pos:line="104" pos:column="42">FOUND<pos:position pos:line="104" pos:column="47"/></name></expr>;<pos:position pos:line="104" pos:column="48"/></expr_stmt>
				<goto pos:line="105" pos:column="33">goto <name pos:line="105" pos:column="38">done<pos:position pos:line="105" pos:column="42"/></name>;<pos:position pos:line="105" pos:column="43"/></goto>
			}<pos:position pos:line="106" pos:column="26"/></block></then></if>
			<comment type="block" pos:line="107" pos:column="25">/* Descend the tree */</comment>
			<expr_stmt><expr><name><name pos:line="108" pos:column="25">t<pos:position pos:line="108" pos:column="26"/></name><operator pos:line="108" pos:column="26">.<pos:position pos:line="108" pos:column="27"/></operator><name pos:line="108" pos:column="27">buffer<pos:position pos:line="108" pos:column="33"/></name></name> <operator pos:line="108" pos:column="34">=<pos:position pos:line="108" pos:column="35"/></operator> <name pos:line="108" pos:column="36">NULL<pos:position pos:line="108" pos:column="40"/></name></expr>;<pos:position pos:line="108" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="109" pos:column="25">strbuf_remove<pos:position pos:line="109" pos:column="38"/></name><argument_list pos:line="109" pos:column="38">(<argument><expr><operator pos:line="109" pos:column="39">&amp;<pos:position pos:line="109" pos:column="44"/></operator><name pos:line="109" pos:column="40">namebuf<pos:position pos:line="109" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="49">0<pos:position pos:line="109" pos:column="50"/></literal></expr></argument>,
				      <argument><expr><literal type="number" pos:line="110" pos:column="39">1<pos:position pos:line="110" pos:column="40"/></literal> <operator pos:line="110" pos:column="41">+<pos:position pos:line="110" pos:column="42"/></operator> <name pos:line="110" pos:column="43">first_slash<pos:position pos:line="110" pos:column="54"/></name> <operator pos:line="110" pos:column="55">-<pos:position pos:line="110" pos:column="56"/></operator> <name><name pos:line="110" pos:column="57">namebuf<pos:position pos:line="110" pos:column="64"/></name><operator pos:line="110" pos:column="64">.<pos:position pos:line="110" pos:column="65"/></operator><name pos:line="110" pos:column="65">buf<pos:position pos:line="110" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="70"/></expr_stmt>
		}<pos:position pos:line="111" pos:column="18"/></block></then> <elseif pos:line="111" pos:column="19">else <if pos:line="111" pos:column="24">if <condition pos:line="111" pos:column="27">(<expr><call><name pos:line="111" pos:column="28">S_ISREG<pos:position pos:line="111" pos:column="35"/></name><argument_list pos:line="111" pos:column="35">(<argument><expr><operator pos:line="111" pos:column="36">*<pos:position pos:line="111" pos:column="37"/></operator><name pos:line="111" pos:column="37">mode<pos:position pos:line="111" pos:column="41"/></name></expr></argument>)<pos:position pos:line="111" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="111" pos:column="43"/></condition><then pos:line="111" pos:column="43"> <block pos:line="111" pos:column="44">{
			<if pos:line="112" pos:column="25">if <condition pos:line="112" pos:column="28">(<expr><operator pos:line="112" pos:column="29">!<pos:position pos:line="112" pos:column="30"/></operator><name pos:line="112" pos:column="30">remainder<pos:position pos:line="112" pos:column="39"/></name></expr>)<pos:position pos:line="112" pos:column="40"/></condition><then pos:line="112" pos:column="40"> <block pos:line="112" pos:column="41">{
				<expr_stmt><expr><call><name pos:line="113" pos:column="33">hashcpy<pos:position pos:line="113" pos:column="40"/></name><argument_list pos:line="113" pos:column="40">(<argument><expr><name pos:line="113" pos:column="41">result<pos:position pos:line="113" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="49">current_tree_sha1<pos:position pos:line="113" pos:column="66"/></name></expr></argument>)<pos:position pos:line="113" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="68"/></expr_stmt>
				<expr_stmt><expr><name pos:line="114" pos:column="33">retval<pos:position pos:line="114" pos:column="39"/></name> <operator pos:line="114" pos:column="40">=<pos:position pos:line="114" pos:column="41"/></operator> <name pos:line="114" pos:column="42">FOUND<pos:position pos:line="114" pos:column="47"/></name></expr>;<pos:position pos:line="114" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="115" pos:column="26"/></block></then> <else pos:line="115" pos:column="27">else <block pos:line="115" pos:column="32">{
				<expr_stmt><expr><name pos:line="116" pos:column="33">retval<pos:position pos:line="116" pos:column="39"/></name> <operator pos:line="116" pos:column="40">=<pos:position pos:line="116" pos:column="41"/></operator> <name pos:line="116" pos:column="42">NOT_DIR<pos:position pos:line="116" pos:column="49"/></name></expr>;<pos:position pos:line="116" pos:column="50"/></expr_stmt>
			}<pos:position pos:line="117" pos:column="26"/></block></else></if>
			<goto pos:line="118" pos:column="25">goto <name pos:line="118" pos:column="30">done<pos:position pos:line="118" pos:column="34"/></name>;<pos:position pos:line="118" pos:column="35"/></goto>
		}<pos:position pos:line="119" pos:column="18"/></block></then></if></elseif> <elseif pos:line="119" pos:column="19">else <if pos:line="119" pos:column="24">if <condition pos:line="119" pos:column="27">(<expr><call><name pos:line="119" pos:column="28">S_ISLNK<pos:position pos:line="119" pos:column="35"/></name><argument_list pos:line="119" pos:column="35">(<argument><expr><operator pos:line="119" pos:column="36">*<pos:position pos:line="119" pos:column="37"/></operator><name pos:line="119" pos:column="37">mode<pos:position pos:line="119" pos:column="41"/></name></expr></argument>)<pos:position pos:line="119" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="119" pos:column="43"/></condition><then pos:line="119" pos:column="43"> <block pos:line="119" pos:column="44">{
			<comment type="block" pos:line="120" pos:column="25">/* Follow a symlink */</comment>
			<decl_stmt><decl><type><name pos:line="121" pos:column="25">unsigned<pos:position pos:line="121" pos:column="33"/></name> <name pos:line="121" pos:column="34">long<pos:position pos:line="121" pos:column="38"/></name></type> <name pos:line="121" pos:column="39">link_len<pos:position pos:line="121" pos:column="47"/></name></decl>;<pos:position pos:line="121" pos:column="48"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="122" pos:column="25">size_t<pos:position pos:line="122" pos:column="31"/></name></type> <name pos:line="122" pos:column="32">len<pos:position pos:line="122" pos:column="35"/></name></decl>;<pos:position pos:line="122" pos:column="36"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="123" pos:column="25">char<pos:position pos:line="123" pos:column="29"/></name> <modifier pos:line="123" pos:column="30">*<pos:position pos:line="123" pos:column="31"/></modifier></type><name pos:line="123" pos:column="31">contents<pos:position pos:line="123" pos:column="39"/></name></decl>, <modifier pos:line="123" pos:column="41">*<pos:position pos:line="123" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="123" pos:column="42">contents_start<pos:position pos:line="123" pos:column="56"/></name></decl>;<pos:position pos:line="123" pos:column="57"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="124" pos:column="25">struct<pos:position pos:line="124" pos:column="31"/></name> <name pos:line="124" pos:column="32">dir_state<pos:position pos:line="124" pos:column="41"/></name></name> <modifier pos:line="124" pos:column="42">*<pos:position pos:line="124" pos:column="43"/></modifier></type><name pos:line="124" pos:column="43">parent<pos:position pos:line="124" pos:column="49"/></name></decl>;<pos:position pos:line="124" pos:column="50"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="125" pos:column="25">enum<pos:position pos:line="125" pos:column="29"/></name> <name pos:line="125" pos:column="30">object_type<pos:position pos:line="125" pos:column="41"/></name></name></type> <name pos:line="125" pos:column="42">type<pos:position pos:line="125" pos:column="46"/></name></decl>;<pos:position pos:line="125" pos:column="47"/></decl_stmt>

			<if pos:line="127" pos:column="25">if <condition pos:line="127" pos:column="28">(<expr><name pos:line="127" pos:column="29">follows_remaining<pos:position pos:line="127" pos:column="46"/></name><operator pos:line="127" pos:column="46">--<pos:position pos:line="127" pos:column="48"/></operator> <operator pos:line="127" pos:column="49">==<pos:position pos:line="127" pos:column="51"/></operator> <literal type="number" pos:line="127" pos:column="52">0<pos:position pos:line="127" pos:column="53"/></literal></expr>)<pos:position pos:line="127" pos:column="54"/></condition><then pos:line="127" pos:column="54"> <block pos:line="127" pos:column="55">{
				<comment type="block" pos:line="128" pos:column="33">/* Too many symlinks followed */</comment>
				<expr_stmt><expr><name pos:line="129" pos:column="33">retval<pos:position pos:line="129" pos:column="39"/></name> <operator pos:line="129" pos:column="40">=<pos:position pos:line="129" pos:column="41"/></operator> <name pos:line="129" pos:column="42">SYMLINK_LOOP<pos:position pos:line="129" pos:column="54"/></name></expr>;<pos:position pos:line="129" pos:column="55"/></expr_stmt>
				<goto pos:line="130" pos:column="33">goto <name pos:line="130" pos:column="38">done<pos:position pos:line="130" pos:column="42"/></name>;<pos:position pos:line="130" pos:column="43"/></goto>
			}<pos:position pos:line="131" pos:column="26"/></block></then></if>

			<comment type="block" pos:line="133" pos:column="25">/*
			 * At this point, we have followed at a least
			 * one symlink, so on error we need to report this.
			 */</comment>
			<expr_stmt><expr><name pos:line="137" pos:column="25">retval<pos:position pos:line="137" pos:column="31"/></name> <operator pos:line="137" pos:column="32">=<pos:position pos:line="137" pos:column="33"/></operator> <name pos:line="137" pos:column="34">DANGLING_SYMLINK<pos:position pos:line="137" pos:column="50"/></name></expr>;<pos:position pos:line="137" pos:column="51"/></expr_stmt>

			<expr_stmt><expr><name pos:line="139" pos:column="25">contents<pos:position pos:line="139" pos:column="33"/></name> <operator pos:line="139" pos:column="34">=<pos:position pos:line="139" pos:column="35"/></operator> <call><name pos:line="139" pos:column="36">read_sha1_file<pos:position pos:line="139" pos:column="50"/></name><argument_list pos:line="139" pos:column="50">(<argument><expr><name pos:line="139" pos:column="51">current_tree_sha1<pos:position pos:line="139" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="139" pos:column="70">&amp;<pos:position pos:line="139" pos:column="75"/></operator><name pos:line="139" pos:column="71">type<pos:position pos:line="139" pos:column="75"/></name></expr></argument>,
						  <argument><expr><operator pos:line="140" pos:column="51">&amp;<pos:position pos:line="140" pos:column="56"/></operator><name pos:line="140" pos:column="52">link_len<pos:position pos:line="140" pos:column="60"/></name></expr></argument>)<pos:position pos:line="140" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="62"/></expr_stmt>

			<if pos:line="142" pos:column="25">if <condition pos:line="142" pos:column="28">(<expr><operator pos:line="142" pos:column="29">!<pos:position pos:line="142" pos:column="30"/></operator><name pos:line="142" pos:column="30">contents<pos:position pos:line="142" pos:column="38"/></name></expr>)<pos:position pos:line="142" pos:column="39"/></condition><then pos:line="142" pos:column="39">
				<block type="pseudo"><goto pos:line="143" pos:column="33">goto <name pos:line="143" pos:column="38">done<pos:position pos:line="143" pos:column="42"/></name>;<pos:position pos:line="143" pos:column="43"/></goto></block></then></if>

			<if pos:line="145" pos:column="25">if <condition pos:line="145" pos:column="28">(<expr><name><name pos:line="145" pos:column="29">contents<pos:position pos:line="145" pos:column="37"/></name><index pos:line="145" pos:column="37">[<expr><literal type="number" pos:line="145" pos:column="38">0<pos:position pos:line="145" pos:column="39"/></literal></expr>]<pos:position pos:line="145" pos:column="40"/></index></name> <operator pos:line="145" pos:column="41">==<pos:position pos:line="145" pos:column="43"/></operator> <literal type="char" pos:line="145" pos:column="44">'/'<pos:position pos:line="145" pos:column="47"/></literal></expr>)<pos:position pos:line="145" pos:column="48"/></condition><then pos:line="145" pos:column="48"> <block pos:line="145" pos:column="49">{
				<expr_stmt><expr><call><name pos:line="146" pos:column="33">strbuf_addstr<pos:position pos:line="146" pos:column="46"/></name><argument_list pos:line="146" pos:column="46">(<argument><expr><name pos:line="146" pos:column="47">result_path<pos:position pos:line="146" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="60">contents<pos:position pos:line="146" pos:column="68"/></name></expr></argument>)<pos:position pos:line="146" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="70"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="147" pos:column="33">free<pos:position pos:line="147" pos:column="37"/></name><argument_list pos:line="147" pos:column="37">(<argument><expr><name pos:line="147" pos:column="38">contents<pos:position pos:line="147" pos:column="46"/></name></expr></argument>)<pos:position pos:line="147" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="48"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="148" pos:column="33">*<pos:position pos:line="148" pos:column="34"/></operator><name pos:line="148" pos:column="34">mode<pos:position pos:line="148" pos:column="38"/></name> <operator pos:line="148" pos:column="39">=<pos:position pos:line="148" pos:column="40"/></operator> <literal type="number" pos:line="148" pos:column="41">0<pos:position pos:line="148" pos:column="42"/></literal></expr>;<pos:position pos:line="148" pos:column="43"/></expr_stmt>
				<expr_stmt><expr><name pos:line="149" pos:column="33">retval<pos:position pos:line="149" pos:column="39"/></name> <operator pos:line="149" pos:column="40">=<pos:position pos:line="149" pos:column="41"/></operator> <name pos:line="149" pos:column="42">FOUND<pos:position pos:line="149" pos:column="47"/></name></expr>;<pos:position pos:line="149" pos:column="48"/></expr_stmt>
				<goto pos:line="150" pos:column="33">goto <name pos:line="150" pos:column="38">done<pos:position pos:line="150" pos:column="42"/></name>;<pos:position pos:line="150" pos:column="43"/></goto>
			}<pos:position pos:line="151" pos:column="26"/></block></then></if>

			<if pos:line="153" pos:column="25">if <condition pos:line="153" pos:column="28">(<expr><name pos:line="153" pos:column="29">remainder<pos:position pos:line="153" pos:column="38"/></name></expr>)<pos:position pos:line="153" pos:column="39"/></condition><then pos:line="153" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><name pos:line="154" pos:column="33">len<pos:position pos:line="154" pos:column="36"/></name> <operator pos:line="154" pos:column="37">=<pos:position pos:line="154" pos:column="38"/></operator> <name pos:line="154" pos:column="39">first_slash<pos:position pos:line="154" pos:column="50"/></name> <operator pos:line="154" pos:column="51">-<pos:position pos:line="154" pos:column="52"/></operator> <name><name pos:line="154" pos:column="53">namebuf<pos:position pos:line="154" pos:column="60"/></name><operator pos:line="154" pos:column="60">.<pos:position pos:line="154" pos:column="61"/></operator><name pos:line="154" pos:column="61">buf<pos:position pos:line="154" pos:column="64"/></name></name></expr>;<pos:position pos:line="154" pos:column="65"/></expr_stmt></block></then>
			<else pos:line="155" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="156" pos:column="33">len<pos:position pos:line="156" pos:column="36"/></name> <operator pos:line="156" pos:column="37">=<pos:position pos:line="156" pos:column="38"/></operator> <name><name pos:line="156" pos:column="39">namebuf<pos:position pos:line="156" pos:column="46"/></name><operator pos:line="156" pos:column="46">.<pos:position pos:line="156" pos:column="47"/></operator><name pos:line="156" pos:column="47">len<pos:position pos:line="156" pos:column="50"/></name></name></expr>;<pos:position pos:line="156" pos:column="51"/></expr_stmt></block></else></if>

			<expr_stmt><expr><name pos:line="158" pos:column="25">contents_start<pos:position pos:line="158" pos:column="39"/></name> <operator pos:line="158" pos:column="40">=<pos:position pos:line="158" pos:column="41"/></operator> <name pos:line="158" pos:column="42">contents<pos:position pos:line="158" pos:column="50"/></name></expr>;<pos:position pos:line="158" pos:column="51"/></expr_stmt>

			<expr_stmt><expr><name pos:line="160" pos:column="25">parent<pos:position pos:line="160" pos:column="31"/></name> <operator pos:line="160" pos:column="32">=<pos:position pos:line="160" pos:column="33"/></operator> <operator pos:line="160" pos:column="34">&amp;<pos:position pos:line="160" pos:column="39"/></operator><name><name pos:line="160" pos:column="35">parents<pos:position pos:line="160" pos:column="42"/></name><index pos:line="160" pos:column="42">[<expr><name pos:line="160" pos:column="43">parents_nr<pos:position pos:line="160" pos:column="53"/></name> <operator pos:line="160" pos:column="54">-<pos:position pos:line="160" pos:column="55"/></operator> <literal type="number" pos:line="160" pos:column="56">1<pos:position pos:line="160" pos:column="57"/></literal></expr>]<pos:position pos:line="160" pos:column="58"/></index></name></expr>;<pos:position pos:line="160" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="161" pos:column="25">init_tree_desc<pos:position pos:line="161" pos:column="39"/></name><argument_list pos:line="161" pos:column="39">(<argument><expr><operator pos:line="161" pos:column="40">&amp;<pos:position pos:line="161" pos:column="45"/></operator><name pos:line="161" pos:column="41">t<pos:position pos:line="161" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="44">parent<pos:position pos:line="161" pos:column="50"/></name><operator pos:line="161" pos:column="50">-&gt;<pos:position pos:line="161" pos:column="55"/></operator><name pos:line="161" pos:column="52">tree<pos:position pos:line="161" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="58">parent<pos:position pos:line="161" pos:column="64"/></name><operator pos:line="161" pos:column="64">-&gt;<pos:position pos:line="161" pos:column="69"/></operator><name pos:line="161" pos:column="66">size<pos:position pos:line="161" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="161" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="162" pos:column="25">strbuf_splice<pos:position pos:line="162" pos:column="38"/></name><argument_list pos:line="162" pos:column="38">(<argument><expr><operator pos:line="162" pos:column="39">&amp;<pos:position pos:line="162" pos:column="44"/></operator><name pos:line="162" pos:column="40">namebuf<pos:position pos:line="162" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="162" pos:column="49">0<pos:position pos:line="162" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="162" pos:column="52">len<pos:position pos:line="162" pos:column="55"/></name></expr></argument>,
				      <argument><expr><name pos:line="163" pos:column="39">contents_start<pos:position pos:line="163" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="55">link_len<pos:position pos:line="163" pos:column="63"/></name></expr></argument>)<pos:position pos:line="163" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="65"/></expr_stmt>
			<if pos:line="164" pos:column="25">if <condition pos:line="164" pos:column="28">(<expr><name pos:line="164" pos:column="29">remainder<pos:position pos:line="164" pos:column="38"/></name></expr>)<pos:position pos:line="164" pos:column="39"/></condition><then pos:line="164" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="165" pos:column="33">namebuf<pos:position pos:line="165" pos:column="40"/></name><operator pos:line="165" pos:column="40">.<pos:position pos:line="165" pos:column="41"/></operator><name pos:line="165" pos:column="41">buf<pos:position pos:line="165" pos:column="44"/></name><index pos:line="165" pos:column="44">[<expr><name pos:line="165" pos:column="45">link_len<pos:position pos:line="165" pos:column="53"/></name></expr>]<pos:position pos:line="165" pos:column="54"/></index></name> <operator pos:line="165" pos:column="55">=<pos:position pos:line="165" pos:column="56"/></operator> <literal type="char" pos:line="165" pos:column="57">'/'<pos:position pos:line="165" pos:column="60"/></literal></expr>;<pos:position pos:line="165" pos:column="61"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="166" pos:column="25">free<pos:position pos:line="166" pos:column="29"/></name><argument_list pos:line="166" pos:column="29">(<argument><expr><name pos:line="166" pos:column="30">contents<pos:position pos:line="166" pos:column="38"/></name></expr></argument>)<pos:position pos:line="166" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="167" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="168" pos:column="10"/></block></while>
<label><name pos:line="169" pos:column="1">done<pos:position pos:line="169" pos:column="5"/></name>:<pos:position pos:line="169" pos:column="6"/></label>
	<for pos:line="170" pos:column="9">for <control pos:line="170" pos:column="13">(<init><expr><name pos:line="170" pos:column="14">i<pos:position pos:line="170" pos:column="15"/></name> <operator pos:line="170" pos:column="16">=<pos:position pos:line="170" pos:column="17"/></operator> <literal type="number" pos:line="170" pos:column="18">0<pos:position pos:line="170" pos:column="19"/></literal></expr>;<pos:position pos:line="170" pos:column="20"/></init> <condition><expr><name pos:line="170" pos:column="21">i<pos:position pos:line="170" pos:column="22"/></name> <operator pos:line="170" pos:column="23">&lt;<pos:position pos:line="170" pos:column="27"/></operator> <name pos:line="170" pos:column="25">parents_nr<pos:position pos:line="170" pos:column="35"/></name></expr>;<pos:position pos:line="170" pos:column="36"/></condition> <incr><expr><name pos:line="170" pos:column="37">i<pos:position pos:line="170" pos:column="38"/></name><operator pos:line="170" pos:column="38">++<pos:position pos:line="170" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="170" pos:column="41"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="171" pos:column="17">free<pos:position pos:line="171" pos:column="21"/></name><argument_list pos:line="171" pos:column="21">(<argument><expr><name><name pos:line="171" pos:column="22">parents<pos:position pos:line="171" pos:column="29"/></name><index pos:line="171" pos:column="29">[<expr><name pos:line="171" pos:column="30">i<pos:position pos:line="171" pos:column="31"/></name></expr>]<pos:position pos:line="171" pos:column="32"/></index></name><operator pos:line="171" pos:column="32">.<pos:position pos:line="171" pos:column="33"/></operator><name pos:line="171" pos:column="33">tree<pos:position pos:line="171" pos:column="37"/></name></expr></argument>)<pos:position pos:line="171" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="39"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="172" pos:column="9">free<pos:position pos:line="172" pos:column="13"/></name><argument_list pos:line="172" pos:column="13">(<argument><expr><name pos:line="172" pos:column="14">parents<pos:position pos:line="172" pos:column="21"/></name></expr></argument>)<pos:position pos:line="172" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="174" pos:column="9">strbuf_release<pos:position pos:line="174" pos:column="23"/></name><argument_list pos:line="174" pos:column="23">(<argument><expr><operator pos:line="174" pos:column="24">&amp;<pos:position pos:line="174" pos:column="29"/></operator><name pos:line="174" pos:column="25">namebuf<pos:position pos:line="174" pos:column="32"/></name></expr></argument>)<pos:position pos:line="174" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="34"/></expr_stmt>
	<return pos:line="175" pos:column="9">return <expr><name pos:line="175" pos:column="16">retval<pos:position pos:line="175" pos:column="22"/></name></expr>;<pos:position pos:line="175" pos:column="23"/></return>
}<pos:position pos:line="176" pos:column="2"/></block></function></unit>

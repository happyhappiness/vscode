<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3157_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">count_ident<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">cp<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">unsigned<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">long<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">size<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/*
	 * "$Id: 0000000000000000000000000000000000000000 $" &lt;=&gt; "$Id$"
	 */</comment>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">cnt<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">ch<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

	<while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><name pos:line="9" pos:column="16">size<pos:position pos:line="9" pos:column="20"/></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition> <block pos:line="9" pos:column="22">{
		<expr_stmt><expr><name pos:line="10" pos:column="17">ch<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <operator pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">cp<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">++<pos:position pos:line="10" pos:column="27"/></operator></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="11" pos:column="17">size<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">--<pos:position pos:line="11" pos:column="23"/></operator></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">ch<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">!=<pos:position pos:line="12" pos:column="26"/></operator> <literal type="char" pos:line="12" pos:column="27">'$'<pos:position pos:line="12" pos:column="30"/></literal></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31">
			<block type="pseudo"><continue pos:line="13" pos:column="25">continue;<pos:position pos:line="13" pos:column="34"/></continue></block></then></if>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">size<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">&lt;<pos:position pos:line="14" pos:column="30"/></operator> <literal type="number" pos:line="14" pos:column="28">3<pos:position pos:line="14" pos:column="29"/></literal></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30">
			<block type="pseudo"><break pos:line="15" pos:column="25">break;<pos:position pos:line="15" pos:column="31"/></break></block></then></if>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><call><name pos:line="16" pos:column="21">memcmp<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><literal type="string" pos:line="16" pos:column="28">"Id"<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="34">cp<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="38">2<pos:position pos:line="16" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="41"/></condition><then pos:line="16" pos:column="41">
			<block type="pseudo"><continue pos:line="17" pos:column="25">continue;<pos:position pos:line="17" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="18" pos:column="17">ch<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <name><name pos:line="18" pos:column="22">cp<pos:position pos:line="18" pos:column="24"/></name><index pos:line="18" pos:column="24">[<expr><literal type="number" pos:line="18" pos:column="25">2<pos:position pos:line="18" pos:column="26"/></literal></expr>]<pos:position pos:line="18" pos:column="27"/></index></name></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">cp<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">+=<pos:position pos:line="19" pos:column="22"/></operator> <literal type="number" pos:line="19" pos:column="23">3<pos:position pos:line="19" pos:column="24"/></literal></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">size<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">-=<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="25">3<pos:position pos:line="20" pos:column="26"/></literal></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">ch<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">==<pos:position pos:line="21" pos:column="26"/></operator> <literal type="char" pos:line="21" pos:column="27">'$'<pos:position pos:line="21" pos:column="30"/></literal></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="25">cnt<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">++<pos:position pos:line="22" pos:column="30"/></operator></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt></block></then></if> <comment type="block" pos:line="22" pos:column="32">/* $Id$ */</comment>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">ch<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">!=<pos:position pos:line="23" pos:column="26"/></operator> <literal type="char" pos:line="23" pos:column="27">':'<pos:position pos:line="23" pos:column="30"/></literal></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31">
			<block type="pseudo"><continue pos:line="24" pos:column="25">continue;<pos:position pos:line="24" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="26" pos:column="17">/*
		 * "$Id: ... "; scan up to the closing dollar sign and discard.
		 */</comment>
		<while pos:line="29" pos:column="17">while <condition pos:line="29" pos:column="23">(<expr><name pos:line="29" pos:column="24">size<pos:position pos:line="29" pos:column="28"/></name></expr>)<pos:position pos:line="29" pos:column="29"/></condition> <block pos:line="29" pos:column="30">{
			<expr_stmt><expr><name pos:line="30" pos:column="25">ch<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">=<pos:position pos:line="30" pos:column="29"/></operator> <operator pos:line="30" pos:column="30">*<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="31">cp<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">++<pos:position pos:line="30" pos:column="35"/></operator></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="31" pos:column="25">size<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">--<pos:position pos:line="31" pos:column="31"/></operator></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
			<if pos:line="32" pos:column="25">if <condition pos:line="32" pos:column="28">(<expr><name pos:line="32" pos:column="29">ch<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">==<pos:position pos:line="32" pos:column="34"/></operator> <literal type="char" pos:line="32" pos:column="35">'$'<pos:position pos:line="32" pos:column="38"/></literal></expr>)<pos:position pos:line="32" pos:column="39"/></condition><then pos:line="32" pos:column="39"> <block pos:line="32" pos:column="40">{
				<expr_stmt><expr><name pos:line="33" pos:column="33">cnt<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">++<pos:position pos:line="33" pos:column="38"/></operator></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
				<break pos:line="34" pos:column="33">break;<pos:position pos:line="34" pos:column="39"/></break>
			}<pos:position pos:line="35" pos:column="26"/></block></then></if>
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><name pos:line="36" pos:column="29">ch<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">==<pos:position pos:line="36" pos:column="34"/></operator> <literal type="char" pos:line="36" pos:column="35">'\n'<pos:position pos:line="36" pos:column="39"/></literal></expr>)<pos:position pos:line="36" pos:column="40"/></condition><then pos:line="36" pos:column="40">
				<block type="pseudo"><break pos:line="37" pos:column="33">break;<pos:position pos:line="37" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="38" pos:column="18"/></block></while>
	}<pos:position pos:line="39" pos:column="10"/></block></while>
	<return pos:line="40" pos:column="9">return <expr><name pos:line="40" pos:column="16">cnt<pos:position pos:line="40" pos:column="19"/></name></expr>;<pos:position pos:line="40" pos:column="20"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3410_git-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_line<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">grep_opt<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">opt<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">bol<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">eol<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">name<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">unsigned<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">lno<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">sign<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">rest<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><name pos:line="4" pos:column="20">eol<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">-<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="26">bol<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">match_color<pos:position pos:line="5" pos:column="32"/></name></decl>, <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="35">line_color<pos:position pos:line="5" pos:column="45"/></name> <init pos:line="5" pos:column="46">= <expr><name pos:line="5" pos:column="48">NULL<pos:position pos:line="5" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">opt<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">file_break<pos:position pos:line="7" pos:column="28"/></name></name> <operator pos:line="7" pos:column="29">&amp;&amp;<pos:position pos:line="7" pos:column="39"/></operator> <name><name pos:line="7" pos:column="32">opt<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">last_shown<pos:position pos:line="7" pos:column="47"/></name></name> <operator pos:line="7" pos:column="48">==<pos:position pos:line="7" pos:column="50"/></operator> <literal type="number" pos:line="7" pos:column="51">0<pos:position pos:line="7" pos:column="52"/></literal></expr>)<pos:position pos:line="7" pos:column="53"/></condition><then pos:line="7" pos:column="53"> <block pos:line="7" pos:column="54">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name><name pos:line="8" pos:column="21">opt<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">-&gt;<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="26">show_hunk_mark<pos:position pos:line="8" pos:column="40"/></name></name></expr>)<pos:position pos:line="8" pos:column="41"/></condition><then pos:line="8" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name><name pos:line="9" pos:column="25">opt<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">output<pos:position pos:line="9" pos:column="36"/></name></name><argument_list pos:line="9" pos:column="36">(<argument><expr><name pos:line="9" pos:column="37">opt<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="42">"\n"<pos:position pos:line="9" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="48">1<pos:position pos:line="9" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="51"/></expr_stmt></block></then></if>
	}<pos:position pos:line="10" pos:column="10"/></block></then> <elseif pos:line="10" pos:column="11">else <if pos:line="10" pos:column="16">if <condition pos:line="10" pos:column="19">(<expr><name><name pos:line="10" pos:column="20">opt<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">pre_context<pos:position pos:line="10" pos:column="36"/></name></name> <operator pos:line="10" pos:column="37">||<pos:position pos:line="10" pos:column="39"/></operator> <name><name pos:line="10" pos:column="40">opt<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">post_context<pos:position pos:line="10" pos:column="57"/></name></name> <operator pos:line="10" pos:column="58">||<pos:position pos:line="10" pos:column="60"/></operator> <name><name pos:line="10" pos:column="61">opt<pos:position pos:line="10" pos:column="64"/></name><operator pos:line="10" pos:column="64">-&gt;<pos:position pos:line="10" pos:column="69"/></operator><name pos:line="10" pos:column="66">funcbody<pos:position pos:line="10" pos:column="74"/></name></name></expr>)<pos:position pos:line="10" pos:column="75"/></condition><then pos:line="10" pos:column="75"> <block pos:line="10" pos:column="76">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name><name pos:line="11" pos:column="21">opt<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">-&gt;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="26">last_shown<pos:position pos:line="11" pos:column="36"/></name></name> <operator pos:line="11" pos:column="37">==<pos:position pos:line="11" pos:column="39"/></operator> <literal type="number" pos:line="11" pos:column="40">0<pos:position pos:line="11" pos:column="41"/></literal></expr>)<pos:position pos:line="11" pos:column="42"/></condition><then pos:line="11" pos:column="42"> <block pos:line="11" pos:column="43">{
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><name><name pos:line="12" pos:column="29">opt<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">show_hunk_mark<pos:position pos:line="12" pos:column="48"/></name></name></expr>)<pos:position pos:line="12" pos:column="49"/></condition><then pos:line="12" pos:column="49"> <block pos:line="12" pos:column="50">{
				<expr_stmt><expr><call><name pos:line="13" pos:column="33">output_color<pos:position pos:line="13" pos:column="45"/></name><argument_list pos:line="13" pos:column="45">(<argument><expr><name pos:line="13" pos:column="46">opt<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="51">"--"<pos:position pos:line="13" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="57">2<pos:position pos:line="13" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="60">opt<pos:position pos:line="13" pos:column="63"/></name><operator pos:line="13" pos:column="63">-&gt;<pos:position pos:line="13" pos:column="68"/></operator><name pos:line="13" pos:column="65">color_sep<pos:position pos:line="13" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="76"/></expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="14" pos:column="33">opt<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">-&gt;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="38">output<pos:position pos:line="14" pos:column="44"/></name></name><argument_list pos:line="14" pos:column="44">(<argument><expr><name pos:line="14" pos:column="45">opt<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="50">"\n"<pos:position pos:line="14" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="56">1<pos:position pos:line="14" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="15" pos:column="26"/></block></then></if>
		}<pos:position pos:line="16" pos:column="18"/></block></then> <elseif pos:line="16" pos:column="19">else <if pos:line="16" pos:column="24">if <condition pos:line="16" pos:column="27">(<expr><name pos:line="16" pos:column="28">lno<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">&gt;<pos:position pos:line="16" pos:column="36"/></operator> <name><name pos:line="16" pos:column="34">opt<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">last_shown<pos:position pos:line="16" pos:column="49"/></name></name> <operator pos:line="16" pos:column="50">+<pos:position pos:line="16" pos:column="51"/></operator> <literal type="number" pos:line="16" pos:column="52">1<pos:position pos:line="16" pos:column="53"/></literal></expr>)<pos:position pos:line="16" pos:column="54"/></condition><then pos:line="16" pos:column="54"> <block pos:line="16" pos:column="55">{
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">output_color<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">opt<pos:position pos:line="17" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="43">"--"<pos:position pos:line="17" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="49">2<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="52">opt<pos:position pos:line="17" pos:column="55"/></name><operator pos:line="17" pos:column="55">-&gt;<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="57">color_sep<pos:position pos:line="17" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="18" pos:column="25">opt<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">-&gt;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="30">output<pos:position pos:line="18" pos:column="36"/></name></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">opt<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="42">"\n"<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="48">1<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if></elseif></if>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">opt<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">heading<pos:position pos:line="21" pos:column="25"/></name></name> <operator pos:line="21" pos:column="26">&amp;&amp;<pos:position pos:line="21" pos:column="36"/></operator> <name><name pos:line="21" pos:column="29">opt<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">-&gt;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="34">last_shown<pos:position pos:line="21" pos:column="44"/></name></name> <operator pos:line="21" pos:column="45">==<pos:position pos:line="21" pos:column="47"/></operator> <literal type="number" pos:line="21" pos:column="48">0<pos:position pos:line="21" pos:column="49"/></literal></expr>)<pos:position pos:line="21" pos:column="50"/></condition><then pos:line="21" pos:column="50"> <block pos:line="21" pos:column="51">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">output_color<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">opt<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="35">name<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="41">strlen<pos:position pos:line="22" pos:column="47"/></name><argument_list pos:line="22" pos:column="47">(<argument><expr><name pos:line="22" pos:column="48">name<pos:position pos:line="22" pos:column="52"/></name></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="55">opt<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">-&gt;<pos:position pos:line="22" pos:column="63"/></operator><name pos:line="22" pos:column="60">color_filename<pos:position pos:line="22" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="76"/></expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="23" pos:column="17">opt<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">output<pos:position pos:line="23" pos:column="28"/></name></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">opt<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="34">"\n"<pos:position pos:line="23" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="40">1<pos:position pos:line="23" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">opt<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">last_shown<pos:position pos:line="25" pos:column="24"/></name></name> <operator pos:line="25" pos:column="25">=<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">lno<pos:position pos:line="25" pos:column="30"/></name></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><name><name pos:line="27" pos:column="14">opt<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">heading<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">&amp;&amp;<pos:position pos:line="27" pos:column="37"/></operator> <name><name pos:line="27" pos:column="30">opt<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">-&gt;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="35">pathname<pos:position pos:line="27" pos:column="43"/></name></name></expr>)<pos:position pos:line="27" pos:column="44"/></condition><then pos:line="27" pos:column="44"> <block pos:line="27" pos:column="45">{
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">output_color<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">opt<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="35">name<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="41">strlen<pos:position pos:line="28" pos:column="47"/></name><argument_list pos:line="28" pos:column="47">(<argument><expr><name pos:line="28" pos:column="48">name<pos:position pos:line="28" pos:column="52"/></name></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="55">opt<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">-&gt;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="60">color_filename<pos:position pos:line="28" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="76"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">output_sep<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">opt<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">sign<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">opt<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">linenum<pos:position pos:line="31" pos:column="25"/></name></name></expr>)<pos:position pos:line="31" pos:column="26"/></condition><then pos:line="31" pos:column="26"> <block pos:line="31" pos:column="27">{
		<decl_stmt><decl><type><name pos:line="32" pos:column="17">char<pos:position pos:line="32" pos:column="21"/></name></type> <name><name pos:line="32" pos:column="22">buf<pos:position pos:line="32" pos:column="25"/></name><index pos:line="32" pos:column="25">[<expr><literal type="number" pos:line="32" pos:column="26">32<pos:position pos:line="32" pos:column="28"/></literal></expr>]<pos:position pos:line="32" pos:column="29"/></index></name></decl>;<pos:position pos:line="32" pos:column="30"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">snprintf<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">buf<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="31">sizeof<argument_list pos:line="33" pos:column="37">(<argument><expr><name pos:line="33" pos:column="38">buf<pos:position pos:line="33" pos:column="41"/></name></expr></argument>)<pos:position pos:line="33" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="44">"%d"<pos:position pos:line="33" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="50">lno<pos:position pos:line="33" pos:column="53"/></name></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">output_color<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">opt<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="35">buf<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="40">strlen<pos:position pos:line="34" pos:column="46"/></name><argument_list pos:line="34" pos:column="46">(<argument><expr><name pos:line="34" pos:column="47">buf<pos:position pos:line="34" pos:column="50"/></name></expr></argument>)<pos:position pos:line="34" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="53">opt<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">-&gt;<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="58">color_lineno<pos:position pos:line="34" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">output_sep<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">opt<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="33">sign<pos:position pos:line="35" pos:column="37"/></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name><name pos:line="37" pos:column="13">opt<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">color<pos:position pos:line="37" pos:column="23"/></name></name></expr>)<pos:position pos:line="37" pos:column="24"/></condition><then pos:line="37" pos:column="24"> <block pos:line="37" pos:column="25">{
		<decl_stmt><decl><type><name pos:line="38" pos:column="17">regmatch_t<pos:position pos:line="38" pos:column="27"/></name></type> <name pos:line="38" pos:column="28">match<pos:position pos:line="38" pos:column="33"/></name></decl>;<pos:position pos:line="38" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="39" pos:column="17">enum<pos:position pos:line="39" pos:column="21"/></name> <name pos:line="39" pos:column="22">grep_context<pos:position pos:line="39" pos:column="34"/></name></name></type> <name pos:line="39" pos:column="35">ctx<pos:position pos:line="39" pos:column="38"/></name> <init pos:line="39" pos:column="39">= <expr><name pos:line="39" pos:column="41">GREP_CONTEXT_BODY<pos:position pos:line="39" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="39" pos:column="59"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="40" pos:column="17">int<pos:position pos:line="40" pos:column="20"/></name></type> <name pos:line="40" pos:column="21">ch<pos:position pos:line="40" pos:column="23"/></name> <init pos:line="40" pos:column="24">= <expr><operator pos:line="40" pos:column="26">*<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="27">eol<pos:position pos:line="40" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="40" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="41" pos:column="17">int<pos:position pos:line="41" pos:column="20"/></name></type> <name pos:line="41" pos:column="21">eflags<pos:position pos:line="41" pos:column="27"/></name> <init pos:line="41" pos:column="28">= <expr><literal type="number" pos:line="41" pos:column="30">0<pos:position pos:line="41" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="41" pos:column="32"/></decl_stmt>

		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">sign<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">==<pos:position pos:line="43" pos:column="28"/></operator> <literal type="char" pos:line="43" pos:column="29">':'<pos:position pos:line="43" pos:column="32"/></literal></expr>)<pos:position pos:line="43" pos:column="33"/></condition><then pos:line="43" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="25">match_color<pos:position pos:line="44" pos:column="36"/></name> <operator pos:line="44" pos:column="37">=<pos:position pos:line="44" pos:column="38"/></operator> <name><name pos:line="44" pos:column="39">opt<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">-&gt;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="44">color_match_selected<pos:position pos:line="44" pos:column="64"/></name></name></expr>;<pos:position pos:line="44" pos:column="65"/></expr_stmt></block></then>
		<else pos:line="45" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="25">match_color<pos:position pos:line="46" pos:column="36"/></name> <operator pos:line="46" pos:column="37">=<pos:position pos:line="46" pos:column="38"/></operator> <name><name pos:line="46" pos:column="39">opt<pos:position pos:line="46" pos:column="42"/></name><operator pos:line="46" pos:column="42">-&gt;<pos:position pos:line="46" pos:column="47"/></operator><name pos:line="46" pos:column="44">color_match_context<pos:position pos:line="46" pos:column="63"/></name></name></expr>;<pos:position pos:line="46" pos:column="64"/></expr_stmt></block></else></if>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name pos:line="47" pos:column="21">sign<pos:position pos:line="47" pos:column="25"/></name> <operator pos:line="47" pos:column="26">==<pos:position pos:line="47" pos:column="28"/></operator> <literal type="char" pos:line="47" pos:column="29">':'<pos:position pos:line="47" pos:column="32"/></literal></expr>)<pos:position pos:line="47" pos:column="33"/></condition><then pos:line="47" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="25">line_color<pos:position pos:line="48" pos:column="35"/></name> <operator pos:line="48" pos:column="36">=<pos:position pos:line="48" pos:column="37"/></operator> <name><name pos:line="48" pos:column="38">opt<pos:position pos:line="48" pos:column="41"/></name><operator pos:line="48" pos:column="41">-&gt;<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="43">color_selected<pos:position pos:line="48" pos:column="57"/></name></name></expr>;<pos:position pos:line="48" pos:column="58"/></expr_stmt></block></then>
		<elseif pos:line="49" pos:column="17">else <if pos:line="49" pos:column="22">if <condition pos:line="49" pos:column="25">(<expr><name pos:line="49" pos:column="26">sign<pos:position pos:line="49" pos:column="30"/></name> <operator pos:line="49" pos:column="31">==<pos:position pos:line="49" pos:column="33"/></operator> <literal type="char" pos:line="49" pos:column="34">'-'<pos:position pos:line="49" pos:column="37"/></literal></expr>)<pos:position pos:line="49" pos:column="38"/></condition><then pos:line="49" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="25">line_color<pos:position pos:line="50" pos:column="35"/></name> <operator pos:line="50" pos:column="36">=<pos:position pos:line="50" pos:column="37"/></operator> <name><name pos:line="50" pos:column="38">opt<pos:position pos:line="50" pos:column="41"/></name><operator pos:line="50" pos:column="41">-&gt;<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="43">color_context<pos:position pos:line="50" pos:column="56"/></name></name></expr>;<pos:position pos:line="50" pos:column="57"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="51" pos:column="17">else <if pos:line="51" pos:column="22">if <condition pos:line="51" pos:column="25">(<expr><name pos:line="51" pos:column="26">sign<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">==<pos:position pos:line="51" pos:column="33"/></operator> <literal type="char" pos:line="51" pos:column="34">'='<pos:position pos:line="51" pos:column="37"/></literal></expr>)<pos:position pos:line="51" pos:column="38"/></condition><then pos:line="51" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="25">line_color<pos:position pos:line="52" pos:column="35"/></name> <operator pos:line="52" pos:column="36">=<pos:position pos:line="52" pos:column="37"/></operator> <name><name pos:line="52" pos:column="38">opt<pos:position pos:line="52" pos:column="41"/></name><operator pos:line="52" pos:column="41">-&gt;<pos:position pos:line="52" pos:column="46"/></operator><name pos:line="52" pos:column="43">color_function<pos:position pos:line="52" pos:column="57"/></name></name></expr>;<pos:position pos:line="52" pos:column="58"/></expr_stmt></block></then></if></elseif></if>
		<expr_stmt><expr><operator pos:line="53" pos:column="17">*<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="18">eol<pos:position pos:line="53" pos:column="21"/></name> <operator pos:line="53" pos:column="22">=<pos:position pos:line="53" pos:column="23"/></operator> <literal type="char" pos:line="53" pos:column="24">'\0'<pos:position pos:line="53" pos:column="28"/></literal></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt>
		<while pos:line="54" pos:column="17">while <condition pos:line="54" pos:column="23">(<expr><call><name pos:line="54" pos:column="24">next_match<pos:position pos:line="54" pos:column="34"/></name><argument_list pos:line="54" pos:column="34">(<argument><expr><name pos:line="54" pos:column="35">opt<pos:position pos:line="54" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="40">bol<pos:position pos:line="54" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="45">eol<pos:position pos:line="54" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="50">ctx<pos:position pos:line="54" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="55">&amp;<pos:position pos:line="54" pos:column="60"/></operator><name pos:line="54" pos:column="56">match<pos:position pos:line="54" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="63">eflags<pos:position pos:line="54" pos:column="69"/></name></expr></argument>)<pos:position pos:line="54" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="71"/></condition> <block pos:line="54" pos:column="72">{
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><name><name pos:line="55" pos:column="29">match<pos:position pos:line="55" pos:column="34"/></name><operator pos:line="55" pos:column="34">.<pos:position pos:line="55" pos:column="35"/></operator><name pos:line="55" pos:column="35">rm_so<pos:position pos:line="55" pos:column="40"/></name></name> <operator pos:line="55" pos:column="41">==<pos:position pos:line="55" pos:column="43"/></operator> <name><name pos:line="55" pos:column="44">match<pos:position pos:line="55" pos:column="49"/></name><operator pos:line="55" pos:column="49">.<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="50">rm_eo<pos:position pos:line="55" pos:column="55"/></name></name></expr>)<pos:position pos:line="55" pos:column="56"/></condition><then pos:line="55" pos:column="56">
				<block type="pseudo"><break pos:line="56" pos:column="33">break;<pos:position pos:line="56" pos:column="39"/></break></block></then></if>

			<expr_stmt><expr><call><name pos:line="58" pos:column="25">output_color<pos:position pos:line="58" pos:column="37"/></name><argument_list pos:line="58" pos:column="37">(<argument><expr><name pos:line="58" pos:column="38">opt<pos:position pos:line="58" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="43">bol<pos:position pos:line="58" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="48">match<pos:position pos:line="58" pos:column="53"/></name><operator pos:line="58" pos:column="53">.<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="54">rm_so<pos:position pos:line="58" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="61">line_color<pos:position pos:line="58" pos:column="71"/></name></expr></argument>)<pos:position pos:line="58" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">output_color<pos:position pos:line="59" pos:column="37"/></name><argument_list pos:line="59" pos:column="37">(<argument><expr><name pos:line="59" pos:column="38">opt<pos:position pos:line="59" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="43">bol<pos:position pos:line="59" pos:column="46"/></name> <operator pos:line="59" pos:column="47">+<pos:position pos:line="59" pos:column="48"/></operator> <name><name pos:line="59" pos:column="49">match<pos:position pos:line="59" pos:column="54"/></name><operator pos:line="59" pos:column="54">.<pos:position pos:line="59" pos:column="55"/></operator><name pos:line="59" pos:column="55">rm_so<pos:position pos:line="59" pos:column="60"/></name></name></expr></argument>,
				     <argument><expr><name><name pos:line="60" pos:column="38">match<pos:position pos:line="60" pos:column="43"/></name><operator pos:line="60" pos:column="43">.<pos:position pos:line="60" pos:column="44"/></operator><name pos:line="60" pos:column="44">rm_eo<pos:position pos:line="60" pos:column="49"/></name></name> <operator pos:line="60" pos:column="50">-<pos:position pos:line="60" pos:column="51"/></operator> <name><name pos:line="60" pos:column="52">match<pos:position pos:line="60" pos:column="57"/></name><operator pos:line="60" pos:column="57">.<pos:position pos:line="60" pos:column="58"/></operator><name pos:line="60" pos:column="58">rm_so<pos:position pos:line="60" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="65">match_color<pos:position pos:line="60" pos:column="76"/></name></expr></argument>)<pos:position pos:line="60" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><name pos:line="61" pos:column="25">bol<pos:position pos:line="61" pos:column="28"/></name> <operator pos:line="61" pos:column="29">+=<pos:position pos:line="61" pos:column="31"/></operator> <name><name pos:line="61" pos:column="32">match<pos:position pos:line="61" pos:column="37"/></name><operator pos:line="61" pos:column="37">.<pos:position pos:line="61" pos:column="38"/></operator><name pos:line="61" pos:column="38">rm_eo<pos:position pos:line="61" pos:column="43"/></name></name></expr>;<pos:position pos:line="61" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="62" pos:column="25">rest<pos:position pos:line="62" pos:column="29"/></name> <operator pos:line="62" pos:column="30">-=<pos:position pos:line="62" pos:column="32"/></operator> <name><name pos:line="62" pos:column="33">match<pos:position pos:line="62" pos:column="38"/></name><operator pos:line="62" pos:column="38">.<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="39">rm_eo<pos:position pos:line="62" pos:column="44"/></name></name></expr>;<pos:position pos:line="62" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="63" pos:column="25">eflags<pos:position pos:line="63" pos:column="31"/></name> <operator pos:line="63" pos:column="32">=<pos:position pos:line="63" pos:column="33"/></operator> <name pos:line="63" pos:column="34">REG_NOTBOL<pos:position pos:line="63" pos:column="44"/></name></expr>;<pos:position pos:line="63" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></while>
		<expr_stmt><expr><operator pos:line="65" pos:column="17">*<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="18">eol<pos:position pos:line="65" pos:column="21"/></name> <operator pos:line="65" pos:column="22">=<pos:position pos:line="65" pos:column="23"/></operator> <name pos:line="65" pos:column="24">ch<pos:position pos:line="65" pos:column="26"/></name></expr>;<pos:position pos:line="65" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="67" pos:column="9">output_color<pos:position pos:line="67" pos:column="21"/></name><argument_list pos:line="67" pos:column="21">(<argument><expr><name pos:line="67" pos:column="22">opt<pos:position pos:line="67" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="27">bol<pos:position pos:line="67" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="32">rest<pos:position pos:line="67" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="38">line_color<pos:position pos:line="67" pos:column="48"/></name></expr></argument>)<pos:position pos:line="67" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="68" pos:column="9">opt<pos:position pos:line="68" pos:column="12"/></name><operator pos:line="68" pos:column="12">-&gt;<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="14">output<pos:position pos:line="68" pos:column="20"/></name></name><argument_list pos:line="68" pos:column="20">(<argument><expr><name pos:line="68" pos:column="21">opt<pos:position pos:line="68" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="26">"\n"<pos:position pos:line="68" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="32">1<pos:position pos:line="68" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="35"/></expr_stmt>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

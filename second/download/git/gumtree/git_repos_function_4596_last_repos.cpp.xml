<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4596_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">delayed_reachability_test<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">shallow_info<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">si<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">c<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">si<pos:position pos:line="3" pos:column="15"/></name><operator pos:line="3" pos:column="15">-&gt;<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="17">need_reachability_test<pos:position pos:line="3" pos:column="39"/></name><index pos:line="3" pos:column="39">[<expr><name pos:line="3" pos:column="40">c<pos:position pos:line="3" pos:column="41"/></name></expr>]<pos:position pos:line="3" pos:column="42"/></index></name></expr>)<pos:position pos:line="3" pos:column="43"/></condition><then pos:line="3" pos:column="43"> <block pos:line="3" pos:column="44">{
		<decl_stmt><decl><type><name><name pos:line="4" pos:column="17">struct<pos:position pos:line="4" pos:column="23"/></name> <name pos:line="4" pos:column="24">commit<pos:position pos:line="4" pos:column="30"/></name></name> <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier></type><name pos:line="4" pos:column="32">commit<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><call><name pos:line="4" pos:column="41">lookup_commit<pos:position pos:line="4" pos:column="54"/></name><argument_list pos:line="4" pos:column="54">(<argument><expr><operator pos:line="4" pos:column="55">&amp;<pos:position pos:line="4" pos:column="60"/></operator><name><name pos:line="4" pos:column="56">si<pos:position pos:line="4" pos:column="58"/></name><operator pos:line="4" pos:column="58">-&gt;<pos:position pos:line="4" pos:column="63"/></operator><name pos:line="4" pos:column="60">shallow<pos:position pos:line="4" pos:column="67"/></name><operator pos:line="4" pos:column="67">-&gt;<pos:position pos:line="4" pos:column="72"/></operator><name pos:line="4" pos:column="69">oid<pos:position pos:line="4" pos:column="72"/></name><index pos:line="4" pos:column="72">[<expr><name pos:line="4" pos:column="73">c<pos:position pos:line="4" pos:column="74"/></name></expr>]<pos:position pos:line="4" pos:column="75"/></index></name></expr></argument>)<pos:position pos:line="4" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="77"/></decl_stmt>

		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><operator pos:line="6" pos:column="21">!<pos:position pos:line="6" pos:column="22"/></operator><name><name pos:line="6" pos:column="22">si<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">commits<pos:position pos:line="6" pos:column="33"/></name></name></expr>)<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34"> <block pos:line="6" pos:column="35">{
			<decl_stmt><decl><type><name><name pos:line="7" pos:column="25">struct<pos:position pos:line="7" pos:column="31"/></name> <name pos:line="7" pos:column="32">commit_array<pos:position pos:line="7" pos:column="44"/></name></name></type> <name pos:line="7" pos:column="45">ca<pos:position pos:line="7" pos:column="47"/></name></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="9" pos:column="25">memset<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><operator pos:line="9" pos:column="32">&amp;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="33">ca<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="37">0<pos:position pos:line="9" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="40">sizeof<argument_list pos:line="9" pos:column="46">(<argument><expr><name pos:line="9" pos:column="47">ca<pos:position pos:line="9" pos:column="49"/></name></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="10" pos:column="25">head_ref<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">add_ref<pos:position pos:line="10" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="43">&amp;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="44">ca<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">for_each_ref<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">add_ref<pos:position pos:line="11" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="47">&amp;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="48">ca<pos:position pos:line="11" pos:column="50"/></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="12" pos:column="25">si<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">commits<pos:position pos:line="12" pos:column="36"/></name></name> <operator pos:line="12" pos:column="37">=<pos:position pos:line="12" pos:column="38"/></operator> <name><name pos:line="12" pos:column="39">ca<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">.<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="42">commits<pos:position pos:line="12" pos:column="49"/></name></name></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="13" pos:column="25">si<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">nr_commits<pos:position pos:line="13" pos:column="39"/></name></name> <operator pos:line="13" pos:column="40">=<pos:position pos:line="13" pos:column="41"/></operator> <name><name pos:line="13" pos:column="42">ca<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">.<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="45">nr<pos:position pos:line="13" pos:column="47"/></name></name></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="16" pos:column="17">si<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">reachable<pos:position pos:line="16" pos:column="30"/></name><index pos:line="16" pos:column="30">[<expr><name pos:line="16" pos:column="31">c<pos:position pos:line="16" pos:column="32"/></name></expr>]<pos:position pos:line="16" pos:column="33"/></index></name> <operator pos:line="16" pos:column="34">=<pos:position pos:line="16" pos:column="35"/></operator> <call><name pos:line="16" pos:column="36">in_merge_bases_many<pos:position pos:line="16" pos:column="55"/></name><argument_list pos:line="16" pos:column="55">(<argument><expr><name pos:line="16" pos:column="56">commit<pos:position pos:line="16" pos:column="62"/></name></expr></argument>,
						       <argument><expr><name><name pos:line="17" pos:column="56">si<pos:position pos:line="17" pos:column="58"/></name><operator pos:line="17" pos:column="58">-&gt;<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="60">nr_commits<pos:position pos:line="17" pos:column="70"/></name></name></expr></argument>,
						       <argument><expr><name><name pos:line="18" pos:column="56">si<pos:position pos:line="18" pos:column="58"/></name><operator pos:line="18" pos:column="58">-&gt;<pos:position pos:line="18" pos:column="63"/></operator><name pos:line="18" pos:column="60">commits<pos:position pos:line="18" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">si<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">need_reachability_test<pos:position pos:line="19" pos:column="43"/></name><index pos:line="19" pos:column="43">[<expr><name pos:line="19" pos:column="44">c<pos:position pos:line="19" pos:column="45"/></name></expr>]<pos:position pos:line="19" pos:column="46"/></index></name> <operator pos:line="19" pos:column="47">=<pos:position pos:line="19" pos:column="48"/></operator> <literal type="number" pos:line="19" pos:column="49">0<pos:position pos:line="19" pos:column="50"/></literal></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>
	<return pos:line="21" pos:column="9">return <expr><name><name pos:line="21" pos:column="16">si<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">reachable<pos:position pos:line="21" pos:column="29"/></name><index pos:line="21" pos:column="29">[<expr><name pos:line="21" pos:column="30">c<pos:position pos:line="21" pos:column="31"/></name></expr>]<pos:position pos:line="21" pos:column="32"/></index></name></expr>;<pos:position pos:line="21" pos:column="33"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

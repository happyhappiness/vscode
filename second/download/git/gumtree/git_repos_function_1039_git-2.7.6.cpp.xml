<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1039_git-2.7.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">prepare_revision_walk<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">rev_info<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">revs<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object_array<pos:position pos:line="4" pos:column="28"/></name></name></type> <name pos:line="4" pos:column="29">old_pending<pos:position pos:line="4" pos:column="40"/></name></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit_list<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier><modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">next<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><operator pos:line="5" pos:column="37">&amp;<pos:position pos:line="5" pos:column="42"/></operator><name><name pos:line="5" pos:column="38">revs<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">commits<pos:position pos:line="5" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">memcpy<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><operator pos:line="7" pos:column="16">&amp;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="17">old_pending<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="30">&amp;<pos:position pos:line="7" pos:column="35"/></operator><name><name pos:line="7" pos:column="31">revs<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">pending<pos:position pos:line="7" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="46">sizeof<argument_list pos:line="7" pos:column="52">(<argument><expr><name pos:line="7" pos:column="53">old_pending<pos:position pos:line="7" pos:column="64"/></name></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">revs<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">pending<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">.<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">nr<pos:position pos:line="8" pos:column="25"/></name></name> <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <literal type="number" pos:line="8" pos:column="28">0<pos:position pos:line="8" pos:column="29"/></literal></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">revs<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">pending<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">.<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">alloc<pos:position pos:line="9" pos:column="28"/></name></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <literal type="number" pos:line="9" pos:column="31">0<pos:position pos:line="9" pos:column="32"/></literal></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">revs<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">pending<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">.<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">objects<pos:position pos:line="10" pos:column="30"/></name></name> <operator pos:line="10" pos:column="31">=<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="33">NULL<pos:position pos:line="10" pos:column="37"/></name></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name><name pos:line="11" pos:column="25">old_pending<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">.<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="37">nr<pos:position pos:line="11" pos:column="39"/></name></name></expr>;<pos:position pos:line="11" pos:column="40"/></condition> <incr><expr><name pos:line="11" pos:column="41">i<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">++<pos:position pos:line="11" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="45"/></control> <block pos:line="11" pos:column="46">{
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">object_array_entry<pos:position pos:line="12" pos:column="42"/></name></name> <modifier pos:line="12" pos:column="43">*<pos:position pos:line="12" pos:column="44"/></modifier></type><name pos:line="12" pos:column="44">e<pos:position pos:line="12" pos:column="45"/></name> <init pos:line="12" pos:column="46">= <expr><name><name pos:line="12" pos:column="48">old_pending<pos:position pos:line="12" pos:column="59"/></name><operator pos:line="12" pos:column="59">.<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="60">objects<pos:position pos:line="12" pos:column="67"/></name></name> <operator pos:line="12" pos:column="68">+<pos:position pos:line="12" pos:column="69"/></operator> <name pos:line="12" pos:column="70">i<pos:position pos:line="12" pos:column="71"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="72"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="13" pos:column="17">struct<pos:position pos:line="13" pos:column="23"/></name> <name pos:line="13" pos:column="24">commit<pos:position pos:line="13" pos:column="30"/></name></name> <modifier pos:line="13" pos:column="31">*<pos:position pos:line="13" pos:column="32"/></modifier></type><name pos:line="13" pos:column="32">commit<pos:position pos:line="13" pos:column="38"/></name> <init pos:line="13" pos:column="39">= <expr><call><name pos:line="13" pos:column="41">handle_commit<pos:position pos:line="13" pos:column="54"/></name><argument_list pos:line="13" pos:column="54">(<argument><expr><name pos:line="13" pos:column="55">revs<pos:position pos:line="13" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="61">e<pos:position pos:line="13" pos:column="62"/></name></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="64"/></decl_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">commit<pos:position pos:line="14" pos:column="27"/></name></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28"> <block pos:line="14" pos:column="29">{
			<if pos:line="15" pos:column="25">if <condition pos:line="15" pos:column="28">(<expr><operator pos:line="15" pos:column="29">!<pos:position pos:line="15" pos:column="30"/></operator><operator pos:line="15" pos:column="30">(<pos:position pos:line="15" pos:column="31"/></operator><name><name pos:line="15" pos:column="31">commit<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">-&gt;<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="39">object<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">.<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="46">flags<pos:position pos:line="15" pos:column="51"/></name></name> <operator pos:line="15" pos:column="52">&amp;<pos:position pos:line="15" pos:column="57"/></operator> <name pos:line="15" pos:column="54">SEEN<pos:position pos:line="15" pos:column="58"/></name><operator pos:line="15" pos:column="58">)<pos:position pos:line="15" pos:column="59"/></operator></expr>)<pos:position pos:line="15" pos:column="60"/></condition><then pos:line="15" pos:column="60"> <block pos:line="15" pos:column="61">{
				<expr_stmt><expr><name><name pos:line="16" pos:column="33">commit<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">object<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">.<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="48">flags<pos:position pos:line="16" pos:column="53"/></name></name> <operator pos:line="16" pos:column="54">|=<pos:position pos:line="16" pos:column="56"/></operator> <name pos:line="16" pos:column="57">SEEN<pos:position pos:line="16" pos:column="61"/></name></expr>;<pos:position pos:line="16" pos:column="62"/></expr_stmt>
				<expr_stmt><expr><name pos:line="17" pos:column="33">next<pos:position pos:line="17" pos:column="37"/></name> <operator pos:line="17" pos:column="38">=<pos:position pos:line="17" pos:column="39"/></operator> <call><name pos:line="17" pos:column="40">commit_list_append<pos:position pos:line="17" pos:column="58"/></name><argument_list pos:line="17" pos:column="58">(<argument><expr><name pos:line="17" pos:column="59">commit<pos:position pos:line="17" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="67">next<pos:position pos:line="17" pos:column="71"/></name></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="73"/></expr_stmt>
			}<pos:position pos:line="18" pos:column="26"/></block></then></if>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if>
	}<pos:position pos:line="20" pos:column="10"/></block></for>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name><name pos:line="21" pos:column="14">revs<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">leak_pending<pos:position pos:line="21" pos:column="32"/></name></name></expr>)<pos:position pos:line="21" pos:column="33"/></condition><then pos:line="21" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">object_array_clear<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><operator pos:line="22" pos:column="36">&amp;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="37">old_pending<pos:position pos:line="22" pos:column="48"/></name></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="24" pos:column="9">/* Signal whether we need per-parent treesame decoration */</comment>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">revs<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">simplify_merges<pos:position pos:line="25" pos:column="34"/></name></name> <operator pos:line="25" pos:column="35">||<pos:position pos:line="25" pos:column="37"/></operator>
	    <operator pos:line="26" pos:column="13">(<pos:position pos:line="26" pos:column="14"/></operator><name><name pos:line="26" pos:column="14">revs<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">limited<pos:position pos:line="26" pos:column="27"/></name></name> <operator pos:line="26" pos:column="28">&amp;&amp;<pos:position pos:line="26" pos:column="38"/></operator> <call><name pos:line="26" pos:column="31">limiting_can_increase_treesame<pos:position pos:line="26" pos:column="61"/></name><argument_list pos:line="26" pos:column="61">(<argument><expr><name pos:line="26" pos:column="62">revs<pos:position pos:line="26" pos:column="66"/></name></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call><operator pos:line="26" pos:column="67">)<pos:position pos:line="26" pos:column="68"/></operator></expr>)<pos:position pos:line="26" pos:column="69"/></condition><then pos:line="26" pos:column="69">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="17">revs<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">treesame<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">.<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">name<pos:position pos:line="27" pos:column="36"/></name></name> <operator pos:line="27" pos:column="37">=<pos:position pos:line="27" pos:column="38"/></operator> <literal type="string" pos:line="27" pos:column="39">"treesame"<pos:position pos:line="27" pos:column="49"/></literal></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt></block></then></if>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name><name pos:line="29" pos:column="13">revs<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">no_walk<pos:position pos:line="29" pos:column="26"/></name></name> <operator pos:line="29" pos:column="27">!=<pos:position pos:line="29" pos:column="29"/></operator> <name pos:line="29" pos:column="30">REVISION_WALK_NO_WALK_UNSORTED<pos:position pos:line="29" pos:column="60"/></name></expr>)<pos:position pos:line="29" pos:column="61"/></condition><then pos:line="29" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="17">commit_list_sort_by_date<pos:position pos:line="30" pos:column="41"/></name><argument_list pos:line="30" pos:column="41">(<argument><expr><operator pos:line="30" pos:column="42">&amp;<pos:position pos:line="30" pos:column="47"/></operator><name><name pos:line="30" pos:column="43">revs<pos:position pos:line="30" pos:column="47"/></name><operator pos:line="30" pos:column="47">-&gt;<pos:position pos:line="30" pos:column="52"/></operator><name pos:line="30" pos:column="49">commits<pos:position pos:line="30" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt></block></then></if>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">revs<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">no_walk<pos:position pos:line="31" pos:column="26"/></name></name></expr>)<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27">
		<block type="pseudo"><return pos:line="32" pos:column="17">return <expr><literal type="number" pos:line="32" pos:column="24">0<pos:position pos:line="32" pos:column="25"/></literal></expr>;<pos:position pos:line="32" pos:column="26"/></return></block></then></if>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">revs<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">limited<pos:position pos:line="33" pos:column="26"/></name></name></expr>)<pos:position pos:line="33" pos:column="27"/></condition><then pos:line="33" pos:column="27">
		<block type="pseudo"><if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><call><name pos:line="34" pos:column="21">limit_list<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">revs<pos:position pos:line="34" pos:column="36"/></name></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call> <operator pos:line="34" pos:column="38">&lt;<pos:position pos:line="34" pos:column="42"/></operator> <literal type="number" pos:line="34" pos:column="40">0<pos:position pos:line="34" pos:column="41"/></literal></expr>)<pos:position pos:line="34" pos:column="42"/></condition><then pos:line="34" pos:column="42">
			<block type="pseudo"><return pos:line="35" pos:column="25">return <expr><operator pos:line="35" pos:column="32">-<pos:position pos:line="35" pos:column="33"/></operator><literal type="number" pos:line="35" pos:column="33">1<pos:position pos:line="35" pos:column="34"/></literal></expr>;<pos:position pos:line="35" pos:column="35"/></return></block></then></if></block></then></if>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">revs<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">topo_order<pos:position pos:line="36" pos:column="29"/></name></name></expr>)<pos:position pos:line="36" pos:column="30"/></condition><then pos:line="36" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="17">sort_in_topological_order<pos:position pos:line="37" pos:column="42"/></name><argument_list pos:line="37" pos:column="42">(<argument><expr><operator pos:line="37" pos:column="43">&amp;<pos:position pos:line="37" pos:column="48"/></operator><name><name pos:line="37" pos:column="44">revs<pos:position pos:line="37" pos:column="48"/></name><operator pos:line="37" pos:column="48">-&gt;<pos:position pos:line="37" pos:column="53"/></operator><name pos:line="37" pos:column="50">commits<pos:position pos:line="37" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="59">revs<pos:position pos:line="37" pos:column="63"/></name><operator pos:line="37" pos:column="63">-&gt;<pos:position pos:line="37" pos:column="68"/></operator><name pos:line="37" pos:column="65">sort_order<pos:position pos:line="37" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="77"/></expr_stmt></block></then></if>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name><name pos:line="38" pos:column="13">revs<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">-&gt;<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="19">line_level_traverse<pos:position pos:line="38" pos:column="38"/></name></name></expr>)<pos:position pos:line="38" pos:column="39"/></condition><then pos:line="38" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="17">line_log_filter<pos:position pos:line="39" pos:column="32"/></name><argument_list pos:line="39" pos:column="32">(<argument><expr><name pos:line="39" pos:column="33">revs<pos:position pos:line="39" pos:column="37"/></name></expr></argument>)<pos:position pos:line="39" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="39"/></expr_stmt></block></then></if>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name><name pos:line="40" pos:column="13">revs<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">-&gt;<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="19">simplify_merges<pos:position pos:line="40" pos:column="34"/></name></name></expr>)<pos:position pos:line="40" pos:column="35"/></condition><then pos:line="40" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="17">simplify_merges<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">revs<pos:position pos:line="41" pos:column="37"/></name></expr></argument>)<pos:position pos:line="41" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt></block></then></if>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name><name pos:line="42" pos:column="13">revs<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">-&gt;<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="19">children<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">.<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="28">name<pos:position pos:line="42" pos:column="32"/></name></name></expr>)<pos:position pos:line="42" pos:column="33"/></condition><then pos:line="42" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="17">set_children<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><name pos:line="43" pos:column="30">revs<pos:position pos:line="43" pos:column="34"/></name></expr></argument>)<pos:position pos:line="43" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt></block></then></if>
	<return pos:line="44" pos:column="9">return <expr><literal type="number" pos:line="44" pos:column="16">0<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

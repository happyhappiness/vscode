<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2354_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">debug_set<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">what<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">match<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="60">struct<pos:position pos:line="1" pos:column="66"/></name> <name pos:line="1" pos:column="67">git_attr<pos:position pos:line="1" pos:column="75"/></name></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">attr<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="83">const<pos:position pos:line="1" pos:column="88"/></specifier> <name pos:line="1" pos:column="89">void<pos:position pos:line="1" pos:column="93"/></name> <modifier pos:line="1" pos:column="94">*<pos:position pos:line="1" pos:column="95"/></modifier></type><name pos:line="1" pos:column="95">v<pos:position pos:line="1" pos:column="96"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="97"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">value<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">v<pos:position pos:line="3" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">ATTR_TRUE<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">value<pos:position pos:line="5" pos:column="28"/></name></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="30"/></condition><then pos:line="5" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">value<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <literal type="string" pos:line="6" pos:column="25">"set"<pos:position pos:line="6" pos:column="30"/></literal></expr>;<pos:position pos:line="6" pos:column="31"/></expr_stmt></block></then>
	<elseif pos:line="7" pos:column="9">else <if pos:line="7" pos:column="14">if <condition pos:line="7" pos:column="17">(<expr><call><name pos:line="7" pos:column="18">ATTR_FALSE<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">value<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">value<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <literal type="string" pos:line="8" pos:column="25">"unset"<pos:position pos:line="8" pos:column="32"/></literal></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="9" pos:column="9">else <if pos:line="9" pos:column="14">if <condition pos:line="9" pos:column="17">(<expr><call><name pos:line="9" pos:column="18">ATTR_UNSET<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">value<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">value<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <literal type="string" pos:line="10" pos:column="25">"unspecified"<pos:position pos:line="10" pos:column="38"/></literal></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">fprintf<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">stderr<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="25">"%s: %s =&gt; %s (%s)\n"<pos:position pos:line="12" pos:column="49"/></literal></expr></argument>,
		<argument><expr><name pos:line="13" pos:column="17">what<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="23">attr<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">name<pos:position pos:line="13" pos:column="33"/></name></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="35">(<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="36">char<pos:position pos:line="13" pos:column="40"/></name> <operator pos:line="13" pos:column="41">*<pos:position pos:line="13" pos:column="42"/></operator><operator pos:line="13" pos:column="42">)<pos:position pos:line="13" pos:column="43"/></operator> <name pos:line="13" pos:column="44">value<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">match<pos:position pos:line="13" pos:column="56"/></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

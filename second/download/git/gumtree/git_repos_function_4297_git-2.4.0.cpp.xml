<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4297_git-2.4.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">git_status_config<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">k<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">v<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">void<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">cb<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">wt_status<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">s<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><name pos:line="3" pos:column="31">cb<pos:position pos:line="3" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">slot_name<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">starts_with<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">k<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="28">"column."<pos:position pos:line="6" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><call><name pos:line="7" pos:column="24">git_column_config<pos:position pos:line="7" pos:column="41"/></name><argument_list pos:line="7" pos:column="41">(<argument><expr><name pos:line="7" pos:column="42">k<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">v<pos:position pos:line="7" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="48">"status"<pos:position pos:line="7" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="58">&amp;<pos:position pos:line="7" pos:column="63"/></operator><name><name pos:line="7" pos:column="59">s<pos:position pos:line="7" pos:column="60"/></name><operator pos:line="7" pos:column="60">-&gt;<pos:position pos:line="7" pos:column="65"/></operator><name pos:line="7" pos:column="62">colopts<pos:position pos:line="7" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="71"/></return></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><call><name pos:line="8" pos:column="14">strcmp<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">k<pos:position pos:line="8" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="24">"status.submodulesummary"<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="51"/></condition><then pos:line="8" pos:column="51"> <block pos:line="8" pos:column="52">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">is_bool<pos:position pos:line="9" pos:column="28"/></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="10" pos:column="17">s<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">submodule_summary<pos:position pos:line="10" pos:column="37"/></name></name> <operator pos:line="10" pos:column="38">=<pos:position pos:line="10" pos:column="39"/></operator> <call><name pos:line="10" pos:column="40">git_config_bool_or_int<pos:position pos:line="10" pos:column="62"/></name><argument_list pos:line="10" pos:column="62">(<argument><expr><name pos:line="10" pos:column="63">k<pos:position pos:line="10" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="66">v<pos:position pos:line="10" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="69">&amp;<pos:position pos:line="10" pos:column="74"/></operator><name pos:line="10" pos:column="70">is_bool<pos:position pos:line="10" pos:column="77"/></name></expr></argument>)<pos:position pos:line="10" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="79"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">is_bool<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">&amp;&amp;<pos:position pos:line="11" pos:column="39"/></operator> <name><name pos:line="11" pos:column="32">s<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">-&gt;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="35">submodule_summary<pos:position pos:line="11" pos:column="52"/></name></name></expr>)<pos:position pos:line="11" pos:column="53"/></condition><then pos:line="11" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="25">s<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">submodule_summary<pos:position pos:line="12" pos:column="45"/></name></name> <operator pos:line="12" pos:column="46">=<pos:position pos:line="12" pos:column="47"/></operator> <operator pos:line="12" pos:column="48">-<pos:position pos:line="12" pos:column="49"/></operator><literal type="number" pos:line="12" pos:column="49">1<pos:position pos:line="12" pos:column="50"/></literal></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt></block></then></if>
		<return pos:line="13" pos:column="17">return <expr><literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><call><name pos:line="15" pos:column="14">strcmp<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">k<pos:position pos:line="15" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="24">"status.short"<pos:position pos:line="15" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="40"/></condition><then pos:line="15" pos:column="40"> <block pos:line="15" pos:column="41">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><call><name pos:line="16" pos:column="21">git_config_bool<pos:position pos:line="16" pos:column="36"/></name><argument_list pos:line="16" pos:column="36">(<argument><expr><name pos:line="16" pos:column="37">k<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="40">v<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="25">status_deferred_config<pos:position pos:line="17" pos:column="47"/></name><operator pos:line="17" pos:column="47">.<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="48">status_format<pos:position pos:line="17" pos:column="61"/></name></name> <operator pos:line="17" pos:column="62">=<pos:position pos:line="17" pos:column="63"/></operator> <name pos:line="17" pos:column="64">STATUS_FORMAT_SHORT<pos:position pos:line="17" pos:column="83"/></name></expr>;<pos:position pos:line="17" pos:column="84"/></expr_stmt></block></then>
		<else pos:line="18" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="25">status_deferred_config<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">.<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="48">status_format<pos:position pos:line="19" pos:column="61"/></name></name> <operator pos:line="19" pos:column="62">=<pos:position pos:line="19" pos:column="63"/></operator> <name pos:line="19" pos:column="64">STATUS_FORMAT_NONE<pos:position pos:line="19" pos:column="82"/></name></expr>;<pos:position pos:line="19" pos:column="83"/></expr_stmt></block></else></if>
		<return pos:line="20" pos:column="17">return <expr><literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><call><name pos:line="22" pos:column="14">strcmp<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">k<pos:position pos:line="22" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="24">"status.branch"<pos:position pos:line="22" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41"> <block pos:line="22" pos:column="42">{
		<expr_stmt><expr><name><name pos:line="23" pos:column="17">status_deferred_config<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">.<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="40">show_branch<pos:position pos:line="23" pos:column="51"/></name></name> <operator pos:line="23" pos:column="52">=<pos:position pos:line="23" pos:column="53"/></operator> <call><name pos:line="23" pos:column="54">git_config_bool<pos:position pos:line="23" pos:column="69"/></name><argument_list pos:line="23" pos:column="69">(<argument><expr><name pos:line="23" pos:column="70">k<pos:position pos:line="23" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="73">v<pos:position pos:line="23" pos:column="74"/></name></expr></argument>)<pos:position pos:line="23" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="76"/></expr_stmt>
		<return pos:line="24" pos:column="17">return <expr><literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><call><name pos:line="26" pos:column="14">strcmp<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">k<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="24">"status.color"<pos:position pos:line="26" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></call> <operator pos:line="26" pos:column="40">||<pos:position pos:line="26" pos:column="42"/></operator> <operator pos:line="26" pos:column="43">!<pos:position pos:line="26" pos:column="44"/></operator><call><name pos:line="26" pos:column="44">strcmp<pos:position pos:line="26" pos:column="50"/></name><argument_list pos:line="26" pos:column="50">(<argument><expr><name pos:line="26" pos:column="51">k<pos:position pos:line="26" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="54">"color.status"<pos:position pos:line="26" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="70"/></condition><then pos:line="26" pos:column="70"> <block pos:line="26" pos:column="71">{
		<expr_stmt><expr><name><name pos:line="27" pos:column="17">s<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">use_color<pos:position pos:line="27" pos:column="29"/></name></name> <operator pos:line="27" pos:column="30">=<pos:position pos:line="27" pos:column="31"/></operator> <call><name pos:line="27" pos:column="32">git_config_colorbool<pos:position pos:line="27" pos:column="52"/></name><argument_list pos:line="27" pos:column="52">(<argument><expr><name pos:line="27" pos:column="53">k<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="56">v<pos:position pos:line="27" pos:column="57"/></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt>
		<return pos:line="28" pos:column="17">return <expr><literal type="number" pos:line="28" pos:column="24">0<pos:position pos:line="28" pos:column="25"/></literal></expr>;<pos:position pos:line="28" pos:column="26"/></return>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><call><name pos:line="30" pos:column="14">strcmp<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">k<pos:position pos:line="30" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="24">"status.displaycommentprefix"<pos:position pos:line="30" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="55"/></condition><then pos:line="30" pos:column="55"> <block pos:line="30" pos:column="56">{
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">s<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">display_comment_prefix<pos:position pos:line="31" pos:column="42"/></name></name> <operator pos:line="31" pos:column="43">=<pos:position pos:line="31" pos:column="44"/></operator> <call><name pos:line="31" pos:column="45">git_config_bool<pos:position pos:line="31" pos:column="60"/></name><argument_list pos:line="31" pos:column="60">(<argument><expr><name pos:line="31" pos:column="61">k<pos:position pos:line="31" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="64">v<pos:position pos:line="31" pos:column="65"/></name></expr></argument>)<pos:position pos:line="31" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="67"/></expr_stmt>
		<return pos:line="32" pos:column="17">return <expr><literal type="number" pos:line="32" pos:column="24">0<pos:position pos:line="32" pos:column="25"/></literal></expr>;<pos:position pos:line="32" pos:column="26"/></return>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><call><name pos:line="34" pos:column="13">skip_prefix<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">k<pos:position pos:line="34" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="28">"status.color."<pos:position pos:line="34" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="45">&amp;<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="46">slot_name<pos:position pos:line="34" pos:column="55"/></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call> <operator pos:line="34" pos:column="57">||<pos:position pos:line="34" pos:column="59"/></operator>
	    <call><name pos:line="35" pos:column="13">skip_prefix<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">k<pos:position pos:line="35" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="28">"color.status."<pos:position pos:line="35" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="45">&amp;<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="46">slot_name<pos:position pos:line="35" pos:column="55"/></name></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="57"/></condition><then pos:line="35" pos:column="57"> <block pos:line="35" pos:column="58">{
		<decl_stmt><decl><type><name pos:line="36" pos:column="17">int<pos:position pos:line="36" pos:column="20"/></name></type> <name pos:line="36" pos:column="21">slot<pos:position pos:line="36" pos:column="25"/></name> <init pos:line="36" pos:column="26">= <expr><call><name pos:line="36" pos:column="28">parse_status_slot<pos:position pos:line="36" pos:column="45"/></name><argument_list pos:line="36" pos:column="45">(<argument><expr><name pos:line="36" pos:column="46">slot_name<pos:position pos:line="36" pos:column="55"/></name></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="57"/></decl_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">slot<pos:position pos:line="37" pos:column="25"/></name> <operator pos:line="37" pos:column="26">&lt;<pos:position pos:line="37" pos:column="30"/></operator> <literal type="number" pos:line="37" pos:column="28">0<pos:position pos:line="37" pos:column="29"/></literal></expr>)<pos:position pos:line="37" pos:column="30"/></condition><then pos:line="37" pos:column="30">
			<block type="pseudo"><return pos:line="38" pos:column="25">return <expr><literal type="number" pos:line="38" pos:column="32">0<pos:position pos:line="38" pos:column="33"/></literal></expr>;<pos:position pos:line="38" pos:column="34"/></return></block></then></if>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">!<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">v<pos:position pos:line="39" pos:column="23"/></name></expr>)<pos:position pos:line="39" pos:column="24"/></condition><then pos:line="39" pos:column="24">
			<block type="pseudo"><return pos:line="40" pos:column="25">return <expr><call><name pos:line="40" pos:column="32">config_error_nonbool<pos:position pos:line="40" pos:column="52"/></name><argument_list pos:line="40" pos:column="52">(<argument><expr><name pos:line="40" pos:column="53">k<pos:position pos:line="40" pos:column="54"/></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></return></block></then></if>
		<return pos:line="41" pos:column="17">return <expr><call><name pos:line="41" pos:column="24">color_parse<pos:position pos:line="41" pos:column="35"/></name><argument_list pos:line="41" pos:column="35">(<argument><expr><name pos:line="41" pos:column="36">v<pos:position pos:line="41" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="39">s<pos:position pos:line="41" pos:column="40"/></name><operator pos:line="41" pos:column="40">-&gt;<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="42">color_palette<pos:position pos:line="41" pos:column="55"/></name><index pos:line="41" pos:column="55">[<expr><name pos:line="41" pos:column="56">slot<pos:position pos:line="41" pos:column="60"/></name></expr>]<pos:position pos:line="41" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="41" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="63"/></return>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><call><name pos:line="43" pos:column="14">strcmp<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><name pos:line="43" pos:column="21">k<pos:position pos:line="43" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="24">"status.relativepaths"<pos:position pos:line="43" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="48"/></condition><then pos:line="43" pos:column="48"> <block pos:line="43" pos:column="49">{
		<expr_stmt><expr><name><name pos:line="44" pos:column="17">s<pos:position pos:line="44" pos:column="18"/></name><operator pos:line="44" pos:column="18">-&gt;<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="20">relative_paths<pos:position pos:line="44" pos:column="34"/></name></name> <operator pos:line="44" pos:column="35">=<pos:position pos:line="44" pos:column="36"/></operator> <call><name pos:line="44" pos:column="37">git_config_bool<pos:position pos:line="44" pos:column="52"/></name><argument_list pos:line="44" pos:column="52">(<argument><expr><name pos:line="44" pos:column="53">k<pos:position pos:line="44" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="56">v<pos:position pos:line="44" pos:column="57"/></name></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="59"/></expr_stmt>
		<return pos:line="45" pos:column="17">return <expr><literal type="number" pos:line="45" pos:column="24">0<pos:position pos:line="45" pos:column="25"/></literal></expr>;<pos:position pos:line="45" pos:column="26"/></return>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator><call><name pos:line="47" pos:column="14">strcmp<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">k<pos:position pos:line="47" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="24">"status.showuntrackedfiles"<pos:position pos:line="47" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="53"/></condition><then pos:line="47" pos:column="53"> <block pos:line="47" pos:column="54">{
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><operator pos:line="48" pos:column="21">!<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="22">v<pos:position pos:line="48" pos:column="23"/></name></expr>)<pos:position pos:line="48" pos:column="24"/></condition><then pos:line="48" pos:column="24">
			<block type="pseudo"><return pos:line="49" pos:column="25">return <expr><call><name pos:line="49" pos:column="32">config_error_nonbool<pos:position pos:line="49" pos:column="52"/></name><argument_list pos:line="49" pos:column="52">(<argument><expr><name pos:line="49" pos:column="53">k<pos:position pos:line="49" pos:column="54"/></name></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="56"/></return></block></then>
		<elseif pos:line="50" pos:column="17">else <if pos:line="50" pos:column="22">if <condition pos:line="50" pos:column="25">(<expr><operator pos:line="50" pos:column="26">!<pos:position pos:line="50" pos:column="27"/></operator><call><name pos:line="50" pos:column="27">strcmp<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><name pos:line="50" pos:column="34">v<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="37">"no"<pos:position pos:line="50" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="43"/></condition><then pos:line="50" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="51" pos:column="25">s<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">-&gt;<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="28">show_untracked_files<pos:position pos:line="51" pos:column="48"/></name></name> <operator pos:line="51" pos:column="49">=<pos:position pos:line="51" pos:column="50"/></operator> <name pos:line="51" pos:column="51">SHOW_NO_UNTRACKED_FILES<pos:position pos:line="51" pos:column="74"/></name></expr>;<pos:position pos:line="51" pos:column="75"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="52" pos:column="17">else <if pos:line="52" pos:column="22">if <condition pos:line="52" pos:column="25">(<expr><operator pos:line="52" pos:column="26">!<pos:position pos:line="52" pos:column="27"/></operator><call><name pos:line="52" pos:column="27">strcmp<pos:position pos:line="52" pos:column="33"/></name><argument_list pos:line="52" pos:column="33">(<argument><expr><name pos:line="52" pos:column="34">v<pos:position pos:line="52" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="37">"normal"<pos:position pos:line="52" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="47"/></condition><then pos:line="52" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="25">s<pos:position pos:line="53" pos:column="26"/></name><operator pos:line="53" pos:column="26">-&gt;<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="28">show_untracked_files<pos:position pos:line="53" pos:column="48"/></name></name> <operator pos:line="53" pos:column="49">=<pos:position pos:line="53" pos:column="50"/></operator> <name pos:line="53" pos:column="51">SHOW_NORMAL_UNTRACKED_FILES<pos:position pos:line="53" pos:column="78"/></name></expr>;<pos:position pos:line="53" pos:column="79"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="54" pos:column="17">else <if pos:line="54" pos:column="22">if <condition pos:line="54" pos:column="25">(<expr><operator pos:line="54" pos:column="26">!<pos:position pos:line="54" pos:column="27"/></operator><call><name pos:line="54" pos:column="27">strcmp<pos:position pos:line="54" pos:column="33"/></name><argument_list pos:line="54" pos:column="33">(<argument><expr><name pos:line="54" pos:column="34">v<pos:position pos:line="54" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="37">"all"<pos:position pos:line="54" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="44"/></condition><then pos:line="54" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="55" pos:column="25">s<pos:position pos:line="55" pos:column="26"/></name><operator pos:line="55" pos:column="26">-&gt;<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="28">show_untracked_files<pos:position pos:line="55" pos:column="48"/></name></name> <operator pos:line="55" pos:column="49">=<pos:position pos:line="55" pos:column="50"/></operator> <name pos:line="55" pos:column="51">SHOW_ALL_UNTRACKED_FILES<pos:position pos:line="55" pos:column="75"/></name></expr>;<pos:position pos:line="55" pos:column="76"/></expr_stmt></block></then></if></elseif>
		<else pos:line="56" pos:column="17">else
			<block type="pseudo"><return pos:line="57" pos:column="25">return <expr><call><name pos:line="57" pos:column="32">error<pos:position pos:line="57" pos:column="37"/></name><argument_list pos:line="57" pos:column="37">(<argument><expr><call><name pos:line="57" pos:column="38">_<pos:position pos:line="57" pos:column="39"/></name><argument_list pos:line="57" pos:column="39">(<argument><expr><literal type="string" pos:line="57" pos:column="40">"Invalid untracked files mode '%s'"<pos:position pos:line="57" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="57" pos:column="78">v<pos:position pos:line="57" pos:column="79"/></name></expr></argument>)<pos:position pos:line="57" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="81"/></return></block></else></if>
		<return pos:line="58" pos:column="17">return <expr><literal type="number" pos:line="58" pos:column="24">0<pos:position pos:line="58" pos:column="25"/></literal></expr>;<pos:position pos:line="58" pos:column="26"/></return>
	}<pos:position pos:line="59" pos:column="10"/></block></then></if>
	<return pos:line="60" pos:column="9">return <expr><call><name pos:line="60" pos:column="16">git_diff_ui_config<pos:position pos:line="60" pos:column="34"/></name><argument_list pos:line="60" pos:column="34">(<argument><expr><name pos:line="60" pos:column="35">k<pos:position pos:line="60" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="38">v<pos:position pos:line="60" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="41">NULL<pos:position pos:line="60" pos:column="45"/></name></expr></argument>)<pos:position pos:line="60" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="47"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

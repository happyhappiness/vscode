<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1388_git-2.8.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">end_packfile<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">running<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">running<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">||<pos:position pos:line="5" pos:column="23"/></operator> <operator pos:line="5" pos:column="24">!<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">pack_data<pos:position pos:line="5" pos:column="34"/></name></expr>)<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35">
		<block type="pseudo"><return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="8" pos:column="9">running<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <literal type="number" pos:line="8" pos:column="19">1<pos:position pos:line="8" pos:column="20"/></literal></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">clear_delta_base_cache<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">()<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">object_count<pos:position pos:line="10" pos:column="25"/></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26"> <block pos:line="10" pos:column="27">{
		<decl_stmt><decl><type><name><name pos:line="11" pos:column="17">struct<pos:position pos:line="11" pos:column="23"/></name> <name pos:line="11" pos:column="24">packed_git<pos:position pos:line="11" pos:column="34"/></name></name> <modifier pos:line="11" pos:column="35">*<pos:position pos:line="11" pos:column="36"/></modifier></type><name pos:line="11" pos:column="36">new_p<pos:position pos:line="11" pos:column="41"/></name></decl>;<pos:position pos:line="11" pos:column="42"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">unsigned<pos:position pos:line="12" pos:column="25"/></name> <name pos:line="12" pos:column="26">char<pos:position pos:line="12" pos:column="30"/></name></type> <name><name pos:line="12" pos:column="31">cur_pack_sha1<pos:position pos:line="12" pos:column="44"/></name><index pos:line="12" pos:column="44">[<expr><literal type="number" pos:line="12" pos:column="45">20<pos:position pos:line="12" pos:column="47"/></literal></expr>]<pos:position pos:line="12" pos:column="48"/></index></name></decl>;<pos:position pos:line="12" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">char<pos:position pos:line="13" pos:column="21"/></name> <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier></type><name pos:line="13" pos:column="23">idx_name<pos:position pos:line="13" pos:column="31"/></name></decl>;<pos:position pos:line="13" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name></type> <name pos:line="14" pos:column="21">i<pos:position pos:line="14" pos:column="22"/></name></decl>;<pos:position pos:line="14" pos:column="23"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="15" pos:column="17">struct<pos:position pos:line="15" pos:column="23"/></name> <name pos:line="15" pos:column="24">branch<pos:position pos:line="15" pos:column="30"/></name></name> <modifier pos:line="15" pos:column="31">*<pos:position pos:line="15" pos:column="32"/></modifier></type><name pos:line="15" pos:column="32">b<pos:position pos:line="15" pos:column="33"/></name></decl>;<pos:position pos:line="15" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="16" pos:column="17">struct<pos:position pos:line="16" pos:column="23"/></name> <name pos:line="16" pos:column="24">tag<pos:position pos:line="16" pos:column="27"/></name></name> <modifier pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></modifier></type><name pos:line="16" pos:column="29">t<pos:position pos:line="16" pos:column="30"/></name></decl>;<pos:position pos:line="16" pos:column="31"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="18" pos:column="17">close_pack_windows<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">pack_data<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">sha1close<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">pack_file<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="38">cur_pack_sha1<pos:position pos:line="19" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="53">0<pos:position pos:line="19" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">fixup_pack_header_footer<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><expr><name><name pos:line="20" pos:column="42">pack_data<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">-&gt;<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="53">pack_fd<pos:position pos:line="20" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="62">pack_data<pos:position pos:line="20" pos:column="71"/></name><operator pos:line="20" pos:column="71">-&gt;<pos:position pos:line="20" pos:column="76"/></operator><name pos:line="20" pos:column="73">sha1<pos:position pos:line="20" pos:column="77"/></name></name></expr></argument>,
				    <argument><expr><name><name pos:line="21" pos:column="37">pack_data<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">-&gt;<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="48">pack_name<pos:position pos:line="21" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="59">object_count<pos:position pos:line="21" pos:column="71"/></name></expr></argument>,
				    <argument><expr><name pos:line="22" pos:column="37">cur_pack_sha1<pos:position pos:line="22" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="52">pack_size<pos:position pos:line="22" pos:column="61"/></name></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">close<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name><name pos:line="23" pos:column="23">pack_data<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">-&gt;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="34">pack_fd<pos:position pos:line="23" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="24" pos:column="17">idx_name<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">=<pos:position pos:line="24" pos:column="27"/></operator> <call><name pos:line="24" pos:column="28">keep_pack<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><call><name pos:line="24" pos:column="38">create_index<pos:position pos:line="24" pos:column="50"/></name><argument_list pos:line="24" pos:column="50">()<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt>

		<comment type="block" pos:line="26" pos:column="17">/* Register the packfile with core git's machinery. */</comment>
		<expr_stmt><expr><name pos:line="27" pos:column="17">new_p<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <call><name pos:line="27" pos:column="25">add_packed_git<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><name pos:line="27" pos:column="40">idx_name<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="50">strlen<pos:position pos:line="27" pos:column="56"/></name><argument_list pos:line="27" pos:column="56">(<argument><expr><name pos:line="27" pos:column="57">idx_name<pos:position pos:line="27" pos:column="65"/></name></expr></argument>)<pos:position pos:line="27" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="68">1<pos:position pos:line="27" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="71"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">new_p<pos:position pos:line="28" pos:column="27"/></name></expr>)<pos:position pos:line="28" pos:column="28"/></condition><then pos:line="28" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="25">die<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="string" pos:line="29" pos:column="29">"core git rejected index %s"<pos:position pos:line="29" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="59">idx_name<pos:position pos:line="29" pos:column="67"/></name></expr></argument>)<pos:position pos:line="29" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="69"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="30" pos:column="17">all_packs<pos:position pos:line="30" pos:column="26"/></name><index pos:line="30" pos:column="26">[<expr><name pos:line="30" pos:column="27">pack_id<pos:position pos:line="30" pos:column="34"/></name></expr>]<pos:position pos:line="30" pos:column="35"/></index></name> <operator pos:line="30" pos:column="36">=<pos:position pos:line="30" pos:column="37"/></operator> <name pos:line="30" pos:column="38">new_p<pos:position pos:line="30" pos:column="43"/></name></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">install_packed_git<pos:position pos:line="31" pos:column="35"/></name><argument_list pos:line="31" pos:column="35">(<argument><expr><name pos:line="31" pos:column="36">new_p<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt>

		<comment type="block" pos:line="33" pos:column="17">/* Print the boundary */</comment>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">pack_edges<pos:position pos:line="34" pos:column="31"/></name></expr>)<pos:position pos:line="34" pos:column="32"/></condition><then pos:line="34" pos:column="32"> <block pos:line="34" pos:column="33">{
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">fprintf<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><name pos:line="35" pos:column="33">pack_edges<pos:position pos:line="35" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="45">"%s:"<pos:position pos:line="35" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="52">new_p<pos:position pos:line="35" pos:column="57"/></name><operator pos:line="35" pos:column="57">-&gt;<pos:position pos:line="35" pos:column="62"/></operator><name pos:line="35" pos:column="59">pack_name<pos:position pos:line="35" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="70"/></expr_stmt>
			<for pos:line="36" pos:column="25">for <control pos:line="36" pos:column="29">(<init><expr><name pos:line="36" pos:column="30">i<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">=<pos:position pos:line="36" pos:column="33"/></operator> <literal type="number" pos:line="36" pos:column="34">0<pos:position pos:line="36" pos:column="35"/></literal></expr>;<pos:position pos:line="36" pos:column="36"/></init> <condition><expr><name pos:line="36" pos:column="37">i<pos:position pos:line="36" pos:column="38"/></name> <operator pos:line="36" pos:column="39">&lt;<pos:position pos:line="36" pos:column="43"/></operator> <name pos:line="36" pos:column="41">branch_table_sz<pos:position pos:line="36" pos:column="56"/></name></expr>;<pos:position pos:line="36" pos:column="57"/></condition> <incr><expr><name pos:line="36" pos:column="58">i<pos:position pos:line="36" pos:column="59"/></name><operator pos:line="36" pos:column="59">++<pos:position pos:line="36" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="62"/></control> <block pos:line="36" pos:column="63">{
				<for pos:line="37" pos:column="33">for <control pos:line="37" pos:column="37">(<init><expr><name pos:line="37" pos:column="38">b<pos:position pos:line="37" pos:column="39"/></name> <operator pos:line="37" pos:column="40">=<pos:position pos:line="37" pos:column="41"/></operator> <name><name pos:line="37" pos:column="42">branch_table<pos:position pos:line="37" pos:column="54"/></name><index pos:line="37" pos:column="54">[<expr><name pos:line="37" pos:column="55">i<pos:position pos:line="37" pos:column="56"/></name></expr>]<pos:position pos:line="37" pos:column="57"/></index></name></expr>;<pos:position pos:line="37" pos:column="58"/></init> <condition><expr><name pos:line="37" pos:column="59">b<pos:position pos:line="37" pos:column="60"/></name></expr>;<pos:position pos:line="37" pos:column="61"/></condition> <incr><expr><name pos:line="37" pos:column="62">b<pos:position pos:line="37" pos:column="63"/></name> <operator pos:line="37" pos:column="64">=<pos:position pos:line="37" pos:column="65"/></operator> <name><name pos:line="37" pos:column="66">b<pos:position pos:line="37" pos:column="67"/></name><operator pos:line="37" pos:column="67">-&gt;<pos:position pos:line="37" pos:column="72"/></operator><name pos:line="37" pos:column="69">table_next_branch<pos:position pos:line="37" pos:column="86"/></name></name></expr></incr>)<pos:position pos:line="37" pos:column="87"/></control> <block pos:line="37" pos:column="88">{
					<if pos:line="38" pos:column="41">if <condition pos:line="38" pos:column="44">(<expr><name><name pos:line="38" pos:column="45">b<pos:position pos:line="38" pos:column="46"/></name><operator pos:line="38" pos:column="46">-&gt;<pos:position pos:line="38" pos:column="51"/></operator><name pos:line="38" pos:column="48">pack_id<pos:position pos:line="38" pos:column="55"/></name></name> <operator pos:line="38" pos:column="56">==<pos:position pos:line="38" pos:column="58"/></operator> <name pos:line="38" pos:column="59">pack_id<pos:position pos:line="38" pos:column="66"/></name></expr>)<pos:position pos:line="38" pos:column="67"/></condition><then pos:line="38" pos:column="67">
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="49">fprintf<pos:position pos:line="39" pos:column="56"/></name><argument_list pos:line="39" pos:column="56">(<argument><expr><name pos:line="39" pos:column="57">pack_edges<pos:position pos:line="39" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="69">" %s"<pos:position pos:line="39" pos:column="74"/></literal></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="76">sha1_to_hex<pos:position pos:line="39" pos:column="87"/></name><argument_list pos:line="39" pos:column="87">(<argument><expr><name><name pos:line="39" pos:column="88">b<pos:position pos:line="39" pos:column="89"/></name><operator pos:line="39" pos:column="89">-&gt;<pos:position pos:line="39" pos:column="94"/></operator><name pos:line="39" pos:column="91">sha1<pos:position pos:line="39" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="98"/></expr_stmt></block></then></if>
				}<pos:position pos:line="40" pos:column="34"/></block></for>
			}<pos:position pos:line="41" pos:column="26"/></block></for>
			<for pos:line="42" pos:column="25">for <control pos:line="42" pos:column="29">(<init><expr><name pos:line="42" pos:column="30">t<pos:position pos:line="42" pos:column="31"/></name> <operator pos:line="42" pos:column="32">=<pos:position pos:line="42" pos:column="33"/></operator> <name pos:line="42" pos:column="34">first_tag<pos:position pos:line="42" pos:column="43"/></name></expr>;<pos:position pos:line="42" pos:column="44"/></init> <condition><expr><name pos:line="42" pos:column="45">t<pos:position pos:line="42" pos:column="46"/></name></expr>;<pos:position pos:line="42" pos:column="47"/></condition> <incr><expr><name pos:line="42" pos:column="48">t<pos:position pos:line="42" pos:column="49"/></name> <operator pos:line="42" pos:column="50">=<pos:position pos:line="42" pos:column="51"/></operator> <name><name pos:line="42" pos:column="52">t<pos:position pos:line="42" pos:column="53"/></name><operator pos:line="42" pos:column="53">-&gt;<pos:position pos:line="42" pos:column="58"/></operator><name pos:line="42" pos:column="55">next_tag<pos:position pos:line="42" pos:column="63"/></name></name></expr></incr>)<pos:position pos:line="42" pos:column="64"/></control> <block pos:line="42" pos:column="65">{
				<if pos:line="43" pos:column="33">if <condition pos:line="43" pos:column="36">(<expr><name><name pos:line="43" pos:column="37">t<pos:position pos:line="43" pos:column="38"/></name><operator pos:line="43" pos:column="38">-&gt;<pos:position pos:line="43" pos:column="43"/></operator><name pos:line="43" pos:column="40">pack_id<pos:position pos:line="43" pos:column="47"/></name></name> <operator pos:line="43" pos:column="48">==<pos:position pos:line="43" pos:column="50"/></operator> <name pos:line="43" pos:column="51">pack_id<pos:position pos:line="43" pos:column="58"/></name></expr>)<pos:position pos:line="43" pos:column="59"/></condition><then pos:line="43" pos:column="59">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="41">fprintf<pos:position pos:line="44" pos:column="48"/></name><argument_list pos:line="44" pos:column="48">(<argument><expr><name pos:line="44" pos:column="49">pack_edges<pos:position pos:line="44" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="61">" %s"<pos:position pos:line="44" pos:column="66"/></literal></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="68">sha1_to_hex<pos:position pos:line="44" pos:column="79"/></name><argument_list pos:line="44" pos:column="79">(<argument><expr><name><name pos:line="44" pos:column="80">t<pos:position pos:line="44" pos:column="81"/></name><operator pos:line="44" pos:column="81">-&gt;<pos:position pos:line="44" pos:column="86"/></operator><name pos:line="44" pos:column="83">sha1<pos:position pos:line="44" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="90"/></expr_stmt></block></then></if>
			}<pos:position pos:line="45" pos:column="26"/></block></for>
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">fputc<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><literal type="char" pos:line="46" pos:column="31">'\n'<pos:position pos:line="46" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="37">pack_edges<pos:position pos:line="46" pos:column="47"/></name></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="47" pos:column="25">fflush<pos:position pos:line="47" pos:column="31"/></name><argument_list pos:line="47" pos:column="31">(<argument><expr><name pos:line="47" pos:column="32">pack_edges<pos:position pos:line="47" pos:column="42"/></name></expr></argument>)<pos:position pos:line="47" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="48" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="50" pos:column="17">pack_id<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">++<pos:position pos:line="50" pos:column="26"/></operator></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></then>
	<else pos:line="52" pos:column="9">else <block pos:line="52" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">close<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name><name pos:line="53" pos:column="23">pack_data<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">-&gt;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="34">pack_fd<pos:position pos:line="53" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="54" pos:column="17">unlink_or_warn<pos:position pos:line="54" pos:column="31"/></name><argument_list pos:line="54" pos:column="31">(<argument><expr><name><name pos:line="54" pos:column="32">pack_data<pos:position pos:line="54" pos:column="41"/></name><operator pos:line="54" pos:column="41">-&gt;<pos:position pos:line="54" pos:column="46"/></operator><name pos:line="54" pos:column="43">pack_name<pos:position pos:line="54" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="55" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">free<pos:position pos:line="56" pos:column="13"/></name><argument_list pos:line="56" pos:column="13">(<argument><expr><name pos:line="56" pos:column="14">pack_data<pos:position pos:line="56" pos:column="23"/></name></expr></argument>)<pos:position pos:line="56" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="57" pos:column="9">pack_data<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="21">NULL<pos:position pos:line="57" pos:column="25"/></name></expr>;<pos:position pos:line="57" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="58" pos:column="9">running<pos:position pos:line="58" pos:column="16"/></name> <operator pos:line="58" pos:column="17">=<pos:position pos:line="58" pos:column="18"/></operator> <literal type="number" pos:line="58" pos:column="19">0<pos:position pos:line="58" pos:column="20"/></literal></expr>;<pos:position pos:line="58" pos:column="21"/></expr_stmt>

	<comment type="block" pos:line="60" pos:column="9">/* We can't carry a delta across packfiles. */</comment>
	<expr_stmt><expr><call><name pos:line="61" pos:column="9">strbuf_release<pos:position pos:line="61" pos:column="23"/></name><argument_list pos:line="61" pos:column="23">(<argument><expr><operator pos:line="61" pos:column="24">&amp;<pos:position pos:line="61" pos:column="29"/></operator><name><name pos:line="61" pos:column="25">last_blob<pos:position pos:line="61" pos:column="34"/></name><operator pos:line="61" pos:column="34">.<pos:position pos:line="61" pos:column="35"/></operator><name pos:line="61" pos:column="35">data<pos:position pos:line="61" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="62" pos:column="9">last_blob<pos:position pos:line="62" pos:column="18"/></name><operator pos:line="62" pos:column="18">.<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="19">offset<pos:position pos:line="62" pos:column="25"/></name></name> <operator pos:line="62" pos:column="26">=<pos:position pos:line="62" pos:column="27"/></operator> <literal type="number" pos:line="62" pos:column="28">0<pos:position pos:line="62" pos:column="29"/></literal></expr>;<pos:position pos:line="62" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="63" pos:column="9">last_blob<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">.<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="19">depth<pos:position pos:line="63" pos:column="24"/></name></name> <operator pos:line="63" pos:column="25">=<pos:position pos:line="63" pos:column="26"/></operator> <literal type="number" pos:line="63" pos:column="27">0<pos:position pos:line="63" pos:column="28"/></literal></expr>;<pos:position pos:line="63" pos:column="29"/></expr_stmt>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

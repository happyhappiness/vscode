<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2496_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">enum<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">path_treatment<pos:position pos:line="1" pos:column="27"/></name></name></type> <name pos:line="1" pos:column="28">treat_path_fast<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name><name pos:line="1" pos:column="44">struct<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">dir_struct<pos:position pos:line="1" pos:column="61"/></name></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">dir<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
					   <parameter><decl><type><name><name pos:line="2" pos:column="44">struct<pos:position pos:line="2" pos:column="50"/></name> <name pos:line="2" pos:column="51">untracked_cache_dir<pos:position pos:line="2" pos:column="70"/></name></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">untracked<pos:position pos:line="2" pos:column="81"/></name></decl></parameter>,
					   <parameter><decl><type><name><name pos:line="3" pos:column="44">struct<pos:position pos:line="3" pos:column="50"/></name> <name pos:line="3" pos:column="51">cached_dir<pos:position pos:line="3" pos:column="61"/></name></name> <modifier pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></modifier></type><name pos:line="3" pos:column="63">cdir<pos:position pos:line="3" pos:column="67"/></name></decl></parameter>,
					   <parameter><decl><type><name><name pos:line="4" pos:column="44">struct<pos:position pos:line="4" pos:column="50"/></name> <name pos:line="4" pos:column="51">index_state<pos:position pos:line="4" pos:column="62"/></name></name> <modifier pos:line="4" pos:column="63">*<pos:position pos:line="4" pos:column="64"/></modifier></type><name pos:line="4" pos:column="64">istate<pos:position pos:line="4" pos:column="70"/></name></decl></parameter>,
					   <parameter><decl><type><name><name pos:line="5" pos:column="44">struct<pos:position pos:line="5" pos:column="50"/></name> <name pos:line="5" pos:column="51">strbuf<pos:position pos:line="5" pos:column="57"/></name></name> <modifier pos:line="5" pos:column="58">*<pos:position pos:line="5" pos:column="59"/></modifier></type><name pos:line="5" pos:column="59">path<pos:position pos:line="5" pos:column="63"/></name></decl></parameter>,
					   <parameter><decl><type><name pos:line="6" pos:column="44">int<pos:position pos:line="6" pos:column="47"/></name></type> <name pos:line="6" pos:column="48">baselen<pos:position pos:line="6" pos:column="55"/></name></decl></parameter>,
					   <parameter><decl><type><specifier pos:line="7" pos:column="44">const<pos:position pos:line="7" pos:column="49"/></specifier> <name><name pos:line="7" pos:column="50">struct<pos:position pos:line="7" pos:column="56"/></name> <name pos:line="7" pos:column="57">pathspec<pos:position pos:line="7" pos:column="65"/></name></name> <modifier pos:line="7" pos:column="66">*<pos:position pos:line="7" pos:column="67"/></modifier></type><name pos:line="7" pos:column="67">pathspec<pos:position pos:line="7" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="76"/></parameter_list>
<block pos:line="8" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">strbuf_setlen<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">path<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="29">baselen<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name><name pos:line="10" pos:column="14">cdir<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">ucd<pos:position pos:line="10" pos:column="23"/></name></name></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24"> <block pos:line="10" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">strbuf_addstr<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">path<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="37">cdir<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">-&gt;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="43">file<pos:position pos:line="11" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">path_untracked<pos:position pos:line="12" pos:column="38"/></name></expr>;<pos:position pos:line="12" pos:column="39"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">strbuf_addstr<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">path<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="29">cdir<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">-&gt;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="35">ucd<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">-&gt;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="40">name<pos:position pos:line="14" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt>
	<comment type="block" pos:line="15" pos:column="9">/* treat_one_path() does this before it calls treat_directory() */</comment>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">strbuf_complete<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">path<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="31">'/'<pos:position pos:line="16" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">cdir<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">ucd<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">-&gt;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="24">check_only<pos:position pos:line="17" pos:column="34"/></name></name></expr>)<pos:position pos:line="17" pos:column="35"/></condition><then pos:line="17" pos:column="35">
		<comment type="block" pos:line="18" pos:column="17">/*
		 * check_only is set as a result of treat_directory() getting
		 * to its bottom. Verify again the same set of directories
		 * with check_only set.
		 */</comment>
		<block type="pseudo"><return pos:line="23" pos:column="17">return <expr><call><name pos:line="23" pos:column="24">read_directory_recursive<pos:position pos:line="23" pos:column="48"/></name><argument_list pos:line="23" pos:column="48">(<argument><expr><name pos:line="23" pos:column="49">dir<pos:position pos:line="23" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="54">istate<pos:position pos:line="23" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="62">path<pos:position pos:line="23" pos:column="66"/></name><operator pos:line="23" pos:column="66">-&gt;<pos:position pos:line="23" pos:column="71"/></operator><name pos:line="23" pos:column="68">buf<pos:position pos:line="23" pos:column="71"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="73">path<pos:position pos:line="23" pos:column="77"/></name><operator pos:line="23" pos:column="77">-&gt;<pos:position pos:line="23" pos:column="82"/></operator><name pos:line="23" pos:column="79">len<pos:position pos:line="23" pos:column="82"/></name></name></expr></argument>,
						<argument><expr><name><name pos:line="24" pos:column="49">cdir<pos:position pos:line="24" pos:column="53"/></name><operator pos:line="24" pos:column="53">-&gt;<pos:position pos:line="24" pos:column="58"/></operator><name pos:line="24" pos:column="55">ucd<pos:position pos:line="24" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="60">1<pos:position pos:line="24" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="63">pathspec<pos:position pos:line="24" pos:column="71"/></name></expr></argument>)<pos:position pos:line="24" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="73"/></return></block></then></if>
	<comment type="block" pos:line="25" pos:column="9">/*
	 * We get path_recurse in the first run when
	 * directory_exists_in_index() returns index_nonexistent. We
	 * are sure that new changes in the index does not impact the
	 * outcome. Return now.
	 */</comment>
	<return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">path_recurse<pos:position pos:line="31" pos:column="28"/></name></expr>;<pos:position pos:line="31" pos:column="29"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

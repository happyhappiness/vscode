<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5929_git-2.13.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_commit<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">commit<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">commit<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">void<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">data<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">rev_list_info<pos:position pos:line="3" pos:column="29"/></name></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">info<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><name pos:line="3" pos:column="38">data<pos:position pos:line="3" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">rev_info<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">revs<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name><name pos:line="4" pos:column="33">info<pos:position pos:line="4" pos:column="37"/></name><operator pos:line="4" pos:column="37">-&gt;<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="39">revs<pos:position pos:line="4" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">display_progress<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">progress<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="36">++<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">progress_counter<pos:position pos:line="6" pos:column="54"/></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">info<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">flags<pos:position pos:line="8" pos:column="24"/></name></name> <operator pos:line="8" pos:column="25">&amp;<pos:position pos:line="8" pos:column="30"/></operator> <name pos:line="8" pos:column="27">REV_LIST_QUIET<pos:position pos:line="8" pos:column="41"/></name></expr>)<pos:position pos:line="8" pos:column="42"/></condition><then pos:line="8" pos:column="42"> <block pos:line="8" pos:column="43">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">finish_commit<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">commit<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="39">data<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
		<return pos:line="10" pos:column="17">return;<pos:position pos:line="10" pos:column="24"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">graph_show_commit<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name><name pos:line="13" pos:column="27">revs<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">graph<pos:position pos:line="13" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">revs<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">count<pos:position pos:line="15" pos:column="24"/></name></name></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25"> <block pos:line="15" pos:column="26">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">commit<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">object<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">.<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="36">flags<pos:position pos:line="16" pos:column="41"/></name></name> <operator pos:line="16" pos:column="42">&amp;<pos:position pos:line="16" pos:column="47"/></operator> <name pos:line="16" pos:column="44">PATCHSAME<pos:position pos:line="16" pos:column="53"/></name></expr>)<pos:position pos:line="16" pos:column="54"/></condition><then pos:line="16" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="25">revs<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">-&gt;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="31">count_same<pos:position pos:line="17" pos:column="41"/></name></name><operator pos:line="17" pos:column="41">++<pos:position pos:line="17" pos:column="43"/></operator></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt></block></then>
		<elseif pos:line="18" pos:column="17">else <if pos:line="18" pos:column="22">if <condition pos:line="18" pos:column="25">(<expr><name><name pos:line="18" pos:column="26">commit<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">object<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">.<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="41">flags<pos:position pos:line="18" pos:column="46"/></name></name> <operator pos:line="18" pos:column="47">&amp;<pos:position pos:line="18" pos:column="52"/></operator> <name pos:line="18" pos:column="49">SYMMETRIC_LEFT<pos:position pos:line="18" pos:column="63"/></name></expr>)<pos:position pos:line="18" pos:column="64"/></condition><then pos:line="18" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="25">revs<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">count_left<pos:position pos:line="19" pos:column="41"/></name></name><operator pos:line="19" pos:column="41">++<pos:position pos:line="19" pos:column="43"/></operator></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt></block></then></if></elseif>
		<else pos:line="20" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="25">revs<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">count_right<pos:position pos:line="21" pos:column="42"/></name></name><operator pos:line="21" pos:column="42">++<pos:position pos:line="21" pos:column="44"/></operator></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">finish_commit<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">commit<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="39">data<pos:position pos:line="22" pos:column="43"/></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>
		<return pos:line="23" pos:column="17">return;<pos:position pos:line="23" pos:column="24"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">info<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">show_timestamp<pos:position pos:line="26" pos:column="33"/></name></name></expr>)<pos:position pos:line="26" pos:column="34"/></condition><then pos:line="26" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">printf<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="string" pos:line="27" pos:column="24">"%lu "<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="32">commit<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">-&gt;<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="40">date<pos:position pos:line="27" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt></block></then></if>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">info<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">header_prefix<pos:position pos:line="28" pos:column="32"/></name></name></expr>)<pos:position pos:line="28" pos:column="33"/></condition><then pos:line="28" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">fputs<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name><name pos:line="29" pos:column="23">info<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">header_prefix<pos:position pos:line="29" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="44">stdout<pos:position pos:line="29" pos:column="50"/></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt></block></then></if>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><name><name pos:line="31" pos:column="14">revs<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">graph<pos:position pos:line="31" pos:column="25"/></name></name></expr>)<pos:position pos:line="31" pos:column="26"/></condition><then pos:line="31" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">fputs<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><call><name pos:line="32" pos:column="23">get_revision_mark<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><name pos:line="32" pos:column="41">revs<pos:position pos:line="32" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="47">commit<pos:position pos:line="32" pos:column="53"/></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="32" pos:column="56">stdout<pos:position pos:line="32" pos:column="62"/></name></expr></argument>)<pos:position pos:line="32" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="64"/></expr_stmt></block></then></if>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">revs<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">abbrev_commit<pos:position pos:line="33" pos:column="32"/></name></name> <operator pos:line="33" pos:column="33">&amp;&amp;<pos:position pos:line="33" pos:column="43"/></operator> <name><name pos:line="33" pos:column="36">revs<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">-&gt;<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="42">abbrev<pos:position pos:line="33" pos:column="48"/></name></name></expr>)<pos:position pos:line="33" pos:column="49"/></condition><then pos:line="33" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="17">fputs<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><call><name pos:line="34" pos:column="23">find_unique_abbrev<pos:position pos:line="34" pos:column="41"/></name><argument_list pos:line="34" pos:column="41">(<argument><expr><name><name pos:line="34" pos:column="42">commit<pos:position pos:line="34" pos:column="48"/></name><operator pos:line="34" pos:column="48">-&gt;<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="50">object<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">.<pos:position pos:line="34" pos:column="57"/></operator><name pos:line="34" pos:column="57">oid<pos:position pos:line="34" pos:column="60"/></name><operator pos:line="34" pos:column="60">.<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="61">hash<pos:position pos:line="34" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="67">revs<pos:position pos:line="34" pos:column="71"/></name><operator pos:line="34" pos:column="71">-&gt;<pos:position pos:line="34" pos:column="76"/></operator><name pos:line="34" pos:column="73">abbrev<pos:position pos:line="34" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="80"/></argument_list></call></expr></argument>,
		      <argument><expr><name pos:line="35" pos:column="23">stdout<pos:position pos:line="35" pos:column="29"/></name></expr></argument>)<pos:position pos:line="35" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt></block></then>
	<else pos:line="36" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="17">fputs<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><call><name pos:line="37" pos:column="23">oid_to_hex<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><operator pos:line="37" pos:column="34">&amp;<pos:position pos:line="37" pos:column="39"/></operator><name><name pos:line="37" pos:column="35">commit<pos:position pos:line="37" pos:column="41"/></name><operator pos:line="37" pos:column="41">-&gt;<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="43">object<pos:position pos:line="37" pos:column="49"/></name><operator pos:line="37" pos:column="49">.<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="50">oid<pos:position pos:line="37" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="37" pos:column="56">stdout<pos:position pos:line="37" pos:column="62"/></name></expr></argument>)<pos:position pos:line="37" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="64"/></expr_stmt></block></else></if>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name><name pos:line="38" pos:column="13">revs<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">-&gt;<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="19">print_parents<pos:position pos:line="38" pos:column="32"/></name></name></expr>)<pos:position pos:line="38" pos:column="33"/></condition><then pos:line="38" pos:column="33"> <block pos:line="38" pos:column="34">{
		<decl_stmt><decl><type><name><name pos:line="39" pos:column="17">struct<pos:position pos:line="39" pos:column="23"/></name> <name pos:line="39" pos:column="24">commit_list<pos:position pos:line="39" pos:column="35"/></name></name> <modifier pos:line="39" pos:column="36">*<pos:position pos:line="39" pos:column="37"/></modifier></type><name pos:line="39" pos:column="37">parents<pos:position pos:line="39" pos:column="44"/></name> <init pos:line="39" pos:column="45">= <expr><name><name pos:line="39" pos:column="47">commit<pos:position pos:line="39" pos:column="53"/></name><operator pos:line="39" pos:column="53">-&gt;<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="55">parents<pos:position pos:line="39" pos:column="62"/></name></name></expr></init></decl>;<pos:position pos:line="39" pos:column="63"/></decl_stmt>
		<while pos:line="40" pos:column="17">while <condition pos:line="40" pos:column="23">(<expr><name pos:line="40" pos:column="24">parents<pos:position pos:line="40" pos:column="31"/></name></expr>)<pos:position pos:line="40" pos:column="32"/></condition> <block pos:line="40" pos:column="33">{
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">printf<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><literal type="string" pos:line="41" pos:column="32">" %s"<pos:position pos:line="41" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="39">oid_to_hex<pos:position pos:line="41" pos:column="49"/></name><argument_list pos:line="41" pos:column="49">(<argument><expr><operator pos:line="41" pos:column="50">&amp;<pos:position pos:line="41" pos:column="55"/></operator><name><name pos:line="41" pos:column="51">parents<pos:position pos:line="41" pos:column="58"/></name><operator pos:line="41" pos:column="58">-&gt;<pos:position pos:line="41" pos:column="63"/></operator><name pos:line="41" pos:column="60">item<pos:position pos:line="41" pos:column="64"/></name><operator pos:line="41" pos:column="64">-&gt;<pos:position pos:line="41" pos:column="69"/></operator><name pos:line="41" pos:column="66">object<pos:position pos:line="41" pos:column="72"/></name><operator pos:line="41" pos:column="72">.<pos:position pos:line="41" pos:column="73"/></operator><name pos:line="41" pos:column="73">oid<pos:position pos:line="41" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="79"/></expr_stmt>
			<expr_stmt><expr><name pos:line="42" pos:column="25">parents<pos:position pos:line="42" pos:column="32"/></name> <operator pos:line="42" pos:column="33">=<pos:position pos:line="42" pos:column="34"/></operator> <name><name pos:line="42" pos:column="35">parents<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">-&gt;<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="44">next<pos:position pos:line="42" pos:column="48"/></name></name></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></while>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name><name pos:line="45" pos:column="13">revs<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">-&gt;<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="19">children<pos:position pos:line="45" pos:column="27"/></name><operator pos:line="45" pos:column="27">.<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="28">name<pos:position pos:line="45" pos:column="32"/></name></name></expr>)<pos:position pos:line="45" pos:column="33"/></condition><then pos:line="45" pos:column="33"> <block pos:line="45" pos:column="34">{
		<decl_stmt><decl><type><name><name pos:line="46" pos:column="17">struct<pos:position pos:line="46" pos:column="23"/></name> <name pos:line="46" pos:column="24">commit_list<pos:position pos:line="46" pos:column="35"/></name></name> <modifier pos:line="46" pos:column="36">*<pos:position pos:line="46" pos:column="37"/></modifier></type><name pos:line="46" pos:column="37">children<pos:position pos:line="46" pos:column="45"/></name></decl>;<pos:position pos:line="46" pos:column="46"/></decl_stmt>

		<expr_stmt><expr><name pos:line="48" pos:column="17">children<pos:position pos:line="48" pos:column="25"/></name> <operator pos:line="48" pos:column="26">=<pos:position pos:line="48" pos:column="27"/></operator> <call><name pos:line="48" pos:column="28">lookup_decoration<pos:position pos:line="48" pos:column="45"/></name><argument_list pos:line="48" pos:column="45">(<argument><expr><operator pos:line="48" pos:column="46">&amp;<pos:position pos:line="48" pos:column="51"/></operator><name><name pos:line="48" pos:column="47">revs<pos:position pos:line="48" pos:column="51"/></name><operator pos:line="48" pos:column="51">-&gt;<pos:position pos:line="48" pos:column="56"/></operator><name pos:line="48" pos:column="53">children<pos:position pos:line="48" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="63">&amp;<pos:position pos:line="48" pos:column="68"/></operator><name><name pos:line="48" pos:column="64">commit<pos:position pos:line="48" pos:column="70"/></name><operator pos:line="48" pos:column="70">-&gt;<pos:position pos:line="48" pos:column="75"/></operator><name pos:line="48" pos:column="72">object<pos:position pos:line="48" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="80"/></expr_stmt>
		<while pos:line="49" pos:column="17">while <condition pos:line="49" pos:column="23">(<expr><name pos:line="49" pos:column="24">children<pos:position pos:line="49" pos:column="32"/></name></expr>)<pos:position pos:line="49" pos:column="33"/></condition> <block pos:line="49" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="50" pos:column="25">printf<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><literal type="string" pos:line="50" pos:column="32">" %s"<pos:position pos:line="50" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="39">oid_to_hex<pos:position pos:line="50" pos:column="49"/></name><argument_list pos:line="50" pos:column="49">(<argument><expr><operator pos:line="50" pos:column="50">&amp;<pos:position pos:line="50" pos:column="55"/></operator><name><name pos:line="50" pos:column="51">children<pos:position pos:line="50" pos:column="59"/></name><operator pos:line="50" pos:column="59">-&gt;<pos:position pos:line="50" pos:column="64"/></operator><name pos:line="50" pos:column="61">item<pos:position pos:line="50" pos:column="65"/></name><operator pos:line="50" pos:column="65">-&gt;<pos:position pos:line="50" pos:column="70"/></operator><name pos:line="50" pos:column="67">object<pos:position pos:line="50" pos:column="73"/></name><operator pos:line="50" pos:column="73">.<pos:position pos:line="50" pos:column="74"/></operator><name pos:line="50" pos:column="74">oid<pos:position pos:line="50" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="80"/></expr_stmt>
			<expr_stmt><expr><name pos:line="51" pos:column="25">children<pos:position pos:line="51" pos:column="33"/></name> <operator pos:line="51" pos:column="34">=<pos:position pos:line="51" pos:column="35"/></operator> <name><name pos:line="51" pos:column="36">children<pos:position pos:line="51" pos:column="44"/></name><operator pos:line="51" pos:column="44">-&gt;<pos:position pos:line="51" pos:column="49"/></operator><name pos:line="51" pos:column="46">next<pos:position pos:line="51" pos:column="50"/></name></name></expr>;<pos:position pos:line="51" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="52" pos:column="18"/></block></while>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">show_decorations<pos:position pos:line="54" pos:column="25"/></name><argument_list pos:line="54" pos:column="25">(<argument><expr><name pos:line="54" pos:column="26">revs<pos:position pos:line="54" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="32">commit<pos:position pos:line="54" pos:column="38"/></name></expr></argument>)<pos:position pos:line="54" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="40"/></expr_stmt>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name><name pos:line="55" pos:column="13">revs<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">-&gt;<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="19">commit_format<pos:position pos:line="55" pos:column="32"/></name></name> <operator pos:line="55" pos:column="33">==<pos:position pos:line="55" pos:column="35"/></operator> <name pos:line="55" pos:column="36">CMIT_FMT_ONELINE<pos:position pos:line="55" pos:column="52"/></name></expr>)<pos:position pos:line="55" pos:column="53"/></condition><then pos:line="55" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="17">putchar<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><literal type="char" pos:line="56" pos:column="25">' '<pos:position pos:line="56" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt></block></then>
	<else pos:line="57" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="17">putchar<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><literal type="char" pos:line="58" pos:column="25">'\n'<pos:position pos:line="58" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="31"/></expr_stmt></block></else></if>

	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name><name pos:line="60" pos:column="13">revs<pos:position pos:line="60" pos:column="17"/></name><operator pos:line="60" pos:column="17">-&gt;<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="19">verbose_header<pos:position pos:line="60" pos:column="33"/></name></name> <operator pos:line="60" pos:column="34">&amp;&amp;<pos:position pos:line="60" pos:column="44"/></operator> <call><name pos:line="60" pos:column="37">get_cached_commit_buffer<pos:position pos:line="60" pos:column="61"/></name><argument_list pos:line="60" pos:column="61">(<argument><expr><name pos:line="60" pos:column="62">commit<pos:position pos:line="60" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="70">NULL<pos:position pos:line="60" pos:column="74"/></name></expr></argument>)<pos:position pos:line="60" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="76"/></condition><then pos:line="60" pos:column="76"> <block pos:line="60" pos:column="77">{
		<decl_stmt><decl><type><name><name pos:line="61" pos:column="17">struct<pos:position pos:line="61" pos:column="23"/></name> <name pos:line="61" pos:column="24">strbuf<pos:position pos:line="61" pos:column="30"/></name></name></type> <name pos:line="61" pos:column="31">buf<pos:position pos:line="61" pos:column="34"/></name> <init pos:line="61" pos:column="35">= <expr><name pos:line="61" pos:column="37">STRBUF_INIT<pos:position pos:line="61" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="61" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="62" pos:column="17">struct<pos:position pos:line="62" pos:column="23"/></name> <name pos:line="62" pos:column="24">pretty_print_context<pos:position pos:line="62" pos:column="44"/></name></name></type> <name pos:line="62" pos:column="45">ctx<pos:position pos:line="62" pos:column="48"/></name> <init pos:line="62" pos:column="49">= <expr><block pos:line="62" pos:column="51">{<expr><literal type="number" pos:line="62" pos:column="52">0<pos:position pos:line="62" pos:column="53"/></literal></expr>}<pos:position pos:line="62" pos:column="54"/></block></expr></init></decl>;<pos:position pos:line="62" pos:column="55"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="63" pos:column="17">ctx<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">.<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="21">abbrev<pos:position pos:line="63" pos:column="27"/></name></name> <operator pos:line="63" pos:column="28">=<pos:position pos:line="63" pos:column="29"/></operator> <name><name pos:line="63" pos:column="30">revs<pos:position pos:line="63" pos:column="34"/></name><operator pos:line="63" pos:column="34">-&gt;<pos:position pos:line="63" pos:column="39"/></operator><name pos:line="63" pos:column="36">abbrev<pos:position pos:line="63" pos:column="42"/></name></name></expr>;<pos:position pos:line="63" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="64" pos:column="17">ctx<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">.<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="21">date_mode<pos:position pos:line="64" pos:column="30"/></name></name> <operator pos:line="64" pos:column="31">=<pos:position pos:line="64" pos:column="32"/></operator> <name><name pos:line="64" pos:column="33">revs<pos:position pos:line="64" pos:column="37"/></name><operator pos:line="64" pos:column="37">-&gt;<pos:position pos:line="64" pos:column="42"/></operator><name pos:line="64" pos:column="39">date_mode<pos:position pos:line="64" pos:column="48"/></name></name></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="65" pos:column="17">ctx<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">.<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="21">date_mode_explicit<pos:position pos:line="65" pos:column="39"/></name></name> <operator pos:line="65" pos:column="40">=<pos:position pos:line="65" pos:column="41"/></operator> <name><name pos:line="65" pos:column="42">revs<pos:position pos:line="65" pos:column="46"/></name><operator pos:line="65" pos:column="46">-&gt;<pos:position pos:line="65" pos:column="51"/></operator><name pos:line="65" pos:column="48">date_mode_explicit<pos:position pos:line="65" pos:column="66"/></name></name></expr>;<pos:position pos:line="65" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="66" pos:column="17">ctx<pos:position pos:line="66" pos:column="20"/></name><operator pos:line="66" pos:column="20">.<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="21">fmt<pos:position pos:line="66" pos:column="24"/></name></name> <operator pos:line="66" pos:column="25">=<pos:position pos:line="66" pos:column="26"/></operator> <name><name pos:line="66" pos:column="27">revs<pos:position pos:line="66" pos:column="31"/></name><operator pos:line="66" pos:column="31">-&gt;<pos:position pos:line="66" pos:column="36"/></operator><name pos:line="66" pos:column="33">commit_format<pos:position pos:line="66" pos:column="46"/></name></name></expr>;<pos:position pos:line="66" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="67" pos:column="17">ctx<pos:position pos:line="67" pos:column="20"/></name><operator pos:line="67" pos:column="20">.<pos:position pos:line="67" pos:column="21"/></operator><name pos:line="67" pos:column="21">output_encoding<pos:position pos:line="67" pos:column="36"/></name></name> <operator pos:line="67" pos:column="37">=<pos:position pos:line="67" pos:column="38"/></operator> <call><name pos:line="67" pos:column="39">get_log_output_encoding<pos:position pos:line="67" pos:column="62"/></name><argument_list pos:line="67" pos:column="62">()<pos:position pos:line="67" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="68" pos:column="17">pretty_print_commit<pos:position pos:line="68" pos:column="36"/></name><argument_list pos:line="68" pos:column="36">(<argument><expr><operator pos:line="68" pos:column="37">&amp;<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="38">ctx<pos:position pos:line="68" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="43">commit<pos:position pos:line="68" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="51">&amp;<pos:position pos:line="68" pos:column="56"/></operator><name pos:line="68" pos:column="52">buf<pos:position pos:line="68" pos:column="55"/></name></expr></argument>)<pos:position pos:line="68" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="57"/></expr_stmt>
		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><name><name pos:line="69" pos:column="21">buf<pos:position pos:line="69" pos:column="24"/></name><operator pos:line="69" pos:column="24">.<pos:position pos:line="69" pos:column="25"/></operator><name pos:line="69" pos:column="25">len<pos:position pos:line="69" pos:column="28"/></name></name></expr>)<pos:position pos:line="69" pos:column="29"/></condition><then pos:line="69" pos:column="29"> <block pos:line="69" pos:column="30">{
			<if pos:line="70" pos:column="25">if <condition pos:line="70" pos:column="28">(<expr><name><name pos:line="70" pos:column="29">revs<pos:position pos:line="70" pos:column="33"/></name><operator pos:line="70" pos:column="33">-&gt;<pos:position pos:line="70" pos:column="38"/></operator><name pos:line="70" pos:column="35">commit_format<pos:position pos:line="70" pos:column="48"/></name></name> <operator pos:line="70" pos:column="49">!=<pos:position pos:line="70" pos:column="51"/></operator> <name pos:line="70" pos:column="52">CMIT_FMT_ONELINE<pos:position pos:line="70" pos:column="68"/></name></expr>)<pos:position pos:line="70" pos:column="69"/></condition><then pos:line="70" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="33">graph_show_oneline<pos:position pos:line="71" pos:column="51"/></name><argument_list pos:line="71" pos:column="51">(<argument><expr><name><name pos:line="71" pos:column="52">revs<pos:position pos:line="71" pos:column="56"/></name><operator pos:line="71" pos:column="56">-&gt;<pos:position pos:line="71" pos:column="61"/></operator><name pos:line="71" pos:column="58">graph<pos:position pos:line="71" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="65"/></expr_stmt></block></then></if>

			<expr_stmt><expr><call><name pos:line="73" pos:column="25">graph_show_commit_msg<pos:position pos:line="73" pos:column="46"/></name><argument_list pos:line="73" pos:column="46">(<argument><expr><name><name pos:line="73" pos:column="47">revs<pos:position pos:line="73" pos:column="51"/></name><operator pos:line="73" pos:column="51">-&gt;<pos:position pos:line="73" pos:column="56"/></operator><name pos:line="73" pos:column="53">graph<pos:position pos:line="73" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="60">stdout<pos:position pos:line="73" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="68">&amp;<pos:position pos:line="73" pos:column="73"/></operator><name pos:line="73" pos:column="69">buf<pos:position pos:line="73" pos:column="72"/></name></expr></argument>)<pos:position pos:line="73" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="74"/></expr_stmt>

			<comment type="block" pos:line="75" pos:column="25">/*
			 * Add a newline after the commit message.
			 *
			 * Usually, this newline produces a blank
			 * padding line between entries, in which case
			 * we need to add graph padding on this line.
			 *
			 * However, the commit message may not end in a
			 * newline.  In this case the newline simply
			 * ends the last line of the commit message,
			 * and we don't need any graph output.  (This
			 * always happens with CMIT_FMT_ONELINE, and it
			 * happens with CMIT_FMT_USERFORMAT when the
			 * format doesn't explicitly end in a newline.)
			 */</comment>
			<if pos:line="90" pos:column="25">if <condition pos:line="90" pos:column="28">(<expr><name><name pos:line="90" pos:column="29">buf<pos:position pos:line="90" pos:column="32"/></name><operator pos:line="90" pos:column="32">.<pos:position pos:line="90" pos:column="33"/></operator><name pos:line="90" pos:column="33">len<pos:position pos:line="90" pos:column="36"/></name></name> <operator pos:line="90" pos:column="37">&amp;&amp;<pos:position pos:line="90" pos:column="47"/></operator> <name><name pos:line="90" pos:column="40">buf<pos:position pos:line="90" pos:column="43"/></name><operator pos:line="90" pos:column="43">.<pos:position pos:line="90" pos:column="44"/></operator><name pos:line="90" pos:column="44">buf<pos:position pos:line="90" pos:column="47"/></name><index pos:line="90" pos:column="47">[<expr><name><name pos:line="90" pos:column="48">buf<pos:position pos:line="90" pos:column="51"/></name><operator pos:line="90" pos:column="51">.<pos:position pos:line="90" pos:column="52"/></operator><name pos:line="90" pos:column="52">len<pos:position pos:line="90" pos:column="55"/></name></name> <operator pos:line="90" pos:column="56">-<pos:position pos:line="90" pos:column="57"/></operator> <literal type="number" pos:line="90" pos:column="58">1<pos:position pos:line="90" pos:column="59"/></literal></expr>]<pos:position pos:line="90" pos:column="60"/></index></name> <operator pos:line="90" pos:column="61">==<pos:position pos:line="90" pos:column="63"/></operator> <literal type="char" pos:line="90" pos:column="64">'\n'<pos:position pos:line="90" pos:column="68"/></literal></expr>)<pos:position pos:line="90" pos:column="69"/></condition><then pos:line="90" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="91" pos:column="33">graph_show_padding<pos:position pos:line="91" pos:column="51"/></name><argument_list pos:line="91" pos:column="51">(<argument><expr><name><name pos:line="91" pos:column="52">revs<pos:position pos:line="91" pos:column="56"/></name><operator pos:line="91" pos:column="56">-&gt;<pos:position pos:line="91" pos:column="61"/></operator><name pos:line="91" pos:column="58">graph<pos:position pos:line="91" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="65"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="92" pos:column="25">putchar<pos:position pos:line="92" pos:column="32"/></name><argument_list pos:line="92" pos:column="32">(<argument><expr><name><name pos:line="92" pos:column="33">info<pos:position pos:line="92" pos:column="37"/></name><operator pos:line="92" pos:column="37">-&gt;<pos:position pos:line="92" pos:column="42"/></operator><name pos:line="92" pos:column="39">hdr_termination<pos:position pos:line="92" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="93" pos:column="18"/></block></then> <else pos:line="93" pos:column="19">else <block pos:line="93" pos:column="24">{
			<comment type="block" pos:line="94" pos:column="25">/*
			 * If the message buffer is empty, just show
			 * the rest of the graph output for this
			 * commit.
			 */</comment>
			<if pos:line="99" pos:column="25">if <condition pos:line="99" pos:column="28">(<expr><call><name pos:line="99" pos:column="29">graph_show_remainder<pos:position pos:line="99" pos:column="49"/></name><argument_list pos:line="99" pos:column="49">(<argument><expr><name><name pos:line="99" pos:column="50">revs<pos:position pos:line="99" pos:column="54"/></name><operator pos:line="99" pos:column="54">-&gt;<pos:position pos:line="99" pos:column="59"/></operator><name pos:line="99" pos:column="56">graph<pos:position pos:line="99" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="63"/></condition><then pos:line="99" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="100" pos:column="33">putchar<pos:position pos:line="100" pos:column="40"/></name><argument_list pos:line="100" pos:column="40">(<argument><expr><literal type="char" pos:line="100" pos:column="41">'\n'<pos:position pos:line="100" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="47"/></expr_stmt></block></then></if>
			<if pos:line="101" pos:column="25">if <condition pos:line="101" pos:column="28">(<expr><name><name pos:line="101" pos:column="29">revs<pos:position pos:line="101" pos:column="33"/></name><operator pos:line="101" pos:column="33">-&gt;<pos:position pos:line="101" pos:column="38"/></operator><name pos:line="101" pos:column="35">commit_format<pos:position pos:line="101" pos:column="48"/></name></name> <operator pos:line="101" pos:column="49">==<pos:position pos:line="101" pos:column="51"/></operator> <name pos:line="101" pos:column="52">CMIT_FMT_ONELINE<pos:position pos:line="101" pos:column="68"/></name></expr>)<pos:position pos:line="101" pos:column="69"/></condition><then pos:line="101" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="33">putchar<pos:position pos:line="102" pos:column="40"/></name><argument_list pos:line="102" pos:column="40">(<argument><expr><literal type="char" pos:line="102" pos:column="41">'\n'<pos:position pos:line="102" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="47"/></expr_stmt></block></then></if>
		}<pos:position pos:line="103" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="104" pos:column="17">strbuf_release<pos:position pos:line="104" pos:column="31"/></name><argument_list pos:line="104" pos:column="31">(<argument><expr><operator pos:line="104" pos:column="32">&amp;<pos:position pos:line="104" pos:column="37"/></operator><name pos:line="104" pos:column="33">buf<pos:position pos:line="104" pos:column="36"/></name></expr></argument>)<pos:position pos:line="104" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="105" pos:column="10"/></block></then> <else pos:line="105" pos:column="11">else <block pos:line="105" pos:column="16">{
		<if pos:line="106" pos:column="17">if <condition pos:line="106" pos:column="20">(<expr><call><name pos:line="106" pos:column="21">graph_show_remainder<pos:position pos:line="106" pos:column="41"/></name><argument_list pos:line="106" pos:column="41">(<argument><expr><name><name pos:line="106" pos:column="42">revs<pos:position pos:line="106" pos:column="46"/></name><operator pos:line="106" pos:column="46">-&gt;<pos:position pos:line="106" pos:column="51"/></operator><name pos:line="106" pos:column="48">graph<pos:position pos:line="106" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="106" pos:column="55"/></condition><then pos:line="106" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="107" pos:column="25">putchar<pos:position pos:line="107" pos:column="32"/></name><argument_list pos:line="107" pos:column="32">(<argument><expr><literal type="char" pos:line="107" pos:column="33">'\n'<pos:position pos:line="107" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="39"/></expr_stmt></block></then></if>
	}<pos:position pos:line="108" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="109" pos:column="9">maybe_flush_or_die<pos:position pos:line="109" pos:column="27"/></name><argument_list pos:line="109" pos:column="27">(<argument><expr><name pos:line="109" pos:column="28">stdout<pos:position pos:line="109" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="36">"stdout"<pos:position pos:line="109" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="110" pos:column="9">finish_commit<pos:position pos:line="110" pos:column="22"/></name><argument_list pos:line="110" pos:column="22">(<argument><expr><name pos:line="110" pos:column="23">commit<pos:position pos:line="110" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="31">data<pos:position pos:line="110" pos:column="35"/></name></expr></argument>)<pos:position pos:line="110" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="37"/></expr_stmt>
}<pos:position pos:line="111" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5317_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">builtin_diff_index<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">rev_info<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">revs<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">argc<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier><modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">argv<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">cached<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><literal type="number" pos:line="5" pos:column="16">1<pos:position pos:line="5" pos:column="17"/></literal> <operator pos:line="5" pos:column="18">&lt;<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="20">argc<pos:position pos:line="5" pos:column="24"/></name></expr>)<pos:position pos:line="5" pos:column="25"/></condition> <block pos:line="5" pos:column="26">{
		<decl_stmt><decl><type><specifier pos:line="6" pos:column="17">const<pos:position pos:line="6" pos:column="22"/></specifier> <name pos:line="6" pos:column="23">char<pos:position pos:line="6" pos:column="27"/></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">arg<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><name><name pos:line="6" pos:column="35">argv<pos:position pos:line="6" pos:column="39"/></name><index pos:line="6" pos:column="39">[<expr><literal type="number" pos:line="6" pos:column="40">1<pos:position pos:line="6" pos:column="41"/></literal></expr>]<pos:position pos:line="6" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">!<pos:position pos:line="7" pos:column="22"/></operator><call><name pos:line="7" pos:column="22">strcmp<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">arg<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="34">"--cached"<pos:position pos:line="7" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call> <operator pos:line="7" pos:column="46">||<pos:position pos:line="7" pos:column="48"/></operator> <operator pos:line="7" pos:column="49">!<pos:position pos:line="7" pos:column="50"/></operator><call><name pos:line="7" pos:column="50">strcmp<pos:position pos:line="7" pos:column="56"/></name><argument_list pos:line="7" pos:column="56">(<argument><expr><name pos:line="7" pos:column="57">arg<pos:position pos:line="7" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="62">"--staged"<pos:position pos:line="7" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="74"/></condition><then pos:line="7" pos:column="74">
			<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="25">cached<pos:position pos:line="8" pos:column="31"/></name> <operator pos:line="8" pos:column="32">=<pos:position pos:line="8" pos:column="33"/></operator> <literal type="number" pos:line="8" pos:column="34">1<pos:position pos:line="8" pos:column="35"/></literal></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt></block></then>
		<else pos:line="9" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">usage<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">builtin_diff_usage<pos:position pos:line="10" pos:column="49"/></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="11" pos:column="17">argv<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">++<pos:position pos:line="11" pos:column="23"/></operator></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt> <expr_stmt><expr><name pos:line="11" pos:column="25">argc<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">--<pos:position pos:line="11" pos:column="31"/></operator></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></while>
	<comment type="block" pos:line="13" pos:column="9">/*
	 * Make sure there is one revision (i.e. pending object),
	 * and there is no revision filtering parameters.
	 */</comment>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">revs<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">pending<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">.<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">nr<pos:position pos:line="17" pos:column="29"/></name></name> <operator pos:line="17" pos:column="30">!=<pos:position pos:line="17" pos:column="32"/></operator> <literal type="number" pos:line="17" pos:column="33">1<pos:position pos:line="17" pos:column="34"/></literal> <operator pos:line="17" pos:column="35">||<pos:position pos:line="17" pos:column="37"/></operator>
	    <name><name pos:line="18" pos:column="13">revs<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">max_count<pos:position pos:line="18" pos:column="28"/></name></name> <operator pos:line="18" pos:column="29">!=<pos:position pos:line="18" pos:column="31"/></operator> <operator pos:line="18" pos:column="32">-<pos:position pos:line="18" pos:column="33"/></operator><literal type="number" pos:line="18" pos:column="33">1<pos:position pos:line="18" pos:column="34"/></literal> <operator pos:line="18" pos:column="35">||<pos:position pos:line="18" pos:column="37"/></operator> <name><name pos:line="18" pos:column="38">revs<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">-&gt;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="44">min_age<pos:position pos:line="18" pos:column="51"/></name></name> <operator pos:line="18" pos:column="52">!=<pos:position pos:line="18" pos:column="54"/></operator> <operator pos:line="18" pos:column="55">-<pos:position pos:line="18" pos:column="56"/></operator><literal type="number" pos:line="18" pos:column="56">1<pos:position pos:line="18" pos:column="57"/></literal> <operator pos:line="18" pos:column="58">||<pos:position pos:line="18" pos:column="60"/></operator>
	    <name><name pos:line="19" pos:column="13">revs<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">max_age<pos:position pos:line="19" pos:column="26"/></name></name> <operator pos:line="19" pos:column="27">!=<pos:position pos:line="19" pos:column="29"/></operator> <operator pos:line="19" pos:column="30">-<pos:position pos:line="19" pos:column="31"/></operator><literal type="number" pos:line="19" pos:column="31">1<pos:position pos:line="19" pos:column="32"/></literal></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">usage<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">builtin_diff_usage<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">cached<pos:position pos:line="21" pos:column="20"/></name></expr>)<pos:position pos:line="21" pos:column="21"/></condition><then pos:line="21" pos:column="21"> <block pos:line="21" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">setup_work_tree<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">()<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><call><name pos:line="23" pos:column="21">read_cache_preload<pos:position pos:line="23" pos:column="39"/></name><argument_list pos:line="23" pos:column="39">(<argument><expr><operator pos:line="23" pos:column="40">&amp;<pos:position pos:line="23" pos:column="45"/></operator><name><name pos:line="23" pos:column="41">revs<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">-&gt;<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="47">diffopt<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">.<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="55">pathspec<pos:position pos:line="23" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call> <operator pos:line="23" pos:column="65">&lt;<pos:position pos:line="23" pos:column="69"/></operator> <literal type="number" pos:line="23" pos:column="67">0<pos:position pos:line="23" pos:column="68"/></literal></expr>)<pos:position pos:line="23" pos:column="69"/></condition><then pos:line="23" pos:column="69"> <block pos:line="23" pos:column="70">{
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">perror<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><literal type="string" pos:line="24" pos:column="32">"read_cache_preload"<pos:position pos:line="24" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt>
			<return pos:line="25" pos:column="25">return <expr><operator pos:line="25" pos:column="32">-<pos:position pos:line="25" pos:column="33"/></operator><literal type="number" pos:line="25" pos:column="33">1<pos:position pos:line="25" pos:column="34"/></literal></expr>;<pos:position pos:line="25" pos:column="35"/></return>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></then> <elseif pos:line="27" pos:column="11">else <if pos:line="27" pos:column="16">if <condition pos:line="27" pos:column="19">(<expr><call><name pos:line="27" pos:column="20">read_cache<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">()<pos:position pos:line="27" pos:column="32"/></argument_list></call> <operator pos:line="27" pos:column="33">&lt;<pos:position pos:line="27" pos:column="37"/></operator> <literal type="number" pos:line="27" pos:column="35">0<pos:position pos:line="27" pos:column="36"/></literal></expr>)<pos:position pos:line="27" pos:column="37"/></condition><then pos:line="27" pos:column="37"> <block pos:line="27" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">perror<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><literal type="string" pos:line="28" pos:column="24">"read_cache"<pos:position pos:line="28" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
		<return pos:line="29" pos:column="17">return <expr><operator pos:line="29" pos:column="24">-<pos:position pos:line="29" pos:column="25"/></operator><literal type="number" pos:line="29" pos:column="25">1<pos:position pos:line="29" pos:column="26"/></literal></expr>;<pos:position pos:line="29" pos:column="27"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if></elseif></if>
	<return pos:line="31" pos:column="9">return <expr><call><name pos:line="31" pos:column="16">run_diff_index<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">revs<pos:position pos:line="31" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="37">cached<pos:position pos:line="31" pos:column="43"/></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="45"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

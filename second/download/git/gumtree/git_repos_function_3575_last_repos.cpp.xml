<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3575_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">is_cmarker<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">buf<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">marker_char<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">marker_size<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">want_sp<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/*
	 * The beginning of our version and the end of their version
	 * always are labeled like "&lt;&lt;&lt;&lt;&lt; ours" or "&gt;&gt;&gt;&gt;&gt; theirs",
	 * hence we set want_sp for them.  Note that the version from
	 * the common ancestor in diff3-style output is not always
	 * labelled (e.g. "||||| common" is often seen but "|||||"
	 * alone is also valid), so we do not set want_sp.
	 */</comment>
	<expr_stmt><expr><name pos:line="13" pos:column="9">want_sp<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <operator pos:line="13" pos:column="19">(<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">marker_char<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">==<pos:position pos:line="13" pos:column="34"/></operator> <literal type="char" pos:line="13" pos:column="35">'&lt;'<pos:position pos:line="13" pos:column="41"/></literal><operator pos:line="13" pos:column="38">)<pos:position pos:line="13" pos:column="39"/></operator> <operator pos:line="13" pos:column="40">||<pos:position pos:line="13" pos:column="42"/></operator> <operator pos:line="13" pos:column="43">(<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="44">marker_char<pos:position pos:line="13" pos:column="55"/></name> <operator pos:line="13" pos:column="56">==<pos:position pos:line="13" pos:column="58"/></operator> <literal type="char" pos:line="13" pos:column="59">'&gt;'<pos:position pos:line="13" pos:column="65"/></literal><operator pos:line="13" pos:column="62">)<pos:position pos:line="13" pos:column="63"/></operator></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt>

	<while pos:line="15" pos:column="9">while <condition pos:line="15" pos:column="15">(<expr><name pos:line="15" pos:column="16">marker_size<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">--<pos:position pos:line="15" pos:column="29"/></operator></expr>)<pos:position pos:line="15" pos:column="30"/></condition>
		<block type="pseudo"><if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">*<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">buf<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">++<pos:position pos:line="16" pos:column="27"/></operator> <operator pos:line="16" pos:column="28">!=<pos:position pos:line="16" pos:column="30"/></operator> <name pos:line="16" pos:column="31">marker_char<pos:position pos:line="16" pos:column="42"/></name></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43">
			<block type="pseudo"><return pos:line="17" pos:column="25">return <expr><literal type="number" pos:line="17" pos:column="32">0<pos:position pos:line="17" pos:column="33"/></literal></expr>;<pos:position pos:line="17" pos:column="34"/></return></block></then></if></block></while>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">want_sp<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">&amp;&amp;<pos:position pos:line="18" pos:column="31"/></operator> <operator pos:line="18" pos:column="24">*<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">buf<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">!=<pos:position pos:line="18" pos:column="31"/></operator> <literal type="char" pos:line="18" pos:column="32">' '<pos:position pos:line="18" pos:column="35"/></literal></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></return></block></then></if>
	<return pos:line="20" pos:column="9">return <expr><call><name pos:line="20" pos:column="16">isspace<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><operator pos:line="20" pos:column="24">*<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">buf<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3147_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">prepare_prefixes<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">name<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">len<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="2" pos:column="29">unsigned<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">bin_pfx<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="3" pos:column="29">char<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">hex_pfx<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="43"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">hashclr<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><name pos:line="7" pos:column="17">bin_pfx<pos:position pos:line="7" pos:column="24"/></name></expr></argument>)<pos:position pos:line="7" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">memset<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">hex_pfx<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="25">'x'<pos:position pos:line="8" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="30">40<pos:position pos:line="8" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>
	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">i<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></init> <condition><expr><name pos:line="9" pos:column="21">i<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="25">len<pos:position pos:line="9" pos:column="28"/></name></expr> ;<pos:position pos:line="9" pos:column="30"/></condition><incr><expr><name pos:line="9" pos:column="30">i<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">++<pos:position pos:line="9" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="34"/></control> <block pos:line="9" pos:column="35">{
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">unsigned<pos:position pos:line="10" pos:column="25"/></name> <name pos:line="10" pos:column="26">char<pos:position pos:line="10" pos:column="30"/></name></type> <name pos:line="10" pos:column="31">c<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><name><name pos:line="10" pos:column="35">name<pos:position pos:line="10" pos:column="39"/></name><index pos:line="10" pos:column="39">[<expr><name pos:line="10" pos:column="40">i<pos:position pos:line="10" pos:column="41"/></name></expr>]<pos:position pos:line="10" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="10" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">unsigned<pos:position pos:line="11" pos:column="25"/></name> <name pos:line="11" pos:column="26">char<pos:position pos:line="11" pos:column="30"/></name></type> <name pos:line="11" pos:column="31">val<pos:position pos:line="11" pos:column="34"/></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">c<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&gt;=<pos:position pos:line="12" pos:column="28"/></operator> <literal type="char" pos:line="12" pos:column="26">'0'<pos:position pos:line="12" pos:column="29"/></literal> <operator pos:line="12" pos:column="30">&amp;&amp;<pos:position pos:line="12" pos:column="40"/></operator> <name pos:line="12" pos:column="33">c<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">&lt;=<pos:position pos:line="12" pos:column="40"/></operator> <literal type="char" pos:line="12" pos:column="38">'9'<pos:position pos:line="12" pos:column="41"/></literal></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">val<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <name pos:line="13" pos:column="31">c<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">-<pos:position pos:line="13" pos:column="34"/></operator> <literal type="char" pos:line="13" pos:column="35">'0'<pos:position pos:line="13" pos:column="38"/></literal></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt></block></then>
		<elseif pos:line="14" pos:column="17">else <if pos:line="14" pos:column="22">if <condition pos:line="14" pos:column="25">(<expr><name pos:line="14" pos:column="26">c<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">&gt;=<pos:position pos:line="14" pos:column="33"/></operator> <literal type="char" pos:line="14" pos:column="31">'a'<pos:position pos:line="14" pos:column="34"/></literal> <operator pos:line="14" pos:column="35">&amp;&amp;<pos:position pos:line="14" pos:column="45"/></operator> <name pos:line="14" pos:column="38">c<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">&lt;=<pos:position pos:line="14" pos:column="45"/></operator> <literal type="char" pos:line="14" pos:column="43">'f'<pos:position pos:line="14" pos:column="46"/></literal></expr>)<pos:position pos:line="14" pos:column="47"/></condition><then pos:line="14" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">val<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <name pos:line="15" pos:column="31">c<pos:position pos:line="15" pos:column="32"/></name> <operator pos:line="15" pos:column="33">-<pos:position pos:line="15" pos:column="34"/></operator> <literal type="char" pos:line="15" pos:column="35">'a'<pos:position pos:line="15" pos:column="38"/></literal> <operator pos:line="15" pos:column="39">+<pos:position pos:line="15" pos:column="40"/></operator> <literal type="number" pos:line="15" pos:column="41">10<pos:position pos:line="15" pos:column="43"/></literal></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="16" pos:column="17">else <if pos:line="16" pos:column="22">if <condition pos:line="16" pos:column="25">(<expr><name pos:line="16" pos:column="26">c<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">&gt;=<pos:position pos:line="16" pos:column="33"/></operator> <literal type="char" pos:line="16" pos:column="31">'A'<pos:position pos:line="16" pos:column="34"/></literal> <operator pos:line="16" pos:column="35">&amp;&amp;<pos:position pos:line="16" pos:column="45"/></operator> <name pos:line="16" pos:column="38">c<pos:position pos:line="16" pos:column="39"/></name> <operator pos:line="16" pos:column="40">&lt;=<pos:position pos:line="16" pos:column="45"/></operator><literal type="char" pos:line="16" pos:column="42">'F'<pos:position pos:line="16" pos:column="45"/></literal></expr>)<pos:position pos:line="16" pos:column="46"/></condition><then pos:line="16" pos:column="46"> <block pos:line="16" pos:column="47">{
			<expr_stmt><expr><name pos:line="17" pos:column="25">val<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">=<pos:position pos:line="17" pos:column="30"/></operator> <name pos:line="17" pos:column="31">c<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">-<pos:position pos:line="17" pos:column="34"/></operator> <literal type="char" pos:line="17" pos:column="35">'A'<pos:position pos:line="17" pos:column="38"/></literal> <operator pos:line="17" pos:column="39">+<pos:position pos:line="17" pos:column="40"/></operator> <literal type="number" pos:line="17" pos:column="41">10<pos:position pos:line="17" pos:column="43"/></literal></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="18" pos:column="25">c<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">-=<pos:position pos:line="18" pos:column="29"/></operator> <literal type="char" pos:line="18" pos:column="30">'A'<pos:position pos:line="18" pos:column="33"/></literal> <operator pos:line="18" pos:column="34">-<pos:position pos:line="18" pos:column="35"/></operator> <literal type="char" pos:line="18" pos:column="36">'a'<pos:position pos:line="18" pos:column="39"/></literal></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if></elseif>
		<else pos:line="20" pos:column="17">else
			<block type="pseudo"><return pos:line="21" pos:column="25">return <expr><operator pos:line="21" pos:column="32">-<pos:position pos:line="21" pos:column="33"/></operator><literal type="number" pos:line="21" pos:column="33">1<pos:position pos:line="21" pos:column="34"/></literal></expr>;<pos:position pos:line="21" pos:column="35"/></return></block></else></if>
		<expr_stmt><expr><name><name pos:line="22" pos:column="17">hex_pfx<pos:position pos:line="22" pos:column="24"/></name><index pos:line="22" pos:column="24">[<expr><name pos:line="22" pos:column="25">i<pos:position pos:line="22" pos:column="26"/></name></expr>]<pos:position pos:line="22" pos:column="27"/></index></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <name pos:line="22" pos:column="30">c<pos:position pos:line="22" pos:column="31"/></name></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><operator pos:line="23" pos:column="22">(<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">i<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">&amp;<pos:position pos:line="23" pos:column="30"/></operator> <literal type="number" pos:line="23" pos:column="27">1<pos:position pos:line="23" pos:column="28"/></literal><operator pos:line="23" pos:column="28">)<pos:position pos:line="23" pos:column="29"/></operator></expr>)<pos:position pos:line="23" pos:column="30"/></condition><then pos:line="23" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">val<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">&lt;&lt;=<pos:position pos:line="24" pos:column="38"/></operator> <literal type="number" pos:line="24" pos:column="33">4<pos:position pos:line="24" pos:column="34"/></literal></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">bin_pfx<pos:position pos:line="25" pos:column="24"/></name><index pos:line="25" pos:column="24">[<expr><name pos:line="25" pos:column="25">i<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">&gt;&gt;<pos:position pos:line="25" pos:column="32"/></operator> <literal type="number" pos:line="25" pos:column="30">1<pos:position pos:line="25" pos:column="31"/></literal></expr>]<pos:position pos:line="25" pos:column="32"/></index></name> <operator pos:line="25" pos:column="33">|=<pos:position pos:line="25" pos:column="35"/></operator> <name pos:line="25" pos:column="36">val<pos:position pos:line="25" pos:column="39"/></name></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></for>
	<return pos:line="27" pos:column="9">return <expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

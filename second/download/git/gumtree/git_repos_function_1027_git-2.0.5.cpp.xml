<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1027_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">strip_prefix<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">int<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">prefix_length<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier><modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">namep<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="65">const<pos:position pos:line="1" pos:column="70"/></specifier> <name pos:line="1" pos:column="71">char<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier><modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">otherp<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/* Strip the prefix but do not molest /dev/null and absolute paths */</comment>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">namep<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">&amp;&amp;<pos:position pos:line="4" pos:column="30"/></operator> <operator pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></operator><operator pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">namep<pos:position pos:line="4" pos:column="30"/></name> <operator pos:line="4" pos:column="31">!=<pos:position pos:line="4" pos:column="33"/></operator> <literal type="char" pos:line="4" pos:column="34">'/'<pos:position pos:line="4" pos:column="37"/></literal></expr>)<pos:position pos:line="4" pos:column="38"/></condition><then pos:line="4" pos:column="38"> <block pos:line="4" pos:column="39">{
		<expr_stmt><expr><operator pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">namep<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">+=<pos:position pos:line="5" pos:column="26"/></operator> <name pos:line="5" pos:column="27">prefix_length<pos:position pos:line="5" pos:column="40"/></name></expr>;<pos:position pos:line="5" pos:column="41"/></expr_stmt>
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><operator pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></operator><operator pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">namep<pos:position pos:line="6" pos:column="28"/></name> <operator pos:line="6" pos:column="29">==<pos:position pos:line="6" pos:column="31"/></operator> <literal type="char" pos:line="6" pos:column="32">'/'<pos:position pos:line="6" pos:column="35"/></literal></expr>)<pos:position pos:line="6" pos:column="36"/></condition><then pos:line="6" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="7" pos:column="25">++<pos:position pos:line="7" pos:column="27"/></operator><operator pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">namep<pos:position pos:line="7" pos:column="33"/></name></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt></block></then></if>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">otherp<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">&amp;&amp;<pos:position pos:line="9" pos:column="31"/></operator> <operator pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></operator><operator pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">otherp<pos:position pos:line="9" pos:column="32"/></name> <operator pos:line="9" pos:column="33">!=<pos:position pos:line="9" pos:column="35"/></operator> <literal type="char" pos:line="9" pos:column="36">'/'<pos:position pos:line="9" pos:column="39"/></literal></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40"> <block pos:line="9" pos:column="41">{
		<expr_stmt><expr><operator pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">otherp<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">+=<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="28">prefix_length<pos:position pos:line="10" pos:column="41"/></name></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></operator><operator pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">otherp<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">==<pos:position pos:line="11" pos:column="32"/></operator> <literal type="char" pos:line="11" pos:column="33">'/'<pos:position pos:line="11" pos:column="36"/></literal></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="12" pos:column="25">++<pos:position pos:line="12" pos:column="27"/></operator><operator pos:line="12" pos:column="27">*<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">otherp<pos:position pos:line="12" pos:column="34"/></name></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt></block></then></if>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

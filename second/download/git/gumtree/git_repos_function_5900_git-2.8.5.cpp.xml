<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5900_git-2.8.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">inet_ntop6<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">u_char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">src<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">dst<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">size_t<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">size<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<comment type="block" pos:line="4" pos:column="9">/*
	 * Note that int32_t and int16_t need only be "at least" large enough
	 * to contain a value of the specified size.  On some systems, like
	 * Crays, there is no such thing as an integer variable with 16 bits.
	 * Keep this in mind if you think this function should have been coded
	 * to use pointer overlays.  All the world's not a VAX.
	 */</comment>
	<expr_stmt><expr><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <name><name pos:line="11" pos:column="14">tmp<pos:position pos:line="11" pos:column="17"/></name><index pos:line="11" pos:column="17">[<expr><sizeof pos:line="11" pos:column="18">sizeof <name><pos:position pos:line="11" pos:column="25"/></name></sizeof></expr></index></name>"ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255"]<pos:position pos:line="11" pos:column="73"/></expr><operator pos:line="11" pos:column="73">,<pos:position pos:line="11" pos:column="74"/></operator> <expr><operator pos:line="11" pos:column="75">*<pos:position pos:line="11" pos:column="76"/></operator><name pos:line="11" pos:column="76">tp<pos:position pos:line="11" pos:column="78"/></name></expr>;<pos:position pos:line="11" pos:column="79"/></expr_stmt>
	<struct pos:line="12" pos:column="9">struct <block pos:line="12" pos:column="16">{<public type="default" pos:line="12" pos:column="17"> <decl_stmt><decl><type><name pos:line="12" pos:column="18">int<pos:position pos:line="12" pos:column="21"/></name></type> <name pos:line="12" pos:column="22">base<pos:position pos:line="12" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="28">len<pos:position pos:line="12" pos:column="31"/></name></decl>;<pos:position pos:line="12" pos:column="32"/></decl_stmt> <pos:position pos:line="12" pos:column="33"/></public>}<pos:position pos:line="12" pos:column="34"/></block> <decl><name pos:line="12" pos:column="35">best<pos:position pos:line="12" pos:column="39"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="41">cur<pos:position pos:line="12" pos:column="44"/></name></decl>;<pos:position pos:line="12" pos:column="45"/></struct>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">unsigned<pos:position pos:line="13" pos:column="17"/></name> <name pos:line="13" pos:column="18">int<pos:position pos:line="13" pos:column="21"/></name></type> <name><name pos:line="13" pos:column="22">words<pos:position pos:line="13" pos:column="27"/></name><index pos:line="13" pos:column="27">[<expr><name pos:line="13" pos:column="28">NS_IN6ADDRSZ<pos:position pos:line="13" pos:column="40"/></name> <operator pos:line="13" pos:column="41">/<pos:position pos:line="13" pos:column="42"/></operator> <name pos:line="13" pos:column="43">NS_INT16SZ<pos:position pos:line="13" pos:column="53"/></name></expr>]<pos:position pos:line="13" pos:column="54"/></index></name></decl>;<pos:position pos:line="13" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">i<pos:position pos:line="14" pos:column="14"/></name></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="16" pos:column="9">/*
	 * Preprocess:
	 *	Copy the input (bytewise) array into a wordwise array.
	 *	Find the longest run of 0x00's in src[] for :: shorthanding.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">memset<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">words<pos:position pos:line="21" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="23">'\0'<pos:position pos:line="21" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="29">sizeof <name pos:line="21" pos:column="36">words<pos:position pos:line="21" pos:column="41"/></name></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt>
	<for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">i<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></init> <condition><expr><name pos:line="22" pos:column="21">i<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">&lt;<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="25">NS_IN6ADDRSZ<pos:position pos:line="22" pos:column="37"/></name></expr>;<pos:position pos:line="22" pos:column="38"/></condition> <incr><expr><name pos:line="22" pos:column="39">i<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">++<pos:position pos:line="22" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="43"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="17">words<pos:position pos:line="23" pos:column="22"/></name><index pos:line="23" pos:column="22">[<expr><name pos:line="23" pos:column="23">i<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">/<pos:position pos:line="23" pos:column="26"/></operator> <literal type="number" pos:line="23" pos:column="27">2<pos:position pos:line="23" pos:column="28"/></literal></expr>]<pos:position pos:line="23" pos:column="29"/></index></name> <operator pos:line="23" pos:column="30">|=<pos:position pos:line="23" pos:column="32"/></operator> <operator pos:line="23" pos:column="33">(<pos:position pos:line="23" pos:column="34"/></operator><name><name pos:line="23" pos:column="34">src<pos:position pos:line="23" pos:column="37"/></name><index pos:line="23" pos:column="37">[<expr><name pos:line="23" pos:column="38">i<pos:position pos:line="23" pos:column="39"/></name></expr>]<pos:position pos:line="23" pos:column="40"/></index></name> <operator pos:line="23" pos:column="41">&lt;&lt;<pos:position pos:line="23" pos:column="49"/></operator> <operator pos:line="23" pos:column="44">(<pos:position pos:line="23" pos:column="45"/></operator><operator pos:line="23" pos:column="45">(<pos:position pos:line="23" pos:column="46"/></operator><literal type="number" pos:line="23" pos:column="46">1<pos:position pos:line="23" pos:column="47"/></literal> <operator pos:line="23" pos:column="48">-<pos:position pos:line="23" pos:column="49"/></operator> <operator pos:line="23" pos:column="50">(<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="51">i<pos:position pos:line="23" pos:column="52"/></name> <operator pos:line="23" pos:column="53">%<pos:position pos:line="23" pos:column="54"/></operator> <literal type="number" pos:line="23" pos:column="55">2<pos:position pos:line="23" pos:column="56"/></literal><operator pos:line="23" pos:column="56">)<pos:position pos:line="23" pos:column="57"/></operator><operator pos:line="23" pos:column="57">)<pos:position pos:line="23" pos:column="58"/></operator> <operator pos:line="23" pos:column="59">&lt;&lt;<pos:position pos:line="23" pos:column="67"/></operator> <literal type="number" pos:line="23" pos:column="62">3<pos:position pos:line="23" pos:column="63"/></literal><operator pos:line="23" pos:column="63">)<pos:position pos:line="23" pos:column="64"/></operator><operator pos:line="23" pos:column="64">)<pos:position pos:line="23" pos:column="65"/></operator></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt></block></for>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">best<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">.<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">base<pos:position pos:line="24" pos:column="18"/></name></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <operator pos:line="24" pos:column="21">-<pos:position pos:line="24" pos:column="22"/></operator><literal type="number" pos:line="24" pos:column="22">1<pos:position pos:line="24" pos:column="23"/></literal></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">best<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">.<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">len<pos:position pos:line="25" pos:column="17"/></name></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <literal type="number" pos:line="25" pos:column="20">0<pos:position pos:line="25" pos:column="21"/></literal></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="26" pos:column="9">cur<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">.<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="13">base<pos:position pos:line="26" pos:column="17"/></name></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <operator pos:line="26" pos:column="20">-<pos:position pos:line="26" pos:column="21"/></operator><literal type="number" pos:line="26" pos:column="21">1<pos:position pos:line="26" pos:column="22"/></literal></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">cur<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">.<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">len<pos:position pos:line="27" pos:column="16"/></name></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <literal type="number" pos:line="27" pos:column="19">0<pos:position pos:line="27" pos:column="20"/></literal></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
	<for pos:line="28" pos:column="9">for <control pos:line="28" pos:column="13">(<init><expr><name pos:line="28" pos:column="14">i<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <literal type="number" pos:line="28" pos:column="18">0<pos:position pos:line="28" pos:column="19"/></literal></expr>;<pos:position pos:line="28" pos:column="20"/></init> <condition><expr><name pos:line="28" pos:column="21">i<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">&lt;<pos:position pos:line="28" pos:column="27"/></operator> <operator pos:line="28" pos:column="25">(<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="26">NS_IN6ADDRSZ<pos:position pos:line="28" pos:column="38"/></name> <operator pos:line="28" pos:column="39">/<pos:position pos:line="28" pos:column="40"/></operator> <name pos:line="28" pos:column="41">NS_INT16SZ<pos:position pos:line="28" pos:column="51"/></name><operator pos:line="28" pos:column="51">)<pos:position pos:line="28" pos:column="52"/></operator></expr>;<pos:position pos:line="28" pos:column="53"/></condition> <incr><expr><name pos:line="28" pos:column="54">i<pos:position pos:line="28" pos:column="55"/></name><operator pos:line="28" pos:column="55">++<pos:position pos:line="28" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="58"/></control> <block pos:line="28" pos:column="59">{
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name><name pos:line="29" pos:column="21">words<pos:position pos:line="29" pos:column="26"/></name><index pos:line="29" pos:column="26">[<expr><name pos:line="29" pos:column="27">i<pos:position pos:line="29" pos:column="28"/></name></expr>]<pos:position pos:line="29" pos:column="29"/></index></name> <operator pos:line="29" pos:column="30">==<pos:position pos:line="29" pos:column="32"/></operator> <literal type="number" pos:line="29" pos:column="33">0<pos:position pos:line="29" pos:column="34"/></literal></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35"> <block pos:line="29" pos:column="36">{
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><name><name pos:line="30" pos:column="29">cur<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">.<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="33">base<pos:position pos:line="30" pos:column="37"/></name></name> <operator pos:line="30" pos:column="38">==<pos:position pos:line="30" pos:column="40"/></operator> <operator pos:line="30" pos:column="41">-<pos:position pos:line="30" pos:column="42"/></operator><literal type="number" pos:line="30" pos:column="42">1<pos:position pos:line="30" pos:column="43"/></literal></expr>)<pos:position pos:line="30" pos:column="44"/></condition><then pos:line="30" pos:column="44">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="33">cur<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">.<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="37">base<pos:position pos:line="31" pos:column="41"/></name></name> <operator pos:line="31" pos:column="42">=<pos:position pos:line="31" pos:column="43"/></operator> <name pos:line="31" pos:column="44">i<pos:position pos:line="31" pos:column="45"/></name></expr><operator pos:line="31" pos:column="45">,<pos:position pos:line="31" pos:column="46"/></operator> <expr><name><name pos:line="31" pos:column="47">cur<pos:position pos:line="31" pos:column="50"/></name><operator pos:line="31" pos:column="50">.<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="51">len<pos:position pos:line="31" pos:column="54"/></name></name> <operator pos:line="31" pos:column="55">=<pos:position pos:line="31" pos:column="56"/></operator> <literal type="number" pos:line="31" pos:column="57">1<pos:position pos:line="31" pos:column="58"/></literal></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt></block></then>
			<else pos:line="32" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="33" pos:column="33">cur<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">.<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="37">len<pos:position pos:line="33" pos:column="40"/></name></name><operator pos:line="33" pos:column="40">++<pos:position pos:line="33" pos:column="42"/></operator></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt></block></else></if>
		}<pos:position pos:line="34" pos:column="18"/></block></then> <else pos:line="34" pos:column="19">else <block pos:line="34" pos:column="24">{
			<if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><name><name pos:line="35" pos:column="29">cur<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">.<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="33">base<pos:position pos:line="35" pos:column="37"/></name></name> <operator pos:line="35" pos:column="38">!=<pos:position pos:line="35" pos:column="40"/></operator> <operator pos:line="35" pos:column="41">-<pos:position pos:line="35" pos:column="42"/></operator><literal type="number" pos:line="35" pos:column="42">1<pos:position pos:line="35" pos:column="43"/></literal></expr>)<pos:position pos:line="35" pos:column="44"/></condition><then pos:line="35" pos:column="44"> <block pos:line="35" pos:column="45">{
				<if pos:line="36" pos:column="33">if <condition pos:line="36" pos:column="36">(<expr><name><name pos:line="36" pos:column="37">best<pos:position pos:line="36" pos:column="41"/></name><operator pos:line="36" pos:column="41">.<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="42">base<pos:position pos:line="36" pos:column="46"/></name></name> <operator pos:line="36" pos:column="47">==<pos:position pos:line="36" pos:column="49"/></operator> <operator pos:line="36" pos:column="50">-<pos:position pos:line="36" pos:column="51"/></operator><literal type="number" pos:line="36" pos:column="51">1<pos:position pos:line="36" pos:column="52"/></literal> <operator pos:line="36" pos:column="53">||<pos:position pos:line="36" pos:column="55"/></operator> <name><name pos:line="36" pos:column="56">cur<pos:position pos:line="36" pos:column="59"/></name><operator pos:line="36" pos:column="59">.<pos:position pos:line="36" pos:column="60"/></operator><name pos:line="36" pos:column="60">len<pos:position pos:line="36" pos:column="63"/></name></name> <operator pos:line="36" pos:column="64">&gt;<pos:position pos:line="36" pos:column="68"/></operator> <name><name pos:line="36" pos:column="66">best<pos:position pos:line="36" pos:column="70"/></name><operator pos:line="36" pos:column="70">.<pos:position pos:line="36" pos:column="71"/></operator><name pos:line="36" pos:column="71">len<pos:position pos:line="36" pos:column="74"/></name></name></expr>)<pos:position pos:line="36" pos:column="75"/></condition><then pos:line="36" pos:column="75">
					<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="41">best<pos:position pos:line="37" pos:column="45"/></name> <operator pos:line="37" pos:column="46">=<pos:position pos:line="37" pos:column="47"/></operator> <name pos:line="37" pos:column="48">cur<pos:position pos:line="37" pos:column="51"/></name></expr>;<pos:position pos:line="37" pos:column="52"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name><name pos:line="38" pos:column="33">cur<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">.<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="37">base<pos:position pos:line="38" pos:column="41"/></name></name> <operator pos:line="38" pos:column="42">=<pos:position pos:line="38" pos:column="43"/></operator> <operator pos:line="38" pos:column="44">-<pos:position pos:line="38" pos:column="45"/></operator><literal type="number" pos:line="38" pos:column="45">1<pos:position pos:line="38" pos:column="46"/></literal></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>
			}<pos:position pos:line="39" pos:column="26"/></block></then></if>
		}<pos:position pos:line="40" pos:column="18"/></block></else></if>
	}<pos:position pos:line="41" pos:column="10"/></block></for>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name><name pos:line="42" pos:column="13">cur<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">.<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="17">base<pos:position pos:line="42" pos:column="21"/></name></name> <operator pos:line="42" pos:column="22">!=<pos:position pos:line="42" pos:column="24"/></operator> <operator pos:line="42" pos:column="25">-<pos:position pos:line="42" pos:column="26"/></operator><literal type="number" pos:line="42" pos:column="26">1<pos:position pos:line="42" pos:column="27"/></literal></expr>)<pos:position pos:line="42" pos:column="28"/></condition><then pos:line="42" pos:column="28"> <block pos:line="42" pos:column="29">{
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name><name pos:line="43" pos:column="21">best<pos:position pos:line="43" pos:column="25"/></name><operator pos:line="43" pos:column="25">.<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="26">base<pos:position pos:line="43" pos:column="30"/></name></name> <operator pos:line="43" pos:column="31">==<pos:position pos:line="43" pos:column="33"/></operator> <operator pos:line="43" pos:column="34">-<pos:position pos:line="43" pos:column="35"/></operator><literal type="number" pos:line="43" pos:column="35">1<pos:position pos:line="43" pos:column="36"/></literal> <operator pos:line="43" pos:column="37">||<pos:position pos:line="43" pos:column="39"/></operator> <name><name pos:line="43" pos:column="40">cur<pos:position pos:line="43" pos:column="43"/></name><operator pos:line="43" pos:column="43">.<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="44">len<pos:position pos:line="43" pos:column="47"/></name></name> <operator pos:line="43" pos:column="48">&gt;<pos:position pos:line="43" pos:column="52"/></operator> <name><name pos:line="43" pos:column="50">best<pos:position pos:line="43" pos:column="54"/></name><operator pos:line="43" pos:column="54">.<pos:position pos:line="43" pos:column="55"/></operator><name pos:line="43" pos:column="55">len<pos:position pos:line="43" pos:column="58"/></name></name></expr>)<pos:position pos:line="43" pos:column="59"/></condition><then pos:line="43" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="25">best<pos:position pos:line="44" pos:column="29"/></name> <operator pos:line="44" pos:column="30">=<pos:position pos:line="44" pos:column="31"/></operator> <name pos:line="44" pos:column="32">cur<pos:position pos:line="44" pos:column="35"/></name></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt></block></then></if>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name><name pos:line="46" pos:column="13">best<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">.<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">base<pos:position pos:line="46" pos:column="22"/></name></name> <operator pos:line="46" pos:column="23">!=<pos:position pos:line="46" pos:column="25"/></operator> <operator pos:line="46" pos:column="26">-<pos:position pos:line="46" pos:column="27"/></operator><literal type="number" pos:line="46" pos:column="27">1<pos:position pos:line="46" pos:column="28"/></literal> <operator pos:line="46" pos:column="29">&amp;&amp;<pos:position pos:line="46" pos:column="39"/></operator> <name><name pos:line="46" pos:column="32">best<pos:position pos:line="46" pos:column="36"/></name><operator pos:line="46" pos:column="36">.<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="37">len<pos:position pos:line="46" pos:column="40"/></name></name> <operator pos:line="46" pos:column="41">&lt;<pos:position pos:line="46" pos:column="45"/></operator> <literal type="number" pos:line="46" pos:column="43">2<pos:position pos:line="46" pos:column="44"/></literal></expr>)<pos:position pos:line="46" pos:column="45"/></condition><then pos:line="46" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="17">best<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">.<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="22">base<pos:position pos:line="47" pos:column="26"/></name></name> <operator pos:line="47" pos:column="27">=<pos:position pos:line="47" pos:column="28"/></operator> <operator pos:line="47" pos:column="29">-<pos:position pos:line="47" pos:column="30"/></operator><literal type="number" pos:line="47" pos:column="30">1<pos:position pos:line="47" pos:column="31"/></literal></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="49" pos:column="9">/*
	 * Format the result.
	 */</comment>
	<expr_stmt><expr><name pos:line="52" pos:column="9">tp<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator> <name pos:line="52" pos:column="14">tmp<pos:position pos:line="52" pos:column="17"/></name></expr>;<pos:position pos:line="52" pos:column="18"/></expr_stmt>
	<for pos:line="53" pos:column="9">for <control pos:line="53" pos:column="13">(<init><expr><name pos:line="53" pos:column="14">i<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <literal type="number" pos:line="53" pos:column="18">0<pos:position pos:line="53" pos:column="19"/></literal></expr>;<pos:position pos:line="53" pos:column="20"/></init> <condition><expr><name pos:line="53" pos:column="21">i<pos:position pos:line="53" pos:column="22"/></name> <operator pos:line="53" pos:column="23">&lt;<pos:position pos:line="53" pos:column="27"/></operator> <operator pos:line="53" pos:column="25">(<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="26">NS_IN6ADDRSZ<pos:position pos:line="53" pos:column="38"/></name> <operator pos:line="53" pos:column="39">/<pos:position pos:line="53" pos:column="40"/></operator> <name pos:line="53" pos:column="41">NS_INT16SZ<pos:position pos:line="53" pos:column="51"/></name><operator pos:line="53" pos:column="51">)<pos:position pos:line="53" pos:column="52"/></operator></expr>;<pos:position pos:line="53" pos:column="53"/></condition> <incr><expr><name pos:line="53" pos:column="54">i<pos:position pos:line="53" pos:column="55"/></name><operator pos:line="53" pos:column="55">++<pos:position pos:line="53" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="53" pos:column="58"/></control> <block pos:line="53" pos:column="59">{
		<comment type="block" pos:line="54" pos:column="17">/* Are we inside the best run of 0x00's? */</comment>
		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><name><name pos:line="55" pos:column="21">best<pos:position pos:line="55" pos:column="25"/></name><operator pos:line="55" pos:column="25">.<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="26">base<pos:position pos:line="55" pos:column="30"/></name></name> <operator pos:line="55" pos:column="31">!=<pos:position pos:line="55" pos:column="33"/></operator> <operator pos:line="55" pos:column="34">-<pos:position pos:line="55" pos:column="35"/></operator><literal type="number" pos:line="55" pos:column="35">1<pos:position pos:line="55" pos:column="36"/></literal> <operator pos:line="55" pos:column="37">&amp;&amp;<pos:position pos:line="55" pos:column="47"/></operator> <name pos:line="55" pos:column="40">i<pos:position pos:line="55" pos:column="41"/></name> <operator pos:line="55" pos:column="42">&gt;=<pos:position pos:line="55" pos:column="47"/></operator> <name><name pos:line="55" pos:column="45">best<pos:position pos:line="55" pos:column="49"/></name><operator pos:line="55" pos:column="49">.<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="50">base<pos:position pos:line="55" pos:column="54"/></name></name> <operator pos:line="55" pos:column="55">&amp;&amp;<pos:position pos:line="55" pos:column="65"/></operator>
		    <name pos:line="56" pos:column="21">i<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">&lt;<pos:position pos:line="56" pos:column="27"/></operator> <operator pos:line="56" pos:column="25">(<pos:position pos:line="56" pos:column="26"/></operator><name><name pos:line="56" pos:column="26">best<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">.<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="31">base<pos:position pos:line="56" pos:column="35"/></name></name> <operator pos:line="56" pos:column="36">+<pos:position pos:line="56" pos:column="37"/></operator> <name><name pos:line="56" pos:column="38">best<pos:position pos:line="56" pos:column="42"/></name><operator pos:line="56" pos:column="42">.<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="43">len<pos:position pos:line="56" pos:column="46"/></name></name><operator pos:line="56" pos:column="46">)<pos:position pos:line="56" pos:column="47"/></operator></expr>)<pos:position pos:line="56" pos:column="48"/></condition><then pos:line="56" pos:column="48"> <block pos:line="56" pos:column="49">{
			<if pos:line="57" pos:column="25">if <condition pos:line="57" pos:column="28">(<expr><name pos:line="57" pos:column="29">i<pos:position pos:line="57" pos:column="30"/></name> <operator pos:line="57" pos:column="31">==<pos:position pos:line="57" pos:column="33"/></operator> <name><name pos:line="57" pos:column="34">best<pos:position pos:line="57" pos:column="38"/></name><operator pos:line="57" pos:column="38">.<pos:position pos:line="57" pos:column="39"/></operator><name pos:line="57" pos:column="39">base<pos:position pos:line="57" pos:column="43"/></name></name></expr>)<pos:position pos:line="57" pos:column="44"/></condition><then pos:line="57" pos:column="44">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="58" pos:column="33">*<pos:position pos:line="58" pos:column="34"/></operator><name pos:line="58" pos:column="34">tp<pos:position pos:line="58" pos:column="36"/></name><operator pos:line="58" pos:column="36">++<pos:position pos:line="58" pos:column="38"/></operator> <operator pos:line="58" pos:column="39">=<pos:position pos:line="58" pos:column="40"/></operator> <literal type="char" pos:line="58" pos:column="41">':'<pos:position pos:line="58" pos:column="44"/></literal></expr>;<pos:position pos:line="58" pos:column="45"/></expr_stmt></block></then></if>
			<continue pos:line="59" pos:column="25">continue;<pos:position pos:line="59" pos:column="34"/></continue>
		}<pos:position pos:line="60" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="61" pos:column="17">/* Are we following an initial run of 0x00s or any real hex? */</comment>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name pos:line="62" pos:column="21">i<pos:position pos:line="62" pos:column="22"/></name> <operator pos:line="62" pos:column="23">!=<pos:position pos:line="62" pos:column="25"/></operator> <literal type="number" pos:line="62" pos:column="26">0<pos:position pos:line="62" pos:column="27"/></literal></expr>)<pos:position pos:line="62" pos:column="28"/></condition><then pos:line="62" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="63" pos:column="25">*<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="26">tp<pos:position pos:line="63" pos:column="28"/></name><operator pos:line="63" pos:column="28">++<pos:position pos:line="63" pos:column="30"/></operator> <operator pos:line="63" pos:column="31">=<pos:position pos:line="63" pos:column="32"/></operator> <literal type="char" pos:line="63" pos:column="33">':'<pos:position pos:line="63" pos:column="36"/></literal></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="64" pos:column="17">/* Is this address an encapsulated IPv4? */</comment>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name pos:line="65" pos:column="21">i<pos:position pos:line="65" pos:column="22"/></name> <operator pos:line="65" pos:column="23">==<pos:position pos:line="65" pos:column="25"/></operator> <literal type="number" pos:line="65" pos:column="26">6<pos:position pos:line="65" pos:column="27"/></literal> <operator pos:line="65" pos:column="28">&amp;&amp;<pos:position pos:line="65" pos:column="38"/></operator> <name><name pos:line="65" pos:column="31">best<pos:position pos:line="65" pos:column="35"/></name><operator pos:line="65" pos:column="35">.<pos:position pos:line="65" pos:column="36"/></operator><name pos:line="65" pos:column="36">base<pos:position pos:line="65" pos:column="40"/></name></name> <operator pos:line="65" pos:column="41">==<pos:position pos:line="65" pos:column="43"/></operator> <literal type="number" pos:line="65" pos:column="44">0<pos:position pos:line="65" pos:column="45"/></literal> <operator pos:line="65" pos:column="46">&amp;&amp;<pos:position pos:line="65" pos:column="56"/></operator>
		    <operator pos:line="66" pos:column="21">(<pos:position pos:line="66" pos:column="22"/></operator><name><name pos:line="66" pos:column="22">best<pos:position pos:line="66" pos:column="26"/></name><operator pos:line="66" pos:column="26">.<pos:position pos:line="66" pos:column="27"/></operator><name pos:line="66" pos:column="27">len<pos:position pos:line="66" pos:column="30"/></name></name> <operator pos:line="66" pos:column="31">==<pos:position pos:line="66" pos:column="33"/></operator> <literal type="number" pos:line="66" pos:column="34">6<pos:position pos:line="66" pos:column="35"/></literal> <operator pos:line="66" pos:column="36">||<pos:position pos:line="66" pos:column="38"/></operator> <operator pos:line="66" pos:column="39">(<pos:position pos:line="66" pos:column="40"/></operator><name><name pos:line="66" pos:column="40">best<pos:position pos:line="66" pos:column="44"/></name><operator pos:line="66" pos:column="44">.<pos:position pos:line="66" pos:column="45"/></operator><name pos:line="66" pos:column="45">len<pos:position pos:line="66" pos:column="48"/></name></name> <operator pos:line="66" pos:column="49">==<pos:position pos:line="66" pos:column="51"/></operator> <literal type="number" pos:line="66" pos:column="52">5<pos:position pos:line="66" pos:column="53"/></literal> <operator pos:line="66" pos:column="54">&amp;&amp;<pos:position pos:line="66" pos:column="64"/></operator> <name><name pos:line="66" pos:column="57">words<pos:position pos:line="66" pos:column="62"/></name><index pos:line="66" pos:column="62">[<expr><literal type="number" pos:line="66" pos:column="63">5<pos:position pos:line="66" pos:column="64"/></literal></expr>]<pos:position pos:line="66" pos:column="65"/></index></name> <operator pos:line="66" pos:column="66">==<pos:position pos:line="66" pos:column="68"/></operator> <literal type="number" pos:line="66" pos:column="69">0xffff<pos:position pos:line="66" pos:column="75"/></literal><operator pos:line="66" pos:column="75">)<pos:position pos:line="66" pos:column="76"/></operator><operator pos:line="66" pos:column="76">)<pos:position pos:line="66" pos:column="77"/></operator></expr>)<pos:position pos:line="66" pos:column="78"/></condition><then pos:line="66" pos:column="78"> <block pos:line="66" pos:column="79">{
			<if pos:line="67" pos:column="25">if <condition pos:line="67" pos:column="28">(<expr><operator pos:line="67" pos:column="29">!<pos:position pos:line="67" pos:column="30"/></operator><call><name pos:line="67" pos:column="30">inet_ntop4<pos:position pos:line="67" pos:column="40"/></name><argument_list pos:line="67" pos:column="40">(<argument><expr><name pos:line="67" pos:column="41">src<pos:position pos:line="67" pos:column="44"/></name><operator pos:line="67" pos:column="44">+<pos:position pos:line="67" pos:column="45"/></operator><literal type="number" pos:line="67" pos:column="45">12<pos:position pos:line="67" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="49">tp<pos:position pos:line="67" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="53">sizeof <name pos:line="67" pos:column="60">tmp<pos:position pos:line="67" pos:column="63"/></name></sizeof> <operator pos:line="67" pos:column="64">-<pos:position pos:line="67" pos:column="65"/></operator> <operator pos:line="67" pos:column="66">(<pos:position pos:line="67" pos:column="67"/></operator><name pos:line="67" pos:column="67">tp<pos:position pos:line="67" pos:column="69"/></name> <operator pos:line="67" pos:column="70">-<pos:position pos:line="67" pos:column="71"/></operator> <name pos:line="67" pos:column="72">tmp<pos:position pos:line="67" pos:column="75"/></name><operator pos:line="67" pos:column="75">)<pos:position pos:line="67" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="67" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="78"/></condition><then pos:line="67" pos:column="78">
				<block type="pseudo"><return pos:line="68" pos:column="33">return <expr><operator pos:line="68" pos:column="40">(<pos:position pos:line="68" pos:column="41"/></operator><name pos:line="68" pos:column="41">NULL<pos:position pos:line="68" pos:column="45"/></name><operator pos:line="68" pos:column="45">)<pos:position pos:line="68" pos:column="46"/></operator></expr>;<pos:position pos:line="68" pos:column="47"/></return></block></then></if>
			<expr_stmt><expr><name pos:line="69" pos:column="25">tp<pos:position pos:line="69" pos:column="27"/></name> <operator pos:line="69" pos:column="28">+=<pos:position pos:line="69" pos:column="30"/></operator> <call><name pos:line="69" pos:column="31">strlen<pos:position pos:line="69" pos:column="37"/></name><argument_list pos:line="69" pos:column="37">(<argument><expr><name pos:line="69" pos:column="38">tp<pos:position pos:line="69" pos:column="40"/></name></expr></argument>)<pos:position pos:line="69" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt>
			<break pos:line="70" pos:column="25">break;<pos:position pos:line="70" pos:column="31"/></break>
		}<pos:position pos:line="71" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="72" pos:column="17">tp<pos:position pos:line="72" pos:column="19"/></name> <operator pos:line="72" pos:column="20">+=<pos:position pos:line="72" pos:column="22"/></operator> <call><name pos:line="72" pos:column="23">snprintf<pos:position pos:line="72" pos:column="31"/></name><argument_list pos:line="72" pos:column="31">(<argument><expr><name pos:line="72" pos:column="32">tp<pos:position pos:line="72" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="36">sizeof <name pos:line="72" pos:column="43">tmp<pos:position pos:line="72" pos:column="46"/></name></sizeof> <operator pos:line="72" pos:column="47">-<pos:position pos:line="72" pos:column="48"/></operator> <operator pos:line="72" pos:column="49">(<pos:position pos:line="72" pos:column="50"/></operator><name pos:line="72" pos:column="50">tp<pos:position pos:line="72" pos:column="52"/></name> <operator pos:line="72" pos:column="53">-<pos:position pos:line="72" pos:column="54"/></operator> <name pos:line="72" pos:column="55">tmp<pos:position pos:line="72" pos:column="58"/></name><operator pos:line="72" pos:column="58">)<pos:position pos:line="72" pos:column="59"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="61">"%x"<pos:position pos:line="72" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="67">words<pos:position pos:line="72" pos:column="72"/></name><index pos:line="72" pos:column="72">[<expr><name pos:line="72" pos:column="73">i<pos:position pos:line="72" pos:column="74"/></name></expr>]<pos:position pos:line="72" pos:column="75"/></index></name></expr></argument>)<pos:position pos:line="72" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="73" pos:column="10"/></block></for>
	<comment type="block" pos:line="74" pos:column="9">/* Was it a trailing run of 0x00's? */</comment>
	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name><name pos:line="75" pos:column="13">best<pos:position pos:line="75" pos:column="17"/></name><operator pos:line="75" pos:column="17">.<pos:position pos:line="75" pos:column="18"/></operator><name pos:line="75" pos:column="18">base<pos:position pos:line="75" pos:column="22"/></name></name> <operator pos:line="75" pos:column="23">!=<pos:position pos:line="75" pos:column="25"/></operator> <operator pos:line="75" pos:column="26">-<pos:position pos:line="75" pos:column="27"/></operator><literal type="number" pos:line="75" pos:column="27">1<pos:position pos:line="75" pos:column="28"/></literal> <operator pos:line="75" pos:column="29">&amp;&amp;<pos:position pos:line="75" pos:column="39"/></operator> <operator pos:line="75" pos:column="32">(<pos:position pos:line="75" pos:column="33"/></operator><name><name pos:line="75" pos:column="33">best<pos:position pos:line="75" pos:column="37"/></name><operator pos:line="75" pos:column="37">.<pos:position pos:line="75" pos:column="38"/></operator><name pos:line="75" pos:column="38">base<pos:position pos:line="75" pos:column="42"/></name></name> <operator pos:line="75" pos:column="43">+<pos:position pos:line="75" pos:column="44"/></operator> <name><name pos:line="75" pos:column="45">best<pos:position pos:line="75" pos:column="49"/></name><operator pos:line="75" pos:column="49">.<pos:position pos:line="75" pos:column="50"/></operator><name pos:line="75" pos:column="50">len<pos:position pos:line="75" pos:column="53"/></name></name><operator pos:line="75" pos:column="53">)<pos:position pos:line="75" pos:column="54"/></operator> <operator pos:line="75" pos:column="55">==<pos:position pos:line="75" pos:column="57"/></operator>
	    <operator pos:line="76" pos:column="13">(<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="14">NS_IN6ADDRSZ<pos:position pos:line="76" pos:column="26"/></name> <operator pos:line="76" pos:column="27">/<pos:position pos:line="76" pos:column="28"/></operator> <name pos:line="76" pos:column="29">NS_INT16SZ<pos:position pos:line="76" pos:column="39"/></name><operator pos:line="76" pos:column="39">)<pos:position pos:line="76" pos:column="40"/></operator></expr>)<pos:position pos:line="76" pos:column="41"/></condition><then pos:line="76" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="77" pos:column="17">*<pos:position pos:line="77" pos:column="18"/></operator><name pos:line="77" pos:column="18">tp<pos:position pos:line="77" pos:column="20"/></name><operator pos:line="77" pos:column="20">++<pos:position pos:line="77" pos:column="22"/></operator> <operator pos:line="77" pos:column="23">=<pos:position pos:line="77" pos:column="24"/></operator> <literal type="char" pos:line="77" pos:column="25">':'<pos:position pos:line="77" pos:column="28"/></literal></expr>;<pos:position pos:line="77" pos:column="29"/></expr_stmt></block></then></if>
	<expr_stmt><expr><operator pos:line="78" pos:column="9">*<pos:position pos:line="78" pos:column="10"/></operator><name pos:line="78" pos:column="10">tp<pos:position pos:line="78" pos:column="12"/></name><operator pos:line="78" pos:column="12">++<pos:position pos:line="78" pos:column="14"/></operator> <operator pos:line="78" pos:column="15">=<pos:position pos:line="78" pos:column="16"/></operator> <literal type="char" pos:line="78" pos:column="17">'\0'<pos:position pos:line="78" pos:column="21"/></literal></expr>;<pos:position pos:line="78" pos:column="22"/></expr_stmt>

	<comment type="block" pos:line="80" pos:column="9">/*
	 * Check for overflow, copy, and we're done.
	 */</comment>
	<if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><call pos:line="83" pos:column="13">(<name pos:line="83" pos:column="14">size_t<pos:position pos:line="83" pos:column="20"/></name>)<argument_list pos:line="83" pos:column="21">(<argument><expr><name pos:line="83" pos:column="22">tp<pos:position pos:line="83" pos:column="24"/></name> <operator pos:line="83" pos:column="25">-<pos:position pos:line="83" pos:column="26"/></operator> <name pos:line="83" pos:column="27">tmp<pos:position pos:line="83" pos:column="30"/></name></expr></argument>)<pos:position pos:line="83" pos:column="31"/></argument_list></call> <operator pos:line="83" pos:column="32">&gt;<pos:position pos:line="83" pos:column="36"/></operator> <name pos:line="83" pos:column="34">size<pos:position pos:line="83" pos:column="38"/></name></expr>)<pos:position pos:line="83" pos:column="39"/></condition><then pos:line="83" pos:column="39"> <block pos:line="83" pos:column="40">{
		<expr_stmt><expr><name pos:line="84" pos:column="17">errno<pos:position pos:line="84" pos:column="22"/></name> <operator pos:line="84" pos:column="23">=<pos:position pos:line="84" pos:column="24"/></operator> <name pos:line="84" pos:column="25">ENOSPC<pos:position pos:line="84" pos:column="31"/></name></expr>;<pos:position pos:line="84" pos:column="32"/></expr_stmt>
		<return pos:line="85" pos:column="17">return <expr><operator pos:line="85" pos:column="24">(<pos:position pos:line="85" pos:column="25"/></operator><name pos:line="85" pos:column="25">NULL<pos:position pos:line="85" pos:column="29"/></name><operator pos:line="85" pos:column="29">)<pos:position pos:line="85" pos:column="30"/></operator></expr>;<pos:position pos:line="85" pos:column="31"/></return>
	}<pos:position pos:line="86" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="87" pos:column="9">strlcpy<pos:position pos:line="87" pos:column="16"/></name><argument_list pos:line="87" pos:column="16">(<argument><expr><name pos:line="87" pos:column="17">dst<pos:position pos:line="87" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="22">tmp<pos:position pos:line="87" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="27">size<pos:position pos:line="87" pos:column="31"/></name></expr></argument>)<pos:position pos:line="87" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="33"/></expr_stmt>
	<return pos:line="88" pos:column="9">return <expr><operator pos:line="88" pos:column="16">(<pos:position pos:line="88" pos:column="17"/></operator><name pos:line="88" pos:column="17">dst<pos:position pos:line="88" pos:column="20"/></name><operator pos:line="88" pos:column="20">)<pos:position pos:line="88" pos:column="21"/></operator></expr>;<pos:position pos:line="88" pos:column="22"/></return>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

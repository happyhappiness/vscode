<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1831_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_new_commit<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">arg<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name><name pos:line="3" pos:column="16">struct<pos:position pos:line="3" pos:column="22"/></name> <name pos:line="3" pos:column="23">strbuf<pos:position pos:line="3" pos:column="29"/></name></name></type> <name pos:line="3" pos:column="30">msg<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name pos:line="3" pos:column="36">STRBUF_INIT<pos:position pos:line="3" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">branch<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">b<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">author<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">NULL<pos:position pos:line="5" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">committer<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">NULL<pos:position pos:line="6" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">hash_list<pos:position pos:line="7" pos:column="25"/></name></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">merge_list<pos:position pos:line="7" pos:column="37"/></name> <init pos:line="7" pos:column="38">= <expr><name pos:line="7" pos:column="40">NULL<pos:position pos:line="7" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">unsigned<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">int<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">merge_count<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">char<pos:position pos:line="9" pos:column="22"/></name></type> <name pos:line="9" pos:column="23">prev_fanout<pos:position pos:line="9" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="36">new_fanout<pos:position pos:line="9" pos:column="46"/></name></decl>;<pos:position pos:line="9" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">v<pos:position pos:line="10" pos:column="22"/></name></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">b<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">lookup_branch<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">arg<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">b<pos:position pos:line="13" pos:column="15"/></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">b<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <call><name pos:line="14" pos:column="21">new_branch<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name pos:line="14" pos:column="32">arg<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">read_next_command<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">()<pos:position pos:line="16" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">parse_mark<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">()<pos:position pos:line="17" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">skip_prefix<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name><name pos:line="18" pos:column="25">command_buf<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">.<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="37">buf<pos:position pos:line="18" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="42">"author "<pos:position pos:line="18" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="53">&amp;<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="54">v<pos:position pos:line="18" pos:column="55"/></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="57"/></condition><then pos:line="18" pos:column="57"> <block pos:line="18" pos:column="58">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">author<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <call><name pos:line="19" pos:column="26">parse_ident<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">v<pos:position pos:line="19" pos:column="39"/></name></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">read_next_command<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">()<pos:position pos:line="20" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">skip_prefix<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name><name pos:line="22" pos:column="25">command_buf<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">.<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="37">buf<pos:position pos:line="22" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="42">"committer "<pos:position pos:line="22" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="56">&amp;<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="57">v<pos:position pos:line="22" pos:column="58"/></name></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="60"/></condition><then pos:line="22" pos:column="60"> <block pos:line="22" pos:column="61">{
		<expr_stmt><expr><name pos:line="23" pos:column="17">committer<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">=<pos:position pos:line="23" pos:column="28"/></operator> <call><name pos:line="23" pos:column="29">parse_ident<pos:position pos:line="23" pos:column="40"/></name><argument_list pos:line="23" pos:column="40">(<argument><expr><name pos:line="23" pos:column="41">v<pos:position pos:line="23" pos:column="42"/></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">read_next_command<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">()<pos:position pos:line="24" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">committer<pos:position pos:line="26" pos:column="23"/></name></expr>)<pos:position pos:line="26" pos:column="24"/></condition><then pos:line="26" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">die<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><literal type="string" pos:line="27" pos:column="21">"Expected committer but didn't get one"<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">parse_data<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><operator pos:line="28" pos:column="20">&amp;<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="21">msg<pos:position pos:line="28" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="26">0<pos:position pos:line="28" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="29">NULL<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">read_next_command<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">()<pos:position pos:line="29" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">parse_from<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><name pos:line="30" pos:column="20">b<pos:position pos:line="30" pos:column="21"/></name></expr></argument>)<pos:position pos:line="30" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="31" pos:column="9">merge_list<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <call><name pos:line="31" pos:column="22">parse_merge<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">(<argument><expr><operator pos:line="31" pos:column="34">&amp;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="35">merge_count<pos:position pos:line="31" pos:column="46"/></name></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>

	<comment type="block" pos:line="33" pos:column="9">/* ensure the branch is active/loaded */</comment>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><name><name pos:line="34" pos:column="14">b<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">branch_tree<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">.<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="29">tree<pos:position pos:line="34" pos:column="33"/></name></name> <operator pos:line="34" pos:column="34">||<pos:position pos:line="34" pos:column="36"/></operator> <operator pos:line="34" pos:column="37">!<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="38">max_active_branches<pos:position pos:line="34" pos:column="57"/></name></expr>)<pos:position pos:line="34" pos:column="58"/></condition><then pos:line="34" pos:column="58"> <block pos:line="34" pos:column="59">{
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">unload_one_branch<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">()<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">load_branch<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name pos:line="36" pos:column="29">b<pos:position pos:line="36" pos:column="30"/></name></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="39" pos:column="9">prev_fanout<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <call><name pos:line="39" pos:column="23">convert_num_notes_to_fanout<pos:position pos:line="39" pos:column="50"/></name><argument_list pos:line="39" pos:column="50">(<argument><expr><name><name pos:line="39" pos:column="51">b<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">-&gt;<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="54">num_notes<pos:position pos:line="39" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="65"/></expr_stmt>

	<comment type="block" pos:line="41" pos:column="9">/* file_change* */</comment>
	<while pos:line="42" pos:column="9">while <condition pos:line="42" pos:column="15">(<expr><name><name pos:line="42" pos:column="16">command_buf<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">.<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="28">len<pos:position pos:line="42" pos:column="31"/></name></name> <operator pos:line="42" pos:column="32">&gt;<pos:position pos:line="42" pos:column="36"/></operator> <literal type="number" pos:line="42" pos:column="34">0<pos:position pos:line="42" pos:column="35"/></literal></expr>)<pos:position pos:line="42" pos:column="36"/></condition> <block pos:line="42" pos:column="37">{
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><call><name pos:line="43" pos:column="21">skip_prefix<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name><name pos:line="43" pos:column="33">command_buf<pos:position pos:line="43" pos:column="44"/></name><operator pos:line="43" pos:column="44">.<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="45">buf<pos:position pos:line="43" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="50">"M "<pos:position pos:line="43" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="56">&amp;<pos:position pos:line="43" pos:column="61"/></operator><name pos:line="43" pos:column="57">v<pos:position pos:line="43" pos:column="58"/></name></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="60"/></condition><then pos:line="43" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="25">file_change_m<pos:position pos:line="44" pos:column="38"/></name><argument_list pos:line="44" pos:column="38">(<argument><expr><name pos:line="44" pos:column="39">v<pos:position pos:line="44" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="42">b<pos:position pos:line="44" pos:column="43"/></name></expr></argument>)<pos:position pos:line="44" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="45"/></expr_stmt></block></then>
		<elseif pos:line="45" pos:column="17">else <if pos:line="45" pos:column="22">if <condition pos:line="45" pos:column="25">(<expr><call><name pos:line="45" pos:column="26">skip_prefix<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><name><name pos:line="45" pos:column="38">command_buf<pos:position pos:line="45" pos:column="49"/></name><operator pos:line="45" pos:column="49">.<pos:position pos:line="45" pos:column="50"/></operator><name pos:line="45" pos:column="50">buf<pos:position pos:line="45" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="55">"D "<pos:position pos:line="45" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="45" pos:column="61">&amp;<pos:position pos:line="45" pos:column="66"/></operator><name pos:line="45" pos:column="62">v<pos:position pos:line="45" pos:column="63"/></name></expr></argument>)<pos:position pos:line="45" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="65"/></condition><then pos:line="45" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">file_change_d<pos:position pos:line="46" pos:column="38"/></name><argument_list pos:line="46" pos:column="38">(<argument><expr><name pos:line="46" pos:column="39">v<pos:position pos:line="46" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="42">b<pos:position pos:line="46" pos:column="43"/></name></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="45"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="47" pos:column="17">else <if pos:line="47" pos:column="22">if <condition pos:line="47" pos:column="25">(<expr><call><name pos:line="47" pos:column="26">skip_prefix<pos:position pos:line="47" pos:column="37"/></name><argument_list pos:line="47" pos:column="37">(<argument><expr><name><name pos:line="47" pos:column="38">command_buf<pos:position pos:line="47" pos:column="49"/></name><operator pos:line="47" pos:column="49">.<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="50">buf<pos:position pos:line="47" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="55">"R "<pos:position pos:line="47" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="47" pos:column="61">&amp;<pos:position pos:line="47" pos:column="66"/></operator><name pos:line="47" pos:column="62">v<pos:position pos:line="47" pos:column="63"/></name></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="65"/></condition><then pos:line="47" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="25">file_change_cr<pos:position pos:line="48" pos:column="39"/></name><argument_list pos:line="48" pos:column="39">(<argument><expr><name pos:line="48" pos:column="40">v<pos:position pos:line="48" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="43">b<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="46">1<pos:position pos:line="48" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="49"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="49" pos:column="17">else <if pos:line="49" pos:column="22">if <condition pos:line="49" pos:column="25">(<expr><call><name pos:line="49" pos:column="26">skip_prefix<pos:position pos:line="49" pos:column="37"/></name><argument_list pos:line="49" pos:column="37">(<argument><expr><name><name pos:line="49" pos:column="38">command_buf<pos:position pos:line="49" pos:column="49"/></name><operator pos:line="49" pos:column="49">.<pos:position pos:line="49" pos:column="50"/></operator><name pos:line="49" pos:column="50">buf<pos:position pos:line="49" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="55">"C "<pos:position pos:line="49" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="61">&amp;<pos:position pos:line="49" pos:column="66"/></operator><name pos:line="49" pos:column="62">v<pos:position pos:line="49" pos:column="63"/></name></expr></argument>)<pos:position pos:line="49" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="65"/></condition><then pos:line="49" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="25">file_change_cr<pos:position pos:line="50" pos:column="39"/></name><argument_list pos:line="50" pos:column="39">(<argument><expr><name pos:line="50" pos:column="40">v<pos:position pos:line="50" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="43">b<pos:position pos:line="50" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="46">0<pos:position pos:line="50" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="49"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="51" pos:column="17">else <if pos:line="51" pos:column="22">if <condition pos:line="51" pos:column="25">(<expr><call><name pos:line="51" pos:column="26">skip_prefix<pos:position pos:line="51" pos:column="37"/></name><argument_list pos:line="51" pos:column="37">(<argument><expr><name><name pos:line="51" pos:column="38">command_buf<pos:position pos:line="51" pos:column="49"/></name><operator pos:line="51" pos:column="49">.<pos:position pos:line="51" pos:column="50"/></operator><name pos:line="51" pos:column="50">buf<pos:position pos:line="51" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="55">"N "<pos:position pos:line="51" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="51" pos:column="61">&amp;<pos:position pos:line="51" pos:column="66"/></operator><name pos:line="51" pos:column="62">v<pos:position pos:line="51" pos:column="63"/></name></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="65"/></condition><then pos:line="51" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="25">note_change_n<pos:position pos:line="52" pos:column="38"/></name><argument_list pos:line="52" pos:column="38">(<argument><expr><name pos:line="52" pos:column="39">v<pos:position pos:line="52" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="42">b<pos:position pos:line="52" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="45">&amp;<pos:position pos:line="52" pos:column="50"/></operator><name pos:line="52" pos:column="46">prev_fanout<pos:position pos:line="52" pos:column="57"/></name></expr></argument>)<pos:position pos:line="52" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="59"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="53" pos:column="17">else <if pos:line="53" pos:column="22">if <condition pos:line="53" pos:column="25">(<expr><operator pos:line="53" pos:column="26">!<pos:position pos:line="53" pos:column="27"/></operator><call><name pos:line="53" pos:column="27">strcmp<pos:position pos:line="53" pos:column="33"/></name><argument_list pos:line="53" pos:column="33">(<argument><expr><literal type="string" pos:line="53" pos:column="34">"deleteall"<pos:position pos:line="53" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="47">command_buf<pos:position pos:line="53" pos:column="58"/></name><operator pos:line="53" pos:column="58">.<pos:position pos:line="53" pos:column="59"/></operator><name pos:line="53" pos:column="59">buf<pos:position pos:line="53" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="64"/></condition><then pos:line="53" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="25">file_change_deleteall<pos:position pos:line="54" pos:column="46"/></name><argument_list pos:line="54" pos:column="46">(<argument><expr><name pos:line="54" pos:column="47">b<pos:position pos:line="54" pos:column="48"/></name></expr></argument>)<pos:position pos:line="54" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="50"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="55" pos:column="17">else <if pos:line="55" pos:column="22">if <condition pos:line="55" pos:column="25">(<expr><call><name pos:line="55" pos:column="26">skip_prefix<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">(<argument><expr><name><name pos:line="55" pos:column="38">command_buf<pos:position pos:line="55" pos:column="49"/></name><operator pos:line="55" pos:column="49">.<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="50">buf<pos:position pos:line="55" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="55">"ls "<pos:position pos:line="55" pos:column="60"/></literal></expr></argument>, <argument><expr><operator pos:line="55" pos:column="62">&amp;<pos:position pos:line="55" pos:column="67"/></operator><name pos:line="55" pos:column="63">v<pos:position pos:line="55" pos:column="64"/></name></expr></argument>)<pos:position pos:line="55" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="66"/></condition><then pos:line="55" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="25">parse_ls<pos:position pos:line="56" pos:column="33"/></name><argument_list pos:line="56" pos:column="33">(<argument><expr><name pos:line="56" pos:column="34">v<pos:position pos:line="56" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="37">b<pos:position pos:line="56" pos:column="38"/></name></expr></argument>)<pos:position pos:line="56" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="40"/></expr_stmt></block></then></if></elseif>
		<else pos:line="57" pos:column="17">else <block pos:line="57" pos:column="22">{
			<expr_stmt><expr><name pos:line="58" pos:column="25">unread_command_buf<pos:position pos:line="58" pos:column="43"/></name> <operator pos:line="58" pos:column="44">=<pos:position pos:line="58" pos:column="45"/></operator> <literal type="number" pos:line="58" pos:column="46">1<pos:position pos:line="58" pos:column="47"/></literal></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt>
			<break pos:line="59" pos:column="25">break;<pos:position pos:line="59" pos:column="31"/></break>
		}<pos:position pos:line="60" pos:column="18"/></block></else></if>
		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><call><name pos:line="61" pos:column="21">read_next_command<pos:position pos:line="61" pos:column="38"/></name><argument_list pos:line="61" pos:column="38">()<pos:position pos:line="61" pos:column="40"/></argument_list></call> <operator pos:line="61" pos:column="41">==<pos:position pos:line="61" pos:column="43"/></operator> <name pos:line="61" pos:column="44">EOF<pos:position pos:line="61" pos:column="47"/></name></expr>)<pos:position pos:line="61" pos:column="48"/></condition><then pos:line="61" pos:column="48">
			<block type="pseudo"><break pos:line="62" pos:column="25">break;<pos:position pos:line="62" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="63" pos:column="10"/></block></while>

	<expr_stmt><expr><name pos:line="65" pos:column="9">new_fanout<pos:position pos:line="65" pos:column="19"/></name> <operator pos:line="65" pos:column="20">=<pos:position pos:line="65" pos:column="21"/></operator> <call><name pos:line="65" pos:column="22">convert_num_notes_to_fanout<pos:position pos:line="65" pos:column="49"/></name><argument_list pos:line="65" pos:column="49">(<argument><expr><name><name pos:line="65" pos:column="50">b<pos:position pos:line="65" pos:column="51"/></name><operator pos:line="65" pos:column="51">-&gt;<pos:position pos:line="65" pos:column="56"/></operator><name pos:line="65" pos:column="53">num_notes<pos:position pos:line="65" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="64"/></expr_stmt>
	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name pos:line="66" pos:column="13">new_fanout<pos:position pos:line="66" pos:column="23"/></name> <operator pos:line="66" pos:column="24">!=<pos:position pos:line="66" pos:column="26"/></operator> <name pos:line="66" pos:column="27">prev_fanout<pos:position pos:line="66" pos:column="38"/></name></expr>)<pos:position pos:line="66" pos:column="39"/></condition><then pos:line="66" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="67" pos:column="17">b<pos:position pos:line="67" pos:column="18"/></name><operator pos:line="67" pos:column="18">-&gt;<pos:position pos:line="67" pos:column="23"/></operator><name pos:line="67" pos:column="20">num_notes<pos:position pos:line="67" pos:column="29"/></name></name> <operator pos:line="67" pos:column="30">=<pos:position pos:line="67" pos:column="31"/></operator> <call><name pos:line="67" pos:column="32">change_note_fanout<pos:position pos:line="67" pos:column="50"/></name><argument_list pos:line="67" pos:column="50">(<argument><expr><operator pos:line="67" pos:column="51">&amp;<pos:position pos:line="67" pos:column="56"/></operator><name><name pos:line="67" pos:column="52">b<pos:position pos:line="67" pos:column="53"/></name><operator pos:line="67" pos:column="53">-&gt;<pos:position pos:line="67" pos:column="58"/></operator><name pos:line="67" pos:column="55">branch_tree<pos:position pos:line="67" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="68">new_fanout<pos:position pos:line="67" pos:column="78"/></name></expr></argument>)<pos:position pos:line="67" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="80"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="69" pos:column="9">/* build the tree and the commit */</comment>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">store_tree<pos:position pos:line="70" pos:column="19"/></name><argument_list pos:line="70" pos:column="19">(<argument><expr><operator pos:line="70" pos:column="20">&amp;<pos:position pos:line="70" pos:column="25"/></operator><name><name pos:line="70" pos:column="21">b<pos:position pos:line="70" pos:column="22"/></name><operator pos:line="70" pos:column="22">-&gt;<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="24">branch_tree<pos:position pos:line="70" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">oidcpy<pos:position pos:line="71" pos:column="15"/></name><argument_list pos:line="71" pos:column="15">(<argument><expr><operator pos:line="71" pos:column="16">&amp;<pos:position pos:line="71" pos:column="21"/></operator><name><name pos:line="71" pos:column="17">b<pos:position pos:line="71" pos:column="18"/></name><operator pos:line="71" pos:column="18">-&gt;<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="20">branch_tree<pos:position pos:line="71" pos:column="31"/></name><operator pos:line="71" pos:column="31">.<pos:position pos:line="71" pos:column="32"/></operator><name pos:line="71" pos:column="32">versions<pos:position pos:line="71" pos:column="40"/></name><index pos:line="71" pos:column="40">[<expr><literal type="number" pos:line="71" pos:column="41">0<pos:position pos:line="71" pos:column="42"/></literal></expr>]<pos:position pos:line="71" pos:column="43"/></index></name><operator pos:line="71" pos:column="43">.<pos:position pos:line="71" pos:column="44"/></operator><name pos:line="71" pos:column="44">oid<pos:position pos:line="71" pos:column="47"/></name></expr></argument>,
	       <argument><expr><operator pos:line="72" pos:column="16">&amp;<pos:position pos:line="72" pos:column="21"/></operator><name><name pos:line="72" pos:column="17">b<pos:position pos:line="72" pos:column="18"/></name><operator pos:line="72" pos:column="18">-&gt;<pos:position pos:line="72" pos:column="23"/></operator><name pos:line="72" pos:column="20">branch_tree<pos:position pos:line="72" pos:column="31"/></name><operator pos:line="72" pos:column="31">.<pos:position pos:line="72" pos:column="32"/></operator><name pos:line="72" pos:column="32">versions<pos:position pos:line="72" pos:column="40"/></name><index pos:line="72" pos:column="40">[<expr><literal type="number" pos:line="72" pos:column="41">1<pos:position pos:line="72" pos:column="42"/></literal></expr>]<pos:position pos:line="72" pos:column="43"/></index></name><operator pos:line="72" pos:column="43">.<pos:position pos:line="72" pos:column="44"/></operator><name pos:line="72" pos:column="44">oid<pos:position pos:line="72" pos:column="47"/></name></expr></argument>)<pos:position pos:line="72" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="49"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="74" pos:column="9">strbuf_reset<pos:position pos:line="74" pos:column="21"/></name><argument_list pos:line="74" pos:column="21">(<argument><expr><operator pos:line="74" pos:column="22">&amp;<pos:position pos:line="74" pos:column="27"/></operator><name pos:line="74" pos:column="23">new_data<pos:position pos:line="74" pos:column="31"/></name></expr></argument>)<pos:position pos:line="74" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="75" pos:column="9">strbuf_addf<pos:position pos:line="75" pos:column="20"/></name><argument_list pos:line="75" pos:column="20">(<argument><expr><operator pos:line="75" pos:column="21">&amp;<pos:position pos:line="75" pos:column="26"/></operator><name pos:line="75" pos:column="22">new_data<pos:position pos:line="75" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="32">"tree %s\n"<pos:position pos:line="75" pos:column="43"/></literal></expr></argument>,
		<argument><expr><call><name pos:line="76" pos:column="17">oid_to_hex<pos:position pos:line="76" pos:column="27"/></name><argument_list pos:line="76" pos:column="27">(<argument><expr><operator pos:line="76" pos:column="28">&amp;<pos:position pos:line="76" pos:column="33"/></operator><name><name pos:line="76" pos:column="29">b<pos:position pos:line="76" pos:column="30"/></name><operator pos:line="76" pos:column="30">-&gt;<pos:position pos:line="76" pos:column="35"/></operator><name pos:line="76" pos:column="32">branch_tree<pos:position pos:line="76" pos:column="43"/></name><operator pos:line="76" pos:column="43">.<pos:position pos:line="76" pos:column="44"/></operator><name pos:line="76" pos:column="44">versions<pos:position pos:line="76" pos:column="52"/></name><index pos:line="76" pos:column="52">[<expr><literal type="number" pos:line="76" pos:column="53">1<pos:position pos:line="76" pos:column="54"/></literal></expr>]<pos:position pos:line="76" pos:column="55"/></index></name><operator pos:line="76" pos:column="55">.<pos:position pos:line="76" pos:column="56"/></operator><name pos:line="76" pos:column="56">oid<pos:position pos:line="76" pos:column="59"/></name></expr></argument>)<pos:position pos:line="76" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="62"/></expr_stmt>
	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><operator pos:line="77" pos:column="13">!<pos:position pos:line="77" pos:column="14"/></operator><call><name pos:line="77" pos:column="14">is_null_oid<pos:position pos:line="77" pos:column="25"/></name><argument_list pos:line="77" pos:column="25">(<argument><expr><operator pos:line="77" pos:column="26">&amp;<pos:position pos:line="77" pos:column="31"/></operator><name><name pos:line="77" pos:column="27">b<pos:position pos:line="77" pos:column="28"/></name><operator pos:line="77" pos:column="28">-&gt;<pos:position pos:line="77" pos:column="33"/></operator><name pos:line="77" pos:column="30">oid<pos:position pos:line="77" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="35"/></condition><then pos:line="77" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="17">strbuf_addf<pos:position pos:line="78" pos:column="28"/></name><argument_list pos:line="78" pos:column="28">(<argument><expr><operator pos:line="78" pos:column="29">&amp;<pos:position pos:line="78" pos:column="34"/></operator><name pos:line="78" pos:column="30">new_data<pos:position pos:line="78" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="40">"parent %s\n"<pos:position pos:line="78" pos:column="53"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="79" pos:column="29">oid_to_hex<pos:position pos:line="79" pos:column="39"/></name><argument_list pos:line="79" pos:column="39">(<argument><expr><operator pos:line="79" pos:column="40">&amp;<pos:position pos:line="79" pos:column="45"/></operator><name><name pos:line="79" pos:column="41">b<pos:position pos:line="79" pos:column="42"/></name><operator pos:line="79" pos:column="42">-&gt;<pos:position pos:line="79" pos:column="47"/></operator><name pos:line="79" pos:column="44">oid<pos:position pos:line="79" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="50"/></expr_stmt></block></then></if>
	<while pos:line="80" pos:column="9">while <condition pos:line="80" pos:column="15">(<expr><name pos:line="80" pos:column="16">merge_list<pos:position pos:line="80" pos:column="26"/></name></expr>)<pos:position pos:line="80" pos:column="27"/></condition> <block pos:line="80" pos:column="28">{
		<decl_stmt><decl><type><name><name pos:line="81" pos:column="17">struct<pos:position pos:line="81" pos:column="23"/></name> <name pos:line="81" pos:column="24">hash_list<pos:position pos:line="81" pos:column="33"/></name></name> <modifier pos:line="81" pos:column="34">*<pos:position pos:line="81" pos:column="35"/></modifier></type><name pos:line="81" pos:column="35">next<pos:position pos:line="81" pos:column="39"/></name> <init pos:line="81" pos:column="40">= <expr><name><name pos:line="81" pos:column="42">merge_list<pos:position pos:line="81" pos:column="52"/></name><operator pos:line="81" pos:column="52">-&gt;<pos:position pos:line="81" pos:column="57"/></operator><name pos:line="81" pos:column="54">next<pos:position pos:line="81" pos:column="58"/></name></name></expr></init></decl>;<pos:position pos:line="81" pos:column="59"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="82" pos:column="17">strbuf_addf<pos:position pos:line="82" pos:column="28"/></name><argument_list pos:line="82" pos:column="28">(<argument><expr><operator pos:line="82" pos:column="29">&amp;<pos:position pos:line="82" pos:column="34"/></operator><name pos:line="82" pos:column="30">new_data<pos:position pos:line="82" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="40">"parent %s\n"<pos:position pos:line="82" pos:column="53"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="83" pos:column="29">oid_to_hex<pos:position pos:line="83" pos:column="39"/></name><argument_list pos:line="83" pos:column="39">(<argument><expr><operator pos:line="83" pos:column="40">&amp;<pos:position pos:line="83" pos:column="45"/></operator><name><name pos:line="83" pos:column="41">merge_list<pos:position pos:line="83" pos:column="51"/></name><operator pos:line="83" pos:column="51">-&gt;<pos:position pos:line="83" pos:column="56"/></operator><name pos:line="83" pos:column="53">oid<pos:position pos:line="83" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="84" pos:column="17">free<pos:position pos:line="84" pos:column="21"/></name><argument_list pos:line="84" pos:column="21">(<argument><expr><name pos:line="84" pos:column="22">merge_list<pos:position pos:line="84" pos:column="32"/></name></expr></argument>)<pos:position pos:line="84" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="85" pos:column="17">merge_list<pos:position pos:line="85" pos:column="27"/></name> <operator pos:line="85" pos:column="28">=<pos:position pos:line="85" pos:column="29"/></operator> <name pos:line="85" pos:column="30">next<pos:position pos:line="85" pos:column="34"/></name></expr>;<pos:position pos:line="85" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="86" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="87" pos:column="9">strbuf_addf<pos:position pos:line="87" pos:column="20"/></name><argument_list pos:line="87" pos:column="20">(<argument><expr><operator pos:line="87" pos:column="21">&amp;<pos:position pos:line="87" pos:column="26"/></operator><name pos:line="87" pos:column="22">new_data<pos:position pos:line="87" pos:column="30"/></name></expr></argument>,
		<argument><expr><literal type="string" pos:line="88" pos:column="17">"author %s\n"<pos:position pos:line="88" pos:column="30"/></literal>
		<literal type="string" pos:line="89" pos:column="17">"committer %s\n"<pos:position pos:line="89" pos:column="33"/></literal>
		<literal type="string" pos:line="90" pos:column="17">"\n"<pos:position pos:line="90" pos:column="21"/></literal></expr></argument>,
		<argument><expr><ternary><condition><expr><name pos:line="91" pos:column="17">author<pos:position pos:line="91" pos:column="23"/></name></expr> ?<pos:position pos:line="91" pos:column="25"/></condition><then pos:line="91" pos:column="25"> <expr><name pos:line="91" pos:column="26">author<pos:position pos:line="91" pos:column="32"/></name></expr> <pos:position pos:line="91" pos:column="33"/></then><else pos:line="91" pos:column="33">: <expr><name pos:line="91" pos:column="35">committer<pos:position pos:line="91" pos:column="44"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="91" pos:column="46">committer<pos:position pos:line="91" pos:column="55"/></name></expr></argument>)<pos:position pos:line="91" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="92" pos:column="9">strbuf_addbuf<pos:position pos:line="92" pos:column="22"/></name><argument_list pos:line="92" pos:column="22">(<argument><expr><operator pos:line="92" pos:column="23">&amp;<pos:position pos:line="92" pos:column="28"/></operator><name pos:line="92" pos:column="24">new_data<pos:position pos:line="92" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="34">&amp;<pos:position pos:line="92" pos:column="39"/></operator><name pos:line="92" pos:column="35">msg<pos:position pos:line="92" pos:column="38"/></name></expr></argument>)<pos:position pos:line="92" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="93" pos:column="9">free<pos:position pos:line="93" pos:column="13"/></name><argument_list pos:line="93" pos:column="13">(<argument><expr><name pos:line="93" pos:column="14">author<pos:position pos:line="93" pos:column="20"/></name></expr></argument>)<pos:position pos:line="93" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="94" pos:column="9">free<pos:position pos:line="94" pos:column="13"/></name><argument_list pos:line="94" pos:column="13">(<argument><expr><name pos:line="94" pos:column="14">committer<pos:position pos:line="94" pos:column="23"/></name></expr></argument>)<pos:position pos:line="94" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="25"/></expr_stmt>

	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><operator pos:line="96" pos:column="13">!<pos:position pos:line="96" pos:column="14"/></operator><call><name pos:line="96" pos:column="14">store_object<pos:position pos:line="96" pos:column="26"/></name><argument_list pos:line="96" pos:column="26">(<argument><expr><name pos:line="96" pos:column="27">OBJ_COMMIT<pos:position pos:line="96" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="39">&amp;<pos:position pos:line="96" pos:column="44"/></operator><name pos:line="96" pos:column="40">new_data<pos:position pos:line="96" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="50">NULL<pos:position pos:line="96" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="56">&amp;<pos:position pos:line="96" pos:column="61"/></operator><name><name pos:line="96" pos:column="57">b<pos:position pos:line="96" pos:column="58"/></name><operator pos:line="96" pos:column="58">-&gt;<pos:position pos:line="96" pos:column="63"/></operator><name pos:line="96" pos:column="60">oid<pos:position pos:line="96" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="65">next_mark<pos:position pos:line="96" pos:column="74"/></name></expr></argument>)<pos:position pos:line="96" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="76"/></condition><then pos:line="96" pos:column="76">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="97" pos:column="17">b<pos:position pos:line="97" pos:column="18"/></name><operator pos:line="97" pos:column="18">-&gt;<pos:position pos:line="97" pos:column="23"/></operator><name pos:line="97" pos:column="20">pack_id<pos:position pos:line="97" pos:column="27"/></name></name> <operator pos:line="97" pos:column="28">=<pos:position pos:line="97" pos:column="29"/></operator> <name pos:line="97" pos:column="30">pack_id<pos:position pos:line="97" pos:column="37"/></name></expr>;<pos:position pos:line="97" pos:column="38"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="98" pos:column="9">b<pos:position pos:line="98" pos:column="10"/></name><operator pos:line="98" pos:column="10">-&gt;<pos:position pos:line="98" pos:column="15"/></operator><name pos:line="98" pos:column="12">last_commit<pos:position pos:line="98" pos:column="23"/></name></name> <operator pos:line="98" pos:column="24">=<pos:position pos:line="98" pos:column="25"/></operator> <name><name pos:line="98" pos:column="26">object_count_by_type<pos:position pos:line="98" pos:column="46"/></name><index pos:line="98" pos:column="46">[<expr><name pos:line="98" pos:column="47">OBJ_COMMIT<pos:position pos:line="98" pos:column="57"/></name></expr>]<pos:position pos:line="98" pos:column="58"/></index></name></expr>;<pos:position pos:line="98" pos:column="59"/></expr_stmt>
}<pos:position pos:line="99" pos:column="2"/></block></function></unit>

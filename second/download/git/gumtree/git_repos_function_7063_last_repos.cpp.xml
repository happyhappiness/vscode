<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7063_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">re_string_context_at<pos:position pos:line="3" pos:column="21"/></name> <parameter_list pos:line="3" pos:column="22">(<parameter><decl><type><specifier pos:line="3" pos:column="23">const<pos:position pos:line="3" pos:column="28"/></specifier> <name pos:line="3" pos:column="29">re_string_t<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">input<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="49">int<pos:position pos:line="3" pos:column="52"/></name></type> <name pos:line="3" pos:column="53">idx<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="58">int<pos:position pos:line="3" pos:column="61"/></name></type> <name pos:line="3" pos:column="62">eflags<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="69"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">c<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">BE<pos:position pos:line="6" pos:column="9"/></name> <argument_list pos:line="6" pos:column="10">(<argument><expr><name pos:line="6" pos:column="11">idx<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">&lt;<pos:position pos:line="6" pos:column="19"/></operator> <literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">0<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23">
    <comment type="block" pos:line="7" pos:column="5">/* In this case, we use the value stored in input-&gt;tip_context,
       since we can't know the character in input-&gt;mbs[-1] here.  */</comment>
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><name><name pos:line="9" pos:column="12">input<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">tip_context<pos:position pos:line="9" pos:column="30"/></name></name></expr>;<pos:position pos:line="9" pos:column="31"/></return></block></then></if>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">BE<pos:position pos:line="10" pos:column="9"/></name> <argument_list pos:line="10" pos:column="10">(<argument><expr><name pos:line="10" pos:column="11">idx<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">==<pos:position pos:line="10" pos:column="17"/></operator> <name><name pos:line="10" pos:column="18">input<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">len<pos:position pos:line="10" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="30">0<pos:position pos:line="10" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="33"/></condition><then pos:line="10" pos:column="33">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><ternary><condition><expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">eflags<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">&amp;<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="23">REG_NOTEOL<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">)<pos:position pos:line="11" pos:column="34"/></operator></expr> ?<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36"> <expr><name pos:line="11" pos:column="37">CONTEXT_ENDBUF<pos:position pos:line="11" pos:column="51"/></name></expr>
	    <pos:position pos:line="12" pos:column="6"/></then><else pos:line="12" pos:column="13">: <expr><name pos:line="12" pos:column="15">CONTEXT_NEWLINE<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">|<pos:position pos:line="12" pos:column="32"/></operator> <name pos:line="12" pos:column="33">CONTEXT_ENDBUF<pos:position pos:line="12" pos:column="47"/></name></expr></else></ternary><operator pos:line="12" pos:column="47">)<pos:position pos:line="12" pos:column="48"/></operator></expr>;<pos:position pos:line="12" pos:column="49"/></return></block></then></if>
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">RE_ENABLE_I18N<pos:position pos:line="13" pos:column="22"/></name></cpp:ifdef>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name><name pos:line="14" pos:column="7">input<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">mb_cur_max<pos:position pos:line="14" pos:column="24"/></name></name> <operator pos:line="14" pos:column="25">&gt;<pos:position pos:line="14" pos:column="29"/></operator> <literal type="number" pos:line="14" pos:column="27">1<pos:position pos:line="14" pos:column="28"/></literal></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29">
    <block pos:line="15" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="16" pos:column="7">wint_t<pos:position pos:line="16" pos:column="13"/></name></type> <name pos:line="16" pos:column="14">wc<pos:position pos:line="16" pos:column="16"/></name></decl>;<pos:position pos:line="16" pos:column="17"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="17" pos:column="7">int<pos:position pos:line="17" pos:column="10"/></name></type> <name pos:line="17" pos:column="11">wc_idx<pos:position pos:line="17" pos:column="17"/></name> <init pos:line="17" pos:column="18">= <expr><name pos:line="17" pos:column="20">idx<pos:position pos:line="17" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="24"/></decl_stmt>
      <while pos:line="18" pos:column="7">while<condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">input<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">wcs<pos:position pos:line="18" pos:column="23"/></name><index pos:line="18" pos:column="23">[<expr><name pos:line="18" pos:column="24">wc_idx<pos:position pos:line="18" pos:column="30"/></name></expr>]<pos:position pos:line="18" pos:column="31"/></index></name> <operator pos:line="18" pos:column="32">==<pos:position pos:line="18" pos:column="34"/></operator> <name pos:line="18" pos:column="35">WEOF<pos:position pos:line="18" pos:column="39"/></name></expr>)<pos:position pos:line="18" pos:column="40"/></condition>
	<block pos:line="19" pos:column="9">{
<cpp:ifdef pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">ifdef<pos:position pos:line="20" pos:column="7"/></cpp:directive> <name pos:line="20" pos:column="8">DEBUG<pos:position pos:line="20" pos:column="13"/></name></cpp:ifdef>
	  <comment type="block" pos:line="21" pos:column="11">/* It must not happen.  */</comment>
	  <expr_stmt><expr><call><name pos:line="22" pos:column="11">assert<pos:position pos:line="22" pos:column="17"/></name> <argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">wc_idx<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">&gt;=<pos:position pos:line="22" pos:column="31"/></operator> <literal type="number" pos:line="22" pos:column="29">0<pos:position pos:line="22" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
	  <expr_stmt><expr><operator pos:line="24" pos:column="11">--<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">wc_idx<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>
	  <if pos:line="25" pos:column="11">if <condition pos:line="25" pos:column="14">(<expr><name pos:line="25" pos:column="15">wc_idx<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">&lt;<pos:position pos:line="25" pos:column="26"/></operator> <literal type="number" pos:line="25" pos:column="24">0<pos:position pos:line="25" pos:column="25"/></literal></expr>)<pos:position pos:line="25" pos:column="26"/></condition><then pos:line="25" pos:column="26">
	    <block type="pseudo"><return pos:line="26" pos:column="13">return <expr><name><name pos:line="26" pos:column="20">input<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">tip_context<pos:position pos:line="26" pos:column="38"/></name></name></expr>;<pos:position pos:line="26" pos:column="39"/></return></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></while>
      <expr_stmt><expr><name pos:line="28" pos:column="7">wc<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <name><name pos:line="28" pos:column="12">input<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">wcs<pos:position pos:line="28" pos:column="22"/></name><index pos:line="28" pos:column="22">[<expr><name pos:line="28" pos:column="23">wc_idx<pos:position pos:line="28" pos:column="29"/></name></expr>]<pos:position pos:line="28" pos:column="30"/></index></name></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><call><name pos:line="29" pos:column="11">BE<pos:position pos:line="29" pos:column="13"/></name> <argument_list pos:line="29" pos:column="14">(<argument><expr><name><name pos:line="29" pos:column="15">input<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">word_ops_used<pos:position pos:line="29" pos:column="35"/></name></name> <operator pos:line="29" pos:column="36">!=<pos:position pos:line="29" pos:column="38"/></operator> <literal type="number" pos:line="29" pos:column="39">0<pos:position pos:line="29" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="42">0<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call> <operator pos:line="29" pos:column="45">&amp;&amp;<pos:position pos:line="29" pos:column="55"/></operator> <call><name pos:line="29" pos:column="48">IS_WIDE_WORD_CHAR<pos:position pos:line="29" pos:column="65"/></name> <argument_list pos:line="29" pos:column="66">(<argument><expr><name pos:line="29" pos:column="67">wc<pos:position pos:line="29" pos:column="69"/></name></expr></argument>)<pos:position pos:line="29" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="71"/></condition><then pos:line="29" pos:column="71">
	<block type="pseudo"><return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">CONTEXT_WORD<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></return></block></then></if>
      <return pos:line="31" pos:column="7">return <expr><operator pos:line="31" pos:column="14">(<pos:position pos:line="31" pos:column="15"/></operator><ternary><condition><expr><call><name pos:line="31" pos:column="15">IS_WIDE_NEWLINE<pos:position pos:line="31" pos:column="30"/></name> <argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">wc<pos:position pos:line="31" pos:column="34"/></name></expr></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></call> <operator pos:line="31" pos:column="36">&amp;&amp;<pos:position pos:line="31" pos:column="46"/></operator> <name><name pos:line="31" pos:column="39">input<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">-&gt;<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="46">newline_anchor<pos:position pos:line="31" pos:column="60"/></name></name></expr>
	      ?<pos:position pos:line="32" pos:column="16"/></condition><then pos:line="32" pos:column="16"> <expr><name pos:line="32" pos:column="17">CONTEXT_NEWLINE<pos:position pos:line="32" pos:column="32"/></name></expr> <pos:position pos:line="32" pos:column="33"/></then><else pos:line="32" pos:column="33">: <expr><literal type="number" pos:line="32" pos:column="35">0<pos:position pos:line="32" pos:column="36"/></literal></expr></else></ternary><operator pos:line="32" pos:column="36">)<pos:position pos:line="32" pos:column="37"/></operator></expr>;<pos:position pos:line="32" pos:column="38"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then>
  <else pos:line="34" pos:column="3">else
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
    <block pos:line="36" pos:column="5">{
      <expr_stmt><expr><name pos:line="37" pos:column="7">c<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">=<pos:position pos:line="37" pos:column="10"/></operator> <call><name pos:line="37" pos:column="11">re_string_byte_at<pos:position pos:line="37" pos:column="28"/></name> <argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">input<pos:position pos:line="37" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="37">idx<pos:position pos:line="37" pos:column="40"/></name></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="42"/></expr_stmt>
      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><call><name pos:line="38" pos:column="11">bitset_contain<pos:position pos:line="38" pos:column="25"/></name> <argument_list pos:line="38" pos:column="26">(<argument><expr><name><name pos:line="38" pos:column="27">input<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">-&gt;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="34">word_char<pos:position pos:line="38" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="45">c<pos:position pos:line="38" pos:column="46"/></name></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="48"/></condition><then pos:line="38" pos:column="48">
	<block type="pseudo"><return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">CONTEXT_WORD<pos:position pos:line="39" pos:column="28"/></name></expr>;<pos:position pos:line="39" pos:column="29"/></return></block></then></if>
      <return pos:line="40" pos:column="7">return <expr><ternary><condition><expr><call><name pos:line="40" pos:column="14">IS_NEWLINE<pos:position pos:line="40" pos:column="24"/></name> <argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">c<pos:position pos:line="40" pos:column="27"/></name></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></call> <operator pos:line="40" pos:column="29">&amp;&amp;<pos:position pos:line="40" pos:column="39"/></operator> <name><name pos:line="40" pos:column="32">input<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">-&gt;<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="39">newline_anchor<pos:position pos:line="40" pos:column="53"/></name></name></expr> ?<pos:position pos:line="40" pos:column="55"/></condition><then pos:line="40" pos:column="55"> <expr><name pos:line="40" pos:column="56">CONTEXT_NEWLINE<pos:position pos:line="40" pos:column="71"/></name></expr> <pos:position pos:line="40" pos:column="72"/></then><else pos:line="40" pos:column="72">: <expr><literal type="number" pos:line="40" pos:column="74">0<pos:position pos:line="40" pos:column="75"/></literal></expr></else></ternary></expr>;<pos:position pos:line="40" pos:column="76"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></else></if>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

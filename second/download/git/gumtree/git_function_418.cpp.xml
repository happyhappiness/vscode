<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_418.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">prepare_note_data<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">unsigned<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">object<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="60">struct<pos:position pos:line="1" pos:column="66"/></name> <name pos:line="1" pos:column="67">note_data<pos:position pos:line="1" pos:column="76"/></name></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">d<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">unsigned<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">old_note<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name><name pos:line="4" pos:column="13">d<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">-&gt;<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="16">use_editor<pos:position pos:line="4" pos:column="26"/></name></name> <operator pos:line="4" pos:column="27">||<pos:position pos:line="4" pos:column="29"/></operator> <operator pos:line="4" pos:column="30">!<pos:position pos:line="4" pos:column="31"/></operator><name><name pos:line="4" pos:column="31">d<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">given<pos:position pos:line="4" pos:column="39"/></name></name></expr>)<pos:position pos:line="4" pos:column="40"/></condition><then pos:line="4" pos:column="40"> <block pos:line="4" pos:column="41">{
		<decl_stmt><decl><type><name pos:line="5" pos:column="17">int<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">fd<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="6" pos:column="17">struct<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">strbuf<pos:position pos:line="6" pos:column="30"/></name></name></type> <name pos:line="6" pos:column="31">buf<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><name pos:line="6" pos:column="37">STRBUF_INIT<pos:position pos:line="6" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="49"/></decl_stmt>

		<comment type="block" pos:line="8" pos:column="17">/* write the template message before editing: */</comment>
		<expr_stmt><expr><name><name pos:line="9" pos:column="17">d<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">edit_path<pos:position pos:line="9" pos:column="29"/></name></name> <operator pos:line="9" pos:column="30">=<pos:position pos:line="9" pos:column="31"/></operator> <call><name pos:line="9" pos:column="32">git_pathdup<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">(<argument><expr><literal type="string" pos:line="9" pos:column="44">"NOTES_EDITMSG"<pos:position pos:line="9" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">fd<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <call><name pos:line="10" pos:column="22">open<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name><name pos:line="10" pos:column="27">d<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">-&gt;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="30">edit_path<pos:position pos:line="10" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">O_CREAT<pos:position pos:line="10" pos:column="48"/></name> <operator pos:line="10" pos:column="49">|<pos:position pos:line="10" pos:column="50"/></operator> <name pos:line="10" pos:column="51">O_TRUNC<pos:position pos:line="10" pos:column="58"/></name> <operator pos:line="10" pos:column="59">|<pos:position pos:line="10" pos:column="60"/></operator> <name pos:line="10" pos:column="61">O_WRONLY<pos:position pos:line="10" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="71">0600<pos:position pos:line="10" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="77"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">fd<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">&lt;<pos:position pos:line="11" pos:column="28"/></operator> <literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr>)<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">die_errno<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><call><name pos:line="12" pos:column="35">_<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><literal type="string" pos:line="12" pos:column="37">"could not create file '%s'"<pos:position pos:line="12" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="68">d<pos:position pos:line="12" pos:column="69"/></name><operator pos:line="12" pos:column="69">-&gt;<pos:position pos:line="12" pos:column="74"/></operator><name pos:line="12" pos:column="71">edit_path<pos:position pos:line="12" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="82"/></expr_stmt></block></then></if>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name><name pos:line="14" pos:column="21">d<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">-&gt;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="24">given<pos:position pos:line="14" pos:column="29"/></name></name></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="25">write_or_die<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">fd<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="42">d<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">-&gt;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="45">buf<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">.<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="49">buf<pos:position pos:line="15" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="54">d<pos:position pos:line="15" pos:column="55"/></name><operator pos:line="15" pos:column="55">-&gt;<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="57">buf<pos:position pos:line="15" pos:column="60"/></name><operator pos:line="15" pos:column="60">.<pos:position pos:line="15" pos:column="61"/></operator><name pos:line="15" pos:column="61">len<pos:position pos:line="15" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt></block></then>
		<elseif pos:line="16" pos:column="17">else <if pos:line="16" pos:column="22">if <condition pos:line="16" pos:column="25">(<expr><name pos:line="16" pos:column="26">old_note<pos:position pos:line="16" pos:column="34"/></name></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">copy_obj_to_fd<pos:position pos:line="17" pos:column="39"/></name><argument_list pos:line="17" pos:column="39">(<argument><expr><name pos:line="17" pos:column="40">fd<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">old_note<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt></block></then></if></elseif></if>

		<expr_stmt><expr><call><name pos:line="19" pos:column="17">strbuf_addch<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><operator pos:line="19" pos:column="30">&amp;<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="31">buf<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="36">'\n'<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">strbuf_add_commented_lines<pos:position pos:line="20" pos:column="43"/></name><argument_list pos:line="20" pos:column="43">(<argument><expr><operator pos:line="20" pos:column="44">&amp;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="45">buf<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="50">"\n"<pos:position pos:line="20" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="56">strlen<pos:position pos:line="20" pos:column="62"/></name><argument_list pos:line="20" pos:column="62">(<argument><expr><literal type="string" pos:line="20" pos:column="63">"\n"<pos:position pos:line="20" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">strbuf_add_commented_lines<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><operator pos:line="21" pos:column="44">&amp;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="45">buf<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="50">_<pos:position pos:line="21" pos:column="51"/></name><argument_list pos:line="21" pos:column="51">(<argument><expr><name pos:line="21" pos:column="52">note_template<pos:position pos:line="21" pos:column="65"/></name></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="68">strlen<pos:position pos:line="21" pos:column="74"/></name><argument_list pos:line="21" pos:column="74">(<argument><expr><call><name pos:line="21" pos:column="75">_<pos:position pos:line="21" pos:column="76"/></name><argument_list pos:line="21" pos:column="76">(<argument><expr><name pos:line="21" pos:column="77">note_template<pos:position pos:line="21" pos:column="90"/></name></expr></argument>)<pos:position pos:line="21" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="94"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">strbuf_addch<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><operator pos:line="22" pos:column="30">&amp;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="31">buf<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="22" pos:column="36">'\n'<pos:position pos:line="22" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">write_or_die<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">fd<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="34">buf<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">.<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="38">buf<pos:position pos:line="23" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="43">buf<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">.<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="47">len<pos:position pos:line="23" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="25" pos:column="17">write_commented_object<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">(<argument><expr><name pos:line="25" pos:column="40">fd<pos:position pos:line="25" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">object<pos:position pos:line="25" pos:column="50"/></name></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="27" pos:column="17">close<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><name pos:line="27" pos:column="23">fd<pos:position pos:line="27" pos:column="25"/></name></expr></argument>)<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">strbuf_release<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><operator pos:line="28" pos:column="32">&amp;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="33">buf<pos:position pos:line="28" pos:column="36"/></name></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">strbuf_reset<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><operator pos:line="29" pos:column="30">&amp;<pos:position pos:line="29" pos:column="35"/></operator><name><name pos:line="29" pos:column="31">d<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">-&gt;<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="34">buf<pos:position pos:line="29" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">launch_editor<pos:position pos:line="31" pos:column="34"/></name><argument_list pos:line="31" pos:column="34">(<argument><expr><name><name pos:line="31" pos:column="35">d<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">-&gt;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="38">edit_path<pos:position pos:line="31" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="49">&amp;<pos:position pos:line="31" pos:column="54"/></operator><name><name pos:line="31" pos:column="50">d<pos:position pos:line="31" pos:column="51"/></name><operator pos:line="31" pos:column="51">-&gt;<pos:position pos:line="31" pos:column="56"/></operator><name pos:line="31" pos:column="53">buf<pos:position pos:line="31" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="58">NULL<pos:position pos:line="31" pos:column="62"/></name></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="64"/></condition><then pos:line="31" pos:column="64"> <block pos:line="31" pos:column="65">{
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">die<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><call><name pos:line="32" pos:column="29">_<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><literal type="string" pos:line="32" pos:column="31">"Please supply the note contents using either -m or -F option"<pos:position pos:line="32" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="96"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">strbuf_stripspace<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><operator pos:line="34" pos:column="35">&amp;<pos:position pos:line="34" pos:column="40"/></operator><name><name pos:line="34" pos:column="36">d<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">-&gt;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="39">buf<pos:position pos:line="34" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="44">1<pos:position pos:line="34" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4180_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">imap_exec_m<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">imap_store<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ctx<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="48">struct<pos:position pos:line="1" pos:column="54"/></name> <name pos:line="1" pos:column="55">imap_cmd_cb<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">cb<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
		       <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">fmt<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="2" pos:column="41">...<pos:position pos:line="2" pos:column="44"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">va_list<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">ap<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">imap_cmd<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">cmdp<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">va_start<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">ap<pos:position pos:line="7" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="22">fmt<pos:position pos:line="7" pos:column="25"/></name></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">cmdp<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">issue_imap_cmd<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">ctx<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">cb<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="40">fmt<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="45">ap<pos:position pos:line="8" pos:column="47"/></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">va_end<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">ap<pos:position pos:line="9" pos:column="18"/></name></expr></argument>)<pos:position pos:line="9" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">cmdp<pos:position pos:line="10" pos:column="18"/></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><name pos:line="11" pos:column="24">DRV_STORE_BAD<pos:position pos:line="11" pos:column="37"/></name></expr>;<pos:position pos:line="11" pos:column="38"/></return></block></then></if>

	<switch pos:line="13" pos:column="9">switch <condition pos:line="13" pos:column="16">(<expr><call><name pos:line="13" pos:column="17">get_cmd_result<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">ctx<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">cmdp<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="43"/></condition> <block pos:line="13" pos:column="44">{
	<case pos:line="14" pos:column="9">case <expr><name pos:line="14" pos:column="14">RESP_BAD<pos:position pos:line="14" pos:column="22"/></name></expr>:<pos:position pos:line="14" pos:column="23"/></case> <return pos:line="14" pos:column="24">return <expr><name pos:line="14" pos:column="31">DRV_STORE_BAD<pos:position pos:line="14" pos:column="44"/></name></expr>;<pos:position pos:line="14" pos:column="45"/></return>
	<case pos:line="15" pos:column="9">case <expr><name pos:line="15" pos:column="14">RESP_NO<pos:position pos:line="15" pos:column="21"/></name></expr>:<pos:position pos:line="15" pos:column="22"/></case> <return pos:line="15" pos:column="23">return <expr><name pos:line="15" pos:column="30">DRV_MSG_BAD<pos:position pos:line="15" pos:column="41"/></name></expr>;<pos:position pos:line="15" pos:column="42"/></return>
	<default pos:line="16" pos:column="9">default:<pos:position pos:line="16" pos:column="17"/></default> <return pos:line="16" pos:column="18">return <expr><name pos:line="16" pos:column="25">DRV_OK<pos:position pos:line="16" pos:column="31"/></name></expr>;<pos:position pos:line="16" pos:column="32"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></switch>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

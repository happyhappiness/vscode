<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1512.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">show_blob_object<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">unsigned<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">sha1<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="56">struct<pos:position pos:line="1" pos:column="62"/></name> <name pos:line="1" pos:column="63">rev_info<pos:position pos:line="1" pos:column="71"/></name></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">rev<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="78">const<pos:position pos:line="1" pos:column="83"/></specifier> <name pos:line="1" pos:column="84">char<pos:position pos:line="1" pos:column="88"/></name> <modifier pos:line="1" pos:column="89">*<pos:position pos:line="1" pos:column="90"/></modifier></type><name pos:line="1" pos:column="90">obj_name<pos:position pos:line="1" pos:column="98"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="99"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name></type> <name><name pos:line="3" pos:column="23">sha1c<pos:position pos:line="3" pos:column="28"/></name><index pos:line="3" pos:column="28">[<expr><literal type="number" pos:line="3" pos:column="29">20<pos:position pos:line="3" pos:column="31"/></literal></expr>]<pos:position pos:line="3" pos:column="32"/></index></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object_context<pos:position pos:line="4" pos:column="30"/></name></name></type> <name pos:line="4" pos:column="31">obj_context<pos:position pos:line="4" pos:column="42"/></name></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">buf<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">long<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">size<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">fflush<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">stdout<pos:position pos:line="8" pos:column="22"/></name></expr></argument>)<pos:position pos:line="8" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">DIFF_OPT_TOUCHED<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><operator pos:line="9" pos:column="31">&amp;<pos:position pos:line="9" pos:column="36"/></operator><name><name pos:line="9" pos:column="32">rev<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">diffopt<pos:position pos:line="9" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">ALLOW_TEXTCONV<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call> <operator pos:line="9" pos:column="62">||<pos:position pos:line="9" pos:column="64"/></operator>
	    <operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">DIFF_OPT_TST<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><operator pos:line="10" pos:column="27">&amp;<pos:position pos:line="10" pos:column="32"/></operator><name><name pos:line="10" pos:column="28">rev<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">diffopt<pos:position pos:line="10" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">ALLOW_TEXTCONV<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="58"/></condition><then pos:line="10" pos:column="58">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><call><name pos:line="11" pos:column="24">stream_blob_to_fd<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><literal type="number" pos:line="11" pos:column="42">1<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">sha1<pos:position pos:line="11" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="51">NULL<pos:position pos:line="11" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="57">0<pos:position pos:line="11" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="60"/></return></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">get_sha1_with_context<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">obj_name<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="45">0<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">sha1c<pos:position pos:line="13" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="55">&amp;<pos:position pos:line="13" pos:column="60"/></operator><name pos:line="13" pos:column="56">obj_context<pos:position pos:line="13" pos:column="67"/></name></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="69"/></condition><then pos:line="13" pos:column="69">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">die<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><literal type="string" pos:line="14" pos:column="21">"Not a valid object name %s"<pos:position pos:line="14" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">obj_name<pos:position pos:line="14" pos:column="59"/></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="61"/></expr_stmt></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name><name pos:line="15" pos:column="14">obj_context<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">.<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">path<pos:position pos:line="15" pos:column="30"/></name><index pos:line="15" pos:column="30">[<expr><literal type="number" pos:line="15" pos:column="31">0<pos:position pos:line="15" pos:column="32"/></literal></expr>]<pos:position pos:line="15" pos:column="33"/></index></name> <operator pos:line="15" pos:column="34">||<pos:position pos:line="15" pos:column="36"/></operator>
	    <operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><call><name pos:line="16" pos:column="14">textconv_object<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name><name pos:line="16" pos:column="30">obj_context<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">.<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="42">path<pos:position pos:line="16" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="48">obj_context<pos:position pos:line="16" pos:column="59"/></name><operator pos:line="16" pos:column="59">.<pos:position pos:line="16" pos:column="60"/></operator><name pos:line="16" pos:column="60">mode<pos:position pos:line="16" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="66">sha1c<pos:position pos:line="16" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="73">1<pos:position pos:line="16" pos:column="74"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="76">&amp;<pos:position pos:line="16" pos:column="81"/></operator><name pos:line="16" pos:column="77">buf<pos:position pos:line="16" pos:column="80"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="82">&amp;<pos:position pos:line="16" pos:column="87"/></operator><name pos:line="16" pos:column="83">size<pos:position pos:line="16" pos:column="87"/></name></expr></argument>)<pos:position pos:line="16" pos:column="88"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="89"/></condition><then pos:line="16" pos:column="89">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><call><name pos:line="17" pos:column="24">stream_blob_to_fd<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><literal type="number" pos:line="17" pos:column="42">1<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="45">sha1<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">NULL<pos:position pos:line="17" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="57">0<pos:position pos:line="17" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="60"/></return></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">buf<pos:position pos:line="19" pos:column="17"/></name></expr>)<pos:position pos:line="19" pos:column="18"/></condition><then pos:line="19" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">die<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><literal type="string" pos:line="20" pos:column="21">"git show %s: bad file"<pos:position pos:line="20" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="46">obj_name<pos:position pos:line="20" pos:column="54"/></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="56"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">write_or_die<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><literal type="number" pos:line="22" pos:column="22">1<pos:position pos:line="22" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="25">buf<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="30">size<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
	<return pos:line="23" pos:column="9">return <expr><literal type="number" pos:line="23" pos:column="16">0<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

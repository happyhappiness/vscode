<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_569_git-2.0.5.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">commit_list<pos:position pos:line="1" pos:column="19"/></name></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">copy_commit_list<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">commit_list<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">list<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit_list<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">head<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name pos:line="3" pos:column="36">NULL<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit_list<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier><modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">pp<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><operator pos:line="4" pos:column="35">&amp;<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="36">head<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><name pos:line="5" pos:column="16">list<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition> <block pos:line="5" pos:column="22">{
		struct <expr_stmt><expr><name pos:line="6" pos:column="24">commit_list<pos:position pos:line="6" pos:column="35"/></name> <operator pos:line="6" pos:column="36">*<pos:position pos:line="6" pos:column="37"/></operator><operator pos:line="6" pos:column="37">new<pos:position pos:line="6" pos:column="40"/></operator></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="7" pos:column="17">new<pos:position pos:line="7" pos:column="20"/></operator> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <call><name pos:line="7" pos:column="23">xmalloc<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><sizeof pos:line="7" pos:column="31">sizeof<argument_list pos:line="7" pos:column="37">(<argument><expr pos:line="7" pos:column="38">struct <name pos:line="7" pos:column="45">commit_list<pos:position pos:line="7" pos:column="56"/></name></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="8" pos:column="17">new<pos:position pos:line="8" pos:column="20"/></operator><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">item<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">=<pos:position pos:line="8" pos:column="28"/></operator> <name><name pos:line="8" pos:column="29">list<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">-&gt;<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="35">item<pos:position pos:line="8" pos:column="39"/></name></name></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="9" pos:column="17">new<pos:position pos:line="9" pos:column="20"/></operator><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">next<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">=<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="29">NULL<pos:position pos:line="9" pos:column="33"/></name></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">pp<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <operator pos:line="10" pos:column="23">new<pos:position pos:line="10" pos:column="26"/></operator></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="11" pos:column="17">pp<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <operator pos:line="11" pos:column="22">&amp;<pos:position pos:line="11" pos:column="27"/></operator><operator pos:line="11" pos:column="23">new<pos:position pos:line="11" pos:column="26"/></operator><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">next<pos:position pos:line="11" pos:column="32"/></name></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="12" pos:column="17">list<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <name><name pos:line="12" pos:column="24">list<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">next<pos:position pos:line="12" pos:column="34"/></name></name></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></while>
	<return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">head<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2623.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">process_object<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">walker<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">walker<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="50">struct<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">object<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">obj<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">obj<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">-&gt;<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="18">type<pos:position pos:line="3" pos:column="22"/></name></name> <operator pos:line="3" pos:column="23">==<pos:position pos:line="3" pos:column="25"/></operator> <name pos:line="3" pos:column="26">OBJ_COMMIT<pos:position pos:line="3" pos:column="36"/></name></expr>)<pos:position pos:line="3" pos:column="37"/></condition><then pos:line="3" pos:column="37"> <block pos:line="3" pos:column="38">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><call><name pos:line="4" pos:column="21">process_commit<pos:position pos:line="4" pos:column="35"/></name><argument_list pos:line="4" pos:column="35">(<argument><expr><name pos:line="4" pos:column="36">walker<pos:position pos:line="4" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="44">(<pos:position pos:line="4" pos:column="45"/></operator>struct <name pos:line="4" pos:column="52">commit<pos:position pos:line="4" pos:column="58"/></name> <operator pos:line="4" pos:column="59">*<pos:position pos:line="4" pos:column="60"/></operator><operator pos:line="4" pos:column="60">)<pos:position pos:line="4" pos:column="61"/></operator><name pos:line="4" pos:column="61">obj<pos:position pos:line="4" pos:column="64"/></name></expr></argument>)<pos:position pos:line="4" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="66"/></condition><then pos:line="4" pos:column="66">
			<block type="pseudo"><return pos:line="5" pos:column="25">return <expr><operator pos:line="5" pos:column="32">-<pos:position pos:line="5" pos:column="33"/></operator><literal type="number" pos:line="5" pos:column="33">1<pos:position pos:line="5" pos:column="34"/></literal></expr>;<pos:position pos:line="5" pos:column="35"/></return></block></then></if>
		<return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return>
	}<pos:position pos:line="7" pos:column="10"/></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">obj<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">type<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">==<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="26">OBJ_TREE<pos:position pos:line="8" pos:column="34"/></name></expr>)<pos:position pos:line="8" pos:column="35"/></condition><then pos:line="8" pos:column="35"> <block pos:line="8" pos:column="36">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">process_tree<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">walker<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="42">(<pos:position pos:line="9" pos:column="43"/></operator>struct <name pos:line="9" pos:column="50">tree<pos:position pos:line="9" pos:column="54"/></name> <operator pos:line="9" pos:column="55">*<pos:position pos:line="9" pos:column="56"/></operator><operator pos:line="9" pos:column="56">)<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="57">obj<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="62"/></condition><then pos:line="9" pos:column="62">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><operator pos:line="10" pos:column="32">-<pos:position pos:line="10" pos:column="33"/></operator><literal type="number" pos:line="10" pos:column="33">1<pos:position pos:line="10" pos:column="34"/></literal></expr>;<pos:position pos:line="10" pos:column="35"/></return></block></then></if>
		<return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">obj<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">type<pos:position pos:line="13" pos:column="22"/></name></name> <operator pos:line="13" pos:column="23">==<pos:position pos:line="13" pos:column="25"/></operator> <name pos:line="13" pos:column="26">OBJ_BLOB<pos:position pos:line="13" pos:column="34"/></name></expr>)<pos:position pos:line="13" pos:column="35"/></condition><then pos:line="13" pos:column="35"> <block pos:line="13" pos:column="36">{
		<return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">obj<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">type<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">==<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">OBJ_TAG<pos:position pos:line="16" pos:column="33"/></name></expr>)<pos:position pos:line="16" pos:column="34"/></condition><then pos:line="16" pos:column="34"> <block pos:line="16" pos:column="35">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">process_tag<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">walker<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="41">(<pos:position pos:line="17" pos:column="42"/></operator>struct <name pos:line="17" pos:column="49">tag<pos:position pos:line="17" pos:column="52"/></name> <operator pos:line="17" pos:column="53">*<pos:position pos:line="17" pos:column="54"/></operator><operator pos:line="17" pos:column="54">)<pos:position pos:line="17" pos:column="55"/></operator><name pos:line="17" pos:column="55">obj<pos:position pos:line="17" pos:column="58"/></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="60"/></condition><then pos:line="17" pos:column="60">
			<block type="pseudo"><return pos:line="18" pos:column="25">return <expr><operator pos:line="18" pos:column="32">-<pos:position pos:line="18" pos:column="33"/></operator><literal type="number" pos:line="18" pos:column="33">1<pos:position pos:line="18" pos:column="34"/></literal></expr>;<pos:position pos:line="18" pos:column="35"/></return></block></then></if>
		<return pos:line="19" pos:column="17">return <expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>
	<return pos:line="21" pos:column="9">return <expr><call><name pos:line="21" pos:column="16">error<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><literal type="string" pos:line="21" pos:column="22">"Unable to determine requirements "<pos:position pos:line="21" pos:column="57"/></literal>
		     <literal type="string" pos:line="22" pos:column="22">"of type %s for %s"<pos:position pos:line="22" pos:column="41"/></literal></expr></argument>,
		     <argument><expr><name><typename pos:line="23" pos:column="22">typename<pos:position pos:line="23" pos:column="30"/></typename></name><operator pos:line="23" pos:column="30">(<pos:position pos:line="23" pos:column="31"/></operator><name><name pos:line="23" pos:column="31">obj<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">type<pos:position pos:line="23" pos:column="40"/></name></name><operator pos:line="23" pos:column="40">)<pos:position pos:line="23" pos:column="41"/></operator></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="43">sha1_to_hex<pos:position pos:line="23" pos:column="54"/></name><argument_list pos:line="23" pos:column="54">(<argument><expr><name><name pos:line="23" pos:column="55">obj<pos:position pos:line="23" pos:column="58"/></name><operator pos:line="23" pos:column="58">-&gt;<pos:position pos:line="23" pos:column="63"/></operator><name pos:line="23" pos:column="60">sha1<pos:position pos:line="23" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="67"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1528_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">git_open_noatime<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">name<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">sha1_file_open_flag<pos:position pos:line="3" pos:column="39"/></name> <init pos:line="3" pos:column="40">= <expr><name pos:line="3" pos:column="42">O_NOATIME<pos:position pos:line="3" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init pos:line="5" pos:column="14">;<pos:position pos:line="5" pos:column="15"/></init><condition pos:line="5" pos:column="15">;<pos:position pos:line="5" pos:column="16"/></condition><incr/>)<pos:position pos:line="5" pos:column="17"/></control> <block pos:line="5" pos:column="18">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">int<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">fd<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><call><name pos:line="6" pos:column="26">open<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">name<pos:position pos:line="6" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="37">O_RDONLY<pos:position pos:line="6" pos:column="45"/></name> <operator pos:line="6" pos:column="46">|<pos:position pos:line="6" pos:column="47"/></operator> <name pos:line="6" pos:column="48">sha1_file_open_flag<pos:position pos:line="6" pos:column="67"/></name></expr></argument>)<pos:position pos:line="6" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="69"/></decl_stmt>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">fd<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">&gt;=<pos:position pos:line="7" pos:column="29"/></operator> <literal type="number" pos:line="7" pos:column="27">0<pos:position pos:line="7" pos:column="28"/></literal></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
			<block type="pseudo"><return pos:line="8" pos:column="25">return <expr><name pos:line="8" pos:column="32">fd<pos:position pos:line="8" pos:column="34"/></name></expr>;<pos:position pos:line="8" pos:column="35"/></return></block></then></if>

		<comment type="block" pos:line="10" pos:column="17">/* Might the failure be due to O_NOATIME? */</comment>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">errno<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">!=<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">ENOENT<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">&amp;&amp;<pos:position pos:line="11" pos:column="47"/></operator> <name pos:line="11" pos:column="40">sha1_file_open_flag<pos:position pos:line="11" pos:column="59"/></name></expr>)<pos:position pos:line="11" pos:column="60"/></condition><then pos:line="11" pos:column="60"> <block pos:line="11" pos:column="61">{
			<expr_stmt><expr><name pos:line="12" pos:column="25">sha1_file_open_flag<pos:position pos:line="12" pos:column="44"/></name> <operator pos:line="12" pos:column="45">=<pos:position pos:line="12" pos:column="46"/></operator> <literal type="number" pos:line="12" pos:column="47">0<pos:position pos:line="12" pos:column="48"/></literal></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
			<continue pos:line="13" pos:column="25">continue;<pos:position pos:line="13" pos:column="34"/></continue>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if>

		<return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></for>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1109_git-2.11.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mark_redundant_parents<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">rev_info<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">revs<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="58">struct<pos:position pos:line="1" pos:column="64"/></name> <name pos:line="1" pos:column="65">commit<pos:position pos:line="1" pos:column="71"/></name></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">commit<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit_list<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">h<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><call><name pos:line="3" pos:column="33">reduce_heads<pos:position pos:line="3" pos:column="45"/></name><argument_list pos:line="3" pos:column="45">(<argument><expr><name><name pos:line="3" pos:column="46">commit<pos:position pos:line="3" pos:column="52"/></name><operator pos:line="3" pos:column="52">-&gt;<pos:position pos:line="3" pos:column="57"/></operator><name pos:line="3" pos:column="54">parents<pos:position pos:line="3" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="63"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="20">marked<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><literal type="number" pos:line="4" pos:column="29">0<pos:position pos:line="4" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit_list<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">po<pos:position pos:line="5" pos:column="31"/></name></decl>, <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="34">pn<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* Want these for sanity-checking only */</comment>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">orig_cnt<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><call><name pos:line="8" pos:column="24">commit_list_count<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">(<argument><expr><name><name pos:line="8" pos:column="42">commit<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">-&gt;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="50">parents<pos:position pos:line="8" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">cnt<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><call><name pos:line="9" pos:column="19">commit_list_count<pos:position pos:line="9" pos:column="36"/></name><argument_list pos:line="9" pos:column="36">(<argument><expr><name pos:line="9" pos:column="37">h<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>

	<comment type="block" pos:line="11" pos:column="9">/*
	 * Not ready to remove items yet, just mark them for now, based
	 * on the output of reduce_heads(). reduce_heads outputs the reduced
	 * set in its original order, so this isn't too hard.
	 */</comment>
	<expr_stmt><expr><name pos:line="16" pos:column="9">po<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <name><name pos:line="16" pos:column="14">commit<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">-&gt;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="22">parents<pos:position pos:line="16" pos:column="29"/></name></name></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">pn<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <name pos:line="17" pos:column="14">h<pos:position pos:line="17" pos:column="15"/></name></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt>
	<while pos:line="18" pos:column="9">while <condition pos:line="18" pos:column="15">(<expr><name pos:line="18" pos:column="16">po<pos:position pos:line="18" pos:column="18"/></name></expr>)<pos:position pos:line="18" pos:column="19"/></condition> <block pos:line="18" pos:column="20">{
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">pn<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">&amp;&amp;<pos:position pos:line="19" pos:column="34"/></operator> <name><name pos:line="19" pos:column="27">po<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">item<pos:position pos:line="19" pos:column="35"/></name></name> <operator pos:line="19" pos:column="36">==<pos:position pos:line="19" pos:column="38"/></operator> <name><name pos:line="19" pos:column="39">pn<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">-&gt;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="43">item<pos:position pos:line="19" pos:column="47"/></name></name></expr>)<pos:position pos:line="19" pos:column="48"/></condition><then pos:line="19" pos:column="48"> <block pos:line="19" pos:column="49">{
			<expr_stmt><expr><name pos:line="20" pos:column="25">pn<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <name><name pos:line="20" pos:column="30">pn<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">next<pos:position pos:line="20" pos:column="38"/></name></name></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><name pos:line="21" pos:column="25">i<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">++<pos:position pos:line="21" pos:column="28"/></operator></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></then> <else pos:line="22" pos:column="19">else <block pos:line="22" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="23" pos:column="25">po<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">-&gt;<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="29">item<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">-&gt;<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="35">object<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">.<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="42">flags<pos:position pos:line="23" pos:column="47"/></name></name> <operator pos:line="23" pos:column="48">|=<pos:position pos:line="23" pos:column="50"/></operator> <name pos:line="23" pos:column="51">TMP_MARK<pos:position pos:line="23" pos:column="59"/></name></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">marked<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">++<pos:position pos:line="24" pos:column="33"/></operator></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="26" pos:column="17">po<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator><name><name pos:line="26" pos:column="20">po<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">next<pos:position pos:line="26" pos:column="28"/></name></name></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></while>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">i<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">!=<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">cnt<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">||<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="25">cnt<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">+<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="29">marked<pos:position pos:line="29" pos:column="35"/></name> <operator pos:line="29" pos:column="36">!=<pos:position pos:line="29" pos:column="38"/></operator> <name pos:line="29" pos:column="39">orig_cnt<pos:position pos:line="29" pos:column="47"/></name></expr>)<pos:position pos:line="29" pos:column="48"/></condition><then pos:line="29" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="17">die<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><literal type="string" pos:line="30" pos:column="21">"mark_redundant_parents %d %d %d %d"<pos:position pos:line="30" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="59">orig_cnt<pos:position pos:line="30" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="69">cnt<pos:position pos:line="30" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="74">i<pos:position pos:line="30" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="77">marked<pos:position pos:line="30" pos:column="83"/></name></expr></argument>)<pos:position pos:line="30" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="85"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">free_commit_list<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">h<pos:position pos:line="32" pos:column="27"/></name></expr></argument>)<pos:position pos:line="32" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>

	<return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">marked<pos:position pos:line="34" pos:column="22"/></name></expr>;<pos:position pos:line="34" pos:column="23"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

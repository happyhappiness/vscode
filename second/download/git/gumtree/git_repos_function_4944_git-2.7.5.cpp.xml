<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4944_git-2.7.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">find_ofs_delta<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">off_t<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">offset<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">enum<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">object_type<pos:position pos:line="1" pos:column="63"/></name></name></type> <name pos:line="1" pos:column="64">type<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">first<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="24">last<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><name pos:line="3" pos:column="31">nr_ofs_deltas<pos:position pos:line="3" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>

	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><name pos:line="5" pos:column="16">first<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">&lt;<pos:position pos:line="5" pos:column="26"/></operator> <name pos:line="5" pos:column="24">last<pos:position pos:line="5" pos:column="28"/></name></expr>)<pos:position pos:line="5" pos:column="29"/></condition> <block pos:line="5" pos:column="30">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">int<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">next<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><operator pos:line="6" pos:column="28">(<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">first<pos:position pos:line="6" pos:column="34"/></name> <operator pos:line="6" pos:column="35">+<pos:position pos:line="6" pos:column="36"/></operator> <name pos:line="6" pos:column="37">last<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">)<pos:position pos:line="6" pos:column="42"/></operator> <operator pos:line="6" pos:column="43">/<pos:position pos:line="6" pos:column="44"/></operator> <literal type="number" pos:line="6" pos:column="45">2<pos:position pos:line="6" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="47"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">ofs_delta_entry<pos:position pos:line="7" pos:column="39"/></name></name> <modifier pos:line="7" pos:column="40">*<pos:position pos:line="7" pos:column="41"/></modifier></type><name pos:line="7" pos:column="41">delta<pos:position pos:line="7" pos:column="46"/></name> <init pos:line="7" pos:column="47">= <expr><operator pos:line="7" pos:column="49">&amp;<pos:position pos:line="7" pos:column="54"/></operator><name><name pos:line="7" pos:column="50">ofs_deltas<pos:position pos:line="7" pos:column="60"/></name><index pos:line="7" pos:column="60">[<expr><name pos:line="7" pos:column="61">next<pos:position pos:line="7" pos:column="65"/></name></expr>]<pos:position pos:line="7" pos:column="66"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="67"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">cmp<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

		<expr_stmt><expr><name pos:line="10" pos:column="17">cmp<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <call><name pos:line="10" pos:column="23">compare_ofs_delta_bases<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">(<argument><expr><name pos:line="10" pos:column="47">offset<pos:position pos:line="10" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="55">delta<pos:position pos:line="10" pos:column="60"/></name><operator pos:line="10" pos:column="60">-&gt;<pos:position pos:line="10" pos:column="65"/></operator><name pos:line="10" pos:column="62">offset<pos:position pos:line="10" pos:column="68"/></name></name></expr></argument>,
					      <argument><expr><name pos:line="11" pos:column="47">type<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="53">objects<pos:position pos:line="11" pos:column="60"/></name><index pos:line="11" pos:column="60">[<expr><name><name pos:line="11" pos:column="61">delta<pos:position pos:line="11" pos:column="66"/></name><operator pos:line="11" pos:column="66">-&gt;<pos:position pos:line="11" pos:column="71"/></operator><name pos:line="11" pos:column="68">obj_no<pos:position pos:line="11" pos:column="74"/></name></name></expr>]<pos:position pos:line="11" pos:column="75"/></index></name><operator pos:line="11" pos:column="75">.<pos:position pos:line="11" pos:column="76"/></operator><name pos:line="11" pos:column="76">type<pos:position pos:line="11" pos:column="80"/></name></expr></argument>)<pos:position pos:line="11" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="82"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">cmp<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26">
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><name pos:line="13" pos:column="32">next<pos:position pos:line="13" pos:column="36"/></name></expr>;<pos:position pos:line="13" pos:column="37"/></return></block></then></if>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">cmp<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">&lt;<pos:position pos:line="14" pos:column="29"/></operator> <literal type="number" pos:line="14" pos:column="27">0<pos:position pos:line="14" pos:column="28"/></literal></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29"> <block pos:line="14" pos:column="30">{
			<expr_stmt><expr><name pos:line="15" pos:column="25">last<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">=<pos:position pos:line="15" pos:column="31"/></operator> <name pos:line="15" pos:column="32">next<pos:position pos:line="15" pos:column="36"/></name></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
			<continue pos:line="16" pos:column="25">continue;<pos:position pos:line="16" pos:column="34"/></continue>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="18" pos:column="17">first<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <name pos:line="18" pos:column="25">next<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">+<pos:position pos:line="18" pos:column="30"/></operator><literal type="number" pos:line="18" pos:column="30">1<pos:position pos:line="18" pos:column="31"/></literal></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></while>
	<return pos:line="20" pos:column="9">return <expr><operator pos:line="20" pos:column="16">-<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">first<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">-<pos:position pos:line="20" pos:column="23"/></operator><literal type="number" pos:line="20" pos:column="23">1<pos:position pos:line="20" pos:column="24"/></literal></expr>;<pos:position pos:line="20" pos:column="25"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

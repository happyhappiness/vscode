<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6316_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rename_tmp_log_callback<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">path<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">void<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">cb_data<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">rename_cb<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">cb<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name pos:line="3" pos:column="32">cb_data<pos:position pos:line="3" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">rename<pos:position pos:line="5" pos:column="19"/></name><argument_list pos:line="5" pos:column="19">(<argument><expr><name><name pos:line="5" pos:column="20">cb<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">tmp_renamed_log<pos:position pos:line="5" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="41">path<pos:position pos:line="5" pos:column="45"/></name></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="47"/></condition><then pos:line="5" pos:column="47"> <block pos:line="5" pos:column="48">{
		<comment type="block" pos:line="6" pos:column="17">/*
		 * rename(a, b) when b is an existing directory ought
		 * to result in ISDIR, but Solaris 5.8 gives ENOTDIR.
		 * Sheesh. Record the true errno for error reporting,
		 * but report EISDIR to raceproof_create_file() so
		 * that it knows to retry.
		 */</comment>
		<expr_stmt><expr><name><name pos:line="13" pos:column="17">cb<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">true_errno<pos:position pos:line="13" pos:column="31"/></name></name> <operator pos:line="13" pos:column="32">=<pos:position pos:line="13" pos:column="33"/></operator> <name pos:line="13" pos:column="34">errno<pos:position pos:line="13" pos:column="39"/></name></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">errno<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">==<pos:position pos:line="14" pos:column="29"/></operator> <name pos:line="14" pos:column="30">ENOTDIR<pos:position pos:line="14" pos:column="37"/></name></expr>)<pos:position pos:line="14" pos:column="38"/></condition><then pos:line="14" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">errno<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">=<pos:position pos:line="15" pos:column="32"/></operator> <name pos:line="15" pos:column="33">EISDIR<pos:position pos:line="15" pos:column="39"/></name></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt></block></then></if>
		<return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then> <else pos:line="17" pos:column="11">else <block pos:line="17" pos:column="16">{
		<return pos:line="18" pos:column="17">return <expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></else></if>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

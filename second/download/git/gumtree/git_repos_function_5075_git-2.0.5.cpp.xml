<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5075_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">ref_update<pos:position pos:line="1" pos:column="25"/></name></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">update_alloc<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">void<pos:position pos:line="1" pos:column="44"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">ref_update<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">update<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* Allocate and zero-init a struct ref_update */</comment>
	<expr_stmt><expr><name pos:line="6" pos:column="9">update<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <call><name pos:line="6" pos:column="18">xcalloc<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><literal type="number" pos:line="6" pos:column="26">1<pos:position pos:line="6" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="29">sizeof<argument_list pos:line="6" pos:column="35">(<argument><expr><operator pos:line="6" pos:column="36">*<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="37">update<pos:position pos:line="6" pos:column="43"/></name></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">ALLOC_GROW<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">updates<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="29">updates_count<pos:position pos:line="7" pos:column="42"/></name> <operator pos:line="7" pos:column="43">+<pos:position pos:line="7" pos:column="44"/></operator> <literal type="number" pos:line="7" pos:column="45">1<pos:position pos:line="7" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="48">updates_alloc<pos:position pos:line="7" pos:column="61"/></name></expr></argument>)<pos:position pos:line="7" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">updates<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><name pos:line="8" pos:column="17">updates_count<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">++<pos:position pos:line="8" pos:column="32"/></operator></expr>]<pos:position pos:line="8" pos:column="33"/></index></name> <operator pos:line="8" pos:column="34">=<pos:position pos:line="8" pos:column="35"/></operator> <name pos:line="8" pos:column="36">update<pos:position pos:line="8" pos:column="42"/></name></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* Store and reset accumulated options */</comment>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">update<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">flags<pos:position pos:line="11" pos:column="22"/></name></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">update_flags<pos:position pos:line="11" pos:column="37"/></name></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">update_flags<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>

	<return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">update<pos:position pos:line="14" pos:column="22"/></name></expr>;<pos:position pos:line="14" pos:column="23"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

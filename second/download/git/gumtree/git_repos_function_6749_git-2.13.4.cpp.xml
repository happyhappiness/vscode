<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6749_git-2.13.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier><modifier pos:line="1" pos:column="7">*<pos:position pos:line="1" pos:column="8"/></modifier></type><name pos:line="1" pos:column="8">nedpindependent_comalloc<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">nedpool<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">p<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">size_t<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">elems<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">size_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">sizes<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="74">void<pos:position pos:line="1" pos:column="78"/></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier><modifier pos:line="1" pos:column="80">*<pos:position pos:line="1" pos:column="81"/></modifier></type><name pos:line="1" pos:column="81">chunks<pos:position pos:line="1" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="88"/></parameter_list> <name pos:line="1" pos:column="89">THROWSPEC<pos:position pos:line="1" pos:column="98"/></name>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">void<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier><modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">ret<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">threadcache<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">tc<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">mymspace<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">i<pos:position pos:line="6" pos:column="17"/></name></decl>, <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="20">adjustedsizes<pos:position pos:line="6" pos:column="33"/></name><init pos:line="6" pos:column="33">=<expr><operator pos:line="6" pos:column="34">(<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="35">size_t<pos:position pos:line="6" pos:column="41"/></name> <operator pos:line="6" pos:column="42">*<pos:position pos:line="6" pos:column="43"/></operator><operator pos:line="6" pos:column="43">)<pos:position pos:line="6" pos:column="44"/></operator> <call><name pos:line="6" pos:column="45">alloca<pos:position pos:line="6" pos:column="51"/></name><argument_list pos:line="6" pos:column="51">(<argument><expr><name pos:line="6" pos:column="52">elems<pos:position pos:line="6" pos:column="57"/></name><operator pos:line="6" pos:column="57">*<pos:position pos:line="6" pos:column="58"/></operator><sizeof pos:line="6" pos:column="58">sizeof<argument_list pos:line="6" pos:column="64">(<argument><expr><name pos:line="6" pos:column="65">size_t<pos:position pos:line="6" pos:column="71"/></name></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="74"/></decl_stmt>
	<if pos:line="7" pos:column="9">if<condition pos:line="7" pos:column="11">(<expr><operator pos:line="7" pos:column="12">!<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">adjustedsizes<pos:position pos:line="7" pos:column="26"/></name></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27"> <block type="pseudo"><return pos:line="7" pos:column="28">return <expr><literal type="number" pos:line="7" pos:column="35">0<pos:position pos:line="7" pos:column="36"/></literal></expr>;<pos:position pos:line="7" pos:column="37"/></return></block></then></if>
	<for pos:line="8" pos:column="9">for<control pos:line="8" pos:column="12">(<init><expr><name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator><literal type="number" pos:line="8" pos:column="15">0<pos:position pos:line="8" pos:column="16"/></literal></expr>;<pos:position pos:line="8" pos:column="17"/></init> <condition><expr><name pos:line="8" pos:column="18">i<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="20">elems<pos:position pos:line="8" pos:column="25"/></name></expr>;<pos:position pos:line="8" pos:column="26"/></condition> <incr><expr><name pos:line="8" pos:column="27">i<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">++<pos:position pos:line="8" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="31"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="17">adjustedsizes<pos:position pos:line="9" pos:column="30"/></name><index pos:line="9" pos:column="30">[<expr><name pos:line="9" pos:column="31">i<pos:position pos:line="9" pos:column="32"/></name></expr>]<pos:position pos:line="9" pos:column="33"/></index></name><operator pos:line="9" pos:column="33">=<pos:position pos:line="9" pos:column="34"/></operator><ternary><condition><expr><name><name pos:line="9" pos:column="34">sizes<pos:position pos:line="9" pos:column="39"/></name><index pos:line="9" pos:column="39">[<expr><name pos:line="9" pos:column="40">i<pos:position pos:line="9" pos:column="41"/></name></expr>]<pos:position pos:line="9" pos:column="42"/></index></name><operator pos:line="9" pos:column="42">&lt;<pos:position pos:line="9" pos:column="46"/></operator><sizeof pos:line="9" pos:column="43">sizeof<argument_list pos:line="9" pos:column="49">(<argument><expr><name pos:line="9" pos:column="50">threadcacheblk<pos:position pos:line="9" pos:column="64"/></name></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></sizeof></expr> ?<pos:position pos:line="9" pos:column="67"/></condition><then pos:line="9" pos:column="67"> <expr><sizeof pos:line="9" pos:column="68">sizeof<argument_list pos:line="9" pos:column="74">(<argument><expr><name pos:line="9" pos:column="75">threadcacheblk<pos:position pos:line="9" pos:column="89"/></name></expr></argument>)<pos:position pos:line="9" pos:column="90"/></argument_list></sizeof></expr> <pos:position pos:line="9" pos:column="91"/></then><else pos:line="9" pos:column="91">: <expr><name><name pos:line="9" pos:column="93">sizes<pos:position pos:line="9" pos:column="98"/></name><index pos:line="9" pos:column="98">[<expr><name pos:line="9" pos:column="99">i<pos:position pos:line="9" pos:column="100"/></name></expr>]<pos:position pos:line="9" pos:column="101"/></index></name></expr></else></ternary></expr>;<pos:position pos:line="9" pos:column="102"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">GetThreadCache<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><operator pos:line="10" pos:column="24">&amp;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="25">p<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="28">&amp;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="29">tc<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="33">&amp;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="34">mymspace<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="44">0<pos:position pos:line="10" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">GETMSPACE<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">m<pos:position pos:line="11" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="22">p<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="25">tc<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="29">mymspace<pos:position pos:line="11" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="39">0<pos:position pos:line="11" pos:column="40"/></literal></expr></argument>,
	      <argument><expr><name pos:line="12" pos:column="15">ret<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator><call><name pos:line="12" pos:column="19">mspace_independent_comalloc<pos:position pos:line="12" pos:column="46"/></name><argument_list pos:line="12" pos:column="46">(<argument><expr><name pos:line="12" pos:column="47">m<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">elems<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="57">adjustedsizes<pos:position pos:line="12" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="72">chunks<pos:position pos:line="12" pos:column="78"/></name></expr></argument>)<pos:position pos:line="12" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="81"/></expr_stmt>
	<return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">ret<pos:position pos:line="13" pos:column="19"/></name></expr>;<pos:position pos:line="13" pos:column="20"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1989.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">want_object_in_pack<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">unsigned<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">sha1<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">exclude<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>,
			       <parameter><decl><type><name><name pos:line="3" pos:column="32">struct<pos:position pos:line="3" pos:column="38"/></name> <name pos:line="3" pos:column="39">packed_git<pos:position pos:line="3" pos:column="49"/></name></name> <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier><modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">found_pack<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="4" pos:column="32">off_t<pos:position pos:line="4" pos:column="37"/></name> <modifier pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></modifier></type><name pos:line="4" pos:column="39">found_offset<pos:position pos:line="4" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="52"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">packed_git<pos:position pos:line="6" pos:column="26"/></name></name> <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier></type><name pos:line="6" pos:column="28">p<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">exclude<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">&amp;&amp;<pos:position pos:line="8" pos:column="32"/></operator> <name pos:line="8" pos:column="25">local<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">&amp;&amp;<pos:position pos:line="8" pos:column="41"/></operator> <call><name pos:line="8" pos:column="34">has_loose_object_nonlocal<pos:position pos:line="8" pos:column="59"/></name><argument_list pos:line="8" pos:column="59">(<argument><expr><name pos:line="8" pos:column="60">sha1<pos:position pos:line="8" pos:column="64"/></name></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="66"/></condition><then pos:line="8" pos:column="66">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><operator pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">found_pack<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">NULL<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">found_offset<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>

	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">p<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">packed_git<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></init> <condition><expr><name pos:line="14" pos:column="30">p<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></condition> <incr><expr><name pos:line="14" pos:column="33">p<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">=<pos:position pos:line="14" pos:column="36"/></operator> <name><name pos:line="14" pos:column="37">p<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">-&gt;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="40">next<pos:position pos:line="14" pos:column="44"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="45"/></control> <block pos:line="14" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">off_t<pos:position pos:line="15" pos:column="22"/></name></type> <name pos:line="15" pos:column="23">offset<pos:position pos:line="15" pos:column="29"/></name> <init pos:line="15" pos:column="30">= <expr><call><name pos:line="15" pos:column="32">find_pack_entry_one<pos:position pos:line="15" pos:column="51"/></name><argument_list pos:line="15" pos:column="51">(<argument><expr><name pos:line="15" pos:column="52">sha1<pos:position pos:line="15" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="58">p<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="61"/></decl_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">offset<pos:position pos:line="16" pos:column="27"/></name></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28"> <block pos:line="16" pos:column="29">{
			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><operator pos:line="17" pos:column="29">!<pos:position pos:line="17" pos:column="30"/></operator><operator pos:line="17" pos:column="30">*<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">found_pack<pos:position pos:line="17" pos:column="41"/></name></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42"> <block pos:line="17" pos:column="43">{
				<if pos:line="18" pos:column="33">if <condition pos:line="18" pos:column="36">(<expr><operator pos:line="18" pos:column="37">!<pos:position pos:line="18" pos:column="38"/></operator><call><name pos:line="18" pos:column="38">is_pack_valid<pos:position pos:line="18" pos:column="51"/></name><argument_list pos:line="18" pos:column="51">(<argument><expr><name pos:line="18" pos:column="52">p<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="55"/></condition><then pos:line="18" pos:column="55"> <block pos:line="18" pos:column="56">{
					<expr_stmt><expr><call><name pos:line="19" pos:column="41">warning<pos:position pos:line="19" pos:column="48"/></name><argument_list pos:line="19" pos:column="48">(<argument><expr><literal type="string" pos:line="19" pos:column="49">"packfile %s cannot be accessed"<pos:position pos:line="19" pos:column="81"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="83">p<pos:position pos:line="19" pos:column="84"/></name><operator pos:line="19" pos:column="84">-&gt;<pos:position pos:line="19" pos:column="89"/></operator><name pos:line="19" pos:column="86">pack_name<pos:position pos:line="19" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="97"/></expr_stmt>
					<continue pos:line="20" pos:column="41">continue;<pos:position pos:line="20" pos:column="50"/></continue>
				}<pos:position pos:line="21" pos:column="34"/></block></then></if>
				<expr_stmt><expr><operator pos:line="22" pos:column="33">*<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="34">found_offset<pos:position pos:line="22" pos:column="46"/></name> <operator pos:line="22" pos:column="47">=<pos:position pos:line="22" pos:column="48"/></operator> <name pos:line="22" pos:column="49">offset<pos:position pos:line="22" pos:column="55"/></name></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="23" pos:column="33">*<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="34">found_pack<pos:position pos:line="23" pos:column="44"/></name> <operator pos:line="23" pos:column="45">=<pos:position pos:line="23" pos:column="46"/></operator> <name pos:line="23" pos:column="47">p<pos:position pos:line="23" pos:column="48"/></name></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="24" pos:column="26"/></block></then></if>
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><name pos:line="25" pos:column="29">exclude<pos:position pos:line="25" pos:column="36"/></name></expr>)<pos:position pos:line="25" pos:column="37"/></condition><then pos:line="25" pos:column="37">
				<block type="pseudo"><return pos:line="26" pos:column="33">return <expr><literal type="number" pos:line="26" pos:column="40">1<pos:position pos:line="26" pos:column="41"/></literal></expr>;<pos:position pos:line="26" pos:column="42"/></return></block></then></if>
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><name pos:line="27" pos:column="29">incremental<pos:position pos:line="27" pos:column="40"/></name></expr>)<pos:position pos:line="27" pos:column="41"/></condition><then pos:line="27" pos:column="41">
				<block type="pseudo"><return pos:line="28" pos:column="33">return <expr><literal type="number" pos:line="28" pos:column="40">0<pos:position pos:line="28" pos:column="41"/></literal></expr>;<pos:position pos:line="28" pos:column="42"/></return></block></then></if>
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><name pos:line="29" pos:column="29">local<pos:position pos:line="29" pos:column="34"/></name> <operator pos:line="29" pos:column="35">&amp;&amp;<pos:position pos:line="29" pos:column="45"/></operator> <operator pos:line="29" pos:column="38">!<pos:position pos:line="29" pos:column="39"/></operator><name><name pos:line="29" pos:column="39">p<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">-&gt;<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="42">pack_local<pos:position pos:line="29" pos:column="52"/></name></name></expr>)<pos:position pos:line="29" pos:column="53"/></condition><then pos:line="29" pos:column="53">
				<block type="pseudo"><return pos:line="30" pos:column="33">return <expr><literal type="number" pos:line="30" pos:column="40">0<pos:position pos:line="30" pos:column="41"/></literal></expr>;<pos:position pos:line="30" pos:column="42"/></return></block></then></if>
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><name pos:line="31" pos:column="29">ignore_packed_keep<pos:position pos:line="31" pos:column="47"/></name> <operator pos:line="31" pos:column="48">&amp;&amp;<pos:position pos:line="31" pos:column="58"/></operator> <name><name pos:line="31" pos:column="51">p<pos:position pos:line="31" pos:column="52"/></name><operator pos:line="31" pos:column="52">-&gt;<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="54">pack_local<pos:position pos:line="31" pos:column="64"/></name></name> <operator pos:line="31" pos:column="65">&amp;&amp;<pos:position pos:line="31" pos:column="75"/></operator> <name><name pos:line="31" pos:column="68">p<pos:position pos:line="31" pos:column="69"/></name><operator pos:line="31" pos:column="69">-&gt;<pos:position pos:line="31" pos:column="74"/></operator><name pos:line="31" pos:column="71">pack_keep<pos:position pos:line="31" pos:column="80"/></name></name></expr>)<pos:position pos:line="31" pos:column="81"/></condition><then pos:line="31" pos:column="81">
				<block type="pseudo"><return pos:line="32" pos:column="33">return <expr><literal type="number" pos:line="32" pos:column="40">0<pos:position pos:line="32" pos:column="41"/></literal></expr>;<pos:position pos:line="32" pos:column="42"/></return></block></then></if>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
	}<pos:position pos:line="34" pos:column="10"/></block></for>

	<return pos:line="36" pos:column="9">return <expr><literal type="number" pos:line="36" pos:column="16">1<pos:position pos:line="36" pos:column="17"/></literal></expr>;<pos:position pos:line="36" pos:column="18"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

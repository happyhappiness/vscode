<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1837_git-2.10.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">unsigned<pos:position pos:line="1" pos:column="9"/></name> <name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">use_pack<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">packed_git<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">p<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">pack_window<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier><modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">w_cursor<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">off_t<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">offset<pos:position pos:line="3" pos:column="29"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="4" pos:column="17">unsigned<pos:position pos:line="4" pos:column="25"/></name> <name pos:line="4" pos:column="26">long<pos:position pos:line="4" pos:column="30"/></name> <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier></type><name pos:line="4" pos:column="32">left<pos:position pos:line="4" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="37"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">pack_window<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">win<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><operator pos:line="6" pos:column="35">*<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="36">w_cursor<pos:position pos:line="6" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* Since packfiles end in a hash of their content and it's
	 * pointless to ask for an offset into the middle of that
	 * hash, and the in_window function above wouldn't match
	 * don't allow an offset too close to the end of the file.
	 */</comment>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name><name pos:line="13" pos:column="14">p<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">pack_size<pos:position pos:line="13" pos:column="26"/></name></name> <operator pos:line="13" pos:column="27">&amp;&amp;<pos:position pos:line="13" pos:column="37"/></operator> <name><name pos:line="13" pos:column="30">p<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">pack_fd<pos:position pos:line="13" pos:column="40"/></name></name> <operator pos:line="13" pos:column="41">==<pos:position pos:line="13" pos:column="43"/></operator> <operator pos:line="13" pos:column="44">-<pos:position pos:line="13" pos:column="45"/></operator><literal type="number" pos:line="13" pos:column="45">1<pos:position pos:line="13" pos:column="46"/></literal> <operator pos:line="13" pos:column="47">&amp;&amp;<pos:position pos:line="13" pos:column="57"/></operator> <call><name pos:line="13" pos:column="50">open_packed_git<pos:position pos:line="13" pos:column="65"/></name><argument_list pos:line="13" pos:column="65">(<argument><expr><name pos:line="13" pos:column="66">p<pos:position pos:line="13" pos:column="67"/></name></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="69"/></condition><then pos:line="13" pos:column="69">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">die<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><literal type="string" pos:line="14" pos:column="21">"packfile %s cannot be accessed"<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="55">p<pos:position pos:line="14" pos:column="56"/></name><operator pos:line="14" pos:column="56">-&gt;<pos:position pos:line="14" pos:column="61"/></operator><name pos:line="14" pos:column="58">pack_name<pos:position pos:line="14" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="69"/></expr_stmt></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">offset<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">&gt;<pos:position pos:line="15" pos:column="24"/></operator> <operator pos:line="15" pos:column="22">(<pos:position pos:line="15" pos:column="23"/></operator><name><name pos:line="15" pos:column="23">p<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">pack_size<pos:position pos:line="15" pos:column="35"/></name></name> <operator pos:line="15" pos:column="36">-<pos:position pos:line="15" pos:column="37"/></operator> <literal type="number" pos:line="15" pos:column="38">20<pos:position pos:line="15" pos:column="40"/></literal><operator pos:line="15" pos:column="40">)<pos:position pos:line="15" pos:column="41"/></operator></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">die<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><literal type="string" pos:line="16" pos:column="21">"offset beyond end of packfile (truncated pack?)"<pos:position pos:line="16" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="72"/></expr_stmt></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">offset<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">&lt;<pos:position pos:line="17" pos:column="24"/></operator> <literal type="number" pos:line="17" pos:column="22">0<pos:position pos:line="17" pos:column="23"/></literal></expr>)<pos:position pos:line="17" pos:column="24"/></condition><then pos:line="17" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">die<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><call><name pos:line="18" pos:column="21">_<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><literal type="string" pos:line="18" pos:column="23">"offset before end of packfile (broken .idx?)"<pos:position pos:line="18" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="72"/></expr_stmt></block></then></if>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">win<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">||<pos:position pos:line="20" pos:column="20"/></operator> <operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><call><name pos:line="20" pos:column="22">in_window<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">win<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="37">offset<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="45"/></condition><then pos:line="20" pos:column="45"> <block pos:line="20" pos:column="46">{
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">win<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="25">win<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">-&gt;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="30">inuse_cnt<pos:position pos:line="22" pos:column="39"/></name></name><operator pos:line="22" pos:column="39">--<pos:position pos:line="22" pos:column="41"/></operator></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt></block></then></if>
		<for pos:line="23" pos:column="17">for <control pos:line="23" pos:column="21">(<init><expr><name pos:line="23" pos:column="22">win<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">=<pos:position pos:line="23" pos:column="27"/></operator> <name><name pos:line="23" pos:column="28">p<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">-&gt;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="31">windows<pos:position pos:line="23" pos:column="38"/></name></name></expr>;<pos:position pos:line="23" pos:column="39"/></init> <condition><expr><name pos:line="23" pos:column="40">win<pos:position pos:line="23" pos:column="43"/></name></expr>;<pos:position pos:line="23" pos:column="44"/></condition> <incr><expr><name pos:line="23" pos:column="45">win<pos:position pos:line="23" pos:column="48"/></name> <operator pos:line="23" pos:column="49">=<pos:position pos:line="23" pos:column="50"/></operator> <name><name pos:line="23" pos:column="51">win<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">-&gt;<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="56">next<pos:position pos:line="23" pos:column="60"/></name></name></expr></incr>)<pos:position pos:line="23" pos:column="61"/></control> <block pos:line="23" pos:column="62">{
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><call><name pos:line="24" pos:column="29">in_window<pos:position pos:line="24" pos:column="38"/></name><argument_list pos:line="24" pos:column="38">(<argument><expr><name pos:line="24" pos:column="39">win<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="44">offset<pos:position pos:line="24" pos:column="50"/></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="52"/></condition><then pos:line="24" pos:column="52">
				<block type="pseudo"><break pos:line="25" pos:column="33">break;<pos:position pos:line="25" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="26" pos:column="18"/></block></for>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">win<pos:position pos:line="27" pos:column="25"/></name></expr>)<pos:position pos:line="27" pos:column="26"/></condition><then pos:line="27" pos:column="26"> <block pos:line="27" pos:column="27">{
			<decl_stmt><decl><type><name pos:line="28" pos:column="25">size_t<pos:position pos:line="28" pos:column="31"/></name></type> <name pos:line="28" pos:column="32">window_align<pos:position pos:line="28" pos:column="44"/></name> <init pos:line="28" pos:column="45">= <expr><name pos:line="28" pos:column="47">packed_git_window_size<pos:position pos:line="28" pos:column="69"/></name> <operator pos:line="28" pos:column="70">/<pos:position pos:line="28" pos:column="71"/></operator> <literal type="number" pos:line="28" pos:column="72">2<pos:position pos:line="28" pos:column="73"/></literal></expr></init></decl>;<pos:position pos:line="28" pos:column="74"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="29" pos:column="25">off_t<pos:position pos:line="29" pos:column="30"/></name></type> <name pos:line="29" pos:column="31">len<pos:position pos:line="29" pos:column="34"/></name></decl>;<pos:position pos:line="29" pos:column="35"/></decl_stmt>

			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><name><name pos:line="31" pos:column="29">p<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">-&gt;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="32">pack_fd<pos:position pos:line="31" pos:column="39"/></name></name> <operator pos:line="31" pos:column="40">==<pos:position pos:line="31" pos:column="42"/></operator> <operator pos:line="31" pos:column="43">-<pos:position pos:line="31" pos:column="44"/></operator><literal type="number" pos:line="31" pos:column="44">1<pos:position pos:line="31" pos:column="45"/></literal> <operator pos:line="31" pos:column="46">&amp;&amp;<pos:position pos:line="31" pos:column="56"/></operator> <call><name pos:line="31" pos:column="49">open_packed_git<pos:position pos:line="31" pos:column="64"/></name><argument_list pos:line="31" pos:column="64">(<argument><expr><name pos:line="31" pos:column="65">p<pos:position pos:line="31" pos:column="66"/></name></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="68"/></condition><then pos:line="31" pos:column="68">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="33">die<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><literal type="string" pos:line="32" pos:column="37">"packfile %s cannot be accessed"<pos:position pos:line="32" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="71">p<pos:position pos:line="32" pos:column="72"/></name><operator pos:line="32" pos:column="72">-&gt;<pos:position pos:line="32" pos:column="77"/></operator><name pos:line="32" pos:column="74">pack_name<pos:position pos:line="32" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="85"/></expr_stmt></block></then></if>

			<expr_stmt><expr><name pos:line="34" pos:column="25">win<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">=<pos:position pos:line="34" pos:column="30"/></operator> <call><name pos:line="34" pos:column="31">xcalloc<pos:position pos:line="34" pos:column="38"/></name><argument_list pos:line="34" pos:column="38">(<argument><expr><literal type="number" pos:line="34" pos:column="39">1<pos:position pos:line="34" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="42">sizeof<argument_list pos:line="34" pos:column="48">(<argument><expr><operator pos:line="34" pos:column="49">*<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="50">win<pos:position pos:line="34" pos:column="53"/></name></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="35" pos:column="25">win<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">-&gt;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="30">offset<pos:position pos:line="35" pos:column="36"/></name></name> <operator pos:line="35" pos:column="37">=<pos:position pos:line="35" pos:column="38"/></operator> <operator pos:line="35" pos:column="39">(<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="40">offset<pos:position pos:line="35" pos:column="46"/></name> <operator pos:line="35" pos:column="47">/<pos:position pos:line="35" pos:column="48"/></operator> <name pos:line="35" pos:column="49">window_align<pos:position pos:line="35" pos:column="61"/></name><operator pos:line="35" pos:column="61">)<pos:position pos:line="35" pos:column="62"/></operator> <operator pos:line="35" pos:column="63">*<pos:position pos:line="35" pos:column="64"/></operator> <name pos:line="35" pos:column="65">window_align<pos:position pos:line="35" pos:column="77"/></name></expr>;<pos:position pos:line="35" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><name pos:line="36" pos:column="25">len<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <name><name pos:line="36" pos:column="31">p<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">-&gt;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="34">pack_size<pos:position pos:line="36" pos:column="43"/></name></name> <operator pos:line="36" pos:column="44">-<pos:position pos:line="36" pos:column="45"/></operator> <name><name pos:line="36" pos:column="46">win<pos:position pos:line="36" pos:column="49"/></name><operator pos:line="36" pos:column="49">-&gt;<pos:position pos:line="36" pos:column="54"/></operator><name pos:line="36" pos:column="51">offset<pos:position pos:line="36" pos:column="57"/></name></name></expr>;<pos:position pos:line="36" pos:column="58"/></expr_stmt>
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><name pos:line="37" pos:column="29">len<pos:position pos:line="37" pos:column="32"/></name> <operator pos:line="37" pos:column="33">&gt;<pos:position pos:line="37" pos:column="37"/></operator> <name pos:line="37" pos:column="35">packed_git_window_size<pos:position pos:line="37" pos:column="57"/></name></expr>)<pos:position pos:line="37" pos:column="58"/></condition><then pos:line="37" pos:column="58">
				<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="33">len<pos:position pos:line="38" pos:column="36"/></name> <operator pos:line="38" pos:column="37">=<pos:position pos:line="38" pos:column="38"/></operator> <name pos:line="38" pos:column="39">packed_git_window_size<pos:position pos:line="38" pos:column="61"/></name></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="39" pos:column="25">win<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">len<pos:position pos:line="39" pos:column="33"/></name></name> <operator pos:line="39" pos:column="34">=<pos:position pos:line="39" pos:column="35"/></operator> <operator pos:line="39" pos:column="36">(<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="37">size_t<pos:position pos:line="39" pos:column="43"/></name><operator pos:line="39" pos:column="43">)<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="44">len<pos:position pos:line="39" pos:column="47"/></name></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name pos:line="40" pos:column="25">pack_mapped<pos:position pos:line="40" pos:column="36"/></name> <operator pos:line="40" pos:column="37">+=<pos:position pos:line="40" pos:column="39"/></operator> <name><name pos:line="40" pos:column="40">win<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">-&gt;<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="45">len<pos:position pos:line="40" pos:column="48"/></name></name></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt>
			<while pos:line="41" pos:column="25">while <condition pos:line="41" pos:column="31">(<expr><name pos:line="41" pos:column="32">packed_git_limit<pos:position pos:line="41" pos:column="48"/></name> <operator pos:line="41" pos:column="49">&lt;<pos:position pos:line="41" pos:column="53"/></operator> <name pos:line="41" pos:column="51">pack_mapped<pos:position pos:line="41" pos:column="62"/></name>
				<operator pos:line="42" pos:column="33">&amp;&amp;<pos:position pos:line="42" pos:column="43"/></operator> <call><name pos:line="42" pos:column="36">unuse_one_window<pos:position pos:line="42" pos:column="52"/></name><argument_list pos:line="42" pos:column="52">(<argument><expr><name pos:line="42" pos:column="53">p<pos:position pos:line="42" pos:column="54"/></name></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="56"/></condition>
				<block type="pseudo"><empty_stmt pos:line="43" pos:column="33">;<pos:position pos:line="43" pos:column="34"/></empty_stmt></block></while> <comment type="block" pos:line="43" pos:column="35">/* nothing */</comment>
			<expr_stmt><expr><name><name pos:line="44" pos:column="25">win<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">-&gt;<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="30">base<pos:position pos:line="44" pos:column="34"/></name></name> <operator pos:line="44" pos:column="35">=<pos:position pos:line="44" pos:column="36"/></operator> <call><name pos:line="44" pos:column="37">xmmap<pos:position pos:line="44" pos:column="42"/></name><argument_list pos:line="44" pos:column="42">(<argument><expr><name pos:line="44" pos:column="43">NULL<pos:position pos:line="44" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="49">win<pos:position pos:line="44" pos:column="52"/></name><operator pos:line="44" pos:column="52">-&gt;<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="54">len<pos:position pos:line="44" pos:column="57"/></name></name></expr></argument>,
				<argument><expr><name pos:line="45" pos:column="33">PROT_READ<pos:position pos:line="45" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="44">MAP_PRIVATE<pos:position pos:line="45" pos:column="55"/></name></expr></argument>,
				<argument><expr><name><name pos:line="46" pos:column="33">p<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">-&gt;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="36">pack_fd<pos:position pos:line="46" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="45">win<pos:position pos:line="46" pos:column="48"/></name><operator pos:line="46" pos:column="48">-&gt;<pos:position pos:line="46" pos:column="53"/></operator><name pos:line="46" pos:column="50">offset<pos:position pos:line="46" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="58"/></expr_stmt>
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><name><name pos:line="47" pos:column="29">win<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">base<pos:position pos:line="47" pos:column="38"/></name></name> <operator pos:line="47" pos:column="39">==<pos:position pos:line="47" pos:column="41"/></operator> <name pos:line="47" pos:column="42">MAP_FAILED<pos:position pos:line="47" pos:column="52"/></name></expr>)<pos:position pos:line="47" pos:column="53"/></condition><then pos:line="47" pos:column="53">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="33">die_errno<pos:position pos:line="48" pos:column="42"/></name><argument_list pos:line="48" pos:column="42">(<argument><expr><literal type="string" pos:line="48" pos:column="43">"packfile %s cannot be mapped"<pos:position pos:line="48" pos:column="73"/></literal></expr></argument>,
					  <argument><expr><name><name pos:line="49" pos:column="43">p<pos:position pos:line="49" pos:column="44"/></name><operator pos:line="49" pos:column="44">-&gt;<pos:position pos:line="49" pos:column="49"/></operator><name pos:line="49" pos:column="46">pack_name<pos:position pos:line="49" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="57"/></expr_stmt></block></then></if>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><operator pos:line="50" pos:column="29">!<pos:position pos:line="50" pos:column="30"/></operator><name><name pos:line="50" pos:column="30">win<pos:position pos:line="50" pos:column="33"/></name><operator pos:line="50" pos:column="33">-&gt;<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="35">offset<pos:position pos:line="50" pos:column="41"/></name></name> <operator pos:line="50" pos:column="42">&amp;&amp;<pos:position pos:line="50" pos:column="52"/></operator> <name><name pos:line="50" pos:column="45">win<pos:position pos:line="50" pos:column="48"/></name><operator pos:line="50" pos:column="48">-&gt;<pos:position pos:line="50" pos:column="53"/></operator><name pos:line="50" pos:column="50">len<pos:position pos:line="50" pos:column="53"/></name></name> <operator pos:line="50" pos:column="54">==<pos:position pos:line="50" pos:column="56"/></operator> <name><name pos:line="50" pos:column="57">p<pos:position pos:line="50" pos:column="58"/></name><operator pos:line="50" pos:column="58">-&gt;<pos:position pos:line="50" pos:column="63"/></operator><name pos:line="50" pos:column="60">pack_size<pos:position pos:line="50" pos:column="69"/></name></name>
				<operator pos:line="51" pos:column="33">&amp;&amp;<pos:position pos:line="51" pos:column="43"/></operator> <operator pos:line="51" pos:column="36">!<pos:position pos:line="51" pos:column="37"/></operator><name><name pos:line="51" pos:column="37">p<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">-&gt;<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="40">do_not_close<pos:position pos:line="51" pos:column="52"/></name></name></expr>)<pos:position pos:line="51" pos:column="53"/></condition><then pos:line="51" pos:column="53">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="33">close_pack_fd<pos:position pos:line="52" pos:column="46"/></name><argument_list pos:line="52" pos:column="46">(<argument><expr><name pos:line="52" pos:column="47">p<pos:position pos:line="52" pos:column="48"/></name></expr></argument>)<pos:position pos:line="52" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="50"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="53" pos:column="25">pack_mmap_calls<pos:position pos:line="53" pos:column="40"/></name><operator pos:line="53" pos:column="40">++<pos:position pos:line="53" pos:column="42"/></operator></expr>;<pos:position pos:line="53" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="54" pos:column="25">pack_open_windows<pos:position pos:line="54" pos:column="42"/></name><operator pos:line="54" pos:column="42">++<pos:position pos:line="54" pos:column="44"/></operator></expr>;<pos:position pos:line="54" pos:column="45"/></expr_stmt>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><name pos:line="55" pos:column="29">pack_mapped<pos:position pos:line="55" pos:column="40"/></name> <operator pos:line="55" pos:column="41">&gt;<pos:position pos:line="55" pos:column="45"/></operator> <name pos:line="55" pos:column="43">peak_pack_mapped<pos:position pos:line="55" pos:column="59"/></name></expr>)<pos:position pos:line="55" pos:column="60"/></condition><then pos:line="55" pos:column="60">
				<block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="33">peak_pack_mapped<pos:position pos:line="56" pos:column="49"/></name> <operator pos:line="56" pos:column="50">=<pos:position pos:line="56" pos:column="51"/></operator> <name pos:line="56" pos:column="52">pack_mapped<pos:position pos:line="56" pos:column="63"/></name></expr>;<pos:position pos:line="56" pos:column="64"/></expr_stmt></block></then></if>
			<if pos:line="57" pos:column="25">if <condition pos:line="57" pos:column="28">(<expr><name pos:line="57" pos:column="29">pack_open_windows<pos:position pos:line="57" pos:column="46"/></name> <operator pos:line="57" pos:column="47">&gt;<pos:position pos:line="57" pos:column="51"/></operator> <name pos:line="57" pos:column="49">peak_pack_open_windows<pos:position pos:line="57" pos:column="71"/></name></expr>)<pos:position pos:line="57" pos:column="72"/></condition><then pos:line="57" pos:column="72">
				<block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="33">peak_pack_open_windows<pos:position pos:line="58" pos:column="55"/></name> <operator pos:line="58" pos:column="56">=<pos:position pos:line="58" pos:column="57"/></operator> <name pos:line="58" pos:column="58">pack_open_windows<pos:position pos:line="58" pos:column="75"/></name></expr>;<pos:position pos:line="58" pos:column="76"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="59" pos:column="25">win<pos:position pos:line="59" pos:column="28"/></name><operator pos:line="59" pos:column="28">-&gt;<pos:position pos:line="59" pos:column="33"/></operator><name pos:line="59" pos:column="30">next<pos:position pos:line="59" pos:column="34"/></name></name> <operator pos:line="59" pos:column="35">=<pos:position pos:line="59" pos:column="36"/></operator> <name><name pos:line="59" pos:column="37">p<pos:position pos:line="59" pos:column="38"/></name><operator pos:line="59" pos:column="38">-&gt;<pos:position pos:line="59" pos:column="43"/></operator><name pos:line="59" pos:column="40">windows<pos:position pos:line="59" pos:column="47"/></name></name></expr>;<pos:position pos:line="59" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="60" pos:column="25">p<pos:position pos:line="60" pos:column="26"/></name><operator pos:line="60" pos:column="26">-&gt;<pos:position pos:line="60" pos:column="31"/></operator><name pos:line="60" pos:column="28">windows<pos:position pos:line="60" pos:column="35"/></name></name> <operator pos:line="60" pos:column="36">=<pos:position pos:line="60" pos:column="37"/></operator> <name pos:line="60" pos:column="38">win<pos:position pos:line="60" pos:column="41"/></name></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="61" pos:column="18"/></block></then></if>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">win<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">!=<pos:position pos:line="63" pos:column="19"/></operator> <operator pos:line="63" pos:column="20">*<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="21">w_cursor<pos:position pos:line="63" pos:column="29"/></name></expr>)<pos:position pos:line="63" pos:column="30"/></condition><then pos:line="63" pos:column="30"> <block pos:line="63" pos:column="31">{
		<expr_stmt><expr><name><name pos:line="64" pos:column="17">win<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">-&gt;<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="22">last_used<pos:position pos:line="64" pos:column="31"/></name></name> <operator pos:line="64" pos:column="32">=<pos:position pos:line="64" pos:column="33"/></operator> <name pos:line="64" pos:column="34">pack_used_ctr<pos:position pos:line="64" pos:column="47"/></name><operator pos:line="64" pos:column="47">++<pos:position pos:line="64" pos:column="49"/></operator></expr>;<pos:position pos:line="64" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="65" pos:column="17">win<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">-&gt;<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="22">inuse_cnt<pos:position pos:line="65" pos:column="31"/></name></name><operator pos:line="65" pos:column="31">++<pos:position pos:line="65" pos:column="33"/></operator></expr>;<pos:position pos:line="65" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="66" pos:column="17">*<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="18">w_cursor<pos:position pos:line="66" pos:column="26"/></name> <operator pos:line="66" pos:column="27">=<pos:position pos:line="66" pos:column="28"/></operator> <name pos:line="66" pos:column="29">win<pos:position pos:line="66" pos:column="32"/></name></expr>;<pos:position pos:line="66" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="67" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="68" pos:column="9">offset<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">-=<pos:position pos:line="68" pos:column="18"/></operator> <name><name pos:line="68" pos:column="19">win<pos:position pos:line="68" pos:column="22"/></name><operator pos:line="68" pos:column="22">-&gt;<pos:position pos:line="68" pos:column="27"/></operator><name pos:line="68" pos:column="24">offset<pos:position pos:line="68" pos:column="30"/></name></name></expr>;<pos:position pos:line="68" pos:column="31"/></expr_stmt>
	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name pos:line="69" pos:column="13">left<pos:position pos:line="69" pos:column="17"/></name></expr>)<pos:position pos:line="69" pos:column="18"/></condition><then pos:line="69" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="70" pos:column="17">*<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="18">left<pos:position pos:line="70" pos:column="22"/></name> <operator pos:line="70" pos:column="23">=<pos:position pos:line="70" pos:column="24"/></operator> <name><name pos:line="70" pos:column="25">win<pos:position pos:line="70" pos:column="28"/></name><operator pos:line="70" pos:column="28">-&gt;<pos:position pos:line="70" pos:column="33"/></operator><name pos:line="70" pos:column="30">len<pos:position pos:line="70" pos:column="33"/></name></name> <operator pos:line="70" pos:column="34">-<pos:position pos:line="70" pos:column="35"/></operator> <call><name pos:line="70" pos:column="36">xsize_t<pos:position pos:line="70" pos:column="43"/></name><argument_list pos:line="70" pos:column="43">(<argument><expr><name pos:line="70" pos:column="44">offset<pos:position pos:line="70" pos:column="50"/></name></expr></argument>)<pos:position pos:line="70" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="52"/></expr_stmt></block></then></if>
	<return pos:line="71" pos:column="9">return <expr><name><name pos:line="71" pos:column="16">win<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">-&gt;<pos:position pos:line="71" pos:column="24"/></operator><name pos:line="71" pos:column="21">base<pos:position pos:line="71" pos:column="25"/></name></name> <operator pos:line="71" pos:column="26">+<pos:position pos:line="71" pos:column="27"/></operator> <name pos:line="71" pos:column="28">offset<pos:position pos:line="71" pos:column="34"/></name></expr>;<pos:position pos:line="71" pos:column="35"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

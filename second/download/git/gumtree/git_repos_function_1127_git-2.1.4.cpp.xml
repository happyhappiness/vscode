<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1127_git-2.1.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">adjust_shared_perm<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">path<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">old_mode<pos:position pos:line="3" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="23">new_mode<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">shared_repository<pos:position pos:line="5" pos:column="31"/></name></expr>)<pos:position pos:line="5" pos:column="32"/></condition><then pos:line="5" pos:column="32">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">get_st_mode_bits<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">path<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="36">&amp;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="37">old_mode<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call> <operator pos:line="7" pos:column="47">&lt;<pos:position pos:line="7" pos:column="51"/></operator> <literal type="number" pos:line="7" pos:column="49">0<pos:position pos:line="7" pos:column="50"/></literal></expr>)<pos:position pos:line="7" pos:column="51"/></condition><then pos:line="7" pos:column="51">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">-<pos:position pos:line="8" pos:column="25"/></operator><literal type="number" pos:line="8" pos:column="25">1<pos:position pos:line="8" pos:column="26"/></literal></expr>;<pos:position pos:line="8" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">new_mode<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <call><name pos:line="10" pos:column="20">calc_shared_perm<pos:position pos:line="10" pos:column="36"/></name><argument_list pos:line="10" pos:column="36">(<argument><expr><name pos:line="10" pos:column="37">old_mode<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">S_ISDIR<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">old_mode<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="31"/></condition><then pos:line="11" pos:column="31"> <block pos:line="11" pos:column="32">{
		<comment type="block" pos:line="12" pos:column="17">/* Copy read bits to execute bits */</comment>
		<expr_stmt><expr><name pos:line="13" pos:column="17">new_mode<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">|=<pos:position pos:line="13" pos:column="28"/></operator> <operator pos:line="13" pos:column="29">(<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">new_mode<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">&amp;<pos:position pos:line="13" pos:column="44"/></operator> <literal type="number" pos:line="13" pos:column="41">0444<pos:position pos:line="13" pos:column="45"/></literal><operator pos:line="13" pos:column="45">)<pos:position pos:line="13" pos:column="46"/></operator> <operator pos:line="13" pos:column="47">&gt;&gt;<pos:position pos:line="13" pos:column="52"/></operator> <literal type="number" pos:line="13" pos:column="50">2<pos:position pos:line="13" pos:column="51"/></literal></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name pos:line="14" pos:column="17">new_mode<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">|=<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="29">FORCE_DIR_SET_GID<pos:position pos:line="14" pos:column="46"/></name></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><operator pos:line="17" pos:column="14">(<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">old_mode<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">^<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="26">new_mode<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">)<pos:position pos:line="17" pos:column="35"/></operator> <operator pos:line="17" pos:column="36">&amp;<pos:position pos:line="17" pos:column="41"/></operator> <operator pos:line="17" pos:column="38">~<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="39">S_IFMT<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">)<pos:position pos:line="17" pos:column="46"/></operator> <operator pos:line="17" pos:column="47">&amp;&amp;<pos:position pos:line="17" pos:column="57"/></operator>
			<call><name pos:line="18" pos:column="25">chmod<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">path<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="37">(<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="38">new_mode<pos:position pos:line="18" pos:column="46"/></name> <operator pos:line="18" pos:column="47">&amp;<pos:position pos:line="18" pos:column="52"/></operator> <operator pos:line="18" pos:column="49">~<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="50">S_IFMT<pos:position pos:line="18" pos:column="56"/></name><operator pos:line="18" pos:column="56">)<pos:position pos:line="18" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call> <operator pos:line="18" pos:column="59">&lt;<pos:position pos:line="18" pos:column="63"/></operator> <literal type="number" pos:line="18" pos:column="61">0<pos:position pos:line="18" pos:column="62"/></literal></expr>)<pos:position pos:line="18" pos:column="63"/></condition><then pos:line="18" pos:column="63">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">-<pos:position pos:line="19" pos:column="25"/></operator><literal type="number" pos:line="19" pos:column="25">2<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></return></block></then></if>
	<return pos:line="20" pos:column="9">return <expr><literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

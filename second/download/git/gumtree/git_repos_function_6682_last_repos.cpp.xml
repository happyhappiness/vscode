<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6682_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">_obstack_memory_used<pos:position pos:line="2" pos:column="21"/></name> <parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name><name pos:line="2" pos:column="23">struct<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">obstack<pos:position pos:line="2" pos:column="37"/></name></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">h<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">register<pos:position pos:line="4" pos:column="11"/></specifier> <name><name pos:line="4" pos:column="12">struct<pos:position pos:line="4" pos:column="18"/></name> <name pos:line="4" pos:column="19">_obstack_chunk<pos:position pos:line="4" pos:column="33"/></name></name><modifier pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></modifier></type> <name pos:line="4" pos:column="35">lp<pos:position pos:line="4" pos:column="37"/></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">register<pos:position pos:line="5" pos:column="11"/></specifier> <name pos:line="5" pos:column="12">int<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">nbytes<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><literal type="number" pos:line="5" pos:column="25">0<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>

  <for pos:line="7" pos:column="3">for <control pos:line="7" pos:column="7">(<init><expr><name pos:line="7" pos:column="8">lp<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <name><name pos:line="7" pos:column="13">h<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">chunk<pos:position pos:line="7" pos:column="21"/></name></name></expr>;<pos:position pos:line="7" pos:column="22"/></init> <condition><expr><name pos:line="7" pos:column="23">lp<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">!=<pos:position pos:line="7" pos:column="28"/></operator> <name pos:line="7" pos:column="29">NULL<pos:position pos:line="7" pos:column="33"/></name></expr>;<pos:position pos:line="7" pos:column="34"/></condition> <incr><expr><name pos:line="7" pos:column="35">lp<pos:position pos:line="7" pos:column="37"/></name> <operator pos:line="7" pos:column="38">=<pos:position pos:line="7" pos:column="39"/></operator> <name><name pos:line="7" pos:column="40">lp<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">-&gt;<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="44">prev<pos:position pos:line="7" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="7" pos:column="49"/></control>
    <block pos:line="8" pos:column="5">{
      <expr_stmt><expr><name pos:line="9" pos:column="7">nbytes<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">+=<pos:position pos:line="9" pos:column="16"/></operator> <name><name pos:line="9" pos:column="17">lp<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">limit<pos:position pos:line="9" pos:column="26"/></name></name> <operator pos:line="9" pos:column="27">-<pos:position pos:line="9" pos:column="28"/></operator> <operator pos:line="9" pos:column="29">(<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">char<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">*<pos:position pos:line="9" pos:column="36"/></operator><operator pos:line="9" pos:column="36">)<pos:position pos:line="9" pos:column="37"/></operator> <name pos:line="9" pos:column="38">lp<pos:position pos:line="9" pos:column="40"/></name></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></for>
  <return pos:line="11" pos:column="3">return <expr><name pos:line="11" pos:column="10">nbytes<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5094_git-2.5.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">ref<pos:position pos:line="1" pos:column="18"/></name></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">wanted_peer_refs<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">ref<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">refs<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">refspec<pos:position pos:line="2" pos:column="31"/></name></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">refspec<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ref<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">head<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name pos:line="4" pos:column="28">copy_ref<pos:position pos:line="4" pos:column="36"/></name><argument_list pos:line="4" pos:column="36">(<argument><expr><call><name pos:line="4" pos:column="37">find_ref_by_name<pos:position pos:line="4" pos:column="53"/></name><argument_list pos:line="4" pos:column="53">(<argument><expr><name pos:line="4" pos:column="54">refs<pos:position pos:line="4" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="60">"HEAD"<pos:position pos:line="4" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="69"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ref<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">local_refs<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><name pos:line="5" pos:column="34">head<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">ref<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier><modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">tail<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><ternary><condition><expr><name pos:line="6" pos:column="29">head<pos:position pos:line="6" pos:column="33"/></name></expr> ?<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35"> <expr><operator pos:line="6" pos:column="36">&amp;<pos:position pos:line="6" pos:column="41"/></operator><name><name pos:line="6" pos:column="37">head<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">-&gt;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="43">next<pos:position pos:line="6" pos:column="47"/></name></name></expr> <pos:position pos:line="6" pos:column="48"/></then><else pos:line="6" pos:column="48">: <expr><operator pos:line="6" pos:column="50">&amp;<pos:position pos:line="6" pos:column="55"/></operator><name pos:line="6" pos:column="51">local_refs<pos:position pos:line="6" pos:column="61"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="62"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">option_single_branch<pos:position pos:line="8" pos:column="33"/></name></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34"> <block pos:line="8" pos:column="35">{
		<decl_stmt><decl><type><name><name pos:line="9" pos:column="17">struct<pos:position pos:line="9" pos:column="23"/></name> <name pos:line="9" pos:column="24">ref<pos:position pos:line="9" pos:column="27"/></name></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">remote_head<pos:position pos:line="9" pos:column="40"/></name> <init pos:line="9" pos:column="41">= <expr><name pos:line="9" pos:column="43">NULL<pos:position pos:line="9" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="48"/></decl_stmt>

		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">option_branch<pos:position pos:line="11" pos:column="35"/></name></expr>)<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">remote_head<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">=<pos:position pos:line="12" pos:column="38"/></operator> <call><name pos:line="12" pos:column="39">guess_remote_head<pos:position pos:line="12" pos:column="56"/></name><argument_list pos:line="12" pos:column="56">(<argument><expr><name pos:line="12" pos:column="57">head<pos:position pos:line="12" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="63">refs<pos:position pos:line="12" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="69">0<pos:position pos:line="12" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="72"/></expr_stmt></block></then>
		<else pos:line="13" pos:column="17">else <block pos:line="13" pos:column="22">{
			<expr_stmt><expr><name pos:line="14" pos:column="25">local_refs<pos:position pos:line="14" pos:column="35"/></name> <operator pos:line="14" pos:column="36">=<pos:position pos:line="14" pos:column="37"/></operator> <name pos:line="14" pos:column="38">NULL<pos:position pos:line="14" pos:column="42"/></name></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="15" pos:column="25">tail<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">=<pos:position pos:line="15" pos:column="31"/></operator> <operator pos:line="15" pos:column="32">&amp;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="33">local_refs<pos:position pos:line="15" pos:column="43"/></name></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="16" pos:column="25">remote_head<pos:position pos:line="16" pos:column="36"/></name> <operator pos:line="16" pos:column="37">=<pos:position pos:line="16" pos:column="38"/></operator> <call><name pos:line="16" pos:column="39">copy_ref<pos:position pos:line="16" pos:column="47"/></name><argument_list pos:line="16" pos:column="47">(<argument><expr><call><name pos:line="16" pos:column="48">find_remote_branch<pos:position pos:line="16" pos:column="66"/></name><argument_list pos:line="16" pos:column="66">(<argument><expr><name pos:line="16" pos:column="67">refs<pos:position pos:line="16" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="73">option_branch<pos:position pos:line="16" pos:column="86"/></name></expr></argument>)<pos:position pos:line="16" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="89"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></else></if>

		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">remote_head<pos:position pos:line="19" pos:column="33"/></name> <operator pos:line="19" pos:column="34">&amp;&amp;<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="37">option_branch<pos:position pos:line="19" pos:column="50"/></name></expr>)<pos:position pos:line="19" pos:column="51"/></condition><then pos:line="19" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="25">warning<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><call><name pos:line="20" pos:column="33">_<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><literal type="string" pos:line="20" pos:column="35">"Could not find remote branch %s to clone."<pos:position pos:line="20" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="79"/></argument_list></call></expr></argument>,
				<argument><expr><name pos:line="21" pos:column="33">option_branch<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt></block></then>
		<else pos:line="22" pos:column="17">else <block pos:line="22" pos:column="22">{
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">get_fetch_map<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><name pos:line="23" pos:column="39">remote_head<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="52">refspec<pos:position pos:line="23" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="61">&amp;<pos:position pos:line="23" pos:column="66"/></operator><name pos:line="23" pos:column="62">tail<pos:position pos:line="23" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="68">0<pos:position pos:line="23" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="71"/></expr_stmt>

			<comment type="block" pos:line="25" pos:column="25">/* if --branch=tag, pull the requested tag explicitly */</comment>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">get_fetch_map<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">(<argument><expr><name pos:line="26" pos:column="39">remote_head<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="52">tag_refspec<pos:position pos:line="26" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="65">&amp;<pos:position pos:line="26" pos:column="70"/></operator><name pos:line="26" pos:column="66">tail<pos:position pos:line="26" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="72">0<pos:position pos:line="26" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></else></if>
	}<pos:position pos:line="28" pos:column="10"/></block></then> <else pos:line="28" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">get_fetch_map<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">refs<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="37">refspec<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="46">&amp;<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="47">tail<pos:position pos:line="29" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="53">0<pos:position pos:line="29" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt></block></else></if>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">option_mirror<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">&amp;&amp;<pos:position pos:line="31" pos:column="38"/></operator> <operator pos:line="31" pos:column="31">!<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="32">option_single_branch<pos:position pos:line="31" pos:column="52"/></name></expr>)<pos:position pos:line="31" pos:column="53"/></condition><then pos:line="31" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">get_fetch_map<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">refs<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="37">tag_refspec<pos:position pos:line="32" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="50">&amp;<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="51">tail<pos:position pos:line="32" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="57">0<pos:position pos:line="32" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="60"/></expr_stmt></block></then></if>

	<return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">local_refs<pos:position pos:line="34" pos:column="26"/></name></expr>;<pos:position pos:line="34" pos:column="27"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

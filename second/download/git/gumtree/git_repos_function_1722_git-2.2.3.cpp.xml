<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1722_git-2.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">setup_discovered_git_dir<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">gitdir<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
					    <parameter><decl><type><name><name pos:line="2" pos:column="45">struct<pos:position pos:line="2" pos:column="51"/></name> <name pos:line="2" pos:column="52">strbuf<pos:position pos:line="2" pos:column="58"/></name></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">cwd<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="65">int<pos:position pos:line="2" pos:column="68"/></name></type> <name pos:line="2" pos:column="69">offset<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
					    <parameter><decl><type><name pos:line="3" pos:column="45">int<pos:position pos:line="3" pos:column="48"/></name> <modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier></type><name pos:line="3" pos:column="50">nongit_ok<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="60"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">check_repository_format_gently<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">(<argument><expr><name pos:line="5" pos:column="44">gitdir<pos:position pos:line="5" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="52">nongit_ok<pos:position pos:line="5" pos:column="61"/></name></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="63"/></condition><then pos:line="5" pos:column="63">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr>;<pos:position pos:line="6" pos:column="29"/></return></block></then></if>

	<comment type="block" pos:line="8" pos:column="9">/* --work-tree is set without --git-dir; use discovered one */</comment>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">getenv<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">GIT_WORK_TREE_ENVIRONMENT<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call> <operator pos:line="9" pos:column="47">||<pos:position pos:line="9" pos:column="49"/></operator> <name pos:line="9" pos:column="50">git_work_tree_cfg<pos:position pos:line="9" pos:column="67"/></name></expr>)<pos:position pos:line="9" pos:column="68"/></condition><then pos:line="9" pos:column="68"> <block pos:line="9" pos:column="69">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">offset<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">!=<pos:position pos:line="10" pos:column="30"/></operator> <name><name pos:line="10" pos:column="31">cwd<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">len<pos:position pos:line="10" pos:column="39"/></name></name> <operator pos:line="10" pos:column="40">&amp;&amp;<pos:position pos:line="10" pos:column="50"/></operator> <operator pos:line="10" pos:column="43">!<pos:position pos:line="10" pos:column="44"/></operator><call><name pos:line="10" pos:column="44">is_absolute_path<pos:position pos:line="10" pos:column="60"/></name><argument_list pos:line="10" pos:column="60">(<argument><expr><name pos:line="10" pos:column="61">gitdir<pos:position pos:line="10" pos:column="67"/></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="69"/></condition><then pos:line="10" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">gitdir<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">=<pos:position pos:line="11" pos:column="33"/></operator> <call><name pos:line="11" pos:column="34">xstrdup<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><call><name pos:line="11" pos:column="42">real_path<pos:position pos:line="11" pos:column="51"/></name><argument_list pos:line="11" pos:column="51">(<argument><expr><name pos:line="11" pos:column="52">gitdir<pos:position pos:line="11" pos:column="58"/></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="61"/></expr_stmt></block></then></if>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><call><name pos:line="12" pos:column="21">chdir<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name><name pos:line="12" pos:column="27">cwd<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">buf<pos:position pos:line="12" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="25">die_errno<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><literal type="string" pos:line="13" pos:column="35">"Could not come back to cwd"<pos:position pos:line="13" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt></block></then></if>
		<return pos:line="14" pos:column="17">return <expr><call><name pos:line="14" pos:column="24">setup_explicit_git_dir<pos:position pos:line="14" pos:column="46"/></name><argument_list pos:line="14" pos:column="46">(<argument><expr><name pos:line="14" pos:column="47">gitdir<pos:position pos:line="14" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="55">cwd<pos:position pos:line="14" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="60">nongit_ok<pos:position pos:line="14" pos:column="69"/></name></expr></argument>)<pos:position pos:line="14" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="71"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="17" pos:column="9">/* #16.2, #17.2, #20.2, #21.2, #24, #25, #28, #29 (see t1510) */</comment>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">is_bare_repository_cfg<pos:position pos:line="18" pos:column="35"/></name> <operator pos:line="18" pos:column="36">&gt;<pos:position pos:line="18" pos:column="40"/></operator> <literal type="number" pos:line="18" pos:column="38">0<pos:position pos:line="18" pos:column="39"/></literal></expr>)<pos:position pos:line="18" pos:column="40"/></condition><then pos:line="18" pos:column="40"> <block pos:line="18" pos:column="41">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">set_git_dir<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><ternary><condition><expr><name pos:line="19" pos:column="29">offset<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">==<pos:position pos:line="19" pos:column="38"/></operator> <name><name pos:line="19" pos:column="39">cwd<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">len<pos:position pos:line="19" pos:column="47"/></name></name></expr> ?<pos:position pos:line="19" pos:column="49"/></condition><then pos:line="19" pos:column="49"> <expr><name pos:line="19" pos:column="50">gitdir<pos:position pos:line="19" pos:column="56"/></name></expr> <pos:position pos:line="19" pos:column="57"/></then><else pos:line="19" pos:column="57">: <expr><call><name pos:line="19" pos:column="59">real_path<pos:position pos:line="19" pos:column="68"/></name><argument_list pos:line="19" pos:column="68">(<argument><expr><name pos:line="19" pos:column="69">gitdir<pos:position pos:line="19" pos:column="75"/></name></expr></argument>)<pos:position pos:line="19" pos:column="76"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="19" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="78"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">chdir<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name><name pos:line="20" pos:column="27">cwd<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">buf<pos:position pos:line="20" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="37"/></condition><then pos:line="20" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">die_errno<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><literal type="string" pos:line="21" pos:column="35">"Could not come back to cwd"<pos:position pos:line="21" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt></block></then></if>
		<return pos:line="22" pos:column="17">return <expr><name pos:line="22" pos:column="24">NULL<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="25" pos:column="9">/* #0, #1, #5, #8, #9, #12, #13 */</comment>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">set_git_work_tree<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><literal type="string" pos:line="26" pos:column="27">"."<pos:position pos:line="26" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">strcmp<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><name pos:line="27" pos:column="20">gitdir<pos:position pos:line="27" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="28">DEFAULT_GIT_DIR_ENVIRONMENT<pos:position pos:line="27" pos:column="55"/></name></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="57"/></condition><then pos:line="27" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">set_git_dir<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">gitdir<pos:position pos:line="28" pos:column="35"/></name></expr></argument>)<pos:position pos:line="28" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="29" pos:column="9">inside_git_dir<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <literal type="number" pos:line="29" pos:column="26">0<pos:position pos:line="29" pos:column="27"/></literal></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">inside_work_tree<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">=<pos:position pos:line="30" pos:column="27"/></operator> <literal type="number" pos:line="30" pos:column="28">1<pos:position pos:line="30" pos:column="29"/></literal></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">offset<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">==<pos:position pos:line="31" pos:column="22"/></operator> <name><name pos:line="31" pos:column="23">cwd<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">-&gt;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="28">len<pos:position pos:line="31" pos:column="31"/></name></name></expr>)<pos:position pos:line="31" pos:column="32"/></condition><then pos:line="31" pos:column="32">
		<block type="pseudo"><return pos:line="32" pos:column="17">return <expr><name pos:line="32" pos:column="24">NULL<pos:position pos:line="32" pos:column="28"/></name></expr>;<pos:position pos:line="32" pos:column="29"/></return></block></then></if>

	<comment type="block" pos:line="34" pos:column="9">/* Make "offset" point to past the '/', and add a '/' at the end */</comment>
	<expr_stmt><expr><name pos:line="35" pos:column="9">offset<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">++<pos:position pos:line="35" pos:column="17"/></operator></expr>;<pos:position pos:line="35" pos:column="18"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="36" pos:column="9">strbuf_addch<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">cwd<pos:position pos:line="36" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="36" pos:column="27">'/'<pos:position pos:line="36" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
	<return pos:line="37" pos:column="9">return <expr><name><name pos:line="37" pos:column="16">cwd<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">-&gt;<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="21">buf<pos:position pos:line="37" pos:column="24"/></name></name> <operator pos:line="37" pos:column="25">+<pos:position pos:line="37" pos:column="26"/></operator> <name pos:line="37" pos:column="27">offset<pos:position pos:line="37" pos:column="33"/></name></expr>;<pos:position pos:line="37" pos:column="34"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

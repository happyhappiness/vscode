<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1416_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_patch<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">apply_state<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">state<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">patch<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">patch<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">stat<pos:position pos:line="3" pos:column="20"/></name></name></type> <name pos:line="3" pos:column="21">st<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">old_name<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name><name pos:line="4" pos:column="32">patch<pos:position pos:line="4" pos:column="37"/></name><operator pos:line="4" pos:column="37">-&gt;<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="39">old_name<pos:position pos:line="4" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">new_name<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name><name pos:line="5" pos:column="32">patch<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">-&gt;<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="39">new_name<pos:position pos:line="5" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">name<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><ternary><condition><expr><name pos:line="6" pos:column="28">old_name<pos:position pos:line="6" pos:column="36"/></name></expr> ?<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38"> <expr><name pos:line="6" pos:column="39">old_name<pos:position pos:line="6" pos:column="47"/></name></expr> <pos:position pos:line="6" pos:column="48"/></then><else pos:line="6" pos:column="48">: <expr><name pos:line="6" pos:column="50">new_name<pos:position pos:line="6" pos:column="58"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">cache_entry<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">ce<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><name pos:line="7" pos:column="34">NULL<pos:position pos:line="7" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">patch<pos:position pos:line="8" pos:column="21"/></name></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">tpatch<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">ok_if_exists<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">status<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="12" pos:column="9">patch<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">rejected<pos:position pos:line="12" pos:column="24"/></name></name> <operator pos:line="12" pos:column="25">=<pos:position pos:line="12" pos:column="26"/></operator> <literal type="number" pos:line="12" pos:column="27">1<pos:position pos:line="12" pos:column="28"/></literal></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt> <comment type="block" pos:line="12" pos:column="30">/* we will drop this after we succeed */</comment>

	<expr_stmt><expr><name pos:line="14" pos:column="9">status<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">check_preimage<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">state<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">patch<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="47">&amp;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="48">ce<pos:position pos:line="14" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="52">&amp;<pos:position pos:line="14" pos:column="57"/></operator><name pos:line="14" pos:column="53">st<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">status<pos:position pos:line="15" pos:column="19"/></name></expr>)<pos:position pos:line="15" pos:column="20"/></condition><then pos:line="15" pos:column="20">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><name pos:line="16" pos:column="24">status<pos:position pos:line="16" pos:column="30"/></name></expr>;<pos:position pos:line="16" pos:column="31"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">old_name<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name><name pos:line="17" pos:column="20">patch<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">old_name<pos:position pos:line="17" pos:column="35"/></name></name></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>

	<comment type="block" pos:line="19" pos:column="9">/*
	 * A type-change diff is always split into a patch to delete
	 * old, immediately followed by a patch to create new (see
	 * diff.c::run_diff()); in such a case it is Ok that the entry
	 * to be deleted by the previous patch is still in the working
	 * tree and in the index.
	 *
	 * A patch to swap-rename between A and B would first rename A
	 * to B and then rename B to A.  While applying the first one,
	 * the presence of B should not stop A from getting renamed to
	 * B; ask to_be_deleted() about the later rename.  Removal of
	 * B and rename from A to B is handled the same way by asking
	 * was_deleted().
	 */</comment>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">(<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">tpatch<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <call><name pos:line="33" pos:column="23">in_fn_table<pos:position pos:line="33" pos:column="34"/></name><argument_list pos:line="33" pos:column="34">(<argument><expr><name pos:line="33" pos:column="35">state<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="42">new_name<pos:position pos:line="33" pos:column="50"/></name></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call><operator pos:line="33" pos:column="51">)<pos:position pos:line="33" pos:column="52"/></operator> <operator pos:line="33" pos:column="53">&amp;&amp;<pos:position pos:line="33" pos:column="63"/></operator>
	    <operator pos:line="34" pos:column="13">(<pos:position pos:line="34" pos:column="14"/></operator><call><name pos:line="34" pos:column="14">was_deleted<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">tpatch<pos:position pos:line="34" pos:column="32"/></name></expr></argument>)<pos:position pos:line="34" pos:column="33"/></argument_list></call> <operator pos:line="34" pos:column="34">||<pos:position pos:line="34" pos:column="36"/></operator> <call><name pos:line="34" pos:column="37">to_be_deleted<pos:position pos:line="34" pos:column="50"/></name><argument_list pos:line="34" pos:column="50">(<argument><expr><name pos:line="34" pos:column="51">tpatch<pos:position pos:line="34" pos:column="57"/></name></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call><operator pos:line="34" pos:column="58">)<pos:position pos:line="34" pos:column="59"/></operator></expr>)<pos:position pos:line="34" pos:column="60"/></condition><then pos:line="34" pos:column="60">
		<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="17">ok_if_exists<pos:position pos:line="35" pos:column="29"/></name> <operator pos:line="35" pos:column="30">=<pos:position pos:line="35" pos:column="31"/></operator> <literal type="number" pos:line="35" pos:column="32">1<pos:position pos:line="35" pos:column="33"/></literal></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt></block></then>
	<else pos:line="36" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="17">ok_if_exists<pos:position pos:line="37" pos:column="29"/></name> <operator pos:line="37" pos:column="30">=<pos:position pos:line="37" pos:column="31"/></operator> <literal type="number" pos:line="37" pos:column="32">0<pos:position pos:line="37" pos:column="33"/></literal></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt></block></else></if>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">new_name<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">&amp;&amp;<pos:position pos:line="39" pos:column="32"/></operator>
	    <operator pos:line="40" pos:column="13">(<pos:position pos:line="40" pos:column="14"/></operator><operator pos:line="40" pos:column="14">(<pos:position pos:line="40" pos:column="15"/></operator><literal type="number" pos:line="40" pos:column="15">0<pos:position pos:line="40" pos:column="16"/></literal> <operator pos:line="40" pos:column="17">&lt;<pos:position pos:line="40" pos:column="21"/></operator> <name><name pos:line="40" pos:column="19">patch<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">is_new<pos:position pos:line="40" pos:column="32"/></name></name><operator pos:line="40" pos:column="32">)<pos:position pos:line="40" pos:column="33"/></operator> <operator pos:line="40" pos:column="34">||<pos:position pos:line="40" pos:column="36"/></operator> <name><name pos:line="40" pos:column="37">patch<pos:position pos:line="40" pos:column="42"/></name><operator pos:line="40" pos:column="42">-&gt;<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="44">is_rename<pos:position pos:line="40" pos:column="53"/></name></name> <operator pos:line="40" pos:column="54">||<pos:position pos:line="40" pos:column="56"/></operator> <name><name pos:line="40" pos:column="57">patch<pos:position pos:line="40" pos:column="62"/></name><operator pos:line="40" pos:column="62">-&gt;<pos:position pos:line="40" pos:column="67"/></operator><name pos:line="40" pos:column="64">is_copy<pos:position pos:line="40" pos:column="71"/></name></name><operator pos:line="40" pos:column="71">)<pos:position pos:line="40" pos:column="72"/></operator></expr>)<pos:position pos:line="40" pos:column="73"/></condition><then pos:line="40" pos:column="73"> <block pos:line="40" pos:column="74">{
		<decl_stmt><decl><type><name pos:line="41" pos:column="17">int<pos:position pos:line="41" pos:column="20"/></name></type> <name pos:line="41" pos:column="21">err<pos:position pos:line="41" pos:column="24"/></name> <init pos:line="41" pos:column="25">= <expr><call><name pos:line="41" pos:column="27">check_to_create<pos:position pos:line="41" pos:column="42"/></name><argument_list pos:line="41" pos:column="42">(<argument><expr><name pos:line="41" pos:column="43">state<pos:position pos:line="41" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">new_name<pos:position pos:line="41" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="60">ok_if_exists<pos:position pos:line="41" pos:column="72"/></name></expr></argument>)<pos:position pos:line="41" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="74"/></decl_stmt>

		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">err<pos:position pos:line="43" pos:column="24"/></name> <operator pos:line="43" pos:column="25">&amp;&amp;<pos:position pos:line="43" pos:column="35"/></operator> <name><name pos:line="43" pos:column="28">state<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">-&gt;<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="35">threeway<pos:position pos:line="43" pos:column="43"/></name></name></expr>)<pos:position pos:line="43" pos:column="44"/></condition><then pos:line="43" pos:column="44"> <block pos:line="43" pos:column="45">{
			<expr_stmt><expr><name><name pos:line="44" pos:column="25">patch<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">-&gt;<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="32">direct_to_threeway<pos:position pos:line="44" pos:column="50"/></name></name> <operator pos:line="44" pos:column="51">=<pos:position pos:line="44" pos:column="52"/></operator> <literal type="number" pos:line="44" pos:column="53">1<pos:position pos:line="44" pos:column="54"/></literal></expr>;<pos:position pos:line="44" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="45" pos:column="18"/></block></then> <else pos:line="45" pos:column="19">else <block type="pseudo"><switch pos:line="45" pos:column="24">switch <condition pos:line="45" pos:column="31">(<expr><name pos:line="45" pos:column="32">err<pos:position pos:line="45" pos:column="35"/></name></expr>)<pos:position pos:line="45" pos:column="36"/></condition> <block pos:line="45" pos:column="37">{
		<case pos:line="46" pos:column="17">case <expr><literal type="number" pos:line="46" pos:column="22">0<pos:position pos:line="46" pos:column="23"/></literal></expr>:<pos:position pos:line="46" pos:column="24"/></case>
			<break pos:line="47" pos:column="25">break;<pos:position pos:line="47" pos:column="31"/></break> <comment type="block" pos:line="47" pos:column="32">/* happy */</comment>
		<case pos:line="48" pos:column="17">case <expr><name pos:line="48" pos:column="22">EXISTS_IN_INDEX<pos:position pos:line="48" pos:column="37"/></name></expr>:<pos:position pos:line="48" pos:column="38"/></case>
			<return pos:line="49" pos:column="25">return <expr><call><name pos:line="49" pos:column="32">error<pos:position pos:line="49" pos:column="37"/></name><argument_list pos:line="49" pos:column="37">(<argument><expr><call><name pos:line="49" pos:column="38">_<pos:position pos:line="49" pos:column="39"/></name><argument_list pos:line="49" pos:column="39">(<argument><expr><literal type="string" pos:line="49" pos:column="40">"%s: already exists in index"<pos:position pos:line="49" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="49" pos:column="72">new_name<pos:position pos:line="49" pos:column="80"/></name></expr></argument>)<pos:position pos:line="49" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="82"/></return>
			<break pos:line="50" pos:column="25">break;<pos:position pos:line="50" pos:column="31"/></break>
		<case pos:line="51" pos:column="17">case <expr><name pos:line="51" pos:column="22">EXISTS_IN_WORKTREE<pos:position pos:line="51" pos:column="40"/></name></expr>:<pos:position pos:line="51" pos:column="41"/></case>
			<return pos:line="52" pos:column="25">return <expr><call><name pos:line="52" pos:column="32">error<pos:position pos:line="52" pos:column="37"/></name><argument_list pos:line="52" pos:column="37">(<argument><expr><call><name pos:line="52" pos:column="38">_<pos:position pos:line="52" pos:column="39"/></name><argument_list pos:line="52" pos:column="39">(<argument><expr><literal type="string" pos:line="52" pos:column="40">"%s: already exists in working directory"<pos:position pos:line="52" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="82"/></argument_list></call></expr></argument>,
				     <argument><expr><name pos:line="53" pos:column="38">new_name<pos:position pos:line="53" pos:column="46"/></name></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="48"/></return>
		<default pos:line="54" pos:column="17">default:<pos:position pos:line="54" pos:column="25"/></default>
			<return pos:line="55" pos:column="25">return <expr><name pos:line="55" pos:column="32">err<pos:position pos:line="55" pos:column="35"/></name></expr>;<pos:position pos:line="55" pos:column="36"/></return>
		}<pos:position pos:line="56" pos:column="18"/></block></switch></block></else></if>

		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><operator pos:line="58" pos:column="21">!<pos:position pos:line="58" pos:column="22"/></operator><name><name pos:line="58" pos:column="22">patch<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">-&gt;<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="29">new_mode<pos:position pos:line="58" pos:column="37"/></name></name></expr>)<pos:position pos:line="58" pos:column="38"/></condition><then pos:line="58" pos:column="38"> <block pos:line="58" pos:column="39">{
			<if pos:line="59" pos:column="25">if <condition pos:line="59" pos:column="28">(<expr><literal type="number" pos:line="59" pos:column="29">0<pos:position pos:line="59" pos:column="30"/></literal> <operator pos:line="59" pos:column="31">&lt;<pos:position pos:line="59" pos:column="35"/></operator> <name><name pos:line="59" pos:column="33">patch<pos:position pos:line="59" pos:column="38"/></name><operator pos:line="59" pos:column="38">-&gt;<pos:position pos:line="59" pos:column="43"/></operator><name pos:line="59" pos:column="40">is_new<pos:position pos:line="59" pos:column="46"/></name></name></expr>)<pos:position pos:line="59" pos:column="47"/></condition><then pos:line="59" pos:column="47">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="60" pos:column="33">patch<pos:position pos:line="60" pos:column="38"/></name><operator pos:line="60" pos:column="38">-&gt;<pos:position pos:line="60" pos:column="43"/></operator><name pos:line="60" pos:column="40">new_mode<pos:position pos:line="60" pos:column="48"/></name></name> <operator pos:line="60" pos:column="49">=<pos:position pos:line="60" pos:column="50"/></operator> <name pos:line="60" pos:column="51">S_IFREG<pos:position pos:line="60" pos:column="58"/></name> <operator pos:line="60" pos:column="59">|<pos:position pos:line="60" pos:column="60"/></operator> <literal type="number" pos:line="60" pos:column="61">0644<pos:position pos:line="60" pos:column="65"/></literal></expr>;<pos:position pos:line="60" pos:column="66"/></expr_stmt></block></then>
			<else pos:line="61" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="62" pos:column="33">patch<pos:position pos:line="62" pos:column="38"/></name><operator pos:line="62" pos:column="38">-&gt;<pos:position pos:line="62" pos:column="43"/></operator><name pos:line="62" pos:column="40">new_mode<pos:position pos:line="62" pos:column="48"/></name></name> <operator pos:line="62" pos:column="49">=<pos:position pos:line="62" pos:column="50"/></operator> <name><name pos:line="62" pos:column="51">patch<pos:position pos:line="62" pos:column="56"/></name><operator pos:line="62" pos:column="56">-&gt;<pos:position pos:line="62" pos:column="61"/></operator><name pos:line="62" pos:column="58">old_mode<pos:position pos:line="62" pos:column="66"/></name></name></expr>;<pos:position pos:line="62" pos:column="67"/></expr_stmt></block></else></if>
		}<pos:position pos:line="63" pos:column="18"/></block></then></if>
	}<pos:position pos:line="64" pos:column="10"/></block></then></if>

	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name pos:line="66" pos:column="13">new_name<pos:position pos:line="66" pos:column="21"/></name> <operator pos:line="66" pos:column="22">&amp;&amp;<pos:position pos:line="66" pos:column="32"/></operator> <name pos:line="66" pos:column="25">old_name<pos:position pos:line="66" pos:column="33"/></name></expr>)<pos:position pos:line="66" pos:column="34"/></condition><then pos:line="66" pos:column="34"> <block pos:line="66" pos:column="35">{
		<decl_stmt><decl><type><name pos:line="67" pos:column="17">int<pos:position pos:line="67" pos:column="20"/></name></type> <name pos:line="67" pos:column="21">same<pos:position pos:line="67" pos:column="25"/></name> <init pos:line="67" pos:column="26">= <expr><operator pos:line="67" pos:column="28">!<pos:position pos:line="67" pos:column="29"/></operator><call><name pos:line="67" pos:column="29">strcmp<pos:position pos:line="67" pos:column="35"/></name><argument_list pos:line="67" pos:column="35">(<argument><expr><name pos:line="67" pos:column="36">old_name<pos:position pos:line="67" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="46">new_name<pos:position pos:line="67" pos:column="54"/></name></expr></argument>)<pos:position pos:line="67" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="67" pos:column="56"/></decl_stmt>
		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><operator pos:line="68" pos:column="21">!<pos:position pos:line="68" pos:column="22"/></operator><name><name pos:line="68" pos:column="22">patch<pos:position pos:line="68" pos:column="27"/></name><operator pos:line="68" pos:column="27">-&gt;<pos:position pos:line="68" pos:column="32"/></operator><name pos:line="68" pos:column="29">new_mode<pos:position pos:line="68" pos:column="37"/></name></name></expr>)<pos:position pos:line="68" pos:column="38"/></condition><then pos:line="68" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="69" pos:column="25">patch<pos:position pos:line="69" pos:column="30"/></name><operator pos:line="69" pos:column="30">-&gt;<pos:position pos:line="69" pos:column="35"/></operator><name pos:line="69" pos:column="32">new_mode<pos:position pos:line="69" pos:column="40"/></name></name> <operator pos:line="69" pos:column="41">=<pos:position pos:line="69" pos:column="42"/></operator> <name><name pos:line="69" pos:column="43">patch<pos:position pos:line="69" pos:column="48"/></name><operator pos:line="69" pos:column="48">-&gt;<pos:position pos:line="69" pos:column="53"/></operator><name pos:line="69" pos:column="50">old_mode<pos:position pos:line="69" pos:column="58"/></name></name></expr>;<pos:position pos:line="69" pos:column="59"/></expr_stmt></block></then></if>
		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><operator pos:line="70" pos:column="21">(<pos:position pos:line="70" pos:column="22"/></operator><name><name pos:line="70" pos:column="22">patch<pos:position pos:line="70" pos:column="27"/></name><operator pos:line="70" pos:column="27">-&gt;<pos:position pos:line="70" pos:column="32"/></operator><name pos:line="70" pos:column="29">old_mode<pos:position pos:line="70" pos:column="37"/></name></name> <operator pos:line="70" pos:column="38">^<pos:position pos:line="70" pos:column="39"/></operator> <name><name pos:line="70" pos:column="40">patch<pos:position pos:line="70" pos:column="45"/></name><operator pos:line="70" pos:column="45">-&gt;<pos:position pos:line="70" pos:column="50"/></operator><name pos:line="70" pos:column="47">new_mode<pos:position pos:line="70" pos:column="55"/></name></name><operator pos:line="70" pos:column="55">)<pos:position pos:line="70" pos:column="56"/></operator> <operator pos:line="70" pos:column="57">&amp;<pos:position pos:line="70" pos:column="62"/></operator> <name pos:line="70" pos:column="59">S_IFMT<pos:position pos:line="70" pos:column="65"/></name></expr>)<pos:position pos:line="70" pos:column="66"/></condition><then pos:line="70" pos:column="66"> <block pos:line="70" pos:column="67">{
			<if pos:line="71" pos:column="25">if <condition pos:line="71" pos:column="28">(<expr><name pos:line="71" pos:column="29">same<pos:position pos:line="71" pos:column="33"/></name></expr>)<pos:position pos:line="71" pos:column="34"/></condition><then pos:line="71" pos:column="34">
				<block type="pseudo"><return pos:line="72" pos:column="33">return <expr><call><name pos:line="72" pos:column="40">error<pos:position pos:line="72" pos:column="45"/></name><argument_list pos:line="72" pos:column="45">(<argument><expr><call><name pos:line="72" pos:column="46">_<pos:position pos:line="72" pos:column="47"/></name><argument_list pos:line="72" pos:column="47">(<argument><expr><literal type="string" pos:line="72" pos:column="48">"new mode (%o) of %s does not "<pos:position pos:line="72" pos:column="79"/></literal>
					       <literal type="string" pos:line="73" pos:column="48">"match old mode (%o)"<pos:position pos:line="73" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="70"/></argument_list></call></expr></argument>,
					<argument><expr><name><name pos:line="74" pos:column="41">patch<pos:position pos:line="74" pos:column="46"/></name><operator pos:line="74" pos:column="46">-&gt;<pos:position pos:line="74" pos:column="51"/></operator><name pos:line="74" pos:column="48">new_mode<pos:position pos:line="74" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="58">new_name<pos:position pos:line="74" pos:column="66"/></name></expr></argument>,
					<argument><expr><name><name pos:line="75" pos:column="41">patch<pos:position pos:line="75" pos:column="46"/></name><operator pos:line="75" pos:column="46">-&gt;<pos:position pos:line="75" pos:column="51"/></operator><name pos:line="75" pos:column="48">old_mode<pos:position pos:line="75" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="58"/></return></block></then>
			<else pos:line="76" pos:column="25">else
				<block type="pseudo"><return pos:line="77" pos:column="33">return <expr><call><name pos:line="77" pos:column="40">error<pos:position pos:line="77" pos:column="45"/></name><argument_list pos:line="77" pos:column="45">(<argument><expr><call><name pos:line="77" pos:column="46">_<pos:position pos:line="77" pos:column="47"/></name><argument_list pos:line="77" pos:column="47">(<argument><expr><literal type="string" pos:line="77" pos:column="48">"new mode (%o) of %s does not "<pos:position pos:line="77" pos:column="79"/></literal>
					       <literal type="string" pos:line="78" pos:column="48">"match old mode (%o) of %s"<pos:position pos:line="78" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="76"/></argument_list></call></expr></argument>,
					<argument><expr><name><name pos:line="79" pos:column="41">patch<pos:position pos:line="79" pos:column="46"/></name><operator pos:line="79" pos:column="46">-&gt;<pos:position pos:line="79" pos:column="51"/></operator><name pos:line="79" pos:column="48">new_mode<pos:position pos:line="79" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="58">new_name<pos:position pos:line="79" pos:column="66"/></name></expr></argument>,
					<argument><expr><name><name pos:line="80" pos:column="41">patch<pos:position pos:line="80" pos:column="46"/></name><operator pos:line="80" pos:column="46">-&gt;<pos:position pos:line="80" pos:column="51"/></operator><name pos:line="80" pos:column="48">old_mode<pos:position pos:line="80" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="58">old_name<pos:position pos:line="80" pos:column="66"/></name></expr></argument>)<pos:position pos:line="80" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="68"/></return></block></else></if>
		}<pos:position pos:line="81" pos:column="18"/></block></then></if>
	}<pos:position pos:line="82" pos:column="10"/></block></then></if>

	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><operator pos:line="84" pos:column="13">!<pos:position pos:line="84" pos:column="14"/></operator><name><name pos:line="84" pos:column="14">state<pos:position pos:line="84" pos:column="19"/></name><operator pos:line="84" pos:column="19">-&gt;<pos:position pos:line="84" pos:column="24"/></operator><name pos:line="84" pos:column="21">unsafe_paths<pos:position pos:line="84" pos:column="33"/></name></name> <operator pos:line="84" pos:column="34">&amp;&amp;<pos:position pos:line="84" pos:column="44"/></operator> <call><name pos:line="84" pos:column="37">check_unsafe_path<pos:position pos:line="84" pos:column="54"/></name><argument_list pos:line="84" pos:column="54">(<argument><expr><name pos:line="84" pos:column="55">patch<pos:position pos:line="84" pos:column="60"/></name></expr></argument>)<pos:position pos:line="84" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="62"/></condition><then pos:line="84" pos:column="62">
		<block type="pseudo"><return pos:line="85" pos:column="17">return <expr><operator pos:line="85" pos:column="24">-<pos:position pos:line="85" pos:column="25"/></operator><literal type="number" pos:line="85" pos:column="25">128<pos:position pos:line="85" pos:column="28"/></literal></expr>;<pos:position pos:line="85" pos:column="29"/></return></block></then></if>

	<comment type="block" pos:line="87" pos:column="9">/*
	 * An attempt to read from or delete a path that is beyond a
	 * symbolic link will be prevented by load_patch_target() that
	 * is called at the beginning of apply_data() so we do not
	 * have to worry about a patch marked with "is_delete" bit
	 * here.  We however need to make sure that the patch result
	 * is not deposited to a path that is beyond a symbolic link
	 * here.
	 */</comment>
	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><operator pos:line="96" pos:column="13">!<pos:position pos:line="96" pos:column="14"/></operator><name><name pos:line="96" pos:column="14">patch<pos:position pos:line="96" pos:column="19"/></name><operator pos:line="96" pos:column="19">-&gt;<pos:position pos:line="96" pos:column="24"/></operator><name pos:line="96" pos:column="21">is_delete<pos:position pos:line="96" pos:column="30"/></name></name> <operator pos:line="96" pos:column="31">&amp;&amp;<pos:position pos:line="96" pos:column="41"/></operator> <call><name pos:line="96" pos:column="34">path_is_beyond_symlink<pos:position pos:line="96" pos:column="56"/></name><argument_list pos:line="96" pos:column="56">(<argument><expr><name pos:line="96" pos:column="57">state<pos:position pos:line="96" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="64">patch<pos:position pos:line="96" pos:column="69"/></name><operator pos:line="96" pos:column="69">-&gt;<pos:position pos:line="96" pos:column="74"/></operator><name pos:line="96" pos:column="71">new_name<pos:position pos:line="96" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="81"/></condition><then pos:line="96" pos:column="81">
		<block type="pseudo"><return pos:line="97" pos:column="17">return <expr><call><name pos:line="97" pos:column="24">error<pos:position pos:line="97" pos:column="29"/></name><argument_list pos:line="97" pos:column="29">(<argument><expr><call><name pos:line="97" pos:column="30">_<pos:position pos:line="97" pos:column="31"/></name><argument_list pos:line="97" pos:column="31">(<argument><expr><literal type="string" pos:line="97" pos:column="32">"affected file '%s' is beyond a symbolic link"<pos:position pos:line="97" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="79"/></argument_list></call></expr></argument>,
			     <argument><expr><name><name pos:line="98" pos:column="30">patch<pos:position pos:line="98" pos:column="35"/></name><operator pos:line="98" pos:column="35">-&gt;<pos:position pos:line="98" pos:column="40"/></operator><name pos:line="98" pos:column="37">new_name<pos:position pos:line="98" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="47"/></return></block></then></if>

	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><call><name pos:line="100" pos:column="13">apply_data<pos:position pos:line="100" pos:column="23"/></name><argument_list pos:line="100" pos:column="23">(<argument><expr><name pos:line="100" pos:column="24">state<pos:position pos:line="100" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="31">patch<pos:position pos:line="100" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="38">&amp;<pos:position pos:line="100" pos:column="43"/></operator><name pos:line="100" pos:column="39">st<pos:position pos:line="100" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="43">ce<pos:position pos:line="100" pos:column="45"/></name></expr></argument>)<pos:position pos:line="100" pos:column="46"/></argument_list></call> <operator pos:line="100" pos:column="47">&lt;<pos:position pos:line="100" pos:column="51"/></operator> <literal type="number" pos:line="100" pos:column="49">0<pos:position pos:line="100" pos:column="50"/></literal></expr>)<pos:position pos:line="100" pos:column="51"/></condition><then pos:line="100" pos:column="51">
		<block type="pseudo"><return pos:line="101" pos:column="17">return <expr><call><name pos:line="101" pos:column="24">error<pos:position pos:line="101" pos:column="29"/></name><argument_list pos:line="101" pos:column="29">(<argument><expr><call><name pos:line="101" pos:column="30">_<pos:position pos:line="101" pos:column="31"/></name><argument_list pos:line="101" pos:column="31">(<argument><expr><literal type="string" pos:line="101" pos:column="32">"%s: patch does not apply"<pos:position pos:line="101" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="101" pos:column="61">name<pos:position pos:line="101" pos:column="65"/></name></expr></argument>)<pos:position pos:line="101" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="67"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="102" pos:column="9">patch<pos:position pos:line="102" pos:column="14"/></name><operator pos:line="102" pos:column="14">-&gt;<pos:position pos:line="102" pos:column="19"/></operator><name pos:line="102" pos:column="16">rejected<pos:position pos:line="102" pos:column="24"/></name></name> <operator pos:line="102" pos:column="25">=<pos:position pos:line="102" pos:column="26"/></operator> <literal type="number" pos:line="102" pos:column="27">0<pos:position pos:line="102" pos:column="28"/></literal></expr>;<pos:position pos:line="102" pos:column="29"/></expr_stmt>
	<return pos:line="103" pos:column="9">return <expr><literal type="number" pos:line="103" pos:column="16">0<pos:position pos:line="103" pos:column="17"/></literal></expr>;<pos:position pos:line="103" pos:column="18"/></return>
}<pos:position pos:line="104" pos:column="2"/></block></function></unit>
